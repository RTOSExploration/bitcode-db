; ModuleID = './build/cjson.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%struct.log_control_block_t = type { i8*, i32, i32, void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.uart_context_t = type { i8, %struct.hal_uart_config_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [6 x i8], i32, i32, i32, i32, i32, i32 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.QUEUE_REGISTRY_ITEM = type { i8*, i8* }
%struct.A_BLOCK_LINK = type { %struct.A_BLOCK_LINK*, i32 }
%struct.exception_config_t = type { i32, [6 x %struct.exception_config_type] }
%struct.exception_config_type = type { void ()*, void ()* }
%struct.TaskContextType = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.syslog_buffer_t = type { i32, [292 x i8] }
%struct.syslog_config_s = type { {}*, %struct.log_control_block_t** }
%struct.memory_region_type = type { i8*, i32*, i32*, i32 }
%struct.record = type { i8*, double, double, i8*, i8*, i8*, i8*, i8* }
%struct.__va_list = type { i8* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%struct.xTASK_STATUS = type { i8*, i8*, i32, i32, i32, i32, i32, i16 }
%struct.QueueDefinition = type { i8*, i8*, i8*, %struct.__va_list, %struct.xLIST, %struct.xLIST, i32, i32, i32, i32, i32, i32, i8 }
%struct.tmrTimerQueueMessage = type { i32, %union.anon }
%union.anon = type { %struct.tmrTimerParameters }
%struct.tmrTimerParameters = type { i32, %struct.tmrTimerControl* }
%struct.tmrTimerControl = type { i8*, %struct.xLIST_ITEM, i32, i32, i8*, void (i8*)*, i32 }
%struct.cJSON = type { %struct.cJSON*, %struct.cJSON*, %struct.cJSON*, i32, i8*, i32, double, i8* }
%struct.normal_log_message_t = type { i8*, i32, i8*, i32, i32, [257 x i8] }
%struct.hex_dump_message_t = type { i8*, i32, i8*, i32, i32, [129 x i8], i32, [128 x i8], i8* }
%struct.log_message_t = type { i32, %union.anon.18 }
%union.anon.18 = type { %struct.hex_dump_message_t }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !0
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !67
@.str = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !80
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !72
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !74
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !76
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !81
@.str.3 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.4 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !160
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !161
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !162
@.str.9 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.10 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !181
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !212
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !217
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !222
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !227
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !230
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !232
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !237
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !239
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !241
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !243
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !245
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !247
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !249
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !251
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !253
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !255
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !257
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !259
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !264
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !266
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !268
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !270
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !70
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.23, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.24, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !273
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !64
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.22 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.25 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.26 = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9.23 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21.24 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !278
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !288
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@.str.55 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.56 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !290
@.str.57 = private unnamed_addr constant [4 x i8] c"hal\00", align 1
@log_control_block_hal = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !340
@g_cache_status = dso_local global i8 0, align 1, !dbg !377
@.str.66 = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.67 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !460
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !465
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !468
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !513
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !605
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.81 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.82 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.85 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.86 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.87 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !644
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !700
@g_uart_send_lock_status = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !746
@g_uart_sleep_handler = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !743
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.56, i32 0, i32 0)], align 4, !dbg !327
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [2 x i32] [i32 0, i32 5], align 4, !dbg !335
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !749
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@DWT_NUMCOMP = internal unnamed_addr global i32 0, align 4, !dbg !760
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !810
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !830
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !832
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !834
@__const.gpio_mode_init.mode_temp = private unnamed_addr constant [10 x i32] [i32 -2004322441, i32 -2004318072, i32 -2004318072, i32 -2004596600, i32 -2005464952, i32 -2004318072, i32 -2004318072, i32 -2004457336, i32 -2004318072, i32 8], align 4
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !836
@.str.100 = private unnamed_addr constant [11 x i8] c"pxTaskCode\00", align 1
@.str.1.101 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/tasks.c\00", align 1
@.str.2.102 = private unnamed_addr constant [67 x i8] c"( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES )\00", align 1
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !953
@xSchedulerRunning = internal global i32 0, align 4, !dbg !956
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !959
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !961
@pxReadyTasksLists = internal global [20 x %struct.xLIST] zeroinitializer, align 4, !dbg !939
@xTasksWaitingTermination = internal global %struct.xLIST zeroinitializer, align 4, !dbg !949
@uxTasksDeleted = internal global i32 0, align 4, !dbg !963
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !965
@.str.4.103 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended == 0\00", align 1
@.str.5.104 = private unnamed_addr constant [19 x i8] c"pxPreviousWakeTime\00", align 1
@.str.6.105 = private unnamed_addr constant [24 x i8] c"( xTimeIncrement > 0U )\00", align 1
@xTickCount = internal global i32 0, align 4, !dbg !967
@.str.7.108 = private unnamed_addr constant [6 x i8] c"pxTCB\00", align 1
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !942
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !945
@xSuspendedTaskList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !951
@.str.8.109 = private unnamed_addr constant [41 x i8] c"( uxNewPriority < configMAX_PRIORITIES )\00", align 1
@.str.9.111 = private unnamed_addr constant [14 x i8] c"xTaskToResume\00", align 1
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !947
@.str.10.112 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.11.113 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.12.106 = private unnamed_addr constant [21 x i8] c"uxSchedulerSuspended\00", align 1
@xYieldPending = internal global i32 0, align 4, !dbg !970
@uxPendedTicks = internal global i32 0, align 4, !dbg !972
@.str.13.107 = private unnamed_addr constant [43 x i8] c"( listLIST_IS_EMPTY( pxDelayedTaskList ) )\00", align 1
@xNumOfOverflows = internal global i32 0, align 4, !dbg !974
@xNextTaskUnblockTime = internal global i32 -1, align 4, !dbg !976
@vTaskSwitchContext.ucExpectedStackBytes = internal constant [20 x i8] c"\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5", align 1, !dbg !924
@.str.14.110 = private unnamed_addr constant [71 x i8] c"listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0\00", align 1
@.str.15.114 = private unnamed_addr constant [12 x i8] c"pxEventList\00", align 1
@.str.16.115 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended != 0\00", align 1
@.str.17.116 = private unnamed_addr constant [15 x i8] c"pxUnblockedTCB\00", align 1
@.str.18.117 = private unnamed_addr constant [32 x i8] c"uxSchedulerSuspended != pdFALSE\00", align 1
@.str.19.118 = private unnamed_addr constant [10 x i8] c"pxTimeOut\00", align 1
@.str.20.119 = private unnamed_addr constant [14 x i8] c"pxTicksToWait\00", align 1
@.str.21.120 = private unnamed_addr constant [21 x i8] c"pxTCB->uxMutexesHeld\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"\09%c\09%u\09%u\09%u\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"xTaskToNotify\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"xTask\00", align 1
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !978
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !980
@switch.table.vTaskList = private unnamed_addr constant [4 x i32] [i32 82, i32 66, i32 83, i32 68], align 4
@.str.131 = private unnamed_addr constant [8 x i8] c"pxQueue\00", align 1
@.str.1.132 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/queue.c\00", align 1
@.str.2.133 = private unnamed_addr constant [34 x i8] c"uxQueueLength > ( UBaseType_t ) 0\00", align 1
@.str.3.134 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.4.135 = private unnamed_addr constant [11 x i8] c"pxNewQueue\00", align 1
@.str.5.139 = private unnamed_addr constant [8 x i8] c"pxMutex\00", align 1
@.str.6.141 = private unnamed_addr constant [16 x i8] c"uxMaxCount != 0\00", align 1
@.str.7.142 = private unnamed_addr constant [29 x i8] c"uxInitialCount <= uxMaxCount\00", align 1
@.str.8.143 = private unnamed_addr constant [8 x i8] c"xHandle\00", align 1
@.str.9.136 = private unnamed_addr constant [80 x i8] c"!( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.10.137 = private unnamed_addr constant [71 x i8] c"!( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) )\00", align 1
@.str.11.138 = private unnamed_addr constant [86 x i8] c"!( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) )\00", align 1
@.str.12.144 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize == 0\00", align 1
@.str.13.140 = private unnamed_addr constant [75 x i8] c"!( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.14.145 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize != 0\00", align 1
@.str.15.146 = private unnamed_addr constant [7 x i8] c"xQueue\00", align 1
@xQueueRegistry = dso_local local_unnamed_addr global [8 x %struct.QUEUE_REGISTRY_ITEM] zeroinitializer, align 4, !dbg !983
@xTimerQueue = internal unnamed_addr global i8* null, align 4, !dbg !1046
@.str.149 = private unnamed_addr constant [8 x i8] c"Tmr Svc\00", align 1
@.str.1.150 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.2.151 = private unnamed_addr constant [52 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/timers.c\00", align 1
@.str.3.156 = private unnamed_addr constant [28 x i8] c"( xTimerPeriodInTicks > 0 )\00", align 1
@pxCurrentTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1079
@prvSampleTimeNow.xLastTime = internal unnamed_addr global i32 0, align 4, !dbg !1095
@.str.4.152 = private unnamed_addr constant [8 x i8] c"xResult\00", align 1
@pxOverflowTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1105
@.str.5.153 = private unnamed_addr constant [37 x i8] c"( pxTimer->xTimerPeriodInTicks > 0 )\00", align 1
@xActiveTimerList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1107
@xActiveTimerList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1109
@.str.6.154 = private unnamed_addr constant [12 x i8] c"xTimerQueue\00", align 1
@.str.7.155 = private unnamed_addr constant [5 x i8] c"TmrQ\00", align 1
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !1111
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !1130
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !1132
@.str.165 = private unnamed_addr constant [28 x i8] c"uxCriticalNesting == 1000UL\00", align 1
@.str.1.160 = private unnamed_addr constant [72 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c\00", align 1
@.str.2.168 = private unnamed_addr constant [53 x i8] c"( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0\00", align 1
@.str.3.171 = private unnamed_addr constant [18 x i8] c"uxCriticalNesting\00", align 1
@.str.4.174 = private unnamed_addr constant [42 x i8] c"ucCurrentPriority >= ucMaxSysCallPriority\00", align 1
@.str.5.175 = private unnamed_addr constant [66 x i8] c"( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue\00", align 1
@.str.6.159 = private unnamed_addr constant [26 x i8] c"uxCriticalNesting == ~0UL\00", align 1
@pxEnd = internal unnamed_addr global %struct.A_BLOCK_LINK* null, align 4, !dbg !1134
@xBlockAllocatedBit = internal unnamed_addr global i1 false, align 4, !dbg !1163
@.str.1.179 = private unnamed_addr constant [69 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c\00", align 1
@xFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1154
@xStart = internal global %struct.A_BLOCK_LINK zeroinitializer, align 4, !dbg !1150
@.str.2.178 = private unnamed_addr constant [67 x i8] c"( ( ( uint32_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@xMinimumEverFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1156
@.str.3.180 = private unnamed_addr constant [61 x i8] c"( ( ( uint32_t ) pvReturn ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@.str.4.183 = private unnamed_addr constant [49 x i8] c"( pxLink->xBlockSize & xBlockAllocatedBit ) != 0\00", align 1
@.str.5.184 = private unnamed_addr constant [32 x i8] c"pxLink->pxNextFreeBlock == NULL\00", align 1
@ucHeap = internal global [148480 x i8] zeroinitializer, align 1, !dbg !1158
@ep = internal unnamed_addr global i8* null, align 4, !dbg !1164
@.str.187 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.1.188 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.2.189 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@firstByteMark = internal unnamed_addr constant [7 x i8] c"\00\00\C0\E0\F0\F8\FC", align 1, !dbg !1186
@.str.3.194 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4.190 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5.191 = private unnamed_addr constant [8 x i8] c"\22\\\08\0C\0A\0D\09\00", align 1
@.str.6.192 = private unnamed_addr constant [6 x i8] c"u%04x\00", align 1
@.str.7.193 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@_ctype_ = external dso_local local_unnamed_addr constant [0 x i8], align 1
@xExceptionStack = internal global [192 x i32] zeroinitializer, align 4, !dbg !1188
@pxExceptionStack = dso_local local_unnamed_addr global i32* getelementptr inbounds ([192 x i32], [192 x i32]* @xExceptionStack, i32 0, i32 191), align 4, !dbg !1274
@assert_expr.0 = internal unnamed_addr global i1 false, align 4, !dbg !1368
@assert_expr.1 = internal unnamed_addr global i8* null, align 4, !dbg !1369
@assert_expr.2 = internal unnamed_addr global i8* null, align 4, !dbg !1370
@assert_expr.3 = internal unnamed_addr global i32 0, align 4, !dbg !1371
@reboot_flag = internal unnamed_addr global i32 0, align 4, !dbg !1346
@exception_config = internal unnamed_addr global %struct.exception_config_t zeroinitializer, align 4, !dbg !1348
@.str.199 = private unnamed_addr constant [40 x i8] c"assert failed: %s, file: %s, line: %d\0A\0D\00", align 1
@.str.1.200 = private unnamed_addr constant [14 x i8] c"Usage fault: \00", align 1
@.str.2.201 = private unnamed_addr constant [17 x i8] c"Divide by zero\0A\0D\00", align 1
@.str.3.202 = private unnamed_addr constant [19 x i8] c"Unaligned access\0A\0D\00", align 1
@.str.4.203 = private unnamed_addr constant [20 x i8] c"Coprocessor error\0A\0D\00", align 1
@.str.5.204 = private unnamed_addr constant [21 x i8] c"Invalid EXC_RETURN\0A\0D\00", align 1
@.str.6.205 = private unnamed_addr constant [16 x i8] c"Invalid state\0A\0D\00", align 1
@.str.7.206 = private unnamed_addr constant [24 x i8] c"Undefined instruction\0A\0D\00", align 1
@.str.8.207 = private unnamed_addr constant [26 x i8] c"Memory Management fault: \00", align 1
@.str.9.208 = private unnamed_addr constant [63 x i8] c"A MemManage fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.10.209 = private unnamed_addr constant [56 x i8] c"A derived MemManage fault occurred on exception entry\0A\0D\00", align 1
@.str.11.210 = private unnamed_addr constant [57 x i8] c"A derived MemManage fault occurred on exception return\0A\0D\00", align 1
@.str.12.211 = private unnamed_addr constant [32 x i8] c"Data access violation @0x%08x\0A\0D\00", align 1
@.str.13.212 = private unnamed_addr constant [64 x i8] c"MPU or Execute Never (XN) default memory map access violation\0A\0D\00", align 1
@.str.14.213 = private unnamed_addr constant [22 x i8] c"SCB->MMFAR = 0x%08x\0A\0D\00", align 1
@.str.15.214 = private unnamed_addr constant [12 x i8] c"Bus fault: \00", align 1
@.str.16.215 = private unnamed_addr constant [57 x i8] c"A bus fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.17.216 = private unnamed_addr constant [54 x i8] c"A derived bus fault has occurred on exception entry\0A\0D\00", align 1
@.str.18.217 = private unnamed_addr constant [55 x i8] c"A derived bus fault has occurred on exception return\0A\0D\00", align 1
@.str.19.218 = private unnamed_addr constant [43 x i8] c"Imprecise data access error has occurred\0A\0D\00", align 1
@.str.20.219 = private unnamed_addr constant [50 x i8] c"A precise data access error has occurred @x%08x\0A\0D\00", align 1
@.str.21.220 = private unnamed_addr constant [54 x i8] c"A bus fault on an instruction prefetch has occurred\0A\0D\00", align 1
@.str.22.221 = private unnamed_addr constant [21 x i8] c"SCB->BFAR = 0x%08x\0A\0D\00", align 1
@taskContext = internal global %struct.TaskContextType zeroinitializer, align 4, !dbg !1363
@pTaskContext = dso_local local_unnamed_addr global %struct.TaskContextType* @taskContext, align 4, !dbg !1277
@.str.23.222 = private unnamed_addr constant [15 x i8] c"r0  = 0x%08x\0A\0D\00", align 1
@.str.24.223 = private unnamed_addr constant [15 x i8] c"r1  = 0x%08x\0A\0D\00", align 1
@.str.25.224 = private unnamed_addr constant [15 x i8] c"r2  = 0x%08x\0A\0D\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"r3  = 0x%08x\0A\0D\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"r4  = 0x%08x\0A\0D\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"r5  = 0x%08x\0A\0D\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"r6  = 0x%08x\0A\0D\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"r7  = 0x%08x\0A\0D\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"r8  = 0x%08x\0A\0D\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"r9  = 0x%08x\0A\0D\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"r10 = 0x%08x\0A\0D\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"r11 = 0x%08x\0A\0D\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"r12 = 0x%08x\0A\0D\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"lr  = 0x%08x\0A\0D\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"pc  = 0x%08x\0A\0D\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"psr = 0x%08x\0A\0D\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"EXC_RET = 0x%08x\0A\0D\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"s0  = 0x%08x\0A\0D\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"s1  = 0x%08x\0A\0D\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"s2  = 0x%08x\0A\0D\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"s3  = 0x%08x\0A\0D\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"s4  = 0x%08x\0A\0D\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"s5  = 0x%08x\0A\0D\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"s6  = 0x%08x\0A\0D\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"s7  = 0x%08x\0A\0D\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"s8  = 0x%08x\0A\0D\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"s9  = 0x%08x\0A\0D\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"s10 = 0x%08x\0A\0D\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"s11 = 0x%08x\0A\0D\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"s12 = 0x%08x\0A\0D\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"s13 = 0x%08x\0A\0D\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"s14 = 0x%08x\0A\0D\00", align 1
@.str.55.225 = private unnamed_addr constant [15 x i8] c"s15 = 0x%08x\0A\0D\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"s16 = 0x%08x\0A\0D\00", align 1
@.str.57.226 = private unnamed_addr constant [15 x i8] c"s17 = 0x%08x\0A\0D\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"s18 = 0x%08x\0A\0D\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"s19 = 0x%08x\0A\0D\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"s20 = 0x%08x\0A\0D\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"s21 = 0x%08x\0A\0D\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"s22 = 0x%08x\0A\0D\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"s23 = 0x%08x\0A\0D\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"s24 = 0x%08x\0A\0D\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"s25 = 0x%08x\0A\0D\00", align 1
@.str.66.227 = private unnamed_addr constant [15 x i8] c"s26 = 0x%08x\0A\0D\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"s27 = 0x%08x\0A\0D\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"s28 = 0x%08x\0A\0D\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"s29 = 0x%08x\0A\0D\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"s30 = 0x%08x\0A\0D\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"s31 = 0x%08x\0A\0D\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"fpscr = 0x%08x\0A\0D\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c"CONTROL = 0x%08x\0A\0D\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"MSP     = 0x%08x\0A\0D\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"PSP     = 0x%08x\0A\0D\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"sp      = 0x%08x\0A\0D\00", align 1
@.str.77 = private unnamed_addr constant [30 x i8] c"0x%08x: %08x %08x %08x %08x\0A\0D\00", align 1
@.str.78.228 = private unnamed_addr constant [27 x i8] c"\0A\0Dmemory dump completed.\0A\0D\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"\0A\0DIn Hard Fault Handler\0A\0D\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"SCB->HFSR = 0x%08x\0A\0D\00", align 1
@.str.81.229 = private unnamed_addr constant [20 x i8] c"Forced Hard Fault\0A\0D\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"SCB->CFSR = 0x%08x\0A\0D\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"\0A\0DIn MemManage Fault Handler\0A\0D\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"\0A\0DIn Bus Fault Handler\0A\0D\00", align 1
@.str.85 = private unnamed_addr constant [27 x i8] c"\0A\0DIn Usage Fault Handler\0A\0D\00", align 1
@.str.86 = private unnamed_addr constant [35 x i8] c"\0A\0DIn Debug Monitor Fault Handler\0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [42 x i8] c"Task stack overflow:%c, stack end:0x%x \0D\0A\00", align 1
@.str.232 = private unnamed_addr constant [24 x i8] c"stack overflow: %x %s\0D\0A\00", align 1
@.str.1.233 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.234 = private unnamed_addr constant [53 x i8] c"../../../../../kernel/service/src/os_port_callback.c\00", align 1
@.str.235 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@g_log_uart_port = internal unnamed_addr global i32 0, align 4, !dbg !1372
@syslog_init_done = internal unnamed_addr global i32 0, align 4, !dbg !1487
@syslog_buffer_pool = internal global [16 x %struct.syslog_buffer_t] zeroinitializer, align 4, !dbg !1470
@syslog_drop_count = internal unnamed_addr global i32 0, align 4, !dbg !1489
@g_log_queue = internal unnamed_addr global i8* null, align 4, !dbg !1491
@.str.1.252 = private unnamed_addr constant [45 x i8] c"log_queue_create: create log queue failed.\0D\0A\00", align 1
@.str.2.243 = private unnamed_addr constant [34 x i8] c"[T: %u M: %s C: %s F: %s L: %d]: \00", align 1
@print_level_table = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.242, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.247, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.249, i32 0, i32 0)], align 4, !dbg !1493
@.str.3.242 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4.253 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.5.245 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.6.244 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7.246 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8.254 = private unnamed_addr constant [29 x i8] c"\09\09>>> log drop count = %u\0D\0A\0A\00", align 1
@syslog_task_ready = internal unnamed_addr global i1 false, align 4, !dbg !1503
@.str.9.255 = private unnamed_addr constant [7 x i8] c"SYSLOG\00", align 1
@syslog_task_handle = internal global i8* null, align 4, !dbg !1468
@.str.10.256 = private unnamed_addr constant [39 x i8] c"log_init: create syslog task failed.\0D\0A\00", align 1
@syslog_config = internal global %struct.syslog_config_s zeroinitializer, align 8, !dbg !1473
@__FUNCTION__.log_init = private unnamed_addr constant [9 x i8] c"log_init\00", align 1
@.str.11.257 = private unnamed_addr constant [27 x i8] c"load syslog config failed\0A\00", align 1
@.str.12.259 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.13.263 = private unnamed_addr constant [19 x i8] c"%s%s 0x%01x 0x%01x\00", align 1
@.str.14.262 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15.264 = private unnamed_addr constant [24 x i8] c"pos < SYSLOG_FILTER_LEN\00", align 1
@.str.16.265 = private unnamed_addr constant [43 x i8] c"../../../../../kernel/service/src/syslog.c\00", align 1
@.str.17.266 = private unnamed_addr constant [43 x i8] c"log_switch - DEBUG_LOG_ON <= DEBUG_LOG_OFF\00", align 1
@log_switch_table = internal unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.260, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.261, i32 0, i32 0)], align 4, !dbg !1500
@.str.18.267 = private unnamed_addr constant [53 x i8] c"print_level - PRINT_LEVEL_DEBUG <= PRINT_LEVEL_ERROR\00", align 1
@.str.19.247 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.20.248 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.21.249 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.22.258 = private unnamed_addr constant [29 x i8] c"\0A\0D>>> dump syslog buffer\0A\0D\0A\0D\00", align 1
@.str.23.260 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.24.261 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@__FUNCTION__.nvdm_port_log_notice = private unnamed_addr constant [21 x i8] c"nvdm_port_log_notice\00", align 1
@__FUNCTION__.nvdm_port_log_error = private unnamed_addr constant [20 x i8] c"nvdm_port_log_error\00", align 1
@.str.268 = private unnamed_addr constant [51 x i8] c"../../../../../middleware/MTK/nvdm/src/nvdm_port.c\00", align 1
@.str.1.269 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.270 = private unnamed_addr constant [76 x i8] c"hal_flash_read: address = 0x%08x, buffer = 0x%08x, length = %d, status = %d\00", align 1
@.str.3.271 = private unnamed_addr constant [77 x i8] c"hal_flash_write: address = 0x%08x, buffer = 0x%08x, length = %d, status = %d\00", align 1
@.str.4.272 = private unnamed_addr constant [47 x i8] c"hal_flash_erase: address = 0x%08x, status = %d\00", align 1
@g_nvdm_mutex = internal unnamed_addr global i8* null, align 4, !dbg !1504
@.str.5.273 = private unnamed_addr constant [30 x i8] c"nvdm_port_mutex_creat error\0D\0A\00", align 1
@.str.7.274 = private unnamed_addr constant [29 x i8] c"nvdm_port_mutex_take error\0D\0A\00", align 1
@.str.9.275 = private unnamed_addr constant [29 x i8] c"nvdm_port_mutex_give error\0D\0A\00", align 1
@g_task_handler = internal unnamed_addr global i8* null, align 4, !dbg !1521
@log_control_block_common = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.235, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1466
@__FUNCTION__._main_sys_random_init = private unnamed_addr constant [22 x i8] c"_main_sys_random_init\00", align 1
@.str.1.276 = private unnamed_addr constant [18 x i8] c"trng init failed\0A\00", align 1
@.str.279 = private unnamed_addr constant [6 x i8] c"flash\00", align 1
@__FLASH_segment_start__ = external dso_local global [0 x i32], align 4
@__FLASH_segment_end__ = external dso_local global [0 x i32], align 4
@.str.1.280 = private unnamed_addr constant [5 x i8] c"sram\00", align 1
@__SRAM_segment_start__ = external dso_local global [0 x i32], align 4
@__SRAM_segment_end__ = external dso_local global [0 x i32], align 4
@.str.2.281 = private unnamed_addr constant [8 x i8] c"ramtext\00", align 1
@__ramtext_start__ = external dso_local global [0 x i32], align 4
@__ramtext_end__ = external dso_local global [0 x i32], align 4
@.str.3.282 = private unnamed_addr constant [7 x i8] c"tcmbss\00", align 1
@__tcmbss_start__ = external dso_local global [0 x i32], align 4
@__tcmbss_end__ = external dso_local global [0 x i32], align 4
@.str.4.283 = private unnamed_addr constant [4 x i8] c"scs\00", align 1
@memory_regions = dso_local local_unnamed_addr constant [6 x %struct.memory_region_type] [%struct.memory_region_type { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.279, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_end__, i32 0, i32 0), i32 0 }, %struct.memory_region_type { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.280, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.281, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.282, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.283, i32 0, i32 0), i32* inttoptr (i32 -536813568 to i32*), i32* inttoptr (i32 -536809472 to i32*), i32 1 }, %struct.memory_region_type zeroinitializer], align 4, !dbg !1526
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !1540
@System_Initialize_Done = internal global i32 0, align 4, !dbg !1598
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !1600
@end = external dso_local global i8, align 1
@.str.290 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.291 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.292 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@.str.293 = private unnamed_addr constant [14 x i8] c"cjson_example\00", align 1
@__FUNCTION__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.1.294 = private unnamed_addr constant [22 x i8] c"start to create task.\00", align 1
@.str.2.295 = private unnamed_addr constant [11 x i8] c"cjson_test\00", align 1
@.str.3.296 = private unnamed_addr constant [22 x i8] c"create user task fail\00", align 1
@__FUNCTION__.cjson_test_proc = private unnamed_addr constant [16 x i8] c"cjson_test_proc\00", align 1
@.str.4.297 = private unnamed_addr constant [8 x i8] c"starts\0A\00", align 1
@.str.5.298 = private unnamed_addr constant [19 x i8] c"ret=%d, completed\0A\00", align 1
@.str.6.299 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@text1 = dso_local constant [153 x i8] c"{\0A\22name\22: \22Jack (\\\22Bee\\\22) Nimble\22, \0A\22format\22: {\22type\22:       \22rect\22, \0A\22width\22:      1920, \0A\22height\22:     1080, \0A\22interlace\22:  false,\22frame rate\22: 24\0A}\0A}\00", align 1, !dbg !1800
@text2 = dso_local constant [79 x i8] c"[\22Sunday\22, \22Monday\22, \22Tuesday\22, \22Wednesday\22, \22Thursday\22, \22Friday\22, \22Saturday\22]\00", align 1, !dbg !1807
@text3 = dso_local constant [53 x i8] c"[\0A    [0, -1, 0],\0A    [1, 0, 0],\0A    [0, 0, 1]\0A   ]\0A\00", align 1, !dbg !1812
@text4 = dso_local constant [330 x i8] c"{\0A     \22Image\22: {\0A          \22Width\22:  800,\0A          \22Height\22: 600,\0A          \22Title\22:  \22View from 15th Floor\22,\0A         \22Thumbnail\22: {\0A              \22Url\22:    \22http:/*www.example.com/image/481989943\22,\0A               \22Height\22: 125,\0A              \22Width\22:  \22100\22\0A           },\0A            \22IDs\22: [116, 943, 234, 38793]\0A       }\0A }\00", align 1, !dbg !1817
@text5 = dso_local constant [442 x i8] c"[\0A  {\0A     \22precision\22: \22zip\22,\0A   \22Latitude\22:  37.7668,\0A   \22Longitude\22: -122.3959,\0A     \22Address\22:   \22\22,\0A  \22City\22:      \22SAN FRANCISCO\22,\0A     \22State\22:     \22CA\22,\0A    \22Zip\22:       \2294107\22,\0A     \22Country\22:   \22US\22\0A     },\0A    {\0A     \22precision\22: \22zip\22,\0A   \22Latitude\22:  37.371991,\0A     \22Longitude\22: -122.026020,\0A   \22Address\22:   \22\22,\0A  \22City\22:      \22SUNNYVALE\22,\0A     \22State\22:     \22CA\22,\0A    \22Zip\22:       \2294085\22,\0A     \22Country\22:   \22US\22\0A     }\0A     ]\00", align 1, !dbg !1822
@log_control_block_cjson_example = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.293, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1830
@__FUNCTION__.doit = private unnamed_addr constant [5 x i8] c"doit\00", align 1
@.str.300 = private unnamed_addr constant [20 x i8] c"Error before: [%s]\0A\00", align 1
@.str.1.301 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2.303 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.3.302 = private unnamed_addr constant [20 x i8] c"Jack (\22Bee\22) Nimble\00", align 1
@.str.4.304 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.5.306 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.6.305 = private unnamed_addr constant [5 x i8] c"rect\00", align 1
@.str.7.307 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.8.308 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.9.309 = private unnamed_addr constant [10 x i8] c"interlace\00", align 1
@.str.10.310 = private unnamed_addr constant [11 x i8] c"frame rate\00", align 1
@__FUNCTION__.create_objects = private unnamed_addr constant [15 x i8] c"create_objects\00", align 1
@.str.11.337 = private unnamed_addr constant [7 x i8] c"Sunday\00", align 1
@.str.12.338 = private unnamed_addr constant [7 x i8] c"Monday\00", align 1
@.str.13.339 = private unnamed_addr constant [8 x i8] c"Tuesday\00", align 1
@.str.14.340 = private unnamed_addr constant [10 x i8] c"Wednesday\00", align 1
@.str.15.341 = private unnamed_addr constant [9 x i8] c"Thursday\00", align 1
@.str.16.342 = private unnamed_addr constant [7 x i8] c"Friday\00", align 1
@.str.17.343 = private unnamed_addr constant [9 x i8] c"Saturday\00", align 1
@__const.create_objects.strings = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.337, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12.338, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.339, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.340, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.341, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.342, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17.343, i32 0, i32 0)], align 4
@__const.create_objects.ids = private unnamed_addr constant [4 x i32] [i32 116, i32 943, i32 234, i32 38793], align 4
@.str.18.311 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.19.312 = private unnamed_addr constant [6 x i8] c"Width\00", align 1
@.str.20.313 = private unnamed_addr constant [7 x i8] c"Height\00", align 1
@.str.21.315 = private unnamed_addr constant [6 x i8] c"Title\00", align 1
@.str.22.314 = private unnamed_addr constant [21 x i8] c"View from 15th Floor\00", align 1
@.str.23.316 = private unnamed_addr constant [10 x i8] c"Thumbnail\00", align 1
@.str.24.318 = private unnamed_addr constant [4 x i8] c"Url\00", align 1
@.str.25.317 = private unnamed_addr constant [39 x i8] c"http:/*www.example.com/image/481989943\00", align 1
@.str.26.319 = private unnamed_addr constant [4 x i8] c"100\00", align 1
@.str.27.320 = private unnamed_addr constant [4 x i8] c"IDs\00", align 1
@.str.28.329 = private unnamed_addr constant [4 x i8] c"zip\00", align 1
@.str.29.330 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30.331 = private unnamed_addr constant [14 x i8] c"SAN FRANCISCO\00", align 1
@.str.31.332 = private unnamed_addr constant [3 x i8] c"CA\00", align 1
@.str.32.333 = private unnamed_addr constant [6 x i8] c"94107\00", align 1
@.str.33.334 = private unnamed_addr constant [3 x i8] c"US\00", align 1
@.str.34.335 = private unnamed_addr constant [10 x i8] c"SUNNYVALE\00", align 1
@.str.35.336 = private unnamed_addr constant [6 x i8] c"94085\00", align 1
@__const.create_objects.fields = private unnamed_addr constant [2 x %struct.record] [%struct.record { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.329, i32 0, i32 0), double 3.776680e+01, double 0xC05E99566CF41F21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.330, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30.331, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31.332, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32.333, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.334, i32 0, i32 0) }, %struct.record { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.329, i32 0, i32 0), double 0x4042AF9D66ADB403, double -1.220260e+02, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.330, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34.335, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31.332, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35.336, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.334, i32 0, i32 0) }], align 8
@.str.36.321 = private unnamed_addr constant [10 x i8] c"precision\00", align 1
@.str.37.322 = private unnamed_addr constant [9 x i8] c"Latitude\00", align 1
@.str.38.323 = private unnamed_addr constant [10 x i8] c"Longitude\00", align 1
@.str.39.324 = private unnamed_addr constant [8 x i8] c"Address\00", align 1
@.str.40.325 = private unnamed_addr constant [5 x i8] c"City\00", align 1
@.str.41.326 = private unnamed_addr constant [6 x i8] c"State\00", align 1
@.str.42.327 = private unnamed_addr constant [4 x i8] c"Zip\00", align 1
@.str.43.328 = private unnamed_addr constant [8 x i8] c"Country\00", align 1
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:56:57 GMT +00:00\00", align 1, !dbg !1845
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !1850
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt7687_hdk\00", align 1, !dbg !1856

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #0 section ".ramTEXT" !dbg !1984 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !1991
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !1991
  call void @llvm.dbg.value(metadata i32 0, metadata !1988, metadata !DIExpression()), !dbg !1992
  store i32 0, i32* %1, align 4, !dbg !1993
  call void @llvm.dbg.value(metadata i32* %1, metadata !1988, metadata !DIExpression(DW_OP_deref)), !dbg !1992
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #20, !dbg !1994
  call void @llvm.dbg.value(metadata i32 %3, metadata !1989, metadata !DIExpression()), !dbg !1992
  %4 = icmp eq i32 %3, 0, !dbg !1995
  br i1 %4, label %6, label %5, !dbg !1997

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !1998
  unreachable, !dbg !1998

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !2000
  call void @llvm.dbg.value(metadata i32 %7, metadata !1988, metadata !DIExpression()), !dbg !1992
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !2001
  ret i32 %7, !dbg !2002
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !2003 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !2005
  ret void, !dbg !2006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !2007 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !2008
  ret void, !dbg !2009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !2010 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2011
  ret void, !dbg !2012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !2013 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2014
  ret void, !dbg !2015
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #0 !dbg !2016 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2021
  call void @llvm.dbg.value(metadata i32 %1, metadata !2020, metadata !DIExpression()), !dbg !2022
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !2023
  br i1 %2, label %4, label %3, !dbg !2025

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !2026
  br label %4, !dbg !2028

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !2029
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2029
  ret i32 %5, !dbg !2030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #0 !dbg !2031 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2034
  call void @llvm.dbg.value(metadata i32 %1, metadata !2033, metadata !DIExpression()), !dbg !2035
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !2036
  br i1 %2, label %3, label %4, !dbg !2038

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !2039
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2041
  ret void, !dbg !2042

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2043
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2045
  unreachable, !dbg !2045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #0 !dbg !2046 {
  br label %1, !dbg !2049

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #22, !dbg !2050
  call void @llvm.dbg.value(metadata i32 %2, metadata !2048, metadata !DIExpression()), !dbg !2052
  %3 = icmp eq i32 %2, 0, !dbg !2053
  br i1 %3, label %4, label %1, !dbg !2054, !llvm.loop !2055

4:                                                ; preds = %1
  ret void, !dbg !2057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #0 !dbg !2058 {
  tail call void @free_sf_lock() #22, !dbg !2059
  ret void, !dbg !2060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2061 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2065, metadata !DIExpression()), !dbg !2068
  call void @llvm.dbg.value(metadata i32 0, metadata !2066, metadata !DIExpression()), !dbg !2068
  tail call fastcc void @sfc_pad_config() #22, !dbg !2069
  %2 = tail call i32 @gpt_get_current_time() #22, !dbg !2070
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #20, !dbg !2071
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !2073
  br i1 %4, label %6, label %5, !dbg !2074

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !2075
  br label %6, !dbg !2077

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #20, !dbg !2078
  ret i32 0, !dbg !2079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #5 !dbg !2080 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2082, metadata !DIExpression()), !dbg !2083
  %1 = load volatile i32, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2084
  call void @llvm.dbg.value(metadata i32 %1, metadata !2082, metadata !DIExpression()), !dbg !2083
  %2 = or i32 %1, 32256, !dbg !2085
  call void @llvm.dbg.value(metadata i32 %2, metadata !2082, metadata !DIExpression()), !dbg !2083
  store volatile i32 %2, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2086
  ret void, !dbg !2087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2092, metadata !DIExpression()), !dbg !2095
  call void @llvm.dbg.value(metadata i8* %1, metadata !2093, metadata !DIExpression()), !dbg !2095
  call void @llvm.dbg.value(metadata i32 %2, metadata !2094, metadata !DIExpression()), !dbg !2095
  tail call void @retrieve_sf_lock() #22, !dbg !2096
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #20, !dbg !2097
  tail call void @release_sf_lock() #22, !dbg !2098
  ret void, !dbg !2099
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2104, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 %1, metadata !2105, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i8* %2, metadata !2106, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 0, metadata !2107, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 %1, metadata !2108, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 0, metadata !2109, metadata !DIExpression()), !dbg !2110
  tail call void @retrieve_sf_lock() #22, !dbg !2111
  call void @llvm.dbg.value(metadata i32 %1, metadata !2108, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 %0, metadata !2104, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i8* %2, metadata !2106, metadata !DIExpression()), !dbg !2110
  %4 = icmp ugt i32 %1, 127, !dbg !2112
  br i1 %4, label %5, label %19, !dbg !2113

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2108, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 %7, metadata !2104, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i8* %8, metadata !2106, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.value(metadata i32 128, metadata !2109, metadata !DIExpression()), !dbg !2110
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2114
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !2117

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #20, !dbg !2118
  br label %14, !dbg !2120

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #20, !dbg !2121
  br label %14, !dbg !2124

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !2125
  call void @llvm.dbg.value(metadata i8* %15, metadata !2106, metadata !DIExpression()), !dbg !2110
  %16 = add i32 %7, 128, !dbg !2126
  call void @llvm.dbg.value(metadata i32 %16, metadata !2104, metadata !DIExpression()), !dbg !2110
  %17 = add i32 %6, -128, !dbg !2127
  call void @llvm.dbg.value(metadata i32 %17, metadata !2108, metadata !DIExpression()), !dbg !2110
  %18 = icmp ugt i32 %17, 127, !dbg !2112
  br i1 %18, label %5, label %19, !dbg !2113, !llvm.loop !2128

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !2110
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2130
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !2132

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #20, !dbg !2133
  br label %28, !dbg !2135

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #20, !dbg !2136
  br label %28, !dbg !2139

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2140
  tail call void @release_sf_lock() #22, !dbg !2141
  ret i32 0, !dbg !2142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !2143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2148, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.value(metadata i32 %1, metadata !2149, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.value(metadata i8* %2, metadata !2150, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.value(metadata i32 0, metadata !2151, metadata !DIExpression()), !dbg !2152
  tail call void @retrieve_sf_lock() #22, !dbg !2153
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !2154
  %5 = tail call i32 @hal_cache_disable() #20, !dbg !2155
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #20, !dbg !2156
  call void @llvm.dbg.value(metadata i32 %6, metadata !2151, metadata !DIExpression()), !dbg !2152
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2157
  %7 = tail call i32 @hal_cache_enable() #20, !dbg !2158
  tail call void @release_sf_lock() #22, !dbg !2159
  ret i32 %6, !dbg !2160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2165, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.value(metadata i32 %1, metadata !2166, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.value(metadata i32 0, metadata !2167, metadata !DIExpression()), !dbg !2168
  tail call void @retrieve_sf_lock() #22, !dbg !2169
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !2170
  %4 = tail call i32 @hal_cache_disable() #20, !dbg !2171
  %5 = tail call i32 @flash_write_enable() #20, !dbg !2172
  %6 = tail call i32 @flash_unprotect() #20, !dbg !2173
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !2174

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !2175
  %9 = icmp eq i32 %8, 0, !dbg !2179
  br i1 %9, label %10, label %22, !dbg !2180

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #20, !dbg !2181
  call void @llvm.dbg.value(metadata i32 %11, metadata !2167, metadata !DIExpression()), !dbg !2168
  br label %22, !dbg !2182

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !2183
  %14 = icmp eq i32 %13, 0, !dbg !2187
  br i1 %14, label %15, label %22, !dbg !2188

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #20, !dbg !2189
  call void @llvm.dbg.value(metadata i32 %16, metadata !2167, metadata !DIExpression()), !dbg !2168
  br label %22, !dbg !2190

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !2191
  %19 = icmp eq i32 %18, 0, !dbg !2195
  br i1 %19, label %20, label %22, !dbg !2196

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #20, !dbg !2197
  call void @llvm.dbg.value(metadata i32 %21, metadata !2167, metadata !DIExpression()), !dbg !2168
  br label %22, !dbg !2198

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !2168
  %24 = tail call i32 @hal_cache_enable() #20, !dbg !2168
  tail call void @release_sf_lock() #22, !dbg !2168
  ret i32 %23, !dbg !2199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ramTEXT" !dbg !2200 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !2204
  call void @llvm.dbg.value(metadata i8 0, metadata !2202, metadata !DIExpression()), !dbg !2205
  store i8 0, i8* %1, align 1, !dbg !2206
  call void @llvm.dbg.value(metadata i32 0, metadata !2203, metadata !DIExpression()), !dbg !2205
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2207
  call void @llvm.dbg.value(metadata i32 %2, metadata !2203, metadata !DIExpression()), !dbg !2205
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2208, !range !2210
  %4 = icmp ne i8 %3, 0, !dbg !2208
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !2211
  br i1 %7, label %27, label %8, !dbg !2211

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !2202, metadata !DIExpression(DW_OP_deref)), !dbg !2205
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !2212
  %10 = icmp slt i32 %9, 0, !dbg !2215
  br i1 %10, label %11, label %12, !dbg !2216

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2217
  unreachable, !dbg !2217

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !2219
  call void @llvm.dbg.value(metadata i8 %13, metadata !2202, metadata !DIExpression()), !dbg !2205
  %14 = and i8 %13, 1, !dbg !2221
  %15 = icmp eq i8 %14, 0, !dbg !2222
  br i1 %15, label %26, label %16, !dbg !2223

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #20, !dbg !2224
  br label %17, !dbg !2226

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !2202, metadata !DIExpression(DW_OP_deref)), !dbg !2205
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !2227
  %19 = icmp slt i32 %18, 0, !dbg !2230
  br i1 %19, label %20, label %21, !dbg !2231

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2232
  unreachable, !dbg !2232

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !2234
  call void @llvm.dbg.value(metadata i8 %22, metadata !2202, metadata !DIExpression()), !dbg !2205
  %23 = and i8 %22, 1, !dbg !2236
  %24 = icmp eq i8 %23, 0, !dbg !2237
  br i1 %24, label %25, label %17, !dbg !2238, !llvm.loop !2239

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !2241
  br label %27, !dbg !2242

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !2243
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #20, !dbg !2245
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !2246
  ret void, !dbg !2246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2247 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2251, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i32 %1, metadata !2252, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i32 0, metadata !2254, metadata !DIExpression()), !dbg !2262
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !2263
  call void @llvm.dbg.value(metadata i8 0, metadata !2257, metadata !DIExpression()), !dbg !2262
  store i8 0, i8* %3, align 1, !dbg !2264
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2265
  call void @llvm.dbg.value(metadata i8 0, metadata !2258, metadata !DIExpression()), !dbg !2262
  store i8 0, i8* %4, align 1, !dbg !2266
  call void @llvm.dbg.value(metadata i8* %3, metadata !2257, metadata !DIExpression(DW_OP_deref)), !dbg !2262
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #20, !dbg !2267
  %6 = icmp slt i32 %5, 0, !dbg !2269
  br i1 %6, label %7, label %8, !dbg !2270

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2271
  unreachable, !dbg !2271

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !2273
  call void @llvm.dbg.value(metadata i8 %9, metadata !2257, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i8 %9, metadata !2255, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i8* %4, metadata !2258, metadata !DIExpression(DW_OP_deref)), !dbg !2262
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #20, !dbg !2275
  %11 = icmp slt i32 %10, 0, !dbg !2277
  br i1 %11, label %12, label %13, !dbg !2278

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2279
  unreachable, !dbg !2279

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !2281
  call void @llvm.dbg.value(metadata i8 %14, metadata !2258, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.value(metadata i8 %14, metadata !2256, metadata !DIExpression()), !dbg !2262
  %15 = call i32 @save_and_set_interrupt_mask() #20, !dbg !2283
  call void @llvm.dbg.value(metadata i32 %15, metadata !2254, metadata !DIExpression()), !dbg !2262
  %16 = and i8 %9, 1, !dbg !2284
  %17 = icmp eq i8 %16, 0, !dbg !2285
  br i1 %17, label %18, label %46, !dbg !2286

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !2259, metadata !DIExpression()), !dbg !2287
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !2288
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !2290

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !2259, metadata !DIExpression()), !dbg !2287
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !2291
  %22 = icmp eq i32 %21, 49, !dbg !2294
  %23 = select i1 %22, i32 132, i32 128, !dbg !2295
  br label %28, !dbg !2295

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !2259, metadata !DIExpression()), !dbg !2287
  br label %28, !dbg !2296

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #20, !dbg !2300
  call void @llvm.dbg.value(metadata i8 %26, metadata !2259, metadata !DIExpression()), !dbg !2287
  %27 = zext i8 %26 to i32, !dbg !2303
  br label %28, !dbg !2303

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !2259, metadata !DIExpression()), !dbg !2287
  %30 = zext i8 %14 to i32, !dbg !2304
  %31 = and i32 %29, %30, !dbg !2306
  %32 = icmp eq i32 %31, 0, !dbg !2307
  br i1 %32, label %33, label %38, !dbg !2308

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !2309
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !2310
  br i1 %37, label %43, label %38, !dbg !2310

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2311, !range !2210
  %40 = icmp eq i8 %39, 0, !dbg !2311
  br i1 %40, label %41, label %42, !dbg !2311

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !2311
  unreachable, !dbg !2311

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #20, !dbg !2313
  call void @llvm.dbg.value(metadata i32 -121, metadata !2253, metadata !DIExpression()), !dbg !2262
  br label %44, !dbg !2314

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !2315
  call void @llvm.dbg.value(metadata i32 0, metadata !2253, metadata !DIExpression()), !dbg !2262
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !2317
  br label %46, !dbg !2318

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !2319
  call void @llvm.dbg.value(metadata i32 %47, metadata !2253, metadata !DIExpression()), !dbg !2262
  call void @restore_interrupt_mask(i32 noundef %15) #20, !dbg !2318
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2320
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !2320
  ret i32 %47, !dbg !2321
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2322 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2326, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i32 %1, metadata !2327, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i8 %2, metadata !2328, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i32 0, metadata !2330, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i16 0, metadata !2332, metadata !DIExpression()), !dbg !2334
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2335
  call void @llvm.dbg.value(metadata i8 0, metadata !2333, metadata !DIExpression()), !dbg !2334
  store i8 0, i8* %4, align 1, !dbg !2336
  call void @llvm.dbg.value(metadata i8* %4, metadata !2333, metadata !DIExpression(DW_OP_deref)), !dbg !2334
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #20, !dbg !2337
  %6 = icmp slt i32 %5, 0, !dbg !2339
  br i1 %6, label %7, label %8, !dbg !2340

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2341
  unreachable, !dbg !2341

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !2343
  call void @llvm.dbg.value(metadata i8 %9, metadata !2333, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i8 %9, metadata !2332, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2334
  %10 = call i32 @save_and_set_interrupt_mask() #20, !dbg !2345
  call void @llvm.dbg.value(metadata i32 %10, metadata !2329, metadata !DIExpression()), !dbg !2334
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2346, !range !2210
  %12 = icmp eq i8 %11, 0, !dbg !2346
  br i1 %12, label %18, label %13, !dbg !2348

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2349, !range !2210
  %15 = icmp eq i8 %14, 0, !dbg !2349
  br i1 %15, label %16, label %17, !dbg !2349

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !2349
  unreachable, !dbg !2349

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #20, !dbg !2351
  call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !2352
  call void @restore_interrupt_mask(i32 noundef %10) #20, !dbg !2353
  br label %26, !dbg !2354

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !2332, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2334
  %19 = and i8 %9, 1, !dbg !2355
  %20 = icmp eq i8 %19, 0, !dbg !2357
  br i1 %20, label %21, label %26, !dbg !2358

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !2359
  %22 = inttoptr i32 %1 to i8*, !dbg !2361
  %23 = load volatile i8, i8* %22, align 1, !dbg !2362
  call void @llvm.dbg.value(metadata i8 %23, metadata !2331, metadata !DIExpression()), !dbg !2334
  %24 = icmp eq i8 %23, %2, !dbg !2363
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !2334
  call void @llvm.dbg.value(metadata i32 %27, metadata !2330, metadata !DIExpression()), !dbg !2334
  call void @restore_interrupt_mask(i32 noundef %10) #20, !dbg !2365
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2366
  ret i32 %27, !dbg !2367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 !dbg !2368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2372, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %1, metadata !2373, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i1 %2, metadata !2374, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2375
  %4 = icmp ugt i32 %0, 1, !dbg !2376
  br i1 %4, label %5, label %8, !dbg !2378

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 75) #20, !dbg !2379
  br label %7, !dbg !2379

7:                                                ; preds = %5, %7
  br label %7, !dbg !2379, !llvm.loop !2381

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !2382

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !2383
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2386
  br i1 %2, label %11, label %13, !dbg !2388

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !2389
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2389
  br label %21, !dbg !2391

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !2392
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2392
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !2394
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2397
  br i1 %2, label %17, label %19, !dbg !2399

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !2400
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2400
  br label %21, !dbg !2402

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !2403
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2403
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !2405
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !2406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2410, metadata !DIExpression()), !dbg !2411
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !2412

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 96) #20, !dbg !2413
  br label %4, !dbg !2413

4:                                                ; preds = %2, %4
  br label %4, !dbg !2413, !llvm.loop !2416

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2417
  %7 = or i32 %6, 1, !dbg !2417
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2417
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #20, !dbg !2420
  br label %16, !dbg !2421

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2422
  %11 = or i32 %10, 1, !dbg !2422
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2422
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #20, !dbg !2425
  br label %16, !dbg !2426

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2427
  %15 = or i32 %14, 1, !dbg !2427
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2427
  br label %16, !dbg !2430

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !2431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #5 !dbg !2432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2434, metadata !DIExpression()), !dbg !2435
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !2436

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2437
  %4 = and i32 %3, -2, !dbg !2437
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2437
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2440
  %6 = and i32 %5, -2, !dbg !2440
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2440
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2441
  br label %18, !dbg !2442

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2443
  %9 = and i32 %8, -3, !dbg !2443
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2443
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2446
  %11 = and i32 %10, -2, !dbg !2446
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2446
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2447
  br label %18, !dbg !2448

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2449
  %14 = and i32 %13, -2, !dbg !2449
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2449
  br label %18, !dbg !2452

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2453
  %17 = and i32 %16, -2, !dbg !2453
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2453
  br label %18, !dbg !2456

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !2457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #0 !dbg !2458 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2460, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata i32 undef, metadata !2460, metadata !DIExpression()), !dbg !2462
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2463
  %3 = and i32 %2, 65535, !dbg !2464
  call void @llvm.dbg.value(metadata i32 %2, metadata !2461, metadata !DIExpression()), !dbg !2462
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2465
  %4 = and i32 %2, 1, !dbg !2466
  %5 = icmp eq i32 %4, 0, !dbg !2466
  br i1 %5, label %6, label %9, !dbg !2468

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !2469
  %8 = icmp eq i32 %7, 0, !dbg !2469
  br i1 %8, label %13, label %9, !dbg !2471

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #20, !dbg !2472
  %12 = load void ()*, void ()** %11, align 4, !dbg !2472
  tail call void %12() #20, !dbg !2472
  br label %13, !dbg !2473

13:                                               ; preds = %9, %6
  ret void, !dbg !2473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #0 !dbg !2474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2478, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.value(metadata i32 %1, metadata !2479, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.value(metadata void ()* %2, metadata !2480, metadata !DIExpression()), !dbg !2481
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !2482

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 149) #20, !dbg !2483
  br label %6, !dbg !2483

6:                                                ; preds = %4, %6
  br label %6, !dbg !2483, !llvm.loop !2486

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !2487
  br i1 %8, label %9, label %13, !dbg !2488

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #20, !dbg !2490
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #20, !dbg !2492
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #20, !dbg !2493
  br label %13, !dbg !2494

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !2495

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !2496
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2499
  %16 = or i32 %15, 1, !dbg !2499
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2499
  %17 = shl i32 %1, 2, !dbg !2500
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2501
  %19 = or i32 %18, %17, !dbg !2501
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2501
  br label %36, !dbg !2502

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !2503
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2506
  %22 = or i32 %21, 2, !dbg !2506
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2506
  %23 = shl i32 %1, 2, !dbg !2507
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2508
  %25 = or i32 %24, %23, !dbg !2508
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2508
  br label %36, !dbg !2509

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !2510
  %28 = or i32 %27, 1, !dbg !2513
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2514
  %30 = or i32 %29, %28, !dbg !2514
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2514
  br label %36, !dbg !2515

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !2516
  %33 = or i32 %32, 1, !dbg !2519
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2520
  %35 = or i32 %34, %33, !dbg !2520
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2520
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !2521
  br label %36, !dbg !2522

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !2523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #0 !dbg !2524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2528, metadata !DIExpression()), !dbg !2530
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !2531

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 177) #20, !dbg !2532
  br label %4, !dbg !2532

4:                                                ; preds = %4, %2
  br label %4, !dbg !2532, !llvm.loop !2535

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2529, metadata !DIExpression()), !dbg !2530
  br label %8, !dbg !2536

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2529, metadata !DIExpression()), !dbg !2530
  br label %8, !dbg !2540

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2529, metadata !DIExpression()), !dbg !2530
  br label %8, !dbg !2543

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !2546
  call void @llvm.dbg.value(metadata i32 %10, metadata !2529, metadata !DIExpression()), !dbg !2530
  ret i32 %10, !dbg !2547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #0 !dbg !2548 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #22, !dbg !2549
  ret void, !dbg !2550
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #0 !dbg !2551 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #22, !dbg !2552
  ret void, !dbg !2553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_init() local_unnamed_addr #7 !dbg !2554 {
  ret i32 0, !dbg !2558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_deinit() local_unnamed_addr #7 !dbg !2559 {
  ret i32 0, !dbg !2560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_get_generated_random_number(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !2561 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !2566, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i16 0, metadata !2567, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !2569, metadata !DIExpression()), !dbg !2576
  %2 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2577
  %3 = or i32 %2, 1, !dbg !2577
  store volatile i32 %3, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2577
  call void @llvm.dbg.value(metadata i16 0, metadata !2567, metadata !DIExpression()), !dbg !2575
  br label %4, !dbg !2578

4:                                                ; preds = %1, %9
  %5 = phi i16 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i16 %5, metadata !2567, metadata !DIExpression()), !dbg !2575
  %6 = load volatile i32, i32* inttoptr (i32 -2096107504 to i32*), align 16, !dbg !2579
  %7 = and i32 %6, 1, !dbg !2579
  %8 = icmp eq i32 %7, 0, !dbg !2582
  br i1 %8, label %9, label %12, !dbg !2583

9:                                                ; preds = %4
  tail call void @delay_time(i32 noundef 32) #20, !dbg !2584
  %10 = add nuw nsw i16 %5, 1, !dbg !2585
  call void @llvm.dbg.value(metadata i16 %10, metadata !2567, metadata !DIExpression()), !dbg !2575
  %11 = icmp ult i16 %5, 99, !dbg !2586
  br i1 %11, label %4, label %12, !dbg !2578, !llvm.loop !2587

12:                                               ; preds = %4, %9
  %13 = phi i16 [ %5, %4 ], [ 100, %9 ], !dbg !2575
  %14 = load volatile i32, i32* inttoptr (i32 -2096107512 to i32*), align 8, !dbg !2589
  store i32 %14, i32* %0, align 4, !dbg !2590
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107500 to i32*), metadata !2571, metadata !DIExpression()), !dbg !2591
  %15 = load volatile i32, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !2592
  store volatile i32 1, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !2592
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !2573, metadata !DIExpression()), !dbg !2593
  %16 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2594
  %17 = and i32 %16, -2, !dbg !2594
  store volatile i32 %17, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2594
  %18 = icmp ugt i16 %13, 99, !dbg !2595
  br i1 %18, label %19, label %20, !dbg !2597

19:                                               ; preds = %12
  store i32 0, i32* %0, align 4, !dbg !2598
  br label %20, !dbg !2600

20:                                               ; preds = %12, %19
  %21 = phi i32 [ -2, %19 ], [ 0, %12 ], !dbg !2601
  ret i32 %21, !dbg !2602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #0 !dbg !2603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2607, metadata !DIExpression()), !dbg !2608
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !2609
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2610, !srcloc !2611
  tail call void asm sideeffect "isb", ""() #19, !dbg !2612, !srcloc !2613
  ret void, !dbg !2614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #5 !dbg !2615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2619, metadata !DIExpression()), !dbg !2620
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !2621
  ret void, !dbg !2622
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".ramTEXT" !dbg !2623 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #19, !dbg !2626, !srcloc !2633
  call void @llvm.dbg.value(metadata i32 %1, metadata !2630, metadata !DIExpression()) #19, !dbg !2634
  call void @llvm.dbg.value(metadata i32 %1, metadata !2625, metadata !DIExpression()), !dbg !2635
  tail call void asm sideeffect "cpsid i", "~{memory}"() #19, !dbg !2636, !srcloc !2639
  ret i32 %1, !dbg !2640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2643, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32 %0, metadata !2645, metadata !DIExpression()) #19, !dbg !2648
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #19, !dbg !2651, !srcloc !2652
  ret void, !dbg !2653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #8 section ".ramTEXT" !dbg !2654 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !2659
  call void @llvm.dbg.value(metadata i32 %1, metadata !2658, metadata !DIExpression()), !dbg !2660
  ret i32 %1, !dbg !2661
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #8 section ".ramTEXT" !dbg !2662 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #22, !dbg !2663
  ret i32 %1, !dbg !2664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2667, metadata !DIExpression()), !dbg !2670
  %2 = tail call i32 @sfc_get_systime() #22, !dbg !2671
  %3 = add i32 %2, %0, !dbg !2672
  %4 = xor i32 %3, -1, !dbg !2673
  call void @llvm.dbg.value(metadata i32 %3, metadata !2668, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2670
  %5 = tail call i32 @sfc_get_systime() #22, !dbg !2674
  call void @llvm.dbg.value(metadata i32 %5, metadata !2669, metadata !DIExpression()), !dbg !2670
  %6 = add i32 %5, %4, !dbg !2675
  %7 = icmp slt i32 %6, 0, !dbg !2675
  br i1 %7, label %8, label %12, !dbg !2676

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #22, !dbg !2677
  call void @llvm.dbg.value(metadata i32 %9, metadata !2669, metadata !DIExpression()), !dbg !2670
  %10 = add i32 %9, %4, !dbg !2675
  %11 = icmp slt i32 %10, 0, !dbg !2675
  br i1 %11, label %8, label %12, !dbg !2676, !llvm.loop !2679

12:                                               ; preds = %8, %1
  ret void, !dbg !2681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2684, metadata !DIExpression()), !dbg !2685
  %2 = shl i32 %0, 5, !dbg !2686
  tail call void @sfc_delay_time(i32 noundef %2) #22, !dbg !2687
  ret void, !dbg !2688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #7 section ".ramTEXT" !dbg !2689 {
  ret i32 128, !dbg !2692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2695, metadata !DIExpression()), !dbg !2697
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !2698
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2699
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2700
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2701
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !2702
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !2703
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !2704
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2705
  call void @llvm.dbg.value(metadata i32 %2, metadata !2696, metadata !DIExpression()), !dbg !2697
  %3 = and i32 %2, -4194305, !dbg !2706
  call void @llvm.dbg.value(metadata i32 %3, metadata !2696, metadata !DIExpression()), !dbg !2697
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2707
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !2708
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2709
  call void @llvm.dbg.value(metadata i32 %4, metadata !2696, metadata !DIExpression()), !dbg !2697
  %5 = or i32 %4, 4194304, !dbg !2710
  call void @llvm.dbg.value(metadata i32 %5, metadata !2696, metadata !DIExpression()), !dbg !2697
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2711
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !2712
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2713
  call void @llvm.dbg.value(metadata i32 %6, metadata !2696, metadata !DIExpression()), !dbg !2697
  %7 = and i32 %6, -4194305, !dbg !2714
  call void @llvm.dbg.value(metadata i32 %7, metadata !2696, metadata !DIExpression()), !dbg !2697
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2715
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !2716
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2717
  call void @llvm.dbg.value(metadata i32 %8, metadata !2696, metadata !DIExpression()), !dbg !2697
  %9 = or i32 %8, 4194304, !dbg !2718
  call void @llvm.dbg.value(metadata i32 %9, metadata !2696, metadata !DIExpression()), !dbg !2697
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2719
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !2720
  %10 = icmp eq i32 %0, 0, !dbg !2721
  br i1 %10, label %12, label %11, !dbg !2723

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !2724
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !2726
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !2727
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2728
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2729
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2730
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2731
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !2732
  br label %12, !dbg !2733

12:                                               ; preds = %11, %1
  ret void, !dbg !2734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #8 section ".ramTEXT" !dbg !2735 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2739
  call void @llvm.dbg.value(metadata i32 %1, metadata !2737, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2740
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2741
  %3 = lshr i32 %2, 4, !dbg !2742
  %4 = and i32 %3, 7, !dbg !2742
  call void @llvm.dbg.value(metadata i32 %4, metadata !2738, metadata !DIExpression()), !dbg !2740
  %5 = icmp ne i32 %4, 7, !dbg !2743
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !2745
  call void @llvm.dbg.value(metadata i32 %6, metadata !2737, metadata !DIExpression()), !dbg !2740
  %9 = icmp ult i32 %4, 2, !dbg !2745
  %10 = zext i1 %9 to i32, !dbg !2745
  %11 = select i1 %8, i32 %10, i32 3, !dbg !2745
  ret i32 %11, !dbg !2746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 section ".ramTEXT" !dbg !2747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2751, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.value(metadata i32 %1, metadata !2752, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.value(metadata i32 0, metadata !2753, metadata !DIExpression()), !dbg !2754
  %3 = add i32 %1, -1, !dbg !2755
  %4 = icmp ult i32 %3, 3, !dbg !2755
  br i1 %4, label %5, label %8, !dbg !2755

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !2755
  %7 = load i32, i32* %6, align 4, !dbg !2755
  br label %8, !dbg !2755

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !2754
  call void @llvm.dbg.value(metadata i32 %9, metadata !2753, metadata !DIExpression()), !dbg !2754
  %10 = or i32 %9, %0, !dbg !2756
  call void @llvm.dbg.value(metadata i32 %10, metadata !2753, metadata !DIExpression()), !dbg !2754
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2757
  ret void, !dbg !2758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2763, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata i32 0, metadata !2764, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata i32 0, metadata !2766, metadata !DIExpression()), !dbg !2767
  %2 = icmp eq i8* %0, null, !dbg !2768
  br i1 %2, label %25, label %3, !dbg !2770

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2771
  call void @llvm.dbg.value(metadata i32 %4, metadata !2765, metadata !DIExpression()), !dbg !2767
  br label %5, !dbg !2772

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !2767
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !2767
  call void @llvm.dbg.value(metadata i32 %7, metadata !2766, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata i32 %6, metadata !2764, metadata !DIExpression()), !dbg !2767
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !2773
  %9 = load i8, i8* %8, align 1, !dbg !2773
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !2775

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !2766, metadata !DIExpression()), !dbg !2767
  br label %12, !dbg !2776

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2778
  br label %25, !dbg !2779

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !2767
  call void @llvm.dbg.value(metadata i32 %13, metadata !2766, metadata !DIExpression()), !dbg !2767
  %14 = add i32 %6, 2, !dbg !2780
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !2781
  %16 = add i32 %6, 1, !dbg !2782
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !2783
  %18 = load i8, i8* %17, align 1, !dbg !2783
  %19 = zext i8 %18 to i32, !dbg !2783
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #22, !dbg !2784
  %21 = load i8, i8* %17, align 1, !dbg !2785
  %22 = zext i8 %21 to i32, !dbg !2785
  %23 = add i32 %14, %22, !dbg !2786
  call void @llvm.dbg.value(metadata i32 %23, metadata !2764, metadata !DIExpression()), !dbg !2767
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #20, !dbg !2787
  br label %5, !dbg !2772, !llvm.loop !2788

25:                                               ; preds = %1, %11
  ret void, !dbg !2790
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !2791 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2796, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %1, metadata !2797, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i8* %2, metadata !2798, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %3, metadata !2799, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %4, metadata !2800, metadata !DIExpression()), !dbg !2807
  %7 = bitcast i32* %6 to i8*, !dbg !2808
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !2808
  %8 = add i32 %3, %1, !dbg !2809
  %9 = icmp ugt i32 %8, 160, !dbg !2811
  br i1 %9, label %59, label %10, !dbg !2812

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !2804, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 0, metadata !2802, metadata !DIExpression()), !dbg !2807
  %11 = icmp eq i32 %1, 0, !dbg !2813
  br i1 %11, label %41, label %12, !dbg !2816

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !2804, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %14, metadata !2802, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 0, metadata !2803, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 0, metadata !2801, metadata !DIExpression()), !dbg !2807
  store i32 0, i32* %6, align 4, !dbg !2817
  call void @llvm.dbg.value(metadata i32 0, metadata !2803, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %14, metadata !2802, metadata !DIExpression()), !dbg !2807
  %15 = icmp ult i32 %14, %1, !dbg !2820
  br i1 %15, label %16, label %29, !dbg !2822

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !2803, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %18, metadata !2802, metadata !DIExpression()), !dbg !2807
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !2823
  %20 = load i8, i8* %19, align 1, !dbg !2823
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !2825
  store i8 %20, i8* %21, align 1, !dbg !2826
  %22 = add nuw i32 %18, 1, !dbg !2827
  call void @llvm.dbg.value(metadata i32 %22, metadata !2802, metadata !DIExpression()), !dbg !2807
  %23 = add nuw nsw i32 %17, 1, !dbg !2828
  call void @llvm.dbg.value(metadata i32 %23, metadata !2803, metadata !DIExpression()), !dbg !2807
  %24 = icmp ult i32 %22, %1, !dbg !2820
  %25 = icmp ult i32 %17, 3, !dbg !2829
  %26 = select i1 %24, i1 %25, i1 false, !dbg !2829
  br i1 %26, label %16, label %27, !dbg !2822, !llvm.loop !2830

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !2832
  br label %29, !dbg !2832

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !2832
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !2833
  call void @llvm.dbg.value(metadata i32 %30, metadata !2801, metadata !DIExpression()), !dbg !2807
  %32 = bitcast i8* %13 to i32*, !dbg !2832
  store volatile i32 %30, i32* %32, align 4, !dbg !2832
  %33 = icmp eq i32 %31, 4, !dbg !2834
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !2836
  br i1 %36, label %37, label %38, !dbg !2836

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2837
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2839
  br label %38, !dbg !2840

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !2841
  call void @llvm.dbg.value(metadata i8* %39, metadata !2804, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %31, metadata !2802, metadata !DIExpression()), !dbg !2807
  %40 = icmp ult i32 %31, %1, !dbg !2813
  br i1 %40, label %12, label %41, !dbg !2816, !llvm.loop !2842

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2844
  call void @llvm.dbg.value(metadata i32 %42, metadata !2806, metadata !DIExpression()), !dbg !2807
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !2845
  %44 = icmp eq i32 %43, 0, !dbg !2845
  br i1 %44, label %46, label %45, !dbg !2847

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2848
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2850
  br label %46, !dbg !2851

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !2852
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !2853
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #22, !dbg !2854
  tail call fastcc void @sfc_MacWaitReady() #22, !dbg !2855
  tail call void @restore_interrupt_mask(i32 noundef %42) #20, !dbg !2856
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !2804, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2807
  call void @llvm.dbg.value(metadata i8* %2, metadata !2798, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 0, metadata !2802, metadata !DIExpression()), !dbg !2807
  %47 = icmp eq i32 %3, 0, !dbg !2857
  br i1 %47, label %59, label %48, !dbg !2860

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !2861
  call void @llvm.dbg.value(metadata i8* %49, metadata !2804, metadata !DIExpression()), !dbg !2807
  br label %50, !dbg !2860

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !2798, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i8* %52, metadata !2804, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %53, metadata !2802, metadata !DIExpression()), !dbg !2807
  %54 = load volatile i8, i8* %52, align 1, !dbg !2862
  store i8 %54, i8* %51, align 1, !dbg !2864
  %55 = add nuw i32 %53, 1, !dbg !2865
  call void @llvm.dbg.value(metadata i32 %55, metadata !2802, metadata !DIExpression()), !dbg !2807
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !2866
  call void @llvm.dbg.value(metadata i8* %56, metadata !2798, metadata !DIExpression()), !dbg !2807
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !2867
  call void @llvm.dbg.value(metadata i8* %57, metadata !2804, metadata !DIExpression()), !dbg !2807
  %58 = icmp eq i32 %55, %3, !dbg !2857
  br i1 %58, label %59, label %50, !dbg !2860, !llvm.loop !2868

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !2807
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !2870
  ret i32 %60, !dbg !2870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #5 section ".ramTEXT" !dbg !2871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2873, metadata !DIExpression()), !dbg !2875
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %2, metadata !2874, metadata !DIExpression()), !dbg !2875
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2877
  %4 = and i32 %3, 1, !dbg !2877
  %5 = or i32 %4, %0, !dbg !2879
  %6 = icmp eq i32 %5, 0, !dbg !2879
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !2879
  call void @llvm.dbg.value(metadata i32 %8, metadata !2874, metadata !DIExpression()), !dbg !2875
  %9 = or i32 %8, 8, !dbg !2880
  call void @llvm.dbg.value(metadata i32 %9, metadata !2874, metadata !DIExpression()), !dbg !2875
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2881
  ret void, !dbg !2882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #5 section ".ramTEXT" !dbg !2883 {
  tail call fastcc void @sfc_MacTrigger() #22, !dbg !2884
  tail call fastcc void @sfc_MacLeave() #22, !dbg !2885
  ret void, !dbg !2886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #5 section ".ramTEXT" !dbg !2887 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2891, metadata !DIExpression()), !dbg !2893
  call void @llvm.dbg.value(metadata i32 0, metadata !2892, metadata !DIExpression()), !dbg !2893
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2894
  call void @llvm.dbg.value(metadata i32 %1, metadata !2891, metadata !DIExpression()), !dbg !2893
  %2 = or i32 %1, 12, !dbg !2895
  call void @llvm.dbg.value(metadata i32 %2, metadata !2891, metadata !DIExpression()), !dbg !2893
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2896
  br label %3, !dbg !2897

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2898
  %5 = and i32 %4, 2, !dbg !2899
  %6 = icmp eq i32 %5, 0, !dbg !2900
  br i1 %6, label %3, label %7, !dbg !2897, !llvm.loop !2901

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2903
  %9 = and i32 %8, 1, !dbg !2904
  %10 = icmp eq i32 %9, 0, !dbg !2905
  br i1 %10, label %11, label %7, !dbg !2905, !llvm.loop !2906

11:                                               ; preds = %7
  ret void, !dbg !2908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #5 section ".ramTEXT" !dbg !2909 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2912
  call void @llvm.dbg.value(metadata i32 %1, metadata !2911, metadata !DIExpression()), !dbg !2913
  %2 = and i32 %1, -268435477, !dbg !2914
  call void @llvm.dbg.value(metadata i32 %2, metadata !2911, metadata !DIExpression()), !dbg !2913
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2915
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2916
  call void @llvm.dbg.value(metadata i32 %3, metadata !2911, metadata !DIExpression()), !dbg !2913
  %4 = and i32 %3, -9, !dbg !2917
  call void @llvm.dbg.value(metadata i32 %4, metadata !2911, metadata !DIExpression()), !dbg !2913
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2918
  ret void, !dbg !2919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #5 section ".ramTEXT" !dbg !2920 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !2923, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 0, metadata !2922, metadata !DIExpression()), !dbg !2924
  br label %1, !dbg !2925

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !2923, metadata !DIExpression()), !dbg !2924
  call void @llvm.dbg.value(metadata i32 %3, metadata !2922, metadata !DIExpression()), !dbg !2924
  %4 = bitcast i8* %2 to i32*, !dbg !2927
  store volatile i32 0, i32* %4, align 4, !dbg !2927
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !2930
  call void @llvm.dbg.value(metadata i8* %5, metadata !2923, metadata !DIExpression()), !dbg !2924
  %6 = add nuw nsw i32 %3, 1, !dbg !2931
  call void @llvm.dbg.value(metadata i32 %6, metadata !2922, metadata !DIExpression()), !dbg !2924
  %7 = icmp eq i32 %6, 40, !dbg !2932
  br i1 %7, label %8, label %1, !dbg !2925, !llvm.loop !2933

8:                                                ; preds = %1
  ret void, !dbg !2935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !2936 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2940, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata i32 %1, metadata !2941, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata i8* %2, metadata !2942, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata i32 %3, metadata !2943, metadata !DIExpression()), !dbg !2944
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #22, !dbg !2945
  ret i32 %5, !dbg !2946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !2947 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2951, metadata !DIExpression()), !dbg !2960
  call void @llvm.dbg.value(metadata i32 %1, metadata !2952, metadata !DIExpression()), !dbg !2960
  call void @llvm.dbg.value(metadata i8* %2, metadata !2953, metadata !DIExpression()), !dbg !2960
  call void @llvm.dbg.value(metadata i32 %3, metadata !2954, metadata !DIExpression()), !dbg !2960
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !2961
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #19, !dbg !2961
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !2955, metadata !DIExpression()), !dbg !2962
  %7 = add i32 %3, %1, !dbg !2963
  call void @llvm.dbg.value(metadata i32 %7, metadata !2959, metadata !DIExpression()), !dbg !2960
  %8 = icmp ugt i32 %7, 159, !dbg !2964
  br i1 %8, label %9, label %12, !dbg !2966

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 496) #20, !dbg !2967
  br label %11, !dbg !2967

11:                                               ; preds = %11, %9
  br label %11, !dbg !2967, !llvm.loop !2971

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #20, !dbg !2972
  %14 = icmp ne i8* %2, null, !dbg !2973
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !2975
  br i1 %16, label %17, label %20, !dbg !2975

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !2976
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !2978
  br label %20, !dbg !2979

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !2980
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #19, !dbg !2981
  ret i32 %21, !dbg !2982
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2983 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2987, metadata !DIExpression()), !dbg !2992
  call void @llvm.dbg.value(metadata i32 %1, metadata !2988, metadata !DIExpression()), !dbg !2992
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !2993
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #19, !dbg !2993
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !2989, metadata !DIExpression()), !dbg !2994
  %6 = bitcast i32* %4 to i8*, !dbg !2995
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !2995
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !2996
  call void @llvm.dbg.value(metadata i32 %7, metadata !2990, metadata !DIExpression()), !dbg !2992
  store i32 %7, i32* %4, align 4, !dbg !2997
  %8 = add i32 %1, 4, !dbg !2998
  call void @llvm.dbg.value(metadata i32 %8, metadata !2991, metadata !DIExpression()), !dbg !2992
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #20, !dbg !2999
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !3000
  call void @llvm.dbg.value(metadata i32* %4, metadata !2990, metadata !DIExpression(DW_OP_deref)), !dbg !2992
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #20, !dbg !3001
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !3002
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !3003
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #19, !dbg !3003
  ret i32 %12, !dbg !3004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !3005 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3007, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i32 %1, metadata !3008, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i8* %2, metadata !3009, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i32 %3, metadata !3010, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata i32 %4, metadata !3011, metadata !DIExpression()), !dbg !3014
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !3015
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #19, !dbg !3015
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !3012, metadata !DIExpression()), !dbg !3016
  %8 = add i32 %3, %1, !dbg !3017
  call void @llvm.dbg.value(metadata i32 %8, metadata !3013, metadata !DIExpression()), !dbg !3014
  %9 = icmp ugt i32 %8, 160, !dbg !3018
  br i1 %9, label %10, label %13, !dbg !3020

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 544) #20, !dbg !3021
  br label %12, !dbg !3021

12:                                               ; preds = %12, %10
  br label %12, !dbg !3021, !llvm.loop !3025

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #20, !dbg !3026
  %15 = icmp ne i8* %2, null, !dbg !3027
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !3029
  br i1 %17, label %18, label %21, !dbg !3029

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !3030
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !3032
  br label %21, !dbg !3033

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !3034
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #19, !dbg !3035
  ret i32 %22, !dbg !3036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3037 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #20, !dbg !3038
  ret void, !dbg !3039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3040 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #20, !dbg !3041
  ret void, !dbg !3042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #0 section ".ramTEXT" !dbg !3043 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3050
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !3050
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3047, metadata !DIExpression()), !dbg !3051
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #22, !dbg !3052
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3053
  %5 = load i8, i8* %4, align 1, !dbg !3053
  %6 = zext i8 %5 to i32, !dbg !3054
  %7 = shl nuw i32 %6, 24, !dbg !3055
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3056
  %9 = load i8, i8* %8, align 1, !dbg !3056
  %10 = zext i8 %9 to i32, !dbg !3057
  %11 = shl nuw nsw i32 %10, 16, !dbg !3058
  %12 = or i32 %11, %7, !dbg !3059
  call void @llvm.dbg.value(metadata i32 %12, metadata !3046, metadata !DIExpression()), !dbg !3060
  %13 = call i32 @sfc_GetDirectMode() #20, !dbg !3061
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !3062
  call void @llvm.dbg.value(metadata i32 1, metadata !3045, metadata !DIExpression()), !dbg !3060
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !3045, metadata !DIExpression()), !dbg !3060
  br label %15, !dbg !3063

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3045, metadata !DIExpression()), !dbg !3060
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !3049, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3060
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !3065
  %18 = load i8, i8* %17, align 4, !dbg !3065
  %19 = icmp eq i8 %18, %14, !dbg !3069
  br i1 %19, label %20, label %44, !dbg !3070

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !3071
  %22 = load i32, i32* %21, align 4, !dbg !3071
  %23 = icmp eq i32 %22, %12, !dbg !3072
  br i1 %23, label %24, label %44, !dbg !3073

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !3074
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3075
  %26 = add nsw i32 %16, -4, !dbg !3077
  %27 = icmp ult i32 %26, 5, !dbg !3077
  br i1 %27, label %42, label %28, !dbg !3079

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !3080
  %30 = icmp ult i32 %29, 3, !dbg !3080
  br i1 %30, label %42, label %31, !dbg !3082

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !3083
  %33 = icmp ult i32 %32, 3, !dbg !3083
  br i1 %33, label %34, label %40, !dbg !3085

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !3086
  %36 = icmp eq i32 %35, 1, !dbg !3086
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !3089
  %39 = select i1 %38, i32 49, i32 1, !dbg !3089
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !3090
  br label %42, !dbg !3091

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !3092
  br i1 %41, label %42, label %67, !dbg !3094

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !3095
  br label %67, !dbg !3096

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %45, metadata !3045, metadata !DIExpression()), !dbg !3060
  %46 = icmp eq i32 %45, 13, !dbg !3098
  br i1 %46, label %47, label %15, !dbg !3063, !llvm.loop !3099

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3101
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !3102
  %49 = icmp eq i32 %48, 255, !dbg !3104
  br i1 %49, label %50, label %67, !dbg !3105

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #20, !dbg !3106
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3108
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3049, metadata !DIExpression()), !dbg !3060
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !3109
  %53 = load i8, i8* %52, align 4, !dbg !3109
  %54 = load i8, i8* %2, align 1, !dbg !3111
  %55 = icmp eq i8 %53, %54, !dbg !3112
  br i1 %55, label %56, label %60, !dbg !3113

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3049, metadata !DIExpression()), !dbg !3060
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !3114
  %58 = load i32, i32* %57, align 4, !dbg !3114
  %59 = icmp eq i32 %58, %12, !dbg !3115
  br i1 %59, label %67, label %60, !dbg !3116

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #20, !dbg !3117
  %61 = load i8, i8* %2, align 1, !dbg !3119
  %62 = zext i8 %61 to i32, !dbg !3119
  %63 = load i8, i8* %4, align 1, !dbg !3119
  %64 = zext i8 %63 to i32, !dbg !3119
  %65 = load i8, i8* %8, align 1, !dbg !3119
  %66 = zext i8 %65 to i32, !dbg !3119
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #20, !dbg !3119
  br label %67, !dbg !3120

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !3060
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !3060
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !3121
  ret i32 %69, !dbg !3121
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3122 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3126, metadata !DIExpression()), !dbg !3130
  call void @llvm.dbg.value(metadata i32 %1, metadata !3127, metadata !DIExpression()), !dbg !3130
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !3131
  call void @llvm.dbg.value(metadata i8 -97, metadata !3128, metadata !DIExpression()), !dbg !3130
  store i8 -97, i8* %3, align 1, !dbg !3132
  call void @llvm.dbg.value(metadata i8* %3, metadata !3128, metadata !DIExpression(DW_OP_deref)), !dbg !3130
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #20, !dbg !3133
  call void @llvm.dbg.value(metadata i32 %4, metadata !3129, metadata !DIExpression()), !dbg !3130
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !3134
  ret i32 %4, !dbg !3135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3140, metadata !DIExpression()), !dbg !3141
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #20, !dbg !3142
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !3144
  br i1 %3, label %5, label %4, !dbg !3145

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !3146
  br label %5, !dbg !3148

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #22, !dbg !3149
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #22, !dbg !3150
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !3151

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #20, !dbg !3152
  br label %17, !dbg !3155

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !3156
  %10 = icmp eq i32 %9, 32, !dbg !3160
  br i1 %10, label %11, label %12, !dbg !3161

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #20, !dbg !3162
  br label %17, !dbg !3164

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #20, !dbg !3165
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #20, !dbg !3167
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 352) #20, !dbg !3170
  br label %16, !dbg !3170

16:                                               ; preds = %14, %16
  br label %16, !dbg !3170, !llvm.loop !3174

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !3175
  ret void, !dbg !3176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3179, metadata !DIExpression()), !dbg !3181
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !3182

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3183
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !3186

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3187
  %6 = icmp eq i32 %5, 49, !dbg !3191
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !3192
  call void @llvm.dbg.value(metadata i8* %7, metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3193

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3194

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #20, !dbg !3197
  call void @llvm.dbg.value(metadata i8* %10, metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3200

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !3201
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !3203

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3204
  %15 = icmp eq i32 %14, 49, !dbg !3208
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3209
  call void @llvm.dbg.value(metadata i8* %16, metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3210

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3211

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #20, !dbg !3214
  call void @llvm.dbg.value(metadata i8* %19, metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3217

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !3218
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !3220

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3221
  %24 = icmp eq i32 %23, 49, !dbg !3225
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3226
  call void @llvm.dbg.value(metadata i8* %25, metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3227

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3228

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #20, !dbg !3231
  call void @llvm.dbg.value(metadata i8* %28, metadata !3180, metadata !DIExpression()), !dbg !3181
  br label %35, !dbg !3234

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 268) #20, !dbg !3235
  br label %31, !dbg !3235

31:                                               ; preds = %31, %29
  br label %31, !dbg !3235, !llvm.loop !3238

32:                                               ; preds = %2
  br label %35, !dbg !3239

33:                                               ; preds = %11
  br label %35, !dbg !3239

34:                                               ; preds = %20
  br label %35, !dbg !3239

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !3240
  call void @llvm.dbg.value(metadata i8* %36, metadata !3180, metadata !DIExpression()), !dbg !3181
  tail call void @sfc_Command_List(i8* noundef %36) #20, !dbg !3239
  ret void, !dbg !3241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #0 section ".ramTEXT" !dbg !3242 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3248
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !3248
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3246, metadata !DIExpression()), !dbg !3249
  %3 = tail call i32 @sfc_getMaxGPRamSize() #20, !dbg !3250
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !3251
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3252
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #22, !dbg !3253
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3254
  %6 = load i8, i8* %5, align 1, !dbg !3254
  %7 = zext i8 %6 to i32, !dbg !3255
  %8 = shl nuw i32 %7, 24, !dbg !3256
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3257
  %10 = load i8, i8* %9, align 1, !dbg !3257
  %11 = zext i8 %10 to i32, !dbg !3258
  %12 = shl nuw nsw i32 %11, 16, !dbg !3259
  %13 = or i32 %12, %8, !dbg !3260
  call void @llvm.dbg.value(metadata i32 %13, metadata !3245, metadata !DIExpression()), !dbg !3261
  %14 = load i8, i8* %2, align 1, !dbg !3262
  %15 = zext i8 %14 to i32, !dbg !3262
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #20, !dbg !3262
  call void @llvm.dbg.value(metadata i32 1, metadata !3244, metadata !DIExpression()), !dbg !3261
  br label %16, !dbg !3263

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3244, metadata !DIExpression()), !dbg !3261
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !3265
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !3247, metadata !DIExpression()), !dbg !3261
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !3268
  %20 = load i8, i8* %19, align 4, !dbg !3268
  %21 = load i8, i8* %2, align 1, !dbg !3270
  %22 = icmp eq i8 %20, %21, !dbg !3271
  br i1 %22, label %23, label %43, !dbg !3272

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !3273
  %25 = load i32, i32* %24, align 4, !dbg !3273
  %26 = icmp eq i32 %25, %13, !dbg !3274
  br i1 %26, label %27, label %43, !dbg !3275

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !3276
  %29 = load i8*, i8** %28, align 4, !dbg !3276
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %29) #20, !dbg !3276
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3278
  %30 = add nsw i32 %17, -4, !dbg !3279
  %31 = icmp ult i32 %30, 5, !dbg !3279
  br i1 %31, label %41, label %32, !dbg !3281

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !3282
  %34 = icmp ult i32 %33, 3, !dbg !3282
  br i1 %34, label %41, label %35, !dbg !3284

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !3285
  %37 = icmp ult i32 %36, 3, !dbg !3285
  br i1 %37, label %41, label %38, !dbg !3287

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !3288
  br i1 %39, label %40, label %43, !dbg !3290

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !3291
  call void @llvm.dbg.value(metadata i32 %44, metadata !3244, metadata !DIExpression()), !dbg !3261
  br label %66, !dbg !3293

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !3294
  br label %43, !dbg !3295

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !3295
  call void @llvm.dbg.value(metadata i32 %44, metadata !3244, metadata !DIExpression()), !dbg !3261
  %45 = icmp eq i32 %44, 13, !dbg !3296
  br i1 %45, label %46, label %16, !dbg !3263, !llvm.loop !3297

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !3299
  %48 = icmp eq i32 %47, 255, !dbg !3301
  br i1 %48, label %49, label %66, !dbg !3293

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #20, !dbg !3302
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3304
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3247, metadata !DIExpression()), !dbg !3261
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !3305
  %52 = load i8, i8* %51, align 4, !dbg !3305
  %53 = load i8, i8* %2, align 1, !dbg !3307
  %54 = icmp eq i8 %52, %53, !dbg !3308
  br i1 %54, label %55, label %59, !dbg !3309

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3247, metadata !DIExpression()), !dbg !3261
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !3310
  %57 = load i32, i32* %56, align 4, !dbg !3310
  %58 = icmp eq i32 %57, %13, !dbg !3311
  br i1 %58, label %71, label %59, !dbg !3312

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #20, !dbg !3313
  %60 = load i8, i8* %2, align 1, !dbg !3315
  %61 = zext i8 %60 to i32, !dbg !3315
  %62 = load i8, i8* %5, align 1, !dbg !3315
  %63 = zext i8 %62 to i32, !dbg !3315
  %64 = load i8, i8* %9, align 1, !dbg !3315
  %65 = zext i8 %64 to i32, !dbg !3315
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #20, !dbg !3315
  br label %66, !dbg !3316

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3317
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !3317
  br i1 %68, label %69, label %71, !dbg !3319

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !3320
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %70) #20, !dbg !3320
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3322
  br label %71, !dbg !3323

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3261
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !3324
  ret void, !dbg !3324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3325 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3327, metadata !DIExpression()), !dbg !3332
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3333
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3333
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3330, metadata !DIExpression()), !dbg !3334
  tail call void @sfc_Init(i32 noundef %0) #20, !dbg !3335
  %4 = tail call i32 @sfc_getMaxGPRamSize() #20, !dbg !3336
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !3337
  tail call fastcc void @flash_reset() #22, !dbg !3338
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3339
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #22, !dbg !3340
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3341
  %7 = load i8, i8* %6, align 1, !dbg !3341
  %8 = zext i8 %7 to i32, !dbg !3342
  %9 = shl nuw i32 %8, 24, !dbg !3343
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3344
  %11 = load i8, i8* %10, align 1, !dbg !3344
  %12 = zext i8 %11 to i32, !dbg !3345
  %13 = shl nuw nsw i32 %12, 16, !dbg !3346
  %14 = or i32 %13, %9, !dbg !3347
  call void @llvm.dbg.value(metadata i32 %14, metadata !3329, metadata !DIExpression()), !dbg !3332
  %15 = load i8, i8* %3, align 1, !dbg !3348
  %16 = zext i8 %15 to i32, !dbg !3348
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #20, !dbg !3348
  call void @llvm.dbg.value(metadata i32 1, metadata !3328, metadata !DIExpression()), !dbg !3332
  br label %17, !dbg !3349

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !3328, metadata !DIExpression()), !dbg !3332
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !3351
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !3331, metadata !DIExpression()), !dbg !3332
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !3354
  %21 = load i8, i8* %20, align 4, !dbg !3354
  %22 = load i8, i8* %3, align 1, !dbg !3356
  %23 = icmp eq i8 %21, %22, !dbg !3357
  br i1 %23, label %24, label %31, !dbg !3358

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !3359
  %26 = load i32, i32* %25, align 4, !dbg !3359
  %27 = icmp eq i32 %26, %14, !dbg !3360
  br i1 %27, label %28, label %31, !dbg !3361

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !3362
  %30 = load i8*, i8** %29, align 4, !dbg !3362
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %30) #20, !dbg !3362
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3364
  br label %31, !dbg !3365

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !3366
  call void @llvm.dbg.value(metadata i32 %32, metadata !3328, metadata !DIExpression()), !dbg !3332
  %33 = icmp eq i32 %32, 13, !dbg !3367
  br i1 %33, label %34, label %17, !dbg !3349, !llvm.loop !3368

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3370
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !3370
  br i1 %36, label %37, label %39, !dbg !3372

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !3373
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %38) #20, !dbg !3373
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3375
  br label %39, !dbg !3376

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3377
  ret void, !dbg !3377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #0 section ".ramTEXT" !dbg !3378 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #20, !dbg !3379
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !3380
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #20, !dbg !3381
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !3382
  ret void, !dbg !3383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3384 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3388, metadata !DIExpression()), !dbg !3391
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3392
  call void @llvm.dbg.value(metadata i8 0, metadata !3390, metadata !DIExpression()), !dbg !3391
  store i8 0, i8* %2, align 1, !dbg !3393
  call void @llvm.dbg.value(metadata i32 0, metadata !3389, metadata !DIExpression()), !dbg !3391
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !3389, metadata !DIExpression()), !dbg !3391
  %5 = icmp sgt i32 %4, 0, !dbg !3394
  br i1 %5, label %6, label %18, !dbg !3397

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3389, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i8* %2, metadata !3390, metadata !DIExpression(DW_OP_deref)), !dbg !3391
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #22, !dbg !3398
  %9 = icmp slt i32 %8, 0, !dbg !3401
  br i1 %9, label %18, label %10, !dbg !3402

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !3403
  call void @llvm.dbg.value(metadata i8 %11, metadata !3390, metadata !DIExpression()), !dbg !3391
  %12 = and i8 %11, 1, !dbg !3405
  %13 = icmp eq i8 %12, 0, !dbg !3405
  br i1 %13, label %14, label %15, !dbg !3406

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3407
  ret i32 0, !dbg !3408

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !3410
  %16 = add nuw nsw i32 %7, 1, !dbg !3411
  call void @llvm.dbg.value(metadata i32 %16, metadata !3389, metadata !DIExpression()), !dbg !3391
  %17 = icmp eq i32 %16, %4, !dbg !3394
  br i1 %17, label %18, label %6, !dbg !3397, !llvm.loop !3412

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #21, !dbg !3414
  unreachable, !dbg !3414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3415 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3419, metadata !DIExpression()), !dbg !3422
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3423
  call void @llvm.dbg.value(metadata i8 5, metadata !3421, metadata !DIExpression()), !dbg !3422
  store i8 5, i8* %2, align 1, !dbg !3424
  call void @llvm.dbg.value(metadata i8* %2, metadata !3421, metadata !DIExpression(DW_OP_deref)), !dbg !3422
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #20, !dbg !3425
  call void @llvm.dbg.value(metadata i32 %3, metadata !3420, metadata !DIExpression()), !dbg !3422
  %4 = icmp ne i32 %3, 1, !dbg !3426
  %5 = sext i1 %4 to i32, !dbg !3422
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3428
  ret i32 %5, !dbg !3428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3429 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3431, metadata !DIExpression()), !dbg !3435
  call void @llvm.dbg.value(metadata i32 %1, metadata !3432, metadata !DIExpression()), !dbg !3435
  %4 = bitcast i32* %3 to i8*, !dbg !3436
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !3436
  call void @llvm.dbg.value(metadata i32 0, metadata !3433, metadata !DIExpression()), !dbg !3435
  store i32 144, i32* %3, align 4, !dbg !3437
  call void @llvm.dbg.value(metadata i8 undef, metadata !3433, metadata !DIExpression()), !dbg !3435
  call void @llvm.dbg.value(metadata i32* %3, metadata !3433, metadata !DIExpression(DW_OP_deref)), !dbg !3435
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #20, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %5, metadata !3434, metadata !DIExpression()), !dbg !3435
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !3439
  ret i32 %5, !dbg !3440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3441 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3443, metadata !DIExpression()), !dbg !3447
  call void @llvm.dbg.value(metadata i32 %1, metadata !3444, metadata !DIExpression()), !dbg !3447
  %4 = bitcast i32* %3 to i8*, !dbg !3448
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !3448
  call void @llvm.dbg.value(metadata i32 0, metadata !3445, metadata !DIExpression()), !dbg !3447
  store i32 144, i32* %3, align 4, !dbg !3449
  call void @llvm.dbg.value(metadata i8 undef, metadata !3445, metadata !DIExpression()), !dbg !3447
  call void @llvm.dbg.value(metadata i32* %3, metadata !3445, metadata !DIExpression(DW_OP_deref)), !dbg !3447
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #20, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %5, metadata !3446, metadata !DIExpression()), !dbg !3447
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !3451
  ret i32 %5, !dbg !3452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3453 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3457, metadata !DIExpression()), !dbg !3462
  call void @llvm.dbg.value(metadata i32 %1, metadata !3458, metadata !DIExpression()), !dbg !3462
  call void @llvm.dbg.value(metadata i32 %2, metadata !3459, metadata !DIExpression()), !dbg !3462
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !3463
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !3463
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !3460, metadata !DIExpression()), !dbg !3464
  %6 = icmp eq i32 %2, 0, !dbg !3465
  br i1 %6, label %18, label %7, !dbg !3467

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #22, !dbg !3468
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !3470
  store i8 3, i8* %5, align 1, !dbg !3471
  %9 = lshr i32 %1, 16, !dbg !3472
  %10 = trunc i32 %9 to i8, !dbg !3473
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !3474
  store i8 %10, i8* %11, align 1, !dbg !3475
  %12 = lshr i32 %1, 8, !dbg !3476
  %13 = trunc i32 %12 to i8, !dbg !3477
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !3478
  store i8 %13, i8* %14, align 1, !dbg !3479
  %15 = trunc i32 %1 to i8, !dbg !3480
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !3481
  store i8 %15, i8* %16, align 1, !dbg !3482
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #20, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %17, metadata !3461, metadata !DIExpression()), !dbg !3462
  br label %18, !dbg !3484

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !3462
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !3485
  ret i32 %19, !dbg !3485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3486 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3490, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 %1, metadata !3491, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 %2, metadata !3492, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 %3, metadata !3493, metadata !DIExpression()), !dbg !3499
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !3500
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #19, !dbg !3500
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !3494, metadata !DIExpression()), !dbg !3501
  %7 = icmp eq i32 %2, 0, !dbg !3502
  br i1 %7, label %33, label %8, !dbg !3504

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #22, !dbg !3505
  store i8 11, i8* %6, align 1, !dbg !3507
  %10 = lshr i32 %1, 16, !dbg !3508
  %11 = trunc i32 %10 to i8, !dbg !3509
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !3510
  store i8 %11, i8* %12, align 1, !dbg !3511
  %13 = lshr i32 %1, 8, !dbg !3512
  %14 = trunc i32 %13 to i8, !dbg !3513
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !3514
  store i8 %14, i8* %15, align 1, !dbg !3515
  %16 = trunc i32 %1 to i8, !dbg !3516
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !3517
  store i8 %16, i8* %17, align 1, !dbg !3518
  call void @llvm.dbg.value(metadata i32 4, metadata !3496, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 0, metadata !3498, metadata !DIExpression()), !dbg !3499
  %18 = icmp sgt i32 %3, 0, !dbg !3519
  br i1 %18, label %19, label %30, !dbg !3522

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !3522
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !3522
  br label %22, !dbg !3522

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !3498, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 undef, metadata !3496, metadata !DIExpression()), !dbg !3499
  %24 = add nuw nsw i32 %23, 4, !dbg !3523
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !3525
  store i8 0, i8* %25, align 1, !dbg !3526
  call void @llvm.dbg.value(metadata i32 undef, metadata !3496, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3499
  %26 = add nuw nsw i32 %23, 1, !dbg !3527
  call void @llvm.dbg.value(metadata i32 %26, metadata !3498, metadata !DIExpression()), !dbg !3499
  %27 = icmp eq i32 %23, %21, !dbg !3528
  br i1 %27, label %28, label %22, !dbg !3522, !llvm.loop !3529

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !3522
  br label %30, !dbg !3531

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !3499
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #20, !dbg !3531
  call void @llvm.dbg.value(metadata i32 %32, metadata !3497, metadata !DIExpression()), !dbg !3499
  br label %33, !dbg !3532

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !3499
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #19, !dbg !3533
  ret i32 %34, !dbg !3533
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3534 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3536, metadata !DIExpression()), !dbg !3539
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3540
  call void @llvm.dbg.value(metadata i8 53, metadata !3538, metadata !DIExpression()), !dbg !3539
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3541
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !3543

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !3538, metadata !DIExpression()), !dbg !3539
  store i8 53, i8* %2, align 1, !dbg !3544
  br label %10, !dbg !3546

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !3538, metadata !DIExpression()), !dbg !3539
  store i8 43, i8* %2, align 1, !dbg !3547
  br label %10, !dbg !3550

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !3538, metadata !DIExpression()), !dbg !3539
  store i8 112, i8* %2, align 1, !dbg !3551
  br label %10, !dbg !3554

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #20, !dbg !3555
  call void @llvm.dbg.value(metadata i8 %8, metadata !3538, metadata !DIExpression()), !dbg !3539
  store i8 %8, i8* %2, align 1, !dbg !3558
  br label %10, !dbg !3559

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0)) #20, !dbg !3560
  call void @llvm.dbg.value(metadata i8 5, metadata !3538, metadata !DIExpression()), !dbg !3539
  store i8 5, i8* %2, align 1, !dbg !3562
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !3538, metadata !DIExpression(DW_OP_deref)), !dbg !3539
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #20, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %11, metadata !3537, metadata !DIExpression()), !dbg !3539
  %12 = icmp ne i32 %11, 1, !dbg !3564
  %13 = sext i1 %12 to i32, !dbg !3539
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3566
  ret i32 %13, !dbg !3566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3567 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3570
  call void @llvm.dbg.value(metadata i8 0, metadata !3569, metadata !DIExpression()), !dbg !3571
  store i8 0, i8* %1, align 1, !dbg !3572
  call void @llvm.dbg.value(metadata i8* %1, metadata !3569, metadata !DIExpression(DW_OP_deref)), !dbg !3571
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #22, !dbg !3573
  %3 = icmp slt i32 %2, 0, !dbg !3575
  br i1 %3, label %9, label %4, !dbg !3576

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3577
  call void @llvm.dbg.value(metadata i8 %5, metadata !3569, metadata !DIExpression()), !dbg !3571
  %6 = and i8 %5, 28, !dbg !3579
  %7 = icmp eq i8 %6, 0, !dbg !3580
  br i1 %7, label %9, label %8, !dbg !3581

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !3569, metadata !DIExpression()), !dbg !3571
  store i8 0, i8* %1, align 1, !dbg !3582
  call void @llvm.dbg.value(metadata i8* %1, metadata !3569, metadata !DIExpression(DW_OP_deref)), !dbg !3571
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #22, !dbg !3584
  br label %9, !dbg !3585

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !3571
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3586
  ret i32 %10, !dbg !3586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3587 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3589, metadata !DIExpression()), !dbg !3592
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3593
  call void @llvm.dbg.value(metadata i8 1, metadata !3591, metadata !DIExpression()), !dbg !3592
  store i8 1, i8* %2, align 1, !dbg !3594
  call void @llvm.dbg.value(metadata i8* %2, metadata !3591, metadata !DIExpression(DW_OP_deref)), !dbg !3592
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #20, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %3, metadata !3590, metadata !DIExpression()), !dbg !3592
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !3596
  ret void, !dbg !3596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3597 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3600
  call void @llvm.dbg.value(metadata i8 0, metadata !3599, metadata !DIExpression()), !dbg !3601
  store i8 0, i8* %1, align 1, !dbg !3602
  call void @llvm.dbg.value(metadata i8* %1, metadata !3599, metadata !DIExpression(DW_OP_deref)), !dbg !3601
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #22, !dbg !3603
  %3 = icmp slt i32 %2, 0, !dbg !3605
  br i1 %3, label %7, label %4, !dbg !3606

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3607
  call void @llvm.dbg.value(metadata i8 %5, metadata !3599, metadata !DIExpression()), !dbg !3601
  %6 = or i8 %5, 28, !dbg !3607
  call void @llvm.dbg.value(metadata i8 %6, metadata !3599, metadata !DIExpression()), !dbg !3601
  store i8 %6, i8* %1, align 1, !dbg !3607
  call void @llvm.dbg.value(metadata i8* %1, metadata !3599, metadata !DIExpression(DW_OP_deref)), !dbg !3601
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #22, !dbg !3608
  br label %7, !dbg !3609

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !3601
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3610
  ret i32 %8, !dbg !3610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3611 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3614
  call void @llvm.dbg.value(metadata i8 6, metadata !3613, metadata !DIExpression()), !dbg !3615
  store i8 6, i8* %1, align 1, !dbg !3616
  call void @llvm.dbg.value(metadata i8* %1, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3615
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #20, !dbg !3617
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3618
  ret i32 %2, !dbg !3619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3620 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3623
  call void @llvm.dbg.value(metadata i8 4, metadata !3622, metadata !DIExpression()), !dbg !3624
  store i8 4, i8* %1, align 1, !dbg !3625
  call void @llvm.dbg.value(metadata i8* %1, metadata !3622, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #20, !dbg !3626
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !3627
  ret i32 %2, !dbg !3628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3629 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3633, metadata !DIExpression()), !dbg !3637
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3638
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3638
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3634, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i32 0, metadata !3636, metadata !DIExpression()), !dbg !3637
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !3640
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !3642
  br label %5, !dbg !3643

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %6, metadata !3636, metadata !DIExpression()), !dbg !3637
  %7 = icmp eq i32 %6, -121, !dbg !3646
  br i1 %7, label %5, label %8, !dbg !3647, !llvm.loop !3648

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %9, metadata !3635, metadata !DIExpression()), !dbg !3637
  store i8 -40, i8* %3, align 1, !dbg !3651
  %10 = lshr i32 %0, 16, !dbg !3652
  %11 = trunc i32 %10 to i8, !dbg !3653
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3654
  store i8 %11, i8* %12, align 1, !dbg !3655
  %13 = lshr i32 %0, 8, !dbg !3656
  %14 = trunc i32 %13 to i8, !dbg !3657
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3658
  store i8 %14, i8* %15, align 1, !dbg !3659
  %16 = trunc i32 %0 to i8, !dbg !3660
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3661
  store i8 %16, i8* %17, align 1, !dbg !3662
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !3663
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #20, !dbg !3664
  call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !3665
  br label %19, !dbg !3666

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %20, metadata !3636, metadata !DIExpression()), !dbg !3637
  %21 = icmp eq i32 %20, -121, !dbg !3669
  br i1 %21, label %19, label %22, !dbg !3670, !llvm.loop !3671

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #22, !dbg !3673
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3674
  ret i32 0, !dbg !3674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3675 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3677, metadata !DIExpression()), !dbg !3681
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3682
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3682
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3678, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 0, metadata !3680, metadata !DIExpression()), !dbg !3681
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !3684
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !3686
  br label %5, !dbg !3687

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %6, metadata !3680, metadata !DIExpression()), !dbg !3681
  %7 = icmp eq i32 %6, -121, !dbg !3690
  br i1 %7, label %5, label %8, !dbg !3691, !llvm.loop !3692

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %9, metadata !3679, metadata !DIExpression()), !dbg !3681
  store i8 82, i8* %3, align 1, !dbg !3695
  %10 = lshr i32 %0, 16, !dbg !3696
  %11 = trunc i32 %10 to i8, !dbg !3697
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3698
  store i8 %11, i8* %12, align 1, !dbg !3699
  %13 = lshr i32 %0, 8, !dbg !3700
  %14 = trunc i32 %13 to i8, !dbg !3701
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3702
  store i8 %14, i8* %15, align 1, !dbg !3703
  %16 = trunc i32 %0 to i8, !dbg !3704
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3705
  store i8 %16, i8* %17, align 1, !dbg !3706
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !3707
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #20, !dbg !3708
  br label %19, !dbg !3709

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3710
  call void @llvm.dbg.value(metadata i32 %20, metadata !3680, metadata !DIExpression()), !dbg !3681
  %21 = icmp eq i32 %20, -121, !dbg !3712
  br i1 %21, label %19, label %22, !dbg !3713, !llvm.loop !3714

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !3716
  %23 = call i32 @flash_write_disable() #22, !dbg !3717
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3718
  ret i32 0, !dbg !3718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3719 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3721, metadata !DIExpression()), !dbg !3725
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3726
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3726
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3722, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i32 0, metadata !3724, metadata !DIExpression()), !dbg !3725
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !3728
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !3730
  br label %5, !dbg !3731

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3732
  call void @llvm.dbg.value(metadata i32 %6, metadata !3724, metadata !DIExpression()), !dbg !3725
  %7 = icmp eq i32 %6, -121, !dbg !3734
  br i1 %7, label %5, label %8, !dbg !3735, !llvm.loop !3736

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3738
  call void @llvm.dbg.value(metadata i32 %9, metadata !3723, metadata !DIExpression()), !dbg !3725
  store i8 32, i8* %3, align 1, !dbg !3739
  %10 = lshr i32 %0, 16, !dbg !3740
  %11 = trunc i32 %10 to i8, !dbg !3741
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3742
  store i8 %11, i8* %12, align 1, !dbg !3743
  %13 = lshr i32 %0, 8, !dbg !3744
  %14 = trunc i32 %13 to i8, !dbg !3745
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3746
  store i8 %14, i8* %15, align 1, !dbg !3747
  %16 = trunc i32 %0 to i8, !dbg !3748
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3749
  store i8 %16, i8* %17, align 1, !dbg !3750
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !3751
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #20, !dbg !3752
  call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !3753
  br label %19, !dbg !3754

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3755
  call void @llvm.dbg.value(metadata i32 %20, metadata !3724, metadata !DIExpression()), !dbg !3725
  %21 = icmp eq i32 %20, -121, !dbg !3757
  br i1 %21, label %19, label %22, !dbg !3758, !llvm.loop !3759

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #22, !dbg !3761
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3762
  ret i32 0, !dbg !3762
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #0 section ".ramTEXT" !dbg !3763 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3766
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !3766
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3765, metadata !DIExpression()), !dbg !3767
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !3768
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !3770
  %4 = tail call i32 @flash_write_enable() #22, !dbg !3771
  %5 = tail call i32 @flash_unprotect() #22, !dbg !3772
  store i8 96, i8* %2, align 1, !dbg !3773
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #20, !dbg !3774
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #22, !dbg !3775
  %8 = call i32 @flash_write_disable() #22, !dbg !3777
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3778
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !3779
  ret i32 0, !dbg !3779
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3784, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 %1, metadata !3785, metadata !DIExpression()), !dbg !3786
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !3785, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 %0, metadata !3784, metadata !DIExpression()), !dbg !3786
  br i1 %3, label %4, label %14, !dbg !3787

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3785, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 %6, metadata !3784, metadata !DIExpression()), !dbg !3786
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #22, !dbg !3788
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3791
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !3792
  %10 = load i32, i32* %9, align 4, !dbg !3792
  %11 = add i32 %10, %6, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %11, metadata !3784, metadata !DIExpression()), !dbg !3786
  %12 = sub i32 %5, %10, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %12, metadata !3785, metadata !DIExpression()), !dbg !3786
  %13 = icmp sgt i32 %12, 0, !dbg !3795
  br i1 %13, label %4, label %14, !dbg !3796, !llvm.loop !3797

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !3799
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3800 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3804, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %1, metadata !3805, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %2, metadata !3806, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 0, metadata !3809, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 0, metadata !3810, metadata !DIExpression()), !dbg !3818
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !3819
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #19, !dbg !3819
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !3812, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %1, metadata !3815, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i8* %0, metadata !3816, metadata !DIExpression()), !dbg !3818
  %6 = icmp eq i32 %2, 0, !dbg !3821
  br i1 %6, label %86, label %7, !dbg !3823

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !3824
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3826
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !3827
  %11 = load i32, i32* %10, align 4, !dbg !3827
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !3828
  %13 = load i32, i32* %12, align 4, !dbg !3828
  %14 = mul i32 %13, %11, !dbg !3829
  %15 = icmp ugt i32 %8, %14, !dbg !3830
  br i1 %15, label %86, label %16, !dbg !3831

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #22, !dbg !3832
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %19, metadata !3813, metadata !DIExpression()), !dbg !3818
  %20 = icmp eq i32 %19, -121, !dbg !3836
  br i1 %20, label %18, label %21, !dbg !3837, !llvm.loop !3838

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !3841
  %22 = tail call i32 @sfc_GetDirectMode() #20, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %22, metadata !3811, metadata !DIExpression()), !dbg !3818
  %23 = icmp eq i32 %22, 2, !dbg !3843
  br i1 %23, label %24, label %29, !dbg !3845

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3846
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !3847
  %27 = load i8, i8* %26, align 4, !dbg !3847
  %28 = icmp eq i8 %27, 0, !dbg !3846
  br i1 %28, label %29, label %30, !dbg !3848

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !3849
  store i8 %31, i8* %5, align 1, !dbg !3849
  call void @llvm.dbg.value(metadata i32 undef, metadata !3807, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i8* %0, metadata !3816, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %1, metadata !3815, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %2, metadata !3806, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 0, metadata !3810, metadata !DIExpression()), !dbg !3818
  %32 = icmp sgt i32 %2, 0, !dbg !3850
  br i1 %32, label %33, label %41, !dbg !3851

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !3852
  %35 = urem i32 %1, %34, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %35, metadata !3807, metadata !DIExpression()), !dbg !3818
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !3851

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !3818
  br label %81, !dbg !3854

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !3855
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !3816, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %46, metadata !3815, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %47, metadata !3806, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %48, metadata !3807, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %49, metadata !3810, metadata !DIExpression()), !dbg !3818
  %50 = sub i32 %44, %48, !dbg !3855
  %51 = icmp ugt i32 %47, %50, !dbg !3855
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !3855
  call void @llvm.dbg.value(metadata i32 %52, metadata !3808, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 0, metadata !3807, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i8* %45, metadata !3817, metadata !DIExpression()), !dbg !3818
  %53 = lshr i32 %46, 16, !dbg !3857
  %54 = trunc i32 %53 to i8, !dbg !3858
  store i8 %54, i8* %36, align 1, !dbg !3859
  %55 = lshr i32 %46, 8, !dbg !3860
  %56 = trunc i32 %55 to i8, !dbg !3861
  store i8 %56, i8* %37, align 1, !dbg !3862
  %57 = trunc i32 %46 to i8, !dbg !3863
  store i8 %57, i8* %38, align 1, !dbg !3864
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !3865
  %59 = call i32 @flash_write_enable() #22, !dbg !3867
  %60 = call i32 @save_and_set_interrupt_mask() #20, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %60, metadata !3814, metadata !DIExpression()), !dbg !3818
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !3869
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #20, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %61, metadata !3809, metadata !DIExpression()), !dbg !3818
  call void @restore_interrupt_mask(i32 noundef %60) #20, !dbg !3871
  br label %62, !dbg !3872

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !3873
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #20, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %64, metadata !3813, metadata !DIExpression()), !dbg !3818
  %65 = icmp eq i32 %64, 0, !dbg !3876
  br i1 %65, label %62, label %66, !dbg !3877, !llvm.loop !3878

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !3880
  br i1 %67, label %68, label %73, !dbg !3882

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %69, metadata !3810, metadata !DIExpression()), !dbg !3818
  %70 = icmp ult i32 %61, %52, !dbg !3885
  br i1 %70, label %71, label %73, !dbg !3887

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #22, !dbg !3888
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #21, !dbg !3890
  unreachable, !dbg !3890

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !3818
  call void @llvm.dbg.value(metadata i32 %74, metadata !3810, metadata !DIExpression()), !dbg !3818
  %75 = sub i32 %47, %52, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %75, metadata !3806, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !3815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3818
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !3816, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3818
  call void @llvm.dbg.value(metadata i32 0, metadata !3807, metadata !DIExpression()), !dbg !3818
  %76 = icmp sgt i32 %75, 0, !dbg !3850
  br i1 %76, label %77, label %41, !dbg !3851, !llvm.loop !3892

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !3894
  call void @llvm.dbg.value(metadata i8* %78, metadata !3816, metadata !DIExpression()), !dbg !3818
  %79 = add i32 %52, %46, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %79, metadata !3815, metadata !DIExpression()), !dbg !3818
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !3855
  br label %43, !dbg !3851

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %82, metadata !3813, metadata !DIExpression()), !dbg !3818
  %83 = icmp eq i32 %82, -121, !dbg !3898
  br i1 %83, label %81, label %84, !dbg !3899, !llvm.loop !3900

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #22, !dbg !3902
  br label %86, !dbg !3903

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !3818
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #19, !dbg !3904
  ret i32 %87, !dbg !3904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3905 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3907, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 4, metadata !3908, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 0, metadata !3909, metadata !DIExpression()), !dbg !3911
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3912
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3912
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3910, metadata !DIExpression()), !dbg !3913
  %4 = and i32 %0, 4095, !dbg !3914
  %5 = icmp eq i32 %4, 0, !dbg !3914
  br i1 %5, label %6, label %29, !dbg !3916

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !3917
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3919
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !3920
  %10 = load i32, i32* %9, align 4, !dbg !3920
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !3921
  %12 = load i32, i32* %11, align 4, !dbg !3921
  %13 = mul i32 %12, %10, !dbg !3922
  %14 = icmp ugt i32 %7, %13, !dbg !3923
  br i1 %14, label %29, label %15, !dbg !3924

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !3925
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #22, !dbg !3926
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #22, !dbg !3928
  store i8 2, i8* %3, align 1, !dbg !3929
  %18 = lshr i32 %0, 16, !dbg !3930
  %19 = trunc i32 %18 to i8, !dbg !3931
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3932
  store i8 %19, i8* %20, align 1, !dbg !3933
  %21 = lshr i32 %0, 8, !dbg !3934
  %22 = trunc i32 %21 to i8, !dbg !3935
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3936
  store i8 %22, i8* %23, align 1, !dbg !3937
  %24 = trunc i32 %0 to i8, !dbg !3938
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3939
  store i8 %24, i8* %25, align 1, !dbg !3940
  %26 = tail call i32 @flash_write_enable() #22, !dbg !3941
  %27 = tail call i32 @flash_unprotect() #22, !dbg !3942
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #20, !dbg !3943
  call void @llvm.dbg.value(metadata i32 %28, metadata !3909, metadata !DIExpression()), !dbg !3911
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3944
  br label %29, !dbg !3945

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !3911
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !3946
  ret i32 %30, !dbg !3946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3947 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3949, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %1, metadata !3950, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %2, metadata !3951, metadata !DIExpression()), !dbg !3966
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !3967
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #19, !dbg !3967
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !3952, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i32 4096, metadata !3956, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 4095, metadata !3957, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i8* %0, metadata !3949, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %1, metadata !3950, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %2, metadata !3951, metadata !DIExpression()), !dbg !3966
  %6 = icmp sgt i32 %2, 0, !dbg !3969
  br i1 %6, label %7, label %43, !dbg !3970

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !3949, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %9, metadata !3950, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %10, metadata !3951, metadata !DIExpression()), !dbg !3966
  %11 = and i32 %9, 4095, !dbg !3971
  %12 = icmp ne i32 %11, 0, !dbg !3971
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !3972
  br i1 %14, label %15, label %30, !dbg !3972

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !3973
  call void @llvm.dbg.value(metadata i32 %16, metadata !3962, metadata !DIExpression()), !dbg !3974
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #22, !dbg !3975
  %18 = icmp eq i32 %17, 4096, !dbg !3977
  br i1 %18, label %19, label %45, !dbg !3978

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !3979
  call void @llvm.dbg.value(metadata i32 %11, metadata !3958, metadata !DIExpression()), !dbg !3974
  %20 = sub nuw nsw i32 4096, %11, !dbg !3980
  %21 = icmp ugt i32 %10, %20, !dbg !3980
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !3980
  call void @llvm.dbg.value(metadata i32 %22, metadata !3963, metadata !DIExpression()), !dbg !3974
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !3981
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #20, !dbg !3982
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #22, !dbg !3983
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #22, !dbg !3985
  %27 = icmp eq i32 %26, 4096, !dbg !3987
  br i1 %27, label %28, label %45, !dbg !3988

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !3949, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3966
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !3950, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3966
  %29 = sub nsw i32 %10, %22, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %29, metadata !3951, metadata !DIExpression()), !dbg !3966
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %31, metadata !3964, metadata !DIExpression()), !dbg !3991
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #22, !dbg !3992
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #22, !dbg !3994
  %34 = icmp eq i32 %33, %31, !dbg !3996
  br i1 %34, label %35, label %43, !dbg !3997

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !3949, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3966
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !3950, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3966
  %36 = and i32 %10, 4095, !dbg !3998
  call void @llvm.dbg.value(metadata i8* %8, metadata !3949, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %9, metadata !3950, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %10, metadata !3951, metadata !DIExpression()), !dbg !3966
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !3999
  %41 = add i32 %39, %9, !dbg !3999
  call void @llvm.dbg.value(metadata i8* %40, metadata !3949, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %41, metadata !3950, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %38, metadata !3951, metadata !DIExpression()), !dbg !3966
  %42 = icmp sgt i32 %38, 0, !dbg !3969
  br i1 %42, label %7, label %43, !dbg !3970, !llvm.loop !4000

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3966
  br label %45, !dbg !4002

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !3966
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #19, !dbg !4002
  ret i32 %46, !dbg !4002
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #0 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #9 section ".ramTEXT" !dbg !4003 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !4007
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !4009

2:                                                ; preds = %0
  br label %7, !dbg !4010

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !4013
  %5 = icmp ult i32 %4, 3, !dbg !4013
  %6 = select i1 %5, i32 1, i32 2, !dbg !4015
  br label %7, !dbg !4015

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !4016
  ret i32 %8, !dbg !4017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #0 !dbg !4018 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #20, !dbg !4019
  ret i32 %1, !dbg !4020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #0 !dbg !4021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4023, metadata !DIExpression()), !dbg !4026
  %2 = tail call i32 @get_current_count() #22, !dbg !4027
  %3 = add i32 %2, %0, !dbg !4028
  %4 = xor i32 %3, -1, !dbg !4029
  call void @llvm.dbg.value(metadata i32 %3, metadata !4024, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4026
  %5 = tail call i32 @get_current_count() #22, !dbg !4030
  call void @llvm.dbg.value(metadata i32 %5, metadata !4025, metadata !DIExpression()), !dbg !4026
  %6 = add i32 %5, %4, !dbg !4031
  %7 = icmp slt i32 %6, 0, !dbg !4031
  br i1 %7, label %8, label %12, !dbg !4032

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #22, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %9, metadata !4025, metadata !DIExpression()), !dbg !4026
  %10 = add i32 %9, %4, !dbg !4031
  %11 = icmp slt i32 %10, 0, !dbg !4031
  br i1 %11, label %8, label %12, !dbg !4032, !llvm.loop !4035

12:                                               ; preds = %8, %1
  ret void, !dbg !4037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #0 !dbg !4038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4040, metadata !DIExpression()), !dbg !4043
  %2 = tail call i32 @get_current_gpt4_count() #22, !dbg !4044
  %3 = add i32 %2, %0, !dbg !4045
  %4 = xor i32 %3, -1, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %3, metadata !4041, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4043
  %5 = tail call i32 @get_current_gpt4_count() #22, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %5, metadata !4042, metadata !DIExpression()), !dbg !4043
  %6 = add i32 %5, %4, !dbg !4048
  %7 = icmp slt i32 %6, 0, !dbg !4048
  br i1 %7, label %8, label %12, !dbg !4049

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #22, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %9, metadata !4042, metadata !DIExpression()), !dbg !4043
  %10 = add i32 %9, %4, !dbg !4048
  %11 = icmp slt i32 %10, 0, !dbg !4048
  br i1 %11, label %8, label %12, !dbg !4049, !llvm.loop !4052

12:                                               ; preds = %8, %1
  ret void, !dbg !4054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #0 !dbg !4055 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #20, !dbg !4056
  ret i32 %1, !dbg !4057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !4058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4060, metadata !DIExpression()), !dbg !4062
  %2 = shl i32 %0, 5, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %2, metadata !4061, metadata !DIExpression()), !dbg !4062
  %3 = mul i32 %0, 7, !dbg !4064
  %4 = udiv i32 %3, 10, !dbg !4065
  %5 = add i32 %4, %2, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %5, metadata !4061, metadata !DIExpression()), !dbg !4062
  %6 = mul i32 %0, 6, !dbg !4067
  %7 = udiv i32 %6, 100, !dbg !4068
  %8 = add i32 %5, %7, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %8, metadata !4061, metadata !DIExpression()), !dbg !4062
  %9 = shl i32 %0, 3, !dbg !4070
  %10 = udiv i32 %9, 1000, !dbg !4071
  %11 = add i32 %8, %10, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %11, metadata !4061, metadata !DIExpression()), !dbg !4062
  tail call void @delay_time(i32 noundef %11) #22, !dbg !4073
  ret void, !dbg !4074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !4075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4077, metadata !DIExpression()), !dbg !4080
  %2 = tail call i32 @top_mcu_freq_get() #20, !dbg !4081
  %3 = udiv i32 %2, 1000000, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %3, metadata !4079, metadata !DIExpression()), !dbg !4080
  %4 = mul i32 %3, %0, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %4, metadata !4078, metadata !DIExpression()), !dbg !4080
  tail call void @delay_time_for_gpt4(i32 noundef %4) #22, !dbg !4084
  ret void, !dbg !4085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #0 !dbg !4086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4090, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 %1, metadata !4091, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i1 %2, metadata !4092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4094
  call void @llvm.dbg.value(metadata void ()* %3, metadata !4093, metadata !DIExpression()), !dbg !4094
  tail call void @GPT_Stop(i32 noundef %0) #20, !dbg !4095
  %5 = icmp eq i32 %0, 0, !dbg !4096
  br i1 %5, label %6, label %7, !dbg !4098

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !4099
  br label %8, !dbg !4101

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !4102
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #20, !dbg !4104
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #20, !dbg !4105
  ret void, !dbg !4106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !4107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4109, metadata !DIExpression()), !dbg !4110
  tail call void @GPT_Start(i32 noundef %0) #20, !dbg !4111
  ret void, !dbg !4112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #0 !dbg !4113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4115, metadata !DIExpression()), !dbg !4116
  tail call void @GPT_Stop(i32 noundef %0) #20, !dbg !4117
  ret void, !dbg !4118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #0 !dbg !4119 {
  tail call void @CM4_GPT2Init() #20, !dbg !4120
  ret void, !dbg !4121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #0 !dbg !4122 {
  tail call void @CM4_GPT4Init() #20, !dbg !4123
  ret void, !dbg !4124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #5 !dbg !4125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4127, metadata !DIExpression()), !dbg !4128
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4129

2:                                                ; preds = %1
  br label %3, !dbg !4130

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !4128
  br label %5, !dbg !4133

5:                                                ; preds = %3, %1
  ret void, !dbg !4133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #0 !dbg !4134 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4136, metadata !DIExpression()), !dbg !4138
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !4139
  call void @llvm.dbg.value(metadata i32 %1, metadata !4137, metadata !DIExpression()), !dbg !4138
  %2 = lshr i32 %1, 13, !dbg !4140
  %3 = and i32 %2, 7, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %3, metadata !4137, metadata !DIExpression()), !dbg !4138
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %4, metadata !4136, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i32 %4, metadata !4136, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !4138
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !4143
  %6 = load i32, i32* %5, align 4, !dbg !4143
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !4143
  %8 = load i32, i32* %7, align 4, !dbg !4143
  %9 = and i32 %4, -2048, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %9, metadata !4136, metadata !DIExpression()), !dbg !4138
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !4145
  %10 = or i32 %9, %8, !dbg !4145
  call void @llvm.dbg.value(metadata i32 %10, metadata !4136, metadata !DIExpression()), !dbg !4138
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4147
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !4148
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !4149
  tail call void @SystemCoreClockUpdate() #20, !dbg !4150
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !4151
  %13 = udiv i32 %12, 1000, !dbg !4152
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #20, !dbg !4153
  ret void, !dbg !4154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #9 !dbg !4155 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !4156
  ret i32 %1, !dbg !4157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #9 !dbg !4158 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !4159
  ret i32 %1, !dbg !4160
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #10 !dbg !4161 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4165
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4165
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4163, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4164, metadata !DIExpression()), !dbg !4167
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4168
  store volatile i32 %3, i32* %1, align 4, !dbg !4169
  %4 = load volatile i32, i32* %1, align 4, !dbg !4170
  %5 = lshr i32 %4, 28, !dbg !4171
  %6 = and i32 %5, 3, !dbg !4172
  store volatile i32 %6, i32* %1, align 4, !dbg !4173
  %7 = load volatile i32, i32* %1, align 4, !dbg !4174
  %8 = icmp eq i32 %7, 0, !dbg !4176
  br i1 %8, label %9, label %22, !dbg !4177

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4178
  store volatile i32 %10, i32* %1, align 4, !dbg !4180
  %11 = load volatile i32, i32* %1, align 4, !dbg !4181
  %12 = and i32 %11, -16777217, !dbg !4182
  store volatile i32 %12, i32* %1, align 4, !dbg !4183
  %13 = load volatile i32, i32* %1, align 4, !dbg !4184
  %14 = or i32 %13, 536870912, !dbg !4185
  store volatile i32 %14, i32* %1, align 4, !dbg !4186
  %15 = load volatile i32, i32* %1, align 4, !dbg !4187
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #22, !dbg !4188
  br label %16, !dbg !4189

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4190
  store volatile i32 %17, i32* %1, align 4, !dbg !4192
  %18 = load volatile i32, i32* %1, align 4, !dbg !4193
  %19 = and i32 %18, 134217728, !dbg !4194
  store volatile i32 %19, i32* %1, align 4, !dbg !4195
  %20 = load volatile i32, i32* %1, align 4, !dbg !4196
  %21 = icmp eq i32 %20, 0, !dbg !4197
  br i1 %21, label %16, label %22, !dbg !4198, !llvm.loop !4199

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4201
  ret void, !dbg !4201
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32(i8* noundef %0) unnamed_addr #8 !dbg !4202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4209, metadata !DIExpression()), !dbg !4210
  %2 = bitcast i8* %0 to i32*, !dbg !4211
  %3 = load volatile i32, i32* %2, align 4, !dbg !4212
  ret i32 %3, !dbg !4213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4214 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4218, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i32 %1, metadata !4219, metadata !DIExpression()), !dbg !4220
  %3 = bitcast i8* %0 to i32*, !dbg !4221
  store volatile i32 %1, i32* %3, align 4, !dbg !4222
  ret void, !dbg !4223
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #10 !dbg !4224 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4228, metadata !DIExpression()), !dbg !4231
  %3 = bitcast i32* %2 to i8*, !dbg !4232
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4232
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4229, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4230, metadata !DIExpression()), !dbg !4231
  %4 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4234
  store volatile i32 %4, i32* %2, align 4, !dbg !4235
  %5 = load volatile i32, i32* %2, align 4, !dbg !4236
  %6 = lshr i32 %5, 28, !dbg !4237
  %7 = and i32 %6, 3, !dbg !4238
  store volatile i32 %7, i32* %2, align 4, !dbg !4239
  %8 = load volatile i32, i32* %2, align 4, !dbg !4240
  %9 = icmp eq i32 %8, 3, !dbg !4242
  br i1 %9, label %38, label %10, !dbg !4243

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4244
  store volatile i32 %11, i32* %2, align 4, !dbg !4246
  %12 = load volatile i32, i32* %2, align 4, !dbg !4247
  %13 = and i32 %12, -262145, !dbg !4248
  store volatile i32 %13, i32* %2, align 4, !dbg !4249
  %14 = load volatile i32, i32* %2, align 4, !dbg !4250
  %15 = and i32 %14, -16777217, !dbg !4251
  store volatile i32 %15, i32* %2, align 4, !dbg !4252
  %16 = load volatile i32, i32* %2, align 4, !dbg !4253
  store volatile i32 %16, i32* %2, align 4, !dbg !4254
  %17 = load volatile i32, i32* %2, align 4, !dbg !4255
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #22, !dbg !4256
  %18 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4257
  store volatile i32 %18, i32* %2, align 4, !dbg !4258
  %19 = load volatile i32, i32* %2, align 4, !dbg !4259
  %20 = and i32 %19, -805306369, !dbg !4260
  store volatile i32 %20, i32* %2, align 4, !dbg !4261
  %21 = load volatile i32, i32* %2, align 4, !dbg !4262
  %22 = and i32 %21, -16777217, !dbg !4263
  store volatile i32 %22, i32* %2, align 4, !dbg !4264
  %23 = load volatile i32, i32* %2, align 4, !dbg !4265
  %24 = or i32 %23, 805306368, !dbg !4266
  store volatile i32 %24, i32* %2, align 4, !dbg !4267
  %25 = load volatile i32, i32* %2, align 4, !dbg !4268
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #22, !dbg !4269
  br label %26, !dbg !4270

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4271
  store volatile i32 %27, i32* %2, align 4, !dbg !4273
  %28 = load volatile i32, i32* %2, align 4, !dbg !4274
  %29 = and i32 %28, 67108864, !dbg !4275
  store volatile i32 %29, i32* %2, align 4, !dbg !4276
  %30 = load volatile i32, i32* %2, align 4, !dbg !4277
  %31 = icmp eq i32 %30, 0, !dbg !4278
  br i1 %31, label %26, label %32, !dbg !4279, !llvm.loop !4280

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4282
  store volatile i32 %33, i32* %2, align 4, !dbg !4283
  %34 = load volatile i32, i32* %2, align 4, !dbg !4284
  %35 = and i32 %34, -262145, !dbg !4285
  store volatile i32 %35, i32* %2, align 4, !dbg !4286
  %36 = load volatile i32, i32* %2, align 4, !dbg !4287
  %37 = and i32 %36, -16777217, !dbg !4288
  store volatile i32 %37, i32* %2, align 4, !dbg !4289
  br label %38, !dbg !4290

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4291
  store volatile i32 %39, i32* %2, align 4, !dbg !4292
  %40 = icmp eq i8 %0, 0, !dbg !4293
  %41 = load volatile i32, i32* %2, align 4, !dbg !4295
  br i1 %40, label %44, label %42, !dbg !4296

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !4297
  store volatile i32 %43, i32* %2, align 4, !dbg !4299
  br label %45, !dbg !4300

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !4301
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !4303
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #22, !dbg !4304
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4305
  ret void, !dbg !4305
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #10 !dbg !4306 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4310
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4310
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4308, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4309, metadata !DIExpression()), !dbg !4312
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4313
  store volatile i32 %3, i32* %1, align 4, !dbg !4314
  %4 = load volatile i32, i32* %1, align 4, !dbg !4315
  %5 = and i32 %4, -805306369, !dbg !4316
  store volatile i32 %5, i32* %1, align 4, !dbg !4317
  %6 = load volatile i32, i32* %1, align 4, !dbg !4318
  %7 = and i32 %6, -16777217, !dbg !4319
  store volatile i32 %7, i32* %1, align 4, !dbg !4320
  %8 = load volatile i32, i32* %1, align 4, !dbg !4321
  store volatile i32 %8, i32* %1, align 4, !dbg !4322
  %9 = load volatile i32, i32* %1, align 4, !dbg !4323
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #22, !dbg !4324
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !4325
  store volatile i32 %10, i32* %1, align 4, !dbg !4326
  %11 = load volatile i32, i32* %1, align 4, !dbg !4327
  %12 = and i32 %11, -262145, !dbg !4328
  store volatile i32 %12, i32* %1, align 4, !dbg !4329
  %13 = load volatile i32, i32* %1, align 4, !dbg !4330
  %14 = and i32 %13, -16777217, !dbg !4331
  store volatile i32 %14, i32* %1, align 4, !dbg !4332
  %15 = load volatile i32, i32* %1, align 4, !dbg !4333
  store volatile i32 %15, i32* %1, align 4, !dbg !4334
  %16 = load volatile i32, i32* %1, align 4, !dbg !4335
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #22, !dbg !4336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4337
  ret void, !dbg !4337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #0 !dbg !4338 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4342
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4342
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4340, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4341, metadata !DIExpression()), !dbg !4344
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4345
  store volatile i32 %3, i32* %1, align 4, !dbg !4346
  %4 = load volatile i32, i32* %1, align 4, !dbg !4347
  %5 = and i32 %4, -8, !dbg !4348
  store volatile i32 %5, i32* %1, align 4, !dbg !4349
  %6 = load volatile i32, i32* %1, align 4, !dbg !4350
  store volatile i32 %6, i32* %1, align 4, !dbg !4351
  %7 = load volatile i32, i32* %1, align 4, !dbg !4352
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #22, !dbg !4353
  %8 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4354
  store volatile i32 %8, i32* %1, align 4, !dbg !4355
  %9 = load volatile i32, i32* %1, align 4, !dbg !4356
  %10 = and i32 %9, -49153, !dbg !4357
  store volatile i32 %10, i32* %1, align 4, !dbg !4358
  %11 = load volatile i32, i32* %1, align 4, !dbg !4359
  store volatile i32 %11, i32* %1, align 4, !dbg !4360
  %12 = load volatile i32, i32* %1, align 4, !dbg !4361
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #22, !dbg !4362
  br label %13, !dbg !4363

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !4364
  %15 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4365
  %16 = icmp eq i32 %14, %15, !dbg !4366
  br i1 %16, label %17, label %13, !dbg !4363, !llvm.loop !4367

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #22, !dbg !4369
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !4370
  tail call void @SystemCoreClockUpdate() #20, !dbg !4371
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4372
  %20 = udiv i32 %19, 1000, !dbg !4373
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #20, !dbg !4374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4375
  ret void, !dbg !4375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #0 !dbg !4376 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4380
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4378, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4379, metadata !DIExpression()), !dbg !4382
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #22, !dbg !4383
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4384
  store volatile i32 %3, i32* %1, align 4, !dbg !4385
  %4 = load volatile i32, i32* %1, align 4, !dbg !4386
  %5 = and i32 %4, -49153, !dbg !4387
  store volatile i32 %5, i32* %1, align 4, !dbg !4388
  %6 = load volatile i32, i32* %1, align 4, !dbg !4389
  %7 = or i32 %6, 16384, !dbg !4390
  store volatile i32 %7, i32* %1, align 4, !dbg !4391
  %8 = load volatile i32, i32* %1, align 4, !dbg !4392
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #22, !dbg !4393
  br label %9, !dbg !4394

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4395
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4396
  %12 = icmp eq i32 %10, %11, !dbg !4397
  br i1 %12, label %13, label %9, !dbg !4394, !llvm.loop !4398

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4400
  store volatile i32 %14, i32* %1, align 4, !dbg !4401
  %15 = load volatile i32, i32* %1, align 4, !dbg !4402
  %16 = and i32 %15, -1009, !dbg !4403
  store volatile i32 %16, i32* %1, align 4, !dbg !4404
  %17 = load volatile i32, i32* %1, align 4, !dbg !4405
  %18 = or i32 %17, 128, !dbg !4406
  store volatile i32 %18, i32* %1, align 4, !dbg !4407
  %19 = load volatile i32, i32* %1, align 4, !dbg !4408
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #22, !dbg !4409
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4410
  store volatile i32 %20, i32* %1, align 4, !dbg !4411
  %21 = load volatile i32, i32* %1, align 4, !dbg !4412
  %22 = and i32 %21, -8, !dbg !4413
  store volatile i32 %22, i32* %1, align 4, !dbg !4414
  %23 = load volatile i32, i32* %1, align 4, !dbg !4415
  %24 = or i32 %23, 4, !dbg !4416
  store volatile i32 %24, i32* %1, align 4, !dbg !4417
  %25 = load volatile i32, i32* %1, align 4, !dbg !4418
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #22, !dbg !4419
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !4420
  tail call void @SystemCoreClockUpdate() #20, !dbg !4421
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4422
  %27 = udiv i32 %26, 1000, !dbg !4423
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #20, !dbg !4424
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4425
  ret void, !dbg !4425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #0 !dbg !4426 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4430
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4430
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4428, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4429, metadata !DIExpression()), !dbg !4432
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #22, !dbg !4433
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4434
  store volatile i32 %3, i32* %1, align 4, !dbg !4435
  %4 = load volatile i32, i32* %1, align 4, !dbg !4436
  %5 = and i32 %4, -49153, !dbg !4437
  store volatile i32 %5, i32* %1, align 4, !dbg !4438
  %6 = load volatile i32, i32* %1, align 4, !dbg !4439
  %7 = or i32 %6, 32768, !dbg !4440
  store volatile i32 %7, i32* %1, align 4, !dbg !4441
  %8 = load volatile i32, i32* %1, align 4, !dbg !4442
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #22, !dbg !4443
  br label %9, !dbg !4444

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4445
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4446
  %12 = icmp eq i32 %10, %11, !dbg !4447
  br i1 %12, label %13, label %9, !dbg !4444, !llvm.loop !4448

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4450
  store volatile i32 %14, i32* %1, align 4, !dbg !4451
  %15 = load volatile i32, i32* %1, align 4, !dbg !4452
  %16 = and i32 %15, -1009, !dbg !4453
  store volatile i32 %16, i32* %1, align 4, !dbg !4454
  %17 = load volatile i32, i32* %1, align 4, !dbg !4455
  %18 = or i32 %17, 32, !dbg !4456
  store volatile i32 %18, i32* %1, align 4, !dbg !4457
  %19 = load volatile i32, i32* %1, align 4, !dbg !4458
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #22, !dbg !4459
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4460
  store volatile i32 %20, i32* %1, align 4, !dbg !4461
  %21 = load volatile i32, i32* %1, align 4, !dbg !4462
  %22 = and i32 %21, -8, !dbg !4463
  store volatile i32 %22, i32* %1, align 4, !dbg !4464
  %23 = load volatile i32, i32* %1, align 4, !dbg !4465
  %24 = or i32 %23, 4, !dbg !4466
  store volatile i32 %24, i32* %1, align 4, !dbg !4467
  %25 = load volatile i32, i32* %1, align 4, !dbg !4468
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #22, !dbg !4469
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !4470
  tail call void @SystemCoreClockUpdate() #20, !dbg !4471
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4472
  %27 = udiv i32 %26, 1000, !dbg !4473
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #20, !dbg !4474
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4475
  ret void, !dbg !4475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #0 !dbg !4476 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4480
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4478, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4479, metadata !DIExpression()), !dbg !4482
  tail call void @cmnPLL1ON() #22, !dbg !4483
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4484
  store volatile i32 %3, i32* %1, align 4, !dbg !4485
  %4 = load volatile i32, i32* %1, align 4, !dbg !4486
  %5 = and i32 %4, -49153, !dbg !4487
  store volatile i32 %5, i32* %1, align 4, !dbg !4488
  %6 = load volatile i32, i32* %1, align 4, !dbg !4489
  store volatile i32 %6, i32* %1, align 4, !dbg !4490
  %7 = load volatile i32, i32* %1, align 4, !dbg !4491
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #22, !dbg !4492
  br label %8, !dbg !4493

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !4494
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4495
  %11 = icmp eq i32 %9, %10, !dbg !4496
  br i1 %11, label %12, label %8, !dbg !4493, !llvm.loop !4497

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !4499
  store volatile i32 %13, i32* %1, align 4, !dbg !4500
  %14 = load volatile i32, i32* %1, align 4, !dbg !4501
  %15 = and i32 %14, -8, !dbg !4502
  store volatile i32 %15, i32* %1, align 4, !dbg !4503
  %16 = load volatile i32, i32* %1, align 4, !dbg !4504
  %17 = or i32 %16, 2, !dbg !4505
  store volatile i32 %17, i32* %1, align 4, !dbg !4506
  %18 = load volatile i32, i32* %1, align 4, !dbg !4507
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #22, !dbg !4508
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !4509
  tail call void @SystemCoreClockUpdate() #20, !dbg !4510
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4511
  %20 = udiv i32 %19, 1000, !dbg !4512
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #20, !dbg !4513
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4514
  ret void, !dbg !4514
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #10 section ".ramTEXT" !dbg !4515 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4519
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4519
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4517, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4518, metadata !DIExpression()), !dbg !4521
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #22, !dbg !4522
  store volatile i32 %3, i32* %1, align 4, !dbg !4523
  %4 = load volatile i32, i32* %1, align 4, !dbg !4524
  %5 = and i32 %4, -24577, !dbg !4525
  store volatile i32 %5, i32* %1, align 4, !dbg !4526
  %6 = load volatile i32, i32* %1, align 4, !dbg !4527
  store volatile i32 %6, i32* %1, align 4, !dbg !4528
  %7 = load volatile i32, i32* %1, align 4, !dbg !4529
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #22, !dbg !4530
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4531
  ret void, !dbg !4531
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #10 section ".ramTEXT" !dbg !4532 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4542
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4534, metadata !DIExpression()), !dbg !4543
  store volatile i32 0, i32* %1, align 4, !dbg !4543
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4535, metadata !DIExpression()), !dbg !4544
  tail call void @cmnPLL1ON() #22, !dbg !4545
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #22, !dbg !4546
  store volatile i32 %3, i32* %1, align 4, !dbg !4547
  %4 = load volatile i32, i32* %1, align 4, !dbg !4548
  %5 = and i32 %4, -24577, !dbg !4549
  store volatile i32 %5, i32* %1, align 4, !dbg !4550
  %6 = load volatile i32, i32* %1, align 4, !dbg !4551
  %7 = or i32 %6, 8192, !dbg !4552
  store volatile i32 %7, i32* %1, align 4, !dbg !4553
  %8 = load volatile i32, i32* %1, align 4, !dbg !4554
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #22, !dbg !4555
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4536, metadata !DIExpression()), !dbg !4556
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4557
  %10 = and i32 %9, -4, !dbg !4557
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4557
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4538, metadata !DIExpression()), !dbg !4558
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4559
  %12 = or i32 %11, 16, !dbg !4559
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4559
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !4540, metadata !DIExpression()), !dbg !4560
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4561
  %14 = and i32 %13, -64, !dbg !4561
  %15 = or i32 %14, 24, !dbg !4561
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4561
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4562
  ret void, !dbg !4562
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #8 !dbg !4563 {
  %1 = tail call i32 @getc_nowait() #22, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %1, metadata !4565, metadata !DIExpression()), !dbg !4567
  ret i32 %1, !dbg !4568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #8 !dbg !4569 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !4572
  %2 = and i32 %1, 1, !dbg !4574
  %3 = icmp eq i32 %2, 0, !dbg !4574
  br i1 %3, label %7, label %4, !dbg !4575

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !4576
  %6 = and i32 %5, 255, !dbg !4578
  call void @llvm.dbg.value(metadata i32 %5, metadata !4571, metadata !DIExpression()), !dbg !4579
  br label %7, !dbg !4580

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !4581
  ret i32 %8, !dbg !4582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !4583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4588, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8 %1, metadata !4589, metadata !DIExpression()), !dbg !4591
  %3 = icmp eq i32 %0, 0, !dbg !4592
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !4592
  call void @llvm.dbg.value(metadata i32 %4, metadata !4590, metadata !DIExpression()), !dbg !4591
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !4593

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !4594
  %9 = and i32 %8, 32, !dbg !4595
  %10 = icmp eq i32 %9, 0, !dbg !4596
  br i1 %10, label %7, label %11, !dbg !4593, !llvm.loop !4597

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !4599
  %13 = inttoptr i32 %4 to i32*, !dbg !4600
  store volatile i32 %12, i32* %13, align 65536, !dbg !4601
  ret void, !dbg !4602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #5 !dbg !4603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4607, metadata !DIExpression()), !dbg !4610
  %2 = icmp eq i32 %0, 0, !dbg !4611
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4611
  call void @llvm.dbg.value(metadata i32 %3, metadata !4608, metadata !DIExpression()), !dbg !4610
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !4612

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !4613
  %8 = and i32 %7, 1, !dbg !4614
  %9 = icmp eq i32 %8, 0, !dbg !4615
  br i1 %9, label %6, label %10, !dbg !4612, !llvm.loop !4616

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !4618
  %12 = load volatile i32, i32* %11, align 65536, !dbg !4618
  %13 = trunc i32 %12 to i8, !dbg !4618
  call void @llvm.dbg.value(metadata i8 %13, metadata !4609, metadata !DIExpression()), !dbg !4610
  ret i8 %13, !dbg !4619
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #8 !dbg !4620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4624, metadata !DIExpression()), !dbg !4627
  %2 = icmp eq i32 %0, 0, !dbg !4628
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %3, metadata !4625, metadata !DIExpression()), !dbg !4627
  %4 = or i32 %3, 20, !dbg !4629
  %5 = inttoptr i32 %4 to i32*, !dbg !4629
  %6 = load volatile i32, i32* %5, align 4, !dbg !4629
  %7 = and i32 %6, 1, !dbg !4631
  %8 = icmp eq i32 %7, 0, !dbg !4631
  br i1 %8, label %13, label %9, !dbg !4632

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !4633
  %11 = load volatile i32, i32* %10, align 65536, !dbg !4633
  %12 = and i32 %11, 255, !dbg !4635
  call void @llvm.dbg.value(metadata i32 %11, metadata !4626, metadata !DIExpression()), !dbg !4627
  br label %13, !dbg !4636

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !4637
  ret i32 %14, !dbg !4638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #0 !dbg !4639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4643, metadata !DIExpression()), !dbg !4644
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !4645
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4646

2:                                                ; preds = %1
  br label %3, !dbg !4647

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !4651
  %6 = or i32 %5, 1, !dbg !4651
  store volatile i32 %6, i32* %4, align 4, !dbg !4651
  br label %7, !dbg !4652

7:                                                ; preds = %3, %1
  ret void, !dbg !4652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 !dbg !4653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4657, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %1, metadata !4658, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i16 %2, metadata !4659, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i16 %3, metadata !4660, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i16 %4, metadata !4661, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !4663, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !4670, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !4672, metadata !DIExpression()), !dbg !4676
  call void @llvm.dbg.value(metadata i32 0, metadata !4673, metadata !DIExpression()), !dbg !4674
  %6 = tail call i32 @top_xtal_freq_get() #20, !dbg !4677
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !4678
  %7 = icmp eq i32 %0, 1, !dbg !4679
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %8, metadata !4663, metadata !DIExpression()), !dbg !4674
  %9 = or i32 %8, 36, !dbg !4680
  %10 = inttoptr i32 %9 to i32*, !dbg !4680
  store volatile i32 3, i32* %10, align 4, !dbg !4681
  %11 = or i32 %8, 12, !dbg !4682
  %12 = inttoptr i32 %11 to i32*, !dbg !4682
  %13 = load volatile i32, i32* %12, align 4, !dbg !4682
  call void @llvm.dbg.value(metadata i32 %13, metadata !4665, metadata !DIExpression()), !dbg !4674
  %14 = or i32 %13, 128, !dbg !4683
  store volatile i32 %14, i32* %12, align 4, !dbg !4684
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !4685
  %16 = udiv i32 %15, %1, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %16, metadata !4664, metadata !DIExpression()), !dbg !4674
  %17 = lshr i32 %16, 8, !dbg !4687
  %18 = add nuw nsw i32 %17, 1, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %18, metadata !4666, metadata !DIExpression()), !dbg !4674
  %19 = udiv i32 %16, %18, !dbg !4689
  %20 = add i32 %19, -1, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %20, metadata !4667, metadata !DIExpression()), !dbg !4674
  %21 = icmp eq i32 %20, 3, !dbg !4692
  %22 = lshr i32 %20, 1, !dbg !4694
  %23 = add nsw i32 %22, -1, !dbg !4694
  %24 = select i1 %21, i32 0, i32 %23, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %24, metadata !4668, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4673, metadata !DIExpression()), !dbg !4674
  %25 = mul i32 %15, 10, !dbg !4695
  %26 = udiv i32 %25, %1, !dbg !4696
  %27 = udiv i32 %26, %16, !dbg !4697
  %28 = mul i32 %19, -10, !dbg !4698
  %29 = add i32 %27, %28, !dbg !4699
  %30 = urem i32 %29, 10, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %30, metadata !4669, metadata !DIExpression()), !dbg !4674
  %31 = and i32 %18, 255, !dbg !4701
  %32 = inttoptr i32 %8 to i32*, !dbg !4702
  store volatile i32 %31, i32* %32, align 65536, !dbg !4703
  %33 = lshr i32 %18, 8, !dbg !4704
  %34 = and i32 %33, 255, !dbg !4705
  %35 = or i32 %8, 4, !dbg !4706
  %36 = inttoptr i32 %35 to i32*, !dbg !4706
  store volatile i32 %34, i32* %36, align 4, !dbg !4707
  %37 = or i32 %8, 40, !dbg !4708
  %38 = inttoptr i32 %37 to i32*, !dbg !4708
  store volatile i32 %20, i32* %38, align 8, !dbg !4709
  %39 = or i32 %8, 44, !dbg !4710
  %40 = inttoptr i32 %39 to i32*, !dbg !4710
  store volatile i32 %24, i32* %40, align 4, !dbg !4711
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !4712
  %42 = load i16, i16* %41, align 2, !dbg !4712
  %43 = zext i16 %42 to i32, !dbg !4712
  %44 = or i32 %8, 88, !dbg !4713
  %45 = inttoptr i32 %44 to i32*, !dbg !4713
  store volatile i32 %43, i32* %45, align 8, !dbg !4714
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !4715
  %47 = load i16, i16* %46, align 2, !dbg !4715
  %48 = zext i16 %47 to i32, !dbg !4715
  %49 = or i32 %8, 84, !dbg !4716
  %50 = inttoptr i32 %49 to i32*, !dbg !4716
  store volatile i32 %48, i32* %50, align 4, !dbg !4717
  store volatile i32 %13, i32* %12, align 4, !dbg !4718
  %51 = or i32 %8, 8, !dbg !4719
  %52 = inttoptr i32 %51 to i32*, !dbg !4719
  store volatile i32 71, i32* %52, align 8, !dbg !4720
  %53 = inttoptr i32 %11 to i16*, !dbg !4721
  %54 = load volatile i16, i16* %53, align 4, !dbg !4721
  call void @llvm.dbg.value(metadata i16 %54, metadata !4662, metadata !DIExpression()), !dbg !4674
  %55 = and i16 %54, -64, !dbg !4722
  call void @llvm.dbg.value(metadata i16 %54, metadata !4662, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !4662, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4674
  %56 = and i16 %2, -61, !dbg !4723
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !4662, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4674
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !4662, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4674
  %57 = and i16 %4, -57, !dbg !4724
  call void @llvm.dbg.value(metadata i16 undef, metadata !4662, metadata !DIExpression()), !dbg !4674
  %58 = or i16 %56, %3, !dbg !4723
  %59 = or i16 %58, %57, !dbg !4724
  %60 = or i16 %59, %55, !dbg !4725
  call void @llvm.dbg.value(metadata i16 %60, metadata !4662, metadata !DIExpression()), !dbg !4674
  store volatile i16 %60, i16* %53, align 4, !dbg !4726
  ret void, !dbg !4727
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #8 !dbg !4728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4732, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.value(metadata i32 %1, metadata !4733, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.value(metadata i32* %2, metadata !4734, metadata !DIExpression()), !dbg !4735
  %4 = icmp eq i32 %0, 0, !dbg !4736
  %5 = icmp eq i32 %1, 0, !dbg !4738
  br i1 %4, label %6, label %16, !dbg !4739

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !4740

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !4742
  %9 = zext i16 %8 to i32, !dbg !4742
  br label %26, !dbg !4745

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !4746
  %12 = zext i16 %11 to i32, !dbg !4746
  store i32 %12, i32* %2, align 4, !dbg !4748
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !4749
  %14 = zext i16 %13 to i32, !dbg !4749
  %15 = sub nsw i32 %12, %14, !dbg !4750
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !4751

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !4753
  %19 = zext i16 %18 to i32, !dbg !4753
  br label %26, !dbg !4756

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !4757
  %22 = zext i16 %21 to i32, !dbg !4757
  store i32 %22, i32* %2, align 4, !dbg !4759
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !4760
  %24 = zext i16 %23 to i32, !dbg !4760
  %25 = sub nsw i32 %22, %24, !dbg !4761
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !4738
  ret void, !dbg !4762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !4763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4767, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i8* %1, metadata !4768, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 %2, metadata !4769, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 0, metadata !4770, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata i32 0, metadata !4770, metadata !DIExpression()), !dbg !4771
  %4 = icmp eq i32 %2, 0, !dbg !4772
  br i1 %4, label %15, label %5, !dbg !4775

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4770, metadata !DIExpression()), !dbg !4771
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !4776

7:                                                ; preds = %5
  br label %8, !dbg !4778

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !4782
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4782
  store i8 %10, i8* %11, align 1, !dbg !4782
  br label %12, !dbg !4783

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %13, metadata !4770, metadata !DIExpression()), !dbg !4771
  %14 = icmp eq i32 %13, %2, !dbg !4772
  br i1 %14, label %15, label %5, !dbg !4775, !llvm.loop !4784

15:                                               ; preds = %12, %3
  ret void, !dbg !4786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !4787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4791, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.value(metadata i8* %1, metadata !4792, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.value(metadata i32 %2, metadata !4793, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.value(metadata i32 0, metadata !4794, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.value(metadata i32 0, metadata !4794, metadata !DIExpression()), !dbg !4795
  %4 = icmp eq i32 %2, 0, !dbg !4796
  br i1 %4, label %16, label %5, !dbg !4799

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4794, metadata !DIExpression()), !dbg !4795
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !4800

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4802
  %9 = load i8, i8* %8, align 1, !dbg !4802
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !4805
  br label %13, !dbg !4806

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4807
  %12 = load i8, i8* %11, align 1, !dbg !4807
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !4810
  br label %13, !dbg !4811

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %14, metadata !4794, metadata !DIExpression()), !dbg !4795
  %15 = icmp eq i32 %14, %2, !dbg !4796
  br i1 %15, label %16, label %5, !dbg !4799, !llvm.loop !4813

16:                                               ; preds = %13, %3
  ret void, !dbg !4815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !4816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4820, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i8* %1, metadata !4821, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i32 %2, metadata !4822, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i32 %3, metadata !4823, metadata !DIExpression()), !dbg !4824
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !4825

5:                                                ; preds = %4
  br label %6, !dbg !4826

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !4830
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #20, !dbg !4830
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #20, !dbg !4830
  br label %9, !dbg !4831

9:                                                ; preds = %6, %4
  ret void, !dbg !4831
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_SetAdrs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Flush(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #0 !dbg !4832 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4836, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i8* %1, metadata !4837, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i32 %2, metadata !4838, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i32 %3, metadata !4839, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i32 %4, metadata !4840, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i32 %5, metadata !4841, metadata !DIExpression()), !dbg !4842
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !4843

7:                                                ; preds = %6
  br label %8, !dbg !4844

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !4848
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #20, !dbg !4848
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #20, !dbg !4848
  br label %11, !dbg !4849

11:                                               ; preds = %8, %6
  ret void, !dbg !4849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !4850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4854, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata void ()* %1, metadata !4855, metadata !DIExpression()), !dbg !4856
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !4857

3:                                                ; preds = %2
  br label %4, !dbg !4858

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #20, !dbg !4862
  br label %6, !dbg !4863

6:                                                ; preds = %4, %2
  ret void, !dbg !4863
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !4864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4866, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata void ()* %1, metadata !4867, metadata !DIExpression()), !dbg !4868
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !4869

3:                                                ; preds = %2
  br label %4, !dbg !4870

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #20, !dbg !4874
  br label %6, !dbg !4875

6:                                                ; preds = %4, %2
  ret void, !dbg !4875
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !4876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4878, metadata !DIExpression()), !dbg !4882
  %2 = icmp eq i32 %0, 0, !dbg !4883
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4883
  call void @llvm.dbg.value(metadata i32 %3, metadata !4879, metadata !DIExpression()), !dbg !4882
  %4 = or i32 %3, 12, !dbg !4884
  %5 = inttoptr i32 %4 to i32*, !dbg !4884
  %6 = load volatile i32, i32* %5, align 4, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %6, metadata !4881, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4882
  store volatile i32 191, i32* %5, align 4, !dbg !4885
  %7 = or i32 %3, 8, !dbg !4886
  %8 = inttoptr i32 %7 to i32*, !dbg !4886
  %9 = load volatile i32, i32* %8, align 8, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %9, metadata !4880, metadata !DIExpression()), !dbg !4882
  %10 = and i32 %9, 65327, !dbg !4887
  %11 = or i32 %10, 208, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %9, metadata !4880, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !4882
  store volatile i32 %11, i32* %8, align 8, !dbg !4888
  %12 = or i32 %3, 68, !dbg !4889
  %13 = inttoptr i32 %12 to i32*, !dbg !4889
  store volatile i32 0, i32* %13, align 4, !dbg !4890
  store volatile i32 0, i32* %5, align 4, !dbg !4891
  %14 = or i32 %3, 16, !dbg !4892
  %15 = inttoptr i32 %14 to i32*, !dbg !4892
  store volatile i32 2, i32* %15, align 16, !dbg !4893
  %16 = and i32 %6, 65535, !dbg !4894
  store volatile i32 %16, i32* %5, align 4, !dbg !4895
  ret void, !dbg !4896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #5 !dbg !4897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4901, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8 %1, metadata !4902, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8 %2, metadata !4903, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8 %3, metadata !4904, metadata !DIExpression()), !dbg !4908
  %5 = icmp eq i32 %0, 0, !dbg !4909
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %6, metadata !4905, metadata !DIExpression()), !dbg !4908
  %7 = or i32 %6, 12, !dbg !4910
  %8 = inttoptr i32 %7 to i32*, !dbg !4910
  %9 = load volatile i32, i32* %8, align 4, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %9, metadata !4907, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4908
  store volatile i32 191, i32* %8, align 4, !dbg !4911
  %10 = zext i8 %1 to i32, !dbg !4912
  %11 = or i32 %6, 16, !dbg !4913
  %12 = inttoptr i32 %11 to i32*, !dbg !4913
  store volatile i32 %10, i32* %12, align 16, !dbg !4914
  %13 = or i32 %6, 20, !dbg !4915
  %14 = inttoptr i32 %13 to i32*, !dbg !4915
  store volatile i32 %10, i32* %14, align 4, !dbg !4916
  %15 = zext i8 %2 to i32, !dbg !4917
  %16 = or i32 %6, 24, !dbg !4918
  %17 = inttoptr i32 %16 to i32*, !dbg !4918
  store volatile i32 %15, i32* %17, align 8, !dbg !4919
  %18 = or i32 %6, 28, !dbg !4920
  %19 = inttoptr i32 %18 to i32*, !dbg !4920
  store volatile i32 %15, i32* %19, align 4, !dbg !4921
  %20 = or i32 %6, 8, !dbg !4922
  %21 = inttoptr i32 %20 to i32*, !dbg !4922
  %22 = load volatile i32, i32* %21, align 8, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %22, metadata !4906, metadata !DIExpression()), !dbg !4908
  %23 = and i32 %22, 65525, !dbg !4923
  %24 = or i32 %23, 10, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %22, metadata !4906, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !4908
  store volatile i32 %24, i32* %21, align 8, !dbg !4924
  %25 = and i32 %9, 65535, !dbg !4925
  store volatile i32 %25, i32* %8, align 4, !dbg !4926
  %26 = zext i8 %3 to i32, !dbg !4927
  %27 = or i32 %6, 64, !dbg !4928
  %28 = inttoptr i32 %27 to i32*, !dbg !4928
  store volatile i32 %26, i32* %28, align 64, !dbg !4929
  %29 = or i32 %6, 68, !dbg !4930
  %30 = inttoptr i32 %29 to i32*, !dbg !4930
  store volatile i32 1, i32* %30, align 4, !dbg !4931
  ret void, !dbg !4932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !4933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4935, metadata !DIExpression()), !dbg !4938
  %2 = icmp eq i32 %0, 0, !dbg !4939
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %3, metadata !4936, metadata !DIExpression()), !dbg !4938
  %4 = or i32 %3, 12, !dbg !4940
  %5 = inttoptr i32 %4 to i32*, !dbg !4940
  %6 = load volatile i32, i32* %5, align 4, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %6, metadata !4937, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4938
  store volatile i32 191, i32* %5, align 4, !dbg !4941
  %7 = or i32 %3, 8, !dbg !4942
  %8 = inttoptr i32 %7 to i32*, !dbg !4942
  store volatile i32 0, i32* %8, align 8, !dbg !4943
  store volatile i32 0, i32* %5, align 4, !dbg !4944
  %9 = and i32 %6, 65535, !dbg !4945
  store volatile i32 %9, i32* %5, align 4, !dbg !4946
  ret void, !dbg !4947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(i32 noundef %0) local_unnamed_addr #5 !dbg !4948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4950, metadata !DIExpression()), !dbg !4952
  %2 = icmp eq i32 %0, 0, !dbg !4953
  call void @llvm.dbg.value(metadata i32 undef, metadata !4951, metadata !DIExpression()), !dbg !4952
  %3 = select i1 %2, i32 -2096955320, i32 -2096889784, !dbg !4954
  %4 = inttoptr i32 %3 to i32*, !dbg !4954
  store volatile i32 1, i32* %4, align 8, !dbg !4955
  ret void, !dbg !4956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !4957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4959, metadata !DIExpression()), !dbg !4963
  %2 = icmp eq i32 %0, 0, !dbg !4964
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %3, metadata !4960, metadata !DIExpression()), !dbg !4963
  %4 = or i32 %3, 12, !dbg !4965
  %5 = inttoptr i32 %4 to i32*, !dbg !4965
  %6 = load volatile i32, i32* %5, align 4, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %6, metadata !4962, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4963
  store volatile i32 0, i32* %5, align 4, !dbg !4966
  %7 = or i32 %3, 4, !dbg !4967
  %8 = inttoptr i32 %7 to i32*, !dbg !4967
  %9 = load volatile i32, i32* %8, align 4, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %9, metadata !4961, metadata !DIExpression()), !dbg !4963
  %10 = and i32 %9, 65533, !dbg !4968
  %11 = or i32 %10, 2, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %9, metadata !4961, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !4963
  store volatile i32 %11, i32* %8, align 4, !dbg !4969
  %12 = and i32 %6, 65535, !dbg !4970
  store volatile i32 %12, i32* %5, align 4, !dbg !4971
  %13 = or i32 %3, 72, !dbg !4972
  %14 = inttoptr i32 %13 to i32*, !dbg !4972
  store volatile i32 1, i32* %14, align 8, !dbg !4973
  ret void, !dbg !4974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_mask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !4975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4977, metadata !DIExpression()), !dbg !4981
  %2 = icmp eq i32 %0, 0, !dbg !4982
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %3, metadata !4978, metadata !DIExpression()), !dbg !4981
  %4 = or i32 %3, 12, !dbg !4983
  %5 = inttoptr i32 %4 to i32*, !dbg !4983
  %6 = load volatile i32, i32* %5, align 4, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %6, metadata !4980, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4981
  store volatile i32 0, i32* %5, align 4, !dbg !4984
  %7 = or i32 %3, 4, !dbg !4985
  %8 = inttoptr i32 %7 to i32*, !dbg !4985
  %9 = load volatile i32, i32* %8, align 4, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %9, metadata !4979, metadata !DIExpression()), !dbg !4981
  %10 = and i32 %9, 65533, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %10, metadata !4979, metadata !DIExpression()), !dbg !4981
  store volatile i32 %10, i32* %8, align 4, !dbg !4987
  %11 = and i32 %6, 65535, !dbg !4988
  store volatile i32 %11, i32* %5, align 4, !dbg !4989
  %12 = or i32 %3, 72, !dbg !4990
  %13 = inttoptr i32 %12 to i32*, !dbg !4990
  store volatile i32 0, i32* %13, align 8, !dbg !4991
  ret void, !dbg !4992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !4993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4995, metadata !DIExpression()), !dbg !4999
  %2 = icmp eq i32 %0, 0, !dbg !5000
  %3 = select i1 %2, i32* inttoptr (i32 -2096955384 to i32*), i32* inttoptr (i32 -2096889848 to i32*)
  call void @llvm.dbg.value(metadata i32 undef, metadata !4996, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i32 undef, metadata !4997, metadata !DIExpression()), !dbg !4999
  %4 = load volatile i32, i32* %3, align 8, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %4, metadata !4998, metadata !DIExpression()), !dbg !4999
  %5 = and i32 %4, 63, !dbg !5003
  %6 = icmp eq i32 %5, 2, !dbg !5004
  br i1 %6, label %7, label %10, !dbg !5004

7:                                                ; preds = %1
  %8 = xor i1 %2, true
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !4996, metadata !DIExpression()), !dbg !4999
  tail call void @uart_send_handler(i32 noundef %9) #20, !dbg !5005
  br label %10, !dbg !5007

10:                                               ; preds = %1, %7
  ret void, !dbg !5008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #5 !dbg !5009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5011, metadata !DIExpression()), !dbg !5013
  %2 = icmp eq i32 %0, 0, !dbg !5014
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %3, metadata !5012, metadata !DIExpression()), !dbg !5013
  %4 = or i32 %3, 12, !dbg !5015
  %5 = inttoptr i32 %4 to i32*, !dbg !5015
  store volatile i32 191, i32* %5, align 4, !dbg !5016
  %6 = or i32 %3, 8, !dbg !5017
  %7 = inttoptr i32 %6 to i32*, !dbg !5017
  store volatile i32 16, i32* %7, align 8, !dbg !5018
  %8 = or i32 %3, 16, !dbg !5019
  %9 = inttoptr i32 %8 to i32*, !dbg !5019
  store volatile i32 0, i32* %9, align 16, !dbg !5020
  %10 = or i32 %3, 24, !dbg !5021
  %11 = inttoptr i32 %10 to i32*, !dbg !5021
  store volatile i32 0, i32* %11, align 8, !dbg !5022
  store volatile i32 128, i32* %5, align 4, !dbg !5023
  %12 = inttoptr i32 %3 to i32*, !dbg !5024
  store volatile i32 0, i32* %12, align 65536, !dbg !5025
  %13 = or i32 %3, 4, !dbg !5026
  %14 = inttoptr i32 %13 to i32*, !dbg !5026
  store volatile i32 0, i32* %14, align 4, !dbg !5027
  store volatile i32 0, i32* %5, align 4, !dbg !5028
  store volatile i32 0, i32* %14, align 4, !dbg !5029
  store volatile i32 0, i32* %7, align 8, !dbg !5030
  store volatile i32 191, i32* %5, align 4, !dbg !5031
  store volatile i32 0, i32* %7, align 8, !dbg !5032
  store volatile i32 0, i32* %5, align 4, !dbg !5033
  store volatile i32 0, i32* %9, align 16, !dbg !5034
  %15 = or i32 %3, 28, !dbg !5035
  %16 = inttoptr i32 %15 to i32*, !dbg !5035
  store volatile i32 0, i32* %16, align 4, !dbg !5036
  %17 = or i32 %3, 36, !dbg !5037
  %18 = inttoptr i32 %17 to i32*, !dbg !5037
  store volatile i32 0, i32* %18, align 4, !dbg !5038
  %19 = or i32 %3, 40, !dbg !5039
  %20 = inttoptr i32 %19 to i32*, !dbg !5039
  store volatile i32 0, i32* %20, align 8, !dbg !5040
  %21 = or i32 %3, 44, !dbg !5041
  %22 = inttoptr i32 %21 to i32*, !dbg !5041
  store volatile i32 0, i32* %22, align 4, !dbg !5042
  %23 = or i32 %3, 52, !dbg !5043
  %24 = inttoptr i32 %23 to i32*, !dbg !5043
  store volatile i32 0, i32* %24, align 4, !dbg !5044
  %25 = or i32 %3, 60, !dbg !5045
  %26 = inttoptr i32 %25 to i32*, !dbg !5045
  store volatile i32 0, i32* %26, align 4, !dbg !5046
  %27 = or i32 %3, 64, !dbg !5047
  %28 = inttoptr i32 %27 to i32*, !dbg !5047
  store volatile i32 0, i32* %28, align 64, !dbg !5048
  %29 = or i32 %3, 68, !dbg !5049
  %30 = inttoptr i32 %29 to i32*, !dbg !5049
  store volatile i32 0, i32* %30, align 4, !dbg !5050
  %31 = or i32 %3, 72, !dbg !5051
  %32 = inttoptr i32 %31 to i32*, !dbg !5051
  store volatile i32 0, i32* %32, align 8, !dbg !5052
  %33 = or i32 %3, 76, !dbg !5053
  %34 = inttoptr i32 %33 to i32*, !dbg !5053
  store volatile i32 0, i32* %34, align 4, !dbg !5054
  %35 = or i32 %3, 80, !dbg !5055
  %36 = inttoptr i32 %35 to i32*, !dbg !5055
  store volatile i32 0, i32* %36, align 16, !dbg !5056
  %37 = or i32 %3, 84, !dbg !5057
  %38 = inttoptr i32 %37 to i32*, !dbg !5057
  store volatile i32 0, i32* %38, align 4, !dbg !5058
  %39 = or i32 %3, 88, !dbg !5059
  %40 = inttoptr i32 %39 to i32*, !dbg !5059
  store volatile i32 0, i32* %40, align 8, !dbg !5060
  %41 = or i32 %3, 96, !dbg !5061
  %42 = inttoptr i32 %41 to i32*, !dbg !5061
  store volatile i32 0, i32* %42, align 32, !dbg !5062
  ret void, !dbg !5063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #5 !dbg !5064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5066, metadata !DIExpression()), !dbg !5068
  %2 = icmp eq i32 %0, 0, !dbg !5069
  call void @llvm.dbg.value(metadata i32 undef, metadata !5067, metadata !DIExpression()), !dbg !5068
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !5070

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !5071
  %7 = and i32 %6, 64, !dbg !5072
  %8 = icmp eq i32 %7, 0, !dbg !5073
  br i1 %8, label %5, label %9, !dbg !5070, !llvm.loop !5074

9:                                                ; preds = %5
  ret void, !dbg !5076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5077 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5081, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i32 %1, metadata !5082, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i8* %2, metadata !5083, metadata !DIExpression()), !dbg !5093
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5094
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5094
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5084, metadata !DIExpression()), !dbg !5095
  call void @llvm.va_start(i8* nonnull %5), !dbg !5096
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5097
  %7 = load i32, i32* %6, align 4, !dbg !5097
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5097
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #20, !dbg !5097
  call void @llvm.va_end(i8* nonnull %5), !dbg !5098
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5099
  ret void, !dbg !5099
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5100 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5102, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i32 %1, metadata !5103, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i8* %2, metadata !5104, metadata !DIExpression()), !dbg !5106
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5105, metadata !DIExpression()), !dbg !5108
  call void @llvm.va_start(i8* nonnull %5), !dbg !5109
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5110
  %7 = load i32, i32* %6, align 4, !dbg !5110
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5110
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #20, !dbg !5110
  call void @llvm.va_end(i8* nonnull %5), !dbg !5111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5112
  ret void, !dbg !5112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5113 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5115, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i32 %1, metadata !5116, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i8* %2, metadata !5117, metadata !DIExpression()), !dbg !5119
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5120
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5118, metadata !DIExpression()), !dbg !5121
  call void @llvm.va_start(i8* nonnull %5), !dbg !5122
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5123
  %7 = load i32, i32* %6, align 4, !dbg !5123
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5123
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 2, i8* noundef %2, [1 x i32] %8) #20, !dbg !5123
  call void @llvm.va_end(i8* nonnull %5), !dbg !5124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5125
  ret void, !dbg !5125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5126 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5128, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i32 %1, metadata !5129, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i8* %2, metadata !5130, metadata !DIExpression()), !dbg !5132
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5133
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5133
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5131, metadata !DIExpression()), !dbg !5134
  call void @llvm.va_start(i8* nonnull %5), !dbg !5135
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5136
  %7 = load i32, i32* %6, align 4, !dbg !5136
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5136
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %2, [1 x i32] %8) #20, !dbg !5136
  call void @llvm.va_end(i8* nonnull %5), !dbg !5137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5138
  ret void, !dbg !5138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_dump_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3, i32 noundef %4, ...) local_unnamed_addr #0 !dbg !5139 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5143, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i32 %1, metadata !5144, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %2, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %3, metadata !5146, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i32 %4, metadata !5147, metadata !DIExpression()), !dbg !5149
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !5150
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !5150
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !5148, metadata !DIExpression()), !dbg !5151
  call void @llvm.va_start(i8* nonnull %7), !dbg !5152
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !5153
  %9 = load i32, i32* %8, align 4, !dbg !5153
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !5153
  call void @vdump_module_buffer(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %3, i32 noundef %4, i8* noundef %2, [1 x i32] %10) #20, !dbg !5153
  call void @llvm.va_end(i8* nonnull %7), !dbg !5154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !5155
  ret void, !dbg !5155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !5156 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %1, metadata !5162, metadata !DIExpression()), !dbg !5164
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !5165, !range !2210
  %3 = icmp eq i8 %2, 0, !dbg !5165
  br i1 %3, label %5, label %4, !dbg !5167

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5168
  br label %15, !dbg !5170

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !5171
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5173
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !5174
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5175
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5176
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5177
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5178
  call void @llvm.dbg.value(metadata i32 0, metadata !5161, metadata !DIExpression()), !dbg !5164
  br label %7, !dbg !5179

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5161, metadata !DIExpression()), !dbg !5164
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !5181
  store volatile i32 0, i32* %9, align 4, !dbg !5184
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !5185
  store volatile i32 0, i32* %10, align 4, !dbg !5186
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !5187
  store i32 0, i32* %11, align 4, !dbg !5188
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !5189
  store i32 0, i32* %12, align 4, !dbg !5190
  %13 = add nuw nsw i32 %8, 1, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %13, metadata !5161, metadata !DIExpression()), !dbg !5164
  %14 = icmp eq i32 %13, 16, !dbg !5192
  br i1 %14, label %15, label %7, !dbg !5179, !llvm.loop !5193

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !5164
  ret i32 %16, !dbg !5195
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5196 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5199
  call void @llvm.dbg.value(metadata i32 %1, metadata !5198, metadata !DIExpression()), !dbg !5200
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5201
  %3 = and i32 %2, -31, !dbg !5201
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5201
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5202
  %5 = or i32 %4, 19, !dbg !5202
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5202
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5203
  %7 = and i32 %6, -31, !dbg !5203
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5203
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5204
  %9 = or i32 %8, 3, !dbg !5204
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5204
  tail call void asm sideeffect "isb", ""() #19, !dbg !5205, !srcloc !5209
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5210
  ret i32 0, !dbg !5211
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !5212 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !5215
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5216
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5217
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5218
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5219
  call void @llvm.dbg.value(metadata i32 0, metadata !5214, metadata !DIExpression()), !dbg !5220
  br label %2, !dbg !5221

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5214, metadata !DIExpression()), !dbg !5220
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !5223
  store volatile i32 0, i32* %4, align 4, !dbg !5226
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !5227
  store volatile i32 0, i32* %5, align 4, !dbg !5228
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !5229
  store i32 0, i32* %6, align 4, !dbg !5230
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !5231
  store i32 0, i32* %7, align 4, !dbg !5232
  %8 = add nuw nsw i32 %3, 1, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %8, metadata !5214, metadata !DIExpression()), !dbg !5220
  %9 = icmp eq i32 %8, 16, !dbg !5234
  br i1 %9, label %10, label %2, !dbg !5221, !llvm.loop !5235

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !5237
  ret i32 0, !dbg !5238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #5 !dbg !5239 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5240
  %2 = and i32 %1, 768, !dbg !5242
  %3 = icmp eq i32 %2, 0, !dbg !5242
  br i1 %3, label %8, label %4, !dbg !5243

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5244
  %6 = or i32 %5, 13, !dbg !5244
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5244
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5245
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5246
  br label %8, !dbg !5247

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !5248
  ret i32 %9, !dbg !5249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !5250 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5253
  call void @llvm.dbg.value(metadata i32 %1, metadata !5252, metadata !DIExpression()), !dbg !5254
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5255
  %3 = and i32 %2, 1, !dbg !5257
  %4 = icmp eq i32 %3, 0, !dbg !5257
  br i1 %4, label %7, label %5, !dbg !5258

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !5259
  br label %7, !dbg !5261

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5262
  %9 = and i32 %8, -2, !dbg !5262
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5262
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5263
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5264
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5265
  ret i32 0, !dbg !5266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #5 !dbg !5267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5271, metadata !DIExpression()), !dbg !5272
  %2 = icmp ugt i32 %0, 15, !dbg !5273
  br i1 %2, label %13, label %3, !dbg !5275

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5276
  %5 = load volatile i32, i32* %4, align 4, !dbg !5276
  %6 = and i32 %5, 256, !dbg !5278
  %7 = icmp eq i32 %6, 0, !dbg !5278
  br i1 %7, label %13, label %8, !dbg !5279

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !5280
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5282
  %11 = or i32 %10, %9, !dbg !5282
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5282
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5283
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !5284
  br label %13, !dbg !5285

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !5272
  ret i32 %14, !dbg !5286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #5 !dbg !5287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5289, metadata !DIExpression()), !dbg !5290
  %2 = icmp ugt i32 %0, 15, !dbg !5291
  br i1 %2, label %11, label %3, !dbg !5293

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !5294
  %5 = xor i32 %4, -1, !dbg !5295
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5296
  %7 = and i32 %6, %5, !dbg !5296
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5296
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5297
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !5298
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5299
  store i32 0, i32* %9, align 4, !dbg !5300
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5301
  store i32 0, i32* %10, align 4, !dbg !5302
  br label %11, !dbg !5303

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !5290
  ret i32 %12, !dbg !5304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #5 !dbg !5305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5310, metadata !DIExpression()), !dbg !5311
  %2 = icmp ugt i32 %0, 3, !dbg !5312
  br i1 %2, label %13, label %3, !dbg !5314

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5315
  %5 = and i32 %4, -769, !dbg !5315
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5315
  %6 = shl nuw nsw i32 %0, 8, !dbg !5316
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5317
  %8 = or i32 %7, %6, !dbg !5317
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5317
  %9 = icmp eq i32 %0, 0, !dbg !5318
  br i1 %9, label %10, label %11, !dbg !5320

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5321
  br label %11, !dbg !5323

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5324
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5325
  br label %13, !dbg !5326

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !5311
  ret i32 %14, !dbg !5327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !5328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5339, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !5340, metadata !DIExpression()), !dbg !5341
  %3 = icmp ugt i32 %0, 15, !dbg !5342
  br i1 %3, label %30, label %4, !dbg !5344

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !5345
  br i1 %5, label %30, label %6, !dbg !5347

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !5348
  %8 = load i32, i32* %7, align 4, !dbg !5348
  %9 = and i32 %8, 4095, !dbg !5350
  %10 = icmp eq i32 %9, 0, !dbg !5350
  br i1 %10, label %12, label %11, !dbg !5351

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.67, i32 0, i32 0)) #21, !dbg !5352
  unreachable, !dbg !5352

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !5354
  %14 = load i32, i32* %13, align 4, !dbg !5354
  %15 = and i32 %14, 4095, !dbg !5356
  %16 = icmp eq i32 %15, 0, !dbg !5356
  br i1 %16, label %18, label %17, !dbg !5357

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.67, i32 0, i32 0)) #21, !dbg !5358
  unreachable, !dbg !5358

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5360
  store volatile i32 %8, i32* %19, align 4, !dbg !5361
  %20 = load i32, i32* %7, align 4, !dbg !5362
  %21 = load i32, i32* %13, align 4, !dbg !5363
  %22 = add i32 %21, %20, !dbg !5364
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !5365
  store volatile i32 %22, i32* %23, align 4, !dbg !5366
  %24 = load volatile i32, i32* %19, align 4, !dbg !5367
  %25 = or i32 %24, 256, !dbg !5367
  store volatile i32 %25, i32* %19, align 4, !dbg !5367
  %26 = load volatile i32, i32* %19, align 4, !dbg !5368
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5369
  store i32 %26, i32* %27, align 4, !dbg !5370
  %28 = load volatile i32, i32* %23, align 4, !dbg !5371
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5372
  store i32 %28, i32* %29, align 4, !dbg !5373
  br label %30, !dbg !5374

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !5341
  ret i32 %31, !dbg !5375
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5380, metadata !DIExpression()), !dbg !5382
  %2 = and i32 %0, 31, !dbg !5383
  %3 = icmp eq i32 %2, 0, !dbg !5383
  br i1 %3, label %4, label %9, !dbg !5385

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5386
  call void @llvm.dbg.value(metadata i32 %5, metadata !5381, metadata !DIExpression()), !dbg !5382
  %6 = and i32 %0, -32, !dbg !5387
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5388
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5389
  %8 = or i32 %7, 5, !dbg !5389
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5389
  tail call void asm sideeffect "isb", ""() #19, !dbg !5390, !srcloc !5209
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !5392
  br label %9, !dbg !5393

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5382
  ret i32 %10, !dbg !5394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5399, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %1, metadata !5400, metadata !DIExpression()), !dbg !5403
  %3 = add i32 %1, %0, !dbg !5404
  call void @llvm.dbg.value(metadata i32 %3, metadata !5402, metadata !DIExpression()), !dbg !5403
  %4 = or i32 %1, %0, !dbg !5405
  %5 = and i32 %4, 31, !dbg !5405
  %6 = icmp eq i32 %5, 0, !dbg !5405
  br i1 %6, label %7, label %16, !dbg !5405

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %8, metadata !5401, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %0, metadata !5399, metadata !DIExpression()), !dbg !5403
  %9 = icmp ugt i32 %3, %0, !dbg !5408
  br i1 %9, label %10, label %15, !dbg !5409

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5399, metadata !DIExpression()), !dbg !5403
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #22, !dbg !5410
  %13 = add i32 %11, 32, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %13, metadata !5399, metadata !DIExpression()), !dbg !5403
  %14 = icmp ult i32 %13, %3, !dbg !5408
  br i1 %14, label %10, label %15, !dbg !5409, !llvm.loop !5413

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #19, !dbg !5415, !srcloc !5209
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5417
  br label %16, !dbg !5418

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5403
  ret i32 %17, !dbg !5419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5422, metadata !DIExpression()), !dbg !5424
  %2 = and i32 %0, 31, !dbg !5425
  %3 = icmp eq i32 %2, 0, !dbg !5425
  br i1 %3, label %4, label %9, !dbg !5427

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %5, metadata !5423, metadata !DIExpression()), !dbg !5424
  %6 = and i32 %0, -32, !dbg !5429
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5430
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5431
  %8 = or i32 %7, 21, !dbg !5431
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5431
  tail call void asm sideeffect "isb", ""() #19, !dbg !5432, !srcloc !5209
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !5434
  br label %9, !dbg !5435

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5424
  ret i32 %10, !dbg !5436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5439, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata i32 %1, metadata !5440, metadata !DIExpression()), !dbg !5443
  %3 = add i32 %1, %0, !dbg !5444
  call void @llvm.dbg.value(metadata i32 %3, metadata !5442, metadata !DIExpression()), !dbg !5443
  %4 = or i32 %1, %0, !dbg !5445
  %5 = and i32 %4, 31, !dbg !5445
  %6 = icmp eq i32 %5, 0, !dbg !5445
  br i1 %6, label %7, label %16, !dbg !5445

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5447
  call void @llvm.dbg.value(metadata i32 %8, metadata !5441, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata i32 %0, metadata !5439, metadata !DIExpression()), !dbg !5443
  %9 = icmp ugt i32 %3, %0, !dbg !5448
  br i1 %9, label %10, label %15, !dbg !5449

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5439, metadata !DIExpression()), !dbg !5443
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #22, !dbg !5450
  %13 = add i32 %11, 32, !dbg !5452
  call void @llvm.dbg.value(metadata i32 %13, metadata !5439, metadata !DIExpression()), !dbg !5443
  %14 = icmp ult i32 %13, %3, !dbg !5448
  br i1 %14, label %10, label %15, !dbg !5449, !llvm.loop !5453

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #19, !dbg !5455, !srcloc !5209
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5457
  br label %16, !dbg !5458

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5443
  ret i32 %17, !dbg !5459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5460 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5463
  call void @llvm.dbg.value(metadata i32 %1, metadata !5462, metadata !DIExpression()), !dbg !5464
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5465
  %3 = and i32 %2, -31, !dbg !5465
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5465
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5466
  %5 = or i32 %4, 19, !dbg !5466
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5466
  tail call void asm sideeffect "isb", ""() #19, !dbg !5467, !srcloc !5209
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5469
  ret i32 0, !dbg !5470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #5 !dbg !5471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5475, metadata !DIExpression()), !dbg !5477
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5478
  %3 = and i32 %2, 8, !dbg !5480
  %4 = icmp eq i32 %3, 0, !dbg !5480
  br i1 %4, label %23, label %5, !dbg !5481

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5476, metadata !DIExpression()), !dbg !5477
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5482
  %8 = shl nuw nsw i32 1, %6, !dbg !5487
  %9 = and i32 %7, %8, !dbg !5488
  %10 = icmp eq i32 %9, 0, !dbg !5488
  br i1 %10, label %20, label %11, !dbg !5489

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !5490
  %13 = load volatile i32, i32* %12, align 4, !dbg !5490
  %14 = and i32 %13, -257, !dbg !5493
  %15 = icmp ugt i32 %14, %0, !dbg !5494
  br i1 %15, label %20, label %16, !dbg !5495

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !5496
  %18 = load volatile i32, i32* %17, align 4, !dbg !5496
  %19 = icmp ugt i32 %18, %0, !dbg !5497
  br i1 %19, label %23, label %20, !dbg !5498

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !5499
  call void @llvm.dbg.value(metadata i32 %21, metadata !5476, metadata !DIExpression()), !dbg !5477
  %22 = icmp eq i32 %21, 16, !dbg !5500
  br i1 %22, label %23, label %5, !dbg !5501, !llvm.loop !5502

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !5477
  ret i1 %24, !dbg !5504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #7 !dbg !5505 {
  ret i32 0, !dbg !5509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5514, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i32 -1, metadata !5515, metadata !DIExpression()), !dbg !5516
  %2 = icmp ugt i32 %0, 95, !dbg !5517
  br i1 %2, label %4, label %3, !dbg !5517

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #22, !dbg !5519
  call void @llvm.dbg.value(metadata i32 0, metadata !5515, metadata !DIExpression()), !dbg !5516
  br label %4, !dbg !5521

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5516
  ret i32 %5, !dbg !5522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5527, metadata !DIExpression()), !dbg !5528
  %2 = and i32 %0, 31, !dbg !5529
  %3 = shl nuw i32 1, %2, !dbg !5530
  %4 = lshr i32 %0, 5, !dbg !5531
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5532
  store volatile i32 %3, i32* %5, align 4, !dbg !5533
  ret void, !dbg !5534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5537, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i32 -1, metadata !5538, metadata !DIExpression()), !dbg !5539
  %2 = icmp ugt i32 %0, 95, !dbg !5540
  br i1 %2, label %4, label %3, !dbg !5540

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #22, !dbg !5542
  call void @llvm.dbg.value(metadata i32 0, metadata !5538, metadata !DIExpression()), !dbg !5539
  br label %4, !dbg !5544

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5539
  ret i32 %5, !dbg !5545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5548, metadata !DIExpression()), !dbg !5549
  %2 = and i32 %0, 31, !dbg !5550
  %3 = shl nuw i32 1, %2, !dbg !5551
  %4 = lshr i32 %0, 5, !dbg !5552
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5553
  store volatile i32 %3, i32* %5, align 4, !dbg !5554
  ret void, !dbg !5555
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #8 !dbg !5556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5560, metadata !DIExpression()), !dbg !5562
  call void @llvm.dbg.value(metadata i32 255, metadata !5561, metadata !DIExpression()), !dbg !5562
  %2 = icmp ugt i32 %0, 95, !dbg !5563
  br i1 %2, label %5, label %3, !dbg !5563

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #22, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %4, metadata !5561, metadata !DIExpression()), !dbg !5562
  br label %5, !dbg !5567

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !5562
  ret i32 %6, !dbg !5568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #8 !dbg !5569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5573, metadata !DIExpression()), !dbg !5574
  %2 = lshr i32 %0, 5, !dbg !5575
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !5576
  %4 = load volatile i32, i32* %3, align 4, !dbg !5576
  %5 = and i32 %0, 31, !dbg !5577
  %6 = lshr i32 %4, %5, !dbg !5578
  %7 = and i32 %6, 1, !dbg !5578
  ret i32 %7, !dbg !5579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5582, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 -1, metadata !5583, metadata !DIExpression()), !dbg !5584
  %2 = icmp ugt i32 %0, 95, !dbg !5585
  br i1 %2, label %4, label %3, !dbg !5585

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #22, !dbg !5587
  call void @llvm.dbg.value(metadata i32 0, metadata !5583, metadata !DIExpression()), !dbg !5584
  br label %4, !dbg !5589

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5584
  ret i32 %5, !dbg !5590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5593, metadata !DIExpression()), !dbg !5594
  %2 = and i32 %0, 31, !dbg !5595
  %3 = shl nuw i32 1, %2, !dbg !5596
  %4 = lshr i32 %0, 5, !dbg !5597
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5598
  store volatile i32 %3, i32* %5, align 4, !dbg !5599
  ret void, !dbg !5600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5603, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.value(metadata i32 -1, metadata !5604, metadata !DIExpression()), !dbg !5605
  %2 = icmp ugt i32 %0, 95, !dbg !5606
  br i1 %2, label %4, label %3, !dbg !5606

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #22, !dbg !5608
  call void @llvm.dbg.value(metadata i32 0, metadata !5604, metadata !DIExpression()), !dbg !5605
  br label %4, !dbg !5610

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5605
  ret i32 %5, !dbg !5611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5614, metadata !DIExpression()), !dbg !5615
  %2 = and i32 %0, 31, !dbg !5616
  %3 = shl nuw i32 1, %2, !dbg !5617
  %4 = lshr i32 %0, 5, !dbg !5618
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5619
  store volatile i32 %3, i32* %5, align 4, !dbg !5620
  ret void, !dbg !5621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5626, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %1, metadata !5627, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 -1, metadata !5628, metadata !DIExpression()), !dbg !5629
  %3 = icmp ugt i32 %0, 95, !dbg !5630
  br i1 %3, label %5, label %4, !dbg !5630

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #22, !dbg !5632
  call void @llvm.dbg.value(metadata i32 0, metadata !5628, metadata !DIExpression()), !dbg !5629
  br label %5, !dbg !5634

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !5629
  ret i32 %6, !dbg !5635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5640, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.value(metadata i32 %1, metadata !5641, metadata !DIExpression()), !dbg !5642
  %3 = trunc i32 %1 to i8, !dbg !5643
  %4 = shl i8 %3, 5, !dbg !5643
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5646
  store volatile i8 %4, i8* %5, align 1, !dbg !5647
  ret void, !dbg !5648
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #8 !dbg !5649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5651, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.value(metadata i32 68, metadata !5652, metadata !DIExpression()), !dbg !5653
  %2 = icmp ugt i32 %0, 95, !dbg !5654
  br i1 %2, label %5, label %3, !dbg !5654

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #22, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %4, metadata !5652, metadata !DIExpression()), !dbg !5653
  br label %5, !dbg !5658

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !5653
  ret i32 %6, !dbg !5659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #8 !dbg !5660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5662, metadata !DIExpression()), !dbg !5663
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5664
  %3 = load volatile i8, i8* %2, align 1, !dbg !5664
  %4 = lshr i8 %3, 5, !dbg !5667
  %5 = zext i8 %4 to i32, !dbg !5667
  ret i32 %5, !dbg !5668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".ramTEXT" !dbg !5669 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5671, metadata !DIExpression()), !dbg !5673
  tail call void @Flash_ReturnReady() #20, !dbg !5674
  %1 = tail call fastcc i32 @get_current_irq() #22, !dbg !5675
  call void @llvm.dbg.value(metadata i32 %1, metadata !5672, metadata !DIExpression()), !dbg !5673
  %2 = icmp ugt i32 %1, 95, !dbg !5676
  br i1 %2, label %12, label %3, !dbg !5676

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !5678
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !5678
  %6 = icmp eq void (i32)* %5, null, !dbg !5680
  br i1 %6, label %7, label %8, !dbg !5681

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !5671, metadata !DIExpression()), !dbg !5673
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i32 0, i32 0)) #20, !dbg !5682
  br label %12, !dbg !5684

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #22, !dbg !5685
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !5687
  store i32 %9, i32* %10, align 4, !dbg !5688
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !5689
  tail call void %11(i32 noundef %1) #20, !dbg !5690
  call void @llvm.dbg.value(metadata i32 0, metadata !5671, metadata !DIExpression()), !dbg !5673
  br label %12, !dbg !5691

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !5673
  ret i32 %13, !dbg !5692
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #8 !dbg !5693 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5696
  %2 = and i32 %1, 511, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %2, metadata !5695, metadata !DIExpression()), !dbg !5698
  %3 = add nsw i32 %2, -16, !dbg !5699
  ret i32 %3, !dbg !5700
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #8 !dbg !5701 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5702
  %2 = lshr i32 %1, 22, !dbg !5703
  %3 = and i32 %2, 1, !dbg !5703
  ret i32 %3, !dbg !5704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !5705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5710, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !5711, metadata !DIExpression()), !dbg !5713
  %3 = icmp ugt i32 %0, 95, !dbg !5714
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !5714
  br i1 %5, label %10, label %6, !dbg !5714

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5716
  call void @llvm.dbg.value(metadata i32 %7, metadata !5712, metadata !DIExpression()), !dbg !5713
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #22, !dbg !5717
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !5718
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !5719
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !5720
  store i32 0, i32* %9, align 4, !dbg !5721
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5722
  br label %10, !dbg !5723

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !5713
  ret i32 %11, !dbg !5724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !5725 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5729, metadata !DIExpression()), !dbg !5730
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5731
  store i32 %2, i32* %0, align 4, !dbg !5732
  ret i32 0, !dbg !5733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !5734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5738, metadata !DIExpression()), !dbg !5739
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !5740
  ret i32 0, !dbg !5741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !5742 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5747, metadata !DIExpression()), !dbg !5748
  %1 = tail call i32 @flash_sfc_config(i8 noundef zeroext 0) #20, !dbg !5749
  call void @llvm.dbg.value(metadata i32 %1, metadata !5747, metadata !DIExpression()), !dbg !5748
  %2 = ashr i32 %1, 31, !dbg !5750
  ret i32 %2, !dbg !5751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #7 !dbg !5752 {
  ret i32 0, !dbg !5753
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5759, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.value(metadata i32 %1, metadata !5760, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.value(metadata i32 -1, metadata !5761, metadata !DIExpression()), !dbg !5762
  %3 = tail call i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) #20, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %3, metadata !5761, metadata !DIExpression()), !dbg !5762
  %4 = ashr i32 %3, 31, !dbg !5764
  ret i32 %4, !dbg !5765
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5770, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata i8* %1, metadata !5771, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata i32 %2, metadata !5772, metadata !DIExpression()), !dbg !5773
  %4 = add i32 %0, 268435456, !dbg !5774
  %5 = inttoptr i32 %4 to i8*, !dbg !5775
  tail call void @hal_flash_direct_read(i8* noundef %5, i8* noundef %1, i32 noundef %2) #20, !dbg !5776
  ret i32 0, !dbg !5777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5782, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata i8* %1, metadata !5783, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata i32 %2, metadata !5784, metadata !DIExpression()), !dbg !5786
  %4 = tail call i32 @flash_sfc_write(i32 noundef %0, i32 noundef %2, i8* noundef %1) #20, !dbg !5787
  call void @llvm.dbg.value(metadata i32 %4, metadata !5785, metadata !DIExpression()), !dbg !5786
  %5 = ashr i32 %4, 31, !dbg !5788
  ret i32 %5, !dbg !5789
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !5790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5795, metadata !DIExpression()), !dbg !5796
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !5797
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5799
  %4 = load i8, i8* %3, align 4, !dbg !5799, !range !2210
  %5 = icmp eq i8 %4, 0, !dbg !5799
  br i1 %5, label %6, label %12, !dbg !5800

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !5801
  br i1 %7, label %9, label %8, !dbg !5803

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i32 0, i32 0), i32 noundef %0) #20, !dbg !5804
  br label %12, !dbg !5806

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !5807
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #20, !dbg !5808
  store i8 1, i8* %3, align 4, !dbg !5809
  br label %12, !dbg !5810

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !5796
  ret i32 %13, !dbg !5811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #7 !dbg !5812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5816, metadata !DIExpression()), !dbg !5817
  %2 = icmp ult i32 %0, 5, !dbg !5818
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !5820
  ret i1 %4, !dbg !5821
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5824, metadata !DIExpression()), !dbg !5825
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !5826
  br i1 %2, label %4, label %3, !dbg !5828

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i32 0, i32 0), i32 noundef %0) #20, !dbg !5829
  br label %14, !dbg !5831

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !5832
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !5834
  %7 = load i32, i32* %6, align 4, !dbg !5834
  %8 = icmp eq i32 %7, 0, !dbg !5835
  br i1 %8, label %10, label %9, !dbg !5836

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.82, i32 0, i32 0), i32 noundef %0) #20, !dbg !5837
  br label %14, !dbg !5839

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !5840
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #20, !dbg !5841
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5842
  store i8 0, i8* %13, align 4, !dbg !5843
  br label %14, !dbg !5844

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !5825
  ret i32 %15, !dbg !5845
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !5846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5851, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.value(metadata i32* %1, metadata !5852, metadata !DIExpression()), !dbg !5853
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !5854

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !5855
  %5 = icmp eq i32 %4, 1, !dbg !5859
  br i1 %5, label %7, label %6, !dbg !5860

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #20, !dbg !5861
  br label %7, !dbg !5863

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #20, !dbg !5864
  store i32 %8, i32* %1, align 4, !dbg !5865
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !5866
  br label %25, !dbg !5867

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5868
  %11 = icmp eq i32 %10, 1, !dbg !5872
  br i1 %11, label %13, label %12, !dbg !5873

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #20, !dbg !5874
  br label %13, !dbg !5876

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #20, !dbg !5877
  %15 = tail call i32 @top_mcu_freq_get() #20, !dbg !5878
  %16 = udiv i32 %15, 1000000, !dbg !5879
  %17 = udiv i32 %14, %16, !dbg !5880
  store i32 %17, i32* %1, align 4, !dbg !5881
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5882
  br label %25, !dbg !5883

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5884
  %20 = icmp eq i32 %19, 1, !dbg !5888
  br i1 %20, label %22, label %21, !dbg !5889

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #20, !dbg !5890
  br label %22, !dbg !5892

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #20, !dbg !5893
  store i32 %23, i32* %1, align 4, !dbg !5894
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5895
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.85, i32 0, i32 0), i32 noundef %0) #20, !dbg !5896
  br label %25, !dbg !5898

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !5853
  ret i32 %26, !dbg !5899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 !dbg !5900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %1, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32* %2, metadata !5906, metadata !DIExpression()), !dbg !5907
  %4 = icmp eq i32* %2, null, !dbg !5908
  br i1 %4, label %7, label %5, !dbg !5910

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !5911
  store i32 %6, i32* %2, align 4, !dbg !5911
  br label %7, !dbg !5913

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !5907
  ret i32 %8, !dbg !5914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !5915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5920, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32* %1, metadata !5921, metadata !DIExpression()), !dbg !5922
  %3 = icmp ugt i32 %0, 4, !dbg !5923
  br i1 %3, label %4, label %5, !dbg !5925

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.86, i32 0, i32 0), i32 noundef %0) #20, !dbg !5926
  br label %8, !dbg !5928

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !5929
  %7 = load i32, i32* %6, align 4, !dbg !5929
  store i32 %7, i32* %1, align 4, !dbg !5930
  br label %8, !dbg !5931

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !5922
  ret i32 %9, !dbg !5932
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5937, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !5938, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.value(metadata i8* %2, metadata !5939, metadata !DIExpression()), !dbg !5940
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !5941
  br i1 %4, label %6, label %5, !dbg !5943

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #20, !dbg !5944
  br label %15, !dbg !5946

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5947
  %8 = load i8, i8* %7, align 4, !dbg !5947, !range !2210
  %9 = icmp eq i8 %8, 1, !dbg !5949
  br i1 %9, label %10, label %15, !dbg !5950

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !5951
  br i1 %11, label %15, label %12, !dbg !5953

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !5954
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !5955
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !5956
  store i8* %2, i8** %14, align 4, !dbg !5957
  br label %15, !dbg !5958

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !5940
  ret i32 %16, !dbg !5959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %1, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5967, metadata !DIExpression()), !dbg !5968
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !5969
  br i1 %4, label %6, label %5, !dbg !5971

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #20, !dbg !5972
  br label %17, !dbg !5974

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5975
  %8 = load i8, i8* %7, align 4, !dbg !5975, !range !2210
  %9 = icmp eq i8 %8, 1, !dbg !5977
  br i1 %9, label %10, label %17, !dbg !5978

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !5979
  br i1 %11, label %17, label %12, !dbg !5981

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #22, !dbg !5982
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #22, !dbg !5983
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #22, !dbg !5984
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #20, !dbg !5985
  tail call void @TMR_Start(i32 noundef %0) #20, !dbg !5986
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !5987
  store i32 1, i32* %16, align 4, !dbg !5988
  br label %17, !dbg !5989

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !5968
  ret i32 %18, !dbg !5990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #7 !dbg !5991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5995, metadata !DIExpression()), !dbg !5996
  %2 = shl i32 %0, 5, !dbg !5997
  %3 = mul i32 %0, 7, !dbg !5998
  %4 = udiv i32 %3, 10, !dbg !5999
  %5 = add i32 %4, %2, !dbg !6000
  %6 = mul i32 %0, 6, !dbg !6001
  %7 = udiv i32 %6, 100, !dbg !6002
  %8 = add i32 %5, %7, !dbg !6003
  %9 = shl i32 %0, 3, !dbg !6004
  %10 = udiv i32 %9, 1000, !dbg !6005
  %11 = add i32 %8, %10, !dbg !6006
  ret i32 %11, !dbg !6007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #7 !dbg !6008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6012, metadata !DIExpression()), !dbg !6013
  %2 = icmp eq i32 %0, 1, !dbg !6014
  ret i1 %2, !dbg !6015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #7 !dbg !6016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6021, metadata !DIExpression()), !dbg !6022
  %2 = icmp eq i32 %0, 0, !dbg !6023
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !6024
  ret void ()* %3, !dbg !6025
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #0 !dbg !6026 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !6030
  %2 = icmp eq void (i8*)* %1, null, !dbg !6032
  br i1 %2, label %5, label %3, !dbg !6033

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !6034
  tail call void %1(i8* noundef %4) #20, !dbg !6036
  br label %5, !dbg !6037

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !6038
  ret void, !dbg !6039
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #0 !dbg !6040 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !6043
  %2 = icmp eq void (i8*)* %1, null, !dbg !6045
  br i1 %2, label %5, label %3, !dbg !6046

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !6047
  tail call void %1(i8* noundef %4) #20, !dbg !6049
  br label %5, !dbg !6050

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !6051
  ret void, !dbg !6052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !6053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6055, metadata !DIExpression()), !dbg !6056
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !6057
  br i1 %2, label %4, label %3, !dbg !6059

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #20, !dbg !6060
  br label %6, !dbg !6062

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #20, !dbg !6063
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6064
  store i32 0, i32* %5, align 4, !dbg !6065
  br label %6, !dbg !6066

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !6056
  ret i32 %7, !dbg !6067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !6068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6072, metadata !DIExpression()), !dbg !6073
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6074
  %3 = icmp eq i32 %2, 1, !dbg !6076
  br i1 %3, label %5, label %4, !dbg !6077

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #20, !dbg !6078
  br label %5, !dbg !6080

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #20, !dbg !6081
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6082
  ret i32 0, !dbg !6083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !6084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6086, metadata !DIExpression()), !dbg !6087
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6088
  %3 = icmp eq i32 %2, 1, !dbg !6090
  br i1 %3, label %5, label %4, !dbg !6091

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #20, !dbg !6092
  br label %5, !dbg !6094

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #20, !dbg !6095
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6096
  ret i32 0, !dbg !6097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !6098 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6100, metadata !DIExpression()), !dbg !6103
  %4 = bitcast i32* %2 to i8*, !dbg !6104
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !6104
  %5 = bitcast i32* %3 to i8*, !dbg !6105
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !6105
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6106
  %7 = load i8, i8* %6, align 1, !dbg !6106, !range !2210
  %8 = icmp eq i8 %7, 0, !dbg !6108
  br i1 %8, label %9, label %26, !dbg !6109

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %3, metadata !6102, metadata !DIExpression(DW_OP_deref)), !dbg !6103
  %10 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %3) #20, !dbg !6110
  call void @llvm.dbg.value(metadata i32* %2, metadata !6101, metadata !DIExpression(DW_OP_deref)), !dbg !6103
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %2) #20, !dbg !6112
  %11 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6113
  %12 = load i32, i32* %11, align 4, !dbg !6113
  %13 = load i32, i32* %2, align 4, !dbg !6115
  call void @llvm.dbg.value(metadata i32 %13, metadata !6101, metadata !DIExpression()), !dbg !6103
  %14 = icmp eq i32 %12, %13, !dbg !6116
  br i1 %14, label %15, label %23, !dbg !6117

15:                                               ; preds = %9
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6118
  %17 = load i8, i8* %16, align 1, !dbg !6118, !range !2210
  %18 = icmp eq i8 %17, 0, !dbg !6118
  br i1 %18, label %23, label %19, !dbg !6121

19:                                               ; preds = %15
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6122
  %21 = load i8, i8* %20, align 1, !dbg !6122
  %22 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %21) #20, !dbg !6124
  store i8 0, i8* %16, align 1, !dbg !6125
  br label %23, !dbg !6126

23:                                               ; preds = %15, %19, %9
  %24 = load i32, i32* %3, align 4, !dbg !6127
  call void @llvm.dbg.value(metadata i32 %24, metadata !6102, metadata !DIExpression()), !dbg !6103
  %25 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %24) #20, !dbg !6128
  br label %27, !dbg !6129

26:                                               ; preds = %1
  store i8 0, i8* %6, align 1, !dbg !6130
  br label %27

27:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !6132
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !6132
  ret void, !dbg !6132
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6139, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6140, metadata !DIExpression()), !dbg !6141
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #22, !dbg !6142
  br i1 %3, label %4, label %24, !dbg !6144

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6145
  %6 = load i8, i8* %5, align 4, !dbg !6145, !range !2210
  %7 = icmp eq i8 %6, 0, !dbg !6145
  br i1 %7, label %8, label %24, !dbg !6147

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #20, !dbg !6148
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6149
  %11 = bitcast %struct.hal_uart_config_t* %10 to i8*, !dbg !6150
  %12 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6151
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #20, !dbg !6152
  store i8 1, i8* %5, align 4, !dbg !6153
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6154, !range !6155
  tail call void @uart_reset_default_value(i32 noundef %14) #20, !dbg !6156
  tail call void @halUART_HWInit(i32 noundef %14) #20, !dbg !6157
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #22, !dbg !6158
  %16 = icmp eq i32 %15, 0, !dbg !6160
  br i1 %16, label %17, label %24, !dbg !6161

17:                                               ; preds = %8
  tail call void @uart_set_sleep_mode(i32 noundef %14) #20, !dbg !6162
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6163
  store i8 0, i8* %18, align 1, !dbg !6164
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6165
  store i8 0, i8* %19, align 1, !dbg !6166
  %20 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([2 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !6167
  %21 = load i8*, i8** %20, align 4, !dbg !6167
  %22 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %21) #20, !dbg !6168
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6169
  store i8 %22, i8* %23, align 1, !dbg !6170
  br label %24, !dbg !6171

24:                                               ; preds = %8, %4, %2, %17
  %25 = phi i32 [ 0, %17 ], [ -4, %2 ], [ -3, %4 ], [ -4, %8 ], !dbg !6141
  ret i32 %25, !dbg !6172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef readonly %1) unnamed_addr #9 !dbg !6173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6179, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6180, metadata !DIExpression()), !dbg !6181
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6182
  %4 = icmp ne %struct.hal_uart_config_t* %1, null
  %5 = and i1 %4, %3, !dbg !6184
  br i1 %5, label %6, label %22, !dbg !6184

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6185
  %8 = load i32, i32* %7, align 4, !dbg !6185
  %9 = icmp ugt i32 %8, 12, !dbg !6187
  br i1 %9, label %22, label %10, !dbg !6188

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6189
  %12 = load i32, i32* %11, align 4, !dbg !6189
  %13 = icmp ugt i32 %12, 2, !dbg !6190
  br i1 %13, label %22, label %14, !dbg !6191

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6192
  %16 = load i32, i32* %15, align 4, !dbg !6192
  %17 = icmp ugt i32 %16, 1, !dbg !6193
  br i1 %17, label %22, label %18, !dbg !6194

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6195
  %20 = load i32, i32* %19, align 4, !dbg !6195
  %21 = icmp ult i32 %20, 4, !dbg !6196
  br label %22, !dbg !6197

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !6181
  ret i1 %23, !dbg !6198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #7 !dbg !6199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6203, metadata !DIExpression()), !dbg !6204
  %2 = icmp ne i32 %0, 0, !dbg !6205
  %3 = zext i1 %2 to i32, !dbg !6206
  ret i32 %3, !dbg !6207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6212, metadata !DIExpression()), !dbg !6214
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6213, metadata !DIExpression()), !dbg !6214
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #22, !dbg !6215
  br i1 %3, label %4, label %22, !dbg !6217

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6218
  %6 = bitcast %struct.hal_uart_config_t* %5 to i8*, !dbg !6219
  %7 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6220
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #20, !dbg !6221
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6222
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6223
  %11 = load i32, i32* %10, align 4, !dbg !6223
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #22, !dbg !6224
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6225
  %14 = load i32, i32* %13, align 4, !dbg !6225
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #22, !dbg !6226
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6227
  %17 = load i32, i32* %16, align 4, !dbg !6227
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #22, !dbg !6228
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6229
  %20 = load i32, i32* %19, align 4, !dbg !6229
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #22, !dbg !6230
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #20, !dbg !6231
  br label %22, !dbg !6232

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !6214
  ret i32 %23, !dbg !6233
}

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #7 !dbg !6234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6238, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !6239, metadata !DIExpression()), !dbg !6242
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !6243
  %3 = load i32, i32* %2, align 4, !dbg !6243
  ret i32 %3, !dbg !6244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #7 !dbg !6245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6249, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !6250, metadata !DIExpression()), !dbg !6253
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !6254
  %3 = load i16, i16* %2, align 2, !dbg !6254
  ret i16 %3, !dbg !6255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #7 !dbg !6256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6260, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !6261, metadata !DIExpression()), !dbg !6264
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !6265
  %3 = load i16, i16* %2, align 2, !dbg !6265
  ret i16 %3, !dbg !6266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #7 !dbg !6267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6271, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !6272, metadata !DIExpression()), !dbg !6275
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !6276
  %3 = load i16, i16* %2, align 2, !dbg !6276
  ret i16 %3, !dbg !6277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #7 !dbg !6278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6282, metadata !DIExpression()), !dbg !6283
  %2 = icmp ult i32 %0, 2, !dbg !6284
  ret i1 %2, !dbg !6285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6290, metadata !DIExpression()), !dbg !6291
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6292
  br i1 %2, label %3, label %18, !dbg !6294

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6295
  %5 = load i8, i8* %4, align 4, !dbg !6295, !range !2210
  %6 = icmp eq i8 %5, 0, !dbg !6297
  br i1 %6, label %18, label %7, !dbg !6298

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #20, !dbg !6299
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6300, !range !6155
  tail call void @uart_query_empty(i32 noundef %9) #20, !dbg !6301
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6302
  %11 = load i32, i32* %10, align 4, !dbg !6302
  %12 = tail call i32 @hal_nvic_disable_irq(i32 noundef %11) #20, !dbg !6303
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6304
  store i8 0, i8* %13, align 1, !dbg !6305
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6306
  store i8 0, i8* %14, align 1, !dbg !6307
  tail call void @uart_mask_send_interrupt(i32 noundef %9) #20, !dbg !6308
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6309
  %16 = load i8, i8* %15, align 1, !dbg !6309
  %17 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %16) #20, !dbg !6310
  tail call void @uart_reset_default_value(i32 noundef %9) #20, !dbg !6311
  br label %18, !dbg !6312

18:                                               ; preds = %3, %1, %7
  %19 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6291
  ret i32 %19, !dbg !6313
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6318, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.value(metadata i8 %1, metadata !6319, metadata !DIExpression()), !dbg !6321
  %3 = icmp eq i32 %0, 0, !dbg !6322
  %4 = icmp eq i32 %0, 1, !dbg !6322
  %5 = select i1 %4, i32 1, i32 2, !dbg !6322
  %6 = select i1 %3, i32 0, i32 %5, !dbg !6322
  call void @llvm.dbg.value(metadata i32 %6, metadata !6320, metadata !DIExpression()), !dbg !6321
  %7 = icmp eq i32 %6, 2, !dbg !6323
  br i1 %7, label %9, label %8, !dbg !6325

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #20, !dbg !6326
  br label %9, !dbg !6328

9:                                                ; preds = %2, %8
  ret void, !dbg !6329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6334, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i8* %1, metadata !6335, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i32 %2, metadata !6336, metadata !DIExpression()), !dbg !6339
  %4 = icmp eq i32 %0, 0, !dbg !6340
  %5 = icmp eq i32 %0, 1, !dbg !6340
  %6 = select i1 %5, i32 1, i32 2, !dbg !6340
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6340
  call void @llvm.dbg.value(metadata i32 %7, metadata !6337, metadata !DIExpression()), !dbg !6339
  %8 = icmp eq i8* %1, null, !dbg !6341
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6343
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6343
  call void @llvm.dbg.value(metadata i32 0, metadata !6338, metadata !DIExpression()), !dbg !6339
  br i1 %12, label %19, label %13, !dbg !6343

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6338, metadata !DIExpression()), !dbg !6339
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6344
  %16 = load i8, i8* %15, align 1, !dbg !6344
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #20, !dbg !6350
  %17 = add nuw i32 %14, 1, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %17, metadata !6338, metadata !DIExpression()), !dbg !6339
  %18 = icmp eq i32 %17, %2, !dbg !6352
  br i1 %18, label %19, label %13, !dbg !6353, !llvm.loop !6354

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6339
  ret i32 %20, !dbg !6356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6357 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6359, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata i8* %1, metadata !6360, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata i32 %2, metadata !6361, metadata !DIExpression()), !dbg !6367
  %6 = bitcast i32* %4 to i8*, !dbg !6368
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !6368
  %7 = bitcast i32* %5 to i8*, !dbg !6369
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !6369
  %8 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6370
  br i1 %8, label %9, label %37, !dbg !6372

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null, !dbg !6373
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6375
  br i1 %12, label %37, label %13, !dbg !6375

13:                                               ; preds = %9
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6376
  %15 = load i8, i8* %14, align 4, !dbg !6376, !range !2210
  %16 = icmp eq i8 %15, 0, !dbg !6376
  br i1 %16, label %37, label %17, !dbg !6378

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32* %5, metadata !6366, metadata !DIExpression(DW_OP_deref)), !dbg !6367
  %18 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !6379
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6380
  %20 = load i8, i8* %19, align 1, !dbg !6380, !range !2210
  %21 = icmp eq i8 %20, 0, !dbg !6382
  br i1 %21, label %22, label %26, !dbg !6383

22:                                               ; preds = %17
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6384
  %24 = load i8, i8* %23, align 1, !dbg !6384
  %25 = call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %24) #20, !dbg !6386
  store i8 1, i8* %19, align 1, !dbg !6387
  br label %26, !dbg !6388

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %5, align 4, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %27, metadata !6366, metadata !DIExpression()), !dbg !6367
  %28 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %27) #20, !dbg !6390
  %29 = call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6391, !range !6155
  call void @llvm.dbg.value(metadata i32* %4, metadata !6362, metadata !DIExpression(DW_OP_deref)), !dbg !6367
  call void @halUART_Get_VFIFO_Length(i32 noundef %29, i32 noundef 0, i32* noundef nonnull %4) #20, !dbg !6392
  %30 = load i32, i32* %4, align 4, !dbg !6393
  call void @llvm.dbg.value(metadata i32 %30, metadata !6362, metadata !DIExpression()), !dbg !6367
  %31 = icmp ult i32 %30, %2, !dbg !6395
  %32 = select i1 %31, i32 %30, i32 %2
  call void @llvm.dbg.value(metadata i32 %32, metadata !6363, metadata !DIExpression()), !dbg !6367
  call void @halUART_Write_VFIFO_Data(i32 noundef %29, i8* noundef nonnull %1, i32 noundef %32) #20, !dbg !6396
  %33 = load i32, i32* %4, align 4, !dbg !6397
  call void @llvm.dbg.value(metadata i32 %33, metadata !6362, metadata !DIExpression()), !dbg !6367
  %34 = icmp eq i32 %32, %33, !dbg !6399
  br i1 %34, label %35, label %37, !dbg !6400

35:                                               ; preds = %26
  %36 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %29, i1 noundef zeroext false) #22, !dbg !6401, !range !6403
  call void @llvm.dbg.value(metadata i32 %36, metadata !6364, metadata !DIExpression()), !dbg !6367
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %36) #20, !dbg !6404
  br label %37, !dbg !6405

37:                                               ; preds = %26, %35, %13, %9, %3
  %38 = phi i32 [ 0, %3 ], [ 0, %9 ], [ 0, %13 ], [ %32, %35 ], [ %32, %26 ], !dbg !6367
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !6406
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !6406
  ret i32 %38, !dbg !6406
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #7 !dbg !6407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6411, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i1 %1, metadata !6412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6414
  %3 = icmp eq i32 %0, 0, !dbg !6415
  %4 = select i1 %1, i32 15, i32 14, !dbg !6417
  %5 = select i1 %1, i32 17, i32 16, !dbg !6417
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !6417
  call void @llvm.dbg.value(metadata i32 %6, metadata !6413, metadata !DIExpression()), !dbg !6414
  ret i32 %6, !dbg !6418
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6423, metadata !DIExpression()), !dbg !6425
  %2 = icmp eq i32 %0, 0, !dbg !6426
  %3 = icmp eq i32 %0, 1, !dbg !6426
  %4 = select i1 %3, i32 1, i32 2, !dbg !6426
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6426
  call void @llvm.dbg.value(metadata i32 %5, metadata !6424, metadata !DIExpression()), !dbg !6425
  %6 = icmp ult i32 %5, 2, !dbg !6427
  br i1 %6, label %7, label %9, !dbg !6429

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #20, !dbg !6430
  br label %9, !dbg !6432

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !6433
  ret i8 %10, !dbg !6434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6439, metadata !DIExpression()), !dbg !6441
  %2 = icmp eq i32 %0, 0, !dbg !6442
  %3 = icmp eq i32 %0, 1, !dbg !6442
  %4 = select i1 %3, i32 1, i32 2, !dbg !6442
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6442
  call void @llvm.dbg.value(metadata i32 %5, metadata !6440, metadata !DIExpression()), !dbg !6441
  %6 = icmp ult i32 %5, 2, !dbg !6443
  br i1 %6, label %7, label %9, !dbg !6445

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #20, !dbg !6446
  br label %9, !dbg !6448

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !6449
  ret i32 %10, !dbg !6450
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6455, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i8* %1, metadata !6456, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %2, metadata !6457, metadata !DIExpression()), !dbg !6460
  %4 = icmp eq i32 %0, 0, !dbg !6461
  %5 = icmp eq i32 %0, 1, !dbg !6461
  %6 = select i1 %5, i32 1, i32 2, !dbg !6461
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6461
  call void @llvm.dbg.value(metadata i32 %7, metadata !6458, metadata !DIExpression()), !dbg !6460
  %8 = icmp eq i8* %1, null, !dbg !6462
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6464
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6464
  call void @llvm.dbg.value(metadata i32 0, metadata !6459, metadata !DIExpression()), !dbg !6460
  br i1 %12, label %19, label %13, !dbg !6464

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6459, metadata !DIExpression()), !dbg !6460
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #20, !dbg !6465
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6471
  store i8 %15, i8* %16, align 1, !dbg !6472
  %17 = add nuw i32 %14, 1, !dbg !6473
  call void @llvm.dbg.value(metadata i32 %17, metadata !6459, metadata !DIExpression()), !dbg !6460
  %18 = icmp eq i32 %17, %2, !dbg !6474
  br i1 %18, label %19, label %13, !dbg !6475, !llvm.loop !6476

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6460
  ret i32 %20, !dbg !6478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6479 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6481, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %1, metadata !6482, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %2, metadata !6483, metadata !DIExpression()), !dbg !6487
  %5 = bitcast i32* %4 to i8*, !dbg !6488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !6488
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6489
  br i1 %6, label %7, label %20, !dbg !6491

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !6492
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !6494
  br i1 %10, label %20, label %11, !dbg !6494

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6495, !range !6155
  call void @llvm.dbg.value(metadata i32* %4, metadata !6484, metadata !DIExpression(DW_OP_deref)), !dbg !6487
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #20, !dbg !6496
  %13 = load i32, i32* %4, align 4, !dbg !6497
  call void @llvm.dbg.value(metadata i32 %13, metadata !6484, metadata !DIExpression()), !dbg !6487
  %14 = icmp ult i32 %13, %2, !dbg !6499
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #20, !dbg !6500
  %16 = load i32, i32* %4, align 4, !dbg !6501
  call void @llvm.dbg.value(metadata i32 %16, metadata !6484, metadata !DIExpression()), !dbg !6487
  %17 = icmp eq i32 %15, %16, !dbg !6503
  br i1 %17, label %18, label %20, !dbg !6504

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #22, !dbg !6505, !range !6403
  call void @llvm.dbg.value(metadata i32 %19, metadata !6486, metadata !DIExpression()), !dbg !6487
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #20, !dbg !6507
  br label %20, !dbg !6508

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !6487
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !6509
  ret i32 %21, !dbg !6509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6510 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6512, metadata !DIExpression()), !dbg !6514
  %3 = bitcast i32* %2 to i8*, !dbg !6515
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !6515
  call void @llvm.dbg.value(metadata i32 0, metadata !6513, metadata !DIExpression()), !dbg !6514
  store i32 0, i32* %2, align 4, !dbg !6516
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6517
  br i1 %4, label %5, label %8, !dbg !6519

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6520, !range !6155
  call void @llvm.dbg.value(metadata i32* %2, metadata !6513, metadata !DIExpression(DW_OP_deref)), !dbg !6514
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #20, !dbg !6521
  %7 = load i32, i32* %2, align 4, !dbg !6522
  call void @llvm.dbg.value(metadata i32 %7, metadata !6513, metadata !DIExpression()), !dbg !6514
  br label %8, !dbg !6523

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6514
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !6524
  ret i32 %9, !dbg !6524
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6525 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6527, metadata !DIExpression()), !dbg !6529
  %3 = bitcast i32* %2 to i8*, !dbg !6530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !6530
  call void @llvm.dbg.value(metadata i32 0, metadata !6528, metadata !DIExpression()), !dbg !6529
  store i32 0, i32* %2, align 4, !dbg !6531
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6532
  br i1 %4, label %5, label %8, !dbg !6534

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6535, !range !6155
  call void @llvm.dbg.value(metadata i32* %2, metadata !6528, metadata !DIExpression(DW_OP_deref)), !dbg !6529
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #20, !dbg !6536
  %7 = load i32, i32* %2, align 4, !dbg !6537
  call void @llvm.dbg.value(metadata i32 %7, metadata !6528, metadata !DIExpression()), !dbg !6529
  br label %8, !dbg !6538

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6529
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !6539
  ret i32 %9, !dbg !6539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6544, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6545, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata i8* %2, metadata !6546, metadata !DIExpression()), !dbg !6548
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6549
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6551
  br i1 %6, label %7, label %24, !dbg !6551

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !6552
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !6553
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !6554
  store i8* %2, i8** %9, align 4, !dbg !6555
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !6556
  store i8 1, i8* %10, align 4, !dbg !6557
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6558
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #22, !dbg !6559
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #20, !dbg !6560
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #20, !dbg !6561
  %13 = icmp eq i32 %11, 0, !dbg !6562
  br i1 %13, label %14, label %15, !dbg !6564

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #20, !dbg !6565
  br label %16, !dbg !6567

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #20, !dbg !6568
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #22, !dbg !6570, !range !6403
  call void @llvm.dbg.value(metadata i32 %17, metadata !6547, metadata !DIExpression()), !dbg !6548
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #20, !dbg !6571
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6572
  store i8 1, i8* %18, align 1, !dbg !6573
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6574
  %20 = load i32, i32* %19, align 4, !dbg !6574
  %21 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %20, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !6575
  tail call void @uart_unmask_send_interrupt(i32 noundef %11) #20, !dbg !6576
  %22 = load i32, i32* %19, align 4, !dbg !6577
  %23 = tail call i32 @hal_nvic_enable_irq(i32 noundef %22) #20, !dbg !6578
  br label %24, !dbg !6579

24:                                               ; preds = %3, %16
  %25 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !6548
  ret i32 %25, !dbg !6580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #7 !dbg !751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !757, metadata !DIExpression()), !dbg !6581
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !6582
  %3 = load void ()*, void ()** %2, align 4, !dbg !6582
  ret void ()* %3, !dbg !6583
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #0 !dbg !6584 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6590, !range !2210
  %2 = icmp eq i8 %1, 0, !dbg !6590
  br i1 %2, label %8, label %3, !dbg !6591

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6592
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6594
  br i1 %5, label %8, label %6, !dbg !6595

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6596
  tail call void %4(i32 noundef 2, i8* noundef %7) #20, !dbg !6598
  br label %8, !dbg !6599

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #22, !dbg !6600, !range !6155
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #22, !dbg !6601
  ret void, !dbg !6602
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #0 !dbg !6603 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6608, !range !2210
  %2 = icmp eq i8 %1, 0, !dbg !6608
  br i1 %2, label %8, label %3, !dbg !6609

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6610
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6612
  br i1 %5, label %8, label %6, !dbg !6613

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6614
  tail call void %4(i32 noundef 2, i8* noundef %7) #20, !dbg !6616
  br label %8, !dbg !6617

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #22, !dbg !6618, !range !6155
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #22, !dbg !6619
  ret void, !dbg !6620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #0 !dbg !6621 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6625, metadata !DIExpression()), !dbg !6632
  call void @llvm.dbg.value(metadata i1 %1, metadata !6626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6632
  %5 = bitcast i32* %3 to i8*, !dbg !6633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !6633
  %6 = bitcast i32* %4 to i8*, !dbg !6633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !6633
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6632
  br i1 %1, label %7, label %12, !dbg !6634

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6632
  call void @llvm.dbg.value(metadata i32* %3, metadata !6627, metadata !DIExpression(DW_OP_deref)), !dbg !6632
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #20, !dbg !6635
  %8 = load i32, i32* %3, align 4, !dbg !6638
  call void @llvm.dbg.value(metadata i32 %8, metadata !6627, metadata !DIExpression()), !dbg !6632
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !6640
  %10 = load i32, i32* %9, align 4, !dbg !6640
  %11 = icmp ult i32 %8, %10, !dbg !6641
  br i1 %11, label %22, label %20, !dbg !6642

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !6628, metadata !DIExpression(DW_OP_deref)), !dbg !6632
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #20, !dbg !6643
  %13 = load i32, i32* %4, align 4, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %13, metadata !6628, metadata !DIExpression()), !dbg !6632
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6647
  %15 = load i32, i32* %14, align 4, !dbg !6647
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !6648
  %17 = load i32, i32* %16, align 4, !dbg !6648
  %18 = sub i32 %15, %17, !dbg !6649
  %19 = icmp ult i32 %13, %18, !dbg !6650
  br i1 %19, label %22, label %20, !dbg !6651

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #22, !dbg !6652, !range !6403
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #20, !dbg !6652
  br label %22, !dbg !6653

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !6653
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !6653
  ret void, !dbg !6653
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #0 !dbg !6654 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6659, !range !2210
  %2 = icmp eq i8 %1, 0, !dbg !6659
  br i1 %2, label %11, label %3, !dbg !6660

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #22, !dbg !6661
  %5 = icmp eq i32 %4, 0, !dbg !6662
  br i1 %5, label %11, label %6, !dbg !6663

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6664
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6666
  br i1 %8, label %11, label %9, !dbg !6667

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6668
  tail call void %7(i32 noundef 1, i8* noundef %10) #20, !dbg !6670
  br label %11, !dbg !6671

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #22, !dbg !6672, !range !6155
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #22, !dbg !6673
  ret void, !dbg !6674
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #0 !dbg !6675 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6680, !range !2210
  %2 = icmp eq i8 %1, 0, !dbg !6680
  br i1 %2, label %11, label %3, !dbg !6681

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #22, !dbg !6682
  %5 = icmp eq i32 %4, 0, !dbg !6683
  br i1 %5, label %11, label %6, !dbg !6684

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6685
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6687
  br i1 %8, label %11, label %9, !dbg !6688

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6689
  tail call void %7(i32 noundef 1, i8* noundef %10) #20, !dbg !6691
  br label %11, !dbg !6692

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #22, !dbg !6693, !range !6155
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #22, !dbg !6694
  ret void, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6700, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.value(metadata i32 %1, metadata !6701, metadata !DIExpression()), !dbg !6702
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6703
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !6705
  br i1 %5, label %6, label %10, !dbg !6705

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6706
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !6707
  store i32 %1, i32* %8, align 4, !dbg !6708
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %7) #22, !dbg !6709
  br label %10, !dbg !6710

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !6702
  ret i32 %11, !dbg !6711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #0 !dbg !6712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6718, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6719, metadata !DIExpression()), !dbg !6720
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6721
  br i1 %3, label %4, label %28, !dbg !6723

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #22, !dbg !6724
  br i1 %5, label %6, label %28, !dbg !6726

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6727
  store i8 1, i8* %7, align 4, !dbg !6728
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !6729
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !6730
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !6731
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #20, !dbg !6732
  tail call void @DMA_Init() #20, !dbg !6733
  tail call void @DMA_Vfifo_init() #20, !dbg !6734
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !6735
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !6736
  %14 = load i8*, i8** %13, align 4, !dbg !6736
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !6737
  %16 = load i32, i32* %15, align 4, !dbg !6737
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !6738
  %18 = load i32, i32* %17, align 4, !dbg !6738
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !6739
  %20 = load i32, i32* %19, align 4, !dbg !6739
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #22, !dbg !6740
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #20, !dbg !6741
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !6742
  %23 = load i8*, i8** %22, align 4, !dbg !6742
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !6743
  %25 = load i32, i32* %24, align 4, !dbg !6743
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !6744
  %27 = load i32, i32* %26, align 4, !dbg !6744
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #20, !dbg !6745
  br label %28, !dbg !6746

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !6720
  ret i32 %29, !dbg !6747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #9 !dbg !6748 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !6752, metadata !DIExpression()), !dbg !6753
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !6754
  br i1 %2, label %27, label %3, !dbg !6756

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !6757
  %5 = load i8*, i8** %4, align 4, !dbg !6757
  %6 = icmp eq i8* %5, null, !dbg !6759
  br i1 %6, label %27, label %7, !dbg !6760

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !6761
  %9 = load i32, i32* %8, align 4, !dbg !6761
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !6763
  %11 = load i32, i32* %10, align 4, !dbg !6763
  %12 = icmp ult i32 %9, %11, !dbg !6764
  br i1 %12, label %27, label %13, !dbg !6765

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !6766
  %15 = load i32, i32* %14, align 4, !dbg !6766
  %16 = icmp ult i32 %9, %15, !dbg !6768
  br i1 %16, label %27, label %17, !dbg !6769

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !6770
  %19 = load i8*, i8** %18, align 4, !dbg !6770
  %20 = icmp eq i8* %19, null, !dbg !6772
  br i1 %20, label %27, label %21, !dbg !6773

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !6774
  %23 = load i32, i32* %22, align 4, !dbg !6774
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !6776
  %25 = load i32, i32* %24, align 4, !dbg !6776
  %26 = icmp uge i32 %23, %25, !dbg !6777
  br label %27, !dbg !6778

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !6753
  ret i1 %28, !dbg !6779
}

; Function Attrs: optsize
declare dso_local void @DMA_Init() local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #0 !dbg !6780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6782, metadata !DIExpression()), !dbg !6784
  %2 = tail call i32 @top_mcu_freq_get() #20, !dbg !6785
  %3 = udiv i32 %2, 1000000, !dbg !6786
  call void @llvm.dbg.value(metadata i32 %3, metadata !6783, metadata !DIExpression()), !dbg !6784
  %4 = mul i32 %3, %0, !dbg !6787
  ret i32 %4, !dbg !6788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6791, metadata !DIExpression()), !dbg !6793
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6794
  br i1 %2, label %3, label %8, !dbg !6796

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !6797
  %5 = icmp eq i32 %0, 1, !dbg !6797
  %6 = select i1 %5, i32 1, i32 2, !dbg !6797
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6797
  call void @llvm.dbg.value(metadata i32 %7, metadata !6792, metadata !DIExpression()), !dbg !6793
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #20, !dbg !6798
  br label %8, !dbg !6799

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !6793
  ret i32 %9, !dbg !6800
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !6801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6805, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata i8 %1, metadata !6806, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata i8 %2, metadata !6807, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata i8 %3, metadata !6808, metadata !DIExpression()), !dbg !6810
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6811
  br i1 %5, label %6, label %11, !dbg !6813

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !6814
  %8 = icmp eq i32 %0, 1, !dbg !6814
  %9 = select i1 %8, i32 1, i32 2, !dbg !6814
  %10 = select i1 %7, i32 0, i32 %9, !dbg !6814
  call void @llvm.dbg.value(metadata i32 %10, metadata !6809, metadata !DIExpression()), !dbg !6810
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !6815
  br label %11, !dbg !6816

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !6810
  ret i32 %12, !dbg !6817
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6820, metadata !DIExpression()), !dbg !6822
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6823
  br i1 %2, label %3, label %8, !dbg !6825

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !6826
  %5 = icmp eq i32 %0, 1, !dbg !6826
  %6 = select i1 %5, i32 1, i32 2, !dbg !6826
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6826
  call void @llvm.dbg.value(metadata i32 %7, metadata !6821, metadata !DIExpression()), !dbg !6822
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #20, !dbg !6827
  br label %8, !dbg !6828

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !6822
  ret i32 %9, !dbg !6829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6834, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.value(metadata i32 %1, metadata !6835, metadata !DIExpression()), !dbg !6836
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !6837
  br i1 %3, label %4, label %8, !dbg !6839

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !6840
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #22, !dbg !6842
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #20, !dbg !6842
  br label %8, !dbg !6843

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !6836
  ret i32 %9, !dbg !6843
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Set_timeout(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_reset() local_unnamed_addr #5 !dbg !6844 {
  store volatile i32 0, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !6845
  store volatile i32 0, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !6846
  store volatile i32 0, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !6847
  store volatile i32 0, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !6848
  store volatile i32 0, i32* inttoptr (i32 -536866784 to i32*), align 32, !dbg !6849
  store volatile i32 0, i32* inttoptr (i32 -536866768 to i32*), align 16, !dbg !6850
  store volatile i32 0, i32* inttoptr (i32 -536866752 to i32*), align 64, !dbg !6851
  store volatile i32 0, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !6852
  %1 = load volatile i32, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !6853
  %2 = and i32 %1, -16, !dbg !6853
  store volatile i32 %2, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !6853
  %3 = load volatile i32, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !6854
  %4 = and i32 %3, -16, !dbg !6854
  store volatile i32 %4, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !6854
  %5 = load volatile i32, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !6855
  %6 = and i32 %5, -16, !dbg !6855
  store volatile i32 %6, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !6855
  %7 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !6856
  %8 = and i32 %7, -16, !dbg !6856
  store volatile i32 %8, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !6856
  ret void, !dbg !6857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_init() local_unnamed_addr #5 !dbg !6858 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !6859
  %2 = and i32 %1, 1, !dbg !6861
  %3 = icmp eq i32 %2, 0, !dbg !6861
  br i1 %3, label %4, label %22, !dbg !6862

4:                                                ; preds = %0
  tail call void @hal_dwt_reset() #22, !dbg !6863
  %5 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !6865
  %6 = and i32 %5, 65536, !dbg !6867
  %7 = icmp eq i32 %6, 0, !dbg !6867
  br i1 %7, label %8, label %11, !dbg !6868

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !6869
  %10 = or i32 %9, 16842752, !dbg !6869
  store volatile i32 %10, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !6869
  br label %11, !dbg !6871

11:                                               ; preds = %8, %4
  %12 = load volatile i32, i32* inttoptr (i32 -536866816 to i32*), align 4096, !dbg !6872
  %13 = lshr i32 %12, 28, !dbg !6873
  store i32 %13, i32* @DWT_NUMCOMP, align 4, !dbg !6874
  %14 = load volatile i32, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !6875
  %15 = or i32 %14, 31, !dbg !6875
  store volatile i32 %15, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !6875
  %16 = load volatile i32, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !6876
  %17 = or i32 %16, 31, !dbg !6876
  store volatile i32 %17, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !6876
  %18 = load volatile i32, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !6877
  %19 = or i32 %18, 31, !dbg !6877
  store volatile i32 %19, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !6877
  %20 = load volatile i32, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !6878
  %21 = or i32 %20, 31, !dbg !6878
  store volatile i32 %21, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !6878
  br label %22, !dbg !6879

22:                                               ; preds = %11, %0
  ret void, !dbg !6880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dwt_request_watchpoint(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 !dbg !6881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6886, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 %1, metadata !6887, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 %2, metadata !6888, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 %3, metadata !6889, metadata !DIExpression()), !dbg !6891
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !6892
  %6 = and i32 %5, 1, !dbg !6894
  %7 = icmp eq i32 %6, 0, !dbg !6894
  br i1 %7, label %8, label %23, !dbg !6895

8:                                                ; preds = %4
  %9 = load i32, i32* @DWT_NUMCOMP, align 4, !dbg !6896
  %10 = icmp ugt i32 %9, %0, !dbg !6899
  %11 = and i32 %2, %1
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %12, %10, !dbg !6900
  br i1 %13, label %14, label %23, !dbg !6900

14:                                               ; preds = %8
  %15 = shl i32 %0, 2, !dbg !6901
  %16 = and i32 %15, 1073741820, !dbg !6901
  call void @llvm.dbg.value(metadata i32 %16, metadata !6890, metadata !DIExpression()), !dbg !6891
  %17 = getelementptr inbounds i32, i32* inttoptr (i32 -536866784 to i32*), i32 %16, !dbg !6902
  store volatile i32 %1, i32* %17, align 16, !dbg !6903
  %18 = getelementptr inbounds i32, i32* inttoptr (i32 -536866780 to i32*), i32 %16, !dbg !6904
  store volatile i32 %2, i32* %18, align 4, !dbg !6905
  %19 = getelementptr inbounds i32, i32* inttoptr (i32 -536866776 to i32*), i32 %16, !dbg !6906
  %20 = load volatile i32, i32* %19, align 8, !dbg !6907
  %21 = and i32 %20, 15, !dbg !6908
  %22 = or i32 %21, %3, !dbg !6909
  store volatile i32 %22, i32* %19, align 8, !dbg !6910
  br label %23, !dbg !6911

23:                                               ; preds = %4, %8, %14
  %24 = phi i32 [ 0, %14 ], [ -1, %8 ], [ -1, %4 ], !dbg !6912
  ret i32 %24, !dbg !6913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #7 !dbg !6914 {
  call void @llvm.dbg.value(metadata i8 5, metadata !6918, metadata !DIExpression()), !dbg !6919
  ret i8 5, !dbg !6920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #7 !dbg !6921 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !6924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #7 !dbg !6925 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !6926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #7 !dbg !6927 {
  call void @llvm.dbg.value(metadata i8 5, metadata !6929, metadata !DIExpression()), !dbg !6930
  ret i8 5, !dbg !6931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #7 !dbg !6932 {
  ret %struct.flash_info_t* null, !dbg !6935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_mode_init() local_unnamed_addr #5 !dbg !6936 {
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.gpio_mode_init.mode_temp, metadata !6939, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.value(metadata i32 0, metadata !6938, metadata !DIExpression()), !dbg !6944
  br label %1, !dbg !6945

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6938, metadata !DIExpression()), !dbg !6944
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.gpio_mode_init.mode_temp, i32 0, i32 %2, !dbg !6947
  %4 = load i32, i32* %3, align 4, !dbg !6947
  %5 = shl nuw nsw i32 %2, 2, !dbg !6947
  %6 = add nuw nsw i32 %5, -2130563040, !dbg !6947
  %7 = inttoptr i32 %6 to i32*, !dbg !6947
  store volatile i32 %4, i32* %7, align 4, !dbg !6947
  %8 = add nuw nsw i32 %2, 1, !dbg !6950
  call void @llvm.dbg.value(metadata i32 %8, metadata !6938, metadata !DIExpression()), !dbg !6944
  %9 = icmp eq i32 %8, 10, !dbg !6951
  br i1 %9, label %10, label %1, !dbg !6945, !llvm.loop !6952

10:                                               ; preds = %1
  ret void, !dbg !6954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_oe_init() local_unnamed_addr #5 !dbg !6955 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6957, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 0, metadata !6957, metadata !DIExpression()), !dbg !6960
  store volatile i32 -419430160, i32* inttoptr (i32 -2097106800 to i32*), align 16, !dbg !6961
  call void @llvm.dbg.value(metadata i32 1, metadata !6957, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 1, metadata !6957, metadata !DIExpression()), !dbg !6960
  store volatile i32 100663495, i32* inttoptr (i32 -2097106784 to i32*), align 32, !dbg !6961
  call void @llvm.dbg.value(metadata i32 2, metadata !6957, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 2, metadata !6957, metadata !DIExpression()), !dbg !6960
  store volatile i32 0, i32* inttoptr (i32 -2097106768 to i32*), align 16, !dbg !6961
  call void @llvm.dbg.value(metadata i32 3, metadata !6957, metadata !DIExpression()), !dbg !6960
  ret void, !dbg !6965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_ies_init() local_unnamed_addr #5 !dbg !6966 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6968, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.value(metadata i32 0, metadata !6968, metadata !DIExpression()), !dbg !6970
  store volatile i32 419430159, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !6971
  call void @llvm.dbg.value(metadata i32 1, metadata !6968, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.value(metadata i32 1, metadata !6968, metadata !DIExpression()), !dbg !6970
  store volatile i32 -100663496, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !6971
  call void @llvm.dbg.value(metadata i32 2, metadata !6968, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.value(metadata i32 2, metadata !6968, metadata !DIExpression()), !dbg !6970
  store volatile i32 511, i32* inttoptr (i32 -2097106680 to i32*), align 8, !dbg !6971
  call void @llvm.dbg.value(metadata i32 3, metadata !6968, metadata !DIExpression()), !dbg !6970
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6975
  %2 = and i32 %1, -3, !dbg !6975
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6975
  %3 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6976
  %4 = or i32 %3, 2, !dbg !6976
  store volatile i32 %4, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6976
  %5 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6977
  %6 = or i32 %5, 2048, !dbg !6977
  store volatile i32 %6, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6977
  %7 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6978
  %8 = and i32 %7, -3, !dbg !6978
  store volatile i32 %8, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6978
  %9 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6979
  %10 = or i32 %9, 2, !dbg !6979
  store volatile i32 %10, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6979
  %11 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6980
  %12 = or i32 %11, 2048, !dbg !6980
  store volatile i32 %12, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6980
  %13 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6981
  %14 = and i32 %13, -3, !dbg !6981
  store volatile i32 %14, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6981
  %15 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6982
  store volatile i32 %15, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6982
  %16 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6983
  %17 = or i32 %16, 2048, !dbg !6983
  store volatile i32 %17, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6983
  %18 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6984
  %19 = and i32 %18, -3, !dbg !6984
  store volatile i32 %19, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6984
  %20 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6985
  store volatile i32 %20, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6985
  %21 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6986
  %22 = or i32 %21, 2048, !dbg !6986
  store volatile i32 %22, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6986
  %23 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6987
  %24 = and i32 %23, -3, !dbg !6987
  store volatile i32 %24, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6987
  %25 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6988
  store volatile i32 %25, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6988
  %26 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6989
  %27 = or i32 %26, 2048, !dbg !6989
  store volatile i32 %27, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6989
  %28 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6990
  %29 = and i32 %28, -3, !dbg !6990
  store volatile i32 %29, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6990
  %30 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6991
  store volatile i32 %30, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6991
  %31 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6992
  %32 = or i32 %31, 2048, !dbg !6992
  store volatile i32 %32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6992
  ret void, !dbg !6993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_up_init() local_unnamed_addr #5 !dbg !6994 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6996, metadata !DIExpression()), !dbg !6998
  call void @llvm.dbg.value(metadata i32 0, metadata !6996, metadata !DIExpression()), !dbg !6998
  store volatile i32 4, i32* inttoptr (i32 -2097106944 to i32*), align 4096, !dbg !6999
  call void @llvm.dbg.value(metadata i32 1, metadata !6996, metadata !DIExpression()), !dbg !6998
  call void @llvm.dbg.value(metadata i32 1, metadata !6996, metadata !DIExpression()), !dbg !6998
  store volatile i32 16, i32* inttoptr (i32 -2097106928 to i32*), align 16, !dbg !6999
  call void @llvm.dbg.value(metadata i32 2, metadata !6996, metadata !DIExpression()), !dbg !6998
  call void @llvm.dbg.value(metadata i32 2, metadata !6996, metadata !DIExpression()), !dbg !6998
  store volatile i32 0, i32* inttoptr (i32 -2097106912 to i32*), align 32, !dbg !6999
  call void @llvm.dbg.value(metadata i32 3, metadata !6996, metadata !DIExpression()), !dbg !6998
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7003
  %2 = and i32 %1, -29, !dbg !7003
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7003
  %3 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7004
  %4 = and i32 %3, -29, !dbg !7004
  store volatile i32 %4, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7004
  %5 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7005
  %6 = and i32 %5, -29, !dbg !7005
  store volatile i32 %6, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7005
  %7 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7006
  %8 = and i32 %7, -29, !dbg !7006
  store volatile i32 %8, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7006
  %9 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7007
  %10 = and i32 %9, -29, !dbg !7007
  store volatile i32 %10, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7007
  %11 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7008
  %12 = and i32 %11, -29, !dbg !7008
  store volatile i32 %12, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7008
  ret void, !dbg !7009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_down_init() local_unnamed_addr #5 !dbg !7010 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7012, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i32 0, metadata !7012, metadata !DIExpression()), !dbg !7014
  store volatile i32 16776960, i32* inttoptr (i32 -2097106896 to i32*), align 16, !dbg !7015
  call void @llvm.dbg.value(metadata i32 1, metadata !7012, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i32 1, metadata !7012, metadata !DIExpression()), !dbg !7014
  store volatile i32 -100663544, i32* inttoptr (i32 -2097106880 to i32*), align 64, !dbg !7015
  call void @llvm.dbg.value(metadata i32 2, metadata !7012, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i32 2, metadata !7012, metadata !DIExpression()), !dbg !7014
  store volatile i32 511, i32* inttoptr (i32 -2097106864 to i32*), align 16, !dbg !7015
  call void @llvm.dbg.value(metadata i32 3, metadata !7012, metadata !DIExpression()), !dbg !7014
  ret void, !dbg !7019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_output_init() local_unnamed_addr #5 !dbg !7020 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7022, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i32 0, metadata !7022, metadata !DIExpression()), !dbg !7024
  store volatile i32 64, i32* inttoptr (i32 -2097106848 to i32*), align 32, !dbg !7025
  call void @llvm.dbg.value(metadata i32 1, metadata !7022, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i32 1, metadata !7022, metadata !DIExpression()), !dbg !7024
  store volatile i32 64, i32* inttoptr (i32 -2097106832 to i32*), align 16, !dbg !7025
  call void @llvm.dbg.value(metadata i32 2, metadata !7022, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i32 2, metadata !7022, metadata !DIExpression()), !dbg !7024
  store volatile i32 0, i32* inttoptr (i32 -2097106816 to i32*), align 128, !dbg !7025
  call void @llvm.dbg.value(metadata i32 3, metadata !7022, metadata !DIExpression()), !dbg !7024
  ret void, !dbg !7029
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_set_control_by_cm4() local_unnamed_addr #5 !dbg !7030 {
  store volatile i32 -1, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !7031
  store volatile i32 -1, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !7032
  store volatile i32 50397183, i32* inttoptr (i32 -2130571128 to i32*), align 8, !dbg !7033
  ret void, !dbg !7034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_setting_init() local_unnamed_addr #5 !dbg !7035 {
  tail call void @gpio_mode_init() #22, !dbg !7036
  tail call void @gpio_oe_init() #22, !dbg !7037
  tail call void @gpio_ies_init() #22, !dbg !7038
  tail call void @gpio_pull_up_init() #22, !dbg !7039
  tail call void @gpio_pull_down_init() #22, !dbg !7040
  tail call void @gpio_output_init() #22, !dbg !7041
  ret void, !dbg !7042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericCreate(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i16 noundef zeroext %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, i32* noundef %6, %struct.xMEMORY_REGION* nocapture readnone %7) local_unnamed_addr #0 !dbg !7043 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !7063, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8* %1, metadata !7064, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i16 %2, metadata !7065, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8* %3, metadata !7066, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %4, metadata !7067, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i8** %5, metadata !7068, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32* %6, metadata !7069, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !7070, metadata !DIExpression()), !dbg !7074
  %9 = icmp eq void (i8*)* %0, null, !dbg !7075
  br i1 %9, label %10, label %11, !dbg !7077

10:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 553) #20, !dbg !7078
  br label %11, !dbg !7078

11:                                               ; preds = %10, %8
  %12 = icmp ugt i32 %4, 19, !dbg !7080
  br i1 %12, label %13, label %14, !dbg !7082

13:                                               ; preds = %11
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 554) #20, !dbg !7083
  br label %14, !dbg !7083

14:                                               ; preds = %13, %11
  %15 = tail call fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %2, i32* noundef %6) #22, !dbg !7085
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %15, metadata !7072, metadata !DIExpression()), !dbg !7074
  %16 = icmp eq %struct.tskTaskControlBlock* %15, null, !dbg !7086
  br i1 %16, label %68, label %17, !dbg !7088

17:                                               ; preds = %14
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i16 %2), metadata !7073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7074
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 4, !dbg !7089
  %19 = load i32*, i32** %18, align 4, !dbg !7089
  call void @llvm.dbg.value(metadata !DIArgList(i32* %19, i16 %2), metadata !7073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7074
  %20 = zext i16 %2 to i32, !dbg !7092
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %20), metadata !7073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7074
  %21 = add nsw i32 %20, -1, !dbg !7093
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %21), metadata !7073, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7074
  %22 = getelementptr inbounds i32, i32* %19, i32 %21, !dbg !7094
  call void @llvm.dbg.value(metadata i32* %22, metadata !7073, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7074
  %23 = ptrtoint i32* %22 to i32, !dbg !7095
  call void @llvm.dbg.value(metadata i32 %23, metadata !7073, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7074
  %24 = and i32 %23, -8, !dbg !7096
  call void @llvm.dbg.value(metadata i32 %24, metadata !7073, metadata !DIExpression()), !dbg !7074
  %25 = inttoptr i32 %24 to i32*, !dbg !7097
  call void @llvm.dbg.value(metadata i32* %25, metadata !7073, metadata !DIExpression()), !dbg !7074
  tail call fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef nonnull %15, i8* noundef %1, i32 noundef %4) #22, !dbg !7098
  %26 = tail call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #20, !dbg !7099
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 0, !dbg !7101
  store i32* %26, i32** %27, align 4, !dbg !7102
  %28 = icmp eq i8** %5, null, !dbg !7103
  br i1 %28, label %31, label %29, !dbg !7105

29:                                               ; preds = %17
  %30 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !7106
  store %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** %30, align 4, !dbg !7106
  br label %31, !dbg !7108

31:                                               ; preds = %17, %29
  tail call void @vPortEnterCritical() #20, !dbg !7109
  %32 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7110
  %33 = add i32 %32, 1, !dbg !7110
  store volatile i32 %33, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7110
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7112
  %35 = icmp eq %struct.tskTaskControlBlock* %34, null, !dbg !7114
  br i1 %35, label %36, label %40, !dbg !7115

36:                                               ; preds = %31
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7116
  %37 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7118
  %38 = icmp eq i32 %37, 1, !dbg !7120
  br i1 %38, label %39, label %49, !dbg !7121

39:                                               ; preds = %36
  tail call fastcc void @prvInitialiseTaskLists() #22, !dbg !7122
  br label %49, !dbg !7124

40:                                               ; preds = %31
  %41 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7125
  %42 = icmp eq i32 %41, 0, !dbg !7128
  br i1 %42, label %43, label %49, !dbg !7129

43:                                               ; preds = %40
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7130
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !7133
  %46 = load i32, i32* %45, align 4, !dbg !7133
  %47 = icmp ugt i32 %46, %4, !dbg !7134
  br i1 %47, label %49, label %48, !dbg !7135

48:                                               ; preds = %43
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7136
  br label %49, !dbg !7138

49:                                               ; preds = %43, %48, %40, %39, %36
  %50 = load i32, i32* @uxTaskNumber, align 4, !dbg !7139
  %51 = add i32 %50, 1, !dbg !7139
  store i32 %51, i32* @uxTaskNumber, align 4, !dbg !7139
  %52 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 6, !dbg !7140
  store i32 %51, i32* %52, align 4, !dbg !7142
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !7143
  %54 = load i32, i32* %53, align 4, !dbg !7143
  %55 = shl nuw i32 1, %54, !dbg !7143
  %56 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7143
  %57 = or i32 %56, %55, !dbg !7143
  store volatile i32 %57, i32* @uxTopReadyPriority, align 4, !dbg !7143
  %58 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %54, !dbg !7143
  %59 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 1, !dbg !7143
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %58, %struct.xLIST_ITEM* noundef nonnull %59) #20, !dbg !7143
  call void @llvm.dbg.value(metadata i32 1, metadata !7071, metadata !DIExpression()), !dbg !7074
  tail call void @vPortExitCritical() #20, !dbg !7144
  %60 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7145
  %61 = icmp eq i32 %60, 0, !dbg !7149
  br i1 %61, label %68, label %62, !dbg !7150

62:                                               ; preds = %49
  %63 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7151
  %64 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %63, i32 0, i32 3, !dbg !7154
  %65 = load i32, i32* %64, align 4, !dbg !7154
  %66 = icmp ult i32 %65, %4, !dbg !7155
  br i1 %66, label %67, label %68, !dbg !7156

67:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7157
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7157, !srcloc !7160
  tail call void asm sideeffect "isb", ""() #19, !dbg !7157, !srcloc !7161
  br label %68, !dbg !7162

68:                                               ; preds = %14, %62, %67, %49
  %69 = phi i32 [ 1, %62 ], [ 1, %67 ], [ 1, %49 ], [ -1, %14 ]
  ret i32 %69, !dbg !7163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %0, i32* noundef %1) unnamed_addr #0 !dbg !7164 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7168, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata i32* %1, metadata !7169, metadata !DIExpression()), !dbg !7173
  %3 = icmp eq i32* %1, null, !dbg !7174
  br i1 %3, label %4, label %8, !dbg !7174

4:                                                ; preds = %2
  %5 = zext i16 %0 to i32, !dbg !7174
  %6 = shl nuw nsw i32 %5, 2, !dbg !7174
  %7 = tail call i8* @pvPortMalloc(i32 noundef %6) #20, !dbg !7174
  br label %10, !dbg !7174

8:                                                ; preds = %2
  %9 = bitcast i32* %1 to i8*, !dbg !7174
  br label %10, !dbg !7174

10:                                               ; preds = %8, %4
  %11 = phi i8* [ %7, %4 ], [ %9, %8 ], !dbg !7174
  call void @llvm.dbg.value(metadata i8* %11, metadata !7171, metadata !DIExpression()), !dbg !7175
  %12 = icmp eq i8* %11, null, !dbg !7176
  br i1 %12, label %24, label %13, !dbg !7178

13:                                               ; preds = %10
  %14 = tail call i8* @pvPortMalloc(i32 noundef 84) #20, !dbg !7179
  call void @llvm.dbg.value(metadata i8* %14, metadata !7170, metadata !DIExpression()), !dbg !7173
  %15 = icmp eq i8* %14, null, !dbg !7181
  br i1 %15, label %16, label %17, !dbg !7183

16:                                               ; preds = %13
  tail call void @vPortFree(i8* noundef nonnull %11) #20, !dbg !7184
  br label %24

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8* %14, metadata !7170, metadata !DIExpression()), !dbg !7173
  %18 = getelementptr inbounds i8, i8* %14, i32 48, !dbg !7186
  %19 = bitcast i8* %18 to i8**, !dbg !7188
  store i8* %11, i8** %19, align 4, !dbg !7188
  %20 = bitcast i8* %14 to %struct.tskTaskControlBlock*, !dbg !7189
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %20, metadata !7170, metadata !DIExpression()), !dbg !7173
  %21 = zext i16 %0 to i32, !dbg !7190
  %22 = shl nuw nsw i32 %21, 2, !dbg !7194
  %23 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 165, i32 noundef %22) #20, !dbg !7195
  br label %24, !dbg !7196

24:                                               ; preds = %10, %16, %17
  %25 = phi %struct.tskTaskControlBlock* [ %20, %17 ], [ null, %16 ], [ null, %10 ]
  ret %struct.tskTaskControlBlock* %25, !dbg !7197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 !dbg !7198 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !7203, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i8* %1, metadata !7204, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 %2, metadata !7205, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !7206, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i16 undef, metadata !7207, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 0, metadata !7208, metadata !DIExpression()), !dbg !7209
  br label %4, !dbg !7210

4:                                                ; preds = %4, %3
  %5 = phi i32 [ 0, %3 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7208, metadata !DIExpression()), !dbg !7209
  %6 = getelementptr inbounds i8, i8* %1, i32 %5, !dbg !7212
  %7 = load i8, i8* %6, align 1, !dbg !7212
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 %5, !dbg !7215
  store i8 %7, i8* %8, align 1, !dbg !7216
  %9 = load i8, i8* %6, align 1, !dbg !7217
  %10 = icmp eq i8 %9, 0, !dbg !7219
  call void @llvm.dbg.value(metadata i32 %5, metadata !7208, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7209
  %11 = add nuw nsw i32 %5, 1
  %12 = icmp eq i32 %11, 6
  %13 = select i1 %10, i1 true, i1 %12, !dbg !7220
  call void @llvm.dbg.value(metadata i32 %11, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 %5, metadata !7208, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7209
  br i1 %13, label %14, label %4, !dbg !7220, !llvm.loop !7221

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 5, !dbg !7223
  store i8 0, i8* %15, align 1, !dbg !7224
  %16 = icmp ult i32 %2, 19, !dbg !7225
  %17 = select i1 %16, i32 %2, i32 19, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %17, metadata !7205, metadata !DIExpression()), !dbg !7209
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !7226
  store i32 %17, i32* %18, align 4, !dbg !7227
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !7228
  store i32 %17, i32* %19, align 4, !dbg !7230
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !7231
  store i32 0, i32* %20, align 4, !dbg !7232
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !7233
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !7234
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !7235
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %22) #20, !dbg !7236
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 3, !dbg !7237
  %24 = bitcast i8** %23 to %struct.tskTaskControlBlock**, !dbg !7237
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %24, align 4, !dbg !7237
  %25 = sub nuw nsw i32 20, %17, !dbg !7238
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 0, !dbg !7238
  store i32 %25, i32* %26, align 4, !dbg !7238
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 3, !dbg !7239
  %28 = bitcast i8** %27 to %struct.tskTaskControlBlock**, !dbg !7239
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %28, align 4, !dbg !7239
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !7240
  store volatile i32 0, i32* %29, align 4, !dbg !7242
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !7243
  store volatile i32 0, i32* %30, align 4, !dbg !7244
  ret void, !dbg !7245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #0 !dbg !7246 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7248, metadata !DIExpression()), !dbg !7249
  br label %1, !dbg !7250

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7248, metadata !DIExpression()), !dbg !7249
  %3 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !7252
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #20, !dbg !7255
  %4 = add nuw nsw i32 %2, 1, !dbg !7256
  call void @llvm.dbg.value(metadata i32 %4, metadata !7248, metadata !DIExpression()), !dbg !7249
  %5 = icmp eq i32 %4, 20, !dbg !7257
  br i1 %5, label %6, label %1, !dbg !7250, !llvm.loop !7258

6:                                                ; preds = %1
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #20, !dbg !7260
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #20, !dbg !7261
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #20, !dbg !7262
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xTasksWaitingTermination) #20, !dbg !7263
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xSuspendedTaskList) #20, !dbg !7265
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7267
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7268
  ret void, !dbg !7269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !7270 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7274, metadata !DIExpression()), !dbg !7276
  tail call void @vPortEnterCritical() #20, !dbg !7277
  %2 = icmp eq i8* %0, null, !dbg !7278
  br i1 %2, label %3, label %5, !dbg !7278

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7278
  br label %7, !dbg !7278

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7278
  br label %7, !dbg !7278

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !7278
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !7275, metadata !DIExpression()), !dbg !7276
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !7280
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !7282
  %11 = icmp eq i32 %10, 0, !dbg !7283
  br i1 %11, label %12, label %23, !dbg !7284

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !7285
  %14 = load i32, i32* %13, align 4, !dbg !7285
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !7285
  %16 = load i32, i32* %15, align 4, !dbg !7285
  %17 = icmp eq i32 %16, 0, !dbg !7285
  br i1 %17, label %18, label %23, !dbg !7289

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !7290
  %20 = xor i32 %19, -1, !dbg !7290
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7290
  %22 = and i32 %21, %20, !dbg !7290
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !7290
  br label %23, !dbg !7290

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !7292
  %25 = load i8*, i8** %24, align 4, !dbg !7292
  %26 = icmp eq i8* %25, null, !dbg !7294
  br i1 %26, label %30, label %27, !dbg !7295

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !7292
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !7296
  br label %30, !dbg !7298

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !7299
  %31 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !7300
  %32 = add i32 %31, 1, !dbg !7300
  store volatile i32 %32, i32* @uxTasksDeleted, align 4, !dbg !7300
  %33 = load i32, i32* @uxTaskNumber, align 4, !dbg !7301
  %34 = add i32 %33, 1, !dbg !7301
  store i32 %34, i32* @uxTaskNumber, align 4, !dbg !7301
  tail call void @vPortExitCritical() #20, !dbg !7302
  %35 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7303
  %36 = icmp eq i32 %35, 0, !dbg !7305
  br i1 %36, label %46, label %37, !dbg !7306

37:                                               ; preds = %30
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7307
  %39 = icmp eq %struct.tskTaskControlBlock* %8, %38, !dbg !7310
  br i1 %39, label %40, label %45, !dbg !7311

40:                                               ; preds = %37
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7312
  %42 = icmp eq i32 %41, 0, !dbg !7312
  br i1 %42, label %44, label %43, !dbg !7315

43:                                               ; preds = %40
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 794) #20, !dbg !7316
  br label %44, !dbg !7316

44:                                               ; preds = %43, %40
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7318
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7318, !srcloc !7320
  tail call void asm sideeffect "isb", ""() #19, !dbg !7318, !srcloc !7321
  br label %46, !dbg !7322

45:                                               ; preds = %37
  tail call void @vPortEnterCritical() #20, !dbg !7323
  tail call fastcc void @prvResetNextTaskUnblockTime() #22, !dbg !7325
  tail call void @vPortExitCritical() #20, !dbg !7327
  br label %46

46:                                               ; preds = %44, %45, %30
  ret void, !dbg !7328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #5 !dbg !7329 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7332
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !7332
  %3 = load i32, i32* %2, align 4, !dbg !7332
  %4 = icmp eq i32 %3, 0, !dbg !7332
  br i1 %4, label %14, label %5, !dbg !7334

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7335
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !7335
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !7335
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !7335
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !7335
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !7335
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !7331, metadata !DIExpression()), !dbg !7337
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !7338
  %13 = load i32, i32* %12, align 4, !dbg !7338
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !7339
  ret void, !dbg !7340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelayUntil(i32* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7341 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7348, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 %1, metadata !7349, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 0, metadata !7352, metadata !DIExpression()), !dbg !7355
  %3 = icmp eq i32* %0, null, !dbg !7356
  br i1 %3, label %4, label %5, !dbg !7358

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 827) #20, !dbg !7359
  br label %5, !dbg !7359

5:                                                ; preds = %4, %2
  %6 = icmp eq i32 %1, 0, !dbg !7361
  br i1 %6, label %7, label %8, !dbg !7363

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 828) #20, !dbg !7364
  br label %8, !dbg !7364

8:                                                ; preds = %7, %5
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7366
  %10 = icmp eq i32 %9, 0, !dbg !7366
  br i1 %10, label %12, label %11, !dbg !7368

11:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 829) #20, !dbg !7369
  br label %12, !dbg !7369

12:                                               ; preds = %11, %8
  tail call void @vTaskSuspendAll() #22, !dbg !7371
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %13, metadata !7353, metadata !DIExpression()), !dbg !7373
  %14 = load i32, i32* %0, align 4, !dbg !7374
  %15 = add i32 %14, %1, !dbg !7375
  call void @llvm.dbg.value(metadata i32 %15, metadata !7350, metadata !DIExpression()), !dbg !7355
  %16 = icmp ult i32 %13, %14, !dbg !7376
  %17 = icmp ult i32 %15, %14, !dbg !7378
  %18 = icmp ugt i32 %15, %13
  br i1 %16, label %19, label %21, !dbg !7379

19:                                               ; preds = %12
  %20 = select i1 %17, i1 %18, i1 false, !dbg !7380
  br i1 %20, label %24, label %23, !dbg !7380

21:                                               ; preds = %12
  %22 = select i1 %17, i1 true, i1 %18, !dbg !7383
  br i1 %22, label %24, label %23, !dbg !7383

23:                                               ; preds = %21, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !7352, metadata !DIExpression()), !dbg !7355
  store i32 %15, i32* %0, align 4, !dbg !7386
  br label %38, !dbg !7387

24:                                               ; preds = %19, %21
  store i32 %15, i32* %0, align 4, !dbg !7386
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7388
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 1, !dbg !7392
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #20, !dbg !7393
  %28 = icmp eq i32 %27, 0, !dbg !7394
  br i1 %28, label %29, label %37, !dbg !7395

29:                                               ; preds = %24
  %30 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7396
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %30, i32 0, i32 3, !dbg !7396
  %32 = load i32, i32* %31, align 4, !dbg !7396
  %33 = shl nuw i32 1, %32, !dbg !7396
  %34 = xor i32 %33, -1, !dbg !7396
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7396
  %36 = and i32 %35, %34, !dbg !7396
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !7396
  br label %37, !dbg !7398

37:                                               ; preds = %24, %29
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %15) #22, !dbg !7399
  br label %38, !dbg !7400

38:                                               ; preds = %23, %37
  %39 = tail call i32 @xTaskResumeAll() #22, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %39, metadata !7351, metadata !DIExpression()), !dbg !7355
  %40 = icmp eq i32 %39, 0, !dbg !7402
  br i1 %40, label %41, label %42, !dbg !7404

41:                                               ; preds = %38
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7405
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7405, !srcloc !7408
  tail call void asm sideeffect "isb", ""() #19, !dbg !7405, !srcloc !7409
  br label %42, !dbg !7410

42:                                               ; preds = %38, %41
  ret void, !dbg !7411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskSuspendAll() local_unnamed_addr #5 !dbg !7412 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7413
  %2 = add i32 %1, 1, !dbg !7413
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !7413
  ret void, !dbg !7414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #0 !dbg !7415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7419, metadata !DIExpression()), !dbg !7420
  %2 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7421
  %3 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, i32 0, !dbg !7421
  store i32 %0, i32* %3, align 4, !dbg !7421
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !7422
  %5 = icmp ugt i32 %4, %0, !dbg !7424
  br i1 %5, label %6, label %10, !dbg !7425

6:                                                ; preds = %1
  %7 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7426
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7428
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !7429
  tail call void @vListInsert(%struct.xLIST* noundef %7, %struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !7430
  br label %17, !dbg !7431

10:                                               ; preds = %1
  %11 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7432
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7434
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !7435
  tail call void @vListInsert(%struct.xLIST* noundef %11, %struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !7436
  %14 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !7437
  %15 = icmp ugt i32 %14, %0, !dbg !7439
  br i1 %15, label %16, label %17, !dbg !7440

16:                                               ; preds = %10
  store volatile i32 %0, i32* @xNextTaskUnblockTime, align 4, !dbg !7441
  br label %17, !dbg !7443

17:                                               ; preds = %16, %10, %6
  ret void, !dbg !7444
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #0 !dbg !7445 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7450, metadata !DIExpression()), !dbg !7451
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7452
  %2 = icmp eq i32 %1, 0, !dbg !7452
  br i1 %2, label %3, label %4, !dbg !7454

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.106, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1673) #20, !dbg !7455
  br label %4, !dbg !7455

4:                                                ; preds = %3, %0
  tail call void @vPortEnterCritical() #20, !dbg !7457
  %5 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7458
  %6 = add i32 %5, -1, !dbg !7458
  store volatile i32 %6, i32* @uxSchedulerSuspended, align 4, !dbg !7458
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7460
  %8 = icmp eq i32 %7, 0, !dbg !7462
  br i1 %8, label %9, label %58, !dbg !7463

9:                                                ; preds = %4
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7464
  %11 = icmp eq i32 %10, 0, !dbg !7467
  br i1 %11, label %58, label %12, !dbg !7468

12:                                               ; preds = %9
  %13 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !7469
  %14 = icmp eq i32 %13, 0, !dbg !7469
  br i1 %14, label %39, label %15, !dbg !7471

15:                                               ; preds = %12, %36
  %16 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !7472
  %17 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %16, i32 0, i32 3, !dbg !7472
  %18 = bitcast i8** %17 to %struct.tskTaskControlBlock**, !dbg !7472
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %18, align 4, !dbg !7472
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %19, metadata !7449, metadata !DIExpression()), !dbg !7451
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 2, !dbg !7474
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #20, !dbg !7475
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !7476
  %23 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #20, !dbg !7477
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 3, !dbg !7478
  %25 = load i32, i32* %24, align 4, !dbg !7478
  %26 = shl nuw i32 1, %25, !dbg !7478
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7478
  %28 = or i32 %27, %26, !dbg !7478
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !7478
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !7478
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %22) #20, !dbg !7478
  %30 = load i32, i32* %24, align 4, !dbg !7479
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7481
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 3, !dbg !7482
  %33 = load i32, i32* %32, align 4, !dbg !7482
  %34 = icmp ult i32 %30, %33, !dbg !7483
  br i1 %34, label %36, label %35, !dbg !7484

35:                                               ; preds = %15
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !7485
  br label %36, !dbg !7487

36:                                               ; preds = %15, %35
  %37 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !7469
  %38 = icmp eq i32 %37, 0, !dbg !7469
  br i1 %38, label %39, label %15, !dbg !7471, !llvm.loop !7488

39:                                               ; preds = %36, %12
  %40 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7490
  %41 = icmp eq i32 %40, 0, !dbg !7492
  br i1 %41, label %54, label %42, !dbg !7493

42:                                               ; preds = %39
  %43 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7494
  %44 = icmp eq i32 %43, 0, !dbg !7496
  br i1 %44, label %54, label %45, !dbg !7497

45:                                               ; preds = %42, %49
  %46 = tail call i32 @xTaskIncrementTick() #22, !dbg !7498
  %47 = icmp eq i32 %46, 0, !dbg !7501
  br i1 %47, label %49, label %48, !dbg !7502

48:                                               ; preds = %45
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !7503
  br label %49, !dbg !7505

49:                                               ; preds = %45, %48
  %50 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7506
  %51 = add i32 %50, -1, !dbg !7506
  store volatile i32 %51, i32* @uxPendedTicks, align 4, !dbg !7506
  %52 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7494
  %53 = icmp eq i32 %52, 0, !dbg !7496
  br i1 %53, label %54, label %45, !dbg !7497, !llvm.loop !7507

54:                                               ; preds = %49, %42, %39
  %55 = load volatile i32, i32* @xYieldPending, align 4, !dbg !7509
  %56 = icmp eq i32 %55, 1, !dbg !7511
  br i1 %56, label %57, label %58, !dbg !7512

57:                                               ; preds = %54
  call void @llvm.dbg.value(metadata i32 1, metadata !7450, metadata !DIExpression()), !dbg !7451
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7513
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7513, !srcloc !7516
  tail call void asm sideeffect "isb", ""() #19, !dbg !7513, !srcloc !7517
  br label %58, !dbg !7518

58:                                               ; preds = %4, %9, %54, %57
  %59 = phi i32 [ 1, %57 ], [ 0, %54 ], [ 0, %9 ], [ 0, %4 ], !dbg !7451
  call void @llvm.dbg.value(metadata i32 %59, metadata !7450, metadata !DIExpression()), !dbg !7451
  tail call void @vPortExitCritical() #20, !dbg !7519
  ret i32 %59, !dbg !7520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #0 !dbg !7521 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7525, metadata !DIExpression()), !dbg !7534
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7535
  %2 = icmp eq i32 %1, 0, !dbg !7536
  br i1 %2, label %3, label %76, !dbg !7537

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !7538
  %5 = add i32 %4, 1, !dbg !7538
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !7538
  %6 = load volatile i32, i32* @xTickCount, align 4, !dbg !7539
  call void @llvm.dbg.value(metadata i32 %6, metadata !7526, metadata !DIExpression()), !dbg !7540
  %7 = icmp eq i32 %6, 0, !dbg !7541
  br i1 %7, label %8, label %19, !dbg !7542

8:                                                ; preds = %3
  %9 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7543
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %9, i32 0, i32 0, !dbg !7543
  %11 = load i32, i32* %10, align 4, !dbg !7543
  %12 = icmp eq i32 %11, 0, !dbg !7543
  br i1 %12, label %14, label %13, !dbg !7545

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1957) #20, !dbg !7546
  br label %14, !dbg !7546

14:                                               ; preds = %13, %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7545
  call void @llvm.dbg.value(metadata %struct.xLIST* %15, metadata !7530, metadata !DIExpression()), !dbg !7548
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7545
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7545
  store volatile %struct.xLIST* %15, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7545
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !7545
  %18 = add nsw i32 %17, 1, !dbg !7545
  store volatile i32 %18, i32* @xNumOfOverflows, align 4, !dbg !7545
  tail call fastcc void @prvResetNextTaskUnblockTime() #22, !dbg !7545
  br label %19, !dbg !7549

19:                                               ; preds = %3, %14
  %20 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !7550
  %21 = icmp ult i32 %6, %20, !dbg !7552
  br i1 %21, label %67, label %22, !dbg !7553

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !7525, metadata !DIExpression()), !dbg !7534
  %23 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7554
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %23, i32 0, i32 0, !dbg !7554
  %25 = load i32, i32* %24, align 4, !dbg !7554
  %26 = icmp eq i32 %25, 0, !dbg !7554
  br i1 %26, label %64, label %27, !dbg !7560

27:                                               ; preds = %22, %47
  %28 = phi i32 [ %59, %47 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !7525, metadata !DIExpression()), !dbg !7534
  %29 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7561
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %29, i32 0, i32 2, i32 1, !dbg !7561
  %31 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %30, align 4, !dbg !7561
  %32 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 3, !dbg !7561
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !7561
  %34 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %33, align 4, !dbg !7561
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %34, metadata !7523, metadata !DIExpression()), !dbg !7534
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !7563
  %36 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %35, i32 0, i32 0, !dbg !7563
  %37 = load i32, i32* %36, align 4, !dbg !7563
  call void @llvm.dbg.value(metadata i32 %37, metadata !7524, metadata !DIExpression()), !dbg !7534
  %38 = icmp ult i32 %6, %37, !dbg !7564
  br i1 %38, label %64, label %39, !dbg !7566

39:                                               ; preds = %27
  %40 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %35) #20, !dbg !7567
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, i32 4, !dbg !7568
  %42 = load i8*, i8** %41, align 4, !dbg !7568
  %43 = icmp eq i8* %42, null, !dbg !7570
  br i1 %43, label %47, label %44, !dbg !7571

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, !dbg !7568
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #20, !dbg !7572
  br label %47, !dbg !7574

47:                                               ; preds = %39, %44
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 3, !dbg !7575
  %49 = load i32, i32* %48, align 4, !dbg !7575
  %50 = shl nuw i32 1, %49, !dbg !7575
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7575
  %52 = or i32 %51, %50, !dbg !7575
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !7575
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !7575
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %35) #20, !dbg !7575
  %54 = load i32, i32* %48, align 4, !dbg !7576
  %55 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7579
  %56 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %55, i32 0, i32 3, !dbg !7580
  %57 = load i32, i32* %56, align 4, !dbg !7580
  %58 = icmp ult i32 %54, %57, !dbg !7581
  %59 = select i1 %58, i32 %28, i32 1, !dbg !7582
  call void @llvm.dbg.value(metadata i32 %59, metadata !7525, metadata !DIExpression()), !dbg !7534
  %60 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7554
  %61 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %60, i32 0, i32 0, !dbg !7554
  %62 = load i32, i32* %61, align 4, !dbg !7554
  %63 = icmp eq i32 %62, 0, !dbg !7554
  br i1 %63, label %64, label %27, !dbg !7560, !llvm.loop !7583

64:                                               ; preds = %27, %47, %22
  %65 = phi i32 [ -1, %22 ], [ -1, %47 ], [ %37, %27 ]
  %66 = phi i32 [ 0, %22 ], [ %59, %47 ], [ %28, %27 ]
  store volatile i32 %65, i32* @xNextTaskUnblockTime, align 4, !dbg !7586
  br label %67, !dbg !7587

67:                                               ; preds = %64, %19
  %68 = phi i32 [ 0, %19 ], [ %66, %64 ], !dbg !7590
  call void @llvm.dbg.value(metadata i32 %68, metadata !7525, metadata !DIExpression()), !dbg !7534
  %69 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7587
  %70 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %69, i32 0, i32 3, !dbg !7587
  %71 = load i32, i32* %70, align 4, !dbg !7587
  %72 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %71, i32 0, !dbg !7587
  %73 = load i32, i32* %72, align 4, !dbg !7587
  %74 = icmp ugt i32 %73, 1, !dbg !7591
  %75 = select i1 %74, i32 1, i32 %68, !dbg !7592
  br label %79, !dbg !7592

76:                                               ; preds = %0
  %77 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7593
  %78 = add i32 %77, 1, !dbg !7593
  store volatile i32 %78, i32* @uxPendedTicks, align 4, !dbg !7593
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi i32 [ 0, %76 ], [ %75, %67 ], !dbg !7534
  call void @llvm.dbg.value(metadata i32 %80, metadata !7525, metadata !DIExpression()), !dbg !7534
  %81 = load volatile i32, i32* @xYieldPending, align 4, !dbg !7595
  %82 = icmp eq i32 %81, 0, !dbg !7598
  %83 = select i1 %82, i32 %80, i32 1, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %83, metadata !7525, metadata !DIExpression()), !dbg !7534
  ret i32 %83, !dbg !7600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #0 !dbg !7601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7603, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 0, metadata !7605, metadata !DIExpression()), !dbg !7606
  %2 = icmp eq i32 %0, 0, !dbg !7607
  br i1 %2, label %25, label %3, !dbg !7609

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7610
  %5 = icmp eq i32 %4, 0, !dbg !7610
  br i1 %5, label %7, label %6, !dbg !7613

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 927) #20, !dbg !7614
  br label %7, !dbg !7614

7:                                                ; preds = %6, %3
  tail call void @vTaskSuspendAll() #22, !dbg !7616
  %8 = load volatile i32, i32* @xTickCount, align 4, !dbg !7617
  %9 = add i32 %8, %0, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %9, metadata !7604, metadata !DIExpression()), !dbg !7606
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7620
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 1, !dbg !7622
  %12 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %11) #20, !dbg !7623
  %13 = icmp eq i32 %12, 0, !dbg !7624
  br i1 %13, label %14, label %22, !dbg !7625

14:                                               ; preds = %7
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7626
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !7626
  %17 = load i32, i32* %16, align 4, !dbg !7626
  %18 = shl nuw i32 1, %17, !dbg !7626
  %19 = xor i32 %18, -1, !dbg !7626
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7626
  %21 = and i32 %20, %19, !dbg !7626
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !7626
  br label %22, !dbg !7628

22:                                               ; preds = %7, %14
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %9) #22, !dbg !7629
  %23 = tail call i32 @xTaskResumeAll() #22, !dbg !7630
  call void @llvm.dbg.value(metadata i32 %23, metadata !7605, metadata !DIExpression()), !dbg !7606
  %24 = icmp eq i32 %23, 0, !dbg !7631
  call void @llvm.dbg.value(metadata i32 undef, metadata !7605, metadata !DIExpression()), !dbg !7606
  br i1 %24, label %25, label %26, !dbg !7632

25:                                               ; preds = %1, %22
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7633
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7633, !srcloc !7637
  tail call void asm sideeffect "isb", ""() #19, !dbg !7633, !srcloc !7638
  br label %26, !dbg !7639

26:                                               ; preds = %22, %25
  ret void, !dbg !7640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eTaskGetState(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7641 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7646, metadata !DIExpression()), !dbg !7653
  %2 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %2, metadata !7649, metadata !DIExpression()), !dbg !7653
  %3 = icmp eq i8* %0, null, !dbg !7655
  br i1 %3, label %4, label %5, !dbg !7657

4:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 990) #20, !dbg !7658
  br label %5, !dbg !7658

5:                                                ; preds = %4, %1
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7660
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %2, !dbg !7662
  br i1 %7, label %28, label %8, !dbg !7663

8:                                                ; preds = %5
  tail call void @vPortEnterCritical() #20, !dbg !7664
  %9 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7666
  %10 = bitcast i8* %9 to %struct.xLIST**, !dbg !7666
  %11 = load %struct.xLIST*, %struct.xLIST** %10, align 4, !dbg !7666
  call void @llvm.dbg.value(metadata %struct.xLIST* %11, metadata !7648, metadata !DIExpression()), !dbg !7653
  tail call void @vPortExitCritical() #20, !dbg !7668
  %12 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7669
  %13 = icmp eq %struct.xLIST* %11, %12, !dbg !7671
  br i1 %13, label %28, label %14, !dbg !7672

14:                                               ; preds = %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7673
  %16 = icmp eq %struct.xLIST* %11, %15, !dbg !7674
  br i1 %16, label %28, label %17, !dbg !7675

17:                                               ; preds = %14
  %18 = icmp eq %struct.xLIST* %11, @xSuspendedTaskList, !dbg !7676
  br i1 %18, label %19, label %25, !dbg !7678

19:                                               ; preds = %17
  %20 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !7679
  %21 = bitcast i8* %20 to i8**, !dbg !7679
  %22 = load i8*, i8** %21, align 4, !dbg !7679
  %23 = icmp eq i8* %22, null, !dbg !7682
  %24 = select i1 %23, i32 3, i32 2
  br label %28

25:                                               ; preds = %17
  %26 = icmp eq %struct.xLIST* %11, @xTasksWaitingTermination, !dbg !7683
  %27 = select i1 %26, i32 4, i32 1
  br label %28

28:                                               ; preds = %25, %19, %8, %14, %5
  %29 = phi i32 [ 0, %5 ], [ 2, %14 ], [ 2, %8 ], [ %24, %19 ], [ %27, %25 ], !dbg !7685
  call void @llvm.dbg.value(metadata i32 %29, metadata !7647, metadata !DIExpression()), !dbg !7653
  ret i32 %29, !dbg !7686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGet(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7687 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7691, metadata !DIExpression()), !dbg !7694
  tail call void @vPortEnterCritical() #20, !dbg !7695
  %2 = icmp eq i8* %0, null, !dbg !7696
  br i1 %2, label %3, label %5, !dbg !7696

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7696
  br label %7, !dbg !7696

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7696
  br label %7, !dbg !7696

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !7696
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !7692, metadata !DIExpression()), !dbg !7694
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !7698
  %10 = load i32, i32* %9, align 4, !dbg !7698
  call void @llvm.dbg.value(metadata i32 %10, metadata !7693, metadata !DIExpression()), !dbg !7694
  tail call void @vPortExitCritical() #20, !dbg !7699
  ret i32 %10, !dbg !7700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGetFromISR(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7701 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7703, metadata !DIExpression()), !dbg !7707
  tail call void @vPortValidateInterruptPriority() #20, !dbg !7708
  %2 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !7709, !srcloc !7715
  call void @llvm.dbg.value(metadata i32 undef, metadata !7712, metadata !DIExpression()) #19, !dbg !7716
  call void @llvm.dbg.value(metadata i32 undef, metadata !7713, metadata !DIExpression()) #19, !dbg !7716
  call void @llvm.dbg.value(metadata i32 undef, metadata !7706, metadata !DIExpression()), !dbg !7707
  %3 = icmp eq i8* %0, null, !dbg !7717
  br i1 %3, label %4, label %6, !dbg !7717

4:                                                ; preds = %1
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7717
  br label %8, !dbg !7717

6:                                                ; preds = %1
  %7 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7717
  br label %8, !dbg !7717

8:                                                ; preds = %6, %4
  %9 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %7, %6 ], !dbg !7717
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !7709
  call void @llvm.dbg.value(metadata i32 %10, metadata !7712, metadata !DIExpression()) #19, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %10, metadata !7706, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %9, metadata !7704, metadata !DIExpression()), !dbg !7707
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !7719
  %12 = load i32, i32* %11, align 4, !dbg !7719
  call void @llvm.dbg.value(metadata i32 %12, metadata !7705, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i32 undef, metadata !7720, metadata !DIExpression()) #19, !dbg !7723
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %10) #19, !dbg !7725, !srcloc !7726
  ret i32 %12, !dbg !7727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPrioritySet(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7728 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7732, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.value(metadata i32 %1, metadata !7733, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.value(metadata i32 0, metadata !7737, metadata !DIExpression()), !dbg !7738
  %3 = icmp ugt i32 %1, 19, !dbg !7739
  br i1 %3, label %4, label %5, !dbg !7741

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1122) #20, !dbg !7742
  br label %5, !dbg !7742

5:                                                ; preds = %4, %2
  %6 = icmp ult i32 %1, 19, !dbg !7744
  %7 = select i1 %6, i32 %1, i32 19, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %7, metadata !7733, metadata !DIExpression()), !dbg !7738
  tail call void @vPortEnterCritical() #20, !dbg !7745
  %8 = icmp eq i8* %0, null, !dbg !7746
  br i1 %8, label %9, label %11, !dbg !7746

9:                                                ; preds = %5
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7746
  br label %13, !dbg !7746

11:                                               ; preds = %5
  %12 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7746
  br label %13, !dbg !7746

13:                                               ; preds = %11, %9
  %14 = phi %struct.tskTaskControlBlock* [ %10, %9 ], [ %12, %11 ], !dbg !7746
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %14, metadata !7734, metadata !DIExpression()), !dbg !7738
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 8, !dbg !7748
  %16 = load i32, i32* %15, align 4, !dbg !7748
  call void @llvm.dbg.value(metadata i32 %16, metadata !7735, metadata !DIExpression()), !dbg !7738
  %17 = icmp eq i32 %16, %7, !dbg !7750
  br i1 %17, label %64, label %18, !dbg !7752

18:                                               ; preds = %13
  %19 = icmp ule i32 %7, %16, !dbg !7753
  %20 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7756
  %21 = icmp eq %struct.tskTaskControlBlock* %14, %20, !dbg !7756
  %22 = select i1 %19, i1 true, i1 %21, !dbg !7757
  %23 = select i1 %19, i1 %21, i1 false, !dbg !7757
  br i1 %22, label %29, label %24, !dbg !7757

24:                                               ; preds = %18
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7758
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !7763
  %27 = load i32, i32* %26, align 4, !dbg !7763
  %28 = icmp uge i32 %7, %27, !dbg !7764
  br label %29, !dbg !7765

29:                                               ; preds = %18, %24
  %30 = phi i1 [ %28, %24 ], [ %23, %18 ], !dbg !7738
  call void @llvm.dbg.value(metadata i32 undef, metadata !7737, metadata !DIExpression()), !dbg !7738
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !7766
  %32 = load i32, i32* %31, align 4, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %32, metadata !7736, metadata !DIExpression()), !dbg !7738
  %33 = icmp eq i32 %16, %32, !dbg !7767
  br i1 %33, label %34, label %35, !dbg !7770

34:                                               ; preds = %29
  store i32 %7, i32* %31, align 4, !dbg !7771
  br label %35, !dbg !7773

35:                                               ; preds = %29, %34
  store i32 %7, i32* %15, align 4, !dbg !7774
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, i32 0, !dbg !7775
  %37 = load i32, i32* %36, align 4, !dbg !7775
  %38 = icmp sgt i32 %37, -1, !dbg !7777
  br i1 %38, label %39, label %41, !dbg !7778

39:                                               ; preds = %35
  %40 = sub nuw nsw i32 20, %7, !dbg !7779
  store i32 %40, i32* %36, align 4, !dbg !7779
  br label %41, !dbg !7781

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, !dbg !7782
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, i32 4, !dbg !7782
  %44 = load i8*, i8** %43, align 4, !dbg !7782
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !7782
  %46 = bitcast %struct.xLIST* %45 to i8*, !dbg !7782
  %47 = icmp eq i8* %44, %46, !dbg !7782
  br i1 %47, label %48, label %62, !dbg !7784

48:                                               ; preds = %41
  %49 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %42) #20, !dbg !7785
  %50 = icmp eq i32 %49, 0, !dbg !7788
  br i1 %50, label %51, label %56, !dbg !7789

51:                                               ; preds = %48
  %52 = shl nuw i32 1, %32, !dbg !7790
  %53 = xor i32 %52, -1, !dbg !7790
  %54 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7790
  %55 = and i32 %54, %53, !dbg !7790
  store volatile i32 %55, i32* @uxTopReadyPriority, align 4, !dbg !7790
  br label %56, !dbg !7792

56:                                               ; preds = %48, %51
  %57 = load i32, i32* %31, align 4, !dbg !7793
  %58 = shl nuw i32 1, %57, !dbg !7793
  %59 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7793
  %60 = or i32 %59, %58, !dbg !7793
  store volatile i32 %60, i32* @uxTopReadyPriority, align 4, !dbg !7793
  %61 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %57, !dbg !7793
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %61, %struct.xLIST_ITEM* noundef nonnull %42) #20, !dbg !7793
  br label %62, !dbg !7794

62:                                               ; preds = %41, %56
  br i1 %30, label %63, label %64, !dbg !7795

63:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7796
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7796, !srcloc !7800
  tail call void asm sideeffect "isb", ""() #19, !dbg !7796, !srcloc !7801
  br label %64, !dbg !7802

64:                                               ; preds = %63, %62, %13
  tail call void @vPortExitCritical() #20, !dbg !7803
  ret void, !dbg !7804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspend(i8* noundef %0) local_unnamed_addr #0 !dbg !7805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7807, metadata !DIExpression()), !dbg !7809
  tail call void @vPortEnterCritical() #20, !dbg !7810
  %2 = icmp eq i8* %0, null, !dbg !7811
  br i1 %2, label %3, label %5, !dbg !7811

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7811
  br label %7, !dbg !7811

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7811
  br label %7, !dbg !7811

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !7811
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !7808, metadata !DIExpression()), !dbg !7809
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !7813
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !7815
  %11 = icmp eq i32 %10, 0, !dbg !7816
  br i1 %11, label %12, label %23, !dbg !7817

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !7818
  %14 = load i32, i32* %13, align 4, !dbg !7818
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !7818
  %16 = load i32, i32* %15, align 4, !dbg !7818
  %17 = icmp eq i32 %16, 0, !dbg !7818
  br i1 %17, label %18, label %23, !dbg !7822

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !7823
  %20 = xor i32 %19, -1, !dbg !7823
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7823
  %22 = and i32 %21, %20, !dbg !7823
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !7823
  br label %23, !dbg !7823

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !7825
  %25 = load i8*, i8** %24, align 4, !dbg !7825
  %26 = icmp eq i8* %25, null, !dbg !7827
  br i1 %26, label %30, label %27, !dbg !7828

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !7825
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !7829
  br label %30, !dbg !7831

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !7832
  tail call void @vPortExitCritical() #20, !dbg !7833
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7834
  %32 = icmp eq %struct.tskTaskControlBlock* %8, %31, !dbg !7836
  %33 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7837
  %34 = icmp eq i32 %33, 0, !dbg !7837
  br i1 %32, label %35, label %47, !dbg !7838

35:                                               ; preds = %30
  br i1 %34, label %41, label %36, !dbg !7839

36:                                               ; preds = %35
  %37 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7841
  %38 = icmp eq i32 %37, 0, !dbg !7841
  br i1 %38, label %40, label %39, !dbg !7845

39:                                               ; preds = %36
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1322) #20, !dbg !7846
  br label %40, !dbg !7846

40:                                               ; preds = %39, %36
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7848
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7848, !srcloc !7850
  tail call void asm sideeffect "isb", ""() #19, !dbg !7848, !srcloc !7851
  br label %49, !dbg !7852

41:                                               ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0), align 4, !dbg !7853
  %43 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7856
  %44 = icmp eq i32 %42, %43, !dbg !7857
  br i1 %44, label %45, label %46, !dbg !7858

45:                                               ; preds = %41
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7859
  br label %49, !dbg !7861

46:                                               ; preds = %41
  tail call void @vTaskSwitchContext() #22, !dbg !7862
  br label %49

47:                                               ; preds = %30
  br i1 %34, label %49, label %48, !dbg !7864

48:                                               ; preds = %47
  tail call void @vPortEnterCritical() #20, !dbg !7866
  tail call fastcc void @prvResetNextTaskUnblockTime() #22, !dbg !7869
  tail call void @vPortExitCritical() #20, !dbg !7871
  br label %49, !dbg !7872

49:                                               ; preds = %48, %47, %40, %46, %45
  ret void, !dbg !7873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSwitchContext() local_unnamed_addr #0 !dbg !926 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7874
  %2 = icmp eq i32 %1, 0, !dbg !7875
  br i1 %2, label %4, label %3, !dbg !7876

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !7877
  br label %62, !dbg !7879

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !7880
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !7881
  %6 = and i32 %5, 1, !dbg !7881
  %7 = icmp eq i32 %6, 0, !dbg !7881
  br i1 %7, label %21, label %8, !dbg !7884

8:                                                ; preds = %4
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7885
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 0, !dbg !7885
  %11 = load i32*, i32** %10, align 4, !dbg !7885
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7885
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 4, !dbg !7885
  %14 = load i32*, i32** %13, align 4, !dbg !7885
  %15 = icmp ugt i32* %11, %14, !dbg !7885
  br i1 %15, label %21, label %16, !dbg !7888

16:                                               ; preds = %8
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7889
  %18 = bitcast %struct.tskTaskControlBlock* %17 to i8*, !dbg !7889
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7889
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 5, i32 0, !dbg !7889
  tail call void @vApplicationStackOverflowHook(i8* noundef %18, i8* noundef nonnull %20) #20, !dbg !7889
  br label %21, !dbg !7889

21:                                               ; preds = %8, %16, %4
  %22 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !7891
  %23 = and i32 %22, 1, !dbg !7891
  %24 = icmp eq i32 %23, 0, !dbg !7891
  br i1 %24, label %37, label %25, !dbg !7894

25:                                               ; preds = %21
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7895
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 4, !dbg !7895
  %28 = bitcast i32** %27 to i8**, !dbg !7895
  %29 = load i8*, i8** %28, align 4, !dbg !7895
  %30 = tail call i32 @memcmp(i8* noundef %29, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @vTaskSwitchContext.ucExpectedStackBytes, i32 0, i32 0), i32 noundef 20) #20, !dbg !7895
  %31 = icmp eq i32 %30, 0, !dbg !7895
  br i1 %31, label %37, label %32, !dbg !7898

32:                                               ; preds = %25
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7899
  %34 = bitcast %struct.tskTaskControlBlock* %33 to i8*, !dbg !7899
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7899
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 5, i32 0, !dbg !7899
  tail call void @vApplicationStackOverflowHook(i8* noundef %34, i8* noundef nonnull %36) #20, !dbg !7899
  br label %37, !dbg !7899

37:                                               ; preds = %25, %32, %21
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %38, metadata !7902, metadata !DIExpression()) #19, !dbg !7908
  %39 = tail call i8 asm sideeffect "clz $0, $1", "=r,r"(i32 %38) #19, !dbg !7910, !srcloc !7911
  call void @llvm.dbg.value(metadata i8 %39, metadata !7907, metadata !DIExpression()) #19, !dbg !7908
  %40 = zext i8 %39 to i32, !dbg !7901
  %41 = sub nsw i32 31, %40, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %41, metadata !928, metadata !DIExpression()), !dbg !7912
  %42 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 0, !dbg !7913
  %43 = load i32, i32* %42, align 4, !dbg !7913
  %44 = icmp eq i32 %43, 0, !dbg !7913
  br i1 %44, label %45, label %46, !dbg !7901

45:                                               ; preds = %37
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.14.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2244) #20, !dbg !7915
  br label %46, !dbg !7915

46:                                               ; preds = %45, %37
  call void @llvm.dbg.value(metadata !DIArgList([20 x %struct.xLIST]* @pxReadyTasksLists, i32 %41), metadata !932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7917
  %47 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 1, !dbg !7918
  %48 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %47, align 4, !dbg !7918
  %49 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %48, i32 0, i32 1, !dbg !7918
  %50 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %49, align 4, !dbg !7918
  store %struct.xLIST_ITEM* %50, %struct.xLIST_ITEM** %47, align 4, !dbg !7918
  %51 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 2, !dbg !7919
  %52 = bitcast %struct.xMINI_LIST_ITEM* %51 to %struct.xLIST_ITEM*, !dbg !7919
  %53 = icmp eq %struct.xLIST_ITEM* %50, %52, !dbg !7919
  br i1 %53, label %54, label %57, !dbg !7918

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %50, i32 0, i32 1, !dbg !7921
  %56 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %55, align 4, !dbg !7921
  store %struct.xLIST_ITEM* %56, %struct.xLIST_ITEM** %47, align 4, !dbg !7921
  br label %57, !dbg !7921

57:                                               ; preds = %54, %46
  %58 = phi %struct.xLIST_ITEM* [ %56, %54 ], [ %50, %46 ], !dbg !7918
  %59 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %58, i32 0, i32 3, !dbg !7918
  %60 = bitcast i8** %59 to %struct.tskTaskControlBlock**, !dbg !7918
  %61 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %60, align 4, !dbg !7918
  store volatile %struct.tskTaskControlBlock* %61, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7918
  br label %62

62:                                               ; preds = %57, %3
  ret void, !dbg !7923
}

; Function Attrs: optsize
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskResume(i8* noundef %0) local_unnamed_addr #0 !dbg !7924 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7926, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i8* %0, metadata !7927, metadata !DIExpression()), !dbg !7928
  %2 = icmp eq i8* %0, null, !dbg !7929
  br i1 %2, label %3, label %4, !dbg !7929

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1420) #20, !dbg !7930
  br label %29, !dbg !7933

4:                                                ; preds = %1
  %5 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7935
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %5, metadata !7927, metadata !DIExpression()), !dbg !7928
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7936
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %5, !dbg !7937
  br i1 %7, label %29, label %8, !dbg !7938

8:                                                ; preds = %4
  tail call void @vPortEnterCritical() #20, !dbg !7939
  %9 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef nonnull %0) #22, !dbg !7941
  %10 = icmp eq i32 %9, 1, !dbg !7944
  br i1 %10, label %11, label %28, !dbg !7945

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7946
  %13 = bitcast i8* %12 to %struct.xLIST_ITEM*, !dbg !7946
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !7948
  %15 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !7949
  %16 = bitcast i8* %15 to i32*, !dbg !7949
  %17 = load i32, i32* %16, align 4, !dbg !7949
  %18 = shl nuw i32 1, %17, !dbg !7949
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7949
  %20 = or i32 %19, %18, !dbg !7949
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !7949
  %21 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %17, !dbg !7949
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %21, %struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !7949
  %22 = load i32, i32* %16, align 4, !dbg !7950
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7952
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 3, !dbg !7953
  %25 = load i32, i32* %24, align 4, !dbg !7953
  %26 = icmp ult i32 %22, %25, !dbg !7954
  br i1 %26, label %28, label %27, !dbg !7955

27:                                               ; preds = %11
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7956
  tail call void asm sideeffect "dsb", ""() #19, !dbg !7956, !srcloc !7959
  tail call void asm sideeffect "isb", ""() #19, !dbg !7956, !srcloc !7960
  br label %28, !dbg !7961

28:                                               ; preds = %8, %27, %11
  tail call void @vPortExitCritical() #20, !dbg !7962
  br label %29, !dbg !7963

29:                                               ; preds = %3, %4, %28
  ret void, !dbg !7964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvTaskIsTaskSuspended(i8* noundef readonly %0) unnamed_addr #0 !dbg !7965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7970, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 0, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i8* %0, metadata !7972, metadata !DIExpression()), !dbg !7973
  %2 = icmp eq i8* %0, null, !dbg !7974
  br i1 %2, label %3, label %4, !dbg !7976

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1378) #20, !dbg !7977
  br label %4, !dbg !7977

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7979
  %6 = bitcast i8* %5 to i8**, !dbg !7979
  %7 = load i8*, i8** %6, align 4, !dbg !7979
  %8 = icmp eq i8* %7, bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), !dbg !7979
  br i1 %8, label %9, label %15, !dbg !7981

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !7982
  %11 = bitcast i8* %10 to i8**, !dbg !7982
  %12 = load i8*, i8** %11, align 4, !dbg !7982
  %13 = icmp eq i8* %12, null
  %14 = zext i1 %13 to i32, !dbg !7985
  br label %15, !dbg !7985

15:                                               ; preds = %9, %4
  %16 = phi i32 [ 0, %4 ], [ %14, %9 ], !dbg !7973
  call void @llvm.dbg.value(metadata i32 %16, metadata !7971, metadata !DIExpression()), !dbg !7973
  ret i32 %16, !dbg !7986
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !7987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7991, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i32 0, metadata !7992, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i8* %0, metadata !7993, metadata !DIExpression()), !dbg !7995
  %2 = icmp eq i8* %0, null, !dbg !7996
  br i1 %2, label %3, label %4, !dbg !7998

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1475) #20, !dbg !7999
  br label %4, !dbg !7999

4:                                                ; preds = %3, %1
  tail call void @vPortValidateInterruptPriority() #20, !dbg !8001
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !8002, !srcloc !7715
  call void @llvm.dbg.value(metadata i32 undef, metadata !7712, metadata !DIExpression()) #19, !dbg !8004
  call void @llvm.dbg.value(metadata i32 undef, metadata !7713, metadata !DIExpression()) #19, !dbg !8004
  call void @llvm.dbg.value(metadata i32 undef, metadata !7994, metadata !DIExpression()), !dbg !7995
  %6 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef %0) #22, !dbg !8005
  %7 = icmp eq i32 %6, 1, !dbg !8008
  br i1 %7, label %8, label %31, !dbg !8009

8:                                                ; preds = %4
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8010
  %10 = icmp eq i32 %9, 0, !dbg !8013
  br i1 %10, label %11, label %28, !dbg !8014

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8015
  %13 = bitcast i8* %12 to i32*, !dbg !8015
  %14 = load i32, i32* %13, align 4, !dbg !8015
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8018
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !8019
  %17 = load i32, i32* %16, align 4, !dbg !8019
  %18 = icmp uge i32 %14, %17, !dbg !8020
  %19 = zext i1 %18 to i32, !dbg !8021
  call void @llvm.dbg.value(metadata i32 %19, metadata !7992, metadata !DIExpression()), !dbg !7995
  %20 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8022
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !8022
  %22 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !8023
  %23 = load i32, i32* %13, align 4, !dbg !8024
  %24 = shl nuw i32 1, %23, !dbg !8024
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8024
  %26 = or i32 %25, %24, !dbg !8024
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !8024
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !8024
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !8024
  br label %31, !dbg !8025

28:                                               ; preds = %8
  %29 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8026
  %30 = bitcast i8* %29 to %struct.xLIST_ITEM*, !dbg !8026
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %30) #20, !dbg !8028
  br label %31

31:                                               ; preds = %4, %11, %28
  %32 = phi i32 [ %19, %11 ], [ 0, %28 ], [ 0, %4 ], !dbg !7995
  %33 = extractvalue { i32, i32 } %5, 0, !dbg !8002
  call void @llvm.dbg.value(metadata i32 %33, metadata !7712, metadata !DIExpression()) #19, !dbg !8004
  call void @llvm.dbg.value(metadata i32 %33, metadata !7994, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i32 %32, metadata !7992, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i32 undef, metadata !7720, metadata !DIExpression()) #19, !dbg !8029
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #19, !dbg !8031, !srcloc !7726
  ret i32 %32, !dbg !8032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskStartScheduler() local_unnamed_addr #0 !dbg !8033 {
  %1 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.112, i32 0, i32 0), i16 noundef zeroext 256, i8* noundef null, i32 noundef 0, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* undef) #22, !dbg !8036
  call void @llvm.dbg.value(metadata i32 %1, metadata !8035, metadata !DIExpression()), !dbg !8038
  %2 = icmp eq i32 %1, 1, !dbg !8039
  br i1 %2, label %3, label %5, !dbg !8042

3:                                                ; preds = %0
  %4 = tail call i32 @xTimerCreateTimerTask() #20, !dbg !8043
  call void @llvm.dbg.value(metadata i32 %4, metadata !8035, metadata !DIExpression()), !dbg !8038
  br label %5, !dbg !8045

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !8038
  call void @llvm.dbg.value(metadata i32 %6, metadata !8035, metadata !DIExpression()), !dbg !8038
  switch i32 %6, label %11 [
    i32 1, label %7
    i32 0, label %10
  ], !dbg !8046

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !8047, !srcloc !8054
  call void @llvm.dbg.value(metadata i32 %8, metadata !8050, metadata !DIExpression()) #19, !dbg !8055
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !8056
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !8057
  %9 = tail call i32 @xPortStartScheduler() #20, !dbg !8058
  br label %11, !dbg !8060

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1612) #20, !dbg !8061
  br label %11, !dbg !8061

11:                                               ; preds = %5, %10, %7
  ret void, !dbg !8065
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #12 !dbg !8066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8068, metadata !DIExpression()), !dbg !8069
  br label %2, !dbg !8070

2:                                                ; preds = %5, %1
  tail call fastcc void @prvCheckTasksWaitingTermination() #22, !dbg !8071
  %3 = load i32, i32* getelementptr inbounds ([20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0), align 4, !dbg !8075
  %4 = icmp ugt i32 %3, 1, !dbg !8078
  br i1 %4, label %6, label %5, !dbg !8079

5:                                                ; preds = %2, %6
  br label %2, !dbg !8071, !llvm.loop !8080

6:                                                ; preds = %2
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8083
  tail call void asm sideeffect "dsb", ""() #19, !dbg !8083, !srcloc !8086
  tail call void asm sideeffect "isb", ""() #19, !dbg !8083, !srcloc !8087
  br label %5, !dbg !8088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #0 !dbg !8089 {
  %1 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8097
  %2 = icmp eq i32 %1, 0, !dbg !8098
  br i1 %2, label %21, label %3, !dbg !8099

3:                                                ; preds = %0, %18
  tail call void @vTaskSuspendAll() #22, !dbg !8100
  %4 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 0), align 4, !dbg !8101
  %5 = icmp eq i32 %4, 0, !dbg !8101
  call void @llvm.dbg.value(metadata i1 %5, metadata !8091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8103
  %6 = tail call i32 @xTaskResumeAll() #22, !dbg !8104
  br i1 %5, label %18, label %7, !dbg !8105

7:                                                ; preds = %3
  tail call void @vPortEnterCritical() #20, !dbg !8106
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1), align 4, !dbg !8107
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !8107
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !8107
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !8107
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !8093, metadata !DIExpression()), !dbg !8109
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !8110
  %13 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #20, !dbg !8111
  %14 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8112
  %15 = add i32 %14, -1, !dbg !8112
  store volatile i32 %15, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8112
  %16 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8113
  %17 = add i32 %16, -1, !dbg !8113
  store volatile i32 %17, i32* @uxTasksDeleted, align 4, !dbg !8113
  tail call void @vPortExitCritical() #20, !dbg !8114
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %11) #22, !dbg !8115
  br label %18, !dbg !8116

18:                                               ; preds = %3, %7
  %19 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8097
  %20 = icmp eq i32 %19, 0, !dbg !8098
  br i1 %20, label %21, label %3, !dbg !8099, !llvm.loop !8117

21:                                               ; preds = %18, %0
  ret void, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #0 !dbg !8120 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !8124, metadata !DIExpression()), !dbg !8125
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 4, !dbg !8126
  %3 = bitcast i32** %2 to i8**, !dbg !8126
  %4 = load i8*, i8** %3, align 4, !dbg !8126
  tail call void @vPortFree(i8* noundef %4) #20, !dbg !8126
  %5 = bitcast %struct.tskTaskControlBlock* %0 to i8*, !dbg !8128
  tail call void @vPortFree(i8* noundef %5) #20, !dbg !8129
  ret void, !dbg !8130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskEndScheduler() local_unnamed_addr #0 !dbg !8131 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !8132, !srcloc !8054
  call void @llvm.dbg.value(metadata i32 %1, metadata !8050, metadata !DIExpression()) #19, !dbg !8134
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !8135
  tail call void @vPortEndScheduler() #20, !dbg !8136
  ret void, !dbg !8137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #8 !dbg !8138 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !8143
  call void @llvm.dbg.value(metadata i32 %1, metadata !8142, metadata !DIExpression()), !dbg !8145
  ret i32 %1, !dbg !8146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #0 !dbg !8147 {
  tail call void @vPortValidateInterruptPriority() #20, !dbg !8151
  call void @llvm.dbg.value(metadata i32 0, metadata !8150, metadata !DIExpression()), !dbg !8152
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !8153
  call void @llvm.dbg.value(metadata i32 %1, metadata !8149, metadata !DIExpression()), !dbg !8152
  ret i32 %1, !dbg !8155
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #8 !dbg !8156 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8159
  ret i32 %1, !dbg !8160
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @pcTaskGetTaskName(i8* noundef readnone %0) local_unnamed_addr #0 !dbg !8161 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8165, metadata !DIExpression()), !dbg !8167
  %2 = icmp eq i8* %0, null, !dbg !8168
  br i1 %2, label %3, label %5, !dbg !8168

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8168
  br label %7, !dbg !8168

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8168
  br label %7, !dbg !8168

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8168
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8166, metadata !DIExpression()), !dbg !8167
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !8169
  br i1 %9, label %10, label %11, !dbg !8171

10:                                               ; preds = %7
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1821) #20, !dbg !8172
  br label %11, !dbg !8172

11:                                               ; preds = %10, %7
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !8174
  ret i8* %12, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture noundef writeonly %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !8176 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !8195, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i32 %1, metadata !8196, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i32* %2, metadata !8197, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i32 0, metadata !8198, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i32 20, metadata !8199, metadata !DIExpression()), !dbg !8200
  tail call void @vTaskSuspendAll() #22, !dbg !8201
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8202
  %5 = icmp ugt i32 %4, %1, !dbg !8205
  br i1 %5, label %32, label %6, !dbg !8206

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %3 ], !dbg !8200
  %8 = phi i32 [ %9, %6 ], [ 20, %3 ], !dbg !8200
  call void @llvm.dbg.value(metadata i32 %8, metadata !8199, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i32 %7, metadata !8198, metadata !DIExpression()), !dbg !8200
  %9 = add nsw i32 %8, -1, !dbg !8207
  call void @llvm.dbg.value(metadata i32 %9, metadata !8199, metadata !DIExpression()), !dbg !8200
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %7, !dbg !8210
  %11 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !8211
  %12 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %10, %struct.xLIST* noundef nonnull %11, i32 noundef 1) #22, !dbg !8212
  %13 = add i32 %12, %7, !dbg !8213
  call void @llvm.dbg.value(metadata i32 %13, metadata !8198, metadata !DIExpression()), !dbg !8200
  %14 = icmp eq i32 %9, 0, !dbg !8214
  br i1 %14, label %15, label %6, !dbg !8215, !llvm.loop !8216

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %13, !dbg !8219
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8220
  %18 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %16, %struct.xLIST* noundef %17, i32 noundef 2) #22, !dbg !8221
  %19 = add i32 %18, %13, !dbg !8222
  call void @llvm.dbg.value(metadata i32 %19, metadata !8198, metadata !DIExpression()), !dbg !8200
  %20 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %19, !dbg !8223
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !8224
  %22 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %20, %struct.xLIST* noundef %21, i32 noundef 2) #22, !dbg !8225
  %23 = add i32 %22, %19, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %23, metadata !8198, metadata !DIExpression()), !dbg !8200
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %23, !dbg !8227
  %25 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %24, %struct.xLIST* noundef nonnull @xTasksWaitingTermination, i32 noundef 4) #22, !dbg !8229
  %26 = add i32 %23, %25, !dbg !8230
  call void @llvm.dbg.value(metadata i32 %26, metadata !8198, metadata !DIExpression()), !dbg !8200
  %27 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !8231
  %28 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %27, %struct.xLIST* noundef nonnull @xSuspendedTaskList, i32 noundef 3) #22, !dbg !8233
  %29 = add i32 %26, %28, !dbg !8234
  call void @llvm.dbg.value(metadata i32 %29, metadata !8198, metadata !DIExpression()), !dbg !8200
  %30 = icmp eq i32* %2, null, !dbg !8235
  br i1 %30, label %32, label %31, !dbg !8238

31:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !8239
  br label %32, !dbg !8241

32:                                               ; preds = %3, %15, %31
  %33 = phi i32 [ %29, %31 ], [ %29, %15 ], [ 0, %3 ], !dbg !8200
  call void @llvm.dbg.value(metadata i32 %33, metadata !8198, metadata !DIExpression()), !dbg !8200
  %34 = tail call i32 @xTaskResumeAll() #22, !dbg !8242
  ret i32 %33, !dbg !8243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* nocapture noundef writeonly %0, %struct.xLIST* noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !8244 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !8248, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8249, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata i32 %2, metadata !8250, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata i32 0, metadata !8255, metadata !DIExpression()), !dbg !8263
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !8264
  %5 = load i32, i32* %4, align 4, !dbg !8264
  %6 = icmp eq i32 %5, 0, !dbg !8265
  br i1 %6, label %72, label %7, !dbg !8266

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8256, metadata !DIExpression()), !dbg !8267
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 1, !dbg !8268
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !8268
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !8268
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %10, align 4, !dbg !8268
  store %struct.xLIST_ITEM* %11, %struct.xLIST_ITEM** %8, align 4, !dbg !8268
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, !dbg !8269
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !8269
  %14 = icmp eq %struct.xLIST_ITEM* %11, %13, !dbg !8269
  br i1 %14, label %15, label %18, !dbg !8268

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !8271
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !8271
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %8, align 4, !dbg !8271
  br label %18, !dbg !8271

18:                                               ; preds = %15, %7
  %19 = phi %struct.xLIST_ITEM* [ %17, %15 ], [ %11, %7 ], !dbg !8268
  %20 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 3, !dbg !8268
  %21 = bitcast i8** %20 to %struct.tskTaskControlBlock**, !dbg !8268
  %22 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %21, align 4, !dbg !8268
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %22, metadata !8254, metadata !DIExpression()), !dbg !8263
  %23 = icmp eq i32 %2, 3
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, i32 1
  br label %25, !dbg !8273

25:                                               ; preds = %70, %18
  %26 = phi %struct.xLIST_ITEM* [ %19, %18 ], [ %71, %70 ], !dbg !8274
  %27 = phi i32 [ 0, %18 ], [ %68, %70 ], !dbg !8263
  call void @llvm.dbg.value(metadata i32 %27, metadata !8255, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8260, metadata !DIExpression()), !dbg !8275
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %26, i32 0, i32 1, !dbg !8274
  %29 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %28, align 4, !dbg !8274
  store %struct.xLIST_ITEM* %29, %struct.xLIST_ITEM** %8, align 4, !dbg !8274
  %30 = icmp eq %struct.xLIST_ITEM* %29, %13, !dbg !8276
  br i1 %30, label %31, label %33, !dbg !8274

31:                                               ; preds = %25
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !8278
  store %struct.xLIST_ITEM* %32, %struct.xLIST_ITEM** %8, align 4, !dbg !8278
  br label %33, !dbg !8278

33:                                               ; preds = %31, %25
  %34 = phi %struct.xLIST_ITEM* [ %32, %31 ], [ %29, %25 ], !dbg !8274
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %34, i32 0, i32 3, !dbg !8274
  %36 = load i8*, i8** %35, align 4, !dbg !8274
  %37 = bitcast i8* %36 to %struct.tskTaskControlBlock*, !dbg !8274
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %37, metadata !8251, metadata !DIExpression()), !dbg !8263
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 0, !dbg !8280
  store i8* %36, i8** %38, align 4, !dbg !8281
  %39 = getelementptr inbounds i8, i8* %36, i32 52, !dbg !8282
  %40 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 1, !dbg !8283
  store i8* %39, i8** %40, align 4, !dbg !8284
  %41 = getelementptr inbounds i8, i8* %36, i32 60, !dbg !8285
  %42 = bitcast i8* %41 to i32*, !dbg !8285
  %43 = load volatile i32, i32* %42, align 4, !dbg !8285
  %44 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 2, !dbg !8286
  store i32 %43, i32* %44, align 4, !dbg !8287
  %45 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 3, !dbg !8288
  store i32 %2, i32* %45, align 4, !dbg !8289
  %46 = getelementptr inbounds i8, i8* %36, i32 44, !dbg !8290
  %47 = bitcast i8* %46 to i32*, !dbg !8290
  %48 = load volatile i32, i32* %47, align 4, !dbg !8290
  %49 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 4, !dbg !8291
  store i32 %48, i32* %49, align 4, !dbg !8292
  br i1 %23, label %50, label %56, !dbg !8293

50:                                               ; preds = %33
  %51 = getelementptr inbounds i8, i8* %36, i32 40, !dbg !8295
  %52 = bitcast i8* %51 to i8**, !dbg !8295
  %53 = load volatile i8*, i8** %52, align 4, !dbg !8295
  %54 = icmp eq i8* %53, null, !dbg !8299
  br i1 %54, label %56, label %55, !dbg !8300

55:                                               ; preds = %50
  store i32 2, i32* %45, align 4, !dbg !8301
  br label %56, !dbg !8303

56:                                               ; preds = %50, %55, %33
  %57 = getelementptr inbounds i8, i8* %36, i32 68, !dbg !8304
  %58 = bitcast i8* %57 to i32*, !dbg !8304
  %59 = load volatile i32, i32* %58, align 4, !dbg !8304
  %60 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 5, !dbg !8306
  store i32 %59, i32* %60, align 4, !dbg !8307
  %61 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 6, !dbg !8308
  store i32 0, i32* %61, align 4, !dbg !8310
  %62 = getelementptr inbounds i8, i8* %36, i32 48, !dbg !8311
  %63 = bitcast i8* %62 to i32**, !dbg !8311
  %64 = load volatile i32*, i32** %63, align 4, !dbg !8311
  %65 = bitcast i32* %64 to i8*, !dbg !8313
  %66 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %65) #22, !dbg !8314
  %67 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 7, !dbg !8315
  store i16 %66, i16* %67, align 4, !dbg !8316
  %68 = add i32 %27, 1, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %68, metadata !8255, metadata !DIExpression()), !dbg !8263
  %69 = icmp eq %struct.tskTaskControlBlock* %22, %37, !dbg !8318
  br i1 %69, label %72, label %70, !dbg !8319, !llvm.loop !8320

70:                                               ; preds = %56
  %71 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !8274
  br label %25, !dbg !8319

72:                                               ; preds = %56, %3
  %73 = phi i32 [ 0, %3 ], [ %68, %56 ], !dbg !8263
  call void @llvm.dbg.value(metadata i32 %73, metadata !8255, metadata !DIExpression()), !dbg !8263
  ret i32 %73, !dbg !8322
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture noundef readonly %0) unnamed_addr #13 !dbg !8323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8327, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 0, metadata !8328, metadata !DIExpression()), !dbg !8329
  %2 = load i8, i8* %0, align 1, !dbg !8330
  %3 = icmp eq i8 %2, -91, !dbg !8331
  br i1 %3, label %4, label %14, !dbg !8332

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8328, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i8* %6, metadata !8327, metadata !DIExpression()), !dbg !8329
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8333
  call void @llvm.dbg.value(metadata i8* %7, metadata !8327, metadata !DIExpression()), !dbg !8329
  %8 = add i32 %5, 1, !dbg !8335
  call void @llvm.dbg.value(metadata i32 %8, metadata !8328, metadata !DIExpression()), !dbg !8329
  %9 = load i8, i8* %7, align 1, !dbg !8330
  %10 = icmp eq i8 %9, -91, !dbg !8331
  br i1 %10, label %4, label %11, !dbg !8332, !llvm.loop !8336

11:                                               ; preds = %4
  %12 = lshr i32 %8, 2, !dbg !8338
  %13 = trunc i32 %12 to i16, !dbg !8338
  br label %14, !dbg !8338

14:                                               ; preds = %11, %1
  %15 = phi i16 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8328, metadata !DIExpression()), !dbg !8329
  ret i16 %15, !dbg !8339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8340 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8344, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.value(metadata i32 %1, metadata !8345, metadata !DIExpression()), !dbg !8347
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !8348
  br i1 %3, label %4, label %5, !dbg !8350

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2262) #20, !dbg !8351
  br label %5, !dbg !8351

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8353
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8354
  tail call void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #20, !dbg !8355
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8356
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8358
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !8359
  %11 = icmp eq i32 %10, 0, !dbg !8360
  br i1 %11, label %12, label %20, !dbg !8361

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8362
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !8362
  %15 = load i32, i32* %14, align 4, !dbg !8362
  %16 = shl nuw i32 1, %15, !dbg !8362
  %17 = xor i32 %16, -1, !dbg !8362
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8362
  %19 = and i32 %18, %17, !dbg !8362
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !8362
  br label %20, !dbg !8364

20:                                               ; preds = %5, %12
  %21 = icmp eq i32 %1, -1, !dbg !8365
  br i1 %21, label %22, label %25, !dbg !8368

22:                                               ; preds = %20
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8369
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 1, !dbg !8371
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %24) #20, !dbg !8372
  br label %28, !dbg !8373

25:                                               ; preds = %20
  %26 = load volatile i32, i32* @xTickCount, align 4, !dbg !8374
  %27 = add i32 %26, %1, !dbg !8376
  call void @llvm.dbg.value(metadata i32 %27, metadata !8346, metadata !DIExpression()), !dbg !8347
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %27) #22, !dbg !8377
  br label %28

28:                                               ; preds = %25, %22
  ret void, !dbg !8378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8379 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8383, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.value(metadata i32 %1, metadata !8384, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.value(metadata i32 %2, metadata !8385, metadata !DIExpression()), !dbg !8387
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !8388
  br i1 %4, label %5, label %6, !dbg !8390

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2321) #20, !dbg !8391
  br label %6, !dbg !8391

6:                                                ; preds = %5, %3
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8393
  %8 = icmp eq i32 %7, 0, !dbg !8393
  br i1 %8, label %9, label %10, !dbg !8395

9:                                                ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2325) #20, !dbg !8396
  br label %10, !dbg !8396

10:                                               ; preds = %9, %6
  %11 = or i32 %1, -2147483648, !dbg !8398
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8398
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 2, i32 0, !dbg !8398
  store i32 %11, i32* %13, align 4, !dbg !8398
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8399
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !8400
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %15) #20, !dbg !8401
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8402
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 1, !dbg !8404
  %18 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #20, !dbg !8405
  %19 = icmp eq i32 %18, 0, !dbg !8406
  br i1 %19, label %20, label %28, !dbg !8407

20:                                               ; preds = %10
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8408
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !8408
  %23 = load i32, i32* %22, align 4, !dbg !8408
  %24 = shl nuw i32 1, %23, !dbg !8408
  %25 = xor i32 %24, -1, !dbg !8408
  %26 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8408
  %27 = and i32 %26, %25, !dbg !8408
  store volatile i32 %27, i32* @uxTopReadyPriority, align 4, !dbg !8408
  br label %28, !dbg !8410

28:                                               ; preds = %10, %20
  %29 = icmp eq i32 %2, -1, !dbg !8411
  br i1 %29, label %30, label %33, !dbg !8414

30:                                               ; preds = %28
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8415
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 1, !dbg !8417
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %32) #20, !dbg !8418
  br label %36, !dbg !8419

33:                                               ; preds = %28
  %34 = load volatile i32, i32* @xTickCount, align 4, !dbg !8420
  %35 = add i32 %34, %2, !dbg !8422
  call void @llvm.dbg.value(metadata i32 %35, metadata !8386, metadata !DIExpression()), !dbg !8387
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %35) #22, !dbg !8423
  br label %36

36:                                               ; preds = %33, %30
  ret void, !dbg !8424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8425 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8427, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.value(metadata i32 %1, metadata !8428, metadata !DIExpression()), !dbg !8430
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !8431
  br i1 %3, label %4, label %5, !dbg !8433

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2389) #20, !dbg !8434
  br label %5, !dbg !8434

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8436
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8437
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #20, !dbg !8438
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8439
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8441
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !8442
  %11 = icmp eq i32 %10, 0, !dbg !8443
  br i1 %11, label %12, label %20, !dbg !8444

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8445
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !8445
  %15 = load i32, i32* %14, align 4, !dbg !8445
  %16 = shl nuw i32 1, %15, !dbg !8445
  %17 = xor i32 %16, -1, !dbg !8445
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8445
  %19 = and i32 %18, %17, !dbg !8445
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !8445
  br label %20, !dbg !8447

20:                                               ; preds = %5, %12
  %21 = load volatile i32, i32* @xTickCount, align 4, !dbg !8448
  %22 = add i32 %21, %1, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %22, metadata !8429, metadata !DIExpression()), !dbg !8430
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %22) #22, !dbg !8450
  ret void, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8459, metadata !DIExpression()), !dbg !8462
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !8463
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !8463
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !8463
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !8463
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !8463
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !8460, metadata !DIExpression()), !dbg !8462
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !8464
  br i1 %7, label %8, label %9, !dbg !8466

8:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2447) #20, !dbg !8467
  br label %9, !dbg !8467

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8469
  %11 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %10) #20, !dbg !8470
  %12 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8471
  %13 = icmp eq i32 %12, 0, !dbg !8473
  br i1 %13, label %14, label %23, !dbg !8474

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !8475
  %16 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %15) #20, !dbg !8477
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !8478
  %18 = load i32, i32* %17, align 4, !dbg !8478
  %19 = shl nuw i32 1, %18, !dbg !8478
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8478
  %21 = or i32 %20, %19, !dbg !8478
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !8478
  %22 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %18, !dbg !8478
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %22, %struct.xLIST_ITEM* noundef nonnull %15) #20, !dbg !8478
  br label %24, !dbg !8479

23:                                               ; preds = %9
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %10) #20, !dbg !8480
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !8482
  %26 = load i32, i32* %25, align 4, !dbg !8482
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8484
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 3, !dbg !8485
  %29 = load i32, i32* %28, align 4, !dbg !8485
  %30 = icmp ugt i32 %26, %29, !dbg !8486
  br i1 %30, label %31, label %32, !dbg !8487

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 1, metadata !8461, metadata !DIExpression()), !dbg !8462
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8488
  br label %32, !dbg !8490

32:                                               ; preds = %24, %31
  %33 = phi i32 [ 1, %31 ], [ 0, %24 ], !dbg !8491
  call void @llvm.dbg.value(metadata i32 %33, metadata !8461, metadata !DIExpression()), !dbg !8462
  ret i32 %33, !dbg !8492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !8497, metadata !DIExpression()), !dbg !8501
  call void @llvm.dbg.value(metadata i32 %1, metadata !8498, metadata !DIExpression()), !dbg !8501
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8502
  %4 = icmp eq i32 %3, 0, !dbg !8502
  br i1 %4, label %5, label %6, !dbg !8504

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2503) #20, !dbg !8505
  br label %6, !dbg !8505

6:                                                ; preds = %5, %2
  %7 = or i32 %1, -2147483648, !dbg !8507
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !8507
  store i32 %7, i32* %8, align 4, !dbg !8507
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !8508
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !8508
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !8508
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !8499, metadata !DIExpression()), !dbg !8501
  %12 = icmp eq %struct.tskTaskControlBlock* %11, null, !dbg !8509
  br i1 %12, label %13, label %14, !dbg !8511

13:                                               ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2511) #20, !dbg !8512
  br label %14, !dbg !8512

14:                                               ; preds = %13, %6
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %0) #20, !dbg !8514
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !8515
  %17 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %16) #20, !dbg !8516
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 3, !dbg !8517
  %19 = load i32, i32* %18, align 4, !dbg !8517
  %20 = shl nuw i32 1, %19, !dbg !8517
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8517
  %22 = or i32 %21, %20, !dbg !8517
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !8517
  %23 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %19, !dbg !8517
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %23, %struct.xLIST_ITEM* noundef nonnull %16) #20, !dbg !8517
  %24 = load i32, i32* %18, align 4, !dbg !8518
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8520
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !8521
  %27 = load i32, i32* %26, align 4, !dbg !8521
  %28 = icmp ugt i32 %24, %27, !dbg !8522
  br i1 %28, label %29, label %30, !dbg !8523

29:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 1, metadata !8500, metadata !DIExpression()), !dbg !8501
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8524
  br label %30, !dbg !8526

30:                                               ; preds = %14, %29
  %31 = phi i32 [ 1, %29 ], [ 0, %14 ], !dbg !8527
  call void @llvm.dbg.value(metadata i32 %31, metadata !8500, metadata !DIExpression()), !dbg !8501
  ret i32 %31, !dbg !8528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef writeonly %0) local_unnamed_addr #0 !dbg !8529 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !8540, metadata !DIExpression()), !dbg !8541
  %2 = icmp eq %struct.hal_cache_region_config_t* %0, null, !dbg !8542
  br i1 %2, label %3, label %4, !dbg !8544

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2543) #20, !dbg !8545
  br label %4, !dbg !8545

4:                                                ; preds = %3, %1
  %5 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !8547
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !8548
  store i32 %5, i32* %6, align 4, !dbg !8549
  %7 = load volatile i32, i32* @xTickCount, align 4, !dbg !8550
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 1, !dbg !8551
  store i32 %7, i32* %8, align 4, !dbg !8552
  ret void, !dbg !8553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef %0, i32* noundef %1) local_unnamed_addr #0 !dbg !8554 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !8558, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i32* %1, metadata !8559, metadata !DIExpression()), !dbg !8563
  %3 = icmp eq %struct.hal_cache_region_config_t* %0, null, !dbg !8564
  br i1 %3, label %4, label %5, !dbg !8566

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2553) #20, !dbg !8567
  br label %5, !dbg !8567

5:                                                ; preds = %4, %2
  %6 = icmp eq i32* %1, null, !dbg !8569
  br i1 %6, label %7, label %8, !dbg !8571

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2554) #20, !dbg !8572
  br label %8, !dbg !8572

8:                                                ; preds = %7, %5
  tail call void @vPortEnterCritical() #20, !dbg !8574
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !8575
  call void @llvm.dbg.value(metadata i32 %9, metadata !8561, metadata !DIExpression()), !dbg !8576
  %10 = load i32, i32* %1, align 4, !dbg !8577
  %11 = icmp eq i32 %10, -1, !dbg !8579
  br i1 %11, label %26, label %12, !dbg !8580

12:                                               ; preds = %8
  %13 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !8581
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !8583
  %15 = load i32, i32* %14, align 4, !dbg !8583
  %16 = icmp eq i32 %13, %15, !dbg !8584
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4, !dbg !8585
  %19 = icmp ult i32 %9, %18
  %20 = select i1 %16, i1 true, i1 %19, !dbg !8586
  br i1 %20, label %21, label %26, !dbg !8586

21:                                               ; preds = %12
  %22 = sub i32 %9, %18, !dbg !8587
  %23 = icmp ugt i32 %10, %22, !dbg !8589
  br i1 %23, label %24, label %26, !dbg !8590

24:                                               ; preds = %21
  %25 = sub i32 %10, %22, !dbg !8591
  store i32 %25, i32* %1, align 4, !dbg !8591
  tail call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %0) #22, !dbg !8593
  call void @llvm.dbg.value(metadata i32 0, metadata !8560, metadata !DIExpression()), !dbg !8563
  br label %26, !dbg !8594

26:                                               ; preds = %12, %21, %8, %24
  %27 = phi i32 [ 0, %24 ], [ 0, %8 ], [ 1, %21 ], [ 1, %12 ], !dbg !8595
  call void @llvm.dbg.value(metadata i32 %27, metadata !8560, metadata !DIExpression()), !dbg !8563
  tail call void @vPortExitCritical() #20, !dbg !8596
  ret i32 %27, !dbg !8597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskMissedYield() local_unnamed_addr #5 !dbg !8598 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8599
  ret void, !dbg !8600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(i8* noundef readonly %0) local_unnamed_addr #9 !dbg !8601 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8603, metadata !DIExpression()), !dbg !8606
  %2 = icmp eq i8* %0, null, !dbg !8607
  br i1 %2, label %7, label %3, !dbg !8609

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8605, metadata !DIExpression()), !dbg !8606
  %4 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !8610
  %5 = bitcast i8* %4 to i32*, !dbg !8610
  %6 = load i32, i32* %5, align 4, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %6, metadata !8604, metadata !DIExpression()), !dbg !8606
  br label %7, !dbg !8612

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ], !dbg !8613
  call void @llvm.dbg.value(metadata i32 %8, metadata !8604, metadata !DIExpression()), !dbg !8606
  ret i32 %8, !dbg !8614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTaskSetTaskNumber(i8* noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !8615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8619, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 %1, metadata !8620, metadata !DIExpression()), !dbg !8622
  %3 = icmp eq i8* %0, null, !dbg !8623
  br i1 %3, label %7, label %4, !dbg !8625

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %0, metadata !8621, metadata !DIExpression()), !dbg !8622
  %5 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !8626
  %6 = bitcast i8* %5 to i32*, !dbg !8626
  store i32 %1, i32* %6, align 4, !dbg !8628
  br label %7, !dbg !8629

7:                                                ; preds = %4, %2
  ret void, !dbg !8630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @uxTaskGetStackHighWaterMark(i8* noundef readonly %0) local_unnamed_addr #5 !dbg !8631 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8633, metadata !DIExpression()), !dbg !8637
  %2 = icmp eq i8* %0, null, !dbg !8638
  br i1 %2, label %3, label %5, !dbg !8638

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8638
  br label %7, !dbg !8638

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8638
  br label %7, !dbg !8638

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8638
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8634, metadata !DIExpression()), !dbg !8637
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !8639
  %10 = bitcast i32** %9 to i8**, !dbg !8639
  %11 = load i8*, i8** %10, align 4, !dbg !8639
  call void @llvm.dbg.value(metadata i8* %11, metadata !8635, metadata !DIExpression()), !dbg !8637
  %12 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %11) #22, !dbg !8641
  %13 = zext i16 %12 to i32, !dbg !8642
  call void @llvm.dbg.value(metadata i32 %13, metadata !8636, metadata !DIExpression()), !dbg !8637
  ret i32 %13, !dbg !8643
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @xTaskGetCurrentTaskHandle() local_unnamed_addr #8 !dbg !8644 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8649
  %2 = bitcast %struct.tskTaskControlBlock* %1 to i8*, !dbg !8649
  call void @llvm.dbg.value(metadata i8* %2, metadata !8648, metadata !DIExpression()), !dbg !8650
  ret i8* %2, !dbg !8651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #8 !dbg !8652 {
  %1 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8655
  %2 = icmp eq i32 %1, 0, !dbg !8657
  br i1 %2, label %7, label %3, !dbg !8658

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8659
  %5 = icmp eq i32 %4, 0, !dbg !8662
  %6 = select i1 %5, i32 2, i32 0
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ 1, %0 ], [ %6, %3 ], !dbg !8663
  call void @llvm.dbg.value(metadata i32 %8, metadata !8654, metadata !DIExpression()), !dbg !8664
  ret i32 %8, !dbg !8665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPriorityInherit(i8* noundef %0) local_unnamed_addr #0 !dbg !8666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8670, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %0, metadata !8671, metadata !DIExpression()), !dbg !8672
  %2 = icmp eq i8* %0, null, !dbg !8673
  br i1 %2, label %55, label %3, !dbg !8675

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8676
  %5 = bitcast i8* %4 to i32*, !dbg !8676
  %6 = load i32, i32* %5, align 4, !dbg !8676
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8679
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 3, !dbg !8680
  %9 = load i32, i32* %8, align 4, !dbg !8680
  %10 = icmp ult i32 %6, %9, !dbg !8681
  br i1 %10, label %11, label %55, !dbg !8682

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8683
  %13 = bitcast i8* %12 to i32*, !dbg !8683
  %14 = load i32, i32* %13, align 4, !dbg !8683
  %15 = icmp sgt i32 %14, -1, !dbg !8686
  br i1 %15, label %16, label %21, !dbg !8687

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8688
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !8688
  %19 = load i32, i32* %18, align 4, !dbg !8688
  %20 = sub i32 20, %19, !dbg !8688
  store i32 %20, i32* %13, align 4, !dbg !8688
  br label %21, !dbg !8690

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8691
  %23 = bitcast i8* %22 to %struct.xLIST_ITEM*, !dbg !8691
  %24 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8691
  %25 = bitcast i8* %24 to i8**, !dbg !8691
  %26 = load i8*, i8** %25, align 4, !dbg !8691
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !8691
  %28 = bitcast %struct.xLIST* %27 to i8*, !dbg !8691
  %29 = icmp eq i8* %26, %28, !dbg !8691
  br i1 %29, label %30, label %51, !dbg !8693

30:                                               ; preds = %21
  %31 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %23) #20, !dbg !8694
  %32 = icmp eq i32 %31, 0, !dbg !8697
  br i1 %32, label %33, label %43, !dbg !8698

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !8699
  %35 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %34, i32 0, !dbg !8699
  %36 = load i32, i32* %35, align 4, !dbg !8699
  %37 = icmp eq i32 %36, 0, !dbg !8699
  br i1 %37, label %38, label %43, !dbg !8703

38:                                               ; preds = %33
  %39 = shl nuw i32 1, %34, !dbg !8704
  %40 = xor i32 %39, -1, !dbg !8704
  %41 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8704
  %42 = and i32 %41, %40, !dbg !8704
  store volatile i32 %42, i32* @uxTopReadyPriority, align 4, !dbg !8704
  br label %43, !dbg !8704

43:                                               ; preds = %30, %33, %38
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8706
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !8707
  %46 = load i32, i32* %45, align 4, !dbg !8707
  store i32 %46, i32* %5, align 4, !dbg !8708
  %47 = shl nuw i32 1, %46, !dbg !8709
  %48 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8709
  %49 = or i32 %48, %47, !dbg !8709
  store volatile i32 %49, i32* @uxTopReadyPriority, align 4, !dbg !8709
  %50 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %46, !dbg !8709
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %50, %struct.xLIST_ITEM* noundef nonnull %23) #20, !dbg !8709
  br label %55, !dbg !8710

51:                                               ; preds = %21
  %52 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8711
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %52, i32 0, i32 3, !dbg !8713
  %54 = load i32, i32* %53, align 4, !dbg !8713
  store i32 %54, i32* %5, align 4, !dbg !8714
  br label %55

55:                                               ; preds = %1, %51, %43, %3
  ret void, !dbg !8715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityDisinherit(i8* noundef %0) local_unnamed_addr #0 !dbg !8716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8718, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i8* %0, metadata !8719, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i32 0, metadata !8720, metadata !DIExpression()), !dbg !8721
  %2 = icmp eq i8* %0, null, !dbg !8722
  br i1 %2, label %46, label %3, !dbg !8724

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !8725
  %5 = bitcast i8* %4 to i32*, !dbg !8725
  %6 = load i32, i32* %5, align 4, !dbg !8725
  %7 = icmp eq i32 %6, 0, !dbg !8725
  br i1 %7, label %8, label %10, !dbg !8728

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 3409) #20, !dbg !8729
  %9 = load i32, i32* %5, align 4, !dbg !8731
  br label %10, !dbg !8729

10:                                               ; preds = %8, %3
  %11 = phi i32 [ %9, %8 ], [ %6, %3 ], !dbg !8731
  %12 = add i32 %11, -1, !dbg !8731
  store i32 %12, i32* %5, align 4, !dbg !8731
  %13 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8732
  %14 = bitcast i8* %13 to i32*, !dbg !8732
  %15 = load i32, i32* %14, align 4, !dbg !8732
  %16 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !8734
  %17 = bitcast i8* %16 to i32*, !dbg !8734
  %18 = load i32, i32* %17, align 4, !dbg !8734
  %19 = icmp ne i32 %15, %18, !dbg !8735
  %20 = icmp eq i32 %12, 0
  %21 = select i1 %19, i1 %20, i1 false, !dbg !8736
  br i1 %21, label %22, label %46, !dbg !8736

22:                                               ; preds = %10
  %23 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8737
  %24 = bitcast i8* %23 to %struct.xLIST_ITEM*, !dbg !8737
  %25 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #20, !dbg !8742
  %26 = icmp eq i32 %25, 0, !dbg !8743
  br i1 %26, label %27, label %37, !dbg !8744

27:                                               ; preds = %22
  %28 = load i32, i32* %14, align 4, !dbg !8745
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %28, i32 0, !dbg !8745
  %30 = load i32, i32* %29, align 4, !dbg !8745
  %31 = icmp eq i32 %30, 0, !dbg !8745
  br i1 %31, label %32, label %37, !dbg !8749

32:                                               ; preds = %27
  %33 = shl nuw i32 1, %28, !dbg !8750
  %34 = xor i32 %33, -1, !dbg !8750
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8750
  %36 = and i32 %35, %34, !dbg !8750
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !8750
  br label %37, !dbg !8750

37:                                               ; preds = %22, %27, %32
  %38 = load i32, i32* %17, align 4, !dbg !8752
  store i32 %38, i32* %14, align 4, !dbg !8753
  %39 = sub i32 20, %38, !dbg !8754
  %40 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8754
  %41 = bitcast i8* %40 to i32*, !dbg !8754
  store i32 %39, i32* %41, align 4, !dbg !8754
  %42 = shl nuw i32 1, %38, !dbg !8755
  %43 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8755
  %44 = or i32 %43, %42, !dbg !8755
  store volatile i32 %44, i32* @uxTopReadyPriority, align 4, !dbg !8755
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %38, !dbg !8755
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %45, %struct.xLIST_ITEM* noundef nonnull %24) #20, !dbg !8755
  call void @llvm.dbg.value(metadata i32 1, metadata !8720, metadata !DIExpression()), !dbg !8721
  br label %46, !dbg !8756

46:                                               ; preds = %1, %37, %10
  %47 = phi i32 [ 1, %37 ], [ 0, %10 ], [ 0, %1 ], !dbg !8721
  call void @llvm.dbg.value(metadata i32 %47, metadata !8720, metadata !DIExpression()), !dbg !8721
  ret i32 %47, !dbg !8757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskList(i8* noundef %0) local_unnamed_addr #0 !dbg !8758 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8762, metadata !DIExpression()), !dbg !8767
  %4 = bitcast i32* %2 to i8*, !dbg !8768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !8768
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8764, metadata !DIExpression()), !dbg !8769
  %5 = bitcast i32* %3 to i8*, !dbg !8768
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !8768
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8765, metadata !DIExpression()), !dbg !8770
  store i8 0, i8* %0, align 1, !dbg !8771
  %6 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8772
  store volatile i32 %6, i32* %2, align 4, !dbg !8773
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8774
  %8 = shl i32 %7, 5, !dbg !8775
  %9 = tail call i8* @pvPortMalloc(i32 noundef %8) #20, !dbg !8776
  %10 = bitcast i8* %9 to %struct.xTASK_STATUS*, !dbg !8776
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %10, metadata !8763, metadata !DIExpression()), !dbg !8767
  %11 = icmp eq i8* %9, null, !dbg !8777
  br i1 %11, label %53, label %12, !dbg !8779

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %2, align 4, !dbg !8780
  %14 = tail call i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* noundef nonnull %10, i32 noundef %13, i32* noundef null) #22, !dbg !8782
  store volatile i32 %14, i32* %2, align 4, !dbg !8783
  store volatile i32 0, i32* %3, align 4, !dbg !8784
  call void @llvm.dbg.value(metadata i8* %0, metadata !8762, metadata !DIExpression()), !dbg !8767
  %15 = load volatile i32, i32* %3, align 4, !dbg !8786
  %16 = load volatile i32, i32* %2, align 4, !dbg !8788
  %17 = icmp ult i32 %15, %16, !dbg !8789
  br i1 %17, label %18, label %52, !dbg !8790

18:                                               ; preds = %12, %28
  %19 = phi i8* [ %46, %28 ], [ %0, %12 ]
  call void @llvm.dbg.value(metadata i8* %19, metadata !8762, metadata !DIExpression()), !dbg !8767
  %20 = load volatile i32, i32* %3, align 4, !dbg !8791
  %21 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %20, i32 3, !dbg !8793
  %22 = load i32, i32* %21, align 4, !dbg !8793
  %23 = add i32 %22, -1, !dbg !8794
  %24 = icmp ult i32 %23, 4, !dbg !8794
  br i1 %24, label %25, label %28, !dbg !8794

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.vTaskList, i32 0, i32 %23, !dbg !8794
  %27 = load i32, i32* %26, align 4, !dbg !8794
  br label %28, !dbg !8794

28:                                               ; preds = %18, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !8766, metadata !DIExpression()), !dbg !8767
  %30 = load volatile i32, i32* %3, align 4, !dbg !8795
  %31 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %30, i32 1, !dbg !8796
  %32 = load i8*, i8** %31, align 4, !dbg !8796
  %33 = tail call fastcc i8* @prvWriteNameToBuffer(i8* noundef %19, i8* noundef %32) #22, !dbg !8797
  call void @llvm.dbg.value(metadata i8* %33, metadata !8762, metadata !DIExpression()), !dbg !8767
  %34 = load volatile i32, i32* %3, align 4, !dbg !8798
  %35 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %34, i32 4, !dbg !8799
  %36 = load i32, i32* %35, align 4, !dbg !8799
  %37 = load volatile i32, i32* %3, align 4, !dbg !8800
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %37, i32 7, !dbg !8801
  %39 = load i16, i16* %38, align 4, !dbg !8801
  %40 = zext i16 %39 to i32, !dbg !8802
  %41 = load volatile i32, i32* %3, align 4, !dbg !8803
  %42 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %41, i32 2, !dbg !8804
  %43 = load i32, i32* %42, align 4, !dbg !8804
  %44 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %33, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 noundef %29, i32 noundef %36, i32 noundef %40, i32 noundef %43) #20, !dbg !8805
  %45 = tail call i32 @strlen(i8* noundef %33) #20, !dbg !8806
  %46 = getelementptr inbounds i8, i8* %33, i32 %45, !dbg !8807
  call void @llvm.dbg.value(metadata i8* %46, metadata !8762, metadata !DIExpression()), !dbg !8767
  %47 = load volatile i32, i32* %3, align 4, !dbg !8808
  %48 = add i32 %47, 1, !dbg !8808
  store volatile i32 %48, i32* %3, align 4, !dbg !8808
  %49 = load volatile i32, i32* %3, align 4, !dbg !8786
  %50 = load volatile i32, i32* %2, align 4, !dbg !8788
  %51 = icmp ult i32 %49, %50, !dbg !8789
  br i1 %51, label %18, label %52, !dbg !8790, !llvm.loop !8809

52:                                               ; preds = %28, %12
  tail call void @vPortFree(i8* noundef nonnull %9) #20, !dbg !8811
  br label %53, !dbg !8812

53:                                               ; preds = %1, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !8813
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !8813
  ret void, !dbg !8813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prvWriteNameToBuffer(i8* noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !8814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8818, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i8* %1, metadata !8819, metadata !DIExpression()), !dbg !8821
  %3 = tail call i8* @strcpy(i8* noundef %0, i8* noundef %1) #20, !dbg !8822
  %4 = tail call i32 @strlen(i8* noundef %0) #20, !dbg !8823
  call void @llvm.dbg.value(metadata i32 %4, metadata !8820, metadata !DIExpression()), !dbg !8821
  %5 = icmp slt i32 %4, 5, !dbg !8825
  br i1 %5, label %6, label %11, !dbg !8827

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %9, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8820, metadata !DIExpression()), !dbg !8821
  %8 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !8828
  store i8 32, i8* %8, align 1, !dbg !8830
  %9 = add i32 %7, 1, !dbg !8831
  call void @llvm.dbg.value(metadata i32 %9, metadata !8820, metadata !DIExpression()), !dbg !8821
  %10 = icmp eq i32 %9, 5, !dbg !8825
  br i1 %10, label %11, label %6, !dbg !8827, !llvm.loop !8832

11:                                               ; preds = %6, %2
  %12 = phi i32 [ %4, %2 ], [ 5, %6 ], !dbg !8834
  %13 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8835
  store i8 0, i8* %13, align 1, !dbg !8836
  ret i8* %13, !dbg !8837
}

; Function Attrs: optsize
declare dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @strlen(i8* noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i8* @strcpy(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #8 !dbg !8838 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8841
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !8841
  %3 = load i32, i32* %2, align 4, !dbg !8841
  call void @llvm.dbg.value(metadata i32 %3, metadata !8840, metadata !DIExpression()), !dbg !8842
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8843
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !8843
  %6 = load i32, i32* %5, align 4, !dbg !8843
  %7 = sub i32 20, %6, !dbg !8843
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8843
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !8843
  store i32 %7, i32* %9, align 4, !dbg !8843
  ret i32 %3, !dbg !8844
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #8 !dbg !8845 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8847
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !8849
  br i1 %2, label %8, label %3, !dbg !8850

3:                                                ; preds = %0
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8851
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 9, !dbg !8853
  %6 = load i32, i32* %5, align 4, !dbg !8854
  %7 = add i32 %6, 1, !dbg !8854
  store i32 %7, i32* %5, align 4, !dbg !8854
  br label %8, !dbg !8855

8:                                                ; preds = %3, %0
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8856
  %10 = bitcast %struct.tskTaskControlBlock* %9 to i8*, !dbg !8856
  ret i8* %10, !dbg !8857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8862, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i32 %1, metadata !8863, metadata !DIExpression()), !dbg !8866
  tail call void @vPortEnterCritical() #20, !dbg !8867
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8868
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, !dbg !8871
  %5 = load volatile i32, i32* %4, align 4, !dbg !8871
  %6 = icmp eq i32 %5, 0, !dbg !8872
  br i1 %6, label %7, label %33, !dbg !8873

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8874
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, !dbg !8876
  store volatile i32 1, i32* %9, align 4, !dbg !8877
  %10 = icmp eq i32 %1, 0, !dbg !8878
  br i1 %10, label %33, label %11, !dbg !8880

11:                                               ; preds = %7
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8881
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !8884
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !8885
  %15 = icmp eq i32 %14, 0, !dbg !8886
  br i1 %15, label %16, label %24, !dbg !8887

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8888
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !8888
  %19 = load i32, i32* %18, align 4, !dbg !8888
  %20 = shl nuw i32 1, %19, !dbg !8888
  %21 = xor i32 %20, -1, !dbg !8888
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8888
  %23 = and i32 %22, %21, !dbg !8888
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !8888
  br label %24, !dbg !8890

24:                                               ; preds = %11, %16
  %25 = icmp eq i32 %1, -1, !dbg !8891
  br i1 %25, label %26, label %29, !dbg !8894

26:                                               ; preds = %24
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8895
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 1, !dbg !8897
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !8898
  br label %32, !dbg !8899

29:                                               ; preds = %24
  %30 = load volatile i32, i32* @xTickCount, align 4, !dbg !8900
  %31 = add i32 %30, %1, !dbg !8902
  call void @llvm.dbg.value(metadata i32 %31, metadata !8864, metadata !DIExpression()), !dbg !8866
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %31) #22, !dbg !8903
  br label %32

32:                                               ; preds = %29, %26
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8904
  tail call void asm sideeffect "dsb", ""() #19, !dbg !8904, !srcloc !8906
  tail call void asm sideeffect "isb", ""() #19, !dbg !8904, !srcloc !8907
  br label %33, !dbg !8908

33:                                               ; preds = %2, %32, %7
  tail call void @vPortExitCritical() #20, !dbg !8909
  tail call void @vPortEnterCritical() #20, !dbg !8910
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8911
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 10, !dbg !8913
  %36 = load volatile i32, i32* %35, align 4, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %36, metadata !8865, metadata !DIExpression()), !dbg !8866
  %37 = icmp eq i32 %36, 0, !dbg !8914
  br i1 %37, label %47, label %38, !dbg !8916

38:                                               ; preds = %33
  %39 = icmp eq i32 %0, 0, !dbg !8917
  %40 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8920
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %40, i32 0, i32 10, !dbg !8920
  br i1 %39, label %42, label %45, !dbg !8921

42:                                               ; preds = %38
  %43 = load volatile i32, i32* %41, align 4, !dbg !8922
  %44 = add i32 %43, -1, !dbg !8922
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %38 ]
  store volatile i32 %46, i32* %41, align 4, !dbg !8920
  br label %47, !dbg !8924

47:                                               ; preds = %45, %33
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8924
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 11, !dbg !8925
  store volatile i32 0, i32* %49, align 4, !dbg !8926
  tail call void @vPortExitCritical() #20, !dbg !8927
  ret i32 %36, !dbg !8928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8933, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 %1, metadata !8934, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32* %2, metadata !8935, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 %3, metadata !8936, metadata !DIExpression()), !dbg !8939
  tail call void @vPortEnterCritical() #20, !dbg !8940
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8941
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, !dbg !8944
  %7 = load volatile i32, i32* %6, align 4, !dbg !8944
  %8 = icmp eq i32 %7, 2, !dbg !8945
  br i1 %8, label %40, label %9, !dbg !8946

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !8947
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8949
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 10, !dbg !8950
  %13 = load volatile i32, i32* %12, align 4, !dbg !8951
  %14 = and i32 %13, %10, !dbg !8951
  store volatile i32 %14, i32* %12, align 4, !dbg !8951
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8952
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 11, !dbg !8953
  store volatile i32 1, i32* %16, align 4, !dbg !8954
  %17 = icmp eq i32 %3, 0, !dbg !8955
  br i1 %17, label %40, label %18, !dbg !8957

18:                                               ; preds = %9
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8958
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !8961
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #20, !dbg !8962
  %22 = icmp eq i32 %21, 0, !dbg !8963
  br i1 %22, label %23, label %31, !dbg !8964

23:                                               ; preds = %18
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8965
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 3, !dbg !8965
  %26 = load i32, i32* %25, align 4, !dbg !8965
  %27 = shl nuw i32 1, %26, !dbg !8965
  %28 = xor i32 %27, -1, !dbg !8965
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8965
  %30 = and i32 %29, %28, !dbg !8965
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !8965
  br label %31, !dbg !8967

31:                                               ; preds = %18, %23
  %32 = icmp eq i32 %3, -1, !dbg !8968
  br i1 %32, label %33, label %36, !dbg !8971

33:                                               ; preds = %31
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8972
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !8974
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %35) #20, !dbg !8975
  br label %39, !dbg !8976

36:                                               ; preds = %31
  %37 = load volatile i32, i32* @xTickCount, align 4, !dbg !8977
  %38 = add i32 %37, %3, !dbg !8979
  call void @llvm.dbg.value(metadata i32 %38, metadata !8937, metadata !DIExpression()), !dbg !8939
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %38) #22, !dbg !8980
  br label %39

39:                                               ; preds = %36, %33
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8981
  tail call void asm sideeffect "dsb", ""() #19, !dbg !8981, !srcloc !8983
  tail call void asm sideeffect "isb", ""() #19, !dbg !8981, !srcloc !8984
  br label %40, !dbg !8985

40:                                               ; preds = %4, %39, %9
  tail call void @vPortExitCritical() #20, !dbg !8986
  tail call void @vPortEnterCritical() #20, !dbg !8987
  %41 = icmp eq i32* %2, null, !dbg !8988
  br i1 %41, label %46, label %42, !dbg !8991

42:                                               ; preds = %40
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8992
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %43, i32 0, i32 10, !dbg !8994
  %45 = load volatile i32, i32* %44, align 4, !dbg !8994
  store i32 %45, i32* %2, align 4, !dbg !8995
  br label %46, !dbg !8996

46:                                               ; preds = %42, %40
  %47 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8997
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %47, i32 0, i32 11, !dbg !8999
  %49 = load volatile i32, i32* %48, align 4, !dbg !8999
  %50 = icmp eq i32 %49, 1, !dbg !9000
  br i1 %50, label %57, label %51, !dbg !9001

51:                                               ; preds = %46
  %52 = xor i32 %1, -1, !dbg !9002
  %53 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9004
  %54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %53, i32 0, i32 10, !dbg !9005
  %55 = load volatile i32, i32* %54, align 4, !dbg !9006
  %56 = and i32 %55, %52, !dbg !9006
  store volatile i32 %56, i32* %54, align 4, !dbg !9006
  call void @llvm.dbg.value(metadata i32 1, metadata !8938, metadata !DIExpression()), !dbg !8939
  br label %57

57:                                               ; preds = %46, %51
  %58 = phi i32 [ 1, %51 ], [ 0, %46 ], !dbg !9007
  call void @llvm.dbg.value(metadata i32 %58, metadata !8938, metadata !DIExpression()), !dbg !8939
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9008
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 11, !dbg !9009
  store volatile i32 0, i32* %60, align 4, !dbg !9010
  tail call void @vPortExitCritical() #20, !dbg !9011
  ret i32 %58, !dbg !9012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9018, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i32 %1, metadata !9019, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i32 %2, metadata !9020, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i32 1, metadata !9023, metadata !DIExpression()), !dbg !9024
  %4 = icmp eq i8* %0, null, !dbg !9025
  br i1 %4, label %5, label %6, !dbg !9027

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4049) #20, !dbg !9028
  br label %6, !dbg !9028

6:                                                ; preds = %5, %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9021, metadata !DIExpression()), !dbg !9024
  tail call void @vPortEnterCritical() #20, !dbg !9030
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9031
  %8 = bitcast i8* %7 to i32*, !dbg !9031
  %9 = load volatile i32, i32* %8, align 4, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %9, metadata !9022, metadata !DIExpression()), !dbg !9024
  store volatile i32 2, i32* %8, align 4, !dbg !9033
  switch i32 %2, label %28 [
    i32 1, label %10
    i32 2, label %15
    i32 3, label %20
    i32 4, label %23
  ], !dbg !9034

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %0, metadata !9021, metadata !DIExpression()), !dbg !9024
  %11 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9035
  %12 = bitcast i8* %11 to i32*, !dbg !9035
  %13 = load volatile i32, i32* %12, align 4, !dbg !9037
  %14 = or i32 %13, %1, !dbg !9037
  store volatile i32 %14, i32* %12, align 4, !dbg !9037
  br label %28, !dbg !9038

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9039
  %17 = bitcast i8* %16 to i32*, !dbg !9039
  %18 = load volatile i32, i32* %17, align 4, !dbg !9040
  %19 = add i32 %18, 1, !dbg !9040
  store volatile i32 %19, i32* %17, align 4, !dbg !9040
  br label %28, !dbg !9041

20:                                               ; preds = %6
  %21 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9042
  %22 = bitcast i8* %21 to i32*, !dbg !9042
  store volatile i32 %1, i32* %22, align 4, !dbg !9043
  br label %28, !dbg !9044

23:                                               ; preds = %6
  %24 = icmp eq i32 %9, 2, !dbg !9045
  br i1 %24, label %53, label %25, !dbg !9047

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9048
  %27 = bitcast i8* %26 to i32*, !dbg !9048
  store volatile i32 %1, i32* %27, align 4, !dbg !9050
  br label %28, !dbg !9051

28:                                               ; preds = %25, %6, %20, %15, %10
  call void @llvm.dbg.value(metadata i32 1, metadata !9023, metadata !DIExpression()), !dbg !9024
  %29 = icmp eq i32 %9, 1, !dbg !9052
  br i1 %29, label %30, label %53, !dbg !9054

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9055
  %32 = bitcast i8* %31 to %struct.xLIST_ITEM*, !dbg !9055
  %33 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %32) #20, !dbg !9057
  %34 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9058
  %35 = bitcast i8* %34 to i32*, !dbg !9058
  %36 = load i32, i32* %35, align 4, !dbg !9058
  %37 = shl nuw i32 1, %36, !dbg !9058
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9058
  %39 = or i32 %38, %37, !dbg !9058
  store volatile i32 %39, i32* @uxTopReadyPriority, align 4, !dbg !9058
  %40 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %36, !dbg !9058
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %40, %struct.xLIST_ITEM* noundef nonnull %32) #20, !dbg !9058
  %41 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9059
  %42 = bitcast i8* %41 to i8**, !dbg !9059
  %43 = load i8*, i8** %42, align 4, !dbg !9059
  %44 = icmp eq i8* %43, null, !dbg !9059
  br i1 %44, label %46, label %45, !dbg !9061

45:                                               ; preds = %30
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4099) #20, !dbg !9062
  br label %46, !dbg !9062

46:                                               ; preds = %45, %30
  %47 = load i32, i32* %35, align 4, !dbg !9064
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9066
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 3, !dbg !9067
  %50 = load i32, i32* %49, align 4, !dbg !9067
  %51 = icmp ugt i32 %47, %50, !dbg !9068
  br i1 %51, label %52, label %53, !dbg !9069

52:                                               ; preds = %46
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9070
  tail call void asm sideeffect "dsb", ""() #19, !dbg !9070, !srcloc !9073
  tail call void asm sideeffect "isb", ""() #19, !dbg !9070, !srcloc !9074
  br label %53, !dbg !9075

53:                                               ; preds = %23, %28, %52, %46
  %54 = phi i32 [ 1, %28 ], [ 1, %52 ], [ 1, %46 ], [ 0, %23 ]
  tail call void @vPortExitCritical() #20, !dbg !9076
  ret i32 %54, !dbg !9077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #0 !dbg !9078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9082, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32 %1, metadata !9083, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32 %2, metadata !9084, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32* %3, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32 1, metadata !9088, metadata !DIExpression()), !dbg !9090
  %5 = icmp eq i8* %0, null, !dbg !9091
  br i1 %5, label %6, label %7, !dbg !9093

6:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4134) #20, !dbg !9094
  br label %7, !dbg !9094

7:                                                ; preds = %6, %4
  tail call void @vPortValidateInterruptPriority() #20, !dbg !9096
  call void @llvm.dbg.value(metadata i8* %0, metadata !9086, metadata !DIExpression()), !dbg !9090
  %8 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !9097, !srcloc !7715
  call void @llvm.dbg.value(metadata i32 undef, metadata !7712, metadata !DIExpression()) #19, !dbg !9099
  call void @llvm.dbg.value(metadata i32 undef, metadata !7713, metadata !DIExpression()) #19, !dbg !9099
  call void @llvm.dbg.value(metadata i32 undef, metadata !9089, metadata !DIExpression()), !dbg !9090
  %9 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9100
  %10 = bitcast i8* %9 to i32*, !dbg !9100
  %11 = load volatile i32, i32* %10, align 4, !dbg !9100
  call void @llvm.dbg.value(metadata i32 %11, metadata !9087, metadata !DIExpression()), !dbg !9090
  store volatile i32 2, i32* %10, align 4, !dbg !9102
  switch i32 %2, label %30 [
    i32 1, label %12
    i32 2, label %17
    i32 3, label %22
    i32 4, label %25
  ], !dbg !9103

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !9086, metadata !DIExpression()), !dbg !9090
  %13 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9104
  %14 = bitcast i8* %13 to i32*, !dbg !9104
  %15 = load volatile i32, i32* %14, align 4, !dbg !9106
  %16 = or i32 %15, %1, !dbg !9106
  store volatile i32 %16, i32* %14, align 4, !dbg !9106
  br label %30, !dbg !9107

17:                                               ; preds = %7
  %18 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9108
  %19 = bitcast i8* %18 to i32*, !dbg !9108
  %20 = load volatile i32, i32* %19, align 4, !dbg !9109
  %21 = add i32 %20, 1, !dbg !9109
  store volatile i32 %21, i32* %19, align 4, !dbg !9109
  br label %30, !dbg !9110

22:                                               ; preds = %7
  %23 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9111
  %24 = bitcast i8* %23 to i32*, !dbg !9111
  store volatile i32 %1, i32* %24, align 4, !dbg !9112
  br label %30, !dbg !9113

25:                                               ; preds = %7
  %26 = icmp eq i32 %11, 2, !dbg !9114
  br i1 %26, label %66, label %27, !dbg !9116

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9117
  %29 = bitcast i8* %28 to i32*, !dbg !9117
  store volatile i32 %1, i32* %29, align 4, !dbg !9119
  br label %30, !dbg !9120

30:                                               ; preds = %27, %7, %22, %17, %12
  call void @llvm.dbg.value(metadata i32 1, metadata !9088, metadata !DIExpression()), !dbg !9090
  %31 = icmp eq i32 %11, 1, !dbg !9121
  br i1 %31, label %32, label %66, !dbg !9123

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9124
  %34 = bitcast i8* %33 to %struct.xLIST_ITEM*, !dbg !9124
  %35 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9124
  %36 = bitcast i8* %35 to i8**, !dbg !9124
  %37 = load i8*, i8** %36, align 4, !dbg !9124
  %38 = icmp eq i8* %37, null, !dbg !9124
  br i1 %38, label %40, label %39, !dbg !9127

39:                                               ; preds = %32
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4200) #20, !dbg !9128
  br label %40, !dbg !9128

40:                                               ; preds = %39, %32
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9130
  %42 = icmp eq i32 %41, 0, !dbg !9132
  br i1 %42, label %43, label %54, !dbg !9133

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9134
  %45 = bitcast i8* %44 to %struct.xLIST_ITEM*, !dbg !9134
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #20, !dbg !9136
  %47 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9137
  %48 = bitcast i8* %47 to i32*, !dbg !9137
  %49 = load i32, i32* %48, align 4, !dbg !9137
  %50 = shl nuw i32 1, %49, !dbg !9137
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9137
  %52 = or i32 %51, %50, !dbg !9137
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !9137
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !9137
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %45) #20, !dbg !9137
  br label %55, !dbg !9138

54:                                               ; preds = %40
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %34) #20, !dbg !9139
  br label %55

55:                                               ; preds = %54, %43
  %56 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9141
  %57 = bitcast i8* %56 to i32*, !dbg !9141
  %58 = load i32, i32* %57, align 4, !dbg !9141
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9143
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 3, !dbg !9144
  %61 = load i32, i32* %60, align 4, !dbg !9144
  %62 = icmp ugt i32 %58, %61, !dbg !9145
  %63 = icmp ne i32* %3, null
  %64 = and i1 %63, %62, !dbg !9146
  br i1 %64, label %65, label %66, !dbg !9146

65:                                               ; preds = %55
  store i32 1, i32* %3, align 4, !dbg !9147
  br label %66, !dbg !9151

66:                                               ; preds = %25, %65, %55, %30
  %67 = phi i32 [ 1, %65 ], [ 1, %55 ], [ 1, %30 ], [ 0, %25 ]
  %68 = extractvalue { i32, i32 } %8, 0, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %68, metadata !7712, metadata !DIExpression()) #19, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %68, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32 undef, metadata !7720, metadata !DIExpression()) #19, !dbg !9152
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %68) #19, !dbg !9154, !srcloc !7726
  ret i32 %67, !dbg !9155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !9156 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9160, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i32* %1, metadata !9161, metadata !DIExpression()), !dbg !9165
  %3 = icmp eq i8* %0, null, !dbg !9166
  br i1 %3, label %4, label %5, !dbg !9168

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4245) #20, !dbg !9169
  br label %5, !dbg !9169

5:                                                ; preds = %4, %2
  tail call void @vPortValidateInterruptPriority() #20, !dbg !9171
  call void @llvm.dbg.value(metadata i8* %0, metadata !9162, metadata !DIExpression()), !dbg !9165
  %6 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !9172, !srcloc !7715
  call void @llvm.dbg.value(metadata i32 undef, metadata !7712, metadata !DIExpression()) #19, !dbg !9174
  call void @llvm.dbg.value(metadata i32 undef, metadata !7713, metadata !DIExpression()) #19, !dbg !9174
  call void @llvm.dbg.value(metadata i32 undef, metadata !9164, metadata !DIExpression()), !dbg !9165
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9175
  %8 = bitcast i8* %7 to i32*, !dbg !9175
  %9 = load volatile i32, i32* %8, align 4, !dbg !9175
  call void @llvm.dbg.value(metadata i32 %9, metadata !9163, metadata !DIExpression()), !dbg !9165
  store volatile i32 2, i32* %8, align 4, !dbg !9177
  %10 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9178
  %11 = bitcast i8* %10 to i32*, !dbg !9178
  %12 = load volatile i32, i32* %11, align 4, !dbg !9179
  %13 = add i32 %12, 1, !dbg !9179
  store volatile i32 %13, i32* %11, align 4, !dbg !9179
  %14 = icmp eq i32 %9, 1, !dbg !9180
  br i1 %14, label %15, label %49, !dbg !9182

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9183
  %17 = bitcast i8* %16 to %struct.xLIST_ITEM*, !dbg !9183
  %18 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9183
  %19 = bitcast i8* %18 to i8**, !dbg !9183
  %20 = load i8*, i8** %19, align 4, !dbg !9183
  %21 = icmp eq i8* %20, null, !dbg !9183
  br i1 %21, label %23, label %22, !dbg !9186

22:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4281) #20, !dbg !9187
  br label %23, !dbg !9187

23:                                               ; preds = %22, %15
  %24 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9189
  %25 = icmp eq i32 %24, 0, !dbg !9191
  br i1 %25, label %26, label %37, !dbg !9192

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9193
  %28 = bitcast i8* %27 to %struct.xLIST_ITEM*, !dbg !9193
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !9195
  %30 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9196
  %31 = bitcast i8* %30 to i32*, !dbg !9196
  %32 = load i32, i32* %31, align 4, !dbg !9196
  %33 = shl nuw i32 1, %32, !dbg !9196
  %34 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9196
  %35 = or i32 %34, %33, !dbg !9196
  store volatile i32 %35, i32* @uxTopReadyPriority, align 4, !dbg !9196
  %36 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !9196
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %36, %struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !9196
  br label %38, !dbg !9197

37:                                               ; preds = %23
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %17) #20, !dbg !9198
  br label %38

38:                                               ; preds = %37, %26
  %39 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9200
  %40 = bitcast i8* %39 to i32*, !dbg !9200
  %41 = load i32, i32* %40, align 4, !dbg !9200
  %42 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9202
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %42, i32 0, i32 3, !dbg !9203
  %44 = load i32, i32* %43, align 4, !dbg !9203
  %45 = icmp ugt i32 %41, %44, !dbg !9204
  %46 = icmp ne i32* %1, null
  %47 = and i1 %46, %45, !dbg !9205
  br i1 %47, label %48, label %49, !dbg !9205

48:                                               ; preds = %38
  store i32 1, i32* %1, align 4, !dbg !9206
  br label %49, !dbg !9210

49:                                               ; preds = %48, %38, %5
  %50 = extractvalue { i32, i32 } %6, 0, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %50, metadata !7712, metadata !DIExpression()) #19, !dbg !9174
  call void @llvm.dbg.value(metadata i32 %50, metadata !9164, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i32 undef, metadata !7720, metadata !DIExpression()) #19, !dbg !9211
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %50) #19, !dbg !9213, !srcloc !7726
  ret void, !dbg !9214
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetBottomOfStack(i8* noundef readonly %0) local_unnamed_addr #8 !dbg !9215 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9217, metadata !DIExpression()), !dbg !9219
  %2 = icmp eq i8* %0, null, !dbg !9220
  br i1 %2, label %3, label %5, !dbg !9221

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9222
  br label %7, !dbg !9221

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !9223
  br label %7, !dbg !9221

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !9221
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !9218, metadata !DIExpression()), !dbg !9219
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !9224
  %10 = load i32*, i32** %9, align 4, !dbg !9224
  %11 = ptrtoint i32* %10 to i32, !dbg !9225
  ret i32 %11, !dbg !9226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #4 !dbg !9227 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9232, metadata !DIExpression()), !dbg !9233
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !9234
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !9235
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !9236
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !9236
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !9237
  store i32 -1, i32* %5, align 4, !dbg !9238
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !9239
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !9240
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !9240
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !9241
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !9242
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !9242
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9243
  store i32 0, i32* %10, align 4, !dbg !9244
  ret void, !dbg !9245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !9246 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !9251, metadata !DIExpression()), !dbg !9252
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !9253
  store i8* null, i8** %2, align 4, !dbg !9254
  ret void, !dbg !9255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #14 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9260, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !9261, metadata !DIExpression()), !dbg !9263
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !9264
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !9264
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !9262, metadata !DIExpression()), !dbg !9263
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !9265
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !9266
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !9267
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !9267
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !9268
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !9269
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !9270
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !9271
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !9272
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !9273
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !9274
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !9275
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !9275
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9276
  %14 = load i32, i32* %13, align 4, !dbg !9277
  %15 = add i32 %14, 1, !dbg !9277
  store i32 %15, i32* %13, align 4, !dbg !9277
  ret void, !dbg !9278
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #15 !dbg !9279 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9281, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !9282, metadata !DIExpression()), !dbg !9285
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !9286
  %4 = load i32, i32* %3, align 4, !dbg !9286
  call void @llvm.dbg.value(metadata i32 %4, metadata !9284, metadata !DIExpression()), !dbg !9285
  %5 = icmp eq i32 %4, -1, !dbg !9287
  br i1 %5, label %6, label %11, !dbg !9289

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !9290
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9290
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !9283, metadata !DIExpression()), !dbg !9285
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %9, align 4, !dbg !9292
  br label %21, !dbg !9293

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !9294
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !9297
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !9283, metadata !DIExpression()), !dbg !9285
  br label %14, !dbg !9298

14:                                               ; preds = %14, %11
  %15 = phi %struct.xLIST_ITEM* [ %13, %11 ], [ %17, %14 ], !dbg !9299
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %15, metadata !9283, metadata !DIExpression()), !dbg !9285
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 1, !dbg !9300
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !9300
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 0, !dbg !9302
  %19 = load i32, i32* %18, align 4, !dbg !9302
  %20 = icmp ugt i32 %19, %4, !dbg !9303
  br i1 %20, label %21, label %14, !dbg !9304, !llvm.loop !9305

21:                                               ; preds = %14, %6
  %22 = phi %struct.xLIST_ITEM* [ %10, %6 ], [ %17, %14 ], !dbg !9292
  %23 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %15, %14 ], !dbg !9307
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %23, metadata !9283, metadata !DIExpression()), !dbg !9285
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %23, i32 0, i32 1, !dbg !9292
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !9308
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %25, align 4, !dbg !9309
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !9310
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %26, align 4, !dbg !9311
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !9312
  store %struct.xLIST_ITEM* %23, %struct.xLIST_ITEM** %27, align 4, !dbg !9313
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !9314
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !9315
  %29 = bitcast i8** %28 to %struct.xLIST**, !dbg !9316
  store %struct.xLIST* %0, %struct.xLIST** %29, align 4, !dbg !9316
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9317
  %31 = load i32, i32* %30, align 4, !dbg !9318
  %32 = add i32 %31, 1, !dbg !9318
  store i32 %32, i32* %30, align 4, !dbg !9318
  ret void, !dbg !9319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #14 !dbg !9320 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !9324, metadata !DIExpression()), !dbg !9326
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !9327
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !9327
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !9327
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !9325, metadata !DIExpression()), !dbg !9326
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !9328
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9328
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !9329
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9329
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !9330
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !9331
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9332
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9333
  %12 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !9334
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !9335
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !9336
  %14 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %13, align 4, !dbg !9336
  %15 = icmp eq %struct.xLIST_ITEM* %14, %0, !dbg !9338
  br i1 %15, label %16, label %18, !dbg !9339

16:                                               ; preds = %1
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9340
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %13, align 4, !dbg !9342
  br label %18, !dbg !9343

18:                                               ; preds = %1, %16
  store i8* null, i8** %2, align 4, !dbg !9344
  %19 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !9345
  %20 = load i32, i32* %19, align 4, !dbg !9346
  %21 = add i32 %20, -1, !dbg !9346
  store i32 %21, i32* %19, align 4, !dbg !9346
  ret i32 %21, !dbg !9347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReset(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9352, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 %1, metadata !9353, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i8* %0, metadata !9354, metadata !DIExpression()), !dbg !9356
  %3 = icmp eq i8* %0, null, !dbg !9357
  br i1 %3, label %4, label %5, !dbg !9359

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 264) #20, !dbg !9360
  br label %5, !dbg !9360

5:                                                ; preds = %4, %2
  tail call void @vPortEnterCritical() #20, !dbg !9362
  %6 = bitcast i8* %0 to i8**, !dbg !9363
  %7 = load i8*, i8** %6, align 4, !dbg !9363
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9365
  %9 = bitcast i8* %8 to i32*, !dbg !9365
  %10 = load i32, i32* %9, align 4, !dbg !9365
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9366
  %12 = bitcast i8* %11 to i32*, !dbg !9366
  %13 = load i32, i32* %12, align 4, !dbg !9366
  %14 = mul i32 %13, %10, !dbg !9367
  %15 = getelementptr inbounds i8, i8* %7, i32 %14, !dbg !9368
  %16 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9369
  %17 = bitcast i8* %16 to i8**, !dbg !9369
  store i8* %15, i8** %17, align 4, !dbg !9370
  %18 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !9371
  %19 = bitcast i8* %18 to i32*, !dbg !9371
  store volatile i32 0, i32* %19, align 4, !dbg !9372
  %20 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !9373
  %21 = bitcast i8* %20 to i8**, !dbg !9373
  store i8* %7, i8** %21, align 4, !dbg !9374
  %22 = add i32 %10, -1, !dbg !9375
  %23 = mul i32 %22, %13, !dbg !9376
  %24 = getelementptr inbounds i8, i8* %7, i32 %23, !dbg !9377
  %25 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !9378
  %26 = bitcast i8* %25 to i8**, !dbg !9379
  store i8* %24, i8** %26, align 4, !dbg !9380
  %27 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !9381
  %28 = bitcast i8* %27 to i32*, !dbg !9381
  store volatile i32 -1, i32* %28, align 4, !dbg !9382
  %29 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !9383
  %30 = bitcast i8* %29 to i32*, !dbg !9383
  store volatile i32 -1, i32* %30, align 4, !dbg !9384
  %31 = icmp eq i32 %1, 0, !dbg !9385
  %32 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !9387
  br i1 %31, label %33, label %42, !dbg !9388

33:                                               ; preds = %5
  %34 = bitcast i8* %32 to i32*, !dbg !9389
  %35 = load i32, i32* %34, align 4, !dbg !9389
  %36 = icmp eq i32 %35, 0, !dbg !9389
  br i1 %36, label %46, label %37, !dbg !9392

37:                                               ; preds = %33
  %38 = bitcast i8* %32 to %struct.xLIST*, !dbg !9389
  %39 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %38) #20, !dbg !9393
  %40 = icmp eq i32 %39, 1, !dbg !9396
  br i1 %40, label %41, label %46, !dbg !9397

41:                                               ; preds = %37
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9398
  tail call void asm sideeffect "dsb", ""() #19, !dbg !9398, !srcloc !9401
  tail call void asm sideeffect "isb", ""() #19, !dbg !9398, !srcloc !9402
  br label %46, !dbg !9403

42:                                               ; preds = %5
  %43 = bitcast i8* %32 to %struct.xLIST*, !dbg !9404
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %43) #20, !dbg !9406
  %44 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !9407
  %45 = bitcast i8* %44 to %struct.xLIST*, !dbg !9407
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %45) #20, !dbg !9408
  br label %46

46:                                               ; preds = %37, %41, %33, %42
  tail call void @vPortExitCritical() #20, !dbg !9409
  ret i32 1, !dbg !9410
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !9411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i32 %1, metadata !9416, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i8 %2, metadata !9417, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i8* null, metadata !9420, metadata !DIExpression()), !dbg !9422
  %4 = icmp eq i32 %0, 0, !dbg !9423
  br i1 %4, label %5, label %6, !dbg !9425

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.133, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 324) #20, !dbg !9426
  br label %6, !dbg !9426

6:                                                ; preds = %5, %3
  %7 = icmp eq i32 %1, 0, !dbg !9428
  %8 = mul i32 %1, %0, !dbg !9430
  %9 = add i32 %8, 85, !dbg !9430
  %10 = select i1 %7, i32 84, i32 %9, !dbg !9430
  call void @llvm.dbg.value(metadata i32 undef, metadata !9419, metadata !DIExpression()), !dbg !9422
  %11 = tail call i8* @pvPortMalloc(i32 noundef %10) #20, !dbg !9431
  call void @llvm.dbg.value(metadata i8* %11, metadata !9421, metadata !DIExpression()), !dbg !9422
  %12 = icmp eq i8* %11, null, !dbg !9432
  br i1 %12, label %23, label %13, !dbg !9434

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !9418, metadata !DIExpression()), !dbg !9422
  %14 = select i1 %7, i32 0, i32 84, !dbg !9435
  %15 = getelementptr i8, i8* %11, i32 %14, !dbg !9435
  %16 = bitcast i8* %11 to i8**, !dbg !9437
  store i8* %15, i8** %16, align 4, !dbg !9437
  %17 = getelementptr inbounds i8, i8* %11, i32 60, !dbg !9439
  %18 = bitcast i8* %17 to i32*, !dbg !9439
  store i32 %0, i32* %18, align 4, !dbg !9440
  %19 = getelementptr inbounds i8, i8* %11, i32 64, !dbg !9441
  %20 = bitcast i8* %19 to i32*, !dbg !9441
  store i32 %1, i32* %20, align 4, !dbg !9442
  %21 = tail call i32 @xQueueGenericReset(i8* noundef nonnull %11, i32 noundef 1) #22, !dbg !9443
  %22 = getelementptr inbounds i8, i8* %11, i32 80, !dbg !9444
  store i8 %2, i8* %22, align 4, !dbg !9446
  call void @llvm.dbg.value(metadata i8* %11, metadata !9420, metadata !DIExpression()), !dbg !9422
  br label %24, !dbg !9447

23:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !9420, metadata !DIExpression()), !dbg !9422
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 386) #20, !dbg !9448
  br label %24, !dbg !9448

24:                                               ; preds = %13, %23
  ret i8* %11, !dbg !9451
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateMutex(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9452 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9456, metadata !DIExpression()), !dbg !9458
  %2 = tail call i8* @pvPortMalloc(i32 noundef 84) #20, !dbg !9459
  call void @llvm.dbg.value(metadata i8* %2, metadata !9457, metadata !DIExpression()), !dbg !9458
  %3 = icmp eq i8* %2, null, !dbg !9460
  br i1 %3, label %28, label %4, !dbg !9460

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !9457, metadata !DIExpression()), !dbg !9458
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !9461
  %6 = bitcast i8* %5 to i8**, !dbg !9461
  store i8* null, i8** %6, align 4, !dbg !9464
  %7 = bitcast i8* %2 to i8**, !dbg !9465
  store i8* null, i8** %7, align 4, !dbg !9466
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !9467
  %9 = bitcast i8* %8 to i8**, !dbg !9467
  store i8* null, i8** %9, align 4, !dbg !9468
  %10 = getelementptr inbounds i8, i8* %2, i32 12, !dbg !9469
  %11 = bitcast i8* %10 to i8**, !dbg !9470
  store i8* null, i8** %11, align 4, !dbg !9471
  %12 = getelementptr inbounds i8, i8* %2, i32 56, !dbg !9472
  %13 = bitcast i8* %12 to i32*, !dbg !9472
  store volatile i32 0, i32* %13, align 4, !dbg !9473
  %14 = getelementptr inbounds i8, i8* %2, i32 60, !dbg !9474
  %15 = bitcast i8* %14 to i32*, !dbg !9474
  store i32 1, i32* %15, align 4, !dbg !9475
  %16 = getelementptr inbounds i8, i8* %2, i32 64, !dbg !9476
  %17 = bitcast i8* %16 to i32*, !dbg !9476
  store i32 0, i32* %17, align 4, !dbg !9477
  %18 = getelementptr inbounds i8, i8* %2, i32 68, !dbg !9478
  %19 = bitcast i8* %18 to i32*, !dbg !9478
  store volatile i32 -1, i32* %19, align 4, !dbg !9479
  %20 = getelementptr inbounds i8, i8* %2, i32 72, !dbg !9480
  %21 = bitcast i8* %20 to i32*, !dbg !9480
  store volatile i32 -1, i32* %21, align 4, !dbg !9481
  %22 = getelementptr inbounds i8, i8* %2, i32 80, !dbg !9482
  store i8 %0, i8* %22, align 4, !dbg !9484
  %23 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !9485
  %24 = bitcast i8* %23 to %struct.xLIST*, !dbg !9485
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %24) #20, !dbg !9486
  %25 = getelementptr inbounds i8, i8* %2, i32 36, !dbg !9487
  %26 = bitcast i8* %25 to %struct.xLIST*, !dbg !9487
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %26) #20, !dbg !9488
  %27 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %2, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !9489
  br label %29, !dbg !9490

28:                                               ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 450) #20, !dbg !9491
  br label %29, !dbg !9491

29:                                               ; preds = %4, %28
  ret i8* %2, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSend(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9495 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9501, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8* %1, metadata !9502, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 %2, metadata !9503, metadata !DIExpression()), !dbg !9514
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !9504, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 0, metadata !9505, metadata !DIExpression()), !dbg !9514
  %7 = bitcast %struct.hal_cache_region_config_t* %6 to i8*, !dbg !9515
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19, !dbg !9515
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %6, metadata !9507, metadata !DIExpression()), !dbg !9516
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !9517
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !9513, metadata !DIExpression()), !dbg !9514
  %9 = icmp eq i8* %0, null, !dbg !9518
  br i1 %9, label %10, label %11, !dbg !9520

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 619) #20, !dbg !9521
  br label %11, !dbg !9521

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !9523
  br i1 %12, label %13, label %19, !dbg !9523

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9523
  %15 = bitcast i8* %14 to i32*, !dbg !9523
  %16 = load i32, i32* %15, align 4, !dbg !9523
  %17 = icmp eq i32 %16, 0, !dbg !9523
  br i1 %17, label %19, label %18, !dbg !9525

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 620) #20, !dbg !9526
  br label %19, !dbg !9526

19:                                               ; preds = %11, %18, %13
  %20 = icmp eq i32 %3, 2, !dbg !9528
  br i1 %20, label %21, label %27, !dbg !9528

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9528
  %23 = bitcast i8* %22 to i32*, !dbg !9528
  %24 = load i32, i32* %23, align 4, !dbg !9528
  %25 = icmp eq i32 %24, 1, !dbg !9528
  br i1 %25, label %27, label %26, !dbg !9530

26:                                               ; preds = %21
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 621) #20, !dbg !9531
  br label %27, !dbg !9531

27:                                               ; preds = %19, %26, %21
  %28 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !9533
  %29 = icmp eq i32 %28, 0, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %2, metadata !9503, metadata !DIExpression()), !dbg !9514
  %30 = icmp ne i32 %2, 0, !dbg !9533
  %31 = and i1 %29, %30, !dbg !9533
  br i1 %31, label %32, label %33, !dbg !9536

32:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 624) #20, !dbg !9537
  br label %33, !dbg !9537

33:                                               ; preds = %32, %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !9505, metadata !DIExpression()), !dbg !9514
  call void @vPortEnterCritical() #20, !dbg !9539
  %34 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !9543
  %35 = bitcast i8* %34 to i32*, !dbg !9543
  %36 = load volatile i32, i32* %35, align 4, !dbg !9543
  %37 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9546
  %38 = bitcast i8* %37 to i32*, !dbg !9546
  %39 = load i32, i32* %38, align 4, !dbg !9546
  %40 = icmp ult i32 %36, %39, !dbg !9547
  %41 = or i1 %20, %40, !dbg !9548
  br i1 %41, label %50, label %42, !dbg !9548

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %0, i32 68
  %44 = bitcast i8* %43 to i32*
  %45 = getelementptr inbounds i8, i8* %0, i32 72
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %0, i32 16
  %48 = bitcast i8* %47 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !9503, metadata !DIExpression()), !dbg !9514
  %49 = icmp eq i32 %2, 0, !dbg !9549
  br i1 %49, label %65, label %66, !dbg !9552

50:                                               ; preds = %90, %33
  %51 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1, i32 noundef %3) #22, !dbg !9553
  call void @llvm.dbg.value(metadata i32 %51, metadata !9506, metadata !DIExpression()), !dbg !9514
  %52 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !9555
  %53 = bitcast i8* %52 to i32*, !dbg !9555
  %54 = load i32, i32* %53, align 4, !dbg !9555
  %55 = icmp eq i32 %54, 0, !dbg !9555
  br i1 %55, label %61, label %56, !dbg !9558

56:                                               ; preds = %50
  %57 = bitcast i8* %52 to %struct.xLIST*, !dbg !9555
  %58 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %57) #20, !dbg !9559
  %59 = icmp eq i32 %58, 1, !dbg !9562
  br i1 %59, label %60, label %64, !dbg !9563

60:                                               ; preds = %56
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9564
  call void asm sideeffect "dsb", ""() #19, !dbg !9564, !srcloc !9567
  call void asm sideeffect "isb", ""() #19, !dbg !9564, !srcloc !9568
  br label %64, !dbg !9569

61:                                               ; preds = %50
  %62 = icmp eq i32 %51, 0, !dbg !9570
  br i1 %62, label %64, label %63, !dbg !9572

63:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9573
  call void asm sideeffect "dsb", ""() #19, !dbg !9573, !srcloc !9576
  call void asm sideeffect "isb", ""() #19, !dbg !9573, !srcloc !9577
  br label %64, !dbg !9578

64:                                               ; preds = %63, %61, %60, %56
  call void @vPortExitCritical() #20, !dbg !9579
  br label %97, !dbg !9580

65:                                               ; preds = %94, %42
  call void @vPortExitCritical() #20, !dbg !9581
  br label %97, !dbg !9583

66:                                               ; preds = %42
  call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %6) #20, !dbg !9584
  call void @llvm.dbg.value(metadata i32 1, metadata !9505, metadata !DIExpression()), !dbg !9514
  br label %67, !dbg !9587

67:                                               ; preds = %94, %66
  call void @llvm.dbg.value(metadata i32 1, metadata !9505, metadata !DIExpression()), !dbg !9514
  call void @vPortExitCritical() #20, !dbg !9588
  call void @vTaskSuspendAll() #20, !dbg !9589
  call void @vPortEnterCritical() #20, !dbg !9590
  %68 = load volatile i32, i32* %44, align 4, !dbg !9591
  %69 = icmp eq i32 %68, -1, !dbg !9591
  br i1 %69, label %70, label %71, !dbg !9594

70:                                               ; preds = %67
  store volatile i32 0, i32* %44, align 4, !dbg !9595
  br label %71, !dbg !9595

71:                                               ; preds = %70, %67
  %72 = load volatile i32, i32* %46, align 4, !dbg !9597
  %73 = icmp eq i32 %72, -1, !dbg !9597
  br i1 %73, label %74, label %75, !dbg !9594

74:                                               ; preds = %71
  store volatile i32 0, i32* %46, align 4, !dbg !9599
  br label %75, !dbg !9599

75:                                               ; preds = %74, %71
  call void @vPortExitCritical() #20, !dbg !9590
  call void @llvm.dbg.value(metadata i32* %5, metadata !9503, metadata !DIExpression(DW_OP_deref)), !dbg !9514
  %76 = call i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef nonnull %6, i32* noundef nonnull %5) #20, !dbg !9601
  %77 = icmp eq i32 %76, 0, !dbg !9603
  br i1 %77, label %78, label %88, !dbg !9604

78:                                               ; preds = %75
  %79 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9605
  %80 = icmp eq i32 %79, 0, !dbg !9608
  br i1 %80, label %86, label %81, !dbg !9609

81:                                               ; preds = %78
  %82 = load i32, i32* %5, align 4, !dbg !9610
  call void @llvm.dbg.value(metadata i32 %82, metadata !9503, metadata !DIExpression()), !dbg !9514
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %48, i32 noundef %82) #20, !dbg !9612
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9613
  %83 = call i32 @xTaskResumeAll() #20, !dbg !9614
  %84 = icmp eq i32 %83, 0, !dbg !9616
  br i1 %84, label %85, label %90, !dbg !9617

85:                                               ; preds = %81
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9618
  call void asm sideeffect "dsb", ""() #19, !dbg !9618, !srcloc !9621
  call void asm sideeffect "isb", ""() #19, !dbg !9618, !srcloc !9622
  br label %90, !dbg !9623

86:                                               ; preds = %78
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9624
  %87 = call i32 @xTaskResumeAll() #20, !dbg !9626
  br label %90

88:                                               ; preds = %75
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9627
  %89 = call i32 @xTaskResumeAll() #20, !dbg !9629
  br label %97, !dbg !9630

90:                                               ; preds = %86, %85, %81
  call void @llvm.dbg.value(metadata i32 undef, metadata !9505, metadata !DIExpression()), !dbg !9514
  call void @vPortEnterCritical() #20, !dbg !9539
  %91 = load volatile i32, i32* %35, align 4, !dbg !9543
  %92 = load i32, i32* %38, align 4, !dbg !9546
  %93 = icmp ult i32 %91, %92, !dbg !9547
  br i1 %93, label %50, label %94, !dbg !9548, !llvm.loop !9631

94:                                               ; preds = %90
  %95 = load i32, i32* %5, align 4, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %95, metadata !9503, metadata !DIExpression()), !dbg !9514
  %96 = icmp eq i32 %95, 0, !dbg !9549
  br i1 %96, label %65, label %67, !dbg !9552

97:                                               ; preds = %88, %65, %64
  %98 = phi i32 [ 1, %64 ], [ 0, %65 ], [ 0, %88 ], !dbg !9635
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19, !dbg !9636
  ret i32 %98, !dbg !9636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !9637 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9641, metadata !DIExpression()), !dbg !9645
  call void @llvm.dbg.value(metadata i8* %1, metadata !9642, metadata !DIExpression()), !dbg !9645
  call void @llvm.dbg.value(metadata i32 %2, metadata !9643, metadata !DIExpression()), !dbg !9645
  call void @llvm.dbg.value(metadata i32 0, metadata !9644, metadata !DIExpression()), !dbg !9645
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !9646
  %5 = load i32, i32* %4, align 4, !dbg !9646
  %6 = icmp eq i32 %5, 0, !dbg !9648
  br i1 %6, label %7, label %15, !dbg !9649

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9650
  %9 = load i8*, i8** %8, align 4, !dbg !9650
  %10 = icmp eq i8* %9, null, !dbg !9654
  br i1 %10, label %11, label %54, !dbg !9655

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9656
  %13 = load i8*, i8** %12, align 4, !dbg !9656
  %14 = tail call i32 @xTaskPriorityDisinherit(i8* noundef %13) #20, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %14, metadata !9644, metadata !DIExpression()), !dbg !9645
  store i8* null, i8** %12, align 4, !dbg !9659
  br label %54, !dbg !9660

15:                                               ; preds = %3
  %16 = icmp eq i32 %2, 0, !dbg !9661
  br i1 %16, label %17, label %30, !dbg !9663

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !9664
  %19 = load i8*, i8** %18, align 4, !dbg !9664
  %20 = tail call i8* @memcpy(i8* noundef %19, i8* noundef %1, i32 noundef %5) #20, !dbg !9666
  %21 = load i32, i32* %4, align 4, !dbg !9667
  %22 = load i8*, i8** %18, align 4, !dbg !9668
  %23 = getelementptr inbounds i8, i8* %22, i32 %21, !dbg !9668
  store i8* %23, i8** %18, align 4, !dbg !9668
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9669
  %25 = load i8*, i8** %24, align 4, !dbg !9669
  %26 = icmp ult i8* %23, %25, !dbg !9671
  br i1 %26, label %54, label %27, !dbg !9672

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9673
  %29 = load i8*, i8** %28, align 4, !dbg !9673
  store i8* %29, i8** %18, align 4, !dbg !9675
  br label %54, !dbg !9676

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !9677
  %32 = load i8*, i8** %31, align 4, !dbg !9677
  %33 = tail call i8* @memcpy(i8* noundef %32, i8* noundef %1, i32 noundef %5) #20, !dbg !9679
  %34 = load i32, i32* %4, align 4, !dbg !9680
  %35 = load i8*, i8** %31, align 4, !dbg !9681
  %36 = sub i32 0, %34, !dbg !9681
  %37 = getelementptr inbounds i8, i8* %35, i32 %36, !dbg !9681
  store i8* %37, i8** %31, align 4, !dbg !9681
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9682
  %39 = load i8*, i8** %38, align 4, !dbg !9682
  %40 = icmp ult i8* %37, %39, !dbg !9684
  br i1 %40, label %41, label %45, !dbg !9685

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9686
  %43 = load i8*, i8** %42, align 4, !dbg !9686
  %44 = getelementptr inbounds i8, i8* %43, i32 %36, !dbg !9688
  store i8* %44, i8** %31, align 4, !dbg !9689
  br label %45, !dbg !9690

45:                                               ; preds = %30, %41
  %46 = icmp eq i32 %2, 2, !dbg !9691
  br i1 %46, label %47, label %54, !dbg !9693

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9694
  %49 = load volatile i32, i32* %48, align 4, !dbg !9694
  %50 = icmp eq i32 %49, 0, !dbg !9697
  br i1 %50, label %54, label %51, !dbg !9698

51:                                               ; preds = %47
  %52 = load volatile i32, i32* %48, align 4, !dbg !9699
  %53 = add i32 %52, -1, !dbg !9699
  store volatile i32 %53, i32* %48, align 4, !dbg !9699
  br label %54, !dbg !9701

54:                                               ; preds = %17, %27, %45, %51, %47, %11, %7
  %55 = phi i32 [ %14, %11 ], [ 0, %7 ], [ 0, %27 ], [ 0, %17 ], [ 0, %51 ], [ 0, %47 ], [ 0, %45 ], !dbg !9645
  call void @llvm.dbg.value(metadata i32 %55, metadata !9644, metadata !DIExpression()), !dbg !9645
  %56 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9702
  %57 = load volatile i32, i32* %56, align 4, !dbg !9703
  %58 = add i32 %57, 1, !dbg !9703
  store volatile i32 %58, i32* %56, align 4, !dbg !9703
  ret i32 %55, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9711, metadata !DIExpression()), !dbg !9713
  tail call void @vPortEnterCritical() #20, !dbg !9714
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9715
  %3 = load volatile i32, i32* %2, align 4, !dbg !9715
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !9718
  %5 = load i32, i32* %4, align 4, !dbg !9718
  %6 = icmp eq i32 %3, %5, !dbg !9719
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !9712, metadata !DIExpression()), !dbg !9713
  tail call void @vPortExitCritical() #20, !dbg !9720
  ret i32 %7, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9726, metadata !DIExpression()), !dbg !9727
  tail call void @vPortEnterCritical() #20, !dbg !9728
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !9729
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !9729
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10
  %5 = load volatile i32, i32* %4, align 4, !dbg !9734
  %6 = icmp sgt i32 %5, 0, !dbg !9735
  br i1 %6, label %7, label %19, !dbg !9736

7:                                                ; preds = %1, %14
  %8 = load i32, i32* %3, align 4, !dbg !9729
  %9 = icmp eq i32 %8, 0, !dbg !9729
  br i1 %9, label %19, label %10, !dbg !9737

10:                                               ; preds = %7
  %11 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %2) #20, !dbg !9738
  %12 = icmp eq i32 %11, 0, !dbg !9741
  br i1 %12, label %14, label %13, !dbg !9742

13:                                               ; preds = %10
  tail call void @vTaskMissedYield() #20, !dbg !9743
  br label %14, !dbg !9745

14:                                               ; preds = %13, %10
  %15 = load volatile i32, i32* %4, align 4, !dbg !9746
  %16 = add nsw i32 %15, -1, !dbg !9746
  store volatile i32 %16, i32* %4, align 4, !dbg !9746
  %17 = load volatile i32, i32* %4, align 4, !dbg !9734
  %18 = icmp sgt i32 %17, 0, !dbg !9735
  br i1 %18, label %7, label %19, !dbg !9736, !llvm.loop !9747

19:                                               ; preds = %14, %7, %1
  store volatile i32 -1, i32* %4, align 4, !dbg !9749
  tail call void @vPortExitCritical() #20, !dbg !9750
  tail call void @vPortEnterCritical() #20, !dbg !9751
  %20 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !9752
  %21 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %20, i32 0, i32 0, !dbg !9752
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %23 = load volatile i32, i32* %22, align 4, !dbg !9756
  %24 = icmp sgt i32 %23, 0, !dbg !9757
  br i1 %24, label %25, label %37, !dbg !9758

25:                                               ; preds = %19, %32
  %26 = load i32, i32* %21, align 4, !dbg !9752
  %27 = icmp eq i32 %26, 0, !dbg !9752
  br i1 %27, label %37, label %28, !dbg !9759

28:                                               ; preds = %25
  %29 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %20) #20, !dbg !9760
  %30 = icmp eq i32 %29, 0, !dbg !9763
  br i1 %30, label %32, label %31, !dbg !9764

31:                                               ; preds = %28
  tail call void @vTaskMissedYield() #20, !dbg !9765
  br label %32, !dbg !9767

32:                                               ; preds = %28, %31
  %33 = load volatile i32, i32* %22, align 4, !dbg !9768
  %34 = add nsw i32 %33, -1, !dbg !9768
  store volatile i32 %34, i32* %22, align 4, !dbg !9768
  %35 = load volatile i32, i32* %22, align 4, !dbg !9756
  %36 = icmp sgt i32 %35, 0, !dbg !9757
  br i1 %36, label %25, label %37, !dbg !9758, !llvm.loop !9769

37:                                               ; preds = %32, %25, %19
  store volatile i32 -1, i32* %22, align 4, !dbg !9771
  tail call void @vPortExitCritical() #20, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveMutexRecursive(i8* noundef %0) local_unnamed_addr #0 !dbg !9774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9778, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i8* %0, metadata !9780, metadata !DIExpression()), !dbg !9781
  %2 = icmp eq i8* %0, null, !dbg !9782
  br i1 %2, label %3, label %4, !dbg !9784

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 494) #20, !dbg !9785
  br label %4, !dbg !9785

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9787
  %6 = bitcast i8* %5 to i8**, !dbg !9787
  %7 = load i8*, i8** %6, align 4, !dbg !9787
  %8 = tail call i8* @xTaskGetCurrentTaskHandle() #20, !dbg !9789
  %9 = icmp eq i8* %7, %8, !dbg !9790
  br i1 %9, label %10, label %18, !dbg !9791

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !9792
  %12 = bitcast i8* %11 to i32*, !dbg !9794
  %13 = load i32, i32* %12, align 4, !dbg !9795
  %14 = add i32 %13, -1, !dbg !9795
  store i32 %14, i32* %12, align 4, !dbg !9795
  %15 = icmp eq i32 %14, 0, !dbg !9796
  br i1 %15, label %16, label %18, !dbg !9798

16:                                               ; preds = %10
  %17 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !9799
  br label %18, !dbg !9801

18:                                               ; preds = %4, %16, %10
  %19 = phi i32 [ 1, %10 ], [ 1, %16 ], [ 0, %4 ], !dbg !9802
  call void @llvm.dbg.value(metadata i32 %19, metadata !9779, metadata !DIExpression()), !dbg !9781
  ret i32 %19, !dbg !9803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueTakeMutexRecursive(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9808, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i32 %1, metadata !9809, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i8* %0, metadata !9811, metadata !DIExpression()), !dbg !9812
  %3 = icmp eq i8* %0, null, !dbg !9813
  br i1 %3, label %4, label %5, !dbg !9815

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 549) #20, !dbg !9816
  br label %5, !dbg !9816

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9818
  %7 = bitcast i8* %6 to i8**, !dbg !9818
  %8 = load i8*, i8** %7, align 4, !dbg !9818
  %9 = tail call i8* @xTaskGetCurrentTaskHandle() #20, !dbg !9820
  %10 = icmp eq i8* %8, %9, !dbg !9821
  br i1 %10, label %14, label %11, !dbg !9822

11:                                               ; preds = %5
  %12 = tail call i32 @xQueueGenericReceive(i8* noundef nonnull %0, i8* noundef null, i32 noundef %1, i32 noundef 0) #22, !dbg !9823
  call void @llvm.dbg.value(metadata i32 %12, metadata !9810, metadata !DIExpression()), !dbg !9812
  %13 = icmp eq i32 %12, 1, !dbg !9825
  br i1 %13, label %14, label %19, !dbg !9827

14:                                               ; preds = %11, %5
  %15 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !9828
  %16 = bitcast i8* %15 to i32*, !dbg !9828
  %17 = load i32, i32* %16, align 4, !dbg !9828
  %18 = add i32 %17, 1, !dbg !9828
  store i32 %18, i32* %16, align 4, !dbg !9828
  br label %19, !dbg !9829

19:                                               ; preds = %14, %11
  %20 = phi i32 [ %12, %11 ], [ 1, %14 ], !dbg !9828
  call void @llvm.dbg.value(metadata i32 %20, metadata !9810, metadata !DIExpression()), !dbg !9812
  ret i32 %20, !dbg !9829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReceive(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9830 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9834, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i8* %1, metadata !9835, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i32 %2, metadata !9836, metadata !DIExpression()), !dbg !9842
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !9837, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i32 0, metadata !9838, metadata !DIExpression()), !dbg !9842
  %7 = bitcast %struct.hal_cache_region_config_t* %6 to i8*, !dbg !9843
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19, !dbg !9843
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %6, metadata !9839, metadata !DIExpression()), !dbg !9844
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !9845
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !9841, metadata !DIExpression()), !dbg !9842
  %9 = icmp eq i8* %0, null, !dbg !9846
  br i1 %9, label %10, label %11, !dbg !9848

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1368) #20, !dbg !9849
  br label %11, !dbg !9849

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !9851
  br i1 %12, label %13, label %19, !dbg !9851

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9851
  %15 = bitcast i8* %14 to i32*, !dbg !9851
  %16 = load i32, i32* %15, align 4, !dbg !9851
  %17 = icmp eq i32 %16, 0, !dbg !9851
  br i1 %17, label %19, label %18, !dbg !9853

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1369) #20, !dbg !9854
  br label %19, !dbg !9854

19:                                               ; preds = %11, %18, %13
  %20 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !9856
  %21 = icmp eq i32 %20, 0, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %2, metadata !9836, metadata !DIExpression()), !dbg !9842
  %22 = icmp ne i32 %2, 0, !dbg !9856
  %23 = and i1 %21, %22, !dbg !9856
  br i1 %23, label %24, label %25, !dbg !9859

24:                                               ; preds = %19
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1372) #20, !dbg !9860
  br label %25, !dbg !9860

25:                                               ; preds = %24, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !9838, metadata !DIExpression()), !dbg !9842
  call void @vPortEnterCritical() #20, !dbg !9862
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !9866
  %27 = bitcast i8* %26 to i32*, !dbg !9866
  %28 = load volatile i32, i32* %27, align 4, !dbg !9866
  %29 = icmp eq i32 %28, 0, !dbg !9869
  br i1 %29, label %30, label %41, !dbg !9870

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %0, i32 68
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %0, i32 72
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %0 to i8**
  %36 = getelementptr inbounds i8, i8* %0, i32 4
  %37 = bitcast i8* %36 to i8**
  %38 = getelementptr inbounds i8, i8* %0, i32 36
  %39 = bitcast i8* %38 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !9836, metadata !DIExpression()), !dbg !9842
  %40 = icmp eq i32 %2, 0, !dbg !9871
  br i1 %40, label %77, label %78, !dbg !9874

41:                                               ; preds = %107, %25
  %42 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !9875
  %43 = bitcast i8* %42 to i8**, !dbg !9877
  %44 = load i8*, i8** %43, align 4, !dbg !9877
  call void @llvm.dbg.value(metadata i8* %44, metadata !9840, metadata !DIExpression()), !dbg !9842
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1) #22, !dbg !9878
  %45 = icmp eq i32 %3, 0, !dbg !9879
  br i1 %45, label %46, label %66, !dbg !9881

46:                                               ; preds = %41
  %47 = load volatile i32, i32* %27, align 4, !dbg !9882
  %48 = add i32 %47, -1, !dbg !9882
  store volatile i32 %48, i32* %27, align 4, !dbg !9882
  %49 = bitcast i8* %0 to i8**, !dbg !9884
  %50 = load i8*, i8** %49, align 4, !dbg !9884
  %51 = icmp eq i8* %50, null, !dbg !9887
  br i1 %51, label %52, label %56, !dbg !9888

52:                                               ; preds = %46
  %53 = call i8* @pvTaskIncrementMutexHeldCount() #20, !dbg !9889
  %54 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9891
  %55 = bitcast i8* %54 to i8**, !dbg !9891
  store i8* %53, i8** %55, align 4, !dbg !9892
  br label %56, !dbg !9893

56:                                               ; preds = %46, %52
  %57 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !9894
  %58 = bitcast i8* %57 to i32*, !dbg !9894
  %59 = load i32, i32* %58, align 4, !dbg !9894
  %60 = icmp eq i32 %59, 0, !dbg !9894
  br i1 %60, label %76, label %61, !dbg !9896

61:                                               ; preds = %56
  %62 = bitcast i8* %57 to %struct.xLIST*, !dbg !9894
  %63 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %62) #20, !dbg !9897
  %64 = icmp eq i32 %63, 1, !dbg !9900
  br i1 %64, label %65, label %76, !dbg !9901

65:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9902
  call void asm sideeffect "dsb", ""() #19, !dbg !9902, !srcloc !9905
  call void asm sideeffect "isb", ""() #19, !dbg !9902, !srcloc !9906
  br label %76, !dbg !9907

66:                                               ; preds = %41
  store i8* %44, i8** %43, align 4, !dbg !9908
  %67 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !9910
  %68 = bitcast i8* %67 to i32*, !dbg !9910
  %69 = load i32, i32* %68, align 4, !dbg !9910
  %70 = icmp eq i32 %69, 0, !dbg !9910
  br i1 %70, label %76, label %71, !dbg !9912

71:                                               ; preds = %66
  %72 = bitcast i8* %67 to %struct.xLIST*, !dbg !9910
  %73 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %72) #20, !dbg !9913
  %74 = icmp eq i32 %73, 0, !dbg !9916
  br i1 %74, label %76, label %75, !dbg !9917

75:                                               ; preds = %71
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9918
  call void asm sideeffect "dsb", ""() #19, !dbg !9918, !srcloc !9921
  call void asm sideeffect "isb", ""() #19, !dbg !9918, !srcloc !9922
  br label %76, !dbg !9923

76:                                               ; preds = %71, %75, %66, %61, %65, %56
  call void @vPortExitCritical() #20, !dbg !9924
  br label %113, !dbg !9925

77:                                               ; preds = %110, %30
  call void @vPortExitCritical() #20, !dbg !9926
  br label %113, !dbg !9928

78:                                               ; preds = %30
  call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %6) #20, !dbg !9929
  call void @llvm.dbg.value(metadata i32 1, metadata !9838, metadata !DIExpression()), !dbg !9842
  br label %79, !dbg !9932

79:                                               ; preds = %110, %78
  call void @llvm.dbg.value(metadata i32 1, metadata !9838, metadata !DIExpression()), !dbg !9842
  call void @vPortExitCritical() #20, !dbg !9933
  call void @vTaskSuspendAll() #20, !dbg !9934
  call void @vPortEnterCritical() #20, !dbg !9935
  %80 = load volatile i32, i32* %32, align 4, !dbg !9936
  %81 = icmp eq i32 %80, -1, !dbg !9936
  br i1 %81, label %82, label %83, !dbg !9939

82:                                               ; preds = %79
  store volatile i32 0, i32* %32, align 4, !dbg !9940
  br label %83, !dbg !9940

83:                                               ; preds = %82, %79
  %84 = load volatile i32, i32* %34, align 4, !dbg !9942
  %85 = icmp eq i32 %84, -1, !dbg !9942
  br i1 %85, label %86, label %87, !dbg !9939

86:                                               ; preds = %83
  store volatile i32 0, i32* %34, align 4, !dbg !9944
  br label %87, !dbg !9944

87:                                               ; preds = %86, %83
  call void @vPortExitCritical() #20, !dbg !9935
  call void @llvm.dbg.value(metadata i32* %5, metadata !9836, metadata !DIExpression(DW_OP_deref)), !dbg !9842
  %88 = call i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef nonnull %6, i32* noundef nonnull %5) #20, !dbg !9946
  %89 = icmp eq i32 %88, 0, !dbg !9948
  br i1 %89, label %90, label %105, !dbg !9949

90:                                               ; preds = %87
  %91 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9950
  %92 = icmp eq i32 %91, 0, !dbg !9953
  br i1 %92, label %103, label %93, !dbg !9954

93:                                               ; preds = %90
  %94 = load i8*, i8** %35, align 4, !dbg !9955
  %95 = icmp eq i8* %94, null, !dbg !9959
  br i1 %95, label %96, label %98, !dbg !9960

96:                                               ; preds = %93
  call void @vPortEnterCritical() #20, !dbg !9961
  %97 = load i8*, i8** %37, align 4, !dbg !9963
  call void @vTaskPriorityInherit(i8* noundef %97) #20, !dbg !9965
  call void @vPortExitCritical() #20, !dbg !9966
  br label %98, !dbg !9967

98:                                               ; preds = %93, %96
  %99 = load i32, i32* %5, align 4, !dbg !9968
  call void @llvm.dbg.value(metadata i32 %99, metadata !9836, metadata !DIExpression()), !dbg !9842
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %39, i32 noundef %99) #20, !dbg !9969
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9970
  %100 = call i32 @xTaskResumeAll() #20, !dbg !9971
  %101 = icmp eq i32 %100, 0, !dbg !9973
  br i1 %101, label %102, label %107, !dbg !9974

102:                                              ; preds = %98
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9975
  call void asm sideeffect "dsb", ""() #19, !dbg !9975, !srcloc !9978
  call void asm sideeffect "isb", ""() #19, !dbg !9975, !srcloc !9979
  br label %107, !dbg !9980

103:                                              ; preds = %90
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9981
  %104 = call i32 @xTaskResumeAll() #20, !dbg !9983
  br label %107

105:                                              ; preds = %87
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !9984
  %106 = call i32 @xTaskResumeAll() #20, !dbg !9986
  br label %113, !dbg !9987

107:                                              ; preds = %103, %98, %102
  call void @llvm.dbg.value(metadata i32 undef, metadata !9838, metadata !DIExpression()), !dbg !9842
  call void @vPortEnterCritical() #20, !dbg !9862
  %108 = load volatile i32, i32* %27, align 4, !dbg !9866
  %109 = icmp eq i32 %108, 0, !dbg !9869
  br i1 %109, label %110, label %41, !dbg !9870, !llvm.loop !9988

110:                                              ; preds = %107
  %111 = load i32, i32* %5, align 4, !dbg !9991
  call void @llvm.dbg.value(metadata i32 %111, metadata !9836, metadata !DIExpression()), !dbg !9842
  %112 = icmp eq i32 %111, 0, !dbg !9871
  br i1 %112, label %77, label %79, !dbg !9874

113:                                              ; preds = %105, %77, %76
  %114 = phi i32 [ 1, %76 ], [ 0, %77 ], [ 0, %105 ], !dbg !9992
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19, !dbg !9993
  ret i32 %114, !dbg !9993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !9994 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9998, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i8* %1, metadata !9999, metadata !DIExpression()), !dbg !10000
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !10001
  %4 = load i32, i32* %3, align 4, !dbg !10001
  %5 = icmp eq i32 %4, 0, !dbg !10003
  br i1 %5, label %19, label %6, !dbg !10004

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !10005
  %8 = load i8*, i8** %7, align 4, !dbg !10007
  %9 = getelementptr inbounds i8, i8* %8, i32 %4, !dbg !10007
  store i8* %9, i8** %7, align 4, !dbg !10007
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !10008
  %11 = load i8*, i8** %10, align 4, !dbg !10008
  %12 = icmp ult i8* %9, %11, !dbg !10010
  br i1 %12, label %16, label %13, !dbg !10011

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !10012
  %15 = load i8*, i8** %14, align 4, !dbg !10012
  store i8* %15, i8** %7, align 4, !dbg !10014
  br label %16, !dbg !10015

16:                                               ; preds = %6, %13
  %17 = phi i8* [ %9, %6 ], [ %15, %13 ], !dbg !10016
  %18 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %17, i32 noundef %4) #20, !dbg !10017
  br label %19, !dbg !10018

19:                                               ; preds = %16, %2
  ret void, !dbg !10019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !10020 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10022, metadata !DIExpression()), !dbg !10024
  tail call void @vPortEnterCritical() #20, !dbg !10025
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !10026
  %3 = load volatile i32, i32* %2, align 4, !dbg !10026
  %4 = icmp eq i32 %3, 0, !dbg !10029
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !10023, metadata !DIExpression()), !dbg !10024
  tail call void @vPortExitCritical() #20, !dbg !10030
  ret i32 %5, !dbg !10031
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateCountingSemaphore(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10036, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.value(metadata i32 %1, metadata !10037, metadata !DIExpression()), !dbg !10039
  %3 = icmp eq i32 %0, 0, !dbg !10040
  br i1 %3, label %4, label %5, !dbg !10042

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 590) #20, !dbg !10043
  br label %5, !dbg !10043

5:                                                ; preds = %4, %2
  %6 = icmp ugt i32 %1, %0, !dbg !10045
  br i1 %6, label %7, label %8, !dbg !10047

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 591) #20, !dbg !10048
  br label %8, !dbg !10048

8:                                                ; preds = %7, %5
  %9 = tail call i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef 0, i8 noundef zeroext 2) #22, !dbg !10050
  call void @llvm.dbg.value(metadata i8* %9, metadata !10038, metadata !DIExpression()), !dbg !10039
  %10 = icmp eq i8* %9, null, !dbg !10051
  br i1 %10, label %14, label %11, !dbg !10051

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %9, i32 56, !dbg !10052
  %13 = bitcast i8* %12 to i32*, !dbg !10052
  store volatile i32 %1, i32* %13, align 4, !dbg !10055
  br label %15, !dbg !10056

14:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 606) #20, !dbg !10057
  br label %15, !dbg !10057

15:                                               ; preds = %11, %14
  ret i8* %9, !dbg !10060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSendFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10061 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10065, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.value(metadata i8* %1, metadata !10066, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.value(metadata i32* %2, metadata !10067, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.value(metadata i32 %3, metadata !10068, metadata !DIExpression()), !dbg !10072
  %5 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10073
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %5, metadata !10071, metadata !DIExpression()), !dbg !10072
  %6 = icmp eq i8* %0, null, !dbg !10074
  br i1 %6, label %7, label %8, !dbg !10076

7:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1064) #20, !dbg !10077
  br label %8, !dbg !10077

8:                                                ; preds = %7, %4
  %9 = icmp eq i8* %1, null, !dbg !10079
  br i1 %9, label %10, label %16, !dbg !10079

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10079
  %12 = bitcast i8* %11 to i32*, !dbg !10079
  %13 = load i32, i32* %12, align 4, !dbg !10079
  %14 = icmp eq i32 %13, 0, !dbg !10079
  br i1 %14, label %16, label %15, !dbg !10081

15:                                               ; preds = %10
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1065) #20, !dbg !10082
  br label %16, !dbg !10082

16:                                               ; preds = %8, %15, %10
  %17 = icmp eq i32 %3, 2, !dbg !10084
  br i1 %17, label %18, label %24, !dbg !10084

18:                                               ; preds = %16
  %19 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10084
  %20 = bitcast i8* %19 to i32*, !dbg !10084
  %21 = load i32, i32* %20, align 4, !dbg !10084
  %22 = icmp eq i32 %21, 1, !dbg !10084
  br i1 %22, label %24, label %23, !dbg !10086

23:                                               ; preds = %18
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1066) #20, !dbg !10087
  br label %24, !dbg !10087

24:                                               ; preds = %16, %23, %18
  tail call void @vPortValidateInterruptPriority() #20, !dbg !10089
  %25 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !10090, !srcloc !10096
  call void @llvm.dbg.value(metadata i32 undef, metadata !10093, metadata !DIExpression()) #19, !dbg !10097
  call void @llvm.dbg.value(metadata i32 undef, metadata !10094, metadata !DIExpression()) #19, !dbg !10097
  call void @llvm.dbg.value(metadata i32 undef, metadata !10070, metadata !DIExpression()), !dbg !10072
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10098
  %27 = bitcast i8* %26 to i32*, !dbg !10098
  %28 = load volatile i32, i32* %27, align 4, !dbg !10098
  %29 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10101
  %30 = bitcast i8* %29 to i32*, !dbg !10101
  %31 = load i32, i32* %30, align 4, !dbg !10101
  %32 = icmp ult i32 %28, %31, !dbg !10102
  %33 = or i1 %17, %32, !dbg !10103
  br i1 %33, label %34, label %55, !dbg !10103

34:                                               ; preds = %24
  %35 = tail call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %5, i8* noundef %1, i32 noundef %3) #22, !dbg !10104
  %36 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10106
  %37 = bitcast i8* %36 to i32*, !dbg !10106
  %38 = load volatile i32, i32* %37, align 4, !dbg !10106
  %39 = icmp eq i32 %38, -1, !dbg !10108
  br i1 %39, label %40, label %52, !dbg !10109

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10110
  %42 = bitcast i8* %41 to i32*, !dbg !10110
  %43 = load i32, i32* %42, align 4, !dbg !10110
  %44 = icmp eq i32 %43, 0, !dbg !10110
  br i1 %44, label %55, label %45, !dbg !10114

45:                                               ; preds = %40
  %46 = bitcast i8* %41 to %struct.xLIST*, !dbg !10110
  %47 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %46) #20, !dbg !10115
  %48 = icmp ne i32 %47, 0, !dbg !10118
  %49 = icmp ne i32* %2, null
  %50 = and i1 %49, %48, !dbg !10119
  br i1 %50, label %51, label %55, !dbg !10119

51:                                               ; preds = %45
  store i32 1, i32* %2, align 4, !dbg !10120
  br label %55, !dbg !10124

52:                                               ; preds = %34
  %53 = load volatile i32, i32* %37, align 4, !dbg !10125
  %54 = add nsw i32 %53, 1, !dbg !10125
  store volatile i32 %54, i32* %37, align 4, !dbg !10125
  br label %55

55:                                               ; preds = %24, %52, %40, %51, %45
  %56 = phi i32 [ 1, %45 ], [ 1, %51 ], [ 1, %40 ], [ 1, %52 ], [ 0, %24 ], !dbg !10127
  %57 = extractvalue { i32, i32 } %25, 0, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %57, metadata !10093, metadata !DIExpression()) #19, !dbg !10097
  call void @llvm.dbg.value(metadata i32 %57, metadata !10070, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.value(metadata i32 %56, metadata !10069, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.value(metadata i32 undef, metadata !10128, metadata !DIExpression()) #19, !dbg !10131
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %57) #19, !dbg !10133, !srcloc !10134
  ret i32 %56, !dbg !10135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !10136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10140, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32* %1, metadata !10141, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i8* %0, metadata !10144, metadata !DIExpression()), !dbg !10145
  %3 = icmp eq i8* %0, null, !dbg !10146
  br i1 %3, label %4, label %5, !dbg !10148

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1213) #20, !dbg !10149
  br label %5, !dbg !10149

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10151
  %7 = bitcast i8* %6 to i32*, !dbg !10151
  %8 = load i32, i32* %7, align 4, !dbg !10151
  %9 = icmp eq i32 %8, 0, !dbg !10151
  br i1 %9, label %11, label %10, !dbg !10153

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1216) #20, !dbg !10154
  br label %11, !dbg !10154

11:                                               ; preds = %10, %5
  tail call void @vPortValidateInterruptPriority() #20, !dbg !10156
  %12 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !10157, !srcloc !10096
  call void @llvm.dbg.value(metadata i32 undef, metadata !10093, metadata !DIExpression()) #19, !dbg !10159
  call void @llvm.dbg.value(metadata i32 undef, metadata !10094, metadata !DIExpression()) #19, !dbg !10159
  call void @llvm.dbg.value(metadata i32 undef, metadata !10143, metadata !DIExpression()), !dbg !10145
  %13 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10160
  %14 = bitcast i8* %13 to i32*, !dbg !10160
  %15 = load volatile i32, i32* %14, align 4, !dbg !10160
  %16 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10163
  %17 = bitcast i8* %16 to i32*, !dbg !10163
  %18 = load i32, i32* %17, align 4, !dbg !10163
  %19 = icmp ult i32 %15, %18, !dbg !10164
  br i1 %19, label %20, label %42, !dbg !10165

20:                                               ; preds = %11
  %21 = load volatile i32, i32* %14, align 4, !dbg !10166
  %22 = add i32 %21, 1, !dbg !10166
  store volatile i32 %22, i32* %14, align 4, !dbg !10166
  %23 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10168
  %24 = bitcast i8* %23 to i32*, !dbg !10168
  %25 = load volatile i32, i32* %24, align 4, !dbg !10168
  %26 = icmp eq i32 %25, -1, !dbg !10170
  br i1 %26, label %27, label %39, !dbg !10171

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10172
  %29 = bitcast i8* %28 to i32*, !dbg !10172
  %30 = load i32, i32* %29, align 4, !dbg !10172
  %31 = icmp eq i32 %30, 0, !dbg !10172
  br i1 %31, label %42, label %32, !dbg !10176

32:                                               ; preds = %27
  %33 = bitcast i8* %28 to %struct.xLIST*, !dbg !10172
  %34 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %33) #20, !dbg !10177
  %35 = icmp ne i32 %34, 0, !dbg !10180
  %36 = icmp ne i32* %1, null
  %37 = and i1 %36, %35, !dbg !10181
  br i1 %37, label %38, label %42, !dbg !10181

38:                                               ; preds = %32
  store i32 1, i32* %1, align 4, !dbg !10182
  br label %42, !dbg !10186

39:                                               ; preds = %20
  %40 = load volatile i32, i32* %24, align 4, !dbg !10187
  %41 = add nsw i32 %40, 1, !dbg !10187
  store volatile i32 %41, i32* %24, align 4, !dbg !10187
  br label %42

42:                                               ; preds = %11, %39, %27, %38, %32
  %43 = phi i32 [ 1, %32 ], [ 1, %38 ], [ 1, %27 ], [ 1, %39 ], [ 0, %11 ], !dbg !10189
  %44 = extractvalue { i32, i32 } %12, 0, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %44, metadata !10093, metadata !DIExpression()) #19, !dbg !10159
  call void @llvm.dbg.value(metadata i32 %44, metadata !10143, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32 %43, metadata !10142, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32 undef, metadata !10128, metadata !DIExpression()) #19, !dbg !10190
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %44) #19, !dbg !10192, !srcloc !10134
  ret i32 %43, !dbg !10193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceiveFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !10194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10198, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.value(metadata i8* %1, metadata !10199, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.value(metadata i32* %2, metadata !10200, metadata !DIExpression()), !dbg !10204
  %4 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10205
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %4, metadata !10203, metadata !DIExpression()), !dbg !10204
  %5 = icmp eq i8* %0, null, !dbg !10206
  br i1 %5, label %6, label %7, !dbg !10208

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1556) #20, !dbg !10209
  br label %7, !dbg !10209

7:                                                ; preds = %6, %3
  %8 = icmp eq i8* %1, null, !dbg !10211
  br i1 %8, label %9, label %15, !dbg !10211

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10211
  %11 = bitcast i8* %10 to i32*, !dbg !10211
  %12 = load i32, i32* %11, align 4, !dbg !10211
  %13 = icmp eq i32 %12, 0, !dbg !10211
  br i1 %13, label %15, label %14, !dbg !10213

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1557) #20, !dbg !10214
  br label %15, !dbg !10214

15:                                               ; preds = %7, %14, %9
  tail call void @vPortValidateInterruptPriority() #20, !dbg !10216
  %16 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !10217, !srcloc !10096
  call void @llvm.dbg.value(metadata i32 undef, metadata !10093, metadata !DIExpression()) #19, !dbg !10219
  call void @llvm.dbg.value(metadata i32 undef, metadata !10094, metadata !DIExpression()) #19, !dbg !10219
  call void @llvm.dbg.value(metadata i32 undef, metadata !10202, metadata !DIExpression()), !dbg !10204
  %17 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10220
  %18 = bitcast i8* %17 to i32*, !dbg !10220
  %19 = load volatile i32, i32* %18, align 4, !dbg !10220
  %20 = icmp eq i32 %19, 0, !dbg !10223
  br i1 %20, label %43, label %21, !dbg !10224

21:                                               ; preds = %15
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %4, i8* noundef %1) #22, !dbg !10225
  %22 = load volatile i32, i32* %18, align 4, !dbg !10227
  %23 = add i32 %22, -1, !dbg !10227
  store volatile i32 %23, i32* %18, align 4, !dbg !10227
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !10228
  %25 = bitcast i8* %24 to i32*, !dbg !10228
  %26 = load volatile i32, i32* %25, align 4, !dbg !10228
  %27 = icmp eq i32 %26, -1, !dbg !10230
  br i1 %27, label %28, label %40, !dbg !10231

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !10232
  %30 = bitcast i8* %29 to i32*, !dbg !10232
  %31 = load i32, i32* %30, align 4, !dbg !10232
  %32 = icmp eq i32 %31, 0, !dbg !10232
  br i1 %32, label %43, label %33, !dbg !10235

33:                                               ; preds = %28
  %34 = bitcast i8* %29 to %struct.xLIST*, !dbg !10232
  %35 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %34) #20, !dbg !10236
  %36 = icmp ne i32 %35, 0, !dbg !10239
  %37 = icmp ne i32* %2, null
  %38 = and i1 %37, %36, !dbg !10240
  br i1 %38, label %39, label %43, !dbg !10240

39:                                               ; preds = %33
  store i32 1, i32* %2, align 4, !dbg !10241
  br label %43, !dbg !10245

40:                                               ; preds = %21
  %41 = load volatile i32, i32* %25, align 4, !dbg !10246
  %42 = add nsw i32 %41, 1, !dbg !10246
  store volatile i32 %42, i32* %25, align 4, !dbg !10246
  br label %43

43:                                               ; preds = %15, %40, %28, %39, %33
  %44 = phi i32 [ 1, %33 ], [ 1, %39 ], [ 1, %28 ], [ 1, %40 ], [ 0, %15 ], !dbg !10248
  %45 = extractvalue { i32, i32 } %16, 0, !dbg !10217
  call void @llvm.dbg.value(metadata i32 %45, metadata !10093, metadata !DIExpression()) #19, !dbg !10219
  call void @llvm.dbg.value(metadata i32 %45, metadata !10202, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.value(metadata i32 %44, metadata !10201, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.value(metadata i32 undef, metadata !10128, metadata !DIExpression()) #19, !dbg !10249
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %45) #19, !dbg !10251, !srcloc !10134
  ret i32 %44, !dbg !10252
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeekFromISR(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !10253 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10257, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i8* %1, metadata !10258, metadata !DIExpression()), !dbg !10263
  %3 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10264
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %3, metadata !10262, metadata !DIExpression()), !dbg !10263
  %4 = icmp eq i8* %0, null, !dbg !10265
  br i1 %4, label %5, label %6, !dbg !10267

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1644) #20, !dbg !10268
  br label %6, !dbg !10268

6:                                                ; preds = %5, %2
  %7 = icmp eq i8* %1, null, !dbg !10270
  br i1 %7, label %8, label %14, !dbg !10270

8:                                                ; preds = %6
  %9 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10270
  %10 = bitcast i8* %9 to i32*, !dbg !10270
  %11 = load i32, i32* %10, align 4, !dbg !10270
  %12 = icmp eq i32 %11, 0, !dbg !10270
  br i1 %12, label %14, label %13, !dbg !10272

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1645) #20, !dbg !10273
  br label %14, !dbg !10273

14:                                               ; preds = %6, %13, %8
  %15 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10275
  %16 = bitcast i8* %15 to i32*, !dbg !10275
  %17 = load i32, i32* %16, align 4, !dbg !10275
  %18 = icmp eq i32 %17, 0, !dbg !10275
  br i1 %18, label %19, label %20, !dbg !10277

19:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1646) #20, !dbg !10278
  br label %20, !dbg !10278

20:                                               ; preds = %19, %14
  tail call void @vPortValidateInterruptPriority() #20, !dbg !10280
  %21 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !10281, !srcloc !10096
  call void @llvm.dbg.value(metadata i32 undef, metadata !10093, metadata !DIExpression()) #19, !dbg !10283
  call void @llvm.dbg.value(metadata i32 undef, metadata !10094, metadata !DIExpression()) #19, !dbg !10283
  call void @llvm.dbg.value(metadata i32 undef, metadata !10260, metadata !DIExpression()), !dbg !10263
  %22 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10284
  %23 = bitcast i8* %22 to i32*, !dbg !10284
  %24 = load volatile i32, i32* %23, align 4, !dbg !10284
  %25 = icmp eq i32 %24, 0, !dbg !10287
  br i1 %25, label %30, label %26, !dbg !10288

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10289
  %28 = bitcast i8* %27 to i8**, !dbg !10291
  %29 = load i8*, i8** %28, align 4, !dbg !10291
  call void @llvm.dbg.value(metadata i8* %29, metadata !10261, metadata !DIExpression()), !dbg !10263
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %3, i8* noundef %1) #22, !dbg !10292
  store i8* %29, i8** %28, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata i32 1, metadata !10259, metadata !DIExpression()), !dbg !10263
  br label %30, !dbg !10294

30:                                               ; preds = %20, %26
  %31 = phi i32 [ 1, %26 ], [ 0, %20 ], !dbg !10295
  %32 = extractvalue { i32, i32 } %21, 0, !dbg !10281
  call void @llvm.dbg.value(metadata i32 %32, metadata !10093, metadata !DIExpression()) #19, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %32, metadata !10260, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %31, metadata !10259, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 undef, metadata !10128, metadata !DIExpression()) #19, !dbg !10296
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %32) #19, !dbg !10298, !srcloc !10134
  ret i32 %31, !dbg !10299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaiting(i8* noundef %0) local_unnamed_addr #0 !dbg !10300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10305, metadata !DIExpression()), !dbg !10307
  %2 = icmp eq i8* %0, null, !dbg !10308
  br i1 %2, label %3, label %4, !dbg !10310

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1695) #20, !dbg !10311
  br label %4, !dbg !10311

4:                                                ; preds = %3, %1
  tail call void @vPortEnterCritical() #20, !dbg !10313
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10314
  %6 = bitcast i8* %5 to i32*, !dbg !10314
  %7 = load volatile i32, i32* %6, align 4, !dbg !10314
  call void @llvm.dbg.value(metadata i32 %7, metadata !10306, metadata !DIExpression()), !dbg !10307
  tail call void @vPortExitCritical() #20, !dbg !10316
  ret i32 %7, !dbg !10317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueSpacesAvailable(i8* noundef %0) local_unnamed_addr #0 !dbg !10318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10320, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.value(metadata i8* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  %2 = icmp eq i8* %0, null, !dbg !10324
  br i1 %2, label %3, label %4, !dbg !10326

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1713) #20, !dbg !10327
  br label %4, !dbg !10327

4:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  tail call void @vPortEnterCritical() #20, !dbg !10329
  %5 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10330
  %6 = bitcast i8* %5 to i32*, !dbg !10330
  %7 = load i32, i32* %6, align 4, !dbg !10330
  %8 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10332
  %9 = bitcast i8* %8 to i32*, !dbg !10332
  %10 = load volatile i32, i32* %9, align 4, !dbg !10332
  %11 = sub i32 %7, %10, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %11, metadata !10321, metadata !DIExpression()), !dbg !10323
  tail call void @vPortExitCritical() #20, !dbg !10334
  ret i32 %11, !dbg !10335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaitingFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10338, metadata !DIExpression()), !dbg !10340
  %2 = icmp eq i8* %0, null, !dbg !10341
  br i1 %2, label %3, label %4, !dbg !10343

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1729) #20, !dbg !10344
  br label %4, !dbg !10344

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10346
  %6 = bitcast i8* %5 to i32*, !dbg !10346
  %7 = load volatile i32, i32* %6, align 4, !dbg !10346
  call void @llvm.dbg.value(metadata i32 %7, metadata !10339, metadata !DIExpression()), !dbg !10340
  ret i32 %7, !dbg !10347
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !10348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10352, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i8* %0, metadata !10353, metadata !DIExpression()), !dbg !10354
  %2 = icmp eq i8* %0, null, !dbg !10355
  br i1 %2, label %3, label %4, !dbg !10357

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1741) #20, !dbg !10358
  br label %4, !dbg !10358

4:                                                ; preds = %3, %1
  tail call void @vQueueUnregisterQueue(i8* noundef %0) #22, !dbg !10360
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !10362
  ret void, !dbg !10363
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueUnregisterQueue(i8* noundef readnone %0) local_unnamed_addr #15 !dbg !10364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10366, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata i32 0, metadata !10367, metadata !DIExpression()), !dbg !10368
  br label %2, !dbg !10369

2:                                                ; preds = %1, %9
  %3 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !10367, metadata !DIExpression()), !dbg !10368
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !10371
  %5 = load i8*, i8** %4, align 4, !dbg !10371
  %6 = icmp eq i8* %5, %0, !dbg !10375
  br i1 %6, label %7, label %9, !dbg !10376

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !10377
  store i8* null, i8** %8, align 4, !dbg !10379
  br label %12, !dbg !10380

9:                                                ; preds = %2
  %10 = add nuw nsw i32 %3, 1, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %10, metadata !10367, metadata !DIExpression()), !dbg !10368
  %11 = icmp eq i32 %10, 8, !dbg !10382
  br i1 %11, label %12, label %2, !dbg !10369, !llvm.loop !10383

12:                                               ; preds = %9, %7
  ret void, !dbg !10385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10386 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10390, metadata !DIExpression()), !dbg !10391
  %2 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10392
  %3 = bitcast i8* %2 to i32*, !dbg !10392
  %4 = load i32, i32* %3, align 4, !dbg !10392
  ret i32 %4, !dbg !10393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vQueueSetQueueNumber(i8* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !10394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10398, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i32 %1, metadata !10399, metadata !DIExpression()), !dbg !10400
  %3 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10401
  %4 = bitcast i8* %3 to i32*, !dbg !10401
  store i32 %1, i32* %4, align 4, !dbg !10402
  ret void, !dbg !10403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10404 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10408, metadata !DIExpression()), !dbg !10409
  %2 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !10410
  %3 = load i8, i8* %2, align 4, !dbg !10410
  ret i8 %3, !dbg !10411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueEmptyFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10412 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10416, metadata !DIExpression()), !dbg !10418
  %2 = icmp eq i8* %0, null, !dbg !10419
  br i1 %2, label %3, label %4, !dbg !10421

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 2015) #20, !dbg !10422
  br label %4, !dbg !10422

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10424
  %6 = bitcast i8* %5 to i32*, !dbg !10424
  %7 = load volatile i32, i32* %6, align 4, !dbg !10424
  %8 = icmp eq i32 %7, 0, !dbg !10426
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !10417, metadata !DIExpression()), !dbg !10418
  ret i32 %9, !dbg !10427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueFullFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10428 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10430, metadata !DIExpression()), !dbg !10432
  %2 = icmp eq i8* %0, null, !dbg !10433
  br i1 %2, label %3, label %4, !dbg !10435

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 2054) #20, !dbg !10436
  br label %4, !dbg !10436

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10438
  %6 = bitcast i8* %5 to i32*, !dbg !10438
  %7 = load volatile i32, i32* %6, align 4, !dbg !10438
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10440
  %9 = bitcast i8* %8 to i32*, !dbg !10440
  %10 = load i32, i32* %9, align 4, !dbg !10440
  %11 = icmp eq i32 %7, %10, !dbg !10441
  %12 = zext i1 %11 to i32
  call void @llvm.dbg.value(metadata i32 %12, metadata !10431, metadata !DIExpression()), !dbg !10432
  ret i32 %12, !dbg !10442
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueAddToRegistry(i8* noundef %0, i8* noundef %1) local_unnamed_addr #15 !dbg !10443 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10447, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata i8* %1, metadata !10448, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata i32 0, metadata !10449, metadata !DIExpression()), !dbg !10450
  br label %3, !dbg !10451

3:                                                ; preds = %2, %10
  %4 = phi i32 [ 0, %2 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !10449, metadata !DIExpression()), !dbg !10450
  %5 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 0, !dbg !10453
  %6 = load i8*, i8** %5, align 4, !dbg !10453
  %7 = icmp eq i8* %6, null, !dbg !10457
  br i1 %7, label %8, label %10, !dbg !10458

8:                                                ; preds = %3
  store i8* %1, i8** %5, align 4, !dbg !10459
  %9 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 1, !dbg !10461
  store i8* %0, i8** %9, align 4, !dbg !10462
  br label %13, !dbg !10463

10:                                               ; preds = %3
  %11 = add nuw nsw i32 %4, 1, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %11, metadata !10449, metadata !DIExpression()), !dbg !10450
  %12 = icmp eq i32 %11, 8, !dbg !10465
  br i1 %12, label %13, label %3, !dbg !10451, !llvm.loop !10466

13:                                               ; preds = %10, %8
  ret void, !dbg !10468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueWaitForMessageRestricted(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10469 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10473, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %1, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i8* %0, metadata !10475, metadata !DIExpression()), !dbg !10476
  tail call void @vPortEnterCritical() #20, !dbg !10477
  %3 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !10478
  %4 = bitcast i8* %3 to i32*, !dbg !10478
  %5 = load volatile i32, i32* %4, align 4, !dbg !10478
  %6 = icmp eq i32 %5, -1, !dbg !10478
  br i1 %6, label %7, label %8, !dbg !10481

7:                                                ; preds = %2
  store volatile i32 0, i32* %4, align 4, !dbg !10482
  br label %8, !dbg !10482

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10484
  %10 = bitcast i8* %9 to i32*, !dbg !10484
  %11 = load volatile i32, i32* %10, align 4, !dbg !10484
  %12 = icmp eq i32 %11, -1, !dbg !10484
  br i1 %12, label %13, label %14, !dbg !10481

13:                                               ; preds = %8
  store volatile i32 0, i32* %10, align 4, !dbg !10486
  br label %14, !dbg !10486

14:                                               ; preds = %13, %8
  tail call void @vPortExitCritical() #20, !dbg !10477
  %15 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10488
  %16 = bitcast i8* %15 to i32*, !dbg !10488
  %17 = load volatile i32, i32* %16, align 4, !dbg !10488
  %18 = icmp eq i32 %17, 0, !dbg !10490
  br i1 %18, label %19, label %22, !dbg !10491

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10492
  %21 = bitcast i8* %20 to %struct.xLIST*, !dbg !10492
  tail call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef nonnull %21, i32 noundef %1) #20, !dbg !10494
  br label %22, !dbg !10495

22:                                               ; preds = %14, %19
  %23 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10496
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %23, metadata !10475, metadata !DIExpression()), !dbg !10476
  tail call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %23) #22, !dbg !10497
  ret void, !dbg !10498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #0 !dbg !10499 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10501, metadata !DIExpression()), !dbg !10502
  tail call fastcc void @prvCheckForValidListAndQueue() #22, !dbg !10503
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !10504
  %2 = icmp eq i8* %1, null, !dbg !10506
  br i1 %2, label %6, label %3, !dbg !10507

3:                                                ; preds = %0
  %4 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvTimerTask, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i32 0, i32 0), i16 noundef zeroext 2048, i8* noundef null, i32 noundef 19, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #20, !dbg !10508
  call void @llvm.dbg.value(metadata i32 %4, metadata !10501, metadata !DIExpression()), !dbg !10502
  %5 = icmp eq i32 %4, 0, !dbg !10511
  br i1 %5, label %6, label %7, !dbg !10513

6:                                                ; preds = %0, %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 270) #20, !dbg !10514
  br label %7, !dbg !10514

7:                                                ; preds = %6, %3
  %8 = phi i32 [ 0, %6 ], [ %4, %3 ]
  ret i32 %8, !dbg !10516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckForValidListAndQueue() unnamed_addr #0 !dbg !10517 {
  tail call void @vPortEnterCritical() #20, !dbg !10518
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !10519
  %2 = icmp eq i8* %1, null, !dbg !10522
  br i1 %2, label %3, label %11, !dbg !10523

3:                                                ; preds = %0
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList1) #20, !dbg !10524
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList2) #20, !dbg !10526
  store %struct.xLIST* @xActiveTimerList1, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10527
  store %struct.xLIST* @xActiveTimerList2, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !10528
  %4 = tail call i8* @xQueueGenericCreate(i32 noundef 10, i32 noundef 12, i8 noundef zeroext 0) #20, !dbg !10529
  store i8* %4, i8** @xTimerQueue, align 4, !dbg !10530
  %5 = icmp eq i8* %4, null, !dbg !10531
  br i1 %5, label %6, label %9, !dbg !10533

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 784) #20, !dbg !10534
  %7 = load i8*, i8** @xTimerQueue, align 4, !dbg !10536
  %8 = icmp eq i8* %7, null, !dbg !10539
  br i1 %8, label %11, label %9, !dbg !10540

9:                                                ; preds = %3, %6
  %10 = phi i8* [ %7, %6 ], [ %4, %3 ]
  tail call void @vQueueAddToRegistry(i8* noundef nonnull %10, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.155, i32 0, i32 0)) #20, !dbg !10541
  br label %11, !dbg !10543

11:                                               ; preds = %0, %9, %6
  tail call void @vPortExitCritical() #20, !dbg !10544
  ret void, !dbg !10545
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTimerTask(i8* nocapture noundef readnone %0) #12 !dbg !10546 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10548, metadata !DIExpression()), !dbg !10551
  %3 = bitcast i32* %2 to i8*, !dbg !10552
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !10552
  br label %4, !dbg !10553

4:                                                ; preds = %4, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10550, metadata !DIExpression(DW_OP_deref)), !dbg !10551
  %5 = call fastcc i32 @prvGetNextExpireTime(i32* noundef nonnull %2) #22, !dbg !10554
  call void @llvm.dbg.value(metadata i32 %5, metadata !10549, metadata !DIExpression()), !dbg !10551
  %6 = load i32, i32* %2, align 4, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %6, metadata !10550, metadata !DIExpression()), !dbg !10551
  tail call fastcc void @prvProcessTimerOrBlockTask(i32 noundef %5, i32 noundef %6) #22, !dbg !10559
  tail call fastcc void @prvProcessReceivedCommands() #22, !dbg !10560
  br label %4, !dbg !10561, !llvm.loop !10562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @prvGetNextExpireTime(i32* nocapture noundef writeonly %0) unnamed_addr #14 !dbg !10565 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !10567, metadata !DIExpression()), !dbg !10569
  %2 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10570
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !10570
  %4 = load i32, i32* %3, align 4, !dbg !10570
  %5 = icmp eq i32 %4, 0, !dbg !10570
  %6 = zext i1 %5 to i32, !dbg !10570
  store i32 %6, i32* %0, align 4, !dbg !10571
  br i1 %5, label %12, label %7, !dbg !10572

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !10573
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !10573
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 0, !dbg !10573
  %11 = load i32, i32* %10, align 4, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %11, metadata !10568, metadata !DIExpression()), !dbg !10569
  br label %12, !dbg !10576

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ], !dbg !10577
  call void @llvm.dbg.value(metadata i32 %13, metadata !10568, metadata !DIExpression()), !dbg !10569
  ret i32 %13, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessTimerOrBlockTask(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !10579 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10583, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()), !dbg !10587
  %4 = bitcast i32* %3 to i8*, !dbg !10588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !10588
  tail call void @vTaskSuspendAll() #20, !dbg !10589
  call void @llvm.dbg.value(metadata i32* %3, metadata !10586, metadata !DIExpression(DW_OP_deref)), !dbg !10587
  %5 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %3) #22, !dbg !10590
  call void @llvm.dbg.value(metadata i32 %5, metadata !10585, metadata !DIExpression()), !dbg !10587
  %6 = load i32, i32* %3, align 4, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %6, metadata !10586, metadata !DIExpression()), !dbg !10587
  %7 = icmp eq i32 %6, 0, !dbg !10594
  br i1 %7, label %8, label %20, !dbg !10595

8:                                                ; preds = %2
  %9 = icmp ne i32 %1, 0, !dbg !10596
  %10 = icmp ult i32 %5, %0
  %11 = select i1 %9, i1 true, i1 %10, !dbg !10599
  br i1 %11, label %14, label %12, !dbg !10599

12:                                               ; preds = %8
  %13 = tail call i32 @xTaskResumeAll() #20, !dbg !10600
  tail call fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %5) #22, !dbg !10602
  br label %22, !dbg !10603

14:                                               ; preds = %8
  %15 = load i8*, i8** @xTimerQueue, align 4, !dbg !10604
  %16 = sub i32 %0, %5, !dbg !10606
  tail call void @vQueueWaitForMessageRestricted(i8* noundef %15, i32 noundef %16) #20, !dbg !10607
  %17 = tail call i32 @xTaskResumeAll() #20, !dbg !10608
  %18 = icmp eq i32 %17, 0, !dbg !10610
  br i1 %18, label %19, label %22, !dbg !10611

19:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10612
  tail call void asm sideeffect "dsb", ""() #19, !dbg !10612, !srcloc !10615
  tail call void asm sideeffect "isb", ""() #19, !dbg !10612, !srcloc !10616
  br label %22, !dbg !10617

20:                                               ; preds = %2
  %21 = tail call i32 @xTaskResumeAll() #20, !dbg !10618
  br label %22

22:                                               ; preds = %12, %14, %19, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !10620
  ret void, !dbg !10620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessReceivedCommands() unnamed_addr #0 !dbg !10621 {
  %1 = alloca %struct.tmrTimerQueueMessage, align 4
  %2 = alloca i32, align 4
  %3 = bitcast %struct.tmrTimerQueueMessage* %1 to i8*, !dbg !10641
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #19, !dbg !10641
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %1, metadata !10623, metadata !DIExpression()), !dbg !10642
  %4 = bitcast i32* %2 to i8*, !dbg !10643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !10643
  %5 = load i8*, i8** @xTimerQueue, align 4, !dbg !10644
  %6 = call i32 @xQueueGenericReceive(i8* noundef %5, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #20, !dbg !10644
  %7 = icmp eq i32 %6, 0, !dbg !10645
  br i1 %7, label %63, label %8, !dbg !10646

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 0
  %10 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 0
  br label %12, !dbg !10646

12:                                               ; preds = %8, %59
  %13 = load i32, i32* %9, align 4, !dbg !10647
  %14 = icmp sgt i32 %13, -1, !dbg !10650
  br i1 %14, label %15, label %59, !dbg !10651

15:                                               ; preds = %12
  %16 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %10, align 4, !dbg !10652
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !10637, metadata !DIExpression()), !dbg !10654
  %17 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, i32 4, !dbg !10655
  %18 = load i8*, i8** %17, align 4, !dbg !10655
  %19 = icmp eq i8* %18, null, !dbg !10655
  br i1 %19, label %23, label %20, !dbg !10657

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, !dbg !10655
  %22 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !10658
  br label %23, !dbg !10660

23:                                               ; preds = %15, %20
  call void @llvm.dbg.value(metadata i32* %2, metadata !10638, metadata !DIExpression(DW_OP_deref)), !dbg !10654
  %24 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %2) #22, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %24, metadata !10640, metadata !DIExpression()), !dbg !10654
  %25 = load i32, i32* %9, align 4, !dbg !10662
  switch i32 %25, label %59 [
    i32 1, label %26
    i32 6, label %26
    i32 2, label %26
    i32 7, label %26
    i32 0, label %26
    i32 5, label %57
    i32 9, label %47
    i32 4, label %47
  ], !dbg !10663

26:                                               ; preds = %23, %23, %23, %23, %23
  %27 = load i32, i32* %11, align 4, !dbg !10664
  %28 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !10667
  %29 = load i32, i32* %28, align 4, !dbg !10667
  %30 = add i32 %29, %27, !dbg !10668
  %31 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %30, i32 noundef %24, i32 noundef %27) #22, !dbg !10669
  %32 = icmp eq i32 %31, 1, !dbg !10670
  br i1 %32, label %33, label %59, !dbg !10671

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 5, !dbg !10672
  %35 = load void (i8*)*, void (i8*)** %34, align 4, !dbg !10672
  %36 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !10674
  call void %35(i8* noundef %36) #20, !dbg !10675
  %37 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 3, !dbg !10676
  %38 = load i32, i32* %37, align 4, !dbg !10676
  %39 = icmp eq i32 %38, 1, !dbg !10678
  br i1 %39, label %40, label %59, !dbg !10679

40:                                               ; preds = %33
  %41 = load i32, i32* %11, align 4, !dbg !10680
  %42 = load i32, i32* %28, align 4, !dbg !10682
  %43 = add i32 %42, %41, !dbg !10683
  %44 = call i32 @xTimerGenericCommand(i8* noundef nonnull %36, i32 noundef 0, i32 noundef %43, i32* noundef null, i32 noundef 0) #22, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %44, metadata !10639, metadata !DIExpression()), !dbg !10654
  %45 = icmp eq i32 %44, 0, !dbg !10685
  br i1 %45, label %46, label %59, !dbg !10687

46:                                               ; preds = %40
  call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 662) #20, !dbg !10688
  br label %59, !dbg !10688

47:                                               ; preds = %23, %23
  %48 = load i32, i32* %11, align 4, !dbg !10690
  %49 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !10691
  store i32 %48, i32* %49, align 4, !dbg !10692
  %50 = icmp eq i32 %48, 0, !dbg !10693
  br i1 %50, label %51, label %53, !dbg !10695

51:                                               ; preds = %47
  call void @platform_assert(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 685) #20, !dbg !10696
  %52 = load i32, i32* %49, align 4, !dbg !10698
  br label %53, !dbg !10696

53:                                               ; preds = %51, %47
  %54 = phi i32 [ %52, %51 ], [ %48, %47 ], !dbg !10698
  %55 = add i32 %54, %24, !dbg !10699
  %56 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %55, i32 noundef %24, i32 noundef %24) #22, !dbg !10700
  br label %59, !dbg !10701

57:                                               ; preds = %23
  %58 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !10702
  call void @vPortFree(i8* noundef %58) #20, !dbg !10703
  br label %59, !dbg !10704

59:                                               ; preds = %40, %46, %53, %57, %26, %33, %23, %12
  %60 = load i8*, i8** @xTimerQueue, align 4, !dbg !10644
  %61 = call i32 @xQueueGenericReceive(i8* noundef %60, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #20, !dbg !10644
  %62 = icmp eq i32 %61, 0, !dbg !10645
  br i1 %62, label %63, label %12, !dbg !10646, !llvm.loop !10705

63:                                               ; preds = %59, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !10707
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #19, !dbg !10707
  ret void, !dbg !10707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvSampleTimeNow(i32* nocapture noundef writeonly %0) unnamed_addr #0 !dbg !1097 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !1103, metadata !DIExpression()), !dbg !10708
  %2 = tail call i32 @xTaskGetTickCount() #20, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %2, metadata !1104, metadata !DIExpression()), !dbg !10708
  %3 = load i32, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !10710
  %4 = icmp ult i32 %2, %3, !dbg !10712
  br i1 %4, label %5, label %6, !dbg !10713

5:                                                ; preds = %1
  tail call fastcc void @prvSwitchTimerLists() #22, !dbg !10714
  br label %6, !dbg !10716

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 1, %5 ], [ 0, %1 ], !dbg !10717
  store i32 %7, i32* %0, align 4, !dbg !10717
  store i32 %2, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !10718
  ret i32 %2, !dbg !10719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 !dbg !10720 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !10725, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 %1, metadata !10726, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 %2, metadata !10727, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 %3, metadata !10728, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 0, metadata !10729, metadata !DIExpression()), !dbg !10730
  %5 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, !dbg !10731
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 0, !dbg !10731
  store i32 %1, i32* %6, align 4, !dbg !10731
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, i32 3, !dbg !10732
  %8 = bitcast i8** %7 to %struct.tmrTimerControl**, !dbg !10732
  store %struct.tmrTimerControl* %0, %struct.tmrTimerControl** %8, align 4, !dbg !10732
  %9 = icmp ugt i32 %1, %2, !dbg !10733
  br i1 %9, label %15, label %10, !dbg !10735

10:                                               ; preds = %4
  %11 = sub i32 %2, %3, !dbg !10736
  %12 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 2, !dbg !10739
  %13 = load i32, i32* %12, align 4, !dbg !10739
  %14 = icmp ult i32 %11, %13, !dbg !10740
  br i1 %14, label %19, label %22, !dbg !10741

15:                                               ; preds = %4
  %16 = icmp uge i32 %2, %3, !dbg !10742
  %17 = icmp ult i32 %1, %3
  %18 = or i1 %16, %17, !dbg !10745
  br i1 %18, label %19, label %22, !dbg !10745

19:                                               ; preds = %15, %10
  %20 = phi %struct.xLIST** [ @pxOverflowTimerList, %10 ], [ @pxCurrentTimerList, %15 ]
  %21 = load %struct.xLIST*, %struct.xLIST** %20, align 4, !dbg !10746
  tail call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %5) #20, !dbg !10746
  br label %22, !dbg !10747

22:                                               ; preds = %19, %15, %10
  %23 = phi i32 [ 1, %10 ], [ 1, %15 ], [ 0, %19 ], !dbg !10730
  call void @llvm.dbg.value(metadata i32 %23, metadata !10729, metadata !DIExpression()), !dbg !10730
  ret i32 %23, !dbg !10747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGenericCommand(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32 noundef %4) local_unnamed_addr #0 !dbg !10748 {
  %6 = alloca %struct.tmrTimerQueueMessage, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10752, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 %1, metadata !10753, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 %2, metadata !10754, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32* %3, metadata !10755, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 %4, metadata !10756, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 0, metadata !10757, metadata !DIExpression()), !dbg !10759
  %7 = bitcast %struct.tmrTimerQueueMessage* %6 to i8*, !dbg !10760
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #19, !dbg !10760
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %6, metadata !10758, metadata !DIExpression()), !dbg !10761
  %8 = load i8*, i8** @xTimerQueue, align 4, !dbg !10762
  %9 = icmp eq i8* %8, null, !dbg !10764
  br i1 %9, label %26, label %10, !dbg !10765

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 0, !dbg !10766
  store i32 %1, i32* %11, align 4, !dbg !10768
  %12 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 0, !dbg !10769
  store i32 %2, i32* %12, align 4, !dbg !10770
  %13 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 1, !dbg !10771
  %14 = bitcast %struct.tmrTimerControl** %13 to i8**, !dbg !10772
  store i8* %0, i8** %14, align 4, !dbg !10772
  %15 = icmp slt i32 %1, 6, !dbg !10773
  br i1 %15, label %16, label %24, !dbg !10775

16:                                               ; preds = %10
  %17 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !10776
  %18 = icmp eq i32 %17, 2, !dbg !10779
  %19 = load i8*, i8** @xTimerQueue, align 4, !dbg !10780
  br i1 %18, label %20, label %22, !dbg !10781

20:                                               ; preds = %16
  %21 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef %4, i32 noundef 0) #20, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %21, metadata !10757, metadata !DIExpression()), !dbg !10759
  br label %26, !dbg !10784

22:                                               ; preds = %16
  %23 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef 0, i32 noundef 0) #20, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %23, metadata !10757, metadata !DIExpression()), !dbg !10759
  br label %26

24:                                               ; preds = %10
  %25 = call i32 @xQueueGenericSendFromISR(i8* noundef nonnull %8, i8* noundef nonnull %7, i32* noundef %3, i32 noundef 0) #20, !dbg !10787
  call void @llvm.dbg.value(metadata i32 %25, metadata !10757, metadata !DIExpression()), !dbg !10759
  br label %26

26:                                               ; preds = %5, %24, %22, %20
  %27 = phi i32 [ %21, %20 ], [ %23, %22 ], [ %25, %24 ], [ 0, %5 ], !dbg !10759
  call void @llvm.dbg.value(metadata i32 %27, metadata !10757, metadata !DIExpression()), !dbg !10759
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #19, !dbg !10789
  ret i32 %27, !dbg !10790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSwitchTimerLists() unnamed_addr #0 !dbg !10791 {
  %1 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10798
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !10798
  %3 = load i32, i32* %2, align 4, !dbg !10798
  %4 = icmp eq i32 %3, 0, !dbg !10798
  br i1 %4, label %43, label %5, !dbg !10799

5:                                                ; preds = %0, %38
  %6 = phi %struct.xLIST* [ %39, %38 ], [ %1, %0 ]
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !10800
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !10800
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 0, !dbg !10800
  %10 = load i32, i32* %9, align 4, !dbg !10800
  call void @llvm.dbg.value(metadata i32 %10, metadata !10793, metadata !DIExpression()), !dbg !10802
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !10803
  %12 = load i8*, i8** %11, align 4, !dbg !10803
  call void @llvm.dbg.value(metadata i8* %12, metadata !10796, metadata !DIExpression()), !dbg !10802
  %13 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !10804
  %14 = bitcast i8* %13 to %struct.xLIST_ITEM*, !dbg !10804
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %14) #20, !dbg !10805
  %16 = getelementptr inbounds i8, i8* %12, i32 36, !dbg !10806
  %17 = bitcast i8* %16 to void (i8*)**, !dbg !10806
  %18 = load void (i8*)*, void (i8*)** %17, align 4, !dbg !10806
  tail call void %18(i8* noundef %12) #20, !dbg !10807
  %19 = getelementptr inbounds i8, i8* %12, i32 28, !dbg !10808
  %20 = bitcast i8* %19 to i32*, !dbg !10808
  %21 = load i32, i32* %20, align 4, !dbg !10808
  %22 = icmp eq i32 %21, 1, !dbg !10810
  br i1 %22, label %23, label %38, !dbg !10811

23:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %12, metadata !10796, metadata !DIExpression()), !dbg !10802
  %24 = getelementptr inbounds i8, i8* %12, i32 24, !dbg !10812
  %25 = bitcast i8* %24 to i32*, !dbg !10812
  %26 = load i32, i32* %25, align 4, !dbg !10812
  %27 = add i32 %26, %10, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %27, metadata !10794, metadata !DIExpression()), !dbg !10802
  %28 = icmp ugt i32 %27, %10, !dbg !10815
  br i1 %28, label %29, label %34, !dbg !10817

29:                                               ; preds = %23
  %30 = bitcast i8* %13 to i32*, !dbg !10818
  store i32 %27, i32* %30, align 4, !dbg !10818
  %31 = getelementptr inbounds i8, i8* %12, i32 16, !dbg !10820
  %32 = bitcast i8* %31 to i8**, !dbg !10820
  store i8* %12, i8** %32, align 4, !dbg !10820
  %33 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10821
  tail call void @vListInsert(%struct.xLIST* noundef %33, %struct.xLIST_ITEM* noundef nonnull %14) #20, !dbg !10822
  br label %38, !dbg !10823

34:                                               ; preds = %23
  %35 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %12, i32 noundef 0, i32 noundef %10, i32* noundef null, i32 noundef 0) #22, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %35, metadata !10797, metadata !DIExpression()), !dbg !10802
  %36 = icmp eq i32 %35, 0, !dbg !10826
  br i1 %36, label %37, label %38, !dbg !10828

37:                                               ; preds = %34
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 754) #20, !dbg !10829
  br label %38, !dbg !10829

38:                                               ; preds = %34, %37, %5, %29
  %39 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10798
  %40 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %39, i32 0, i32 0, !dbg !10798
  %41 = load i32, i32* %40, align 4, !dbg !10798
  %42 = icmp eq i32 %41, 0, !dbg !10798
  br i1 %42, label %43, label %5, !dbg !10799, !llvm.loop !10831

43:                                               ; preds = %38, %0
  %44 = phi %struct.xLIST* [ %1, %0 ], [ %39, %38 ], !dbg !10798
  call void @llvm.dbg.value(metadata %struct.xLIST* %44, metadata !10795, metadata !DIExpression()), !dbg !10802
  %45 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !10833
  store %struct.xLIST* %45, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10834
  store %struct.xLIST* %44, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !10835
  ret void, !dbg !10836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !10837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10841, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 %1, metadata !10842, metadata !DIExpression()), !dbg !10845
  %3 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10846
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 2, i32 1, !dbg !10846
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !10846
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 3, !dbg !10846
  %7 = load i8*, i8** %6, align 4, !dbg !10846
  call void @llvm.dbg.value(metadata i8* %7, metadata !10844, metadata !DIExpression()), !dbg !10845
  %8 = getelementptr inbounds i8, i8* %7, i32 4, !dbg !10847
  %9 = bitcast i8* %8 to %struct.xLIST_ITEM*, !dbg !10847
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !10848
  %11 = getelementptr inbounds i8, i8* %7, i32 28, !dbg !10849
  %12 = bitcast i8* %11 to i32*, !dbg !10849
  %13 = load i32, i32* %12, align 4, !dbg !10849
  %14 = icmp eq i32 %13, 1, !dbg !10851
  br i1 %14, label %15, label %27, !dbg !10852

15:                                               ; preds = %2
  %16 = bitcast i8* %7 to %struct.tmrTimerControl*, !dbg !10853
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !10844, metadata !DIExpression()), !dbg !10845
  %17 = getelementptr inbounds i8, i8* %7, i32 24, !dbg !10854
  %18 = bitcast i8* %17 to i32*, !dbg !10854
  %19 = load i32, i32* %18, align 4, !dbg !10854
  %20 = add i32 %19, %0, !dbg !10857
  %21 = tail call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %16, i32 noundef %20, i32 noundef %1, i32 noundef %0) #22, !dbg !10858
  %22 = icmp eq i32 %21, 1, !dbg !10859
  br i1 %22, label %23, label %27, !dbg !10860

23:                                               ; preds = %15
  %24 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %7, i32 noundef 0, i32 noundef %0, i32* noundef null, i32 noundef 0) #22, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %24, metadata !10843, metadata !DIExpression()), !dbg !10845
  %25 = icmp eq i32 %24, 0, !dbg !10863
  br i1 %25, label %26, label %27, !dbg !10865

26:                                               ; preds = %23
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 400) #20, !dbg !10866
  br label %27, !dbg !10866

27:                                               ; preds = %23, %26, %2, %15
  %28 = getelementptr inbounds i8, i8* %7, i32 36, !dbg !10868
  %29 = bitcast i8* %28 to void (i8*)**, !dbg !10868
  %30 = load void (i8*)*, void (i8*)** %29, align 4, !dbg !10868
  tail call void %30(i8* noundef nonnull %7) #20, !dbg !10869
  ret void, !dbg !10870
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xTimerCreate(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (i8*)* noundef %4) local_unnamed_addr #0 !dbg !10871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10875, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata i32 %1, metadata !10876, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata i32 %2, metadata !10877, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata i8* %3, metadata !10878, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata void (i8*)* %4, metadata !10879, metadata !DIExpression()), !dbg !10881
  %6 = icmp eq i32 %1, 0, !dbg !10882
  br i1 %6, label %22, label %7, !dbg !10884

7:                                                ; preds = %5
  %8 = tail call i8* @pvPortMalloc(i32 noundef 44) #20, !dbg !10885
  call void @llvm.dbg.value(metadata i8* %8, metadata !10880, metadata !DIExpression()), !dbg !10881
  %9 = icmp eq i8* %8, null, !dbg !10887
  br i1 %9, label %23, label %10, !dbg !10889

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %8, metadata !10880, metadata !DIExpression()), !dbg !10881
  tail call fastcc void @prvCheckForValidListAndQueue() #22, !dbg !10890
  %11 = bitcast i8* %8 to i8**, !dbg !10892
  store i8* %0, i8** %11, align 4, !dbg !10893
  %12 = getelementptr inbounds i8, i8* %8, i32 24, !dbg !10894
  %13 = bitcast i8* %12 to i32*, !dbg !10894
  store i32 %1, i32* %13, align 4, !dbg !10895
  %14 = getelementptr inbounds i8, i8* %8, i32 28, !dbg !10896
  %15 = bitcast i8* %14 to i32*, !dbg !10896
  store i32 %2, i32* %15, align 4, !dbg !10897
  %16 = getelementptr inbounds i8, i8* %8, i32 32, !dbg !10898
  %17 = bitcast i8* %16 to i8**, !dbg !10898
  store i8* %3, i8** %17, align 4, !dbg !10899
  %18 = getelementptr inbounds i8, i8* %8, i32 36, !dbg !10900
  %19 = bitcast i8* %18 to void (i8*)**, !dbg !10900
  store void (i8*)* %4, void (i8*)** %19, align 4, !dbg !10901
  %20 = getelementptr inbounds i8, i8* %8, i32 4, !dbg !10902
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !10902
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !10903
  br label %23, !dbg !10904

22:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* undef, metadata !10880, metadata !DIExpression()), !dbg !10881
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 310) #20, !dbg !10905
  br label %23, !dbg !10905

23:                                               ; preds = %7, %10, %22
  %24 = phi i8* [ null, %22 ], [ null, %7 ], [ %8, %10 ]
  ret i8* %24, !dbg !10908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pcTimerGetTimerName(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10909 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10913, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i8* %0, metadata !10914, metadata !DIExpression()), !dbg !10915
  %2 = bitcast i8* %0 to i8**, !dbg !10916
  %3 = load i8*, i8** %2, align 4, !dbg !10916
  ret i8* %3, !dbg !10917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerIsTimerActive(i8* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !10918 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10922, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.value(metadata i8* %0, metadata !10924, metadata !DIExpression()), !dbg !10925
  tail call void @vPortEnterCritical() #20, !dbg !10926
  %2 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10927
  %3 = bitcast i8* %2 to i8**, !dbg !10927
  %4 = load i8*, i8** %3, align 4, !dbg !10927
  %5 = icmp ne i8* %4, null, !dbg !10927
  %6 = zext i1 %5 to i32, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %6, metadata !10923, metadata !DIExpression()), !dbg !10925
  tail call void @vPortExitCritical() #20, !dbg !10930
  ret i32 %6, !dbg !10931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pvTimerGetTimerID(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10937, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i8* %0, metadata !10938, metadata !DIExpression()), !dbg !10939
  %2 = getelementptr inbounds i8, i8* %0, i32 32, !dbg !10940
  %3 = bitcast i8* %2 to i8**, !dbg !10940
  %4 = load i8*, i8** %3, align 4, !dbg !10940
  ret i8* %4, !dbg !10941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #4 !dbg !10942 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !10946, metadata !DIExpression()), !dbg !10949
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !10947, metadata !DIExpression()), !dbg !10949
  call void @llvm.dbg.value(metadata i8* %2, metadata !10948, metadata !DIExpression()), !dbg !10949
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !10950
  call void @llvm.dbg.value(metadata i32* %4, metadata !10946, metadata !DIExpression()), !dbg !10949
  store i32 16777216, i32* %4, align 4, !dbg !10951
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !10952
  call void @llvm.dbg.value(metadata i32* %5, metadata !10946, metadata !DIExpression()), !dbg !10949
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !10953
  store i32 %6, i32* %5, align 4, !dbg !10954
  %7 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !10955
  call void @llvm.dbg.value(metadata i32* %7, metadata !10946, metadata !DIExpression()), !dbg !10949
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %7, align 4, !dbg !10956
  %8 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !10957
  call void @llvm.dbg.value(metadata i32* %8, metadata !10946, metadata !DIExpression()), !dbg !10949
  %9 = ptrtoint i8* %2 to i32, !dbg !10958
  store i32 %9, i32* %8, align 4, !dbg !10959
  %10 = getelementptr inbounds i32, i32* %0, i32 -9, !dbg !10960
  call void @llvm.dbg.value(metadata i32* %10, metadata !10946, metadata !DIExpression()), !dbg !10949
  store i32 -3, i32* %10, align 4, !dbg !10961
  %11 = getelementptr inbounds i32, i32* %0, i32 -17, !dbg !10962
  call void @llvm.dbg.value(metadata i32* %11, metadata !10946, metadata !DIExpression()), !dbg !10949
  ret i32* %11, !dbg !10963
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTaskExitError() #12 !dbg !10964 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !10965
  %2 = icmp eq i32 %1, -1, !dbg !10965
  br i1 %2, label %4, label %3, !dbg !10967

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 260) #20, !dbg !10968
  br label %4, !dbg !10968

4:                                                ; preds = %3, %0
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !10970, !srcloc !10975
  call void @llvm.dbg.value(metadata i32 %5, metadata !10973, metadata !DIExpression()) #19, !dbg !10976
  br label %6, !dbg !10977

6:                                                ; preds = %6, %4
  br label %6, !dbg !10978, !llvm.loop !10981
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortCurrentTaskStackOverflowCheck() local_unnamed_addr #0 !dbg !10984 {
  %1 = tail call i32 @uxTaskGetBottomOfStack(i8* noundef null) #20, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %1, metadata !10986, metadata !DIExpression()), !dbg !10989
  %2 = tail call i32 @hal_dwt_request_watchpoint(i32 noundef 3, i32 noundef %1, i32 noundef 3, i32 noundef 6) #20, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %2, metadata !10987, metadata !DIExpression()), !dbg !10989
  ret void, !dbg !10991
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @SVC_Handler() #16 section ".ramTEXT" !dbg !10992 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\0A\09cpsie i \09\09\09\09\09\09\0A\09bl hal_dwt_init                 \0A\09bl vPortCurrentTaskStackOverflowCheck \0A\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #19, !dbg !10993, !srcloc !10994
  unreachable, !dbg !10995
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #12 !dbg !10996 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !11003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11003
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10998, metadata !DIExpression()), !dbg !11004
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !11000, metadata !DIExpression()), !dbg !11005
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !11006
  call void @llvm.dbg.declare(metadata i8* %2, metadata !11002, metadata !DIExpression()), !dbg !11007
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11008
  %5 = zext i8 %4 to i32, !dbg !11008
  store volatile i32 %5, i32* %1, align 4, !dbg !11009
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11010
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11011
  store volatile i8 %6, i8* %2, align 1, !dbg !11012
  %7 = load volatile i8, i8* %2, align 1, !dbg !11013
  %8 = and i8 %7, -128, !dbg !11014
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !11015
  %9 = load volatile i8, i8* %2, align 1, !dbg !11016
  %10 = icmp slt i8 %9, 0, !dbg !11017
  br i1 %10, label %11, label %21, !dbg !11018

11:                                               ; preds = %0, %11
  %12 = phi i32 [ %13, %11 ], [ 7, %0 ], !dbg !11019
  %13 = add i32 %12, -1, !dbg !11019
  %14 = load volatile i8, i8* %2, align 1, !dbg !11021
  %15 = shl i8 %14, 1, !dbg !11021
  store volatile i8 %15, i8* %2, align 1, !dbg !11021
  %16 = load volatile i8, i8* %2, align 1, !dbg !11016
  %17 = icmp slt i8 %16, 0, !dbg !11017
  br i1 %17, label %11, label %18, !dbg !11018, !llvm.loop !11022

18:                                               ; preds = %11
  %19 = shl i32 %13, 8, !dbg !11024
  %20 = and i32 %19, 1792, !dbg !11024
  br label %21, !dbg !11024

21:                                               ; preds = %18, %0
  %22 = phi i32 [ %20, %18 ], [ 1792, %0 ]
  store i32 %22, i32* @ulMaxPRIGROUPValue, align 4, !dbg !11025
  %23 = load volatile i32, i32* %1, align 4, !dbg !11026
  %24 = trunc i32 %23 to i8, !dbg !11026
  store volatile i8 %24, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11027
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !11028
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11028
  %25 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11029
  %26 = or i32 %25, 14680064, !dbg !11029
  store volatile i32 %26, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11029
  %27 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11030
  %28 = or i32 %27, -2147483648, !dbg !11030
  store volatile i32 %28, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11030
  tail call void @vPortSetupTimerInterrupt() #22, !dbg !11031
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !11032
  tail call void @vPortEnableVFP() #22, !dbg !11033
  %29 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !11034
  %30 = or i32 %29, -1073741824, !dbg !11034
  store volatile i32 %30, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !11034
  tail call void @prvPortStartFirstTask() #22, !dbg !11035
  tail call void @prvTaskExitError() #22, !dbg !11036
  unreachable, !dbg !11037
}

; Function Attrs: naked noinline nounwind optsize
define internal void @vPortEnableVFP() #16 !dbg !11038 {
  tail call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09", ""() #19, !dbg !11039, !srcloc !11040
  unreachable, !dbg !11041
}

; Function Attrs: naked noinline nounwind optsize
define internal void @prvPortStartFirstTask() #16 !dbg !11042 {
  tail call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #19, !dbg !11043, !srcloc !11044
  unreachable, !dbg !11045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEndScheduler() local_unnamed_addr #0 !dbg !11046 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11047
  %2 = icmp eq i32 %1, 1000, !dbg !11047
  br i1 %2, label %4, label %3, !dbg !11049

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 421) #20, !dbg !11050
  br label %4, !dbg !11050

4:                                                ; preds = %3, %0
  ret void, !dbg !11052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEnterCritical() local_unnamed_addr #0 !dbg !11053 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !11054, !srcloc !10975
  call void @llvm.dbg.value(metadata i32 %1, metadata !10973, metadata !DIExpression()) #19, !dbg !11056
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11057
  %3 = add i32 %2, 1, !dbg !11057
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !11057
  %4 = icmp eq i32 %2, 0, !dbg !11058
  br i1 %4, label %5, label %10, !dbg !11060

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11061
  %7 = and i32 %6, 255, !dbg !11061
  %8 = icmp eq i32 %7, 0, !dbg !11061
  br i1 %8, label %10, label %9, !dbg !11064

9:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 437) #20, !dbg !11065
  br label %10, !dbg !11065

10:                                               ; preds = %5, %9, %0
  ret void, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortExitCritical() local_unnamed_addr #0 !dbg !11068 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11069
  %2 = icmp eq i32 %1, 0, !dbg !11069
  br i1 %2, label %3, label %5, !dbg !11071

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 444) #20, !dbg !11072
  %4 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11074
  br label %5, !dbg !11072

5:                                                ; preds = %3, %0
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !11074
  %7 = add i32 %6, -1, !dbg !11074
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !11074
  %8 = icmp eq i32 %7, 0, !dbg !11075
  br i1 %8, label %9, label %10, !dbg !11077

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !11078, metadata !DIExpression()) #19, !dbg !11081
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 0) #19, !dbg !11084, !srcloc !11085
  br label %10, !dbg !11086

10:                                               ; preds = %9, %5
  ret void, !dbg !11087
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @PendSV_Handler() #16 section ".ramTEXT" !dbg !11088 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\09\0A\09push {lr}\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\09\0A\09pop  {lr}\09\09\09\09\09\09\09\0A\09cpsie i \09\09\09\09\09\09\09\0A\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3}\09\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A   isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09bl vPortCurrentTaskStackOverflowCheck\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3}\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 128) #19, !dbg !11089, !srcloc !11090
  unreachable, !dbg !11091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SysTick_Handler() local_unnamed_addr #0 section ".ramTEXT" !dbg !11092 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !11095, !srcloc !11101
  call void @llvm.dbg.value(metadata i32 undef, metadata !11098, metadata !DIExpression()) #19, !dbg !11102
  call void @llvm.dbg.value(metadata i32 undef, metadata !11099, metadata !DIExpression()) #19, !dbg !11102
  call void @llvm.dbg.value(metadata i32 undef, metadata !11094, metadata !DIExpression()), !dbg !11103
  tail call void @Flash_ReturnReady() #20, !dbg !11104
  %2 = tail call i32 @xTaskIncrementTick() #20, !dbg !11106
  %3 = icmp eq i32 %2, 0, !dbg !11108
  br i1 %3, label %5, label %4, !dbg !11109

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11110
  br label %5, !dbg !11112

5:                                                ; preds = %4, %0
  %6 = extractvalue { i32, i32 } %1, 0, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %6, metadata !11098, metadata !DIExpression()) #19, !dbg !11102
  call void @llvm.dbg.value(metadata i32 %6, metadata !11094, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 undef, metadata !11078, metadata !DIExpression()) #19, !dbg !11113
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #19, !dbg !11115, !srcloc !11085
  ret void, !dbg !11116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #0 !dbg !11117 {
  %1 = tail call i32 asm sideeffect "mrs $0, ipsr", "=r"() #19, !dbg !11121, !srcloc !11122
  call void @llvm.dbg.value(metadata i32 %1, metadata !11119, metadata !DIExpression()), !dbg !11123
  %2 = icmp ugt i32 %1, 15, !dbg !11124
  br i1 %2, label %3, label %9, !dbg !11126

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !11127
  %5 = load volatile i8, i8* %4, align 1, !dbg !11127
  call void @llvm.dbg.value(metadata i8 %5, metadata !11120, metadata !DIExpression()), !dbg !11123
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !11129
  %7 = icmp ult i8 %5, %6, !dbg !11129
  br i1 %7, label %8, label %9, !dbg !11131

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 794) #20, !dbg !11132
  br label %9, !dbg !11132

9:                                                ; preds = %3, %8, %0
  %10 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !11134
  %11 = and i32 %10, 1792, !dbg !11134
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !11134
  %13 = icmp ugt i32 %11, %12, !dbg !11134
  br i1 %13, label %14, label %15, !dbg !11136

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 810) #20, !dbg !11137
  br label %15, !dbg !11137

15:                                               ; preds = %14, %9
  ret void, !dbg !11139
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMalloc(i32 noundef %0) local_unnamed_addr #0 !dbg !11140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11144, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i8* null, metadata !11148, metadata !DIExpression()), !dbg !11149
  tail call void @vTaskSuspendAll() #20, !dbg !11150
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11151
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !11154
  br i1 %3, label %4, label %5, !dbg !11155

4:                                                ; preds = %1
  tail call fastcc void @prvHeapInit() #22, !dbg !11156
  br label %5, !dbg !11158

5:                                                ; preds = %1, %4
  %6 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11159
  %7 = select i1 %6, i32 -2147483648, i32 0, !dbg !11159
  %8 = and i32 %7, %0, !dbg !11161
  %9 = icmp ne i32 %8, 0, !dbg !11162
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9, !dbg !11163
  br i1 %11, label %84, label %12, !dbg !11163

12:                                               ; preds = %5
  %13 = add i32 %0, 8, !dbg !11164
  call void @llvm.dbg.value(metadata i32 %13, metadata !11144, metadata !DIExpression()), !dbg !11149
  %14 = and i32 %0, 7, !dbg !11168
  %15 = icmp eq i32 %14, 0, !dbg !11170
  %16 = add i32 %0, 16, !dbg !11171
  %17 = and i32 %16, -8, !dbg !11171
  %18 = select i1 %15, i32 %13, i32 %17, !dbg !11171
  call void @llvm.dbg.value(metadata i32 %18, metadata !11144, metadata !DIExpression()), !dbg !11149
  %19 = icmp eq i32 %18, 0, !dbg !11172
  %20 = load i32, i32* @xFreeBytesRemaining, align 4
  %21 = icmp ugt i32 %18, %20
  %22 = select i1 %19, i1 true, i1 %21, !dbg !11174
  br i1 %22, label %84, label %23, !dbg !11174

23:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11146, metadata !DIExpression()), !dbg !11149
  %24 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !11175
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !11145, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11146, metadata !DIExpression()), !dbg !11149
  %25 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 1, !dbg !11177
  %26 = load i32, i32* %25, align 4, !dbg !11177
  %27 = icmp ult i32 %26, %18, !dbg !11178
  br i1 %27, label %28, label %42, !dbg !11179

28:                                               ; preds = %23
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11146, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !11145, metadata !DIExpression()), !dbg !11149
  %29 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 0, !dbg !11180
  %30 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %29, align 4, !dbg !11180
  %31 = icmp eq %struct.A_BLOCK_LINK* %30, null, !dbg !11181
  br i1 %31, label %42, label %32, !dbg !11182, !llvm.loop !11183

32:                                               ; preds = %28, %38
  %33 = phi %struct.A_BLOCK_LINK* [ %40, %38 ], [ %30, %28 ]
  %34 = phi %struct.A_BLOCK_LINK* [ %33, %38 ], [ %24, %28 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11145, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11146, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !11145, metadata !DIExpression()), !dbg !11149
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 1, !dbg !11177
  %36 = load i32, i32* %35, align 4, !dbg !11177
  %37 = icmp ult i32 %36, %18, !dbg !11178
  br i1 %37, label %38, label %42, !dbg !11179, !llvm.loop !11183

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11146, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !11145, metadata !DIExpression()), !dbg !11149
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 0, !dbg !11180
  %40 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %39, align 4, !dbg !11180
  %41 = icmp eq %struct.A_BLOCK_LINK* %40, null, !dbg !11181
  br i1 %41, label %42, label %32, !dbg !11182, !llvm.loop !11183

42:                                               ; preds = %32, %38, %28, %23
  %43 = phi %struct.A_BLOCK_LINK* [ %24, %23 ], [ %24, %28 ], [ %33, %38 ], [ %33, %32 ]
  %44 = phi %struct.A_BLOCK_LINK* [ @xStart, %23 ], [ @xStart, %28 ], [ %34, %38 ], [ %34, %32 ], !dbg !11185
  %45 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 1, !dbg !11177
  %46 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11186
  %47 = icmp eq %struct.A_BLOCK_LINK* %43, %46, !dbg !11188
  br i1 %47, label %84, label %48, !dbg !11189

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %44, i32 0, i32 0, !dbg !11190
  %50 = bitcast %struct.A_BLOCK_LINK* %44 to i8**, !dbg !11190
  %51 = load i8*, i8** %50, align 4, !dbg !11190
  %52 = getelementptr inbounds i8, i8* %51, i32 8, !dbg !11192
  call void @llvm.dbg.value(metadata i8* %52, metadata !11148, metadata !DIExpression()), !dbg !11149
  %53 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 0, !dbg !11193
  %54 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %53, align 4, !dbg !11193
  store %struct.A_BLOCK_LINK* %54, %struct.A_BLOCK_LINK** %49, align 4, !dbg !11194
  %55 = load i32, i32* %45, align 4, !dbg !11195
  %56 = sub i32 %55, %18, !dbg !11197
  %57 = icmp ugt i32 %56, 16, !dbg !11198
  br i1 %57, label %58, label %73, !dbg !11199

58:                                               ; preds = %48
  %59 = bitcast %struct.A_BLOCK_LINK* %43 to i8*, !dbg !11200
  %60 = getelementptr inbounds i8, i8* %59, i32 %18, !dbg !11202
  %61 = bitcast i8* %60 to %struct.A_BLOCK_LINK*, !dbg !11203
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %61, metadata !11147, metadata !DIExpression()), !dbg !11149
  %62 = ptrtoint i8* %60 to i32, !dbg !11204
  %63 = and i32 %62, 7, !dbg !11204
  %64 = icmp eq i32 %63, 0, !dbg !11204
  br i1 %64, label %68, label %65, !dbg !11206

65:                                               ; preds = %58
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 257) #20, !dbg !11207
  %66 = load i32, i32* %45, align 4, !dbg !11209
  %67 = sub i32 %66, %18, !dbg !11210
  br label %68, !dbg !11207

68:                                               ; preds = %65, %58
  %69 = phi i32 [ %67, %65 ], [ %56, %58 ], !dbg !11210
  %70 = getelementptr inbounds i8, i8* %60, i32 4, !dbg !11211
  %71 = bitcast i8* %70 to i32*, !dbg !11211
  store i32 %69, i32* %71, align 4, !dbg !11212
  store i32 %18, i32* %45, align 4, !dbg !11213
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %61) #22, !dbg !11214
  %72 = load i32, i32* %45, align 4, !dbg !11215
  br label %73, !dbg !11216

73:                                               ; preds = %48, %68
  %74 = phi i32 [ %55, %48 ], [ %72, %68 ], !dbg !11215
  %75 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11217
  %76 = sub i32 %75, %74, !dbg !11217
  store i32 %76, i32* @xFreeBytesRemaining, align 4, !dbg !11217
  %77 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11218
  %78 = icmp ult i32 %76, %77, !dbg !11220
  br i1 %78, label %79, label %80, !dbg !11221

79:                                               ; preds = %73
  store i32 %76, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11222
  br label %80, !dbg !11224

80:                                               ; preds = %73, %79
  %81 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11225
  %82 = select i1 %81, i32 -2147483648, i32 0, !dbg !11225
  %83 = or i32 %74, %82, !dbg !11226
  store i32 %83, i32* %45, align 4, !dbg !11226
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** %53, align 4, !dbg !11227
  br label %84, !dbg !11228

84:                                               ; preds = %5, %42, %80, %12
  %85 = phi i8* [ %52, %80 ], [ null, %42 ], [ null, %12 ], [ null, %5 ], !dbg !11149
  call void @llvm.dbg.value(metadata i8* %85, metadata !11148, metadata !DIExpression()), !dbg !11149
  %86 = tail call i32 @xTaskResumeAll() #20, !dbg !11229
  %87 = ptrtoint i8* %85 to i32, !dbg !11230
  %88 = and i32 %87, 7, !dbg !11230
  %89 = icmp eq i32 %88, 0, !dbg !11230
  br i1 %89, label %91, label %90, !dbg !11232

90:                                               ; preds = %84
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 321) #20, !dbg !11233
  br label %91, !dbg !11233

91:                                               ; preds = %90, %84
  ret i8* %85, !dbg !11235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @prvHeapInit() unnamed_addr #14 !dbg !11236 {
  call void @llvm.dbg.value(metadata i32 148480, metadata !11241, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata i32 ptrtoint ([148480 x i8]* @ucHeap to i32), metadata !11240, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480), metadata !11241, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), metadata !11240, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !11239, metadata !DIExpression()), !dbg !11242
  store %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !11243
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 1), align 4, !dbg !11244
  call void @llvm.dbg.value(metadata i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), metadata !11240, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), metadata !11240, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), metadata !11240, metadata !DIExpression()), !dbg !11242
  store %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11245
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !11246
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 8, !dbg !11247
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !11238, metadata !DIExpression()), !dbg !11242
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !11248
  %1 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11249
  store %struct.A_BLOCK_LINK* %1, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 4, !dbg !11250
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11251
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32* @xFreeBytesRemaining, align 4, !dbg !11252
  store i1 true, i1* @xBlockAllocatedBit, align 4, !dbg !11253
  ret void, !dbg !11254
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef %0) unnamed_addr #15 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %0, metadata !11259, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11260, metadata !DIExpression()), !dbg !11262
  br label %2, !dbg !11263

2:                                                ; preds = %2, %1
  %3 = phi %struct.A_BLOCK_LINK* [ @xStart, %1 ], [ %5, %2 ], !dbg !11265
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !11260, metadata !DIExpression()), !dbg !11262
  %4 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !11266
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %4, align 4, !dbg !11266
  %6 = icmp ult %struct.A_BLOCK_LINK* %5, %0, !dbg !11268
  br i1 %6, label %2, label %7, !dbg !11269, !llvm.loop !11270

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !11266
  %9 = bitcast %struct.A_BLOCK_LINK* %3 to i8*, !dbg !11272
  call void @llvm.dbg.value(metadata i8* %9, metadata !11261, metadata !DIExpression()), !dbg !11262
  %10 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 1, !dbg !11273
  %11 = load i32, i32* %10, align 4, !dbg !11273
  %12 = getelementptr inbounds i8, i8* %9, i32 %11, !dbg !11275
  %13 = bitcast %struct.A_BLOCK_LINK* %0 to i8*, !dbg !11276
  %14 = icmp eq i8* %12, %13, !dbg !11277
  %15 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !11262
  br i1 %14, label %17, label %19, !dbg !11278

17:                                               ; preds = %7
  %18 = add i32 %16, %11, !dbg !11279
  store i32 %18, i32* %10, align 4, !dbg !11279
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !11259, metadata !DIExpression()), !dbg !11262
  br label %19, !dbg !11281

19:                                               ; preds = %7, %17
  %20 = phi i8* [ %9, %17 ], [ %13, %7 ], !dbg !11282
  %21 = phi i32 [ %18, %17 ], [ %16, %7 ], !dbg !11283
  %22 = phi %struct.A_BLOCK_LINK* [ %3, %17 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %22, metadata !11259, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i8* %20, metadata !11261, metadata !DIExpression()), !dbg !11262
  %23 = getelementptr inbounds i8, i8* %20, i32 %21, !dbg !11285
  %24 = bitcast %struct.A_BLOCK_LINK* %5 to i8*, !dbg !11286
  %25 = icmp ne i8* %23, %24, !dbg !11287
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4
  %27 = icmp eq %struct.A_BLOCK_LINK* %5, %26
  %28 = select i1 %25, i1 true, i1 %27, !dbg !11288
  br i1 %28, label %37, label %29, !dbg !11288

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 1, !dbg !11283
  %31 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 1, !dbg !11289
  %32 = load i32, i32* %31, align 4, !dbg !11289
  %33 = add i32 %32, %21, !dbg !11293
  store i32 %33, i32* %30, align 4, !dbg !11293
  %34 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %8, align 4, !dbg !11294
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %34, i32 0, i32 0, !dbg !11295
  %36 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %35, align 4, !dbg !11295
  br label %37, !dbg !11296

37:                                               ; preds = %19, %29
  %38 = phi %struct.A_BLOCK_LINK* [ %36, %29 ], [ %5, %19 ]
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 0, !dbg !11297
  store %struct.A_BLOCK_LINK* %38, %struct.A_BLOCK_LINK** %39, align 4, !dbg !11297
  %40 = icmp eq %struct.A_BLOCK_LINK* %3, %22, !dbg !11298
  br i1 %40, label %42, label %41, !dbg !11300

41:                                               ; preds = %37
  store %struct.A_BLOCK_LINK* %22, %struct.A_BLOCK_LINK** %8, align 4, !dbg !11301
  br label %42, !dbg !11303

42:                                               ; preds = %37, %41
  ret void, !dbg !11304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFree(i8* noundef %0) local_unnamed_addr #0 !dbg !11305 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11307, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i8* %0, metadata !11308, metadata !DIExpression()), !dbg !11310
  %2 = icmp eq i8* %0, null, !dbg !11311
  br i1 %2, label %35, label %3, !dbg !11313

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !11314
  call void @llvm.dbg.value(metadata i8* %4, metadata !11308, metadata !DIExpression()), !dbg !11310
  %5 = bitcast i8* %4 to %struct.A_BLOCK_LINK*, !dbg !11316
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %5, metadata !11309, metadata !DIExpression()), !dbg !11310
  %6 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !11317
  %7 = bitcast i8* %6 to i32*, !dbg !11317
  %8 = load i32, i32* %7, align 4, !dbg !11317
  %9 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11317
  %10 = select i1 %9, i32 -2147483648, i32 0, !dbg !11317
  %11 = and i32 %10, %8, !dbg !11317
  %12 = icmp eq i32 %11, 0, !dbg !11317
  br i1 %12, label %13, label %14, !dbg !11319

13:                                               ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 341) #20, !dbg !11320
  br label %14, !dbg !11320

14:                                               ; preds = %13, %3
  %15 = bitcast i8* %4 to %struct.A_BLOCK_LINK**, !dbg !11322
  %16 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !11322
  %17 = icmp eq %struct.A_BLOCK_LINK* %16, null, !dbg !11322
  br i1 %17, label %19, label %18, !dbg !11324

18:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 342) #20, !dbg !11325
  br label %19, !dbg !11325

19:                                               ; preds = %18, %14
  %20 = load i32, i32* %7, align 4, !dbg !11327
  %21 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11329
  %22 = select i1 %21, i32 -2147483648, i32 0, !dbg !11329
  %23 = and i32 %22, %20, !dbg !11330
  %24 = icmp eq i32 %23, 0, !dbg !11331
  br i1 %24, label %35, label %25, !dbg !11332

25:                                               ; preds = %19
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !11333
  %27 = icmp eq %struct.A_BLOCK_LINK* %26, null, !dbg !11336
  br i1 %27, label %28, label %35, !dbg !11337

28:                                               ; preds = %25
  %29 = xor i32 %22, -1, !dbg !11338
  %30 = and i32 %20, %29, !dbg !11340
  store i32 %30, i32* %7, align 4, !dbg !11340
  tail call void @vTaskSuspendAll() #20, !dbg !11341
  %31 = load i32, i32* %7, align 4, !dbg !11342
  %32 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11344
  %33 = add i32 %32, %31, !dbg !11344
  store i32 %33, i32* @xFreeBytesRemaining, align 4, !dbg !11344
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %5) #22, !dbg !11345
  %34 = tail call i32 @xTaskResumeAll() #20, !dbg !11346
  br label %35, !dbg !11347

35:                                               ; preds = %25, %28, %19, %1
  ret void, !dbg !11348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #9 !dbg !11349 {
  %1 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11352
  ret i32 %1, !dbg !11353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetMinimumEverFreeHeapSize() local_unnamed_addr #9 !dbg !11354 {
  %1 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11355
  ret i32 %1, !dbg !11356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #7 !dbg !11357 {
  ret void, !dbg !11358
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11363, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i32 %1, metadata !11364, metadata !DIExpression()), !dbg !11366
  %3 = mul i32 %1, %0, !dbg !11367
  %4 = tail call i8* @pvPortMalloc(i32 noundef %3) #22, !dbg !11368
  call void @llvm.dbg.value(metadata i8* %4, metadata !11365, metadata !DIExpression()), !dbg !11366
  %5 = icmp eq i8* %4, null, !dbg !11369
  br i1 %5, label %8, label %6, !dbg !11371

6:                                                ; preds = %2
  %7 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef %3) #20, !dbg !11372
  br label %8, !dbg !11374

8:                                                ; preds = %6, %2
  ret i8* %4, !dbg !11375
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11376 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11380, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.value(metadata i32 %1, metadata !11381, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.value(metadata i8* null, metadata !11382, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.value(metadata i32 0, metadata !11383, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.value(metadata i8* %0, metadata !11384, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* null, metadata !11385, metadata !DIExpression()), !dbg !11386
  %3 = tail call i8* @pvPortCalloc(i32 noundef %1, i32 noundef 1) #22, !dbg !11387
  call void @llvm.dbg.value(metadata i8* %3, metadata !11382, metadata !DIExpression()), !dbg !11386
  %4 = icmp eq i8* %0, null, !dbg !11388
  br i1 %4, label %29, label %5, !dbg !11390

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !11391
  call void @llvm.dbg.value(metadata i8* %6, metadata !11384, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.value(metadata i8* %6, metadata !11385, metadata !DIExpression()), !dbg !11386
  %7 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !11393
  %8 = bitcast i8* %7 to i32*, !dbg !11393
  %9 = load i32, i32* %8, align 4, !dbg !11393
  %10 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11393
  %11 = select i1 %10, i32 -2147483648, i32 0, !dbg !11393
  %12 = and i32 %11, %9, !dbg !11393
  %13 = icmp eq i32 %12, 0, !dbg !11393
  br i1 %13, label %14, label %15, !dbg !11395

14:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 546) #20, !dbg !11396
  br label %15, !dbg !11396

15:                                               ; preds = %14, %5
  %16 = bitcast i8* %6 to %struct.A_BLOCK_LINK**, !dbg !11398
  %17 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %16, align 4, !dbg !11398
  %18 = icmp eq %struct.A_BLOCK_LINK* %17, null, !dbg !11398
  br i1 %18, label %20, label %19, !dbg !11400

19:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 547) #20, !dbg !11401
  br label %20, !dbg !11401

20:                                               ; preds = %19, %15
  %21 = load i32, i32* %8, align 4, !dbg !11403
  %22 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11404
  %23 = select i1 %22, i32 2147483647, i32 -1, !dbg !11405
  %24 = and i32 %23, %21, !dbg !11406
  call void @llvm.dbg.value(metadata i32 %24, metadata !11383, metadata !DIExpression()), !dbg !11386
  %25 = add i32 %24, -8, !dbg !11407
  call void @llvm.dbg.value(metadata i32 %25, metadata !11383, metadata !DIExpression()), !dbg !11386
  %26 = icmp ult i32 %25, %1, !dbg !11408
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = tail call i8* @memcpy(i8* noundef %3, i8* noundef nonnull %0, i32 noundef %27) #20, !dbg !11410
  tail call void @vPortFree(i8* noundef nonnull %0) #22, !dbg !11411
  br label %29, !dbg !11412

29:                                               ; preds = %20, %2
  ret i8* %3, !dbg !11413
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMallocNC(i32 noundef %0) local_unnamed_addr #0 !dbg !11414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11416, metadata !DIExpression()), !dbg !11417
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #22, !dbg !11418
  ret i8* %2, !dbg !11419
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFreeNC(i8* noundef %0) local_unnamed_addr #0 !dbg !11420 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11422, metadata !DIExpression()), !dbg !11423
  tail call void @vPortFree(i8* noundef %0) #22, !dbg !11424
  ret void, !dbg !11425
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_malloc(i32 noundef %0) local_unnamed_addr #0 !dbg !11426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11428, metadata !DIExpression()), !dbg !11429
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #22, !dbg !11430
  ret i8* %2, !dbg !11431
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11434, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.value(metadata i32 %1, metadata !11435, metadata !DIExpression()), !dbg !11436
  %3 = tail call i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) #22, !dbg !11437
  ret i8* %3, !dbg !11438
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_realloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11439 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11441, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.value(metadata i32 %1, metadata !11442, metadata !DIExpression()), !dbg !11443
  %3 = tail call i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) #22, !dbg !11444
  ret i8* %3, !dbg !11445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__wrap_free(i8* noundef %0) local_unnamed_addr #0 !dbg !11446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11448, metadata !DIExpression()), !dbg !11449
  tail call void @vPortFree(i8* noundef %0) #22, !dbg !11450
  ret void, !dbg !11451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #5 !dbg !11452 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11453
  %2 = udiv i32 %1, 1000, !dbg !11454
  %3 = add nsw i32 %2, -1, !dbg !11455
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11456
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11457
  ret void, !dbg !11458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @cJSON_GetErrorPtr() local_unnamed_addr #9 !dbg !11459 {
  %1 = load i8*, i8** @ep, align 4, !dbg !11462
  ret i8* %1, !dbg !11463
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @cJSON_malloc(i32 noundef %0) local_unnamed_addr #0 !dbg !11464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11466, metadata !DIExpression()), !dbg !11467
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #20, !dbg !11468
  ret i8* %2, !dbg !11469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_free(i8* noundef %0) local_unnamed_addr #0 !dbg !11470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11472, metadata !DIExpression()), !dbg !11473
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !11474
  ret void, !dbg !11475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_Delete(%struct.cJSON* noundef %0) local_unnamed_addr #0 !dbg !11476 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !11480, metadata !DIExpression()), !dbg !11482
  %2 = icmp eq %struct.cJSON* %0, null, !dbg !11483
  br i1 %2, label %34, label %3, !dbg !11483

3:                                                ; preds = %1, %31
  %4 = phi %struct.cJSON* [ %6, %31 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !11480, metadata !DIExpression()), !dbg !11482
  %5 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %4, i32 0, i32 0, !dbg !11484
  %6 = load %struct.cJSON*, %struct.cJSON** %5, align 8, !dbg !11484
  call void @llvm.dbg.value(metadata %struct.cJSON* %6, metadata !11481, metadata !DIExpression()), !dbg !11482
  %7 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %4, i32 0, i32 3, !dbg !11486
  %8 = load i32, i32* %7, align 4, !dbg !11486
  %9 = and i32 %8, 256, !dbg !11488
  %10 = icmp eq i32 %9, 0, !dbg !11488
  br i1 %10, label %11, label %17, !dbg !11489

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %4, i32 0, i32 2, !dbg !11490
  %13 = load %struct.cJSON*, %struct.cJSON** %12, align 8, !dbg !11490
  %14 = icmp eq %struct.cJSON* %13, null, !dbg !11491
  br i1 %14, label %17, label %15, !dbg !11492

15:                                               ; preds = %11
  tail call void @cJSON_Delete(%struct.cJSON* noundef nonnull %13) #22, !dbg !11493
  %16 = load i32, i32* %7, align 4, !dbg !11494
  br label %17, !dbg !11493

17:                                               ; preds = %15, %11, %3
  %18 = phi i32 [ %16, %15 ], [ %8, %11 ], [ %8, %3 ], !dbg !11494
  %19 = and i32 %18, 256, !dbg !11496
  %20 = icmp eq i32 %19, 0, !dbg !11496
  br i1 %20, label %21, label %26, !dbg !11497

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %4, i32 0, i32 4, !dbg !11498
  %23 = load i8*, i8** %22, align 8, !dbg !11498
  %24 = icmp eq i8* %23, null, !dbg !11499
  br i1 %24, label %26, label %25, !dbg !11500

25:                                               ; preds = %21
  tail call void @cJSON_free(i8* noundef nonnull %23) #22, !dbg !11501
  br label %26, !dbg !11501

26:                                               ; preds = %25, %21, %17
  %27 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %4, i32 0, i32 7, !dbg !11502
  %28 = load i8*, i8** %27, align 8, !dbg !11502
  %29 = icmp eq i8* %28, null, !dbg !11504
  br i1 %29, label %31, label %30, !dbg !11505

30:                                               ; preds = %26
  tail call void @cJSON_free(i8* noundef nonnull %28) #22, !dbg !11506
  br label %31, !dbg !11506

31:                                               ; preds = %30, %26
  %32 = bitcast %struct.cJSON* %4 to i8*, !dbg !11507
  tail call void @cJSON_free(i8* noundef nonnull %32) #22, !dbg !11508
  call void @llvm.dbg.value(metadata %struct.cJSON* %6, metadata !11480, metadata !DIExpression()), !dbg !11482
  %33 = icmp eq %struct.cJSON* %6, null, !dbg !11483
  br i1 %33, label %34, label %3, !dbg !11483, !llvm.loop !11509

34:                                               ; preds = %31, %1
  ret void, !dbg !11511
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_ParseWithOpts(i8* noundef %0, i8** noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11512 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11517, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i8** %1, metadata !11518, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i32 %2, metadata !11519, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i8* null, metadata !11520, metadata !DIExpression()), !dbg !11522
  %4 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !11523
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !11521, metadata !DIExpression()), !dbg !11522
  store i8* null, i8** @ep, align 4, !dbg !11524
  %5 = icmp eq %struct.cJSON* %4, null, !dbg !11525
  br i1 %5, label %22, label %6, !dbg !11527

6:                                                ; preds = %3
  %7 = tail call fastcc i8* @skip(i8* noundef %0) #22, !dbg !11528
  %8 = tail call fastcc i8* @parse_value(%struct.cJSON* noundef nonnull %4, i8* noundef %7) #22, !dbg !11529
  call void @llvm.dbg.value(metadata i8* %8, metadata !11520, metadata !DIExpression()), !dbg !11522
  %9 = icmp eq i8* %8, null, !dbg !11530
  br i1 %9, label %10, label %11, !dbg !11532

10:                                               ; preds = %6
  tail call void @cJSON_Delete(%struct.cJSON* noundef nonnull %4) #22, !dbg !11533
  br label %22, !dbg !11535

11:                                               ; preds = %6
  %12 = icmp eq i32 %2, 0, !dbg !11536
  br i1 %12, label %18, label %13, !dbg !11538

13:                                               ; preds = %11
  %14 = tail call fastcc i8* @skip(i8* noundef nonnull %8) #22, !dbg !11539
  call void @llvm.dbg.value(metadata i8* %14, metadata !11520, metadata !DIExpression()), !dbg !11522
  %15 = load i8, i8* %14, align 1, !dbg !11541
  %16 = icmp eq i8 %15, 0, !dbg !11541
  br i1 %16, label %18, label %17, !dbg !11543

17:                                               ; preds = %13
  tail call void @cJSON_Delete(%struct.cJSON* noundef nonnull %4) #22, !dbg !11544
  store i8* %14, i8** @ep, align 4, !dbg !11546
  br label %22, !dbg !11547

18:                                               ; preds = %13, %11
  %19 = phi i8* [ %14, %13 ], [ %8, %11 ], !dbg !11522
  call void @llvm.dbg.value(metadata i8* %19, metadata !11520, metadata !DIExpression()), !dbg !11522
  %20 = icmp eq i8** %1, null, !dbg !11548
  br i1 %20, label %22, label %21, !dbg !11550

21:                                               ; preds = %18
  store i8* %19, i8** %1, align 4, !dbg !11551
  br label %22, !dbg !11552

22:                                               ; preds = %18, %21, %3, %17, %10
  %23 = phi %struct.cJSON* [ null, %17 ], [ null, %10 ], [ null, %3 ], [ %4, %21 ], [ %4, %18 ], !dbg !11522
  ret %struct.cJSON* %23, !dbg !11553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.cJSON* @cJSON_New_Item() unnamed_addr #0 !dbg !11554 {
  %1 = tail call i8* @cJSON_malloc(i32 noundef 40) #22, !dbg !11559
  call void @llvm.dbg.value(metadata i8* %1, metadata !11558, metadata !DIExpression()), !dbg !11560
  %2 = icmp eq i8* %1, null, !dbg !11561
  br i1 %2, label %5, label %3, !dbg !11563

3:                                                ; preds = %0
  %4 = tail call i8* @memset(i8* noundef nonnull %1, i32 noundef 0, i32 noundef 40) #20, !dbg !11564
  br label %5, !dbg !11564

5:                                                ; preds = %3, %0
  %6 = bitcast i8* %1 to %struct.cJSON*, !dbg !11565
  call void @llvm.dbg.value(metadata %struct.cJSON* %6, metadata !11558, metadata !DIExpression()), !dbg !11560
  ret %struct.cJSON* %6, !dbg !11566
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc i8* @skip(i8* noundef readonly %0) unnamed_addr #13 !dbg !11567 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11571, metadata !DIExpression()), !dbg !11572
  %2 = icmp eq i8* %0, null, !dbg !11573
  br i1 %2, label %9, label %3, !dbg !11574

3:                                                ; preds = %1, %3
  %4 = phi i8* [ %8, %3 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !11571, metadata !DIExpression()), !dbg !11572
  %5 = load i8, i8* %4, align 1, !dbg !11575
  %6 = add i8 %5, -1, !dbg !11576
  %7 = icmp ult i8 %6, 32, !dbg !11576
  %8 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !11577
  call void @llvm.dbg.value(metadata i8* %8, metadata !11571, metadata !DIExpression()), !dbg !11572
  br i1 %7, label %3, label %9, !dbg !11576, !llvm.loop !11578

9:                                                ; preds = %3, %1
  %10 = phi i8* [ null, %1 ], [ %4, %3 ]
  ret i8* %10, !dbg !11580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @parse_value(%struct.cJSON* noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !11581 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !11585, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i8* %1, metadata !11586, metadata !DIExpression()), !dbg !11587
  %3 = icmp eq i8* %1, null, !dbg !11588
  br i1 %3, label %38, label %4, !dbg !11590

4:                                                ; preds = %2
  %5 = tail call i32 @strncmp(i8* noundef nonnull %1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0), i32 noundef 4) #20, !dbg !11591
  %6 = icmp eq i32 %5, 0, !dbg !11591
  br i1 %6, label %7, label %10, !dbg !11593

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !11594
  store i32 2, i32* %8, align 4, !dbg !11596
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11597
  br label %38, !dbg !11598

10:                                               ; preds = %4
  %11 = tail call i32 @strncmp(i8* noundef nonnull %1, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.188, i32 0, i32 0), i32 noundef 5) #20, !dbg !11599
  %12 = icmp eq i32 %11, 0, !dbg !11599
  br i1 %12, label %13, label %16, !dbg !11601

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !11602
  store i32 0, i32* %14, align 4, !dbg !11604
  %15 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !11605
  br label %38, !dbg !11606

16:                                               ; preds = %10
  %17 = tail call i32 @strncmp(i8* noundef nonnull %1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 4) #20, !dbg !11607
  %18 = icmp eq i32 %17, 0, !dbg !11607
  br i1 %18, label %19, label %23, !dbg !11609

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !11610
  store i32 1, i32* %20, align 4, !dbg !11612
  %21 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 5, !dbg !11613
  store i32 1, i32* %21, align 4, !dbg !11614
  %22 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11615
  br label %38, !dbg !11616

23:                                               ; preds = %16
  %24 = load i8, i8* %1, align 1, !dbg !11617
  switch i8 %24, label %27 [
    i8 34, label %25
    i8 45, label %30
  ], !dbg !11619

25:                                               ; preds = %23
  %26 = tail call fastcc i8* @parse_string(%struct.cJSON* noundef %0, i8* noundef nonnull %1) #22, !dbg !11620
  br label %38, !dbg !11622

27:                                               ; preds = %23
  %28 = add i8 %24, -48, !dbg !11623
  %29 = icmp ult i8 %28, 10, !dbg !11623
  br i1 %29, label %30, label %32, !dbg !11623

30:                                               ; preds = %27, %23
  %31 = tail call fastcc i8* @parse_number(%struct.cJSON* noundef %0, i8* noundef nonnull %1) #22, !dbg !11625
  br label %38, !dbg !11627

32:                                               ; preds = %27
  switch i8 %24, label %37 [
    i8 91, label %33
    i8 123, label %35
  ], !dbg !11628

33:                                               ; preds = %32
  %34 = tail call fastcc i8* @parse_array(%struct.cJSON* noundef %0, i8* noundef nonnull %1) #22, !dbg !11629
  br label %38, !dbg !11632

35:                                               ; preds = %32
  %36 = tail call fastcc i8* @parse_object(%struct.cJSON* noundef %0, i8* noundef nonnull %1) #22, !dbg !11633
  br label %38, !dbg !11636

37:                                               ; preds = %32
  store i8* %1, i8** @ep, align 4, !dbg !11637
  br label %38, !dbg !11638

38:                                               ; preds = %2, %37, %35, %33, %30, %25, %19, %13, %7
  %39 = phi i8* [ %26, %25 ], [ %31, %30 ], [ %34, %33 ], [ %36, %35 ], [ null, %37 ], [ %22, %19 ], [ %15, %13 ], [ %9, %7 ], [ null, %2 ], !dbg !11587
  ret i8* %39, !dbg !11639
}

; Function Attrs: optsize
declare dso_local i32 @strncmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @parse_string(%struct.cJSON* nocapture noundef writeonly %0, i8* noundef %1) unnamed_addr #0 !dbg !11640 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !11642, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %1, metadata !11643, metadata !DIExpression()), !dbg !11650
  %3 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !11651
  call void @llvm.dbg.value(metadata i8* %3, metadata !11644, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i32 0, metadata !11647, metadata !DIExpression()), !dbg !11650
  %4 = load i8, i8* %1, align 1, !dbg !11652
  %5 = icmp eq i8 %4, 34, !dbg !11654
  br i1 %5, label %7, label %6, !dbg !11655

6:                                                ; preds = %2
  store i8* %1, i8** @ep, align 4, !dbg !11656
  br label %122, !dbg !11658

7:                                                ; preds = %2, %11
  %8 = phi i8* [ %14, %11 ], [ %3, %2 ], !dbg !11650
  %9 = phi i32 [ %15, %11 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11647, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %8, metadata !11644, metadata !DIExpression()), !dbg !11650
  %10 = load i8, i8* %8, align 1, !dbg !11659
  switch i8 %10, label %11 [
    i8 34, label %16
    i8 0, label %16
  ], !dbg !11660

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %9, metadata !11647, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %8, metadata !11644, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11650
  %12 = icmp eq i8 %10, 92, !dbg !11661
  %13 = select i1 %12, i32 2, i32 1, !dbg !11663
  %14 = getelementptr inbounds i8, i8* %8, i32 %13, !dbg !11663
  call void @llvm.dbg.value(metadata i8* %14, metadata !11644, metadata !DIExpression()), !dbg !11650
  %15 = add i32 %9, 1, !dbg !11664
  br label %7, !dbg !11664, !llvm.loop !11665

16:                                               ; preds = %7, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !11647, metadata !DIExpression()), !dbg !11650
  %17 = tail call i8* @cJSON_malloc(i32 noundef %9) #22, !dbg !11667
  call void @llvm.dbg.value(metadata i8* %17, metadata !11646, metadata !DIExpression()), !dbg !11650
  %18 = icmp eq i8* %17, null, !dbg !11668
  br i1 %18, label %122, label %19, !dbg !11670

19:                                               ; preds = %16, %111
  %20 = phi i8* [ %112, %111 ], [ %17, %16 ], !dbg !11650
  %21 = phi i8* [ %114, %111 ], [ %3, %16 ], !dbg !11650
  call void @llvm.dbg.value(metadata i8* %21, metadata !11644, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %20, metadata !11645, metadata !DIExpression()), !dbg !11650
  %22 = load i8, i8* %21, align 1, !dbg !11671
  switch i8 %22, label %23 [
    i8 34, label %115
    i8 0, label %115
    i8 92, label %25
  ], !dbg !11672

23:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i8* %21, metadata !11644, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11650
  %24 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11673
  call void @llvm.dbg.value(metadata i8* %24, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 %22, i8* %20, align 1, !dbg !11676
  br label %111, !dbg !11677

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !11678
  call void @llvm.dbg.value(metadata i8* %26, metadata !11644, metadata !DIExpression()), !dbg !11650
  %27 = load i8, i8* %26, align 1, !dbg !11680
  switch i8 %27, label %109 [
    i8 98, label %28
    i8 102, label %30
    i8 110, label %32
    i8 114, label %34
    i8 116, label %36
    i8 117, label %38
  ], !dbg !11681

28:                                               ; preds = %25
  %29 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11682
  call void @llvm.dbg.value(metadata i8* %29, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 8, i8* %20, align 1, !dbg !11684
  br label %111, !dbg !11685

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11686
  call void @llvm.dbg.value(metadata i8* %31, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 12, i8* %20, align 1, !dbg !11687
  br label %111, !dbg !11688

32:                                               ; preds = %25
  %33 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11689
  call void @llvm.dbg.value(metadata i8* %33, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 10, i8* %20, align 1, !dbg !11690
  br label %111, !dbg !11691

34:                                               ; preds = %25
  %35 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11692
  call void @llvm.dbg.value(metadata i8* %35, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 13, i8* %20, align 1, !dbg !11693
  br label %111, !dbg !11694

36:                                               ; preds = %25
  %37 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11695
  call void @llvm.dbg.value(metadata i8* %37, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 9, i8* %20, align 1, !dbg !11696
  br label %111, !dbg !11697

38:                                               ; preds = %25
  %39 = getelementptr inbounds i8, i8* %21, i32 2, !dbg !11698
  %40 = tail call fastcc i32 @parse_hex4(i8* noundef nonnull %39) #22, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %40, metadata !11648, metadata !DIExpression()), !dbg !11650
  %41 = getelementptr inbounds i8, i8* %21, i32 5, !dbg !11700
  call void @llvm.dbg.value(metadata i8* %41, metadata !11644, metadata !DIExpression()), !dbg !11650
  %42 = and i32 %40, -1024, !dbg !11701
  %43 = icmp eq i32 %42, 56320, !dbg !11701
  %44 = icmp eq i32 %40, 0
  %45 = or i1 %44, %43, !dbg !11701
  br i1 %45, label %111, label %46, !dbg !11701

46:                                               ; preds = %38
  %47 = icmp eq i32 %42, 55296, !dbg !11703
  br i1 %47, label %48, label %68, !dbg !11703

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* %21, i32 6, !dbg !11705
  %50 = load i8, i8* %49, align 1, !dbg !11705
  %51 = icmp eq i8 %50, 92, !dbg !11708
  br i1 %51, label %52, label %111, !dbg !11709

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %21, i32 7, !dbg !11710
  %54 = load i8, i8* %53, align 1, !dbg !11710
  %55 = icmp eq i8 %54, 117, !dbg !11711
  br i1 %55, label %56, label %111, !dbg !11712

56:                                               ; preds = %52
  %57 = getelementptr inbounds i8, i8* %21, i32 8, !dbg !11713
  %58 = tail call fastcc i32 @parse_hex4(i8* noundef nonnull %57) #22, !dbg !11714
  call void @llvm.dbg.value(metadata i32 %58, metadata !11649, metadata !DIExpression()), !dbg !11650
  %59 = getelementptr inbounds i8, i8* %21, i32 11, !dbg !11715
  call void @llvm.dbg.value(metadata i8* %59, metadata !11644, metadata !DIExpression()), !dbg !11650
  %60 = add i32 %58, -57344, !dbg !11716
  %61 = icmp ult i32 %60, -1024, !dbg !11716
  br i1 %61, label %111, label %62, !dbg !11716

62:                                               ; preds = %56
  %63 = shl nuw nsw i32 %40, 10, !dbg !11718
  %64 = and i32 %63, 1047552, !dbg !11718
  %65 = and i32 %58, 1023, !dbg !11719
  %66 = add nuw nsw i32 %64, 65536, !dbg !11720
  %67 = or i32 %66, %65, !dbg !11721
  call void @llvm.dbg.value(metadata i32 %40, metadata !11648, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %41, metadata !11644, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i32 4, metadata !11647, metadata !DIExpression()), !dbg !11650
  br label %74, !dbg !11722

68:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i32 %40, metadata !11648, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %41, metadata !11644, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i32 4, metadata !11647, metadata !DIExpression()), !dbg !11650
  %69 = icmp ult i32 %40, 128, !dbg !11725
  br i1 %69, label %100, label %70, !dbg !11726

70:                                               ; preds = %68
  %71 = icmp ult i32 %40, 2048, !dbg !11727
  br i1 %71, label %91, label %72, !dbg !11728

72:                                               ; preds = %70
  %73 = icmp ult i32 %40, 65536, !dbg !11729
  br i1 %73, label %82, label %74, !dbg !11722

74:                                               ; preds = %62, %72
  %75 = phi i32 [ %67, %62 ], [ %40, %72 ]
  %76 = phi i8* [ %59, %62 ], [ %41, %72 ]
  call void @llvm.dbg.value(metadata i32 1, metadata !11647, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %20, metadata !11645, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11650
  %77 = trunc i32 %75 to i8, !dbg !11731
  %78 = and i8 %77, 63, !dbg !11731
  %79 = or i8 %78, -128, !dbg !11731
  %80 = getelementptr inbounds i8, i8* %20, i32 3, !dbg !11733
  call void @llvm.dbg.value(metadata i8* %80, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 %79, i8* %80, align 1, !dbg !11734
  %81 = lshr i32 %75, 6, !dbg !11735
  call void @llvm.dbg.value(metadata i32 %81, metadata !11648, metadata !DIExpression()), !dbg !11650
  br label %82, !dbg !11736

82:                                               ; preds = %72, %74
  %83 = phi i8* [ %76, %74 ], [ %41, %72 ]
  %84 = phi i32 [ 4, %74 ], [ 3, %72 ]
  %85 = phi i32 [ %81, %74 ], [ %40, %72 ], !dbg !11737
  call void @llvm.dbg.value(metadata i32 %85, metadata !11648, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* undef, metadata !11645, metadata !DIExpression()), !dbg !11650
  %86 = trunc i32 %85 to i8, !dbg !11738
  %87 = and i8 %86, 63, !dbg !11738
  %88 = or i8 %87, -128, !dbg !11738
  %89 = getelementptr inbounds i8, i8* %20, i32 2, !dbg !11739
  call void @llvm.dbg.value(metadata i8* %89, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 %88, i8* %89, align 1, !dbg !11740
  %90 = lshr i32 %85, 6, !dbg !11741
  call void @llvm.dbg.value(metadata i32 %90, metadata !11648, metadata !DIExpression()), !dbg !11650
  br label %91, !dbg !11742

91:                                               ; preds = %70, %82
  %92 = phi i32 [ %84, %82 ], [ 2, %70 ]
  %93 = phi i8* [ %83, %82 ], [ %41, %70 ]
  %94 = phi i32 [ %90, %82 ], [ %40, %70 ], !dbg !11737
  call void @llvm.dbg.value(metadata i32 %94, metadata !11648, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* undef, metadata !11645, metadata !DIExpression()), !dbg !11650
  %95 = trunc i32 %94 to i8, !dbg !11743
  %96 = and i8 %95, 63, !dbg !11743
  %97 = or i8 %96, -128, !dbg !11743
  %98 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11744
  call void @llvm.dbg.value(metadata i8* %98, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 %97, i8* %98, align 1, !dbg !11745
  %99 = lshr i32 %94, 6, !dbg !11746
  call void @llvm.dbg.value(metadata i32 %99, metadata !11648, metadata !DIExpression()), !dbg !11650
  br label %100, !dbg !11747

100:                                              ; preds = %68, %91
  %101 = phi i32 [ %92, %91 ], [ 1, %68 ]
  %102 = phi i8* [ %93, %91 ], [ %41, %68 ]
  %103 = phi i32 [ %99, %91 ], [ %40, %68 ], !dbg !11737
  call void @llvm.dbg.value(metadata i32 %103, metadata !11648, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* undef, metadata !11645, metadata !DIExpression()), !dbg !11650
  %104 = getelementptr inbounds [7 x i8], [7 x i8]* @firstByteMark, i32 0, i32 %101, !dbg !11748
  %105 = load i8, i8* %104, align 1, !dbg !11748
  %106 = trunc i32 %103 to i8, !dbg !11749
  %107 = or i8 %105, %106, !dbg !11749
  call void @llvm.dbg.value(metadata i8* %20, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 %107, i8* %20, align 1, !dbg !11750
  %108 = getelementptr inbounds i8, i8* %20, i32 %101, !dbg !11751
  call void @llvm.dbg.value(metadata i8* %108, metadata !11645, metadata !DIExpression()), !dbg !11650
  br label %111, !dbg !11752

109:                                              ; preds = %25
  %110 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11753
  call void @llvm.dbg.value(metadata i8* %110, metadata !11645, metadata !DIExpression()), !dbg !11650
  store i8 %27, i8* %20, align 1, !dbg !11754
  br label %111, !dbg !11755

111:                                              ; preds = %28, %30, %32, %34, %36, %100, %109, %38, %52, %48, %56, %23
  %112 = phi i8* [ %24, %23 ], [ %110, %109 ], [ %20, %38 ], [ %20, %48 ], [ %20, %52 ], [ %20, %56 ], [ %108, %100 ], [ %37, %36 ], [ %35, %34 ], [ %33, %32 ], [ %31, %30 ], [ %29, %28 ], !dbg !11756
  %113 = phi i8* [ %21, %23 ], [ %26, %109 ], [ %41, %38 ], [ %41, %48 ], [ %41, %52 ], [ %59, %56 ], [ %102, %100 ], [ %26, %36 ], [ %26, %34 ], [ %26, %32 ], [ %26, %30 ], [ %26, %28 ]
  %114 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !11756
  call void @llvm.dbg.value(metadata i8* %114, metadata !11644, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.value(metadata i8* %112, metadata !11645, metadata !DIExpression()), !dbg !11650
  br label %19, !dbg !11757, !llvm.loop !11758

115:                                              ; preds = %19, %19
  store i8 0, i8* %20, align 1, !dbg !11760
  %116 = load i8, i8* %21, align 1, !dbg !11761
  %117 = icmp eq i8 %116, 34, !dbg !11763
  %118 = zext i1 %117 to i32, !dbg !11764
  %119 = getelementptr i8, i8* %21, i32 %118, !dbg !11764
  call void @llvm.dbg.value(metadata i8* %119, metadata !11644, metadata !DIExpression()), !dbg !11650
  %120 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 4, !dbg !11765
  store i8* %17, i8** %120, align 8, !dbg !11766
  %121 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !11767
  store i32 4, i32* %121, align 4, !dbg !11768
  br label %122, !dbg !11769

122:                                              ; preds = %16, %115, %6
  %123 = phi i8* [ null, %6 ], [ %119, %115 ], [ null, %16 ], !dbg !11650
  ret i8* %123, !dbg !11770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @parse_number(%struct.cJSON* nocapture noundef writeonly %0, i8* noundef readonly %1) unnamed_addr #0 !dbg !11771 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !11773, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %1, metadata !11774, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !11775, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata double 1.000000e+00, metadata !11776, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !11777, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 0, metadata !11778, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 1, metadata !11779, metadata !DIExpression()), !dbg !11780
  %3 = load i8, i8* %1, align 1, !dbg !11781
  %4 = icmp eq i8 %3, 45, !dbg !11783
  %5 = zext i1 %4 to i32, !dbg !11784
  %6 = getelementptr i8, i8* %1, i32 %5, !dbg !11784
  call void @llvm.dbg.value(metadata double undef, metadata !11776, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %6, metadata !11774, metadata !DIExpression()), !dbg !11780
  %7 = load i8, i8* %6, align 1, !dbg !11785
  %8 = icmp eq i8 %7, 48, !dbg !11787
  %9 = zext i1 %8 to i32, !dbg !11788
  %10 = getelementptr i8, i8* %6, i32 %9, !dbg !11788
  call void @llvm.dbg.value(metadata i8* %10, metadata !11774, metadata !DIExpression()), !dbg !11780
  %11 = load i8, i8* %10, align 1, !dbg !11789
  %12 = add i8 %11, -49, !dbg !11791
  %13 = icmp ult i8 %12, 9, !dbg !11791
  br i1 %13, label %14, label %26, !dbg !11791

14:                                               ; preds = %2, %14
  %15 = phi i8 [ %23, %14 ], [ %11, %2 ], !dbg !11792
  %16 = phi i8* [ %18, %14 ], [ %10, %2 ], !dbg !11780
  %17 = phi double [ %22, %14 ], [ 0.000000e+00, %2 ], !dbg !11780
  call void @llvm.dbg.value(metadata double %17, metadata !11775, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %16, metadata !11774, metadata !DIExpression()), !dbg !11780
  %18 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !11793
  call void @llvm.dbg.value(metadata i8* %18, metadata !11774, metadata !DIExpression()), !dbg !11780
  %19 = zext i8 %15 to i32, !dbg !11792
  %20 = add nsw i32 %19, -48, !dbg !11794
  %21 = sitofp i32 %20 to double, !dbg !11795
  %22 = tail call double @llvm.fmuladd.f64(double %17, double 1.000000e+01, double %21), !dbg !11796
  call void @llvm.dbg.value(metadata double %22, metadata !11775, metadata !DIExpression()), !dbg !11780
  %23 = load i8, i8* %18, align 1, !dbg !11797
  %24 = add i8 %23, -48, !dbg !11798
  %25 = icmp ult i8 %24, 10, !dbg !11798
  br i1 %25, label %14, label %26, !dbg !11798, !llvm.loop !11799

26:                                               ; preds = %14, %2
  %27 = phi i8 [ %11, %2 ], [ %23, %14 ], !dbg !11802
  %28 = phi i8* [ %10, %2 ], [ %18, %14 ], !dbg !11780
  %29 = phi double [ 0.000000e+00, %2 ], [ %22, %14 ], !dbg !11780
  call void @llvm.dbg.value(metadata double %29, metadata !11775, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %28, metadata !11774, metadata !DIExpression()), !dbg !11780
  %30 = icmp eq i8 %27, 46, !dbg !11804
  br i1 %30, label %31, label %50, !dbg !11805

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !11806
  %33 = load i8, i8* %32, align 1, !dbg !11806
  %34 = add i8 %33, -48, !dbg !11807
  %35 = icmp ult i8 %34, 10, !dbg !11807
  br i1 %35, label %36, label %80, !dbg !11807

36:                                               ; preds = %31, %36
  %37 = phi i8 [ %47, %36 ], [ %33, %31 ], !dbg !11808
  %38 = phi i8* [ %41, %36 ], [ %32, %31 ], !dbg !11810
  %39 = phi double [ %45, %36 ], [ %29, %31 ], !dbg !11780
  %40 = phi double [ %46, %36 ], [ 0.000000e+00, %31 ], !dbg !11780
  call void @llvm.dbg.value(metadata double %40, metadata !11777, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata double %39, metadata !11775, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %38, metadata !11774, metadata !DIExpression()), !dbg !11780
  %41 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !11811
  call void @llvm.dbg.value(metadata i8* %41, metadata !11774, metadata !DIExpression()), !dbg !11780
  %42 = zext i8 %37 to i32, !dbg !11808
  %43 = add nsw i32 %42, -48, !dbg !11812
  %44 = sitofp i32 %43 to double, !dbg !11813
  %45 = tail call double @llvm.fmuladd.f64(double %39, double 1.000000e+01, double %44), !dbg !11814
  call void @llvm.dbg.value(metadata double %45, metadata !11775, metadata !DIExpression()), !dbg !11780
  %46 = fadd double %40, -1.000000e+00, !dbg !11815
  call void @llvm.dbg.value(metadata double %46, metadata !11777, metadata !DIExpression()), !dbg !11780
  %47 = load i8, i8* %41, align 1, !dbg !11816
  %48 = add i8 %47, -48, !dbg !11817
  %49 = icmp ult i8 %48, 10, !dbg !11817
  br i1 %49, label %36, label %50, !dbg !11817, !llvm.loop !11818

50:                                               ; preds = %36, %26
  %51 = phi i8 [ %27, %26 ], [ %47, %36 ], !dbg !11821
  %52 = phi i8* [ %28, %26 ], [ %41, %36 ], !dbg !11780
  %53 = phi double [ %29, %26 ], [ %45, %36 ], !dbg !11780
  %54 = phi double [ 0.000000e+00, %26 ], [ %46, %36 ], !dbg !11780
  call void @llvm.dbg.value(metadata double %54, metadata !11777, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata double %53, metadata !11775, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %52, metadata !11774, metadata !DIExpression()), !dbg !11780
  switch i8 %51, label %80 [
    i8 101, label %55
    i8 69, label %55
  ], !dbg !11823

55:                                               ; preds = %50, %50
  %56 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !11824
  call void @llvm.dbg.value(metadata i8* %56, metadata !11774, metadata !DIExpression()), !dbg !11780
  %57 = load i8, i8* %56, align 1, !dbg !11826
  switch i8 %57, label %62 [
    i8 43, label %58
    i8 45, label %60
  ], !dbg !11828

58:                                               ; preds = %55
  %59 = getelementptr inbounds i8, i8* %52, i32 2, !dbg !11829
  call void @llvm.dbg.value(metadata i8* %59, metadata !11774, metadata !DIExpression()), !dbg !11780
  br label %62, !dbg !11830

60:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 -1, metadata !11779, metadata !DIExpression()), !dbg !11780
  %61 = getelementptr inbounds i8, i8* %52, i32 2, !dbg !11831
  call void @llvm.dbg.value(metadata i8* %61, metadata !11774, metadata !DIExpression()), !dbg !11780
  br label %62, !dbg !11833

62:                                               ; preds = %55, %60, %58
  %63 = phi i8* [ %59, %58 ], [ %61, %60 ], [ %56, %55 ], !dbg !11834
  %64 = phi i32 [ 1, %58 ], [ -1, %60 ], [ 1, %55 ], !dbg !11780
  call void @llvm.dbg.value(metadata i32 %64, metadata !11779, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %63, metadata !11774, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 0, metadata !11778, metadata !DIExpression()), !dbg !11780
  %65 = load i8, i8* %63, align 1, !dbg !11835
  %66 = add i8 %65, -48, !dbg !11836
  %67 = icmp ult i8 %66, 10, !dbg !11836
  br i1 %67, label %68, label %80, !dbg !11836

68:                                               ; preds = %62, %68
  %69 = phi i8 [ %77, %68 ], [ %65, %62 ]
  %70 = phi i32 [ %76, %68 ], [ 0, %62 ]
  %71 = phi i8* [ %74, %68 ], [ %63, %62 ]
  call void @llvm.dbg.value(metadata i32 %70, metadata !11778, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %71, metadata !11774, metadata !DIExpression()), !dbg !11780
  %72 = zext i8 %69 to i32, !dbg !11835
  %73 = mul nsw i32 %70, 10, !dbg !11837
  %74 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !11838
  call void @llvm.dbg.value(metadata i8* %74, metadata !11774, metadata !DIExpression()), !dbg !11780
  %75 = add i32 %73, -48, !dbg !11839
  %76 = add i32 %75, %72, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %76, metadata !11778, metadata !DIExpression()), !dbg !11780
  %77 = load i8, i8* %74, align 1, !dbg !11835
  %78 = add i8 %77, -48, !dbg !11836
  %79 = icmp ult i8 %78, 10, !dbg !11836
  br i1 %79, label %68, label %80, !dbg !11836, !llvm.loop !11841

80:                                               ; preds = %68, %31, %62, %50
  %81 = phi double [ %54, %50 ], [ %54, %62 ], [ 0.000000e+00, %31 ], [ %54, %68 ]
  %82 = phi double [ %53, %50 ], [ %53, %62 ], [ %29, %31 ], [ %53, %68 ]
  %83 = phi i8* [ %52, %50 ], [ %63, %62 ], [ %28, %31 ], [ %74, %68 ], !dbg !11780
  %84 = phi i32 [ 0, %50 ], [ 0, %62 ], [ 0, %31 ], [ %76, %68 ], !dbg !11844
  %85 = phi i32 [ 1, %50 ], [ %64, %62 ], [ 1, %31 ], [ %64, %68 ], !dbg !11845
  call void @llvm.dbg.value(metadata double undef, metadata !11776, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 %85, metadata !11779, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 %84, metadata !11778, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %83, metadata !11774, metadata !DIExpression()), !dbg !11780
  %86 = fneg double %82, !dbg !11846
  %87 = select i1 %4, double %86, double %82, !dbg !11846
  %88 = mul nsw i32 %85, %84, !dbg !11847
  %89 = sitofp i32 %88 to double, !dbg !11848
  %90 = fadd double %81, %89, !dbg !11849
  %91 = fmul double %90, 0x40026BB1BBB55516, !dbg !11850
  %92 = tail call double @exp(double noundef %91) #20, !dbg !11851
  %93 = fmul double %87, %92, !dbg !11852
  call void @llvm.dbg.value(metadata double %93, metadata !11775, metadata !DIExpression()), !dbg !11780
  %94 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 6, !dbg !11853
  store double %93, double* %94, align 8, !dbg !11854
  %95 = fptosi double %93 to i32, !dbg !11855
  %96 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 5, !dbg !11856
  store i32 %95, i32* %96, align 4, !dbg !11857
  %97 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !11858
  store i32 3, i32* %97, align 4, !dbg !11859
  ret i8* %83, !dbg !11860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @parse_array(%struct.cJSON* nocapture noundef writeonly %0, i8* noundef %1) unnamed_addr #0 !dbg !11861 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !11863, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i8* %1, metadata !11864, metadata !DIExpression()), !dbg !11868
  %3 = load i8, i8* %1, align 1, !dbg !11869
  %4 = icmp eq i8 %3, 91, !dbg !11871
  br i1 %4, label %6, label %5, !dbg !11872

5:                                                ; preds = %2
  store i8* %1, i8** @ep, align 4, !dbg !11873
  br label %41, !dbg !11875

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !11876
  store i32 5, i32* %7, align 4, !dbg !11877
  %8 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !11878
  %9 = tail call fastcc i8* @skip(i8* noundef nonnull %8) #22, !dbg !11879
  call void @llvm.dbg.value(metadata i8* %9, metadata !11864, metadata !DIExpression()), !dbg !11868
  %10 = load i8, i8* %9, align 1, !dbg !11880
  %11 = icmp eq i8 %10, 93, !dbg !11882
  br i1 %11, label %12, label %14, !dbg !11883

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !11884
  br label %41, !dbg !11885

14:                                               ; preds = %6
  %15 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !11886
  call void @llvm.dbg.value(metadata %struct.cJSON* %15, metadata !11865, metadata !DIExpression()), !dbg !11868
  %16 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !11887
  store %struct.cJSON* %15, %struct.cJSON** %16, align 8, !dbg !11888
  %17 = icmp eq %struct.cJSON* %15, null, !dbg !11889
  br i1 %17, label %41, label %18, !dbg !11891

18:                                               ; preds = %14
  %19 = tail call fastcc i8* @skip(i8* noundef nonnull %9) #22, !dbg !11892
  %20 = tail call fastcc i8* @parse_value(%struct.cJSON* noundef nonnull %15, i8* noundef %19) #22, !dbg !11893
  %21 = tail call fastcc i8* @skip(i8* noundef %20) #22, !dbg !11894
  call void @llvm.dbg.value(metadata i8* %21, metadata !11864, metadata !DIExpression()), !dbg !11868
  %22 = icmp eq i8* %21, null, !dbg !11895
  br i1 %22, label %41, label %23, !dbg !11897

23:                                               ; preds = %18, %30
  %24 = phi i8* [ %36, %30 ], [ %21, %18 ], !dbg !11868
  %25 = phi %struct.cJSON* [ %28, %30 ], [ %15, %18 ], !dbg !11868
  call void @llvm.dbg.value(metadata %struct.cJSON* %25, metadata !11865, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i8* %24, metadata !11864, metadata !DIExpression()), !dbg !11868
  %26 = load i8, i8* %24, align 1, !dbg !11898
  switch i8 %26, label %40 [
    i8 44, label %27
    i8 93, label %38
  ], !dbg !11899

27:                                               ; preds = %23
  %28 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !11900
  call void @llvm.dbg.value(metadata %struct.cJSON* %28, metadata !11866, metadata !DIExpression()), !dbg !11902
  %29 = icmp eq %struct.cJSON* %28, null, !dbg !11903
  br i1 %29, label %41, label %30, !dbg !11904

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %25, i32 0, i32 0, !dbg !11905
  store %struct.cJSON* %28, %struct.cJSON** %31, align 8, !dbg !11906
  %32 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %28, i32 0, i32 1, !dbg !11907
  store %struct.cJSON* %25, %struct.cJSON** %32, align 4, !dbg !11908
  call void @llvm.dbg.value(metadata %struct.cJSON* %28, metadata !11865, metadata !DIExpression()), !dbg !11868
  %33 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11909
  %34 = tail call fastcc i8* @skip(i8* noundef nonnull %33) #22, !dbg !11910
  %35 = tail call fastcc i8* @parse_value(%struct.cJSON* noundef nonnull %28, i8* noundef %34) #22, !dbg !11911
  %36 = tail call fastcc i8* @skip(i8* noundef %35) #22, !dbg !11912
  call void @llvm.dbg.value(metadata i8* %36, metadata !11864, metadata !DIExpression()), !dbg !11868
  %37 = icmp eq i8* %36, null, !dbg !11913
  br i1 %37, label %41, label %23, !llvm.loop !11915

38:                                               ; preds = %23
  %39 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11917
  br label %41, !dbg !11919

40:                                               ; preds = %23
  store i8* %24, i8** @ep, align 4, !dbg !11920
  br label %41, !dbg !11921

41:                                               ; preds = %27, %30, %18, %14, %40, %38, %12, %5
  %42 = phi i8* [ null, %5 ], [ %13, %12 ], [ %39, %38 ], [ null, %40 ], [ null, %14 ], [ null, %18 ], [ null, %30 ], [ null, %27 ]
  ret i8* %42, !dbg !11922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @parse_object(%struct.cJSON* nocapture noundef writeonly %0, i8* noundef %1) unnamed_addr #0 !dbg !11923 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !11925, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i8* %1, metadata !11926, metadata !DIExpression()), !dbg !11930
  %3 = load i8, i8* %1, align 1, !dbg !11931
  %4 = icmp eq i8 %3, 123, !dbg !11933
  br i1 %4, label %6, label %5, !dbg !11934

5:                                                ; preds = %2
  store i8* %1, i8** @ep, align 4, !dbg !11935
  br label %67, !dbg !11937

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !11938
  store i32 6, i32* %7, align 4, !dbg !11939
  %8 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !11940
  %9 = tail call fastcc i8* @skip(i8* noundef nonnull %8) #22, !dbg !11941
  call void @llvm.dbg.value(metadata i8* %9, metadata !11926, metadata !DIExpression()), !dbg !11930
  %10 = load i8, i8* %9, align 1, !dbg !11942
  %11 = icmp eq i8 %10, 125, !dbg !11944
  br i1 %11, label %12, label %14, !dbg !11945

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !11946
  br label %67, !dbg !11947

14:                                               ; preds = %6
  %15 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !11948
  call void @llvm.dbg.value(metadata %struct.cJSON* %15, metadata !11927, metadata !DIExpression()), !dbg !11930
  %16 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !11949
  store %struct.cJSON* %15, %struct.cJSON** %16, align 8, !dbg !11950
  %17 = icmp eq %struct.cJSON* %15, null, !dbg !11951
  br i1 %17, label %67, label %18, !dbg !11953

18:                                               ; preds = %14
  %19 = tail call fastcc i8* @skip(i8* noundef nonnull %9) #22, !dbg !11954
  %20 = tail call fastcc i8* @parse_string(%struct.cJSON* noundef nonnull %15, i8* noundef %19) #22, !dbg !11955
  %21 = tail call fastcc i8* @skip(i8* noundef %20) #22, !dbg !11956
  call void @llvm.dbg.value(metadata i8* %21, metadata !11926, metadata !DIExpression()), !dbg !11930
  %22 = icmp eq i8* %21, null, !dbg !11957
  br i1 %22, label %67, label %23, !dbg !11959

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %15, i32 0, i32 4, !dbg !11960
  %25 = load i8*, i8** %24, align 8, !dbg !11960
  %26 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %15, i32 0, i32 7, !dbg !11961
  store i8* %25, i8** %26, align 8, !dbg !11962
  store i8* null, i8** %24, align 8, !dbg !11963
  %27 = load i8, i8* %21, align 1, !dbg !11964
  %28 = icmp eq i8 %27, 58, !dbg !11966
  br i1 %28, label %30, label %29, !dbg !11967

29:                                               ; preds = %23
  store i8* %21, i8** @ep, align 4, !dbg !11968
  br label %67, !dbg !11970

30:                                               ; preds = %23
  %31 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !11971
  %32 = tail call fastcc i8* @skip(i8* noundef nonnull %31) #22, !dbg !11972
  %33 = tail call fastcc i8* @parse_value(%struct.cJSON* noundef nonnull %15, i8* noundef %32) #22, !dbg !11973
  %34 = tail call fastcc i8* @skip(i8* noundef %33) #22, !dbg !11974
  call void @llvm.dbg.value(metadata i8* %34, metadata !11926, metadata !DIExpression()), !dbg !11930
  %35 = icmp eq i8* %34, null, !dbg !11975
  br i1 %35, label %67, label %36, !dbg !11977

36:                                               ; preds = %30, %58
  %37 = phi i8* [ %62, %58 ], [ %34, %30 ], !dbg !11930
  %38 = phi %struct.cJSON* [ %41, %58 ], [ %15, %30 ], !dbg !11930
  call void @llvm.dbg.value(metadata %struct.cJSON* %38, metadata !11927, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i8* %37, metadata !11926, metadata !DIExpression()), !dbg !11930
  %39 = load i8, i8* %37, align 1, !dbg !11978
  switch i8 %39, label %66 [
    i8 44, label %40
    i8 125, label %64
  ], !dbg !11979

40:                                               ; preds = %36
  %41 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !11980
  call void @llvm.dbg.value(metadata %struct.cJSON* %41, metadata !11928, metadata !DIExpression()), !dbg !11982
  %42 = icmp eq %struct.cJSON* %41, null, !dbg !11983
  br i1 %42, label %67, label %43, !dbg !11984

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %38, i32 0, i32 0, !dbg !11985
  store %struct.cJSON* %41, %struct.cJSON** %44, align 8, !dbg !11986
  %45 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %41, i32 0, i32 1, !dbg !11987
  store %struct.cJSON* %38, %struct.cJSON** %45, align 4, !dbg !11988
  call void @llvm.dbg.value(metadata %struct.cJSON* %41, metadata !11927, metadata !DIExpression()), !dbg !11930
  %46 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !11989
  %47 = tail call fastcc i8* @skip(i8* noundef nonnull %46) #22, !dbg !11990
  %48 = tail call fastcc i8* @parse_string(%struct.cJSON* noundef nonnull %41, i8* noundef %47) #22, !dbg !11991
  %49 = tail call fastcc i8* @skip(i8* noundef %48) #22, !dbg !11992
  call void @llvm.dbg.value(metadata i8* %49, metadata !11926, metadata !DIExpression()), !dbg !11930
  %50 = icmp eq i8* %49, null, !dbg !11993
  br i1 %50, label %67, label %51, !dbg !11995

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %41, i32 0, i32 4, !dbg !11996
  %53 = load i8*, i8** %52, align 8, !dbg !11996
  %54 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %41, i32 0, i32 7, !dbg !11997
  store i8* %53, i8** %54, align 8, !dbg !11998
  store i8* null, i8** %52, align 8, !dbg !11999
  %55 = load i8, i8* %49, align 1, !dbg !12000
  %56 = icmp eq i8 %55, 58, !dbg !12002
  br i1 %56, label %58, label %57, !dbg !12003

57:                                               ; preds = %51
  store i8* %49, i8** @ep, align 4, !dbg !12004
  br label %67, !dbg !12006

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !12007
  %60 = tail call fastcc i8* @skip(i8* noundef nonnull %59) #22, !dbg !12008
  %61 = tail call fastcc i8* @parse_value(%struct.cJSON* noundef nonnull %41, i8* noundef %60) #22, !dbg !12009
  %62 = tail call fastcc i8* @skip(i8* noundef %61) #22, !dbg !12010
  call void @llvm.dbg.value(metadata i8* %62, metadata !11926, metadata !DIExpression()), !dbg !11930
  %63 = icmp eq i8* %62, null, !dbg !12011
  call void @llvm.dbg.value(metadata %struct.cJSON* %41, metadata !11927, metadata !DIExpression()), !dbg !11930
  br i1 %63, label %67, label %36, !llvm.loop !12013

64:                                               ; preds = %36
  %65 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !12015
  br label %67, !dbg !12017

66:                                               ; preds = %36
  store i8* %37, i8** @ep, align 4, !dbg !12018
  br label %67, !dbg !12019

67:                                               ; preds = %43, %40, %58, %57, %30, %18, %14, %66, %64, %29, %12, %5
  %68 = phi i8* [ null, %5 ], [ %13, %12 ], [ null, %29 ], [ %65, %64 ], [ null, %66 ], [ null, %14 ], [ null, %18 ], [ null, %30 ], [ null, %57 ], [ null, %58 ], [ null, %40 ], [ null, %43 ], !dbg !11930
  ret i8* %68, !dbg !12020
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #2

; Function Attrs: optsize
declare dso_local double @exp(double noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @parse_hex4(i8* nocapture noundef readonly %0) unnamed_addr #9 !dbg !12021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12025, metadata !DIExpression()), !dbg !12027
  call void @llvm.dbg.value(metadata i32 0, metadata !12026, metadata !DIExpression()), !dbg !12027
  %2 = load i8, i8* %0, align 1, !dbg !12028
  %3 = zext i8 %2 to i32, !dbg !12028
  %4 = add i8 %2, -48, !dbg !12030
  %5 = icmp ult i8 %4, 10, !dbg !12030
  br i1 %5, label %12, label %6, !dbg !12030

6:                                                ; preds = %1
  %7 = add i8 %2, -65, !dbg !12031
  %8 = icmp ult i8 %7, 6, !dbg !12031
  br i1 %8, label %12, label %9, !dbg !12031

9:                                                ; preds = %6
  %10 = add i8 %2, -97, !dbg !12033
  %11 = icmp ult i8 %10, 6, !dbg !12033
  br i1 %11, label %12, label %63, !dbg !12033

12:                                               ; preds = %9, %6, %1
  %13 = phi i32 [ -48, %1 ], [ -55, %6 ], [ -87, %9 ]
  %14 = add nsw i32 %13, %3, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %14, metadata !12026, metadata !DIExpression()), !dbg !12027
  %15 = shl nsw i32 %14, 4, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %15, metadata !12026, metadata !DIExpression()), !dbg !12027
  %16 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !12037
  call void @llvm.dbg.value(metadata i8* %16, metadata !12025, metadata !DIExpression()), !dbg !12027
  %17 = load i8, i8* %16, align 1, !dbg !12038
  %18 = zext i8 %17 to i32, !dbg !12038
  %19 = add i8 %17, -48, !dbg !12040
  %20 = icmp ult i8 %19, 10, !dbg !12040
  br i1 %20, label %27, label %21, !dbg !12040

21:                                               ; preds = %12
  %22 = add i8 %17, -65, !dbg !12041
  %23 = icmp ult i8 %22, 6, !dbg !12041
  br i1 %23, label %27, label %24, !dbg !12041

24:                                               ; preds = %21
  %25 = add i8 %17, -97, !dbg !12043
  %26 = icmp ult i8 %25, 6, !dbg !12043
  br i1 %26, label %27, label %63, !dbg !12043

27:                                               ; preds = %24, %21, %12
  %28 = phi i32 [ -48, %12 ], [ -55, %21 ], [ -87, %24 ]
  %29 = add nsw i32 %28, %18, !dbg !12045
  %30 = add nsw i32 %29, %15, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %30, metadata !12026, metadata !DIExpression()), !dbg !12027
  %31 = shl nsw i32 %30, 4, !dbg !12046
  call void @llvm.dbg.value(metadata i32 %31, metadata !12026, metadata !DIExpression()), !dbg !12027
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !12047
  call void @llvm.dbg.value(metadata i8* %32, metadata !12025, metadata !DIExpression()), !dbg !12027
  %33 = load i8, i8* %32, align 1, !dbg !12048
  %34 = zext i8 %33 to i32, !dbg !12048
  %35 = add i8 %33, -48, !dbg !12050
  %36 = icmp ult i8 %35, 10, !dbg !12050
  br i1 %36, label %43, label %37, !dbg !12050

37:                                               ; preds = %27
  %38 = add i8 %33, -65, !dbg !12051
  %39 = icmp ult i8 %38, 6, !dbg !12051
  br i1 %39, label %43, label %40, !dbg !12051

40:                                               ; preds = %37
  %41 = add i8 %33, -97, !dbg !12053
  %42 = icmp ult i8 %41, 6, !dbg !12053
  br i1 %42, label %43, label %63, !dbg !12053

43:                                               ; preds = %40, %37, %27
  %44 = phi i32 [ -48, %27 ], [ -55, %37 ], [ -87, %40 ]
  %45 = add nsw i32 %44, %34, !dbg !12055
  %46 = add nsw i32 %45, %31, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %46, metadata !12026, metadata !DIExpression()), !dbg !12027
  %47 = shl i32 %46, 4, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %47, metadata !12026, metadata !DIExpression()), !dbg !12027
  %48 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !12057
  call void @llvm.dbg.value(metadata i8* %48, metadata !12025, metadata !DIExpression()), !dbg !12027
  %49 = load i8, i8* %48, align 1, !dbg !12058
  %50 = zext i8 %49 to i32, !dbg !12058
  %51 = add i8 %49, -48, !dbg !12060
  %52 = icmp ult i8 %51, 10, !dbg !12060
  br i1 %52, label %59, label %53, !dbg !12060

53:                                               ; preds = %43
  %54 = add i8 %49, -65, !dbg !12061
  %55 = icmp ult i8 %54, 6, !dbg !12061
  br i1 %55, label %59, label %56, !dbg !12061

56:                                               ; preds = %53
  %57 = add i8 %49, -97, !dbg !12063
  %58 = icmp ult i8 %57, 6, !dbg !12063
  br i1 %58, label %59, label %63, !dbg !12063

59:                                               ; preds = %56, %53, %43
  %60 = phi i32 [ -48, %43 ], [ -55, %53 ], [ -87, %56 ]
  %61 = add nsw i32 %60, %50, !dbg !12065
  %62 = add i32 %61, %47, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %62, metadata !12026, metadata !DIExpression()), !dbg !12027
  br label %63, !dbg !12066

63:                                               ; preds = %56, %40, %24, %9, %59
  %64 = phi i32 [ %62, %59 ], [ 0, %9 ], [ 0, %24 ], [ 0, %40 ], [ 0, %56 ], !dbg !12027
  ret i32 %64, !dbg !12067
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_Parse(i8* noundef %0) local_unnamed_addr #0 !dbg !12068 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12072, metadata !DIExpression()), !dbg !12073
  %2 = tail call %struct.cJSON* @cJSON_ParseWithOpts(i8* noundef %0, i8** noundef null, i32 noundef 0) #22, !dbg !12074
  ret %struct.cJSON* %2, !dbg !12075
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @cJSON_Print(%struct.cJSON* noundef %0) local_unnamed_addr #0 !dbg !12076 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12080, metadata !DIExpression()), !dbg !12081
  %2 = tail call fastcc i8* @print_value(%struct.cJSON* noundef %0, i32 noundef 0, i32 noundef 1) #22, !dbg !12082
  ret i8* %2, !dbg !12083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @print_value(%struct.cJSON* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !12084 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12088, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i32 %1, metadata !12089, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i32 %2, metadata !12090, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8* null, metadata !12091, metadata !DIExpression()), !dbg !12092
  %4 = icmp eq %struct.cJSON* %0, null, !dbg !12093
  br i1 %4, label %23, label %5, !dbg !12095

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !12096
  %7 = load i32, i32* %6, align 4, !dbg !12096
  %8 = trunc i32 %7 to i8, !dbg !12097
  switch i8 %8, label %23 [
    i8 2, label %9
    i8 0, label %11
    i8 1, label %13
    i8 3, label %15
    i8 4, label %17
    i8 5, label %19
    i8 6, label %21
  ], !dbg !12097

9:                                                ; preds = %5
  %10 = tail call fastcc i8* @cJSON_strdup(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0)) #22, !dbg !12098
  call void @llvm.dbg.value(metadata i8* %10, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %23, !dbg !12100

11:                                               ; preds = %5
  %12 = tail call fastcc i8* @cJSON_strdup(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.188, i32 0, i32 0)) #22, !dbg !12101
  call void @llvm.dbg.value(metadata i8* %12, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %23, !dbg !12102

13:                                               ; preds = %5
  %14 = tail call fastcc i8* @cJSON_strdup(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.189, i32 0, i32 0)) #22, !dbg !12103
  call void @llvm.dbg.value(metadata i8* %14, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %23, !dbg !12104

15:                                               ; preds = %5
  %16 = tail call fastcc i8* @print_number(%struct.cJSON* noundef nonnull %0) #22, !dbg !12105
  call void @llvm.dbg.value(metadata i8* %16, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %23, !dbg !12106

17:                                               ; preds = %5
  %18 = tail call fastcc i8* @print_string(%struct.cJSON* noundef nonnull %0) #22, !dbg !12107
  call void @llvm.dbg.value(metadata i8* %18, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %23, !dbg !12108

19:                                               ; preds = %5
  %20 = tail call fastcc i8* @print_array(%struct.cJSON* noundef nonnull %0, i32 noundef %1, i32 noundef %2) #22, !dbg !12109
  call void @llvm.dbg.value(metadata i8* %20, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %23, !dbg !12110

21:                                               ; preds = %5
  %22 = tail call fastcc i8* @print_object(%struct.cJSON* noundef nonnull %0, i32 noundef %1, i32 noundef %2) #22, !dbg !12111
  call void @llvm.dbg.value(metadata i8* %22, metadata !12091, metadata !DIExpression()), !dbg !12092
  br label %23, !dbg !12112

23:                                               ; preds = %9, %11, %13, %15, %17, %19, %21, %5, %3
  %24 = phi i8* [ null, %3 ], [ null, %5 ], [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], !dbg !12092
  ret i8* %24, !dbg !12113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @cJSON_strdup(i8* noundef %0) unnamed_addr #0 !dbg !12114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12118, metadata !DIExpression()), !dbg !12121
  %2 = tail call i32 @strlen(i8* noundef %0) #20, !dbg !12122
  %3 = add i32 %2, 1, !dbg !12123
  call void @llvm.dbg.value(metadata i32 %3, metadata !12119, metadata !DIExpression()), !dbg !12121
  %4 = tail call i8* @cJSON_malloc(i32 noundef %3) #22, !dbg !12124
  call void @llvm.dbg.value(metadata i8* %4, metadata !12120, metadata !DIExpression()), !dbg !12121
  %5 = icmp eq i8* %4, null, !dbg !12126
  br i1 %5, label %8, label %6, !dbg !12127

6:                                                ; preds = %1
  %7 = tail call i8* @memcpy(i8* noundef nonnull %4, i8* noundef %0, i32 noundef %3) #20, !dbg !12128
  br label %8, !dbg !12129

8:                                                ; preds = %1, %6
  ret i8* %4, !dbg !12130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @print_number(%struct.cJSON* nocapture noundef readonly %0) unnamed_addr #0 !dbg !12131 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12133, metadata !DIExpression()), !dbg !12136
  %2 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 6, !dbg !12137
  %3 = load double, double* %2, align 8, !dbg !12137
  call void @llvm.dbg.value(metadata double %3, metadata !12135, metadata !DIExpression()), !dbg !12136
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 5, !dbg !12138
  %5 = load i32, i32* %4, align 4, !dbg !12138
  %6 = sitofp i32 %5 to double, !dbg !12140
  %7 = fsub double %6, %3, !dbg !12141
  %8 = tail call double @fabs(double noundef %7) #20, !dbg !12142
  %9 = fcmp ole double %8, 0x3CB0000000000000, !dbg !12143
  %10 = fcmp ole double %3, 0x41DFFFFFFFC00000
  %11 = select i1 %9, i1 %10, i1 false, !dbg !12144
  %12 = fcmp oge double %3, 0xC1E0000000000000
  %13 = select i1 %11, i1 %12, i1 false, !dbg !12144
  br i1 %13, label %14, label %20, !dbg !12144

14:                                               ; preds = %1
  %15 = tail call i8* @cJSON_malloc(i32 noundef 21) #22, !dbg !12145
  call void @llvm.dbg.value(metadata i8* %15, metadata !12134, metadata !DIExpression()), !dbg !12136
  %16 = icmp eq i8* %15, null, !dbg !12147
  br i1 %16, label %25, label %17, !dbg !12149

17:                                               ; preds = %14
  %18 = load i32, i32* %4, align 4, !dbg !12150
  %19 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %15, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.194, i32 0, i32 0), i32 noundef %18) #20, !dbg !12151
  br label %25, !dbg !12151

20:                                               ; preds = %1
  %21 = tail call i8* @cJSON_malloc(i32 noundef 64) #22, !dbg !12152
  call void @llvm.dbg.value(metadata i8* %21, metadata !12134, metadata !DIExpression()), !dbg !12136
  %22 = icmp eq i8* %21, null, !dbg !12154
  br i1 %22, label %25, label %23, !dbg !12156

23:                                               ; preds = %20
  %24 = tail call i8* @ftoa(double noundef %3, i8* noundef nonnull %21, i32 noundef 13) #20, !dbg !12157
  br label %25, !dbg !12159

25:                                               ; preds = %20, %23, %14, %17
  %26 = phi i8* [ %15, %17 ], [ null, %14 ], [ %21, %23 ], [ null, %20 ], !dbg !12160
  call void @llvm.dbg.value(metadata i8* %26, metadata !12134, metadata !DIExpression()), !dbg !12136
  ret i8* %26, !dbg !12161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @print_string(%struct.cJSON* nocapture noundef readonly %0) unnamed_addr #0 !dbg !12162 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12164, metadata !DIExpression()), !dbg !12165
  %2 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 4, !dbg !12166
  %3 = load i8*, i8** %2, align 8, !dbg !12166
  %4 = tail call fastcc i8* @print_string_ptr(i8* noundef %3) #22, !dbg !12167
  ret i8* %4, !dbg !12168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @print_array(%struct.cJSON* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !12169 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12171, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 %1, metadata !12172, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 %2, metadata !12173, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i8* null, metadata !12175, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 5, metadata !12178, metadata !DIExpression()), !dbg !12183
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12184
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12179, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 0, metadata !12180, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 0, metadata !12181, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 0, metadata !12182, metadata !DIExpression()), !dbg !12183
  %5 = load %struct.cJSON*, %struct.cJSON** %4, align 8, !dbg !12183
  call void @llvm.dbg.value(metadata %struct.cJSON* %5, metadata !12179, metadata !DIExpression()), !dbg !12183
  %6 = icmp eq %struct.cJSON* %5, null, !dbg !12185
  br i1 %6, label %14, label %7, !dbg !12185

7:                                                ; preds = %3, %7
  %8 = phi %struct.cJSON* [ %12, %7 ], [ %5, %3 ]
  %9 = phi i32 [ %10, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12180, metadata !DIExpression()), !dbg !12183
  %10 = add nuw nsw i32 %9, 1, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %10, metadata !12180, metadata !DIExpression()), !dbg !12183
  %11 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %8, i32 0, i32 0, !dbg !12187
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12179, metadata !DIExpression()), !dbg !12183
  %12 = load %struct.cJSON*, %struct.cJSON** %11, align 8, !dbg !12183
  call void @llvm.dbg.value(metadata %struct.cJSON* %12, metadata !12179, metadata !DIExpression()), !dbg !12183
  %13 = icmp eq %struct.cJSON* %12, null, !dbg !12185
  br i1 %13, label %19, label %7, !dbg !12185, !llvm.loop !12188

14:                                               ; preds = %3
  %15 = tail call i8* @cJSON_malloc(i32 noundef 3) #22, !dbg !12189
  call void @llvm.dbg.value(metadata i8* %15, metadata !12175, metadata !DIExpression()), !dbg !12183
  %16 = icmp eq i8* %15, null, !dbg !12192
  br i1 %16, label %89, label %17, !dbg !12194

17:                                               ; preds = %14
  %18 = tail call i8* @strcpy(i8* noundef nonnull %15, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.193, i32 0, i32 0)) #20, !dbg !12195
  br label %89, !dbg !12195

19:                                               ; preds = %7
  %20 = shl i32 %10, 2, !dbg !12196
  %21 = tail call i8* @cJSON_malloc(i32 noundef %20) #22, !dbg !12197
  %22 = bitcast i8* %21 to i8**, !dbg !12198
  call void @llvm.dbg.value(metadata i8** %22, metadata !12174, metadata !DIExpression()), !dbg !12183
  %23 = icmp eq i8* %21, null, !dbg !12199
  br i1 %23, label %89, label %24, !dbg !12201

24:                                               ; preds = %19
  %25 = tail call i8* @memset(i8* noundef nonnull %21, i32 noundef 0, i32 noundef %20) #20, !dbg !12202
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12179, metadata !DIExpression()), !dbg !12183
  %26 = load %struct.cJSON*, %struct.cJSON** %4, align 8, !dbg !12183
  call void @llvm.dbg.value(metadata i32 0, metadata !12182, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 0, metadata !12181, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata %struct.cJSON* %26, metadata !12179, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 5, metadata !12178, metadata !DIExpression()), !dbg !12183
  %27 = icmp eq %struct.cJSON* %26, null, !dbg !12203
  br i1 %27, label %48, label %28, !dbg !12204

28:                                               ; preds = %24
  %29 = add nsw i32 %1, 1
  %30 = icmp eq i32 %2, 0
  %31 = select i1 %30, i32 2, i32 3
  br label %32, !dbg !12204

32:                                               ; preds = %28, %39
  %33 = phi %struct.cJSON* [ %26, %28 ], [ %45, %39 ]
  %34 = phi i32 [ 0, %28 ], [ %40, %39 ]
  %35 = phi i32 [ 5, %28 ], [ %43, %39 ]
  call void @llvm.dbg.value(metadata i32 %34, metadata !12181, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 %35, metadata !12178, metadata !DIExpression()), !dbg !12183
  %36 = tail call fastcc i8* @print_value(%struct.cJSON* noundef nonnull %33, i32 noundef %29, i32 noundef %2) #22, !dbg !12205
  call void @llvm.dbg.value(metadata i8* %36, metadata !12177, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 %34, metadata !12181, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12183
  %37 = getelementptr inbounds i8*, i8** %22, i32 %34, !dbg !12207
  store i8* %36, i8** %37, align 4, !dbg !12208
  %38 = icmp eq i8* %36, null, !dbg !12209
  br i1 %38, label %52, label %39, !dbg !12211

39:                                               ; preds = %32
  %40 = add nuw nsw i32 %34, 1, !dbg !12212
  call void @llvm.dbg.value(metadata i32 %40, metadata !12181, metadata !DIExpression()), !dbg !12183
  %41 = tail call i32 @strlen(i8* noundef nonnull %36) #20, !dbg !12213
  %42 = add i32 %31, %35, !dbg !12214
  %43 = add i32 %42, %41, !dbg !12215
  call void @llvm.dbg.value(metadata i32 0, metadata !12182, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 %43, metadata !12178, metadata !DIExpression()), !dbg !12183
  %44 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %33, i32 0, i32 0, !dbg !12216
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12179, metadata !DIExpression()), !dbg !12183
  %45 = load %struct.cJSON*, %struct.cJSON** %44, align 8, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %34, metadata !12181, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12183
  call void @llvm.dbg.value(metadata %struct.cJSON* %45, metadata !12179, metadata !DIExpression()), !dbg !12183
  %46 = icmp eq %struct.cJSON* %45, null, !dbg !12203
  %47 = or i1 %38, %46, !dbg !12217
  br i1 %47, label %48, label %32, !dbg !12204, !llvm.loop !12218

48:                                               ; preds = %39, %24
  %49 = phi i32 [ 5, %24 ], [ %43, %39 ]
  %50 = tail call i8* @cJSON_malloc(i32 noundef %49) #22, !dbg !12220
  call void @llvm.dbg.value(metadata i8* %50, metadata !12175, metadata !DIExpression()), !dbg !12183
  %51 = icmp eq i8* %50, null, !dbg !12222
  call void @llvm.dbg.value(metadata i32 undef, metadata !12182, metadata !DIExpression()), !dbg !12183
  br i1 %51, label %52, label %63, !dbg !12224

52:                                               ; preds = %32, %48
  br label %53, !dbg !12225

53:                                               ; preds = %52, %59
  %54 = phi i32 [ %60, %59 ], [ 0, %52 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !12181, metadata !DIExpression()), !dbg !12183
  %55 = getelementptr inbounds i8*, i8** %22, i32 %54, !dbg !12229
  %56 = load i8*, i8** %55, align 4, !dbg !12229
  %57 = icmp eq i8* %56, null, !dbg !12229
  br i1 %57, label %59, label %58, !dbg !12232

58:                                               ; preds = %53
  tail call void @cJSON_free(i8* noundef nonnull %56) #22, !dbg !12233
  br label %59, !dbg !12233

59:                                               ; preds = %53, %58
  %60 = add nuw i32 %54, 1, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %60, metadata !12181, metadata !DIExpression()), !dbg !12183
  %61 = icmp eq i32 %54, %9, !dbg !12235
  br i1 %61, label %62, label %53, !dbg !12225, !llvm.loop !12236

62:                                               ; preds = %59
  tail call void @cJSON_free(i8* noundef nonnull %21) #22, !dbg !12238
  br label %89, !dbg !12239

63:                                               ; preds = %48
  store i8 91, i8* %50, align 1, !dbg !12240
  %64 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !12241
  call void @llvm.dbg.value(metadata i8* %64, metadata !12176, metadata !DIExpression()), !dbg !12183
  store i8 0, i8* %64, align 1, !dbg !12242
  call void @llvm.dbg.value(metadata i32 0, metadata !12181, metadata !DIExpression()), !dbg !12183
  %65 = icmp eq i32 %2, 0
  br label %66, !dbg !12243

66:                                               ; preds = %63, %82
  %67 = phi i32 [ 0, %63 ], [ %85, %82 ]
  %68 = phi i8* [ %64, %63 ], [ %83, %82 ]
  call void @llvm.dbg.value(metadata i32 %67, metadata !12181, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i8* %68, metadata !12176, metadata !DIExpression()), !dbg !12183
  %69 = getelementptr inbounds i8*, i8** %22, i32 %67, !dbg !12245
  %70 = load i8*, i8** %69, align 4, !dbg !12245
  %71 = tail call i8* @strcpy(i8* noundef %68, i8* noundef %70) #20, !dbg !12248
  %72 = load i8*, i8** %69, align 4, !dbg !12249
  %73 = tail call i32 @strlen(i8* noundef %72) #20, !dbg !12250
  %74 = getelementptr inbounds i8, i8* %68, i32 %73, !dbg !12251
  call void @llvm.dbg.value(metadata i8* %74, metadata !12176, metadata !DIExpression()), !dbg !12183
  %75 = icmp eq i32 %67, %9, !dbg !12252
  br i1 %75, label %82, label %76, !dbg !12254

76:                                               ; preds = %66
  %77 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !12255
  call void @llvm.dbg.value(metadata i8* %77, metadata !12176, metadata !DIExpression()), !dbg !12183
  store i8 44, i8* %74, align 1, !dbg !12257
  br i1 %65, label %80, label %78, !dbg !12258

78:                                               ; preds = %76
  %79 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !12259
  call void @llvm.dbg.value(metadata i8* %79, metadata !12176, metadata !DIExpression()), !dbg !12183
  store i8 32, i8* %77, align 1, !dbg !12261
  br label %80, !dbg !12262

80:                                               ; preds = %78, %76
  %81 = phi i8* [ %79, %78 ], [ %77, %76 ], !dbg !12263
  call void @llvm.dbg.value(metadata i8* %81, metadata !12176, metadata !DIExpression()), !dbg !12183
  store i8 0, i8* %81, align 1, !dbg !12264
  br label %82, !dbg !12265

82:                                               ; preds = %80, %66
  %83 = phi i8* [ %81, %80 ], [ %74, %66 ], !dbg !12266
  call void @llvm.dbg.value(metadata i8* %83, metadata !12176, metadata !DIExpression()), !dbg !12183
  %84 = load i8*, i8** %69, align 4, !dbg !12267
  tail call void @cJSON_free(i8* noundef %84) #22, !dbg !12268
  %85 = add nuw i32 %67, 1, !dbg !12269
  call void @llvm.dbg.value(metadata i32 %85, metadata !12181, metadata !DIExpression()), !dbg !12183
  %86 = icmp eq i32 %67, %9, !dbg !12270
  br i1 %86, label %87, label %66, !dbg !12243, !llvm.loop !12271

87:                                               ; preds = %82
  tail call void @cJSON_free(i8* noundef nonnull %21) #22, !dbg !12273
  %88 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !12274
  call void @llvm.dbg.value(metadata i8* %88, metadata !12176, metadata !DIExpression()), !dbg !12183
  store i8 93, i8* %83, align 1, !dbg !12275
  call void @llvm.dbg.value(metadata i8* %88, metadata !12176, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12183
  store i8 0, i8* %88, align 1, !dbg !12276
  br label %89, !dbg !12277

89:                                               ; preds = %19, %14, %17, %87, %62
  %90 = phi i8* [ null, %62 ], [ %50, %87 ], [ %15, %17 ], [ null, %14 ], [ null, %19 ], !dbg !12183
  ret i8* %90, !dbg !12278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @print_object(%struct.cJSON* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !12279 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12281, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %1, metadata !12282, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %2, metadata !12283, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8** null, metadata !12284, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8** null, metadata !12285, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8* null, metadata !12286, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 7, metadata !12290, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 0, metadata !12291, metadata !DIExpression()), !dbg !12296
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12297
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12293, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 0, metadata !12294, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 0, metadata !12295, metadata !DIExpression()), !dbg !12296
  %5 = load %struct.cJSON*, %struct.cJSON** %4, align 8, !dbg !12296
  call void @llvm.dbg.value(metadata %struct.cJSON* %5, metadata !12293, metadata !DIExpression()), !dbg !12296
  %6 = icmp eq %struct.cJSON* %5, null, !dbg !12298
  br i1 %6, label %14, label %7, !dbg !12298

7:                                                ; preds = %3, %7
  %8 = phi %struct.cJSON* [ %12, %7 ], [ %5, %3 ]
  %9 = phi i32 [ %10, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12294, metadata !DIExpression()), !dbg !12296
  %10 = add nuw nsw i32 %9, 1, !dbg !12299
  call void @llvm.dbg.value(metadata i32 %10, metadata !12294, metadata !DIExpression()), !dbg !12296
  %11 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %8, i32 0, i32 0, !dbg !12300
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12293, metadata !DIExpression()), !dbg !12296
  %12 = load %struct.cJSON*, %struct.cJSON** %11, align 8, !dbg !12296
  call void @llvm.dbg.value(metadata %struct.cJSON* %12, metadata !12293, metadata !DIExpression()), !dbg !12296
  %13 = icmp eq %struct.cJSON* %12, null, !dbg !12298
  br i1 %13, label %35, label %7, !dbg !12298, !llvm.loop !12301

14:                                               ; preds = %3
  %15 = icmp eq i32 %2, 0, !dbg !12302
  %16 = add nsw i32 %1, 4, !dbg !12302
  %17 = select i1 %15, i32 3, i32 %16, !dbg !12302
  %18 = tail call i8* @cJSON_malloc(i32 noundef %17) #22, !dbg !12305
  call void @llvm.dbg.value(metadata i8* %18, metadata !12286, metadata !DIExpression()), !dbg !12296
  %19 = icmp eq i8* %18, null, !dbg !12306
  br i1 %19, label %162, label %20, !dbg !12308

20:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i8* %18, metadata !12287, metadata !DIExpression()), !dbg !12296
  %21 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !12309
  call void @llvm.dbg.value(metadata i8* %21, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 123, i8* %18, align 1, !dbg !12310
  br i1 %15, label %32, label %22, !dbg !12311

22:                                               ; preds = %20
  %23 = getelementptr inbounds i8, i8* %18, i32 2, !dbg !12312
  call void @llvm.dbg.value(metadata i8* %23, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 10, i8* %21, align 1, !dbg !12315
  call void @llvm.dbg.value(metadata i32 0, metadata !12291, metadata !DIExpression()), !dbg !12296
  %24 = add i32 %1, -1
  %25 = icmp sgt i32 %1, 1, !dbg !12316
  br i1 %25, label %26, label %32, !dbg !12319

26:                                               ; preds = %22, %26
  %27 = phi i32 [ %30, %26 ], [ 0, %22 ]
  %28 = phi i8* [ %29, %26 ], [ %23, %22 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !12291, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8* %28, metadata !12287, metadata !DIExpression()), !dbg !12296
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !12320
  call void @llvm.dbg.value(metadata i8* %29, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 9, i8* %28, align 1, !dbg !12321
  %30 = add nuw nsw i32 %27, 1, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %30, metadata !12291, metadata !DIExpression()), !dbg !12296
  %31 = icmp eq i32 %30, %24, !dbg !12316
  br i1 %31, label %32, label %26, !dbg !12319, !llvm.loop !12323

32:                                               ; preds = %26, %22, %20
  %33 = phi i8* [ %21, %20 ], [ %23, %22 ], [ %29, %26 ], !dbg !12325
  call void @llvm.dbg.value(metadata i8* %33, metadata !12287, metadata !DIExpression()), !dbg !12296
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !12326
  call void @llvm.dbg.value(metadata i8* %34, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 125, i8* %33, align 1, !dbg !12327
  call void @llvm.dbg.value(metadata i8* %34, metadata !12287, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12296
  store i8 0, i8* %34, align 1, !dbg !12328
  br label %162, !dbg !12329

35:                                               ; preds = %7
  %36 = shl i32 %10, 2, !dbg !12330
  %37 = tail call i8* @cJSON_malloc(i32 noundef %36) #22, !dbg !12331
  %38 = bitcast i8* %37 to i8**, !dbg !12332
  call void @llvm.dbg.value(metadata i8** %38, metadata !12284, metadata !DIExpression()), !dbg !12296
  %39 = icmp eq i8* %37, null, !dbg !12333
  br i1 %39, label %162, label %40, !dbg !12335

40:                                               ; preds = %35
  %41 = tail call i8* @cJSON_malloc(i32 noundef %36) #22, !dbg !12336
  %42 = bitcast i8* %41 to i8**, !dbg !12337
  call void @llvm.dbg.value(metadata i8** %42, metadata !12285, metadata !DIExpression()), !dbg !12296
  %43 = icmp eq i8* %41, null, !dbg !12338
  br i1 %43, label %44, label %45, !dbg !12340

44:                                               ; preds = %40
  tail call void @cJSON_free(i8* noundef nonnull %37) #22, !dbg !12341
  br label %162, !dbg !12343

45:                                               ; preds = %40
  %46 = tail call i8* @memset(i8* noundef nonnull %37, i32 noundef 0, i32 noundef %36) #20, !dbg !12344
  %47 = tail call i8* @memset(i8* noundef nonnull %41, i32 noundef 0, i32 noundef %36) #20, !dbg !12345
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12293, metadata !DIExpression()), !dbg !12296
  %48 = add i32 %1, 1, !dbg !12346
  call void @llvm.dbg.value(metadata i32 %48, metadata !12282, metadata !DIExpression()), !dbg !12296
  %49 = icmp eq i32 %2, 0, !dbg !12347
  %50 = add nsw i32 %1, 8
  %51 = select i1 %49, i32 7, i32 %50, !dbg !12349
  call void @llvm.dbg.value(metadata i32 %51, metadata !12290, metadata !DIExpression()), !dbg !12296
  %52 = load %struct.cJSON*, %struct.cJSON** %4, align 8, !dbg !12296
  call void @llvm.dbg.value(metadata i32 0, metadata !12295, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata %struct.cJSON* %52, metadata !12293, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 0, metadata !12291, metadata !DIExpression()), !dbg !12296
  %53 = icmp eq %struct.cJSON* %52, null, !dbg !12350
  br i1 %53, label %81, label %54, !dbg !12351

54:                                               ; preds = %45
  %55 = add i32 %1, 5
  %56 = select i1 %49, i32 2, i32 %55
  br label %57, !dbg !12351

57:                                               ; preds = %54, %70
  %58 = phi %struct.cJSON* [ %52, %54 ], [ %78, %70 ]
  %59 = phi i32 [ 0, %54 ], [ %71, %70 ]
  %60 = phi i32 [ %51, %54 ], [ %76, %70 ]
  call void @llvm.dbg.value(metadata i32 %59, metadata !12291, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %60, metadata !12290, metadata !DIExpression()), !dbg !12296
  %61 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %58, i32 0, i32 7, !dbg !12352
  %62 = load i8*, i8** %61, align 8, !dbg !12352
  %63 = tail call fastcc i8* @print_string_ptr(i8* noundef %62) #22, !dbg !12354
  call void @llvm.dbg.value(metadata i8* %63, metadata !12289, metadata !DIExpression()), !dbg !12296
  %64 = getelementptr inbounds i8*, i8** %42, i32 %59, !dbg !12355
  store i8* %63, i8** %64, align 4, !dbg !12356
  %65 = tail call fastcc i8* @print_value(%struct.cJSON* noundef nonnull %58, i32 noundef %48, i32 noundef %2) #22, !dbg !12357
  call void @llvm.dbg.value(metadata i8* %65, metadata !12288, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %59, metadata !12291, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12296
  %66 = getelementptr inbounds i8*, i8** %38, i32 %59, !dbg !12358
  store i8* %65, i8** %66, align 4, !dbg !12359
  %67 = icmp ne i8* %63, null, !dbg !12360
  %68 = icmp ne i8* %65, null
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12362
  br i1 %69, label %70, label %85, !dbg !12362

70:                                               ; preds = %57
  %71 = add nuw nsw i32 %59, 1, !dbg !12363
  call void @llvm.dbg.value(metadata i32 %71, metadata !12291, metadata !DIExpression()), !dbg !12296
  %72 = tail call i32 @strlen(i8* noundef nonnull %65) #20, !dbg !12364
  %73 = tail call i32 @strlen(i8* noundef nonnull %63) #20, !dbg !12365
  %74 = add i32 %56, %60, !dbg !12366
  %75 = add i32 %74, %72, !dbg !12367
  %76 = add i32 %75, %73, !dbg !12368
  call void @llvm.dbg.value(metadata i32 0, metadata !12295, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %76, metadata !12290, metadata !DIExpression()), !dbg !12296
  %77 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %58, i32 0, i32 0, !dbg !12369
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12293, metadata !DIExpression()), !dbg !12296
  %78 = load %struct.cJSON*, %struct.cJSON** %77, align 8, !dbg !12296
  call void @llvm.dbg.value(metadata %struct.cJSON* %78, metadata !12293, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %59, metadata !12291, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12296
  %79 = icmp ne %struct.cJSON* %78, null, !dbg !12350
  %80 = and i1 %69, %79, !dbg !12370
  br i1 %80, label %57, label %81, !dbg !12351, !llvm.loop !12371

81:                                               ; preds = %70, %45
  %82 = phi i32 [ %51, %45 ], [ %76, %70 ]
  %83 = tail call i8* @cJSON_malloc(i32 noundef %82) #22, !dbg !12373
  call void @llvm.dbg.value(metadata i8* %83, metadata !12286, metadata !DIExpression()), !dbg !12296
  %84 = icmp eq i8* %83, null, !dbg !12375
  call void @llvm.dbg.value(metadata i32 undef, metadata !12295, metadata !DIExpression()), !dbg !12296
  br i1 %84, label %85, label %101, !dbg !12377

85:                                               ; preds = %57, %81
  br label %86, !dbg !12378

86:                                               ; preds = %85, %97
  %87 = phi i32 [ %98, %97 ], [ 0, %85 ]
  call void @llvm.dbg.value(metadata i32 %87, metadata !12291, metadata !DIExpression()), !dbg !12296
  %88 = getelementptr inbounds i8*, i8** %42, i32 %87, !dbg !12382
  %89 = load i8*, i8** %88, align 4, !dbg !12382
  %90 = icmp eq i8* %89, null, !dbg !12382
  br i1 %90, label %92, label %91, !dbg !12386

91:                                               ; preds = %86
  tail call void @cJSON_free(i8* noundef nonnull %89) #22, !dbg !12387
  br label %92, !dbg !12387

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds i8*, i8** %38, i32 %87, !dbg !12388
  %94 = load i8*, i8** %93, align 4, !dbg !12388
  %95 = icmp eq i8* %94, null, !dbg !12388
  br i1 %95, label %97, label %96, !dbg !12390

96:                                               ; preds = %92
  tail call void @cJSON_free(i8* noundef nonnull %94) #22, !dbg !12391
  br label %97, !dbg !12391

97:                                               ; preds = %92, %96
  %98 = add nuw i32 %87, 1, !dbg !12392
  call void @llvm.dbg.value(metadata i32 %98, metadata !12291, metadata !DIExpression()), !dbg !12296
  %99 = icmp eq i32 %87, %9, !dbg !12393
  br i1 %99, label %100, label %86, !dbg !12378, !llvm.loop !12394

100:                                              ; preds = %97
  tail call void @cJSON_free(i8* noundef nonnull %41) #22, !dbg !12396
  tail call void @cJSON_free(i8* noundef nonnull %37) #22, !dbg !12397
  br label %162, !dbg !12398

101:                                              ; preds = %81
  store i8 123, i8* %83, align 1, !dbg !12399
  %102 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !12400
  call void @llvm.dbg.value(metadata i8* %102, metadata !12287, metadata !DIExpression()), !dbg !12296
  br i1 %49, label %105, label %103, !dbg !12401

103:                                              ; preds = %101
  %104 = getelementptr inbounds i8, i8* %83, i32 2, !dbg !12402
  call void @llvm.dbg.value(metadata i8* %104, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 10, i8* %102, align 1, !dbg !12404
  br label %105, !dbg !12405

105:                                              ; preds = %101, %103
  %106 = phi i8* [ %104, %103 ], [ %102, %101 ], !dbg !12296
  call void @llvm.dbg.value(metadata i8* %106, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 0, i8* %106, align 1, !dbg !12406
  call void @llvm.dbg.value(metadata i32 0, metadata !12291, metadata !DIExpression()), !dbg !12296
  %107 = icmp slt i32 %1, 0
  %108 = or i1 %49, %107
  br label %109, !dbg !12407

109:                                              ; preds = %105, %144
  %110 = phi i32 [ 0, %105 ], [ %148, %144 ]
  %111 = phi i8* [ %106, %105 ], [ %145, %144 ]
  call void @llvm.dbg.value(metadata i32 %110, metadata !12291, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8* %111, metadata !12287, metadata !DIExpression()), !dbg !12296
  br i1 %108, label %118, label %112, !dbg !12409

112:                                              ; preds = %109, %112
  %113 = phi i32 [ %116, %112 ], [ 0, %109 ]
  %114 = phi i8* [ %115, %112 ], [ %111, %109 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !12292, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8* %114, metadata !12287, metadata !DIExpression()), !dbg !12296
  %115 = getelementptr inbounds i8, i8* %114, i32 1, !dbg !12412
  call void @llvm.dbg.value(metadata i8* %115, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 9, i8* %114, align 1, !dbg !12416
  %116 = add nuw i32 %113, 1, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %116, metadata !12292, metadata !DIExpression()), !dbg !12296
  %117 = icmp eq i32 %113, %1, !dbg !12418
  br i1 %117, label %118, label %112, !dbg !12419, !llvm.loop !12420

118:                                              ; preds = %112, %109
  %119 = phi i8* [ %111, %109 ], [ %115, %112 ], !dbg !12402
  call void @llvm.dbg.value(metadata i8* %119, metadata !12287, metadata !DIExpression()), !dbg !12296
  %120 = getelementptr inbounds i8*, i8** %42, i32 %110, !dbg !12422
  %121 = load i8*, i8** %120, align 4, !dbg !12422
  %122 = tail call i8* @strcpy(i8* noundef nonnull %119, i8* noundef %121) #20, !dbg !12423
  %123 = load i8*, i8** %120, align 4, !dbg !12424
  %124 = tail call i32 @strlen(i8* noundef %123) #20, !dbg !12425
  %125 = getelementptr inbounds i8, i8* %119, i32 %124, !dbg !12426
  call void @llvm.dbg.value(metadata i8* %125, metadata !12287, metadata !DIExpression()), !dbg !12296
  %126 = getelementptr inbounds i8, i8* %125, i32 1, !dbg !12427
  call void @llvm.dbg.value(metadata i8* %126, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 58, i8* %125, align 1, !dbg !12428
  br i1 %49, label %129, label %127, !dbg !12429

127:                                              ; preds = %118
  %128 = getelementptr inbounds i8, i8* %126, i32 1, !dbg !12430
  call void @llvm.dbg.value(metadata i8* %128, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 9, i8* %126, align 1, !dbg !12432
  br label %129, !dbg !12433

129:                                              ; preds = %127, %118
  %130 = phi i8* [ %128, %127 ], [ %126, %118 ], !dbg !12434
  call void @llvm.dbg.value(metadata i8* %130, metadata !12287, metadata !DIExpression()), !dbg !12296
  %131 = getelementptr inbounds i8*, i8** %38, i32 %110, !dbg !12435
  %132 = load i8*, i8** %131, align 4, !dbg !12435
  %133 = tail call i8* @strcpy(i8* noundef nonnull %130, i8* noundef %132) #20, !dbg !12436
  %134 = load i8*, i8** %131, align 4, !dbg !12437
  %135 = tail call i32 @strlen(i8* noundef %134) #20, !dbg !12438
  %136 = getelementptr inbounds i8, i8* %130, i32 %135, !dbg !12439
  call void @llvm.dbg.value(metadata i8* %136, metadata !12287, metadata !DIExpression()), !dbg !12296
  %137 = icmp eq i32 %110, %9, !dbg !12440
  br i1 %137, label %140, label %138, !dbg !12442

138:                                              ; preds = %129
  %139 = getelementptr inbounds i8, i8* %136, i32 1, !dbg !12443
  call void @llvm.dbg.value(metadata i8* %139, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 44, i8* %136, align 1, !dbg !12444
  br label %140, !dbg !12445

140:                                              ; preds = %138, %129
  %141 = phi i8* [ %139, %138 ], [ %136, %129 ], !dbg !12434
  call void @llvm.dbg.value(metadata i8* %141, metadata !12287, metadata !DIExpression()), !dbg !12296
  br i1 %49, label %144, label %142, !dbg !12446

142:                                              ; preds = %140
  %143 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !12447
  call void @llvm.dbg.value(metadata i8* %143, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 10, i8* %141, align 1, !dbg !12449
  br label %144, !dbg !12450

144:                                              ; preds = %142, %140
  %145 = phi i8* [ %143, %142 ], [ %141, %140 ], !dbg !12434
  call void @llvm.dbg.value(metadata i8* %145, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 0, i8* %145, align 1, !dbg !12451
  %146 = load i8*, i8** %120, align 4, !dbg !12452
  tail call void @cJSON_free(i8* noundef %146) #22, !dbg !12453
  %147 = load i8*, i8** %131, align 4, !dbg !12454
  tail call void @cJSON_free(i8* noundef %147) #22, !dbg !12455
  %148 = add nuw i32 %110, 1, !dbg !12456
  call void @llvm.dbg.value(metadata i32 %148, metadata !12291, metadata !DIExpression()), !dbg !12296
  %149 = icmp eq i32 %110, %9, !dbg !12457
  br i1 %149, label %150, label %109, !dbg !12407, !llvm.loop !12458

150:                                              ; preds = %144
  tail call void @cJSON_free(i8* noundef nonnull %41) #22, !dbg !12460
  tail call void @cJSON_free(i8* noundef nonnull %37) #22, !dbg !12461
  %151 = icmp slt i32 %1, 1
  %152 = or i1 %49, %151, !dbg !12462
  call void @llvm.dbg.value(metadata i32 0, metadata !12291, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8* %145, metadata !12287, metadata !DIExpression()), !dbg !12296
  br i1 %152, label %159, label %153, !dbg !12462

153:                                              ; preds = %150, %153
  %154 = phi i32 [ %157, %153 ], [ 0, %150 ]
  %155 = phi i8* [ %156, %153 ], [ %145, %150 ]
  call void @llvm.dbg.value(metadata i32 %154, metadata !12291, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8* %155, metadata !12287, metadata !DIExpression()), !dbg !12296
  %156 = getelementptr inbounds i8, i8* %155, i32 1, !dbg !12463
  call void @llvm.dbg.value(metadata i8* %156, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 9, i8* %155, align 1, !dbg !12467
  %157 = add nuw nsw i32 %154, 1, !dbg !12468
  call void @llvm.dbg.value(metadata i32 %157, metadata !12291, metadata !DIExpression()), !dbg !12296
  %158 = icmp eq i32 %157, %1, !dbg !12469
  br i1 %158, label %159, label %153, !dbg !12470, !llvm.loop !12471

159:                                              ; preds = %153, %150
  %160 = phi i8* [ %145, %150 ], [ %156, %153 ], !dbg !12402
  call void @llvm.dbg.value(metadata i8* %160, metadata !12287, metadata !DIExpression()), !dbg !12296
  %161 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !12473
  call void @llvm.dbg.value(metadata i8* %161, metadata !12287, metadata !DIExpression()), !dbg !12296
  store i8 125, i8* %160, align 1, !dbg !12474
  call void @llvm.dbg.value(metadata i8* %161, metadata !12287, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12296
  store i8 0, i8* %161, align 1, !dbg !12475
  br label %162, !dbg !12476

162:                                              ; preds = %35, %14, %159, %100, %44, %32
  %163 = phi i8* [ null, %100 ], [ %83, %159 ], [ null, %44 ], [ %18, %32 ], [ null, %14 ], [ null, %35 ], !dbg !12296
  ret i8* %163, !dbg !12477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @print_string_ptr(i8* noundef readonly %0) unnamed_addr #0 !dbg !12478 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12480, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata i32 0, metadata !12484, metadata !DIExpression()), !dbg !12486
  %2 = icmp eq i8* %0, null, !dbg !12487
  br i1 %2, label %6, label %3, !dbg !12489

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !12484, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata i8* %0, metadata !12481, metadata !DIExpression()), !dbg !12486
  %4 = load i8, i8* %0, align 1, !dbg !12490
  call void @llvm.dbg.value(metadata i8 %4, metadata !12485, metadata !DIExpression()), !dbg !12486
  %5 = icmp eq i8 %4, 0, !dbg !12491
  br i1 %5, label %26, label %8, !dbg !12492

6:                                                ; preds = %1
  %7 = tail call fastcc i8* @cJSON_strdup(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4.190, i32 0, i32 0)) #22, !dbg !12493
  br label %73, !dbg !12494

8:                                                ; preds = %3, %14
  %9 = phi i8 [ %24, %14 ], [ %4, %3 ]
  %10 = phi i32 [ %22, %14 ], [ 0, %3 ]
  %11 = phi i8* [ %23, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12484, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata i8* %11, metadata !12481, metadata !DIExpression()), !dbg !12486
  %12 = add nsw i32 %10, 1, !dbg !12495
  call void @llvm.dbg.value(metadata i32 %12, metadata !12484, metadata !DIExpression()), !dbg !12486
  %13 = icmp eq i32 %12, 0, !dbg !12492
  br i1 %13, label %26, label %14, !dbg !12496

14:                                               ; preds = %8
  %15 = zext i8 %9 to i32, !dbg !12491
  %16 = tail call i8* @strchr(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.191, i32 0, i32 0), i32 noundef %15) #20, !dbg !12497
  %17 = icmp eq i8* %16, null, !dbg !12497
  %18 = add nsw i32 %10, 2, !dbg !12500
  %19 = icmp ult i8 %9, 32, !dbg !12500
  %20 = add nsw i32 %10, 6, !dbg !12500
  %21 = select i1 %19, i32 %20, i32 %12, !dbg !12500
  %22 = select i1 %17, i32 %21, i32 %18, !dbg !12500
  call void @llvm.dbg.value(metadata i32 %22, metadata !12484, metadata !DIExpression()), !dbg !12486
  %23 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !12501
  call void @llvm.dbg.value(metadata i8* %23, metadata !12481, metadata !DIExpression()), !dbg !12486
  %24 = load i8, i8* %23, align 1, !dbg !12490
  call void @llvm.dbg.value(metadata i8 %24, metadata !12485, metadata !DIExpression()), !dbg !12486
  %25 = icmp eq i8 %24, 0, !dbg !12491
  br i1 %25, label %26, label %8, !dbg !12492, !llvm.loop !12502

26:                                               ; preds = %8, %14, %3
  %27 = phi i32 [ 0, %3 ], [ %22, %14 ], [ 0, %8 ], !dbg !12486
  call void @llvm.dbg.value(metadata i32 %27, metadata !12484, metadata !DIExpression()), !dbg !12486
  %28 = add nsw i32 %27, 3, !dbg !12504
  %29 = tail call i8* @cJSON_malloc(i32 noundef %28) #22, !dbg !12505
  call void @llvm.dbg.value(metadata i8* %29, metadata !12483, metadata !DIExpression()), !dbg !12486
  %30 = icmp eq i8* %29, null, !dbg !12506
  br i1 %30, label %73, label %31, !dbg !12508

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i8* %29, metadata !12482, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata i8* %0, metadata !12481, metadata !DIExpression()), !dbg !12486
  %32 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !12509
  call void @llvm.dbg.value(metadata i8* %32, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 34, i8* %29, align 1, !dbg !12510
  %33 = load i8, i8* %0, align 1, !dbg !12511
  %34 = icmp eq i8 %33, 0, !dbg !12512
  br i1 %34, label %70, label %35, !dbg !12512

35:                                               ; preds = %31, %65
  %36 = phi i8 [ %68, %65 ], [ %33, %31 ]
  %37 = phi i8* [ %66, %65 ], [ %32, %31 ]
  %38 = phi i8* [ %67, %65 ], [ %0, %31 ]
  call void @llvm.dbg.value(metadata i8* %37, metadata !12482, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata i8* %38, metadata !12481, metadata !DIExpression()), !dbg !12486
  %39 = freeze i8 %36
  %40 = icmp ult i8 %39, 32, !dbg !12513
  br i1 %40, label %44, label %41, !dbg !12516

41:                                               ; preds = %35
  switch i8 %39, label %42 [
    i8 92, label %44
    i8 34, label %44
  ], !dbg !12516

42:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i8* %38, metadata !12481, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12486
  %43 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !12517
  call void @llvm.dbg.value(metadata i8* %43, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 %39, i8* %37, align 1, !dbg !12518
  br label %65, !dbg !12519

44:                                               ; preds = %41, %41, %35
  %45 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !12520
  call void @llvm.dbg.value(metadata i8* %45, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 92, i8* %37, align 1, !dbg !12522
  call void @llvm.dbg.value(metadata i8* %38, metadata !12481, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12486
  %46 = load i8, i8* %38, align 1, !dbg !12523
  call void @llvm.dbg.value(metadata i8 %46, metadata !12485, metadata !DIExpression()), !dbg !12486
  switch i8 %46, label %61 [
    i8 92, label %47
    i8 34, label %49
    i8 8, label %51
    i8 12, label %53
    i8 10, label %55
    i8 13, label %57
    i8 9, label %59
  ], !dbg !12524

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, i8* %37, i32 2, !dbg !12525
  call void @llvm.dbg.value(metadata i8* %48, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 92, i8* %45, align 1, !dbg !12527
  br label %65, !dbg !12528

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, i8* %37, i32 2, !dbg !12529
  call void @llvm.dbg.value(metadata i8* %50, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 34, i8* %45, align 1, !dbg !12530
  br label %65, !dbg !12531

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %37, i32 2, !dbg !12532
  call void @llvm.dbg.value(metadata i8* %52, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 98, i8* %45, align 1, !dbg !12533
  br label %65, !dbg !12534

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %37, i32 2, !dbg !12535
  call void @llvm.dbg.value(metadata i8* %54, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 102, i8* %45, align 1, !dbg !12536
  br label %65, !dbg !12537

55:                                               ; preds = %44
  %56 = getelementptr inbounds i8, i8* %37, i32 2, !dbg !12538
  call void @llvm.dbg.value(metadata i8* %56, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 110, i8* %45, align 1, !dbg !12539
  br label %65, !dbg !12540

57:                                               ; preds = %44
  %58 = getelementptr inbounds i8, i8* %37, i32 2, !dbg !12541
  call void @llvm.dbg.value(metadata i8* %58, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 114, i8* %45, align 1, !dbg !12542
  br label %65, !dbg !12543

59:                                               ; preds = %44
  %60 = getelementptr inbounds i8, i8* %37, i32 2, !dbg !12544
  call void @llvm.dbg.value(metadata i8* %60, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 116, i8* %45, align 1, !dbg !12545
  br label %65, !dbg !12546

61:                                               ; preds = %44
  %62 = zext i8 %46 to i32, !dbg !12547
  %63 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %45, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.192, i32 0, i32 0), i32 noundef %62) #20, !dbg !12548
  %64 = getelementptr inbounds i8, i8* %37, i32 6, !dbg !12549
  call void @llvm.dbg.value(metadata i8* %64, metadata !12482, metadata !DIExpression()), !dbg !12486
  br label %65, !dbg !12550

65:                                               ; preds = %47, %49, %51, %53, %55, %57, %59, %61, %42
  %66 = phi i8* [ %43, %42 ], [ %64, %61 ], [ %60, %59 ], [ %58, %57 ], [ %56, %55 ], [ %54, %53 ], [ %52, %51 ], [ %50, %49 ], [ %48, %47 ], !dbg !12551
  %67 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !12551
  call void @llvm.dbg.value(metadata i8* %66, metadata !12482, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata i8* %67, metadata !12481, metadata !DIExpression()), !dbg !12486
  %68 = load i8, i8* %67, align 1, !dbg !12511
  %69 = icmp eq i8 %68, 0, !dbg !12512
  br i1 %69, label %70, label %35, !dbg !12512, !llvm.loop !12552

70:                                               ; preds = %65, %31
  %71 = phi i8* [ %32, %31 ], [ %66, %65 ], !dbg !12486
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !12554
  call void @llvm.dbg.value(metadata i8* %72, metadata !12482, metadata !DIExpression()), !dbg !12486
  store i8 34, i8* %71, align 1, !dbg !12555
  call void @llvm.dbg.value(metadata i8* %72, metadata !12482, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12486
  store i8 0, i8* %72, align 1, !dbg !12556
  br label %73, !dbg !12557

73:                                               ; preds = %26, %70, %6
  %74 = phi i8* [ %29, %70 ], [ %7, %6 ], [ null, %26 ], !dbg !12486
  ret i8* %74, !dbg !12558
}

; Function Attrs: optsize
declare dso_local i8* @strchr(i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local double @fabs(double noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i8* @cJSON_PrintUnformatted(%struct.cJSON* noundef %0) local_unnamed_addr #0 !dbg !12559 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12561, metadata !DIExpression()), !dbg !12562
  %2 = tail call fastcc i8* @print_value(%struct.cJSON* noundef %0, i32 noundef 0, i32 noundef 0) #22, !dbg !12563
  ret i8* %2, !dbg !12564
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @cJSON_GetArraySize(%struct.cJSON* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !12565 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12569, metadata !DIExpression()), !dbg !12572
  %2 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12573
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 0, metadata !12571, metadata !DIExpression()), !dbg !12572
  %3 = load %struct.cJSON*, %struct.cJSON** %2, align 8, !dbg !12572
  call void @llvm.dbg.value(metadata %struct.cJSON* %3, metadata !12570, metadata !DIExpression()), !dbg !12572
  %4 = icmp eq %struct.cJSON* %3, null, !dbg !12574
  br i1 %4, label %12, label %5, !dbg !12574

5:                                                ; preds = %1, %5
  %6 = phi %struct.cJSON* [ %10, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %8, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12571, metadata !DIExpression()), !dbg !12572
  %8 = add nuw nsw i32 %7, 1, !dbg !12575
  call void @llvm.dbg.value(metadata i32 %8, metadata !12571, metadata !DIExpression()), !dbg !12572
  %9 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %6, i32 0, i32 0, !dbg !12576
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12570, metadata !DIExpression()), !dbg !12572
  %10 = load %struct.cJSON*, %struct.cJSON** %9, align 8, !dbg !12572
  call void @llvm.dbg.value(metadata %struct.cJSON* %10, metadata !12570, metadata !DIExpression()), !dbg !12572
  %11 = icmp eq %struct.cJSON* %10, null, !dbg !12574
  br i1 %11, label %12, label %5, !dbg !12574, !llvm.loop !12577

12:                                               ; preds = %5, %1
  %13 = phi i32 [ 0, %1 ], [ %8, %5 ], !dbg !12572
  ret i32 %13, !dbg !12578
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.cJSON* @cJSON_GetArrayItem(%struct.cJSON* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !12579 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12583, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 %1, metadata !12584, metadata !DIExpression()), !dbg !12586
  %3 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12587
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12585, metadata !DIExpression()), !dbg !12586
  %4 = load %struct.cJSON*, %struct.cJSON** %3, align 8, !dbg !12586
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !12585, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 %1, metadata !12584, metadata !DIExpression()), !dbg !12586
  %5 = icmp ne %struct.cJSON* %4, null, !dbg !12588
  %6 = icmp sgt i32 %1, 0, !dbg !12589
  %7 = and i1 %5, %6, !dbg !12589
  br i1 %7, label %8, label %17, !dbg !12590

8:                                                ; preds = %2, %8
  %9 = phi %struct.cJSON* [ %13, %8 ], [ %4, %2 ]
  %10 = phi i32 [ %11, %8 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12584, metadata !DIExpression()), !dbg !12586
  %11 = add nsw i32 %10, -1, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %11, metadata !12584, metadata !DIExpression()), !dbg !12586
  %12 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %9, i32 0, i32 0, !dbg !12592
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12585, metadata !DIExpression()), !dbg !12586
  %13 = load %struct.cJSON*, %struct.cJSON** %12, align 8, !dbg !12586
  call void @llvm.dbg.value(metadata %struct.cJSON* %13, metadata !12585, metadata !DIExpression()), !dbg !12586
  %14 = icmp ne %struct.cJSON* %13, null, !dbg !12588
  %15 = icmp ugt i32 %10, 1, !dbg !12589
  %16 = select i1 %14, i1 %15, i1 false, !dbg !12589
  br i1 %16, label %8, label %17, !dbg !12590, !llvm.loop !12593

17:                                               ; preds = %8, %2
  %18 = phi %struct.cJSON* [ %4, %2 ], [ %13, %8 ], !dbg !12586
  ret %struct.cJSON* %18, !dbg !12594
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.cJSON* @cJSON_GetObjectItem(%struct.cJSON* nocapture noundef readonly %0, i8* noundef readonly %1) local_unnamed_addr #13 !dbg !12595 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12599, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i8* %1, metadata !12600, metadata !DIExpression()), !dbg !12602
  %3 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12603
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12601, metadata !DIExpression()), !dbg !12602
  %4 = load %struct.cJSON*, %struct.cJSON** %3, align 8, !dbg !12602
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !12601, metadata !DIExpression()), !dbg !12602
  %5 = icmp eq %struct.cJSON* %4, null, !dbg !12604
  br i1 %5, label %16, label %6, !dbg !12605

6:                                                ; preds = %2, %12
  %7 = phi %struct.cJSON* [ %14, %12 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %7, i32 0, i32 7, !dbg !12606
  %9 = load i8*, i8** %8, align 8, !dbg !12606
  %10 = tail call fastcc i32 @cJSON_strcasecmp(i8* noundef %9, i8* noundef %1) #22, !dbg !12607
  %11 = icmp eq i32 %10, 0, !dbg !12605
  br i1 %11, label %16, label %12, !dbg !12608

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %7, i32 0, i32 0, !dbg !12609
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12601, metadata !DIExpression()), !dbg !12602
  %14 = load %struct.cJSON*, %struct.cJSON** %13, align 8, !dbg !12602
  call void @llvm.dbg.value(metadata %struct.cJSON* %14, metadata !12601, metadata !DIExpression()), !dbg !12602
  %15 = icmp eq %struct.cJSON* %14, null, !dbg !12604
  br i1 %15, label %16, label %6, !dbg !12605, !llvm.loop !12610

16:                                               ; preds = %6, %12, %2
  %17 = phi %struct.cJSON* [ null, %2 ], [ null, %12 ], [ %7, %6 ], !dbg !12602
  ret %struct.cJSON* %17, !dbg !12611
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc i32 @cJSON_strcasecmp(i8* noundef readonly %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !12612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12616, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %1, metadata !12617, metadata !DIExpression()), !dbg !12628
  %3 = icmp eq i8* %0, null, !dbg !12629
  br i1 %3, label %4, label %7, !dbg !12631

4:                                                ; preds = %2
  %5 = icmp ne i8* %1, null, !dbg !12632
  %6 = zext i1 %5 to i32, !dbg !12633
  br label %56, !dbg !12634

7:                                                ; preds = %2
  %8 = icmp eq i8* %1, null, !dbg !12635
  br i1 %8, label %56, label %9, !dbg !12637

9:                                                ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !12616, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %1, metadata !12617, metadata !DIExpression()), !dbg !12628
  %10 = load i8, i8* %0, align 1, !dbg !12638
  call void @llvm.dbg.value(metadata i8 %10, metadata !12618, metadata !DIExpression()), !dbg !12639
  %11 = zext i8 %10 to i32, !dbg !12638
  %12 = getelementptr inbounds i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ctype_, i32 0, i32 1), i32 %11, !dbg !12638
  %13 = load i8, i8* %12, align 1, !dbg !12638
  %14 = and i8 %13, 3, !dbg !12638
  %15 = icmp eq i8 %14, 1, !dbg !12638
  %16 = add nuw nsw i32 %11, 32, !dbg !12638
  %17 = select i1 %15, i32 %16, i32 %11, !dbg !12638
  %18 = load i8, i8* %1, align 1, !dbg !12640
  call void @llvm.dbg.value(metadata i8 %18, metadata !12622, metadata !DIExpression()), !dbg !12641
  %19 = zext i8 %18 to i32, !dbg !12640
  %20 = getelementptr inbounds i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ctype_, i32 0, i32 1), i32 %19, !dbg !12640
  %21 = load i8, i8* %20, align 1, !dbg !12640
  %22 = and i8 %21, 3, !dbg !12640
  %23 = icmp eq i8 %22, 1, !dbg !12640
  %24 = add nuw nsw i32 %19, 32, !dbg !12640
  %25 = select i1 %23, i32 %24, i32 %19, !dbg !12640
  %26 = icmp eq i32 %17, %25, !dbg !12642
  br i1 %26, label %27, label %52, !dbg !12643

27:                                               ; preds = %9, %32
  %28 = phi i8 [ %35, %32 ], [ %10, %9 ]
  %29 = phi i8* [ %33, %32 ], [ %0, %9 ]
  %30 = phi i8* [ %34, %32 ], [ %1, %9 ]
  call void @llvm.dbg.value(metadata i8* %29, metadata !12616, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %30, metadata !12617, metadata !DIExpression()), !dbg !12628
  %31 = icmp eq i8 %28, 0, !dbg !12644
  br i1 %31, label %56, label %32, !dbg !12646

32:                                               ; preds = %27
  %33 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !12647
  call void @llvm.dbg.value(metadata i8* %33, metadata !12616, metadata !DIExpression()), !dbg !12628
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !12648
  call void @llvm.dbg.value(metadata i8* %34, metadata !12617, metadata !DIExpression()), !dbg !12628
  %35 = load i8, i8* %33, align 1, !dbg !12638
  call void @llvm.dbg.value(metadata i8 %35, metadata !12618, metadata !DIExpression()), !dbg !12639
  %36 = zext i8 %35 to i32, !dbg !12638
  %37 = getelementptr inbounds i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ctype_, i32 0, i32 1), i32 %36, !dbg !12638
  %38 = load i8, i8* %37, align 1, !dbg !12638
  %39 = and i8 %38, 3, !dbg !12638
  %40 = icmp eq i8 %39, 1, !dbg !12638
  %41 = add nuw nsw i32 %36, 32, !dbg !12638
  %42 = select i1 %40, i32 %41, i32 %36, !dbg !12638
  %43 = load i8, i8* %34, align 1, !dbg !12640
  call void @llvm.dbg.value(metadata i8 %43, metadata !12622, metadata !DIExpression()), !dbg !12641
  %44 = zext i8 %43 to i32, !dbg !12640
  %45 = getelementptr inbounds i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ctype_, i32 0, i32 1), i32 %44, !dbg !12640
  %46 = load i8, i8* %45, align 1, !dbg !12640
  %47 = and i8 %46, 3, !dbg !12640
  %48 = icmp eq i8 %47, 1, !dbg !12640
  %49 = add nuw nsw i32 %44, 32, !dbg !12640
  %50 = select i1 %48, i32 %49, i32 %44, !dbg !12640
  %51 = icmp eq i32 %42, %50, !dbg !12642
  br i1 %51, label %27, label %52, !dbg !12643, !llvm.loop !12649

52:                                               ; preds = %32, %9
  %53 = phi i32 [ %17, %9 ], [ %42, %32 ], !dbg !12638
  %54 = phi i32 [ %25, %9 ], [ %50, %32 ], !dbg !12640
  %55 = sub nsw i32 %53, %54, !dbg !12651
  br label %56, !dbg !12652

56:                                               ; preds = %27, %7, %52, %4
  %57 = phi i32 [ %55, %52 ], [ %6, %4 ], [ 1, %7 ], [ 0, %27 ], !dbg !12628
  ret i32 %57, !dbg !12653
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @cJSON_AddItemToArray(%struct.cJSON* nocapture noundef %0, %struct.cJSON* noundef %1) local_unnamed_addr #15 !dbg !12654 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12658, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !12659, metadata !DIExpression()), !dbg !12661
  %3 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12662
  %4 = load %struct.cJSON*, %struct.cJSON** %3, align 8, !dbg !12662
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !12660, metadata !DIExpression()), !dbg !12661
  %5 = icmp eq %struct.cJSON* %1, null, !dbg !12663
  br i1 %5, label %15, label %6, !dbg !12665

6:                                                ; preds = %2
  %7 = icmp eq %struct.cJSON* %4, null, !dbg !12666
  br i1 %7, label %8, label %9, !dbg !12668

8:                                                ; preds = %6
  store %struct.cJSON* %1, %struct.cJSON** %3, align 8, !dbg !12669
  br label %15, !dbg !12671

9:                                                ; preds = %6, %9
  %10 = phi %struct.cJSON* [ %12, %9 ], [ %4, %6 ], !dbg !12661
  call void @llvm.dbg.value(metadata %struct.cJSON* %10, metadata !12660, metadata !DIExpression()), !dbg !12661
  %11 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %10, i32 0, i32 0, !dbg !12672
  %12 = load %struct.cJSON*, %struct.cJSON** %11, align 8, !dbg !12672
  %13 = icmp eq %struct.cJSON* %12, null, !dbg !12674
  br i1 %13, label %14, label %9, !dbg !12675, !llvm.loop !12676

14:                                               ; preds = %9
  tail call fastcc void @suffix_object(%struct.cJSON* noundef nonnull %10, %struct.cJSON* noundef nonnull %1) #22, !dbg !12678
  br label %15

15:                                               ; preds = %8, %14, %2
  ret void, !dbg !12679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @suffix_object(%struct.cJSON* noundef %0, %struct.cJSON* noundef %1) unnamed_addr #4 !dbg !12680 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12682, metadata !DIExpression()), !dbg !12684
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !12683, metadata !DIExpression()), !dbg !12684
  %3 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 0, !dbg !12685
  store %struct.cJSON* %1, %struct.cJSON** %3, align 8, !dbg !12686
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %1, i32 0, i32 1, !dbg !12687
  store %struct.cJSON* %0, %struct.cJSON** %4, align 4, !dbg !12688
  ret void, !dbg !12689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_AddItemToObject(%struct.cJSON* nocapture noundef %0, i8* noundef %1, %struct.cJSON* noundef %2) local_unnamed_addr #0 !dbg !12690 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12694, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.value(metadata i8* %1, metadata !12695, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12696, metadata !DIExpression()), !dbg !12697
  %4 = icmp eq %struct.cJSON* %2, null, !dbg !12698
  br i1 %4, label %12, label %5, !dbg !12700

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 7, !dbg !12701
  %7 = load i8*, i8** %6, align 8, !dbg !12701
  %8 = icmp eq i8* %7, null, !dbg !12703
  br i1 %8, label %10, label %9, !dbg !12704

9:                                                ; preds = %5
  tail call void @cJSON_free(i8* noundef nonnull %7) #22, !dbg !12705
  br label %10, !dbg !12705

10:                                               ; preds = %9, %5
  %11 = tail call fastcc i8* @cJSON_strdup(i8* noundef %1) #22, !dbg !12706
  store i8* %11, i8** %6, align 8, !dbg !12707
  tail call void @cJSON_AddItemToArray(%struct.cJSON* noundef %0, %struct.cJSON* noundef nonnull %2) #22, !dbg !12708
  br label %12, !dbg !12709

12:                                               ; preds = %3, %10
  ret void, !dbg !12709
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_AddItemReferenceToArray(%struct.cJSON* nocapture noundef %0, %struct.cJSON* noundef %1) local_unnamed_addr #0 !dbg !12710 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12712, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !12713, metadata !DIExpression()), !dbg !12714
  %3 = tail call fastcc %struct.cJSON* @create_reference(%struct.cJSON* noundef %1) #22, !dbg !12715
  tail call void @cJSON_AddItemToArray(%struct.cJSON* noundef %0, %struct.cJSON* noundef %3) #22, !dbg !12716
  ret void, !dbg !12717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.cJSON* @create_reference(%struct.cJSON* noundef %0) unnamed_addr #0 !dbg !12718 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12722, metadata !DIExpression()), !dbg !12724
  %2 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12725
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12723, metadata !DIExpression()), !dbg !12724
  %3 = icmp eq %struct.cJSON* %2, null, !dbg !12726
  br i1 %3, label %14, label %4, !dbg !12728

4:                                                ; preds = %1
  %5 = bitcast %struct.cJSON* %2 to i8*, !dbg !12729
  %6 = bitcast %struct.cJSON* %0 to i8*, !dbg !12730
  %7 = tail call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %6, i32 noundef 40) #20, !dbg !12731
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 7, !dbg !12732
  store i8* null, i8** %8, align 8, !dbg !12733
  %9 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 3, !dbg !12734
  %10 = load i32, i32* %9, align 4, !dbg !12735
  %11 = or i32 %10, 256, !dbg !12735
  store i32 %11, i32* %9, align 4, !dbg !12735
  %12 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 1, !dbg !12736
  store %struct.cJSON* null, %struct.cJSON** %12, align 4, !dbg !12737
  %13 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 0, !dbg !12738
  store %struct.cJSON* null, %struct.cJSON** %13, align 8, !dbg !12739
  br label %14, !dbg !12740

14:                                               ; preds = %1, %4
  ret %struct.cJSON* %2, !dbg !12741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_AddItemReferenceToObject(%struct.cJSON* nocapture noundef %0, i8* noundef %1, %struct.cJSON* noundef %2) local_unnamed_addr #0 !dbg !12742 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12744, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i8* %1, metadata !12745, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12746, metadata !DIExpression()), !dbg !12747
  %4 = tail call fastcc %struct.cJSON* @create_reference(%struct.cJSON* noundef %2) #22, !dbg !12748
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %0, i8* noundef %1, %struct.cJSON* noundef %4) #22, !dbg !12749
  ret void, !dbg !12750
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local %struct.cJSON* @cJSON_DetachItemFromArray(%struct.cJSON* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !12751 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12753, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 %1, metadata !12754, metadata !DIExpression()), !dbg !12756
  %3 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12757
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12755, metadata !DIExpression()), !dbg !12756
  %4 = load %struct.cJSON*, %struct.cJSON** %3, align 8, !dbg !12756
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !12755, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.value(metadata i32 %1, metadata !12754, metadata !DIExpression()), !dbg !12756
  %5 = icmp ne %struct.cJSON* %4, null, !dbg !12758
  %6 = icmp sgt i32 %1, 0, !dbg !12759
  %7 = and i1 %5, %6, !dbg !12759
  br i1 %7, label %8, label %17, !dbg !12760

8:                                                ; preds = %2, %8
  %9 = phi %struct.cJSON* [ %13, %8 ], [ %4, %2 ]
  %10 = phi i32 [ %12, %8 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12754, metadata !DIExpression()), !dbg !12756
  %11 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %9, i32 0, i32 0, !dbg !12761
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12755, metadata !DIExpression()), !dbg !12756
  %12 = add nsw i32 %10, -1, !dbg !12762
  call void @llvm.dbg.value(metadata i32 %12, metadata !12754, metadata !DIExpression()), !dbg !12756
  %13 = load %struct.cJSON*, %struct.cJSON** %11, align 8, !dbg !12756
  call void @llvm.dbg.value(metadata %struct.cJSON* %13, metadata !12755, metadata !DIExpression()), !dbg !12756
  %14 = icmp ne %struct.cJSON* %13, null, !dbg !12758
  %15 = icmp ugt i32 %10, 1, !dbg !12759
  %16 = select i1 %14, i1 %15, i1 false, !dbg !12759
  br i1 %16, label %8, label %17, !dbg !12760, !llvm.loop !12763

17:                                               ; preds = %8, %2
  %18 = phi %struct.cJSON* [ %4, %2 ], [ %13, %8 ], !dbg !12756
  %19 = phi i1 [ %5, %2 ], [ %14, %8 ], !dbg !12758
  br i1 %19, label %20, label %41, !dbg !12764

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %18, i32 0, i32 1, !dbg !12765
  %22 = load %struct.cJSON*, %struct.cJSON** %21, align 4, !dbg !12765
  %23 = icmp eq %struct.cJSON* %22, null, !dbg !12767
  br i1 %23, label %28, label %24, !dbg !12768

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %18, i32 0, i32 0, !dbg !12769
  %26 = load %struct.cJSON*, %struct.cJSON** %25, align 8, !dbg !12769
  %27 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %22, i32 0, i32 0, !dbg !12770
  store %struct.cJSON* %26, %struct.cJSON** %27, align 8, !dbg !12771
  br label %28, !dbg !12772

28:                                               ; preds = %24, %20
  %29 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %18, i32 0, i32 0, !dbg !12773
  %30 = load %struct.cJSON*, %struct.cJSON** %29, align 8, !dbg !12773
  %31 = icmp eq %struct.cJSON* %30, null, !dbg !12775
  br i1 %31, label %35, label %32, !dbg !12776

32:                                               ; preds = %28
  %33 = load %struct.cJSON*, %struct.cJSON** %21, align 4, !dbg !12777
  %34 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %30, i32 0, i32 1, !dbg !12778
  store %struct.cJSON* %33, %struct.cJSON** %34, align 4, !dbg !12779
  br label %35, !dbg !12780

35:                                               ; preds = %32, %28
  %36 = load %struct.cJSON*, %struct.cJSON** %3, align 8, !dbg !12781
  %37 = icmp eq %struct.cJSON* %18, %36, !dbg !12783
  br i1 %37, label %38, label %40, !dbg !12784

38:                                               ; preds = %35
  %39 = load %struct.cJSON*, %struct.cJSON** %29, align 8, !dbg !12785
  store %struct.cJSON* %39, %struct.cJSON** %3, align 8, !dbg !12786
  br label %40, !dbg !12787

40:                                               ; preds = %38, %35
  store %struct.cJSON* null, %struct.cJSON** %29, align 8, !dbg !12788
  store %struct.cJSON* null, %struct.cJSON** %21, align 4, !dbg !12789
  br label %41, !dbg !12790

41:                                               ; preds = %17, %40
  ret %struct.cJSON* %18, !dbg !12791
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_DeleteItemFromArray(%struct.cJSON* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12792 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12796, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 %1, metadata !12797, metadata !DIExpression()), !dbg !12798
  %3 = tail call %struct.cJSON* @cJSON_DetachItemFromArray(%struct.cJSON* noundef %0, i32 noundef %1) #22, !dbg !12799
  tail call void @cJSON_Delete(%struct.cJSON* noundef %3) #22, !dbg !12800
  ret void, !dbg !12801
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local %struct.cJSON* @cJSON_DetachItemFromObject(%struct.cJSON* nocapture noundef %0, i8* noundef readonly %1) local_unnamed_addr #15 !dbg !12802 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12804, metadata !DIExpression()), !dbg !12808
  call void @llvm.dbg.value(metadata i8* %1, metadata !12805, metadata !DIExpression()), !dbg !12808
  call void @llvm.dbg.value(metadata i32 0, metadata !12806, metadata !DIExpression()), !dbg !12808
  %3 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12809
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12807, metadata !DIExpression()), !dbg !12808
  %4 = load %struct.cJSON*, %struct.cJSON** %3, align 8, !dbg !12808
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !12807, metadata !DIExpression()), !dbg !12808
  call void @llvm.dbg.value(metadata i32 0, metadata !12806, metadata !DIExpression()), !dbg !12808
  %5 = icmp eq %struct.cJSON* %4, null, !dbg !12810
  br i1 %5, label %20, label %6, !dbg !12811

6:                                                ; preds = %2, %13
  %7 = phi %struct.cJSON* [ %16, %13 ], [ %4, %2 ]
  %8 = phi i32 [ %14, %13 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12806, metadata !DIExpression()), !dbg !12808
  %9 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %7, i32 0, i32 7, !dbg !12812
  %10 = load i8*, i8** %9, align 8, !dbg !12812
  %11 = tail call fastcc i32 @cJSON_strcasecmp(i8* noundef %10, i8* noundef %1) #22, !dbg !12813
  %12 = icmp eq i32 %11, 0, !dbg !12811
  br i1 %12, label %18, label %13, !dbg !12814

13:                                               ; preds = %6
  %14 = add nuw nsw i32 %8, 1, !dbg !12815
  call void @llvm.dbg.value(metadata i32 %14, metadata !12806, metadata !DIExpression()), !dbg !12808
  %15 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %7, i32 0, i32 0, !dbg !12816
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12807, metadata !DIExpression()), !dbg !12808
  %16 = load %struct.cJSON*, %struct.cJSON** %15, align 8, !dbg !12808
  call void @llvm.dbg.value(metadata %struct.cJSON* %16, metadata !12807, metadata !DIExpression()), !dbg !12808
  %17 = icmp eq %struct.cJSON* %16, null, !dbg !12810
  br i1 %17, label %20, label %6, !dbg !12811, !llvm.loop !12817

18:                                               ; preds = %6
  %19 = tail call %struct.cJSON* @cJSON_DetachItemFromArray(%struct.cJSON* noundef %0, i32 noundef %8) #22, !dbg !12818
  br label %20, !dbg !12820

20:                                               ; preds = %13, %2, %18
  %21 = phi %struct.cJSON* [ %19, %18 ], [ null, %2 ], [ null, %13 ], !dbg !12808
  ret %struct.cJSON* %21, !dbg !12821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_DeleteItemFromObject(%struct.cJSON* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !12822 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12826, metadata !DIExpression()), !dbg !12828
  call void @llvm.dbg.value(metadata i8* %1, metadata !12827, metadata !DIExpression()), !dbg !12828
  %3 = tail call %struct.cJSON* @cJSON_DetachItemFromObject(%struct.cJSON* noundef %0, i8* noundef %1) #22, !dbg !12829
  tail call void @cJSON_Delete(%struct.cJSON* noundef %3) #22, !dbg !12830
  ret void, !dbg !12831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_ReplaceItemInArray(%struct.cJSON* nocapture noundef %0, i32 noundef %1, %struct.cJSON* noundef %2) local_unnamed_addr #0 !dbg !12832 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12836, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32 %1, metadata !12837, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12838, metadata !DIExpression()), !dbg !12840
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12841
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12839, metadata !DIExpression()), !dbg !12840
  %5 = load %struct.cJSON*, %struct.cJSON** %4, align 8, !dbg !12840
  call void @llvm.dbg.value(metadata %struct.cJSON* %5, metadata !12839, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32 %1, metadata !12837, metadata !DIExpression()), !dbg !12840
  %6 = icmp ne %struct.cJSON* %5, null, !dbg !12842
  %7 = icmp sgt i32 %1, 0, !dbg !12843
  %8 = and i1 %6, %7, !dbg !12843
  br i1 %8, label %9, label %18, !dbg !12844

9:                                                ; preds = %3, %9
  %10 = phi %struct.cJSON* [ %14, %9 ], [ %5, %3 ]
  %11 = phi i32 [ %13, %9 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !12837, metadata !DIExpression()), !dbg !12840
  %12 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %10, i32 0, i32 0, !dbg !12845
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12839, metadata !DIExpression()), !dbg !12840
  %13 = add nsw i32 %11, -1, !dbg !12846
  call void @llvm.dbg.value(metadata i32 %13, metadata !12837, metadata !DIExpression()), !dbg !12840
  %14 = load %struct.cJSON*, %struct.cJSON** %12, align 8, !dbg !12840
  call void @llvm.dbg.value(metadata %struct.cJSON* %14, metadata !12839, metadata !DIExpression()), !dbg !12840
  %15 = icmp ne %struct.cJSON* %14, null, !dbg !12842
  %16 = icmp ugt i32 %11, 1, !dbg !12843
  %17 = select i1 %15, i1 %16, i1 false, !dbg !12843
  br i1 %17, label %9, label %18, !dbg !12844, !llvm.loop !12847

18:                                               ; preds = %9, %3
  %19 = phi %struct.cJSON* [ %5, %3 ], [ %14, %9 ], !dbg !12840
  %20 = phi i1 [ %6, %3 ], [ %15, %9 ], !dbg !12842
  br i1 %20, label %21, label %39, !dbg !12848

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %19, i32 0, i32 0, !dbg !12849
  %23 = load %struct.cJSON*, %struct.cJSON** %22, align 8, !dbg !12849
  %24 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 0, !dbg !12850
  store %struct.cJSON* %23, %struct.cJSON** %24, align 8, !dbg !12851
  %25 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %19, i32 0, i32 1, !dbg !12852
  %26 = load %struct.cJSON*, %struct.cJSON** %25, align 4, !dbg !12852
  %27 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 1, !dbg !12853
  store %struct.cJSON* %26, %struct.cJSON** %27, align 4, !dbg !12854
  %28 = icmp eq %struct.cJSON* %23, null, !dbg !12855
  br i1 %28, label %31, label %29, !dbg !12857

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %23, i32 0, i32 1, !dbg !12858
  store %struct.cJSON* %2, %struct.cJSON** %30, align 4, !dbg !12859
  br label %31, !dbg !12860

31:                                               ; preds = %29, %21
  %32 = load %struct.cJSON*, %struct.cJSON** %4, align 8, !dbg !12861
  %33 = icmp eq %struct.cJSON* %19, %32, !dbg !12863
  br i1 %33, label %37, label %34, !dbg !12864

34:                                               ; preds = %31
  %35 = load %struct.cJSON*, %struct.cJSON** %27, align 4, !dbg !12865
  %36 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %35, i32 0, i32 0, !dbg !12866
  br label %37

37:                                               ; preds = %31, %34
  %38 = phi %struct.cJSON** [ %36, %34 ], [ %4, %31 ]
  store %struct.cJSON* %2, %struct.cJSON** %38, align 8, !dbg !12867
  store %struct.cJSON* null, %struct.cJSON** %25, align 4, !dbg !12868
  store %struct.cJSON* null, %struct.cJSON** %22, align 8, !dbg !12869
  tail call void @cJSON_Delete(%struct.cJSON* noundef nonnull %19) #22, !dbg !12870
  br label %39, !dbg !12871

39:                                               ; preds = %18, %37
  ret void, !dbg !12871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cJSON_ReplaceItemInObject(%struct.cJSON* nocapture noundef %0, i8* noundef %1, %struct.cJSON* noundef %2) local_unnamed_addr #0 !dbg !12872 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !12874, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata i8* %1, metadata !12875, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12876, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata i32 0, metadata !12877, metadata !DIExpression()), !dbg !12879
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !12880
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12878, metadata !DIExpression()), !dbg !12879
  %5 = load %struct.cJSON*, %struct.cJSON** %4, align 8, !dbg !12879
  call void @llvm.dbg.value(metadata %struct.cJSON* %5, metadata !12878, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata i32 0, metadata !12877, metadata !DIExpression()), !dbg !12879
  %6 = icmp eq %struct.cJSON* %5, null, !dbg !12881
  br i1 %6, label %22, label %7, !dbg !12882

7:                                                ; preds = %3, %14
  %8 = phi %struct.cJSON* [ %17, %14 ], [ %5, %3 ]
  %9 = phi i32 [ %15, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12877, metadata !DIExpression()), !dbg !12879
  %10 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %8, i32 0, i32 7, !dbg !12883
  %11 = load i8*, i8** %10, align 8, !dbg !12883
  %12 = tail call fastcc i32 @cJSON_strcasecmp(i8* noundef %11, i8* noundef %1) #22, !dbg !12884
  %13 = icmp eq i32 %12, 0, !dbg !12882
  br i1 %13, label %19, label %14, !dbg !12885

14:                                               ; preds = %7
  %15 = add nuw nsw i32 %9, 1, !dbg !12886
  call void @llvm.dbg.value(metadata i32 %15, metadata !12877, metadata !DIExpression()), !dbg !12879
  %16 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %8, i32 0, i32 0, !dbg !12887
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !12878, metadata !DIExpression()), !dbg !12879
  %17 = load %struct.cJSON*, %struct.cJSON** %16, align 8, !dbg !12879
  call void @llvm.dbg.value(metadata %struct.cJSON* %17, metadata !12878, metadata !DIExpression()), !dbg !12879
  %18 = icmp eq %struct.cJSON* %17, null, !dbg !12881
  br i1 %18, label %22, label %7, !dbg !12882, !llvm.loop !12888

19:                                               ; preds = %7
  %20 = tail call fastcc i8* @cJSON_strdup(i8* noundef %1) #22, !dbg !12889
  %21 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 7, !dbg !12892
  store i8* %20, i8** %21, align 8, !dbg !12893
  tail call void @cJSON_ReplaceItemInArray(%struct.cJSON* noundef %0, i32 noundef %9, %struct.cJSON* noundef %2) #22, !dbg !12894
  br label %22, !dbg !12895

22:                                               ; preds = %14, %3, %19
  ret void, !dbg !12896
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateNull() local_unnamed_addr #0 !dbg !12897 {
  %1 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12900
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !12899, metadata !DIExpression()), !dbg !12901
  %2 = icmp eq %struct.cJSON* %1, null, !dbg !12902
  br i1 %2, label %5, label %3, !dbg !12904

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %1, i32 0, i32 3, !dbg !12905
  store i32 2, i32* %4, align 4, !dbg !12906
  br label %5, !dbg !12907

5:                                                ; preds = %3, %0
  ret %struct.cJSON* %1, !dbg !12908
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateTrue() local_unnamed_addr #0 !dbg !12909 {
  %1 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12912
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !12911, metadata !DIExpression()), !dbg !12913
  %2 = icmp eq %struct.cJSON* %1, null, !dbg !12914
  br i1 %2, label %5, label %3, !dbg !12916

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %1, i32 0, i32 3, !dbg !12917
  store i32 1, i32* %4, align 4, !dbg !12918
  br label %5, !dbg !12919

5:                                                ; preds = %3, %0
  ret %struct.cJSON* %1, !dbg !12920
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateFalse() local_unnamed_addr #0 !dbg !12921 {
  %1 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12924
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !12923, metadata !DIExpression()), !dbg !12925
  %2 = icmp eq %struct.cJSON* %1, null, !dbg !12926
  br i1 %2, label %5, label %3, !dbg !12928

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %1, i32 0, i32 3, !dbg !12929
  store i32 0, i32* %4, align 4, !dbg !12930
  br label %5, !dbg !12931

5:                                                ; preds = %3, %0
  ret %struct.cJSON* %1, !dbg !12932
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateBool(i32 noundef %0) local_unnamed_addr #0 !dbg !12933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12937, metadata !DIExpression()), !dbg !12939
  %2 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12940
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12938, metadata !DIExpression()), !dbg !12939
  %3 = icmp eq %struct.cJSON* %2, null, !dbg !12941
  br i1 %3, label %8, label %4, !dbg !12943

4:                                                ; preds = %1
  %5 = icmp ne i32 %0, 0, !dbg !12944
  %6 = zext i1 %5 to i32, !dbg !12944
  %7 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 3, !dbg !12945
  store i32 %6, i32* %7, align 4, !dbg !12946
  br label %8, !dbg !12947

8:                                                ; preds = %4, %1
  ret %struct.cJSON* %2, !dbg !12948
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateNumber(double noundef %0) local_unnamed_addr #0 !dbg !12949 {
  call void @llvm.dbg.value(metadata double %0, metadata !12953, metadata !DIExpression()), !dbg !12955
  %2 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12956
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12954, metadata !DIExpression()), !dbg !12955
  %3 = icmp eq %struct.cJSON* %2, null, !dbg !12957
  br i1 %3, label %9, label %4, !dbg !12959

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 3, !dbg !12960
  store i32 3, i32* %5, align 4, !dbg !12962
  %6 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 6, !dbg !12963
  store double %0, double* %6, align 8, !dbg !12964
  %7 = fptosi double %0 to i32, !dbg !12965
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 5, !dbg !12966
  store i32 %7, i32* %8, align 4, !dbg !12967
  br label %9, !dbg !12968

9:                                                ; preds = %4, %1
  ret %struct.cJSON* %2, !dbg !12969
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateString(i8* noundef %0) local_unnamed_addr #0 !dbg !12970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12972, metadata !DIExpression()), !dbg !12974
  %2 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12975
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !12973, metadata !DIExpression()), !dbg !12974
  %3 = icmp eq %struct.cJSON* %2, null, !dbg !12976
  br i1 %3, label %8, label %4, !dbg !12978

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 3, !dbg !12979
  store i32 4, i32* %5, align 4, !dbg !12981
  %6 = tail call fastcc i8* @cJSON_strdup(i8* noundef %0) #22, !dbg !12982
  %7 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %2, i32 0, i32 4, !dbg !12983
  store i8* %6, i8** %7, align 8, !dbg !12984
  br label %8, !dbg !12985

8:                                                ; preds = %4, %1
  ret %struct.cJSON* %2, !dbg !12986
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateArray() local_unnamed_addr #0 !dbg !12987 {
  %1 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !12990
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !12989, metadata !DIExpression()), !dbg !12991
  %2 = icmp eq %struct.cJSON* %1, null, !dbg !12992
  br i1 %2, label %5, label %3, !dbg !12994

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %1, i32 0, i32 3, !dbg !12995
  store i32 5, i32* %4, align 4, !dbg !12996
  br label %5, !dbg !12997

5:                                                ; preds = %3, %0
  ret %struct.cJSON* %1, !dbg !12998
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateObject() local_unnamed_addr #0 !dbg !12999 {
  %1 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !13002
  call void @llvm.dbg.value(metadata %struct.cJSON* %1, metadata !13001, metadata !DIExpression()), !dbg !13003
  %2 = icmp eq %struct.cJSON* %1, null, !dbg !13004
  br i1 %2, label %5, label %3, !dbg !13006

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %1, i32 0, i32 3, !dbg !13007
  store i32 6, i32* %4, align 4, !dbg !13008
  br label %5, !dbg !13009

5:                                                ; preds = %3, %0
  ret %struct.cJSON* %1, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateIntArray(i32* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13011 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13017, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 %1, metadata !13018, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13020, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13021, metadata !DIExpression()), !dbg !13023
  %3 = tail call %struct.cJSON* @cJSON_CreateArray() #22, !dbg !13024
  call void @llvm.dbg.value(metadata %struct.cJSON* %3, metadata !13022, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 0, metadata !13019, metadata !DIExpression()), !dbg !13023
  %4 = icmp ne %struct.cJSON* %3, null
  call void @llvm.dbg.value(metadata i32 0, metadata !13019, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13021, metadata !DIExpression()), !dbg !13023
  %5 = icmp sgt i32 %1, 0, !dbg !13025
  %6 = and i1 %4, %5, !dbg !13025
  br i1 %6, label %7, label %22, !dbg !13028

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %3, i32 0, i32 2
  br label %9, !dbg !13028

9:                                                ; preds = %7, %19
  %10 = phi i32 [ 0, %7 ], [ %20, %19 ]
  %11 = phi %struct.cJSON* [ null, %7 ], [ %15, %19 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13019, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata %struct.cJSON* %11, metadata !13021, metadata !DIExpression()), !dbg !13023
  %12 = getelementptr inbounds i32, i32* %0, i32 %10, !dbg !13029
  %13 = load i32, i32* %12, align 4, !dbg !13029
  %14 = sitofp i32 %13 to double, !dbg !13029
  %15 = tail call %struct.cJSON* @cJSON_CreateNumber(double noundef %14) #22, !dbg !13031
  call void @llvm.dbg.value(metadata %struct.cJSON* %15, metadata !13020, metadata !DIExpression()), !dbg !13023
  %16 = icmp eq i32 %10, 0, !dbg !13032
  br i1 %16, label %17, label %18, !dbg !13034

17:                                               ; preds = %9
  store %struct.cJSON* %15, %struct.cJSON** %8, align 8, !dbg !13035
  br label %19, !dbg !13036

18:                                               ; preds = %9
  tail call fastcc void @suffix_object(%struct.cJSON* noundef %11, %struct.cJSON* noundef %15) #22, !dbg !13037
  br label %19

19:                                               ; preds = %18, %17
  call void @llvm.dbg.value(metadata %struct.cJSON* %15, metadata !13021, metadata !DIExpression()), !dbg !13023
  %20 = add nuw nsw i32 %10, 1, !dbg !13038
  call void @llvm.dbg.value(metadata i32 %20, metadata !13019, metadata !DIExpression()), !dbg !13023
  %21 = icmp slt i32 %20, %1, !dbg !13025
  br i1 %21, label %9, label %22, !dbg !13028, !llvm.loop !13039

22:                                               ; preds = %19, %2
  ret %struct.cJSON* %3, !dbg !13041
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateFloatArray(float* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13042 {
  call void @llvm.dbg.value(metadata float* %0, metadata !13049, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata i32 %1, metadata !13050, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13052, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13053, metadata !DIExpression()), !dbg !13055
  %3 = tail call %struct.cJSON* @cJSON_CreateArray() #22, !dbg !13056
  call void @llvm.dbg.value(metadata %struct.cJSON* %3, metadata !13054, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata i32 0, metadata !13051, metadata !DIExpression()), !dbg !13055
  %4 = icmp ne %struct.cJSON* %3, null
  call void @llvm.dbg.value(metadata i32 0, metadata !13051, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13053, metadata !DIExpression()), !dbg !13055
  %5 = icmp sgt i32 %1, 0, !dbg !13057
  %6 = and i1 %4, %5, !dbg !13057
  br i1 %6, label %7, label %22, !dbg !13060

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %3, i32 0, i32 2
  br label %9, !dbg !13060

9:                                                ; preds = %7, %19
  %10 = phi i32 [ 0, %7 ], [ %20, %19 ]
  %11 = phi %struct.cJSON* [ null, %7 ], [ %15, %19 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13051, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata %struct.cJSON* %11, metadata !13053, metadata !DIExpression()), !dbg !13055
  %12 = getelementptr inbounds float, float* %0, i32 %10, !dbg !13061
  %13 = load float, float* %12, align 4, !dbg !13061
  %14 = fpext float %13 to double, !dbg !13061
  %15 = tail call %struct.cJSON* @cJSON_CreateNumber(double noundef %14) #22, !dbg !13063
  call void @llvm.dbg.value(metadata %struct.cJSON* %15, metadata !13052, metadata !DIExpression()), !dbg !13055
  %16 = icmp eq i32 %10, 0, !dbg !13064
  br i1 %16, label %17, label %18, !dbg !13066

17:                                               ; preds = %9
  store %struct.cJSON* %15, %struct.cJSON** %8, align 8, !dbg !13067
  br label %19, !dbg !13068

18:                                               ; preds = %9
  tail call fastcc void @suffix_object(%struct.cJSON* noundef %11, %struct.cJSON* noundef %15) #22, !dbg !13069
  br label %19

19:                                               ; preds = %18, %17
  call void @llvm.dbg.value(metadata %struct.cJSON* %15, metadata !13053, metadata !DIExpression()), !dbg !13055
  %20 = add nuw nsw i32 %10, 1, !dbg !13070
  call void @llvm.dbg.value(metadata i32 %20, metadata !13051, metadata !DIExpression()), !dbg !13055
  %21 = icmp slt i32 %20, %1, !dbg !13057
  br i1 %21, label %9, label %22, !dbg !13060, !llvm.loop !13071

22:                                               ; preds = %19, %2
  ret %struct.cJSON* %3, !dbg !13073
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateDoubleArray(double* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13074 {
  call void @llvm.dbg.value(metadata double* %0, metadata !13080, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.value(metadata i32 %1, metadata !13081, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13083, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13084, metadata !DIExpression()), !dbg !13086
  %3 = tail call %struct.cJSON* @cJSON_CreateArray() #22, !dbg !13087
  call void @llvm.dbg.value(metadata %struct.cJSON* %3, metadata !13085, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.value(metadata i32 0, metadata !13082, metadata !DIExpression()), !dbg !13086
  %4 = icmp ne %struct.cJSON* %3, null
  call void @llvm.dbg.value(metadata i32 0, metadata !13082, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13084, metadata !DIExpression()), !dbg !13086
  %5 = icmp sgt i32 %1, 0, !dbg !13088
  %6 = and i1 %4, %5, !dbg !13088
  br i1 %6, label %7, label %21, !dbg !13091

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %3, i32 0, i32 2
  br label %9, !dbg !13091

9:                                                ; preds = %7, %18
  %10 = phi i32 [ 0, %7 ], [ %19, %18 ]
  %11 = phi %struct.cJSON* [ null, %7 ], [ %14, %18 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13082, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.value(metadata %struct.cJSON* %11, metadata !13084, metadata !DIExpression()), !dbg !13086
  %12 = getelementptr inbounds double, double* %0, i32 %10, !dbg !13092
  %13 = load double, double* %12, align 8, !dbg !13092
  %14 = tail call %struct.cJSON* @cJSON_CreateNumber(double noundef %13) #22, !dbg !13094
  call void @llvm.dbg.value(metadata %struct.cJSON* %14, metadata !13083, metadata !DIExpression()), !dbg !13086
  %15 = icmp eq i32 %10, 0, !dbg !13095
  br i1 %15, label %16, label %17, !dbg !13097

16:                                               ; preds = %9
  store %struct.cJSON* %14, %struct.cJSON** %8, align 8, !dbg !13098
  br label %18, !dbg !13099

17:                                               ; preds = %9
  tail call fastcc void @suffix_object(%struct.cJSON* noundef %11, %struct.cJSON* noundef %14) #22, !dbg !13100
  br label %18

18:                                               ; preds = %17, %16
  call void @llvm.dbg.value(metadata %struct.cJSON* %14, metadata !13084, metadata !DIExpression()), !dbg !13086
  %19 = add nuw nsw i32 %10, 1, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %19, metadata !13082, metadata !DIExpression()), !dbg !13086
  %20 = icmp slt i32 %19, %1, !dbg !13088
  br i1 %20, label %9, label %21, !dbg !13091, !llvm.loop !13102

21:                                               ; preds = %18, %2
  ret %struct.cJSON* %3, !dbg !13104
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_CreateStringArray(i8** nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13105 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !13109, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 %1, metadata !13110, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13112, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13113, metadata !DIExpression()), !dbg !13115
  %3 = tail call %struct.cJSON* @cJSON_CreateArray() #22, !dbg !13116
  call void @llvm.dbg.value(metadata %struct.cJSON* %3, metadata !13114, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 0, metadata !13111, metadata !DIExpression()), !dbg !13115
  %4 = icmp ne %struct.cJSON* %3, null
  call void @llvm.dbg.value(metadata i32 0, metadata !13111, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13113, metadata !DIExpression()), !dbg !13115
  %5 = icmp sgt i32 %1, 0, !dbg !13117
  %6 = and i1 %4, %5, !dbg !13117
  br i1 %6, label %7, label %21, !dbg !13120

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %3, i32 0, i32 2
  br label %9, !dbg !13120

9:                                                ; preds = %7, %18
  %10 = phi i32 [ 0, %7 ], [ %19, %18 ]
  %11 = phi %struct.cJSON* [ null, %7 ], [ %14, %18 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13111, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata %struct.cJSON* %11, metadata !13113, metadata !DIExpression()), !dbg !13115
  %12 = getelementptr inbounds i8*, i8** %0, i32 %10, !dbg !13121
  %13 = load i8*, i8** %12, align 4, !dbg !13121
  %14 = tail call %struct.cJSON* @cJSON_CreateString(i8* noundef %13) #22, !dbg !13123
  call void @llvm.dbg.value(metadata %struct.cJSON* %14, metadata !13112, metadata !DIExpression()), !dbg !13115
  %15 = icmp eq i32 %10, 0, !dbg !13124
  br i1 %15, label %16, label %17, !dbg !13126

16:                                               ; preds = %9
  store %struct.cJSON* %14, %struct.cJSON** %8, align 8, !dbg !13127
  br label %18, !dbg !13128

17:                                               ; preds = %9
  tail call fastcc void @suffix_object(%struct.cJSON* noundef %11, %struct.cJSON* noundef %14) #22, !dbg !13129
  br label %18

18:                                               ; preds = %17, %16
  call void @llvm.dbg.value(metadata %struct.cJSON* %14, metadata !13113, metadata !DIExpression()), !dbg !13115
  %19 = add nuw nsw i32 %10, 1, !dbg !13130
  call void @llvm.dbg.value(metadata i32 %19, metadata !13111, metadata !DIExpression()), !dbg !13115
  %20 = icmp slt i32 %19, %1, !dbg !13117
  br i1 %20, label %9, label %21, !dbg !13120, !llvm.loop !13131

21:                                               ; preds = %18, %2
  ret %struct.cJSON* %3, !dbg !13133
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.cJSON* @cJSON_Duplicate(%struct.cJSON* noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13134 {
  call void @llvm.dbg.value(metadata %struct.cJSON* %0, metadata !13136, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata i32 %1, metadata !13137, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13140, metadata !DIExpression()), !dbg !13142
  %3 = icmp eq %struct.cJSON* %0, null, !dbg !13143
  br i1 %3, label %57, label %4, !dbg !13145

4:                                                ; preds = %2
  %5 = tail call fastcc %struct.cJSON* @cJSON_New_Item() #22, !dbg !13146
  call void @llvm.dbg.value(metadata %struct.cJSON* %5, metadata !13138, metadata !DIExpression()), !dbg !13142
  %6 = icmp eq %struct.cJSON* %5, null, !dbg !13147
  br i1 %6, label %57, label %7, !dbg !13149

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 3, !dbg !13150
  %9 = load i32, i32* %8, align 4, !dbg !13150
  %10 = and i32 %9, -257, !dbg !13151
  %11 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %5, i32 0, i32 3, !dbg !13152
  store i32 %10, i32* %11, align 4, !dbg !13153
  %12 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 5, !dbg !13154
  %13 = load i32, i32* %12, align 4, !dbg !13154
  %14 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %5, i32 0, i32 5, !dbg !13155
  store i32 %13, i32* %14, align 4, !dbg !13156
  %15 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 6, !dbg !13157
  %16 = load double, double* %15, align 8, !dbg !13157
  %17 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %5, i32 0, i32 6, !dbg !13158
  store double %16, double* %17, align 8, !dbg !13159
  %18 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 4, !dbg !13160
  %19 = load i8*, i8** %18, align 8, !dbg !13160
  %20 = icmp eq i8* %19, null, !dbg !13162
  br i1 %20, label %25, label %21, !dbg !13163

21:                                               ; preds = %7
  %22 = tail call fastcc i8* @cJSON_strdup(i8* noundef nonnull %19) #22, !dbg !13164
  %23 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %5, i32 0, i32 4, !dbg !13166
  store i8* %22, i8** %23, align 8, !dbg !13167
  %24 = icmp eq i8* %22, null, !dbg !13168
  br i1 %24, label %56, label %25, !dbg !13170

25:                                               ; preds = %21, %7
  %26 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 7, !dbg !13171
  %27 = load i8*, i8** %26, align 8, !dbg !13171
  %28 = icmp eq i8* %27, null, !dbg !13173
  br i1 %28, label %33, label %29, !dbg !13174

29:                                               ; preds = %25
  %30 = tail call fastcc i8* @cJSON_strdup(i8* noundef nonnull %27) #22, !dbg !13175
  %31 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %5, i32 0, i32 7, !dbg !13177
  store i8* %30, i8** %31, align 8, !dbg !13178
  %32 = icmp eq i8* %30, null, !dbg !13179
  br i1 %32, label %56, label %33, !dbg !13181

33:                                               ; preds = %29, %25
  %34 = icmp eq i32 %1, 0, !dbg !13182
  br i1 %34, label %57, label %35, !dbg !13184

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %0, i32 0, i32 2, !dbg !13185
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !13139, metadata !DIExpression()), !dbg !13142
  %37 = load %struct.cJSON*, %struct.cJSON** %36, align 8, !dbg !13142
  call void @llvm.dbg.value(metadata %struct.cJSON* null, metadata !13140, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata %struct.cJSON* %37, metadata !13139, metadata !DIExpression()), !dbg !13142
  %38 = icmp eq %struct.cJSON* %37, null, !dbg !13186
  br i1 %38, label %57, label %39, !dbg !13186

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %5, i32 0, i32 2
  br label %41, !dbg !13186

41:                                               ; preds = %39, %52
  %42 = phi %struct.cJSON* [ %37, %39 ], [ %54, %52 ]
  %43 = phi %struct.cJSON* [ null, %39 ], [ %44, %52 ]
  call void @llvm.dbg.value(metadata %struct.cJSON* %43, metadata !13140, metadata !DIExpression()), !dbg !13142
  %44 = tail call %struct.cJSON* @cJSON_Duplicate(%struct.cJSON* noundef nonnull %42, i32 noundef 1) #22, !dbg !13187
  call void @llvm.dbg.value(metadata %struct.cJSON* %44, metadata !13141, metadata !DIExpression()), !dbg !13142
  %45 = icmp eq %struct.cJSON* %44, null, !dbg !13189
  br i1 %45, label %56, label %46, !dbg !13191

46:                                               ; preds = %41
  %47 = icmp eq %struct.cJSON* %43, null, !dbg !13192
  br i1 %47, label %51, label %48, !dbg !13194

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %43, i32 0, i32 0, !dbg !13195
  store %struct.cJSON* %44, %struct.cJSON** %49, align 8, !dbg !13197
  %50 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %44, i32 0, i32 1, !dbg !13198
  store %struct.cJSON* %43, %struct.cJSON** %50, align 4, !dbg !13199
  call void @llvm.dbg.value(metadata %struct.cJSON* %44, metadata !13140, metadata !DIExpression()), !dbg !13142
  br label %52, !dbg !13200

51:                                               ; preds = %46
  store %struct.cJSON* %44, %struct.cJSON** %40, align 8, !dbg !13201
  call void @llvm.dbg.value(metadata %struct.cJSON* %44, metadata !13140, metadata !DIExpression()), !dbg !13142
  br label %52

52:                                               ; preds = %51, %48
  call void @llvm.dbg.value(metadata %struct.cJSON* %44, metadata !13140, metadata !DIExpression()), !dbg !13142
  %53 = getelementptr inbounds %struct.cJSON, %struct.cJSON* %42, i32 0, i32 0, !dbg !13203
  call void @llvm.dbg.value(metadata %struct.cJSON* undef, metadata !13139, metadata !DIExpression()), !dbg !13142
  %54 = load %struct.cJSON*, %struct.cJSON** %53, align 8, !dbg !13142
  call void @llvm.dbg.value(metadata %struct.cJSON* %54, metadata !13139, metadata !DIExpression()), !dbg !13142
  %55 = icmp eq %struct.cJSON* %54, null, !dbg !13186
  br i1 %55, label %57, label %41, !dbg !13186, !llvm.loop !13204

56:                                               ; preds = %41, %29, %21
  tail call void @cJSON_Delete(%struct.cJSON* noundef nonnull %5) #22, !dbg !13142
  br label %57, !dbg !13206

57:                                               ; preds = %52, %56, %35, %33, %4, %2
  %58 = phi %struct.cJSON* [ null, %2 ], [ null, %4 ], [ %5, %33 ], [ %5, %35 ], [ null, %56 ], [ %5, %52 ], !dbg !13142
  ret %struct.cJSON* %58, !dbg !13206
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @cJSON_Minify(i8* nocapture noundef %0) local_unnamed_addr #15 !dbg !13207 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13209, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i8* %0, metadata !13210, metadata !DIExpression()), !dbg !13211
  br label %2, !dbg !13212

2:                                                ; preds = %10, %1
  %3 = phi i8* [ %0, %1 ], [ %11, %10 ]
  %4 = phi i8* [ %0, %1 ], [ %12, %10 ], !dbg !13213
  call void @llvm.dbg.value(metadata i8* %4, metadata !13210, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i8* %3, metadata !13209, metadata !DIExpression()), !dbg !13211
  %5 = load i8, i8* %3, align 1, !dbg !13214
  switch i8 %5, label %59 [
    i8 0, label %62
    i8 32, label %6
    i8 9, label %8
    i8 13, label %13
    i8 10, label %15
    i8 47, label %17
    i8 34, label %41
  ], !dbg !13212

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !13215
  call void @llvm.dbg.value(metadata i8* %7, metadata !13209, metadata !DIExpression()), !dbg !13211
  br label %10, !dbg !13218

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !13219
  call void @llvm.dbg.value(metadata i8* %9, metadata !13209, metadata !DIExpression()), !dbg !13211
  br label %10, !dbg !13221

10:                                               ; preds = %20, %20, %8, %15, %39, %59, %56, %13, %6
  %11 = phi i8* [ %7, %6 ], [ %9, %8 ], [ %14, %13 ], [ %16, %15 ], [ %40, %39 ], [ %57, %56 ], [ %60, %59 ], [ %22, %20 ], [ %22, %20 ]
  %12 = phi i8* [ %4, %6 ], [ %4, %8 ], [ %4, %13 ], [ %4, %15 ], [ %4, %39 ], [ %58, %56 ], [ %61, %59 ], [ %4, %20 ], [ %4, %20 ]
  br label %2, !dbg !13211, !llvm.loop !13222

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !13224
  call void @llvm.dbg.value(metadata i8* %14, metadata !13209, metadata !DIExpression()), !dbg !13211
  br label %10, !dbg !13226

15:                                               ; preds = %2
  %16 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !13227
  call void @llvm.dbg.value(metadata i8* %16, metadata !13209, metadata !DIExpression()), !dbg !13211
  br label %10, !dbg !13229

17:                                               ; preds = %2
  %18 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !13230
  %19 = load i8, i8* %18, align 1, !dbg !13230
  switch i8 %19, label %59 [
    i8 47, label %20
    i8 42, label %26
  ], !dbg !13232

20:                                               ; preds = %17, %23
  %21 = phi i8 [ %25, %23 ], [ %19, %17 ], !dbg !13233
  %22 = phi i8* [ %24, %23 ], [ %3, %17 ]
  call void @llvm.dbg.value(metadata i8* %22, metadata !13209, metadata !DIExpression()), !dbg !13211
  switch i8 %21, label %23 [
    i8 0, label %10
    i8 10, label %10
  ], !dbg !13234, !llvm.loop !13222

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13235
  call void @llvm.dbg.value(metadata i8* %24, metadata !13209, metadata !DIExpression()), !dbg !13211
  %25 = load i8, i8* %24, align 1, !dbg !13233
  br label %20, !dbg !13236, !llvm.loop !13237

26:                                               ; preds = %17, %36
  %27 = phi i8 [ %37, %36 ], [ 47, %17 ], !dbg !13238
  %28 = phi i8* [ %38, %36 ], [ %3, %17 ]
  call void @llvm.dbg.value(metadata i8* %28, metadata !13209, metadata !DIExpression()), !dbg !13211
  switch i8 %27, label %29 [
    i8 0, label %39
    i8 42, label %32
  ], !dbg !13241

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %28, i32 1
  %31 = load i8, i8* %30, align 1, !dbg !13238
  br label %36, !dbg !13241

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !13242
  %34 = load i8, i8* %33, align 1, !dbg !13242
  %35 = icmp eq i8 %34, 47, !dbg !13243
  br i1 %35, label %39, label %36, !dbg !13244

36:                                               ; preds = %29, %32
  %37 = phi i8 [ %31, %29 ], [ %34, %32 ], !dbg !13238
  %38 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !13245
  call void @llvm.dbg.value(metadata i8* %38, metadata !13209, metadata !DIExpression()), !dbg !13211
  br label %26, !dbg !13244, !llvm.loop !13246

39:                                               ; preds = %26, %32
  %40 = getelementptr inbounds i8, i8* %28, i32 2, !dbg !13247
  call void @llvm.dbg.value(metadata i8* %40, metadata !13209, metadata !DIExpression()), !dbg !13211
  br label %10, !dbg !13248

41:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %3, metadata !13209, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13211
  call void @llvm.dbg.value(metadata i8* %4, metadata !13210, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13211
  store i8 34, i8* %4, align 1, !dbg !13249
  br label %42, !dbg !13252

42:                                               ; preds = %52, %41
  %43 = phi i8* [ %3, %41 ], [ %54, %52 ]
  %44 = phi i8* [ %4, %41 ], [ %55, %52 ]
  %45 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !13253
  %46 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !13253
  call void @llvm.dbg.value(metadata i8* %45, metadata !13210, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i8* %46, metadata !13209, metadata !DIExpression()), !dbg !13211
  %47 = load i8, i8* %46, align 1, !dbg !13254
  switch i8 %47, label %52 [
    i8 0, label %56
    i8 34, label %56
    i8 92, label %48
  ], !dbg !13255

48:                                               ; preds = %42
  %49 = getelementptr inbounds i8, i8* %43, i32 2, !dbg !13256
  call void @llvm.dbg.value(metadata i8* %49, metadata !13209, metadata !DIExpression()), !dbg !13211
  %50 = getelementptr inbounds i8, i8* %44, i32 2, !dbg !13259
  call void @llvm.dbg.value(metadata i8* %50, metadata !13210, metadata !DIExpression()), !dbg !13211
  store i8 92, i8* %45, align 1, !dbg !13260
  %51 = load i8, i8* %49, align 1, !dbg !13261
  br label %52, !dbg !13262

52:                                               ; preds = %42, %48
  %53 = phi i8 [ %51, %48 ], [ %47, %42 ], !dbg !13261
  %54 = phi i8* [ %49, %48 ], [ %46, %42 ], !dbg !13253
  %55 = phi i8* [ %50, %48 ], [ %45, %42 ], !dbg !13253
  call void @llvm.dbg.value(metadata i8* %55, metadata !13210, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i8* %54, metadata !13209, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13211
  call void @llvm.dbg.value(metadata i8* %55, metadata !13210, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13211
  store i8 %53, i8* %55, align 1, !dbg !13263
  br label %42, !dbg !13252, !llvm.loop !13264

56:                                               ; preds = %42, %42
  %57 = getelementptr inbounds i8, i8* %43, i32 2, !dbg !13266
  call void @llvm.dbg.value(metadata i8* %57, metadata !13209, metadata !DIExpression()), !dbg !13211
  %58 = getelementptr inbounds i8, i8* %44, i32 2, !dbg !13267
  call void @llvm.dbg.value(metadata i8* %58, metadata !13210, metadata !DIExpression()), !dbg !13211
  store i8 %47, i8* %45, align 1, !dbg !13268
  br label %10, !dbg !13269

59:                                               ; preds = %17, %2
  %60 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !13270
  call void @llvm.dbg.value(metadata i8* %60, metadata !13209, metadata !DIExpression()), !dbg !13211
  %61 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !13271
  call void @llvm.dbg.value(metadata i8* %61, metadata !13210, metadata !DIExpression()), !dbg !13211
  store i8 %5, i8* %4, align 1, !dbg !13272
  br label %10

62:                                               ; preds = %2
  store i8 0, i8* %4, align 1, !dbg !13273
  ret void, !dbg !13274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @ftoa(double noundef %0, i8* noundef returned %1, i32 noundef %2) local_unnamed_addr #15 !dbg !13275 {
  call void @llvm.dbg.value(metadata double %0, metadata !13279, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %1, metadata !13280, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 %2, metadata !13281, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %1, metadata !13282, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %1, metadata !13283, metadata !DIExpression()), !dbg !13288
  %4 = icmp slt i32 %2, 13, !dbg !13289
  %5 = select i1 %4, i32 %2, i32 13, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %5, metadata !13281, metadata !DIExpression()), !dbg !13288
  %6 = fcmp olt double %0, 0.000000e+00, !dbg !13290
  br i1 %6, label %7, label %10, !dbg !13292

7:                                                ; preds = %3
  %8 = fneg double %0, !dbg !13293
  call void @llvm.dbg.value(metadata double %8, metadata !13279, metadata !DIExpression()), !dbg !13288
  %9 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !13295
  call void @llvm.dbg.value(metadata i8* %9, metadata !13282, metadata !DIExpression()), !dbg !13288
  store i8 45, i8* %1, align 1, !dbg !13296
  br label %10, !dbg !13297

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %9, %7 ], [ %1, %3 ], !dbg !13288
  %12 = phi double [ %8, %7 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata double %12, metadata !13279, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %11, metadata !13282, metadata !DIExpression()), !dbg !13288
  %13 = icmp slt i32 %5, 0, !dbg !13298
  br i1 %13, label %14, label %27, !dbg !13300

14:                                               ; preds = %10
  %15 = fcmp olt double %12, 1.000000e+00, !dbg !13301
  br i1 %15, label %27, label %16, !dbg !13304

16:                                               ; preds = %14
  %17 = fcmp olt double %12, 1.000000e+01, !dbg !13305
  br i1 %17, label %27, label %18, !dbg !13307

18:                                               ; preds = %16
  %19 = fcmp olt double %12, 1.000000e+02, !dbg !13308
  br i1 %19, label %27, label %20, !dbg !13310

20:                                               ; preds = %18
  %21 = fcmp olt double %12, 1.000000e+03, !dbg !13311
  br i1 %21, label %27, label %22, !dbg !13313

22:                                               ; preds = %20
  %23 = fcmp olt double %12, 1.000000e+04, !dbg !13314
  br i1 %23, label %27, label %24, !dbg !13316

24:                                               ; preds = %22
  %25 = fcmp olt double %12, 1.000000e+05, !dbg !13317
  %26 = zext i1 %25 to i32
  br label %27

27:                                               ; preds = %24, %22, %20, %18, %16, %14, %10
  %28 = phi i32 [ %5, %10 ], [ 6, %14 ], [ 5, %16 ], [ 4, %18 ], [ 3, %20 ], [ 2, %22 ], [ %26, %24 ], !dbg !13288
  call void @llvm.dbg.value(metadata i32 %28, metadata !13281, metadata !DIExpression()), !dbg !13288
  %29 = fptosi double %12 to i32, !dbg !13319
  call void @llvm.dbg.value(metadata i32 %29, metadata !13286, metadata !DIExpression()), !dbg !13288
  %30 = sitofp i32 %29 to double, !dbg !13320
  %31 = fsub double %12, %30, !dbg !13321
  call void @llvm.dbg.value(metadata double %31, metadata !13279, metadata !DIExpression()), !dbg !13288
  %32 = icmp eq i32 %29, 0, !dbg !13322
  br i1 %32, label %33, label %37, !dbg !13324

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !13325
  call void @llvm.dbg.value(metadata i8* %34, metadata !13282, metadata !DIExpression()), !dbg !13288
  store i8 48, i8* %11, align 1, !dbg !13326
  br label %57, !dbg !13327

35:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i8* %46, metadata !13283, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %11, metadata !13282, metadata !DIExpression()), !dbg !13288
  %36 = icmp ugt i8* %46, %11, !dbg !13328
  br i1 %36, label %49, label %57, !dbg !13330

37:                                               ; preds = %27, %37
  %38 = phi i32 [ %41, %37 ], [ %29, %27 ]
  %39 = phi i8* [ %46, %37 ], [ %11, %27 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !13286, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %39, metadata !13283, metadata !DIExpression()), !dbg !13288
  %40 = freeze i32 %38
  %41 = sdiv i32 %40, 10, !dbg !13331
  %42 = mul i32 %41, 10
  %43 = sub i32 %40, %42
  %44 = trunc i32 %43 to i8, !dbg !13333
  %45 = add nsw i8 %44, 48, !dbg !13333
  %46 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !13334
  call void @llvm.dbg.value(metadata i8* %46, metadata !13283, metadata !DIExpression()), !dbg !13288
  store i8 %45, i8* %39, align 1, !dbg !13335
  call void @llvm.dbg.value(metadata i32 %41, metadata !13286, metadata !DIExpression()), !dbg !13288
  %47 = add i32 %38, 9, !dbg !13336
  %48 = icmp ult i32 %47, 19, !dbg !13336
  br i1 %48, label %35, label %37, !dbg !13336, !llvm.loop !13337

49:                                               ; preds = %35, %49
  %50 = phi i8* [ %52, %49 ], [ %46, %35 ]
  %51 = phi i8* [ %55, %49 ], [ %11, %35 ]
  call void @llvm.dbg.value(metadata i8* %50, metadata !13283, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %51, metadata !13282, metadata !DIExpression()), !dbg !13288
  %52 = getelementptr inbounds i8, i8* %50, i32 -1, !dbg !13339
  call void @llvm.dbg.value(metadata i8* %52, metadata !13283, metadata !DIExpression()), !dbg !13288
  %53 = load i8, i8* %52, align 1, !dbg !13341
  call void @llvm.dbg.value(metadata i8 %53, metadata !13285, metadata !DIExpression()), !dbg !13288
  %54 = load i8, i8* %51, align 1, !dbg !13342
  store i8 %54, i8* %52, align 1, !dbg !13343
  %55 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !13344
  call void @llvm.dbg.value(metadata i8* %55, metadata !13282, metadata !DIExpression()), !dbg !13288
  store i8 %53, i8* %51, align 1, !dbg !13345
  %56 = icmp ugt i8* %52, %55, !dbg !13328
  br i1 %56, label %49, label %57, !dbg !13330, !llvm.loop !13346

57:                                               ; preds = %49, %35, %33
  %58 = phi i8* [ %34, %33 ], [ %46, %35 ], [ %46, %49 ], !dbg !13348
  call void @llvm.dbg.value(metadata i8* %58, metadata !13282, metadata !DIExpression()), !dbg !13288
  %59 = icmp eq i32 %28, 0, !dbg !13349
  br i1 %59, label %74, label %60, !dbg !13351

60:                                               ; preds = %57
  call void @llvm.dbg.value(metadata i8* %58, metadata !13282, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13288
  store i8 46, i8* %58, align 1, !dbg !13352
  %61 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !13354
  call void @llvm.dbg.value(metadata double %31, metadata !13279, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %61, metadata !13282, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 %28, metadata !13281, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13288
  br label %62, !dbg !13355

62:                                               ; preds = %60, %62
  %63 = phi i8* [ %61, %60 ], [ %72, %62 ]
  %64 = phi double [ %31, %60 ], [ %71, %62 ]
  %65 = phi i32 [ %28, %60 ], [ %66, %62 ]
  call void @llvm.dbg.value(metadata double %64, metadata !13279, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 %65, metadata !13281, metadata !DIExpression()), !dbg !13288
  %66 = add nsw i32 %65, -1, !dbg !13356
  call void @llvm.dbg.value(metadata i32 %66, metadata !13281, metadata !DIExpression()), !dbg !13288
  %67 = fmul double %64, 1.000000e+01, !dbg !13357
  call void @llvm.dbg.value(metadata double %67, metadata !13279, metadata !DIExpression()), !dbg !13288
  %68 = fptoui double %67 to i8, !dbg !13359
  call void @llvm.dbg.value(metadata i8 %68, metadata !13285, metadata !DIExpression()), !dbg !13288
  %69 = add i8 %68, 48, !dbg !13360
  call void @llvm.dbg.value(metadata i8* %63, metadata !13282, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13288
  store i8 %69, i8* %63, align 1, !dbg !13361
  %70 = uitofp i8 %68 to double, !dbg !13362
  %71 = fsub double %67, %70, !dbg !13363
  call void @llvm.dbg.value(metadata double %71, metadata !13279, metadata !DIExpression()), !dbg !13288
  %72 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !13354
  call void @llvm.dbg.value(metadata i8* %72, metadata !13282, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 %66, metadata !13281, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13288
  %73 = icmp eq i32 %66, 0, !dbg !13355
  br i1 %73, label %74, label %62, !dbg !13355, !llvm.loop !13364

74:                                               ; preds = %62, %57
  %75 = phi i8* [ %58, %57 ], [ %72, %62 ], !dbg !13288
  call void @llvm.dbg.value(metadata i8* %75, metadata !13282, metadata !DIExpression()), !dbg !13288
  store i8 0, i8* %75, align 1, !dbg !13366
  call void @llvm.dbg.value(metadata i8* %75, metadata !13282, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13288
  call void @llvm.dbg.value(metadata i8* %75, metadata !13287, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13288
  %76 = getelementptr inbounds i8, i8* %75, i32 -1, !dbg !13288
  call void @llvm.dbg.value(metadata i8* %76, metadata !13287, metadata !DIExpression()), !dbg !13288
  %77 = load i8, i8* %76, align 1, !dbg !13367
  %78 = icmp eq i8 %77, 48, !dbg !13368
  br i1 %78, label %79, label %84, !dbg !13368

79:                                               ; preds = %74, %79
  %80 = phi i8* [ %81, %79 ], [ %76, %74 ]
  store i8 0, i8* %80, align 1, !dbg !13369
  call void @llvm.dbg.value(metadata i8* %80, metadata !13287, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13288
  %81 = getelementptr inbounds i8, i8* %80, i32 -1, !dbg !13288
  call void @llvm.dbg.value(metadata i8* %81, metadata !13287, metadata !DIExpression()), !dbg !13288
  %82 = load i8, i8* %81, align 1, !dbg !13367
  %83 = icmp eq i8 %82, 48, !dbg !13368
  br i1 %83, label %79, label %84, !dbg !13368, !llvm.loop !13373

84:                                               ; preds = %79, %74
  %85 = phi i8* [ %75, %74 ], [ %80, %79 ]
  %86 = phi i8 [ %77, %74 ], [ %82, %79 ], !dbg !13367
  %87 = icmp eq i8 %86, 46
  br i1 %87, label %88, label %89, !dbg !13375

88:                                               ; preds = %84
  store i8 48, i8* %85, align 1, !dbg !13377
  br label %89, !dbg !13379

89:                                               ; preds = %88, %84
  ret i8* %1, !dbg !13380
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @abort() local_unnamed_addr #12 !dbg !13381 {
  tail call void asm sideeffect "cpsid i", ""() #19, !dbg !13382, !srcloc !13383
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13384
  %2 = or i32 %1, 8, !dbg !13384
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13384
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !13385
  br label %3, !dbg !13386

3:                                                ; preds = %3, %0
  br label %3, !dbg !13387, !llvm.loop !13390
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @platform_assert(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !13393 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13397, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.value(metadata i8* %1, metadata !13398, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.value(metadata i32 %2, metadata !13399, metadata !DIExpression()), !dbg !13400
  tail call void asm sideeffect "cpsid i", ""() #19, !dbg !13401, !srcloc !13402
  %4 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13403
  %5 = or i32 %4, 8, !dbg !13403
  store volatile i32 %5, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13403
  store i1 true, i1* @assert_expr.0, align 4, !dbg !13404
  store i8* %0, i8** @assert_expr.1, align 4, !dbg !13405
  store i8* %1, i8** @assert_expr.2, align 4, !dbg !13406
  store i32 %2, i32* @assert_expr.3, align 4, !dbg !13407
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !13408
  br label %6, !dbg !13409

6:                                                ; preds = %6, %3
  br label %6, !dbg !13410, !llvm.loop !13413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @exception_dump_config(i32 noundef %0) local_unnamed_addr #4 !dbg !13416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13418, metadata !DIExpression()), !dbg !13419
  store i32 %0, i32* @reboot_flag, align 4, !dbg !13420
  ret void, !dbg !13421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @exception_register_callbacks(%struct.exception_config_type* nocapture noundef readonly %0) local_unnamed_addr #15 !dbg !13422 {
  call void @llvm.dbg.value(metadata %struct.exception_config_type* %0, metadata !13427, metadata !DIExpression()), !dbg !13429
  %2 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13430
  %3 = icmp sgt i32 %2, 5, !dbg !13432
  br i1 %3, label %30, label %4, !dbg !13433

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !13428, metadata !DIExpression()), !dbg !13429
  %5 = icmp sgt i32 %2, 0, !dbg !13434
  %6 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 0
  %7 = load void ()*, void ()** %6, align 4
  br i1 %5, label %8, label %23, !dbg !13438

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1
  br label %10, !dbg !13438

10:                                               ; preds = %8, %20
  %11 = phi i32 [ 0, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !13428, metadata !DIExpression()), !dbg !13429
  %12 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 0, !dbg !13439
  %13 = load void ()*, void ()** %12, align 4, !dbg !13439
  %14 = icmp eq void ()* %13, %7, !dbg !13442
  br i1 %14, label %15, label %20, !dbg !13443

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 1, !dbg !13444
  %17 = load void ()*, void ()** %16, align 4, !dbg !13444
  %18 = load void ()*, void ()** %9, align 4, !dbg !13445
  %19 = icmp eq void ()* %17, %18, !dbg !13446
  br i1 %19, label %30, label %20, !dbg !13447

20:                                               ; preds = %10, %15
  %21 = add nuw nsw i32 %11, 1, !dbg !13448
  call void @llvm.dbg.value(metadata i32 %21, metadata !13428, metadata !DIExpression()), !dbg !13429
  %22 = icmp eq i32 %21, %2, !dbg !13434
  br i1 %22, label %23, label %10, !dbg !13438, !llvm.loop !13449

23:                                               ; preds = %20, %4
  %24 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 0, !dbg !13451
  store void ()* %7, void ()** %24, align 4, !dbg !13452
  %25 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1, !dbg !13453
  %26 = load void ()*, void ()** %25, align 4, !dbg !13453
  %27 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 1, !dbg !13454
  store void ()* %26, void ()** %27, align 4, !dbg !13455
  %28 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13456
  %29 = add nsw i32 %28, 1, !dbg !13456
  store i32 %29, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13456
  br label %30, !dbg !13457

30:                                               ; preds = %15, %1, %23
  %31 = phi i1 [ true, %23 ], [ false, %1 ], [ false, %15 ], !dbg !13458
  ret i1 %31, !dbg !13459
}

; Function Attrs: noinline nounwind optsize
define dso_local void @exception_init() local_unnamed_addr #0 section ".ramTEXT" !dbg !13460 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13463
  %2 = and i32 %1, -9, !dbg !13463
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13463
  tail call void @Flash_ReturnReady() #20, !dbg !13464
  call void @llvm.dbg.value(metadata i32 0, metadata !13462, metadata !DIExpression()), !dbg !13465
  %3 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13466
  %4 = icmp sgt i32 %3, 0, !dbg !13469
  br i1 %4, label %5, label %17, !dbg !13470

5:                                                ; preds = %0, %13
  %6 = phi i32 [ %14, %13 ], [ %3, %0 ]
  %7 = phi i32 [ %15, %13 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13462, metadata !DIExpression()), !dbg !13465
  %8 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %7, i32 0, !dbg !13471
  %9 = load void ()*, void ()** %8, align 4, !dbg !13471
  %10 = icmp eq void ()* %9, null, !dbg !13474
  br i1 %10, label %13, label %11, !dbg !13475

11:                                               ; preds = %5
  tail call void %9() #20, !dbg !13476
  %12 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13466
  br label %13, !dbg !13478

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %6, %5 ], [ %12, %11 ], !dbg !13466
  %15 = add nuw nsw i32 %7, 1, !dbg !13479
  call void @llvm.dbg.value(metadata i32 %15, metadata !13462, metadata !DIExpression()), !dbg !13465
  %16 = icmp slt i32 %15, %14, !dbg !13469
  br i1 %16, label %5, label %17, !dbg !13470, !llvm.loop !13480

17:                                               ; preds = %13, %0
  %18 = load i1, i1* @assert_expr.0, align 4, !dbg !13482
  br i1 %18, label %19, label %24, !dbg !13484

19:                                               ; preds = %17
  %20 = load i8*, i8** @assert_expr.1, align 4, !dbg !13485
  %21 = load i8*, i8** @assert_expr.2, align 4, !dbg !13487
  %22 = load i32, i32* @assert_expr.3, align 4, !dbg !13488
  %23 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.199, i32 0, i32 0), i8* noundef %20, i8* noundef %21, i32 noundef %22) #20, !dbg !13489
  br label %24, !dbg !13490

24:                                               ; preds = %19, %17
  ret void, !dbg !13491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @NMI_Handler() local_unnamed_addr #7 !dbg !13492 {
  ret void, !dbg !13493
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printUsageErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !13494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13496, metadata !DIExpression()), !dbg !13497
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.200, i32 0, i32 0)) #20, !dbg !13498
  call void @llvm.dbg.value(metadata i32 %0, metadata !13496, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !13497
  %3 = and i32 %0, 33554432, !dbg !13499
  %4 = icmp eq i32 %3, 0, !dbg !13499
  br i1 %4, label %7, label %5, !dbg !13501

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.201, i32 0, i32 0)) #20, !dbg !13502
  br label %7, !dbg !13504

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16777216, !dbg !13505
  %9 = icmp eq i32 %8, 0, !dbg !13505
  br i1 %9, label %12, label %10, !dbg !13507

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.202, i32 0, i32 0)) #20, !dbg !13508
  br label %12, !dbg !13510

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 524288, !dbg !13511
  %14 = icmp eq i32 %13, 0, !dbg !13511
  br i1 %14, label %17, label %15, !dbg !13513

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.203, i32 0, i32 0)) #20, !dbg !13514
  br label %17, !dbg !13516

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 262144, !dbg !13517
  %19 = icmp eq i32 %18, 0, !dbg !13517
  br i1 %19, label %22, label %20, !dbg !13519

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.204, i32 0, i32 0)) #20, !dbg !13520
  br label %22, !dbg !13522

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 131072, !dbg !13523
  %24 = icmp eq i32 %23, 0, !dbg !13523
  br i1 %24, label %27, label %25, !dbg !13525

25:                                               ; preds = %22
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.205, i32 0, i32 0)) #20, !dbg !13526
  br label %27, !dbg !13528

27:                                               ; preds = %25, %22
  %28 = and i32 %0, 65536, !dbg !13529
  %29 = icmp eq i32 %28, 0, !dbg !13529
  br i1 %29, label %32, label %30, !dbg !13531

30:                                               ; preds = %27
  %31 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.206, i32 0, i32 0)) #20, !dbg !13532
  br label %32, !dbg !13534

32:                                               ; preds = %30, %27
  ret void, !dbg !13535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printMemoryManagementErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !13536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13538, metadata !DIExpression()), !dbg !13539
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.207, i32 0, i32 0)) #20, !dbg !13540
  call void @llvm.dbg.value(metadata i32 %0, metadata !13538, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !13539
  %3 = and i32 %0, 32, !dbg !13541
  %4 = icmp eq i32 %3, 0, !dbg !13543
  br i1 %4, label %7, label %5, !dbg !13544

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.9.208, i32 0, i32 0)) #20, !dbg !13545
  br label %7, !dbg !13547

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16, !dbg !13548
  %9 = icmp eq i32 %8, 0, !dbg !13550
  br i1 %9, label %12, label %10, !dbg !13551

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.209, i32 0, i32 0)) #20, !dbg !13552
  br label %12, !dbg !13554

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 8, !dbg !13555
  %14 = icmp eq i32 %13, 0, !dbg !13557
  br i1 %14, label %17, label %15, !dbg !13558

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11.210, i32 0, i32 0)) #20, !dbg !13559
  br label %17, !dbg !13561

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 2, !dbg !13562
  %19 = icmp eq i32 %18, 0, !dbg !13564
  br i1 %19, label %23, label %20, !dbg !13565

20:                                               ; preds = %17
  %21 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !13566
  %22 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.211, i32 0, i32 0), i32 noundef %21) #20, !dbg !13568
  br label %23, !dbg !13569

23:                                               ; preds = %20, %17
  %24 = and i32 %0, 1, !dbg !13570
  %25 = icmp eq i32 %24, 0, !dbg !13572
  br i1 %25, label %28, label %26, !dbg !13573

26:                                               ; preds = %23
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13.212, i32 0, i32 0)) #20, !dbg !13574
  br label %28, !dbg !13576

28:                                               ; preds = %26, %23
  %29 = and i32 %0, 128, !dbg !13577
  %30 = icmp eq i32 %29, 0, !dbg !13579
  br i1 %30, label %34, label %31, !dbg !13580

31:                                               ; preds = %28
  %32 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !13581
  %33 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.213, i32 0, i32 0), i32 noundef %32) #20, !dbg !13583
  br label %34, !dbg !13584

34:                                               ; preds = %31, %28
  ret void, !dbg !13585
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printBusFaultErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !13586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13588, metadata !DIExpression()), !dbg !13589
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.214, i32 0, i32 0)) #20, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %0, metadata !13588, metadata !DIExpression(DW_OP_constu, 65280, DW_OP_and, DW_OP_stack_value)), !dbg !13589
  call void @llvm.dbg.value(metadata i32 %0, metadata !13588, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !13589
  %3 = and i32 %0, 8192, !dbg !13591
  %4 = icmp eq i32 %3, 0, !dbg !13591
  br i1 %4, label %7, label %5, !dbg !13593

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.215, i32 0, i32 0)) #20, !dbg !13594
  br label %7, !dbg !13596

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 4096, !dbg !13597
  %9 = icmp eq i32 %8, 0, !dbg !13597
  br i1 %9, label %12, label %10, !dbg !13599

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.17.216, i32 0, i32 0)) #20, !dbg !13600
  br label %12, !dbg !13602

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 2048, !dbg !13603
  %14 = icmp eq i32 %13, 0, !dbg !13603
  br i1 %14, label %17, label %15, !dbg !13605

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18.217, i32 0, i32 0)) #20, !dbg !13606
  br label %17, !dbg !13608

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 1024, !dbg !13609
  %19 = icmp eq i32 %18, 0, !dbg !13609
  br i1 %19, label %22, label %20, !dbg !13611

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.218, i32 0, i32 0)) #20, !dbg !13612
  br label %22, !dbg !13614

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 512, !dbg !13615
  %24 = icmp eq i32 %23, 0, !dbg !13615
  br i1 %24, label %28, label %25, !dbg !13617

25:                                               ; preds = %22
  %26 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !13618
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20.219, i32 0, i32 0), i32 noundef %26) #20, !dbg !13620
  br label %28, !dbg !13621

28:                                               ; preds = %25, %22
  %29 = and i32 %0, 256, !dbg !13622
  %30 = icmp eq i32 %29, 0, !dbg !13622
  br i1 %30, label %33, label %31, !dbg !13624

31:                                               ; preds = %28
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21.220, i32 0, i32 0)) #20, !dbg !13625
  br label %33, !dbg !13627

33:                                               ; preds = %31, %28
  %34 = and i32 %0, 32768, !dbg !13628
  %35 = icmp eq i32 %34, 0, !dbg !13628
  br i1 %35, label %39, label %36, !dbg !13630

36:                                               ; preds = %33
  %37 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !13631
  %38 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.221, i32 0, i32 0), i32 noundef %37) #20, !dbg !13633
  br label %39, !dbg !13634

39:                                               ; preds = %36, %33
  ret void, !dbg !13635
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @exception_reboot() local_unnamed_addr #0 !dbg !13636 {
  ret void, !dbg !13637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stackDump(i32* noundef %0) local_unnamed_addr #0 !dbg !13638 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13642, metadata !DIExpression()), !dbg !13643
  %2 = load i32, i32* %0, align 4, !dbg !13644
  store i32 %2, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 0), align 4, !dbg !13645
  %3 = getelementptr inbounds i32, i32* %0, i32 1, !dbg !13646
  %4 = load i32, i32* %3, align 4, !dbg !13646
  store i32 %4, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !13647
  %5 = getelementptr inbounds i32, i32* %0, i32 2, !dbg !13648
  %6 = load i32, i32* %5, align 4, !dbg !13648
  store i32 %6, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !13649
  %7 = getelementptr inbounds i32, i32* %0, i32 3, !dbg !13650
  %8 = load i32, i32* %7, align 4, !dbg !13650
  store i32 %8, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !13651
  %9 = getelementptr inbounds i32, i32* %0, i32 4, !dbg !13652
  %10 = load i32, i32* %9, align 4, !dbg !13652
  store i32 %10, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !13653
  %11 = ptrtoint i32* %0 to i32, !dbg !13654
  %12 = add i32 %11, 32, !dbg !13655
  store i32 %12, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13656
  %13 = getelementptr inbounds i32, i32* %0, i32 5, !dbg !13657
  %14 = load i32, i32* %13, align 4, !dbg !13657
  store i32 %14, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !13658
  %15 = getelementptr inbounds i32, i32* %0, i32 6, !dbg !13659
  %16 = load i32, i32* %15, align 4, !dbg !13659
  store i32 %16, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !13660
  %17 = getelementptr inbounds i32, i32* %0, i32 7, !dbg !13661
  %18 = load i32, i32* %17, align 4, !dbg !13661
  store i32 %18, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !13662
  %19 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !13663
  %20 = and i32 %19, 16, !dbg !13665
  %21 = icmp eq i32 %20, 0, !dbg !13666
  br i1 %21, label %22, label %58, !dbg !13667

22:                                               ; preds = %1
  %23 = getelementptr inbounds i32, i32* %0, i32 8, !dbg !13668
  %24 = load i32, i32* %23, align 4, !dbg !13668
  store i32 %24, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !13670
  %25 = getelementptr inbounds i32, i32* %0, i32 9, !dbg !13671
  %26 = load i32, i32* %25, align 4, !dbg !13671
  store i32 %26, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !13672
  %27 = getelementptr inbounds i32, i32* %0, i32 10, !dbg !13673
  %28 = load i32, i32* %27, align 4, !dbg !13673
  store i32 %28, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !13674
  %29 = getelementptr inbounds i32, i32* %0, i32 11, !dbg !13675
  %30 = load i32, i32* %29, align 4, !dbg !13675
  store i32 %30, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !13676
  %31 = getelementptr inbounds i32, i32* %0, i32 12, !dbg !13677
  %32 = load i32, i32* %31, align 4, !dbg !13677
  store i32 %32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !13678
  %33 = getelementptr inbounds i32, i32* %0, i32 13, !dbg !13679
  %34 = load i32, i32* %33, align 4, !dbg !13679
  store i32 %34, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !13680
  %35 = getelementptr inbounds i32, i32* %0, i32 14, !dbg !13681
  %36 = load i32, i32* %35, align 4, !dbg !13681
  store i32 %36, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !13682
  %37 = getelementptr inbounds i32, i32* %0, i32 15, !dbg !13683
  %38 = load i32, i32* %37, align 4, !dbg !13683
  store i32 %38, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !13684
  %39 = getelementptr inbounds i32, i32* %0, i32 16, !dbg !13685
  %40 = load i32, i32* %39, align 4, !dbg !13685
  store i32 %40, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !13686
  %41 = getelementptr inbounds i32, i32* %0, i32 17, !dbg !13687
  %42 = load i32, i32* %41, align 4, !dbg !13687
  store i32 %42, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !13688
  %43 = getelementptr inbounds i32, i32* %0, i32 18, !dbg !13689
  %44 = load i32, i32* %43, align 4, !dbg !13689
  store i32 %44, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !13690
  %45 = getelementptr inbounds i32, i32* %0, i32 19, !dbg !13691
  %46 = load i32, i32* %45, align 4, !dbg !13691
  store i32 %46, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !13692
  %47 = getelementptr inbounds i32, i32* %0, i32 20, !dbg !13693
  %48 = load i32, i32* %47, align 4, !dbg !13693
  store i32 %48, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !13694
  %49 = getelementptr inbounds i32, i32* %0, i32 21, !dbg !13695
  %50 = load i32, i32* %49, align 4, !dbg !13695
  store i32 %50, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !13696
  %51 = getelementptr inbounds i32, i32* %0, i32 22, !dbg !13697
  %52 = load i32, i32* %51, align 4, !dbg !13697
  store i32 %52, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !13698
  %53 = getelementptr inbounds i32, i32* %0, i32 23, !dbg !13699
  %54 = load i32, i32* %53, align 4, !dbg !13699
  store i32 %54, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !13700
  %55 = getelementptr inbounds i32, i32* %0, i32 24, !dbg !13701
  %56 = load i32, i32* %55, align 4, !dbg !13701
  store i32 %56, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !13702
  %57 = add i32 %11, 104, !dbg !13703
  store i32 %57, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13703
  br label %58, !dbg !13704

58:                                               ; preds = %22, %1
  %59 = phi i32 [ %57, %22 ], [ %12, %1 ]
  %60 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13705
  %61 = and i32 %60, 512, !dbg !13707
  %62 = icmp eq i32 %61, 0, !dbg !13707
  %63 = and i32 %18, 512
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %62, i1 true, i1 %64, !dbg !13708
  br i1 %65, label %68, label %66, !dbg !13708

66:                                               ; preds = %58
  %67 = add i32 %59, 4, !dbg !13709
  store i32 %67, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13709
  br label %68, !dbg !13711

68:                                               ; preds = %66, %58
  %69 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.222, i32 0, i32 0), i32 noundef %2) #20, !dbg !13712
  %70 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !13713
  %71 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.223, i32 0, i32 0), i32 noundef %70) #20, !dbg !13714
  %72 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !13715
  %73 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.224, i32 0, i32 0), i32 noundef %72) #20, !dbg !13716
  %74 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !13717
  %75 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i32 noundef %74) #20, !dbg !13718
  %76 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 4), align 4, !dbg !13719
  %77 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i32 noundef %76) #20, !dbg !13720
  %78 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 5), align 4, !dbg !13721
  %79 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i32 noundef %78) #20, !dbg !13722
  %80 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 6), align 4, !dbg !13723
  %81 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 noundef %80) #20, !dbg !13724
  %82 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 7), align 4, !dbg !13725
  %83 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0), i32 noundef %82) #20, !dbg !13726
  %84 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 8), align 4, !dbg !13727
  %85 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i32 noundef %84) #20, !dbg !13728
  %86 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 9), align 4, !dbg !13729
  %87 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i32 noundef %86) #20, !dbg !13730
  %88 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 10), align 4, !dbg !13731
  %89 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 noundef %88) #20, !dbg !13732
  %90 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 11), align 4, !dbg !13733
  %91 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i32 noundef %90) #20, !dbg !13734
  %92 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !13735
  %93 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i32 noundef %92) #20, !dbg !13736
  %94 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !13737
  %95 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i32 noundef %94) #20, !dbg !13738
  %96 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !13739
  %97 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i32 noundef %96) #20, !dbg !13740
  %98 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !13741
  %99 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 noundef %98) #20, !dbg !13742
  %100 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !13743
  %101 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i32 noundef %100) #20, !dbg !13744
  %102 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !13745
  %103 = and i32 %102, 4, !dbg !13747
  %104 = icmp eq i32 %103, 0, !dbg !13747
  br i1 %104, label %108, label %105, !dbg !13748

105:                                              ; preds = %68
  %106 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13749
  %107 = or i32 %106, 2, !dbg !13749
  store i32 %107, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13749
  br label %108, !dbg !13751

108:                                              ; preds = %68, %105
  %109 = phi i32* [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), %105 ], [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), %68 ]
  %110 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13752
  store i32 %110, i32* %109, align 4, !dbg !13752
  %111 = and i32 %102, 16, !dbg !13753
  %112 = icmp eq i32 %111, 0, !dbg !13755
  br i1 %112, label %113, label %182, !dbg !13756

113:                                              ; preds = %108
  %114 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13757
  %115 = or i32 %114, 4, !dbg !13757
  store i32 %115, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13757
  %116 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !13759
  %117 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), i32 noundef %116) #20, !dbg !13760
  %118 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !13761
  %119 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0), i32 noundef %118) #20, !dbg !13762
  %120 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !13763
  %121 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i32 noundef %120) #20, !dbg !13764
  %122 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !13765
  %123 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i32 noundef %122) #20, !dbg !13766
  %124 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !13767
  %125 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 noundef %124) #20, !dbg !13768
  %126 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !13769
  %127 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i32 noundef %126) #20, !dbg !13770
  %128 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !13771
  %129 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i32 noundef %128) #20, !dbg !13772
  %130 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !13773
  %131 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i32 noundef %130) #20, !dbg !13774
  %132 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !13775
  %133 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 noundef %132) #20, !dbg !13776
  %134 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !13777
  %135 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0), i32 noundef %134) #20, !dbg !13778
  %136 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !13779
  %137 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i32 noundef %136) #20, !dbg !13780
  %138 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !13781
  %139 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i32 noundef %138) #20, !dbg !13782
  %140 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !13783
  %141 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i32 noundef %140) #20, !dbg !13784
  %142 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !13785
  %143 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i32 noundef %142) #20, !dbg !13786
  %144 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !13787
  %145 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i32 noundef %144) #20, !dbg !13788
  %146 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !13789
  %147 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55.225, i32 0, i32 0), i32 noundef %146) #20, !dbg !13790
  %148 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 38), align 4, !dbg !13791
  %149 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i32 0, i32 0), i32 noundef %148) #20, !dbg !13792
  %150 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 39), align 4, !dbg !13793
  %151 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57.226, i32 0, i32 0), i32 noundef %150) #20, !dbg !13794
  %152 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 40), align 4, !dbg !13795
  %153 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i32 noundef %152) #20, !dbg !13796
  %154 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 41), align 4, !dbg !13797
  %155 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i32 0, i32 0), i32 noundef %154) #20, !dbg !13798
  %156 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 42), align 4, !dbg !13799
  %157 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i32 noundef %156) #20, !dbg !13800
  %158 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 43), align 4, !dbg !13801
  %159 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i32 noundef %158) #20, !dbg !13802
  %160 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 44), align 4, !dbg !13803
  %161 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i32 noundef %160) #20, !dbg !13804
  %162 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 45), align 4, !dbg !13805
  %163 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i32 noundef %162) #20, !dbg !13806
  %164 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 46), align 4, !dbg !13807
  %165 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i32 noundef %164) #20, !dbg !13808
  %166 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 47), align 4, !dbg !13809
  %167 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 noundef %166) #20, !dbg !13810
  %168 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 48), align 4, !dbg !13811
  %169 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66.227, i32 0, i32 0), i32 noundef %168) #20, !dbg !13812
  %170 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 49), align 4, !dbg !13813
  %171 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i32 noundef %170) #20, !dbg !13814
  %172 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 50), align 4, !dbg !13815
  %173 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i32 noundef %172) #20, !dbg !13816
  %174 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 51), align 4, !dbg !13817
  %175 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i32 noundef %174) #20, !dbg !13818
  %176 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 52), align 4, !dbg !13819
  %177 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i32 noundef %176) #20, !dbg !13820
  %178 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 53), align 4, !dbg !13821
  %179 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i32 0, i32 0), i32 noundef %178) #20, !dbg !13822
  %180 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !13823
  %181 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i32 noundef %180) #20, !dbg !13824
  br label %182, !dbg !13825

182:                                              ; preds = %113, %108
  %183 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13826
  %184 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i32 0, i32 0), i32 noundef %183) #20, !dbg !13827
  %185 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), align 4, !dbg !13828
  %186 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i32 0, i32 0), i32 noundef %185) #20, !dbg !13829
  %187 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), align 4, !dbg !13830
  %188 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i32 0, i32 0), i32 noundef %187) #20, !dbg !13831
  %189 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13832
  %190 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), i32 noundef %189) #20, !dbg !13833
  %191 = tail call fastcc zeroext i1 @reboot_check() #22, !dbg !13834
  br i1 %191, label %192, label %193, !dbg !13836

192:                                              ; preds = %182
  tail call void @exception_reboot() #22, !dbg !13837
  br label %193, !dbg !13839

193:                                              ; preds = %192, %182
  ret void, !dbg !13840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @reboot_check() unnamed_addr #9 !dbg !13841 {
  %1 = load i32, i32* @reboot_flag, align 4, !dbg !13844
  %2 = icmp eq i32 %1, -559038737, !dbg !13845
  ret i1 %2, !dbg !13846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @memoryDumpAll() local_unnamed_addr #0 !dbg !13847 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13851, metadata !DIExpression()), !dbg !13852
  %1 = load i8*, i8** getelementptr inbounds ([6 x %struct.memory_region_type], [6 x %struct.memory_region_type]* @memory_regions, i32 0, i32 0, i32 0), align 4, !dbg !13853
  %2 = icmp eq i8* %1, null, !dbg !13858
  br i1 %2, label %3, label %6, !dbg !13859

3:                                                ; preds = %44, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !13851, metadata !DIExpression()), !dbg !13852
  %4 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13860
  %5 = icmp eq i32 %4, 0, !dbg !13863
  br i1 %5, label %61, label %49, !dbg !13864

6:                                                ; preds = %0, %44
  %7 = phi i32 [ %45, %44 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13851, metadata !DIExpression()), !dbg !13852
  %8 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 3, !dbg !13865
  %9 = load i32, i32* %8, align 4, !dbg !13865
  %10 = icmp eq i32 %9, 0, !dbg !13867
  br i1 %10, label %44, label %11, !dbg !13868

11:                                               ; preds = %6
  %12 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 1, !dbg !13869
  %13 = load i32*, i32** %12, align 4, !dbg !13869
  call void @llvm.dbg.value(metadata i32* %13, metadata !13849, metadata !DIExpression()), !dbg !13852
  %14 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 2, !dbg !13870
  %15 = load i32*, i32** %14, align 4, !dbg !13870
  call void @llvm.dbg.value(metadata i32* %15, metadata !13850, metadata !DIExpression()), !dbg !13852
  %16 = icmp ult i32* %13, %15, !dbg !13871
  br i1 %16, label %17, label %44, !dbg !13874

17:                                               ; preds = %11, %41
  %18 = phi i32* [ %42, %41 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32* %18, metadata !13849, metadata !DIExpression()), !dbg !13852
  %19 = load i32, i32* %18, align 4, !dbg !13875
  %20 = icmp eq i32 %19, 0, !dbg !13878
  %21 = getelementptr inbounds i32, i32* %18, i32 1
  %22 = load i32, i32* %21, align 4, !dbg !13879
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %20, i1 %23, i1 false, !dbg !13880
  br i1 %24, label %25, label %33, !dbg !13880

25:                                               ; preds = %17
  %26 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !13881
  %27 = load i32, i32* %26, align 4, !dbg !13882
  %28 = icmp eq i32 %27, 0, !dbg !13883
  br i1 %28, label %29, label %33, !dbg !13884

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !13885
  %31 = load i32, i32* %30, align 4, !dbg !13886
  %32 = icmp eq i32 %31, 0, !dbg !13887
  br i1 %32, label %41, label %33, !dbg !13888

33:                                               ; preds = %17, %29, %25
  %34 = phi i32 [ 0, %29 ], [ 0, %25 ], [ %22, %17 ], !dbg !13889
  %35 = ptrtoint i32* %18 to i32, !dbg !13890
  %36 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !13891
  %37 = load i32, i32* %36, align 4, !dbg !13892
  %38 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !13893
  %39 = load i32, i32* %38, align 4, !dbg !13894
  %40 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i32 0, i32 0), i32 noundef %35, i32 noundef %19, i32 noundef %34, i32 noundef %37, i32 noundef %39) #20, !dbg !13895
  br label %41, !dbg !13896

41:                                               ; preds = %29, %33
  %42 = getelementptr inbounds i32, i32* %18, i32 4, !dbg !13897
  call void @llvm.dbg.value(metadata i32* %42, metadata !13849, metadata !DIExpression()), !dbg !13852
  %43 = icmp ult i32* %42, %15, !dbg !13871
  br i1 %43, label %17, label %44, !dbg !13874, !llvm.loop !13898

44:                                               ; preds = %41, %11, %6
  %45 = add i32 %7, 1, !dbg !13900
  call void @llvm.dbg.value(metadata i32 %45, metadata !13851, metadata !DIExpression()), !dbg !13852
  %46 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %45, i32 0, !dbg !13853
  %47 = load i8*, i8** %46, align 4, !dbg !13853
  %48 = icmp eq i8* %47, null, !dbg !13858
  br i1 %48, label %3, label %6, !dbg !13859, !llvm.loop !13901

49:                                               ; preds = %3, %57
  %50 = phi i32 [ %58, %57 ], [ %4, %3 ]
  %51 = phi i32 [ %59, %57 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !13851, metadata !DIExpression()), !dbg !13852
  %52 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %51, i32 1, !dbg !13904
  %53 = load void ()*, void ()** %52, align 4, !dbg !13904
  %54 = icmp eq void ()* %53, null, !dbg !13907
  br i1 %54, label %57, label %55, !dbg !13908

55:                                               ; preds = %49
  tail call void %53() #20, !dbg !13909
  %56 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13860
  br label %57, !dbg !13911

57:                                               ; preds = %49, %55
  %58 = phi i32 [ %50, %49 ], [ %56, %55 ], !dbg !13860
  %59 = add nuw i32 %51, 1, !dbg !13912
  call void @llvm.dbg.value(metadata i32 %59, metadata !13851, metadata !DIExpression()), !dbg !13852
  %60 = icmp ult i32 %59, %58, !dbg !13863
  br i1 %60, label %49, label %61, !dbg !13864, !llvm.loop !13913

61:                                               ; preds = %57, %3
  %62 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78.228, i32 0, i32 0)) #20, !dbg !13915
  ret void, !dbg !13916
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Hard_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !13917 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13919, metadata !DIExpression()), !dbg !13920
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i32 0, i32 0)) #20, !dbg !13921
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13922
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i32 0, i32 0), i32 noundef %3) #20, !dbg !13923
  %5 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13924
  %6 = and i32 %5, 1073741824, !dbg !13926
  %7 = icmp eq i32 %6, 0, !dbg !13927
  br i1 %7, label %28, label %8, !dbg !13928

8:                                                ; preds = %1
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81.229, i32 0, i32 0)) #20, !dbg !13929
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13931
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %10) #20, !dbg !13932
  %12 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13933
  %13 = icmp ult i32 %12, 65536, !dbg !13935
  br i1 %13, label %16, label %14, !dbg !13936

14:                                               ; preds = %8
  %15 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13937
  tail call void @printUsageErrorMsg(i32 noundef %15) #22, !dbg !13939
  br label %16, !dbg !13940

16:                                               ; preds = %14, %8
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13941
  %18 = and i32 %17, 65280, !dbg !13943
  %19 = icmp eq i32 %18, 0, !dbg !13944
  br i1 %19, label %22, label %20, !dbg !13945

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13946
  tail call void @printBusFaultErrorMsg(i32 noundef %21) #22, !dbg !13948
  br label %22, !dbg !13949

22:                                               ; preds = %20, %16
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13950
  %24 = and i32 %23, 255, !dbg !13952
  %25 = icmp eq i32 %24, 0, !dbg !13953
  br i1 %25, label %28, label %26, !dbg !13954

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13955
  tail call void @printMemoryManagementErrorMsg(i32 noundef %27) #22, !dbg !13957
  br label %28, !dbg !13958

28:                                               ; preds = %22, %26, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !13959
  tail call void @memoryDumpAll() #22, !dbg !13960
  br label %29, !dbg !13961

29:                                               ; preds = %28, %29
  br label %29, !dbg !13961, !llvm.loop !13962
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @MemManage_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !13964 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13966, metadata !DIExpression()), !dbg !13967
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i32 0, i32 0)) #20, !dbg !13968
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13969
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #20, !dbg !13970
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13971
  %6 = and i32 %5, 255, !dbg !13973
  %7 = icmp eq i32 %6, 0, !dbg !13974
  br i1 %7, label %10, label %8, !dbg !13975

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13976
  tail call void @printMemoryManagementErrorMsg(i32 noundef %9) #22, !dbg !13978
  br label %10, !dbg !13979

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !13980
  tail call void @memoryDumpAll() #22, !dbg !13981
  br label %11, !dbg !13982

11:                                               ; preds = %10, %11
  br label %11, !dbg !13982, !llvm.loop !13983
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Bus_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !13985 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13987, metadata !DIExpression()), !dbg !13988
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i32 0, i32 0)) #20, !dbg !13989
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13990
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #20, !dbg !13991
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13992
  %6 = and i32 %5, 65280, !dbg !13994
  %7 = icmp eq i32 %6, 0, !dbg !13995
  br i1 %7, label %10, label %8, !dbg !13996

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13997
  tail call void @printBusFaultErrorMsg(i32 noundef %9) #22, !dbg !13999
  br label %10, !dbg !14000

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !14001
  tail call void @memoryDumpAll() #22, !dbg !14002
  br label %11, !dbg !14003

11:                                               ; preds = %10, %11
  br label %11, !dbg !14003, !llvm.loop !14004
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Usage_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !14006 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !14008, metadata !DIExpression()), !dbg !14009
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85, i32 0, i32 0)) #20, !dbg !14010
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14011
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #20, !dbg !14012
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14013
  %6 = icmp ult i32 %5, 65536, !dbg !14015
  br i1 %6, label %9, label %7, !dbg !14016

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14017
  tail call void @printUsageErrorMsg(i32 noundef %8) #22, !dbg !14019
  br label %9, !dbg !14020

9:                                                ; preds = %7, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !14021
  tail call void @memoryDumpAll() #22, !dbg !14022
  br label %10, !dbg !14023

10:                                               ; preds = %9, %10
  br label %10, !dbg !14023, !llvm.loop !14024
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Debug_Monitor_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !14026 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !14028, metadata !DIExpression()), !dbg !14032
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i32 0, i32 0)) #20, !dbg !14033
  call void @llvm.dbg.value(metadata i32 12, metadata !14029, metadata !DIExpression()), !dbg !14032
  %3 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !14034
  call void @llvm.dbg.value(metadata i32 %3, metadata !14031, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !14032
  %4 = load volatile i32, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !14036
  call void @llvm.dbg.value(metadata i32 %4, metadata !14030, metadata !DIExpression()), !dbg !14032
  %5 = and i32 %3, 16777216, !dbg !14037
  %6 = icmp eq i32 %5, 0, !dbg !14037
  %7 = select i1 %6, i32 78, i32 89, !dbg !14037
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.87, i32 0, i32 0), i32 noundef %7, i32 noundef %4) #20, !dbg !14038
  tail call void @stackDump(i32* noundef %0) #22, !dbg !14039
  tail call void @memoryDumpAll() #22, !dbg !14040
  br label %9, !dbg !14041

9:                                                ; preds = %9, %1
  br label %9, !dbg !14041, !llvm.loop !14042
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @CommonFault_Handler() #16 section ".ramTEXT" !dbg !14044 {
  tail call void asm sideeffect "cpsid i                       \0Aldr r3, =pxExceptionStack     \0Aldr r3, [r3]                  \0Aldr r0, =pTaskContext         \0Aldr r0, [r0]                  \0Aadd r0, r0, #16               \0Astmia r0!, {r4-r11}           \0Amov r5, r12                   \0Aadd r0, r0, #20               \0Amrs r1, control               \0Astr r1, [r0], #4              \0Astr r5, [r0], #4              \0Amrs r4, msp                   \0Astr r4, [r0], #4              \0Amrs r1, psp                   \0Astr r1, [r0]                  \0Atst r5, #0x10                 \0Aitt eq                        \0Aaddeq r0, r0, #68             \0Avstmeq r0, {s16-s31}          \0Acmp r3, #0                    \0Ait ne                         \0Amovne sp, r3                  \0Apush {lr}                     \0Abl exception_init             \0Apop {lr}                      \0Atst r5, #4                    \0Aite eq                        \0Amoveq r0, r4                  \0Amrsne r0, psp                 \0Abx lr                         \0A", ""() #19, !dbg !14045, !srcloc !14046
  unreachable, !dbg !14047
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @HardFault_Handler() #16 section ".ramTEXT" !dbg !14048 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Hard_Fault_Handler         \0A", ""() #19, !dbg !14049, !srcloc !14050
  unreachable, !dbg !14051
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @MemManage_Handler() #16 section ".ramTEXT" !dbg !14052 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl MemManage_Fault_Handler    \0A", ""() #19, !dbg !14053, !srcloc !14054
  unreachable, !dbg !14055
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @BusFault_Handler() #16 section ".ramTEXT" !dbg !14056 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Bus_Fault_Handler          \0A", ""() #19, !dbg !14057, !srcloc !14058
  unreachable, !dbg !14059
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @UsageFault_Handler() #16 section ".ramTEXT" !dbg !14060 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Usage_Fault_Handler        \0A", ""() #19, !dbg !14061, !srcloc !14062
  unreachable, !dbg !14063
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @DebugMon_Handler() #16 section ".ramTEXT" !dbg !14064 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Debug_Monitor_Handler      \0A", ""() #19, !dbg !14065, !srcloc !14066
  unreachable, !dbg !14067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vApplicationStackOverflowHook(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !14068 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14072, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i8* %1, metadata !14073, metadata !DIExpression()), !dbg !14074
  %3 = ptrtoint i8* %0 to i32, !dbg !14075
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.232, i32 0, i32 0), i32 noundef %3, i8* noundef %1) #20, !dbg !14076
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 103) #20, !dbg !14077
  ret void, !dbg !14080
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, ...) #0 !dbg !14081 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14083, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i8* %1, metadata !14084, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 %2, metadata !14085, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 %3, metadata !14086, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i8* %4, metadata !14087, metadata !DIExpression()), !dbg !14095
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !14096
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14096
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !14088, metadata !DIExpression()), !dbg !14097
  call void @llvm.va_start(i8* nonnull %7), !dbg !14098
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !14099
  %9 = load i32, i32* %8, align 4, !dbg !14099
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !14099
  call void @vprint_module_log(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %10) #22, !dbg !14099
  call void @llvm.va_end(i8* nonnull %7), !dbg !14100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14101
  ret void, !dbg !14101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, ...) #0 !dbg !14102 {
  %8 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14104, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i8* %1, metadata !14105, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 %2, metadata !14106, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 %3, metadata !14107, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i8* %4, metadata !14108, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 %5, metadata !14109, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i8* %6, metadata !14110, metadata !DIExpression()), !dbg !14112
  %9 = bitcast %struct.__va_list* %8 to i8*, !dbg !14113
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !14113
  call void @llvm.dbg.declare(metadata %struct.__va_list* %8, metadata !14111, metadata !DIExpression()), !dbg !14114
  call void @llvm.va_start(i8* nonnull %9), !dbg !14115
  %10 = bitcast %struct.__va_list* %8 to i32*, !dbg !14116
  %11 = load i32, i32* %10, align 4, !dbg !14116
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !14116
  call void @vdump_module_buffer(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %12) #22, !dbg !14116
  call void @llvm.va_end(i8* nonnull %9), !dbg !14117
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !14118
  ret void, !dbg !14118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vdump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %7) local_unnamed_addr #0 !dbg !14119 {
  %9 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14130, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8* %0, metadata !14123, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8* %1, metadata !14124, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 %2, metadata !14125, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 %3, metadata !14126, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8* %4, metadata !14127, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 %5, metadata !14128, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8* %6, metadata !14129, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8* %0, metadata !14131, metadata !DIExpression()), !dbg !14145
  %10 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !14146
  %11 = bitcast i8* %10 to i32*, !dbg !14146
  %12 = load i32, i32* %11, align 4, !dbg !14146
  %13 = icmp eq i32 %12, 0, !dbg !14147
  br i1 %13, label %14, label %101, !dbg !14148

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !14149
  %16 = bitcast i8* %15 to i32*, !dbg !14149
  %17 = load i32, i32* %16, align 4, !dbg !14149
  %18 = icmp ugt i32 %17, %3, !dbg !14150
  br i1 %18, label %101, label %19, !dbg !14151

19:                                               ; preds = %14
  %20 = load i1, i1* @syslog_task_ready, align 4, !dbg !14152
  br i1 %20, label %21, label %28, !dbg !14153

21:                                               ; preds = %19
  %22 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !14154
  %23 = icmp eq i32 %22, 0, !dbg !14155
  br i1 %23, label %24, label %50, !dbg !14156

24:                                               ; preds = %21
  %25 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !14157
  %26 = and i32 %25, 255, !dbg !14158
  %27 = icmp eq i32 %26, 0, !dbg !14159
  br i1 %27, label %28, label %50, !dbg !14160

28:                                               ; preds = %24, %19
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !14161
  %30 = icmp eq i32 %29, 0, !dbg !14162
  br i1 %30, label %101, label %31, !dbg !14163

31:                                               ; preds = %28
  %32 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !14164, !srcloc !14170
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !14164
  call void @llvm.dbg.value(metadata i32 %33, metadata !14167, metadata !DIExpression()) #19, !dbg !14171
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()) #19, !dbg !14171
  call void @llvm.dbg.value(metadata i32 %33, metadata !14133, metadata !DIExpression()), !dbg !14172
  %34 = load i32, i32* @syslog_init_done, align 4, !dbg !14173
  %35 = icmp ugt i32 %34, 1, !dbg !14175
  br i1 %35, label %36, label %47, !dbg !14176

36:                                               ; preds = %31
  %37 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !14177
  %38 = bitcast i8* %0 to i8**, !dbg !14179
  %39 = load i8*, i8** %38, align 4, !dbg !14179
  %40 = icmp ult i32 %3, 4, !dbg !14180
  br i1 %40, label %41, label %44, !dbg !14180

41:                                               ; preds = %36
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !14180
  %43 = load i8*, i8** %42, align 4, !dbg !14180
  br label %44, !dbg !14180

44:                                               ; preds = %36, %41
  %45 = phi i8* [ %43, %41 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.242, i32 0, i32 0), %36 ], !dbg !14180
  %46 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.243, i32 0, i32 0), i32 noundef %37, i8* noundef %39, i8* noundef %45, i8* noundef %1, i32 noundef %2) #20, !dbg !14181
  br label %47, !dbg !14182

47:                                               ; preds = %44, %31
  %48 = tail call i32 @vprintf(i8* noundef %6, [1 x i32] %7) #20, !dbg !14183
  %49 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.244, i32 0, i32 0)) #20, !dbg !14184
  tail call void @hex_dump_data(i8* noundef %4, i32 noundef %5) #22, !dbg !14185
  call void @llvm.dbg.value(metadata i32 %33, metadata !14186, metadata !DIExpression()) #19, !dbg !14189
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #19, !dbg !14191, !srcloc !14192
  br label %101, !dbg !14193

50:                                               ; preds = %24, %21
  %51 = bitcast %struct.syslog_buffer_t** %9 to i8*, !dbg !14194
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #19, !dbg !14194
  %52 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #22, !dbg !14195
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %52, metadata !14140, metadata !DIExpression()), !dbg !14196
  store %struct.syslog_buffer_t* %52, %struct.syslog_buffer_t** %9, align 4, !dbg !14197
  %53 = icmp eq %struct.syslog_buffer_t* %52, null, !dbg !14198
  br i1 %53, label %100, label %54, !dbg !14200

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 0, !dbg !14201
  call void @llvm.dbg.value(metadata i8* %55, metadata !14142, metadata !DIExpression()), !dbg !14196
  %56 = bitcast i8* %55 to i32*, !dbg !14202
  store i32 1, i32* %56, align 4, !dbg !14203
  %57 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 4, !dbg !14204
  call void @llvm.dbg.value(metadata i8* %57, metadata !14143, metadata !DIExpression()), !dbg !14196
  %58 = bitcast i8* %0 to i8**, !dbg !14205
  %59 = load i8*, i8** %58, align 4, !dbg !14205
  %60 = bitcast i8* %57 to i8**, !dbg !14206
  store i8* %59, i8** %60, align 4, !dbg !14207
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 8, !dbg !14208
  %62 = bitcast i8* %61 to i32*, !dbg !14208
  store i32 %3, i32* %62, align 4, !dbg !14209
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 12, !dbg !14210
  %64 = bitcast i8* %63 to i8**, !dbg !14210
  store i8* %1, i8** %64, align 4, !dbg !14211
  %65 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 16, !dbg !14212
  %66 = bitcast i8* %65 to i32*, !dbg !14212
  store i32 %2, i32* %66, align 4, !dbg !14213
  %67 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !14214
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 20, !dbg !14215
  %69 = bitcast i8* %68 to i32*, !dbg !14215
  store i32 %67, i32* %69, align 4, !dbg !14216
  %70 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 24, !dbg !14217
  %71 = tail call i32 @vsnprintf(i8* noundef nonnull %70, i32 noundef 128, i8* noundef %6, [1 x i32] %7) #20, !dbg !14218
  %72 = icmp slt i32 %5, 2048, !dbg !14219
  %73 = select i1 %72, i32 %5, i32 2048, !dbg !14219
  call void @llvm.dbg.value(metadata i32 %73, metadata !14128, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 0, metadata !14132, metadata !DIExpression()), !dbg !14145
  %74 = icmp sgt i32 %73, 128, !dbg !14220
  br i1 %74, label %75, label %81, !dbg !14222

75:                                               ; preds = %54
  %76 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !14223
  %77 = and i32 %76, 255, !dbg !14226
  %78 = icmp eq i32 %77, 0, !dbg !14227
  %79 = add nsw i32 %73, -128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14132, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 128, metadata !14128, metadata !DIExpression()), !dbg !14145
  %80 = select i1 %78, i32 %79, i32 0, !dbg !14228
  br label %81, !dbg !14228

81:                                               ; preds = %75, %54
  %82 = phi i32 [ 0, %54 ], [ %80, %75 ], !dbg !14196
  %83 = phi i32 [ %5, %54 ], [ 128, %75 ], !dbg !14196
  call void @llvm.dbg.value(metadata i32 %83, metadata !14128, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 %82, metadata !14132, metadata !DIExpression()), !dbg !14145
  %84 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 160, !dbg !14229
  %85 = tail call i8* @memcpy(i8* noundef nonnull %84, i8* noundef %4, i32 noundef %83) #20, !dbg !14230
  %86 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 156, !dbg !14231
  %87 = bitcast i8* %86 to i32*, !dbg !14231
  store i32 %83, i32* %87, align 4, !dbg !14232
  %88 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 288, !dbg !14233
  %89 = bitcast i8* %88 to i8**, !dbg !14233
  store i8* null, i8** %89, align 4, !dbg !14234
  %90 = icmp eq i32 %82, 0, !dbg !14235
  br i1 %90, label %99, label %91, !dbg !14237

91:                                               ; preds = %81
  %92 = tail call i8* @pvPortMalloc(i32 noundef %82) #20, !dbg !14238
  store i8* %92, i8** %89, align 4, !dbg !14241
  %93 = icmp eq i8* %92, null, !dbg !14242
  br i1 %93, label %99, label %94, !dbg !14243

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %4, i32 %83, !dbg !14244
  %96 = tail call i8* @memcpy(i8* noundef nonnull %92, i8* noundef %95, i32 noundef %82) #20, !dbg !14246
  %97 = load i32, i32* %87, align 4, !dbg !14247
  %98 = add i32 %97, %82, !dbg !14247
  store i32 %98, i32* %87, align 4, !dbg !14247
  br label %99, !dbg !14248

99:                                               ; preds = %91, %94, %81
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %9, metadata !14140, metadata !DIExpression(DW_OP_deref)), !dbg !14196
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %9) #22, !dbg !14249
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #19, !dbg !14250
  br label %101

100:                                              ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #19, !dbg !14250
  br label %101

101:                                              ; preds = %99, %8, %14, %28, %47, %100
  ret void, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_current_time_in_ms() unnamed_addr #0 !dbg !14252 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !14258
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !14258
  call void @llvm.dbg.value(metadata i32 0, metadata !14256, metadata !DIExpression()), !dbg !14259
  store i32 0, i32* %1, align 4, !dbg !14260
  call void @llvm.dbg.value(metadata i64 0, metadata !14257, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.value(metadata i32* %1, metadata !14256, metadata !DIExpression(DW_OP_deref)), !dbg !14259
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #20, !dbg !14261
  %4 = load i32, i32* %1, align 4, !dbg !14262
  call void @llvm.dbg.value(metadata i32 %4, metadata !14256, metadata !DIExpression()), !dbg !14259
  %5 = zext i32 %4 to i64, !dbg !14263
  %6 = mul nuw nsw i64 %5, 1000, !dbg !14264
  %7 = lshr i64 %6, 15, !dbg !14265
  call void @llvm.dbg.value(metadata i64 %7, metadata !14257, metadata !DIExpression()), !dbg !14259
  %8 = trunc i64 %7 to i32, !dbg !14266
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !14267
  ret i32 %8, !dbg !14268
}

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hex_dump_data(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !14269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14273, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.value(metadata i32 %1, metadata !14274, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.value(metadata i32 0, metadata !14275, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.value(metadata i32 0, metadata !14275, metadata !DIExpression()), !dbg !14276
  %3 = icmp sgt i32 %1, 0, !dbg !14277
  br i1 %3, label %4, label %25, !dbg !14280

4:                                                ; preds = %2, %18
  %5 = phi i32 [ %10, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !14275, metadata !DIExpression()), !dbg !14276
  %6 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !14281
  %7 = load i8, i8* %6, align 1, !dbg !14281
  %8 = zext i8 %7 to i32, !dbg !14283
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.245, i32 0, i32 0), i32 noundef %8) #20, !dbg !14284
  %10 = add nuw nsw i32 %5, 1, !dbg !14285
  %11 = and i32 %10, 15, !dbg !14287
  %12 = icmp eq i32 %11, 0, !dbg !14288
  br i1 %12, label %15, label %13, !dbg !14289

13:                                               ; preds = %4
  %14 = icmp eq i32 %10, %1, !dbg !14290
  br i1 %14, label %18, label %15, !dbg !14292

15:                                               ; preds = %13, %4
  %16 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.244, i32 0, i32 0), %4 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.246, i32 0, i32 0), %13 ]
  %17 = tail call i32 (i8*, ...) @printf(i8* noundef %16) #20, !dbg !14293
  br label %18, !dbg !14277

18:                                               ; preds = %15, %13
  call void @llvm.dbg.value(metadata i32 %10, metadata !14275, metadata !DIExpression()), !dbg !14276
  %19 = icmp eq i32 %10, %1, !dbg !14277
  br i1 %19, label %20, label %4, !dbg !14280, !llvm.loop !14294

20:                                               ; preds = %18
  %21 = and i32 %1, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !dbg !14296

23:                                               ; preds = %20
  %24 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.244, i32 0, i32 0)) #20, !dbg !14298
  br label %25, !dbg !14300

25:                                               ; preds = %2, %23, %20
  ret void, !dbg !14301
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.syslog_buffer_t* @buffer_pool_alloc() local_unnamed_addr #0 !dbg !14302 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !14308, !srcloc !14170
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14308
  call void @llvm.dbg.value(metadata i32 %2, metadata !14167, metadata !DIExpression()) #19, !dbg !14310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()) #19, !dbg !14310
  call void @llvm.dbg.value(metadata i32 %2, metadata !14306, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i32 0, metadata !14307, metadata !DIExpression()), !dbg !14311
  br label %6, !dbg !14312

3:                                                ; preds = %6
  %4 = add nuw nsw i32 %7, 1, !dbg !14314
  call void @llvm.dbg.value(metadata i32 %4, metadata !14307, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i32 %7, metadata !14307, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14311
  %5 = icmp eq i32 %4, 16, !dbg !14316
  br i1 %5, label %14, label %6, !dbg !14312, !llvm.loop !14317

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %0 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14307, metadata !DIExpression()), !dbg !14311
  %8 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %7, !dbg !14319
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !14322
  %10 = load i32, i32* %9, align 4, !dbg !14322
  %11 = icmp eq i32 %10, 0, !dbg !14319
  call void @llvm.dbg.value(metadata i32 %7, metadata !14307, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14311
  br i1 %11, label %12, label %3, !dbg !14323

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !14322
  store i32 1, i32* %13, align 4, !dbg !14324
  call void @llvm.dbg.value(metadata i32 %2, metadata !14186, metadata !DIExpression()) #19, !dbg !14326
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #19, !dbg !14328, !srcloc !14192
  br label %17, !dbg !14329

14:                                               ; preds = %3
  %15 = load i32, i32* @syslog_drop_count, align 4, !dbg !14330
  %16 = add i32 %15, 1, !dbg !14330
  store i32 %16, i32* @syslog_drop_count, align 4, !dbg !14330
  call void @llvm.dbg.value(metadata i32 %2, metadata !14186, metadata !DIExpression()) #19, !dbg !14331
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #19, !dbg !14333, !srcloc !14192
  br label %17, !dbg !14334

17:                                               ; preds = %14, %12
  %18 = phi %struct.syslog_buffer_t* [ %8, %12 ], [ null, %14 ], !dbg !14311
  ret %struct.syslog_buffer_t* %18, !dbg !14335
}

; Function Attrs: optsize
declare dso_local i32 @vsnprintf(i8* noundef, i32 noundef, i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_send(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !14336 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !14341, metadata !DIExpression()), !dbg !14345
  %3 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !14346
  %4 = and i32 %3, 255, !dbg !14347
  %5 = icmp eq i32 %4, 0, !dbg !14347
  br i1 %5, label %19, label %6, !dbg !14348

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !14349
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14349
  call void @llvm.dbg.value(metadata i32 0, metadata !14342, metadata !DIExpression()), !dbg !14350
  store i32 0, i32* %2, align 4, !dbg !14351
  %8 = load i8*, i8** @g_log_queue, align 4, !dbg !14352
  %9 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !14352
  call void @llvm.dbg.value(metadata i32* %2, metadata !14342, metadata !DIExpression(DW_OP_deref)), !dbg !14350
  %10 = call i32 @xQueueGenericSendFromISR(i8* noundef %8, i8* noundef %9, i32* noundef nonnull %2, i32 noundef 0) #20, !dbg !14352
  %11 = icmp eq i32 %10, 0, !dbg !14354
  br i1 %11, label %12, label %14, !dbg !14355

12:                                               ; preds = %6
  %13 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %0, align 4, !dbg !14356
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %13) #22, !dbg !14358
  br label %18, !dbg !14359

14:                                               ; preds = %6
  %15 = load i32, i32* %2, align 4, !dbg !14360
  call void @llvm.dbg.value(metadata i32 %15, metadata !14342, metadata !DIExpression()), !dbg !14350
  %16 = icmp eq i32 %15, 0, !dbg !14360
  br i1 %16, label %18, label %17, !dbg !14363

17:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !14364
  call void asm sideeffect "dsb", ""() #19, !dbg !14364, !srcloc !14366
  call void asm sideeffect "isb", ""() #19, !dbg !14364, !srcloc !14367
  br label %18, !dbg !14364

18:                                               ; preds = %14, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14368
  br label %23, !dbg !14369

19:                                               ; preds = %1
  %20 = load i8*, i8** @g_log_queue, align 4, !dbg !14370
  %21 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !14370
  %22 = tail call i32 @xQueueGenericSend(i8* noundef %20, i8* noundef %21, i32 noundef -1, i32 noundef 0) #20, !dbg !14370
  br label %23

23:                                               ; preds = %19, %18
  ret void, !dbg !14372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_release(%struct.syslog_buffer_t* nocapture noundef %0) local_unnamed_addr #0 !dbg !14373 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !14377, metadata !DIExpression()), !dbg !14380
  %2 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 0, !dbg !14381
  call void @llvm.dbg.value(metadata i8* %2, metadata !14379, metadata !DIExpression()), !dbg !14380
  %3 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !14382, !srcloc !14170
  call void @llvm.dbg.value(metadata i32 undef, metadata !14167, metadata !DIExpression()) #19, !dbg !14384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()) #19, !dbg !14384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14378, metadata !DIExpression()), !dbg !14380
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !14385
  store i32 0, i32* %4, align 4, !dbg !14386
  %5 = bitcast i8* %2 to i32*, !dbg !14387
  %6 = load i32, i32* %5, align 4, !dbg !14387
  %7 = icmp eq i32 %6, 1, !dbg !14389
  br i1 %7, label %8, label %14, !dbg !14390

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !14379, metadata !DIExpression()), !dbg !14380
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 288, !dbg !14391
  %10 = bitcast i8* %9 to i8**, !dbg !14391
  %11 = load i8*, i8** %10, align 4, !dbg !14391
  %12 = icmp eq i8* %11, null, !dbg !14392
  br i1 %12, label %14, label %13, !dbg !14393

13:                                               ; preds = %8
  tail call void @vPortFree(i8* noundef nonnull %11) #20, !dbg !14394
  br label %14, !dbg !14396

14:                                               ; preds = %13, %8, %1
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14382
  call void @llvm.dbg.value(metadata i32 %15, metadata !14167, metadata !DIExpression()) #19, !dbg !14384
  call void @llvm.dbg.value(metadata i32 %15, metadata !14378, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #19, !dbg !14397
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %15) #19, !dbg !14399, !srcloc !14192
  ret void, !dbg !14400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprint_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %5) local_unnamed_addr #0 !dbg !14401 {
  %7 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14410, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i8* %0, metadata !14405, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i8* %1, metadata !14406, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i32 %2, metadata !14407, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i32 %3, metadata !14408, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i8* %4, metadata !14409, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i8* %0, metadata !14411, metadata !DIExpression()), !dbg !14424
  %8 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !14425
  %9 = bitcast i8* %8 to i32*, !dbg !14425
  %10 = load i32, i32* %9, align 4, !dbg !14425
  %11 = icmp eq i32 %10, 0, !dbg !14426
  br i1 %11, label %12, label %71, !dbg !14427

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !14428
  %14 = bitcast i8* %13 to i32*, !dbg !14428
  %15 = load i32, i32* %14, align 4, !dbg !14428
  %16 = icmp ugt i32 %15, %3, !dbg !14429
  br i1 %16, label %71, label %17, !dbg !14430

17:                                               ; preds = %12
  %18 = load i1, i1* @syslog_task_ready, align 4, !dbg !14431
  br i1 %18, label %19, label %26, !dbg !14432

19:                                               ; preds = %17
  %20 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !14433
  %21 = icmp eq i32 %20, 0, !dbg !14434
  br i1 %21, label %22, label %48, !dbg !14435

22:                                               ; preds = %19
  %23 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !14436
  %24 = and i32 %23, 255, !dbg !14437
  %25 = icmp eq i32 %24, 0, !dbg !14438
  br i1 %25, label %26, label %48, !dbg !14439

26:                                               ; preds = %22, %17
  %27 = load i32, i32* @syslog_init_done, align 4, !dbg !14440
  %28 = icmp eq i32 %27, 0, !dbg !14441
  br i1 %28, label %71, label %29, !dbg !14442

29:                                               ; preds = %26
  %30 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !14443, !srcloc !14170
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !14443
  call void @llvm.dbg.value(metadata i32 %31, metadata !14167, metadata !DIExpression()) #19, !dbg !14445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()) #19, !dbg !14445
  call void @llvm.dbg.value(metadata i32 %31, metadata !14412, metadata !DIExpression()), !dbg !14446
  %32 = load i32, i32* @syslog_init_done, align 4, !dbg !14447
  %33 = icmp ugt i32 %32, 1, !dbg !14449
  br i1 %33, label %34, label %45, !dbg !14450

34:                                               ; preds = %29
  %35 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !14451
  %36 = bitcast i8* %0 to i8**, !dbg !14453
  %37 = load i8*, i8** %36, align 4, !dbg !14453
  %38 = icmp ult i32 %3, 4, !dbg !14454
  br i1 %38, label %39, label %42, !dbg !14454

39:                                               ; preds = %34
  %40 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !14454
  %41 = load i8*, i8** %40, align 4, !dbg !14454
  br label %42, !dbg !14454

42:                                               ; preds = %34, %39
  %43 = phi i8* [ %41, %39 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.242, i32 0, i32 0), %34 ], !dbg !14454
  %44 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.243, i32 0, i32 0), i32 noundef %35, i8* noundef %37, i8* noundef %43, i8* noundef %1, i32 noundef %2) #20, !dbg !14455
  br label %45, !dbg !14456

45:                                               ; preds = %42, %29
  %46 = tail call i32 @vprintf(i8* noundef %4, [1 x i32] %5) #20, !dbg !14457
  %47 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.244, i32 0, i32 0)) #20, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %31, metadata !14186, metadata !DIExpression()) #19, !dbg !14459
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %31) #19, !dbg !14461, !srcloc !14192
  br label %71, !dbg !14462

48:                                               ; preds = %22, %19
  %49 = bitcast %struct.syslog_buffer_t** %7 to i8*, !dbg !14463
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #19, !dbg !14463
  %50 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #22, !dbg !14464
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %50, metadata !14419, metadata !DIExpression()), !dbg !14465
  store %struct.syslog_buffer_t* %50, %struct.syslog_buffer_t** %7, align 4, !dbg !14466
  %51 = icmp eq %struct.syslog_buffer_t* %50, null, !dbg !14467
  br i1 %51, label %70, label %52, !dbg !14469

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 0, !dbg !14470
  call void @llvm.dbg.value(metadata i8* %53, metadata !14421, metadata !DIExpression()), !dbg !14465
  %54 = bitcast i8* %53 to i32*, !dbg !14471
  store i32 0, i32* %54, align 4, !dbg !14472
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 4, !dbg !14473
  call void @llvm.dbg.value(metadata i8* %55, metadata !14422, metadata !DIExpression()), !dbg !14465
  %56 = bitcast i8* %0 to i8**, !dbg !14474
  %57 = load i8*, i8** %56, align 4, !dbg !14474
  %58 = bitcast i8* %55 to i8**, !dbg !14475
  store i8* %57, i8** %58, align 4, !dbg !14476
  %59 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 8, !dbg !14477
  %60 = bitcast i8* %59 to i32*, !dbg !14477
  store i32 %3, i32* %60, align 4, !dbg !14478
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 12, !dbg !14479
  %62 = bitcast i8* %61 to i8**, !dbg !14479
  store i8* %1, i8** %62, align 4, !dbg !14480
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 16, !dbg !14481
  %64 = bitcast i8* %63 to i32*, !dbg !14481
  store i32 %2, i32* %64, align 4, !dbg !14482
  %65 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !14483
  %66 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 20, !dbg !14484
  %67 = bitcast i8* %66 to i32*, !dbg !14484
  store i32 %65, i32* %67, align 4, !dbg !14485
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 24, !dbg !14486
  %69 = tail call i32 @vsnprintf(i8* noundef nonnull %68, i32 noundef 256, i8* noundef %4, [1 x i32] %5) #20, !dbg !14487
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %7, metadata !14419, metadata !DIExpression(DW_OP_deref)), !dbg !14465
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %7) #22, !dbg !14488
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #19, !dbg !14489
  br label %71

70:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #19, !dbg !14489
  br label %71

71:                                               ; preds = %52, %6, %12, %26, %45, %70
  ret void, !dbg !14490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_uart_init(i32 noundef %0) local_unnamed_addr #0 !dbg !14491 {
  %2 = alloca %struct.hal_uart_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14493, metadata !DIExpression()), !dbg !14503
  %3 = bitcast %struct.hal_uart_config_t* %2 to i8*, !dbg !14504
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #19, !dbg !14504
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %2, metadata !14494, metadata !DIExpression()), !dbg !14505
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 0, !dbg !14506
  store i32 9, i32* %4, align 4, !dbg !14507
  %5 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 3, !dbg !14508
  store i32 0, i32* %5, align 4, !dbg !14509
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 2, !dbg !14510
  store i32 0, i32* %6, align 4, !dbg !14511
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 1, !dbg !14512
  store i32 3, i32* %7, align 4, !dbg !14513
  store i32 %0, i32* @g_log_uart_port, align 4, !dbg !14514
  %8 = call i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %2) #20, !dbg !14515
  call void @llvm.dbg.value(metadata i32 %8, metadata !14502, metadata !DIExpression()), !dbg !14503
  %9 = load i32, i32* @syslog_init_done, align 4, !dbg !14516
  %10 = or i32 %9, 1, !dbg !14516
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !14516
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #19, !dbg !14517
  ret i32 %8, !dbg !14518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_putchar(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !14519 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14523, metadata !DIExpression()), !dbg !14524
  %2 = load i32, i32* @g_log_uart_port, align 4, !dbg !14525
  tail call void @hal_uart_put_char(i32 noundef %2, i8 noundef zeroext %0) #20, !dbg !14526
  ret void, !dbg !14527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_init() local_unnamed_addr #0 !dbg !14528 {
  %1 = tail call i8* @memset(i8* noundef bitcast ([16 x %struct.syslog_buffer_t]* @syslog_buffer_pool to i8*), i32 noundef 0, i32 noundef 4736) #20, !dbg !14529
  ret void, !dbg !14530
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_create() local_unnamed_addr #0 !dbg !14531 {
  %1 = tail call i8* @xQueueGenericCreate(i32 noundef 8, i32 noundef 4, i8 noundef zeroext 0) #20, !dbg !14532
  store i8* %1, i8** @g_log_queue, align 4, !dbg !14533
  %2 = icmp eq i8* %1, null, !dbg !14534
  br i1 %2, label %3, label %5, !dbg !14536

3:                                                ; preds = %0
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.252, i32 0, i32 0)) #20, !dbg !14537
  br label %5, !dbg !14539

5:                                                ; preds = %3, %0
  ret void, !dbg !14540
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_queue_receive(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !14541 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !14545, metadata !DIExpression()), !dbg !14547
  %2 = load i8*, i8** @g_log_queue, align 4, !dbg !14548
  %3 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !14548
  %4 = tail call i32 @xQueueGenericReceive(i8* noundef %2, i8* noundef %3, i32 noundef -1, i32 noundef 0) #20, !dbg !14548
  call void @llvm.dbg.value(metadata i32 %4, metadata !14546, metadata !DIExpression()), !dbg !14547
  %5 = icmp ne i32 %4, 1, !dbg !14549
  %6 = sext i1 %5 to i32, !dbg !14550
  ret i32 %6, !dbg !14551
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_normal_log(%struct.normal_log_message_t* noundef %0) local_unnamed_addr #0 !dbg !14552 {
  call void @llvm.dbg.value(metadata %struct.normal_log_message_t* %0, metadata !14558, metadata !DIExpression()), !dbg !14559
  %2 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 4, !dbg !14560
  %3 = load i32, i32* %2, align 4, !dbg !14560
  %4 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 0, !dbg !14561
  %5 = load i8*, i8** %4, align 4, !dbg !14561
  %6 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 1, !dbg !14562
  %7 = load i32, i32* %6, align 4, !dbg !14562
  %8 = icmp ult i32 %7, 4, !dbg !14562
  br i1 %8, label %9, label %12, !dbg !14562

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !14562
  %11 = load i8*, i8** %10, align 4, !dbg !14562
  br label %12, !dbg !14562

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.242, i32 0, i32 0), %1 ], !dbg !14562
  %14 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 2, !dbg !14563
  %15 = load i8*, i8** %14, align 4, !dbg !14563
  %16 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 3, !dbg !14564
  %17 = load i32, i32* %16, align 4, !dbg !14564
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.243, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #20, !dbg !14565
  %19 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 5, i32 0, !dbg !14566
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.253, i32 0, i32 0), i8* noundef nonnull %19) #20, !dbg !14567
  ret void, !dbg !14568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_hex_dump(%struct.hex_dump_message_t* noundef %0) local_unnamed_addr #0 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct.hex_dump_message_t* %0, metadata !14575, metadata !DIExpression()), !dbg !14576
  %2 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 4, !dbg !14577
  %3 = load i32, i32* %2, align 4, !dbg !14577
  %4 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 0, !dbg !14578
  %5 = load i8*, i8** %4, align 4, !dbg !14578
  %6 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 1, !dbg !14579
  %7 = load i32, i32* %6, align 4, !dbg !14579
  %8 = icmp ult i32 %7, 4, !dbg !14579
  br i1 %8, label %9, label %12, !dbg !14579

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !14579
  %11 = load i8*, i8** %10, align 4, !dbg !14579
  br label %12, !dbg !14579

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.242, i32 0, i32 0), %1 ], !dbg !14579
  %14 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 2, !dbg !14580
  %15 = load i8*, i8** %14, align 4, !dbg !14580
  %16 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 3, !dbg !14581
  %17 = load i32, i32* %16, align 4, !dbg !14581
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.243, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #20, !dbg !14582
  %19 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 5, i32 0, !dbg !14583
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.253, i32 0, i32 0), i8* noundef nonnull %19) #20, !dbg !14584
  %21 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 6, !dbg !14585
  %22 = load i32, i32* %21, align 4, !dbg !14585
  %23 = icmp ugt i32 %22, 128, !dbg !14587
  %24 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 7, i32 0, !dbg !14588
  br i1 %23, label %25, label %30, !dbg !14589

25:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef 128) #22, !dbg !14590
  %26 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 8, !dbg !14592
  %27 = load i8*, i8** %26, align 4, !dbg !14592
  %28 = load i32, i32* %21, align 4, !dbg !14593
  %29 = add i32 %28, -128, !dbg !14594
  tail call void @hex_dump_data(i8* noundef %27, i32 noundef %29) #22, !dbg !14595
  br label %31, !dbg !14596

30:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef %22) #22, !dbg !14597
  br label %31

31:                                               ; preds = %30, %25
  ret void, !dbg !14599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @process_log_message(%struct.log_message_t* noundef %0) local_unnamed_addr #0 !dbg !14600 {
  call void @llvm.dbg.value(metadata %struct.log_message_t* %0, metadata !14606, metadata !DIExpression()), !dbg !14610
  %2 = load i32, i32* @syslog_drop_count, align 4, !dbg !14611
  %3 = icmp eq i32 %2, 0, !dbg !14611
  br i1 %3, label %9, label %4, !dbg !14612

4:                                                ; preds = %1
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !14613, !srcloc !14170
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %6, metadata !14167, metadata !DIExpression()) #19, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()) #19, !dbg !14615
  call void @llvm.dbg.value(metadata i32 %6, metadata !14607, metadata !DIExpression()), !dbg !14616
  %7 = load i32, i32* @syslog_drop_count, align 4, !dbg !14617
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.254, i32 0, i32 0), i32 noundef %7) #20, !dbg !14618
  store i32 0, i32* @syslog_drop_count, align 4, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %6, metadata !14186, metadata !DIExpression()) #19, !dbg !14620
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #19, !dbg !14622, !srcloc !14192
  br label %9, !dbg !14623

9:                                                ; preds = %4, %1
  %10 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 0, !dbg !14624
  %11 = load i32, i32* %10, align 4, !dbg !14624
  %12 = icmp eq i32 %11, 0, !dbg !14626
  br i1 %12, label %13, label %16, !dbg !14627

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, !dbg !14628
  %15 = bitcast %union.anon.18* %14 to %struct.normal_log_message_t*, !dbg !14630
  tail call void @print_normal_log(%struct.normal_log_message_t* noundef nonnull %15) #22, !dbg !14631
  br label %18, !dbg !14632

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, i32 0, !dbg !14633
  tail call void @print_hex_dump(%struct.hex_dump_message_t* noundef nonnull %17) #22, !dbg !14635
  br label %18

18:                                               ; preds = %16, %13
  ret void, !dbg !14636
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @syslog_task_entry(i8* nocapture readnone %0) #12 !dbg !14637 {
  %2 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i8* undef, metadata !14639, metadata !DIExpression()), !dbg !14644
  store i1 true, i1* @syslog_task_ready, align 4, !dbg !14645
  tail call void @vTaskPrioritySet(i8* noundef null, i32 noundef 1) #20, !dbg !14646
  %3 = bitcast %struct.syslog_buffer_t** %2 to i8*
  br label %4, !dbg !14647

4:                                                ; preds = %12, %1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !14648
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !14640, metadata !DIExpression()), !dbg !14649
  store %struct.syslog_buffer_t* null, %struct.syslog_buffer_t** %2, align 4, !dbg !14650
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %2, metadata !14640, metadata !DIExpression(DW_OP_deref)), !dbg !14649
  %5 = call i32 @log_queue_receive(%struct.syslog_buffer_t** noundef nonnull %2) #22, !dbg !14651
  %6 = icmp eq i32 %5, 0, !dbg !14653
  br i1 %6, label %7, label %12, !dbg !14654

7:                                                ; preds = %4
  %8 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !14655
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %8, metadata !14640, metadata !DIExpression()), !dbg !14649
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 1, i32 0, !dbg !14657
  %10 = bitcast i8* %9 to %struct.log_message_t*, !dbg !14658
  call void @process_log_message(%struct.log_message_t* noundef nonnull %10) #22, !dbg !14659
  %11 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !14660
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !14640, metadata !DIExpression()), !dbg !14649
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %11) #22, !dbg !14661
  br label %12, !dbg !14662

12:                                               ; preds = %7, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !14663
  br label %4, !dbg !14664, !llvm.loop !14665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_init(void (%struct.syslog_config_s*)* noundef %0, i32 (%struct.syslog_config_s*)* noundef readonly %1, %struct.log_control_block_t** noundef %2) local_unnamed_addr #0 !dbg !14668 {
  %4 = alloca %struct.exception_config_type, align 4
  call void @llvm.dbg.value(metadata void (%struct.syslog_config_s*)* %0, metadata !14677, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i32 (%struct.syslog_config_s*)* %1, metadata !14678, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %2, metadata !14679, metadata !DIExpression()), !dbg !14686
  %5 = bitcast %struct.exception_config_type* %4 to i8*, !dbg !14687
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19, !dbg !14687
  call void @llvm.dbg.declare(metadata %struct.exception_config_type* %4, metadata !14680, metadata !DIExpression()), !dbg !14688
  %6 = load i32, i32* @syslog_init_done, align 4, !dbg !14689
  %7 = and i32 %6, 2, !dbg !14691
  %8 = icmp eq i32 %7, 0, !dbg !14691
  br i1 %8, label %9, label %31, !dbg !14692

9:                                                ; preds = %3
  %10 = or i32 %6, 1, !dbg !14693
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !14693
  tail call void @buffer_pool_init() #22, !dbg !14694
  tail call void @log_queue_create() #22, !dbg !14695
  store i1 false, i1* @syslog_task_ready, align 4, !dbg !14696
  %11 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 0, !dbg !14697
  store void ()* @syslog_exception_cb, void ()** %11, align 4, !dbg !14698
  %12 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 1, !dbg !14699
  store void ()* null, void ()** %12, align 4, !dbg !14700
  %13 = call zeroext i1 @exception_register_callbacks(%struct.exception_config_type* noundef nonnull %4) #20, !dbg !14701
  %14 = call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @syslog_task_entry, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.255, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef null, i32 noundef 8, i8** noundef nonnull @syslog_task_handle, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #20, !dbg !14702
  %15 = icmp eq i32 %14, 1, !dbg !14704
  br i1 %15, label %18, label %16, !dbg !14705

16:                                               ; preds = %9
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.256, i32 0, i32 0)) #20, !dbg !14706
  br label %18, !dbg !14708

18:                                               ; preds = %16, %9
  %19 = call fastcc i32 @get_current_time_in_ms() #22, !dbg !14709
  %20 = load i32, i32* @syslog_init_done, align 4, !dbg !14710
  %21 = or i32 %20, 2, !dbg !14710
  store i32 %21, i32* @syslog_init_done, align 4, !dbg !14710
  store void (%struct.syslog_config_s*)* %0, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !14711
  store %struct.log_control_block_t** %2, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14712
  %22 = icmp eq i32 (%struct.syslog_config_s*)* %1, null, !dbg !14713
  br i1 %22, label %28, label %23, !dbg !14715

23:                                               ; preds = %18
  %24 = call i32 %1(%struct.syslog_config_s* noundef nonnull @syslog_config) #20, !dbg !14716
  %25 = icmp eq i32 %24, 0, !dbg !14719
  br i1 %25, label %28, label %26, !dbg !14720

26:                                               ; preds = %23
  %27 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !14721
  call void (i8*, i8*, i32, i32, i8*, ...) %27(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.log_init, i32 0, i32 0), i32 noundef 1040, i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.257, i32 0, i32 0)) #20, !dbg !14721
  br label %28, !dbg !14724

28:                                               ; preds = %23, %26, %18
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !14725
  %30 = or i32 %29, 4, !dbg !14725
  store i32 %30, i32* @syslog_init_done, align 4, !dbg !14725
  br label %31, !dbg !14726

31:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19, !dbg !14726
  ret void, !dbg !14726
}

; Function Attrs: noinline nounwind optsize
define internal void @syslog_exception_cb() #0 !dbg !14727 {
  tail call fastcc void @syslog_buffer_dump() #22, !dbg !14728
  ret void, !dbg !14729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @syslog_buffer_dump() unnamed_addr #0 !dbg !14730 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !14733, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata i32 0, metadata !14732, metadata !DIExpression()), !dbg !14735
  br label %1, !dbg !14736

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 0, %0 ], [ %12, %10 ]
  %3 = phi %struct.syslog_buffer_t* [ null, %0 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !14732, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %3, metadata !14733, metadata !DIExpression()), !dbg !14735
  %4 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %2, !dbg !14738
  %5 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %4, i32 0, i32 0, !dbg !14742
  %6 = load i32, i32* %5, align 4, !dbg !14742
  %7 = icmp eq i32 %6, 0, !dbg !14738
  br i1 %7, label %10, label %8, !dbg !14743

8:                                                ; preds = %1
  %9 = ptrtoint %struct.syslog_buffer_t* %3 to i32, !dbg !14744
  store i32 %9, i32* %5, align 4, !dbg !14746
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %4, metadata !14733, metadata !DIExpression()), !dbg !14735
  br label %10, !dbg !14747

10:                                               ; preds = %1, %8
  %11 = phi %struct.syslog_buffer_t* [ %4, %8 ], [ %3, %1 ], !dbg !14735
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !14733, metadata !DIExpression()), !dbg !14735
  %12 = add nuw nsw i32 %2, 1, !dbg !14748
  call void @llvm.dbg.value(metadata i32 %12, metadata !14732, metadata !DIExpression()), !dbg !14735
  %13 = icmp eq i32 %12, 16, !dbg !14749
  br i1 %13, label %14, label %1, !dbg !14736, !llvm.loop !14750

14:                                               ; preds = %10
  %15 = tail call fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %11) #22, !dbg !14752
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !14733, metadata !DIExpression()), !dbg !14735
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.258, i32 0, i32 0)) #20, !dbg !14753
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !14733, metadata !DIExpression()), !dbg !14735
  %17 = icmp eq %struct.syslog_buffer_t* %15, null, !dbg !14754
  br i1 %17, label %26, label %18, !dbg !14754

18:                                               ; preds = %14, %18
  %19 = phi %struct.syslog_buffer_t* [ %22, %18 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !14733, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !14734, metadata !DIExpression()), !dbg !14735
  %20 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 0, !dbg !14755
  %21 = load i32, i32* %20, align 4, !dbg !14755
  %22 = inttoptr i32 %21 to %struct.syslog_buffer_t*, !dbg !14757
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %22, metadata !14733, metadata !DIExpression()), !dbg !14735
  store i32 1, i32* %20, align 4, !dbg !14758
  %23 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 1, i32 0, !dbg !14759
  %24 = bitcast i8* %23 to %struct.log_message_t*, !dbg !14760
  tail call void @process_log_message(%struct.log_message_t* noundef nonnull %24) #22, !dbg !14761
  %25 = icmp eq i32 %21, 0, !dbg !14754
  br i1 %25, label %26, label %18, !dbg !14754, !llvm.loop !14762

26:                                               ; preds = %18, %14
  ret void, !dbg !14764
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %0) unnamed_addr #15 !dbg !14765 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !14769, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !14770, metadata !DIExpression()), !dbg !14773
  %2 = icmp eq %struct.syslog_buffer_t* %0, null, !dbg !14774
  br i1 %2, label %44, label %3, !dbg !14776

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !14777
  %5 = load i32, i32* %4, align 4, !dbg !14777
  %6 = icmp eq i32 %5, 0, !dbg !14778
  br i1 %6, label %44, label %7, !dbg !14779

7:                                                ; preds = %3, %41
  %8 = phi i32 [ %43, %41 ], [ %5, %3 ], !dbg !14780
  %9 = phi %struct.syslog_buffer_t* [ %38, %41 ], [ null, %3 ]
  %10 = phi %struct.syslog_buffer_t* [ %12, %41 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %9, metadata !14770, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !14769, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !14771, metadata !DIExpression()), !dbg !14773
  %11 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 0, !dbg !14780
  %12 = inttoptr i32 %8 to %struct.syslog_buffer_t*, !dbg !14782
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !14769, metadata !DIExpression()), !dbg !14773
  %13 = icmp eq %struct.syslog_buffer_t* %9, null, !dbg !14783
  br i1 %13, label %35, label %14, !dbg !14785

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 1, i32 20, !dbg !14786
  %16 = bitcast i8* %15 to i32*, !dbg !14786
  %17 = load i32, i32* %16, align 4, !dbg !14786
  %18 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %9, i32 0, i32 1, i32 20, !dbg !14787
  %19 = bitcast i8* %18 to i32*, !dbg !14787
  %20 = load i32, i32* %19, align 4, !dbg !14787
  %21 = icmp ult i32 %17, %20, !dbg !14788
  br i1 %21, label %35, label %22, !dbg !14789

22:                                               ; preds = %14, %27
  %23 = phi %struct.syslog_buffer_t* [ %28, %27 ], [ %9, %14 ], !dbg !14790
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %23, metadata !14772, metadata !DIExpression()), !dbg !14773
  %24 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !14792
  %25 = load i32, i32* %24, align 4, !dbg !14792
  %26 = icmp eq i32 %25, 0, !dbg !14795
  br i1 %26, label %33, label %27, !dbg !14796

27:                                               ; preds = %22
  %28 = inttoptr i32 %25 to %struct.syslog_buffer_t*, !dbg !14797
  %29 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %28, i32 0, i32 1, i32 20, !dbg !14797
  %30 = bitcast i8* %29 to i32*, !dbg !14797
  %31 = load i32, i32* %30, align 4, !dbg !14797
  %32 = icmp ult i32 %17, %31, !dbg !14798
  br i1 %32, label %33, label %22, !dbg !14799, !llvm.loop !14800

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !14792
  store i32 %25, i32* %11, align 4, !dbg !14803
  br label %35, !dbg !14805

35:                                               ; preds = %7, %14, %33
  %36 = phi %struct.syslog_buffer_t* [ %10, %33 ], [ %9, %14 ], [ %9, %7 ]
  %37 = phi i32* [ %34, %33 ], [ %11, %14 ], [ %11, %7 ]
  %38 = phi %struct.syslog_buffer_t* [ %9, %33 ], [ %10, %14 ], [ %10, %7 ], !dbg !14773
  %39 = ptrtoint %struct.syslog_buffer_t* %36 to i32, !dbg !14806
  store i32 %39, i32* %37, align 4, !dbg !14806
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %38, metadata !14770, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !14769, metadata !DIExpression()), !dbg !14773
  %40 = icmp eq i32 %8, 0, !dbg !14807
  br i1 %40, label %44, label %41, !dbg !14808, !llvm.loop !14809

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %12, i32 0, i32 0
  %43 = load i32, i32* %42, align 4, !dbg !14780
  br label %7, !dbg !14808

44:                                               ; preds = %35, %1, %3
  %45 = phi %struct.syslog_buffer_t* [ %0, %3 ], [ null, %1 ], [ %38, %35 ], !dbg !14773
  ret %struct.syslog_buffer_t* %45, !dbg !14811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @syslog_get_config(%struct.syslog_config_s* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !14812 {
  call void @llvm.dbg.value(metadata %struct.syslog_config_s* %0, metadata !14816, metadata !DIExpression()), !dbg !14817
  %2 = bitcast %struct.syslog_config_s* %0 to i64*, !dbg !14818
  %3 = load i64, i64* bitcast (%struct.syslog_config_s* @syslog_config to i64*), align 8, !dbg !14818
  store i64 %3, i64* %2, align 4, !dbg !14818
  ret void, !dbg !14819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_set_filter(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !14820 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14824, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata i8* %1, metadata !14825, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata i8* %2, metadata !14826, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata i32 %3, metadata !14827, metadata !DIExpression()), !dbg !14831
  %5 = tail call i32 @str_to_log_switch(i8* noundef %1) #22, !dbg !14832
  call void @llvm.dbg.value(metadata i32 %5, metadata !14829, metadata !DIExpression()), !dbg !14831
  %6 = icmp slt i32 %5, 0, !dbg !14833
  br i1 %6, label %47, label %7, !dbg !14835

7:                                                ; preds = %4
  %8 = tail call i32 @str_to_print_level(i8* noundef %2) #22, !dbg !14836
  call void @llvm.dbg.value(metadata i32 %8, metadata !14830, metadata !DIExpression()), !dbg !14831
  %9 = icmp slt i32 %8, 0, !dbg !14837
  br i1 %9, label %47, label %10, !dbg !14839

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.259, i32 0, i32 0)) #20, !dbg !14840
  %12 = icmp eq i32 %11, 0, !dbg !14842
  %13 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14843
  br i1 %12, label %14, label %31, !dbg !14844

14:                                               ; preds = %10
  %15 = icmp eq %struct.log_control_block_t** %13, null, !dbg !14845
  br i1 %15, label %47, label %16, !dbg !14848

16:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 0, metadata !14828, metadata !DIExpression()), !dbg !14831
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %13, align 4, !dbg !14849
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !14850
  br i1 %18, label %43, label %19, !dbg !14850

19:                                               ; preds = %16, %19
  %20 = phi %struct.log_control_block_t* [ %29, %19 ], [ %17, %16 ]
  %21 = phi i32 [ %27, %19 ], [ 0, %16 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !14828, metadata !DIExpression()), !dbg !14831
  %22 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %20, i32 0, i32 1, !dbg !14851
  store i32 %5, i32* %22, align 4, !dbg !14853
  %23 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14854
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %21, !dbg !14855
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !14855
  %26 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %25, i32 0, i32 2, !dbg !14856
  store i32 %8, i32* %26, align 4, !dbg !14857
  %27 = add nuw nsw i32 %21, 1, !dbg !14858
  call void @llvm.dbg.value(metadata i32 %27, metadata !14828, metadata !DIExpression()), !dbg !14831
  %28 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %27, !dbg !14849
  %29 = load %struct.log_control_block_t*, %struct.log_control_block_t** %28, align 4, !dbg !14849
  %30 = icmp eq %struct.log_control_block_t* %29, null, !dbg !14850
  br i1 %30, label %43, label %19, !dbg !14850, !llvm.loop !14859

31:                                               ; preds = %10
  %32 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %13, i8* noundef %0) #22, !dbg !14861
  call void @llvm.dbg.value(metadata i32 %32, metadata !14828, metadata !DIExpression()), !dbg !14831
  %33 = icmp slt i32 %32, 0, !dbg !14863
  br i1 %33, label %47, label %34, !dbg !14865

34:                                               ; preds = %31
  %35 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14866
  %36 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %35, i32 %32, !dbg !14867
  %37 = load %struct.log_control_block_t*, %struct.log_control_block_t** %36, align 4, !dbg !14867
  %38 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %37, i32 0, i32 1, !dbg !14868
  store i32 %5, i32* %38, align 4, !dbg !14869
  %39 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14870
  %40 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %39, i32 %32, !dbg !14871
  %41 = load %struct.log_control_block_t*, %struct.log_control_block_t** %40, align 4, !dbg !14871
  %42 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %41, i32 0, i32 2, !dbg !14872
  store i32 %8, i32* %42, align 4, !dbg !14873
  br label %43

43:                                               ; preds = %19, %16, %34
  %44 = icmp eq i32 %3, 0, !dbg !14874
  br i1 %44, label %47, label %45, !dbg !14876

45:                                               ; preds = %43
  %46 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !14877
  tail call void %46(%struct.syslog_config_s* noundef nonnull @syslog_config) #20, !dbg !14879
  br label %47, !dbg !14880

47:                                               ; preds = %43, %45, %31, %14, %7, %4
  %48 = phi i32 [ -1, %4 ], [ -1, %7 ], [ -1, %14 ], [ -1, %31 ], [ 0, %45 ], [ 0, %43 ], !dbg !14831
  ret i32 %48, !dbg !14881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_log_switch(i8* noundef %0) local_unnamed_addr #0 !dbg !14882 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14886, metadata !DIExpression()), !dbg !14888
  call void @llvm.dbg.value(metadata i32 0, metadata !14887, metadata !DIExpression()), !dbg !14888
  br label %2, !dbg !14889

2:                                                ; preds = %2, %1
  %3 = phi i1 [ false, %1 ], [ true, %2 ]
  %4 = phi i32 [ 0, %1 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !14887, metadata !DIExpression()), !dbg !14888
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %4, !dbg !14891
  %6 = load i8*, i8** %5, align 4, !dbg !14891
  %7 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %6) #20, !dbg !14895
  %8 = icmp eq i32 %7, 0, !dbg !14895
  %9 = or i1 %8, %3, !dbg !14896
  br i1 %9, label %10, label %2, !dbg !14896

10:                                               ; preds = %2
  %11 = select i1 %8, i32 %4, i32 -1, !dbg !14896
  ret i32 %11, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_print_level(i8* noundef %0) local_unnamed_addr #0 !dbg !14898 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14900, metadata !DIExpression()), !dbg !14902
  call void @llvm.dbg.value(metadata i32 0, metadata !14901, metadata !DIExpression()), !dbg !14902
  br label %2, !dbg !14903

2:                                                ; preds = %1, %8
  %3 = phi i32 [ 0, %1 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !14901, metadata !DIExpression()), !dbg !14902
  %4 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !14905
  %5 = load i8*, i8** %4, align 4, !dbg !14905
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #20, !dbg !14909
  %7 = icmp eq i32 %6, 0, !dbg !14909
  br i1 %7, label %11, label %8, !dbg !14910

8:                                                ; preds = %2
  %9 = add nuw nsw i32 %3, 1, !dbg !14911
  call void @llvm.dbg.value(metadata i32 %9, metadata !14901, metadata !DIExpression()), !dbg !14902
  %10 = icmp eq i32 %9, 4, !dbg !14912
  br i1 %10, label %11, label %2, !dbg !14903, !llvm.loop !14913

11:                                               ; preds = %8, %2
  %12 = phi i32 [ %3, %2 ], [ -1, %8 ], !dbg !14902
  ret i32 %12, !dbg !14915
}

; Function Attrs: optsize
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) unnamed_addr #0 !dbg !14916 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !14920, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata i8* %1, metadata !14921, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata i32 0, metadata !14922, metadata !DIExpression()), !dbg !14923
  %3 = icmp eq %struct.log_control_block_t** %0, null, !dbg !14924
  br i1 %3, label %19, label %4, !dbg !14926

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !14922, metadata !DIExpression()), !dbg !14923
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !14927
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !14928
  br i1 %6, label %19, label %7, !dbg !14928

7:                                                ; preds = %4, %14
  %8 = phi %struct.log_control_block_t* [ %17, %14 ], [ %5, %4 ]
  %9 = phi i32 [ %15, %14 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14922, metadata !DIExpression()), !dbg !14923
  %10 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !14929
  %11 = load i8*, i8** %10, align 4, !dbg !14929
  %12 = tail call i32 @strcmp(i8* noundef %11, i8* noundef %1) #20, !dbg !14932
  %13 = icmp eq i32 %12, 0, !dbg !14932
  br i1 %13, label %19, label %14, !dbg !14933

14:                                               ; preds = %7
  %15 = add nuw nsw i32 %9, 1, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %15, metadata !14922, metadata !DIExpression()), !dbg !14923
  %16 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %15, !dbg !14927
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %16, align 4, !dbg !14927
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !14928
  br i1 %18, label %19, label %7, !dbg !14928, !llvm.loop !14935

19:                                               ; preds = %7, %14, %4, %2
  %20 = phi i32 [ -1, %2 ], [ -1, %4 ], [ %9, %7 ], [ -1, %14 ], !dbg !14923
  ret i32 %20, !dbg !14937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_at_set_filter(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !14938 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14942, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i32 %1, metadata !14943, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i32 %2, metadata !14944, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i32 %3, metadata !14945, metadata !DIExpression()), !dbg !14947
  %5 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.259, i32 0, i32 0)) #20, !dbg !14948
  %6 = icmp eq i32 %5, 0, !dbg !14950
  %7 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14951
  br i1 %6, label %8, label %25, !dbg !14952

8:                                                ; preds = %4
  %9 = icmp eq %struct.log_control_block_t** %7, null, !dbg !14953
  br i1 %9, label %41, label %10, !dbg !14956

10:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !14946, metadata !DIExpression()), !dbg !14947
  %11 = load %struct.log_control_block_t*, %struct.log_control_block_t** %7, align 4, !dbg !14957
  %12 = icmp eq %struct.log_control_block_t* %11, null, !dbg !14958
  br i1 %12, label %37, label %13, !dbg !14958

13:                                               ; preds = %10, %13
  %14 = phi %struct.log_control_block_t* [ %23, %13 ], [ %11, %10 ]
  %15 = phi i32 [ %21, %13 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !14946, metadata !DIExpression()), !dbg !14947
  %16 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %14, i32 0, i32 1, !dbg !14959
  store i32 %1, i32* %16, align 4, !dbg !14961
  %17 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14962
  %18 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %15, !dbg !14963
  %19 = load %struct.log_control_block_t*, %struct.log_control_block_t** %18, align 4, !dbg !14963
  %20 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %19, i32 0, i32 2, !dbg !14964
  store i32 %2, i32* %20, align 4, !dbg !14965
  %21 = add nuw nsw i32 %15, 1, !dbg !14966
  call void @llvm.dbg.value(metadata i32 %21, metadata !14946, metadata !DIExpression()), !dbg !14947
  %22 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %21, !dbg !14957
  %23 = load %struct.log_control_block_t*, %struct.log_control_block_t** %22, align 4, !dbg !14957
  %24 = icmp eq %struct.log_control_block_t* %23, null, !dbg !14958
  br i1 %24, label %37, label %13, !dbg !14958, !llvm.loop !14967

25:                                               ; preds = %4
  %26 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %7, i8* noundef %0) #22, !dbg !14969
  call void @llvm.dbg.value(metadata i32 %26, metadata !14946, metadata !DIExpression()), !dbg !14947
  %27 = icmp slt i32 %26, 0, !dbg !14971
  br i1 %27, label %41, label %28, !dbg !14973

28:                                               ; preds = %25
  %29 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14974
  %30 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %29, i32 %26, !dbg !14975
  %31 = load %struct.log_control_block_t*, %struct.log_control_block_t** %30, align 4, !dbg !14975
  %32 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %31, i32 0, i32 1, !dbg !14976
  store i32 %1, i32* %32, align 4, !dbg !14977
  %33 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14978
  %34 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %33, i32 %26, !dbg !14979
  %35 = load %struct.log_control_block_t*, %struct.log_control_block_t** %34, align 4, !dbg !14979
  %36 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %35, i32 0, i32 2, !dbg !14980
  store i32 %2, i32* %36, align 4, !dbg !14981
  br label %37

37:                                               ; preds = %13, %10, %28
  %38 = icmp eq i32 %3, 0, !dbg !14982
  br i1 %38, label %41, label %39, !dbg !14984

39:                                               ; preds = %37
  %40 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !14985
  tail call void %40(%struct.syslog_config_s* noundef nonnull @syslog_config) #20, !dbg !14987
  br label %41, !dbg !14988

41:                                               ; preds = %37, %39, %25, %8
  %42 = phi i32 [ -1, %8 ], [ -1, %25 ], [ 0, %39 ], [ 0, %37 ], !dbg !14947
  ret i32 %42, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_str2val(%struct.log_control_block_t** noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !14990 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !14994, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i8* %1, metadata !14995, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i32 0, metadata !14996, metadata !DIExpression()), !dbg !15005
  %7 = bitcast i8** %3 to i8*, !dbg !15006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !15006
  %8 = bitcast i8** %4 to i8*, !dbg !15007
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !15007
  %9 = bitcast i8** %5 to i8*, !dbg !15008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !15008
  call void @llvm.dbg.value(metadata i8 0, metadata !15001, metadata !DIExpression()), !dbg !15005
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #19, !dbg !15009
  call void @llvm.dbg.value(metadata i8 poison, metadata !15001, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i32 0, metadata !14996, metadata !DIExpression()), !dbg !15005
  br label %10, !dbg !15010

10:                                               ; preds = %2, %51
  %11 = phi i32 [ 0, %2 ], [ %37, %51 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !14996, metadata !DIExpression()), !dbg !15005
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !15011
  call void @llvm.dbg.value(metadata i8** %3, metadata !14998, metadata !DIExpression(DW_OP_deref)), !dbg !15005
  %13 = call fastcc i32 @syslog_get_a_string(i8* noundef %12, i8** noundef nonnull %3) #22, !dbg !15013
  call void @llvm.dbg.value(metadata i32 %13, metadata !14997, metadata !DIExpression()), !dbg !15005
  %14 = icmp eq i32 %13, 0, !dbg !15014
  br i1 %14, label %61, label %15, !dbg !15016

15:                                               ; preds = %10
  %16 = add i32 %13, %11, !dbg !15017
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !15018
  %18 = load i8, i8* %17, align 1, !dbg !15018
  %19 = icmp eq i8 %18, 0, !dbg !15019
  br i1 %19, label %61, label %20, !dbg !15020

20:                                               ; preds = %15
  store i8 0, i8* %17, align 1, !dbg !15021
  %21 = add i32 %16, 1, !dbg !15022
  call void @llvm.dbg.value(metadata i32 %21, metadata !14996, metadata !DIExpression()), !dbg !15005
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !15023
  call void @llvm.dbg.value(metadata i8** %4, metadata !14999, metadata !DIExpression(DW_OP_deref)), !dbg !15005
  %23 = call fastcc i32 @syslog_get_a_string(i8* noundef %22, i8** noundef nonnull %4) #22, !dbg !15024
  call void @llvm.dbg.value(metadata i32 %23, metadata !14997, metadata !DIExpression()), !dbg !15005
  %24 = icmp eq i32 %23, 0, !dbg !15025
  br i1 %24, label %61, label %25, !dbg !15027

25:                                               ; preds = %20
  %26 = add i32 %23, %21, !dbg !15028
  %27 = getelementptr inbounds i8, i8* %1, i32 %26, !dbg !15029
  call void @llvm.dbg.value(metadata i1 undef, metadata !15001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15005
  store i8 0, i8* %27, align 1, !dbg !15030
  %28 = add i32 %26, 1, !dbg !15031
  call void @llvm.dbg.value(metadata i32 %28, metadata !14996, metadata !DIExpression()), !dbg !15005
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !15032
  call void @llvm.dbg.value(metadata i8** %5, metadata !15000, metadata !DIExpression(DW_OP_deref)), !dbg !15005
  %30 = call fastcc i32 @syslog_get_a_string(i8* noundef %29, i8** noundef nonnull %5) #22, !dbg !15033
  call void @llvm.dbg.value(metadata i32 %30, metadata !14997, metadata !DIExpression()), !dbg !15005
  %31 = icmp eq i32 %30, 0, !dbg !15034
  br i1 %31, label %61, label %32, !dbg !15036

32:                                               ; preds = %25
  %33 = add i32 %30, %28, !dbg !15037
  %34 = getelementptr inbounds i8, i8* %1, i32 %33, !dbg !15038
  %35 = load i8, i8* %34, align 1, !dbg !15038
  %36 = icmp eq i8 %35, 0, !dbg !15039
  call void @llvm.dbg.value(metadata i1 %36, metadata !15001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15005
  store i8 0, i8* %34, align 1, !dbg !15040
  %37 = add i32 %33, 1, !dbg !15041
  call void @llvm.dbg.value(metadata i32 %37, metadata !14996, metadata !DIExpression()), !dbg !15005
  %38 = load i8*, i8** %3, align 4, !dbg !15042
  call void @llvm.dbg.value(metadata i8* %38, metadata !14998, metadata !DIExpression()), !dbg !15005
  %39 = call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %0, i8* noundef %38) #22, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %39, metadata !14997, metadata !DIExpression()), !dbg !15005
  %40 = icmp slt i32 %39, 0, !dbg !15044
  br i1 %40, label %61, label %41, !dbg !15046

41:                                               ; preds = %32
  %42 = load i8*, i8** %4, align 4, !dbg !15047
  call void @llvm.dbg.value(metadata i8* %42, metadata !14999, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i8* %6, metadata !15004, metadata !DIExpression(DW_OP_deref)), !dbg !15005
  %43 = call i32 @toi(i8* noundef %42, i8* noundef nonnull %6) #20, !dbg !15048
  call void @llvm.dbg.value(metadata i32 %43, metadata !15002, metadata !DIExpression()), !dbg !15005
  %44 = load i8, i8* %6, align 1, !dbg !15049
  call void @llvm.dbg.value(metadata i8 %44, metadata !15004, metadata !DIExpression()), !dbg !15005
  %45 = icmp eq i8 %44, 4, !dbg !15051
  br i1 %45, label %61, label %46, !dbg !15052

46:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 undef, metadata !15002, metadata !DIExpression()), !dbg !15005
  %47 = load i8*, i8** %5, align 4, !dbg !15053
  call void @llvm.dbg.value(metadata i8* %47, metadata !15000, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i8* %6, metadata !15004, metadata !DIExpression(DW_OP_deref)), !dbg !15005
  %48 = call i32 @toi(i8* noundef %47, i8* noundef nonnull %6) #20, !dbg !15054
  call void @llvm.dbg.value(metadata i32 %48, metadata !15003, metadata !DIExpression()), !dbg !15005
  %49 = load i8, i8* %6, align 1, !dbg !15055
  call void @llvm.dbg.value(metadata i8 %49, metadata !15004, metadata !DIExpression()), !dbg !15005
  %50 = icmp eq i8 %49, 4, !dbg !15057
  br i1 %50, label %61, label %51, !dbg !15058

51:                                               ; preds = %46
  %52 = icmp ne i32 %43, 0, !dbg !15059
  %53 = zext i1 %52 to i32, !dbg !15059
  call void @llvm.dbg.value(metadata i32 %53, metadata !15002, metadata !DIExpression()), !dbg !15005
  %54 = icmp ult i32 %48, 3, !dbg !15060
  %55 = select i1 %54, i32 %48, i32 3, !dbg !15060
  call void @llvm.dbg.value(metadata i32 %55, metadata !15003, metadata !DIExpression()), !dbg !15005
  %56 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %39, !dbg !15061
  %57 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !15061
  %58 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %57, i32 0, i32 1, !dbg !15062
  store i32 %53, i32* %58, align 4, !dbg !15063
  %59 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !15064
  %60 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %59, i32 0, i32 2, !dbg !15065
  store i32 %55, i32* %60, align 4, !dbg !15066
  call void @llvm.dbg.value(metadata i8 poison, metadata !15001, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i32 %37, metadata !14996, metadata !DIExpression()), !dbg !15005
  br i1 %36, label %61, label %10, !dbg !15010, !llvm.loop !15067

61:                                               ; preds = %51, %46, %41, %32, %25, %20, %10, %15
  %62 = phi i32 [ -1, %15 ], [ -1, %10 ], [ -2, %20 ], [ -2, %25 ], [ -3, %32 ], [ -4, %41 ], [ -4, %46 ], [ 0, %51 ], !dbg !15005
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #19, !dbg !15069
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !15069
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !15069
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !15069
  ret i32 %62, !dbg !15069
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @syslog_get_a_string(i8* noundef %0, i8** nocapture noundef writeonly %1) unnamed_addr #15 !dbg !15070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15074, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i8** %1, metadata !15075, metadata !DIExpression()), !dbg !15077
  br label %3, !dbg !15078

3:                                                ; preds = %6, %2
  %4 = phi i8* [ %0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !15074, metadata !DIExpression()), !dbg !15077
  %5 = load i8, i8* %4, align 1, !dbg !15079
  switch i8 %5, label %9 [
    i8 32, label %6
    i8 0, label %8
  ], !dbg !15078

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !15080
  call void @llvm.dbg.value(metadata i8* %7, metadata !15074, metadata !DIExpression()), !dbg !15077
  br label %3, !dbg !15078, !llvm.loop !15082

8:                                                ; preds = %3
  store i8* null, i8** %1, align 4, !dbg !15084
  br label %19, !dbg !15087

9:                                                ; preds = %3
  store i8* %4, i8** %1, align 4, !dbg !15088
  br label %10, !dbg !15089

10:                                               ; preds = %13, %9
  %11 = phi i8* [ %4, %9 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !15074, metadata !DIExpression()), !dbg !15077
  %12 = load i8, i8* %11, align 1, !dbg !15090
  switch i8 %12, label %13 [
    i8 32, label %15
    i8 0, label %15
  ], !dbg !15091

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !15092
  call void @llvm.dbg.value(metadata i8* %14, metadata !15074, metadata !DIExpression()), !dbg !15077
  br label %10, !dbg !15089, !llvm.loop !15094

15:                                               ; preds = %10, %10
  %16 = ptrtoint i8* %11 to i32, !dbg !15096
  %17 = ptrtoint i8* %4 to i32, !dbg !15096
  %18 = sub i32 %16, %17, !dbg !15096
  br label %19, !dbg !15097

19:                                               ; preds = %15, %8
  %20 = phi i32 [ 0, %8 ], [ %18, %15 ], !dbg !15077
  ret i32 %20, !dbg !15098
}

; Function Attrs: optsize
declare dso_local i32 @toi(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_val2str(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 !dbg !15099 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !15106, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i8* %1, metadata !15107, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 0, metadata !15108, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 0, metadata !15109, metadata !DIExpression()), !dbg !15111
  %3 = icmp eq %struct.log_control_block_t** %0, null
  call void @llvm.dbg.value(metadata i32 0, metadata !15108, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 0, metadata !15109, metadata !DIExpression()), !dbg !15111
  br i1 %3, label %31, label %4, !dbg !15112

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !15108, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 0, metadata !15109, metadata !DIExpression()), !dbg !15111
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !15113
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !15112
  br i1 %6, label %27, label %7, !dbg !15114

7:                                                ; preds = %4, %7
  %8 = phi %struct.log_control_block_t* [ %25, %7 ], [ %5, %4 ]
  %9 = phi i32 [ %22, %7 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %7 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !15109, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 %10, metadata !15108, metadata !DIExpression()), !dbg !15111
  %11 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !15115
  %12 = sub nsw i32 256, %9, !dbg !15117
  %13 = icmp eq i32 %10, 0, !dbg !15118
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.262, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.246, i32 0, i32 0), !dbg !15119
  %15 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !15120
  %16 = load i8*, i8** %15, align 4, !dbg !15120
  %17 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 1, !dbg !15121
  %18 = load i32, i32* %17, align 4, !dbg !15121
  %19 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 2, !dbg !15122
  %20 = load i32, i32* %19, align 4, !dbg !15122
  %21 = tail call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef %11, i32 noundef %12, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.263, i32 0, i32 0), i8* noundef %14, i8* noundef %16, i32 noundef %18, i32 noundef %20) #20, !dbg !15123
  call void @llvm.dbg.value(metadata i32 %21, metadata !15110, metadata !DIExpression()), !dbg !15111
  %22 = add nsw i32 %21, %9, !dbg !15124
  call void @llvm.dbg.value(metadata i32 %22, metadata !15109, metadata !DIExpression()), !dbg !15111
  %23 = add nuw nsw i32 %10, 1, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %23, metadata !15108, metadata !DIExpression()), !dbg !15111
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %23, !dbg !15113
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !15113
  %26 = icmp eq %struct.log_control_block_t* %25, null, !dbg !15112
  br i1 %26, label %27, label %7, !dbg !15114, !llvm.loop !15126

27:                                               ; preds = %7, %4
  %28 = phi i32 [ 0, %4 ], [ %22, %7 ]
  %29 = icmp sgt i32 %28, 255, !dbg !15128
  br i1 %29, label %30, label %31, !dbg !15130

30:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.265, i32 0, i32 0), i32 noundef 1467) #20, !dbg !15131
  br label %31, !dbg !15131

31:                                               ; preds = %2, %30, %27
  %32 = phi i32 [ %28, %30 ], [ %28, %27 ], [ 0, %2 ]
  ret i32 %32, !dbg !15133
}

; Function Attrs: optsize
declare dso_local i32 @snprintf(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i8* @log_switch_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !15134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15138, metadata !DIExpression()), !dbg !15139
  %2 = icmp ugt i32 %0, 1, !dbg !15140
  br i1 %2, label %3, label %4, !dbg !15142

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.265, i32 0, i32 0), i32 noundef 1474) #20, !dbg !15143
  br label %4, !dbg !15143

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %0, !dbg !15145
  %6 = load i8*, i8** %5, align 4, !dbg !15145
  ret i8* %6, !dbg !15146
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @print_level_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !15147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15151, metadata !DIExpression()), !dbg !15152
  %2 = icmp ugt i32 %0, 3, !dbg !15153
  br i1 %2, label %3, label %4, !dbg !15155

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.265, i32 0, i32 0), i32 noundef 1480) #20, !dbg !15156
  br label %4, !dbg !15156

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %0, !dbg !15158
  %6 = load i8*, i8** %5, align 4, !dbg !15158
  ret i8* %6, !dbg !15159
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__wrap_printf(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !15160 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15164, metadata !DIExpression()), !dbg !15168
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !15169
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !15169
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !15165, metadata !DIExpression()), !dbg !15170
  %4 = load i32, i32* @syslog_init_done, align 4, !dbg !15171
  %5 = icmp eq i32 %4, 0, !dbg !15171
  br i1 %5, label %13, label %6, !dbg !15173

6:                                                ; preds = %1
  %7 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !15174, !srcloc !14170
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !15174
  call void @llvm.dbg.value(metadata i32 %8, metadata !14167, metadata !DIExpression()) #19, !dbg !15176
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()) #19, !dbg !15176
  call void @llvm.dbg.value(metadata i32 %8, metadata !15167, metadata !DIExpression()), !dbg !15168
  call void @llvm.va_start(i8* nonnull %3), !dbg !15177
  %9 = bitcast %struct.__va_list* %2 to i32*, !dbg !15178
  %10 = load i32, i32* %9, align 4, !dbg !15178
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !15178
  %12 = call i32 @vprintf(i8* noundef %0, [1 x i32] %11) #20, !dbg !15178
  call void @llvm.dbg.value(metadata i32 %12, metadata !15166, metadata !DIExpression()), !dbg !15168
  call void @llvm.va_end(i8* nonnull %3), !dbg !15179
  call void @llvm.dbg.value(metadata i32 %8, metadata !14186, metadata !DIExpression()) #19, !dbg !15180
  call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %8) #19, !dbg !15182, !srcloc !14192
  br label %13, !dbg !15183

13:                                               ; preds = %1, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %1 ], !dbg !15168
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !15184
  ret i32 %14, !dbg !15184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_log_notice(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !15185 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15189, metadata !DIExpression()), !dbg !15196
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !15197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !15197
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !15190, metadata !DIExpression()), !dbg !15198
  call void @llvm.va_start(i8* nonnull %3), !dbg !15199
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !15200
  %5 = load i32, i32* %4, align 4, !dbg !15200
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15200
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.nvdm_port_log_notice, i32 0, i32 0), i32 noundef 48, i32 noundef 1, i8* noundef %0, [1 x i32] %6) #20, !dbg !15200
  call void @llvm.va_end(i8* nonnull %3), !dbg !15201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !15202
  ret void, !dbg !15202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nvdm_port_log_info(i8* nocapture %0, ...) local_unnamed_addr #7 !dbg !15203 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !15205, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.declare(metadata %struct.__va_list* undef, metadata !15206, metadata !DIExpression()), !dbg !15208
  ret void, !dbg !15209
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @nvdm_port_log_error(i8* noundef %0, ...) local_unnamed_addr #12 !dbg !15210 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15212, metadata !DIExpression()), !dbg !15214
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !15215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !15215
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !15213, metadata !DIExpression()), !dbg !15216
  call void @llvm.va_start(i8* nonnull %3), !dbg !15217
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !15218
  %5 = load i32, i32* %4, align 4, !dbg !15218
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15218
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.nvdm_port_log_error, i32 0, i32 0), i32 noundef 66, i32 noundef 3, i8* noundef %0, [1 x i32] %6) #20, !dbg !15218
  call void @llvm.va_end(i8* nonnull %3), !dbg !15219
  call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.268, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.nvdm_port_log_error, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.269, i32 0, i32 0)) #21, !dbg !15220
  unreachable, !dbg !15220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !15221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15225, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata i8* %1, metadata !15226, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata i32 %2, metadata !15227, metadata !DIExpression()), !dbg !15229
  %4 = tail call i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !15230
  call void @llvm.dbg.value(metadata i32 %4, metadata !15228, metadata !DIExpression()), !dbg !15229
  %5 = icmp eq i32 %4, 0, !dbg !15231
  br i1 %5, label %8, label %6, !dbg !15233

6:                                                ; preds = %3
  %7 = ptrtoint i8* %1 to i32, !dbg !15234
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef %0, i32 noundef %7, i32 noundef %2, i32 noundef %4) #22, !dbg !15236
  unreachable, !dbg !15237

8:                                                ; preds = %3
  ret void, !dbg !15238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !15239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15243, metadata !DIExpression()), !dbg !15247
  call void @llvm.dbg.value(metadata i8* %1, metadata !15244, metadata !DIExpression()), !dbg !15247
  call void @llvm.dbg.value(metadata i32 %2, metadata !15245, metadata !DIExpression()), !dbg !15247
  %4 = tail call i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !15248
  call void @llvm.dbg.value(metadata i32 %4, metadata !15246, metadata !DIExpression()), !dbg !15247
  %5 = icmp eq i32 %4, 0, !dbg !15249
  br i1 %5, label %8, label %6, !dbg !15251

6:                                                ; preds = %3
  %7 = ptrtoint i8* %1 to i32, !dbg !15252
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3.271, i32 0, i32 0), i32 noundef %0, i32 noundef %7, i32 noundef %2, i32 noundef %4) #22, !dbg !15254
  unreachable, !dbg !15255

8:                                                ; preds = %3
  ret void, !dbg !15256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_flash_erase(i32 noundef %0) local_unnamed_addr #0 !dbg !15257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15259, metadata !DIExpression()), !dbg !15261
  %2 = tail call i32 @hal_flash_erase(i32 noundef %0, i32 noundef 0) #20, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %2, metadata !15260, metadata !DIExpression()), !dbg !15261
  %3 = icmp eq i32 %2, 0, !dbg !15263
  br i1 %3, label %5, label %4, !dbg !15265

4:                                                ; preds = %1
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4.272, i32 0, i32 0), i32 noundef %0, i32 noundef %2) #22, !dbg !15266
  unreachable, !dbg !15268

5:                                                ; preds = %1
  ret void, !dbg !15269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_mutex_creat() local_unnamed_addr #0 !dbg !15270 {
  %1 = tail call i8* @xQueueCreateMutex(i8 noundef zeroext 1) #20, !dbg !15271
  store i8* %1, i8** @g_nvdm_mutex, align 4, !dbg !15272
  %2 = icmp eq i8* %1, null, !dbg !15273
  br i1 %2, label %3, label %4, !dbg !15275

3:                                                ; preds = %0
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.273, i32 0, i32 0)) #22, !dbg !15276
  unreachable, !dbg !15278

4:                                                ; preds = %0
  ret void, !dbg !15279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_mutex_take() local_unnamed_addr #0 !dbg !15280 {
  %1 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !15281
  %2 = icmp eq i32 %1, 1, !dbg !15283
  br i1 %2, label %8, label %3, !dbg !15284

3:                                                ; preds = %0
  %4 = load i8*, i8** @g_nvdm_mutex, align 4, !dbg !15285
  %5 = tail call i32 @xQueueGenericReceive(i8* noundef %4, i8* noundef null, i32 noundef -1, i32 noundef 0) #20, !dbg !15285
  %6 = icmp eq i32 %5, 0, !dbg !15288
  br i1 %6, label %7, label %8, !dbg !15289

7:                                                ; preds = %3
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.274, i32 0, i32 0)) #22, !dbg !15290
  unreachable, !dbg !15292

8:                                                ; preds = %3, %0
  ret void, !dbg !15293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_mutex_give() local_unnamed_addr #0 !dbg !15294 {
  %1 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !15295
  %2 = icmp eq i32 %1, 1, !dbg !15297
  br i1 %2, label %8, label %3, !dbg !15298

3:                                                ; preds = %0
  %4 = load i8*, i8** @g_nvdm_mutex, align 4, !dbg !15299
  %5 = tail call i32 @xQueueGenericSend(i8* noundef %4, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !15299
  %6 = icmp eq i32 %5, 0, !dbg !15302
  br i1 %6, label %7, label %8, !dbg !15303

7:                                                ; preds = %3
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.275, i32 0, i32 0)) #22, !dbg !15304
  unreachable, !dbg !15306

8:                                                ; preds = %3, %0
  ret void, !dbg !15307
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @nvdm_port_malloc(i32 noundef %0) local_unnamed_addr #0 !dbg !15308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15311, metadata !DIExpression()), !dbg !15312
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #20, !dbg !15313
  ret i8* %2, !dbg !15314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_free(i8* noundef %0) local_unnamed_addr #0 !dbg !15315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15317, metadata !DIExpression()), !dbg !15318
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !15319
  ret void, !dbg !15320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_get_task_handler() local_unnamed_addr #0 !dbg !15321 {
  %1 = tail call i8* @xTaskGetCurrentTaskHandle() #20, !dbg !15322
  store i8* %1, i8** @g_task_handler, align 4, !dbg !15323
  ret void, !dbg !15324
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @nvdm_port_query_task_handler() local_unnamed_addr #0 !dbg !15325 {
  %1 = tail call i8* @xTaskGetCurrentTaskHandle() #20, !dbg !15326
  %2 = load i8*, i8** @g_task_handler, align 4, !dbg !15328
  %3 = icmp eq i8* %1, %2, !dbg !15329
  ret i1 %3, !dbg !15330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @nvdm_port_get_data_item_config(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #4 !dbg !15331 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15335, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32* %1, metadata !15336, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32* %2, metadata !15337, metadata !DIExpression()), !dbg !15338
  store i32 2048, i32* %0, align 4, !dbg !15339
  store i32 16, i32* %1, align 4, !dbg !15340
  store i32 32, i32* %2, align 4, !dbg !15341
  ret i32 200, !dbg !15342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @nvdm_port_get_peb_config(i32* nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !15343 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15347, metadata !DIExpression()), !dbg !15348
  store i32 9, i32* %0, align 4, !dbg !15349
  ret i32 4096, !dbg !15350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @nvdm_port_get_peb_address(i32 noundef %0, i32 noundef %1) local_unnamed_addr #7 !dbg !15351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15355, metadata !DIExpression()), !dbg !15357
  call void @llvm.dbg.value(metadata i32 %1, metadata !15356, metadata !DIExpression()), !dbg !15357
  %3 = shl nsw i32 %0, 12, !dbg !15358
  %4 = add nsw i32 %3, 2060288, !dbg !15358
  %5 = add nsw i32 %4, %1, !dbg !15358
  ret i32 %5, !dbg !15359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nvdm_port_poweroff_time_set() local_unnamed_addr #7 !dbg !15360 {
  ret void, !dbg !15361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nvdm_port_poweroff(i32 noundef %0) local_unnamed_addr #7 !dbg !15362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15364, metadata !DIExpression()), !dbg !15365
  ret void, !dbg !15366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !15367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15369, metadata !DIExpression()), !dbg !15370
  %2 = trunc i32 %0 to i8, !dbg !15371
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext %2) #20, !dbg !15372
  %3 = icmp eq i32 %0, 10, !dbg !15373
  br i1 %3, label %4, label %5, !dbg !15375

4:                                                ; preds = %1
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext 13) #20, !dbg !15376
  br label %5, !dbg !15378

5:                                                ; preds = %4, %1
  ret i32 %0, !dbg !15379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @system_init() local_unnamed_addr #0 !dbg !15380 {
  tail call fastcc void @SystemClock_Config() #22, !dbg !15381
  tail call fastcc void @prvSetupHardware() #22, !dbg !15382
  %1 = tail call i32 @nvdm_init() #20, !dbg !15383
  tail call fastcc void @_main_sys_random_init() #22, !dbg !15384
  ret void, !dbg !15385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !15386 {
  tail call void @top_xtal_init() #20, !dbg !15387
  tail call void @cmnCpuClkConfigureTo192M() #20, !dbg !15388
  tail call void @cmnSerialFlashClkConfTo64M() #20, !dbg !15389
  ret void, !dbg !15390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !15391 {
  tail call fastcc void @cache_enable() #22, !dbg !15392
  tail call void @bsp_ept_gpio_setting_init() #20, !dbg !15394
  %1 = tail call i32 @log_uart_init(i32 noundef 0) #20, !dbg !15395
  %2 = tail call i32 @hal_flash_init() #20, !dbg !15396
  ret void, !dbg !15397
}

; Function Attrs: optsize
declare dso_local i32 @nvdm_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_main_sys_random_init() unnamed_addr #0 !dbg !15398 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !15402
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !15402
  %3 = tail call i32 @hal_trng_init() #20, !dbg !15403
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()), !dbg !15404
  %4 = icmp eq i32 %3, 0, !dbg !15405
  br i1 %4, label %5, label %10, !dbg !15407

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !15400, metadata !DIExpression(DW_OP_deref)), !dbg !15404
  %6 = call i32 @hal_trng_get_generated_random_number(i32* noundef nonnull %1) #20, !dbg !15408
  call void @llvm.dbg.value(metadata i32 %6, metadata !15401, metadata !DIExpression()), !dbg !15404
  %7 = icmp eq i32 %6, 0, !dbg !15410
  br i1 %7, label %8, label %10, !dbg !15410

8:                                                ; preds = %5
  %9 = load i32, i32* %1, align 4, !dbg !15411
  call void @llvm.dbg.value(metadata i32 %9, metadata !15400, metadata !DIExpression()), !dbg !15404
  call void @srand(i32 noundef %9) #20, !dbg !15414
  br label %12, !dbg !15415

10:                                               ; preds = %0, %5
  %11 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !15416
  call void (i8*, i8*, i32, i32, i8*, ...) %11(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__._main_sys_random_init, i32 0, i32 0), i32 noundef 203, i32 noundef 1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.276, i32 0, i32 0)) #20, !dbg !15416
  br label %12, !dbg !15420

12:                                               ; preds = %8, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !15421
  ret void, !dbg !15421
}

; Function Attrs: optsize
declare dso_local void @srand(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cache_enable() unnamed_addr #0 !dbg !15422 {
  %1 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 3, metadata !15426, metadata !DIExpression()), !dbg !15436
  %2 = bitcast i64* %1 to i8*, !dbg !15437
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19, !dbg !15437
  call void @llvm.dbg.value(metadata i64 3360107803414528, metadata !15429, metadata !DIExpression()), !dbg !15436
  store i64 3360107803414528, i64* %1, align 8, !dbg !15438
  call void @llvm.dbg.value(metadata i32 1, metadata !15428, metadata !DIExpression()), !dbg !15436
  %3 = tail call i32 @hal_cache_init() #20, !dbg !15439
  %4 = tail call i32 @hal_cache_set_size(i32 noundef 3) #20, !dbg !15440
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()), !dbg !15436
  %5 = bitcast i64* %1 to %struct.hal_cache_region_config_t*, !dbg !15441
  call void @llvm.dbg.value(metadata i64* %1, metadata !15429, metadata !DIExpression(DW_OP_deref)), !dbg !15436
  %6 = call i32 @hal_cache_region_config(i32 noundef 0, %struct.hal_cache_region_config_t* noundef nonnull %5) #20, !dbg !15445
  %7 = call i32 @hal_cache_region_enable(i32 noundef 0) #20, !dbg !15446
  call void @llvm.dbg.value(metadata i32 1, metadata !15427, metadata !DIExpression()), !dbg !15436
  br label %8, !dbg !15447

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 1, %0 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !15427, metadata !DIExpression()), !dbg !15436
  %10 = call i32 @hal_cache_region_disable(i32 noundef %9) #20, !dbg !15449
  %11 = add nuw nsw i32 %9, 1, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %11, metadata !15427, metadata !DIExpression()), !dbg !15436
  %12 = icmp eq i32 %11, 16, !dbg !15453
  br i1 %12, label %13, label %8, !dbg !15447, !llvm.loop !15454

13:                                               ; preds = %8
  %14 = call i32 @hal_cache_enable() #20, !dbg !15456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19, !dbg !15457
  ret void, !dbg !15457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #5 !dbg !15458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15460, metadata !DIExpression()), !dbg !15462
  %2 = add i32 %0, -1, !dbg !15463
  %3 = icmp ugt i32 %2, 16777215, !dbg !15465
  br i1 %3, label %8, label %4, !dbg !15466

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15467
  call void @llvm.dbg.value(metadata i32 %5, metadata !15461, metadata !DIExpression()), !dbg !15462
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15468
  %7 = and i32 %6, -4, !dbg !15468
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15468
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !15469
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !15470
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15471
  br label %8, !dbg !15472

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !15462
  ret i32 %9, !dbg !15473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #5 !dbg !15474 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !15475
  ret void, !dbg !15476
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #8 !dbg !15477 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !15478
  ret i32 %1, !dbg !15479
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #0 !dbg !15480 {
  %1 = tail call i32 @top_mcu_freq_get() #20, !dbg !15481
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !15482
  ret void, !dbg !15483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !15484 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15485
  %2 = or i32 %1, 15728640, !dbg !15485
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15485
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !15486
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15487
  %4 = or i32 %3, 458752, !dbg !15487
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15487
  ret void, !dbg !15488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #5 !dbg !15489 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !15490
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !15491
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !15492
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !15493
  store volatile i32 269713408, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !15494
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !15495
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !15496
  ret void, !dbg !15497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #7 !dbg !15498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15500, metadata !DIExpression()), !dbg !15501
  ret i32 0, !dbg !15502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #7 !dbg !15503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15553, metadata !DIExpression()), !dbg !15555
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !15554, metadata !DIExpression()), !dbg !15555
  ret i32 0, !dbg !15556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #7 !dbg !15557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15559, metadata !DIExpression()), !dbg !15560
  ret i32 1, !dbg !15561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !15562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15566, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.value(metadata i32 %1, metadata !15567, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.value(metadata i32 %2, metadata !15568, metadata !DIExpression()), !dbg !15569
  ret i32 0, !dbg !15570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !15571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15575, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.value(metadata i32 %1, metadata !15576, metadata !DIExpression()), !dbg !15578
  call void @llvm.dbg.value(metadata i32 %2, metadata !15577, metadata !DIExpression()), !dbg !15578
  ret i32 -1, !dbg !15579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #7 !dbg !15580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15584, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.value(metadata i8* %1, metadata !15585, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.value(metadata i32 %2, metadata !15586, metadata !DIExpression()), !dbg !15587
  ret i32 0, !dbg !15588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !15589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15591, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i8* %1, metadata !15592, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 %2, metadata !15593, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 0, metadata !15594, metadata !DIExpression()), !dbg !15595
  %4 = icmp sgt i32 %2, 0, !dbg !15596
  br i1 %4, label %5, label %14, !dbg !15599

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !15594, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i8* %7, metadata !15592, metadata !DIExpression()), !dbg !15595
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !15600
  call void @llvm.dbg.value(metadata i8* %8, metadata !15592, metadata !DIExpression()), !dbg !15595
  %9 = load i8, i8* %7, align 1, !dbg !15602
  %10 = zext i8 %9 to i32, !dbg !15602
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !15603
  %12 = add nuw nsw i32 %6, 1, !dbg !15604
  call void @llvm.dbg.value(metadata i32 %12, metadata !15594, metadata !DIExpression()), !dbg !15595
  %13 = icmp eq i32 %12, %2, !dbg !15596
  br i1 %13, label %14, label %5, !dbg !15599, !llvm.loop !15605

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !15607
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !1602 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !1796, metadata !DIExpression()), !dbg !15608
  call void @llvm.dbg.value(metadata i32 %1, metadata !1797, metadata !DIExpression()), !dbg !15608
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #19, !dbg !15609, !srcloc !15610
  call void @llvm.dbg.value(metadata i8* %3, metadata !1799, metadata !DIExpression()), !dbg !15608
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !15611
  %5 = icmp eq i8* %4, null, !dbg !15613
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !15614
  call void @llvm.dbg.value(metadata i8* %6, metadata !1798, metadata !DIExpression()), !dbg !15608
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !15615
  %8 = icmp ult i8* %3, %7, !dbg !15617
  %9 = xor i1 %8, true, !dbg !15618
  %10 = or i1 %5, %9, !dbg !15618
  br i1 %10, label %11, label %13, !dbg !15618

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !15619
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !15618
  br label %13, !dbg !15618

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !15619
  ret i8* %14, !dbg !15618
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #12 !dbg !15620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15622, metadata !DIExpression()), !dbg !15623
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.290, i32 0, i32 0)) #20, !dbg !15624
  br label %3, !dbg !15625

3:                                                ; preds = %1, %3
  br label %3, !dbg !15625, !llvm.loop !15626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !15628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15632, metadata !DIExpression()), !dbg !15634
  call void @llvm.dbg.value(metadata i32 %1, metadata !15633, metadata !DIExpression()), !dbg !15634
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.291, i32 0, i32 0), i32 noundef %1) #20, !dbg !15635
  ret i32 -1, !dbg !15636
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #0 !dbg !15637 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.292, i32 0, i32 0)) #20, !dbg !15642
  ret i32 0, !dbg !15643
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @main() local_unnamed_addr #0 !dbg !15644 {
  tail call void @system_init() #20, !dbg !15645
  tail call void @log_init(void (%struct.syslog_config_s*)* noundef null, i32 (%struct.syslog_config_s*)* noundef null, %struct.log_control_block_t** noundef null) #20, !dbg !15646
  %1 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15647
  tail call void (i8*, i8*, i32, i32, i8*, ...) %1(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.main, i32 0, i32 0), i32 noundef 98, i32 noundef 1, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.294, i32 0, i32 0)) #20, !dbg !15647
  %2 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @cjson_test_proc, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.295, i32 0, i32 0), i16 noundef zeroext 1024, i8* noundef null, i32 noundef 4, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #20, !dbg !15649
  %3 = icmp eq i32 %2, 1, !dbg !15651
  br i1 %3, label %6, label %4, !dbg !15652

4:                                                ; preds = %0
  %5 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15653
  tail call void (i8*, i8*, i32, i32, i8*, ...) %5(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.main, i32 0, i32 0), i32 noundef 114, i32 noundef 3, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.296, i32 0, i32 0)) #20, !dbg !15653
  ret i32 -1, !dbg !15656

6:                                                ; preds = %0
  tail call void @SysInitStatus_Set() #20, !dbg !15657
  tail call void @vTaskStartScheduler() #20, !dbg !15658
  br label %7, !dbg !15659

7:                                                ; preds = %7, %6
  br label %7, !dbg !15660, !llvm.loop !15663
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @cjson_test_proc(i8* nocapture noundef readnone %0) #12 !dbg !15666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15668, metadata !DIExpression()), !dbg !15670
  %2 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15671
  tail call void (i8*, i8*, i32, i32, i8*, ...) %2(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.cjson_test_proc, i32 0, i32 0), i32 noundef 68, i32 noundef 1, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.297, i32 0, i32 0)) #20, !dbg !15671
  %3 = tail call i32 @cjson_test() #20, !dbg !15673
  call void @llvm.dbg.value(metadata i32 %3, metadata !15669, metadata !DIExpression()), !dbg !15670
  %4 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15674
  tail call void (i8*, i8*, i32, i32, i8*, ...) %4(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.cjson_test_proc, i32 0, i32 0), i32 noundef 70, i32 noundef 1, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef %3) #20, !dbg !15674
  %5 = icmp eq i32 %3, 0, !dbg !15676
  br i1 %5, label %6, label %8, !dbg !15678

6:                                                ; preds = %1
  %7 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15679
  tail call void (i8*, i8*, i32, i32, i8*, ...) %7(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.cjson_test_proc, i32 0, i32 0), i32 noundef 72, i32 noundef 1, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6.299, i32 0, i32 0)) #20, !dbg !15679
  br label %8, !dbg !15682

8:                                                ; preds = %6, %1
  br label %9, !dbg !15683

9:                                                ; preds = %8, %9
  tail call void @vTaskDelay(i32 noundef 1000) #20, !dbg !15684
  br label %9, !dbg !15683, !llvm.loop !15686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @doit(i8* noundef %0) local_unnamed_addr #0 !dbg !15688 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15692, metadata !DIExpression()), !dbg !15708
  %2 = tail call %struct.cJSON* @cJSON_Parse(i8* noundef %0) #20, !dbg !15709
  call void @llvm.dbg.value(metadata %struct.cJSON* %2, metadata !15694, metadata !DIExpression()), !dbg !15708
  %3 = icmp eq %struct.cJSON* %2, null, !dbg !15710
  br i1 %3, label %4, label %7, !dbg !15712

4:                                                ; preds = %1
  %5 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15713
  %6 = tail call i8* @cJSON_GetErrorPtr() #20, !dbg !15713
  tail call void (i8*, i8*, i32, i32, i8*, ...) %5(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.doit, i32 0, i32 0), i32 noundef 55, i32 noundef 1, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.300, i32 0, i32 0), i8* noundef %6) #20, !dbg !15713
  br label %10, !dbg !15716

7:                                                ; preds = %1
  %8 = tail call i8* @cJSON_Print(%struct.cJSON* noundef nonnull %2) #20, !dbg !15717
  call void @llvm.dbg.value(metadata i8* %8, metadata !15693, metadata !DIExpression()), !dbg !15708
  tail call void @cJSON_Delete(%struct.cJSON* noundef nonnull %2) #20, !dbg !15719
  %9 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15720
  tail call void (i8*, i8*, i32, i32, i8*, ...) %9(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.doit, i32 0, i32 0), i32 noundef 60, i32 noundef 1, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef %8) #20, !dbg !15720
  tail call void @cJSON_free(i8* noundef %8) #20, !dbg !15722
  br label %10, !dbg !15723

10:                                               ; preds = %7, %4
  %11 = phi i32 [ 0, %7 ], [ 1, %4 ], !dbg !15724
  ret i32 %11, !dbg !15725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @create_objects() local_unnamed_addr #0 !dbg !15726 {
  %1 = alloca [7 x i8*], align 4
  %2 = alloca [3 x [3 x i32]], align 4
  %3 = alloca [4 x i32], align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !15735, metadata !DIExpression()), !dbg !15755
  %4 = tail call %struct.cJSON* @cJSON_CreateObject() #20, !dbg !15756
  call void @llvm.dbg.value(metadata %struct.cJSON* %4, metadata !15728, metadata !DIExpression()), !dbg !15755
  %5 = tail call %struct.cJSON* @cJSON_CreateString(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.302, i32 0, i32 0)) #20, !dbg !15757
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %4, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.303, i32 0, i32 0), %struct.cJSON* noundef %5) #20, !dbg !15758
  %6 = tail call %struct.cJSON* @cJSON_CreateObject() #20, !dbg !15759
  call void @llvm.dbg.value(metadata %struct.cJSON* %6, metadata !15729, metadata !DIExpression()), !dbg !15755
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %4, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.304, i32 0, i32 0), %struct.cJSON* noundef %6) #20, !dbg !15760
  %7 = tail call %struct.cJSON* @cJSON_CreateString(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.305, i32 0, i32 0)) #20, !dbg !15761
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %6, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.306, i32 0, i32 0), %struct.cJSON* noundef %7) #20, !dbg !15761
  %8 = tail call %struct.cJSON* @cJSON_CreateNumber(double noundef 1.920000e+03) #20, !dbg !15762
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %6, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.307, i32 0, i32 0), %struct.cJSON* noundef %8) #20, !dbg !15762
  %9 = tail call %struct.cJSON* @cJSON_CreateNumber(double noundef 1.080000e+03) #20, !dbg !15763
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %6, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.308, i32 0, i32 0), %struct.cJSON* noundef %9) #20, !dbg !15763
  %10 = tail call %struct.cJSON* @cJSON_CreateFalse() #20, !dbg !15764
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %6, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.309, i32 0, i32 0), %struct.cJSON* noundef %10) #20, !dbg !15764
  %11 = tail call %struct.cJSON* @cJSON_CreateNumber(double noundef 2.400000e+01) #20, !dbg !15765
  tail call void @cJSON_AddItemToObject(%struct.cJSON* noundef %6, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.310, i32 0, i32 0), %struct.cJSON* noundef %11) #20, !dbg !15765
  %12 = tail call i8* @cJSON_Print(%struct.cJSON* noundef %4) #20, !dbg !15766
  call void @llvm.dbg.value(metadata i8* %12, metadata !15733, metadata !DIExpression()), !dbg !15755
  tail call void @cJSON_Delete(%struct.cJSON* noundef %4) #20, !dbg !15767
  %13 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15768
  tail call void (i8*, i8*, i32, i32, i8*, ...) %13(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.create_objects, i32 0, i32 0), i32 noundef 93, i32 noundef 1, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef %12) #20, !dbg !15768
  tail call void @cJSON_free(i8* noundef %12) #20, !dbg !15770
  %14 = bitcast [7 x i8*]* %1 to i8*, !dbg !15771
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %14) #19, !dbg !15771
  call void @llvm.dbg.declare(metadata [7 x i8*]* %1, metadata !15736, metadata !DIExpression()), !dbg !15772
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(28) %14, i8* noundef nonnull align 4 dereferenceable(28) bitcast ([7 x i8*]* @__const.create_objects.strings to i8*), i32 28, i1 false), !dbg !15772
  %15 = getelementptr inbounds [7 x i8*], [7 x i8*]* %1, i32 0, i32 0, !dbg !15773
  %16 = call %struct.cJSON* @cJSON_CreateStringArray(i8** noundef nonnull %15, i32 noundef 7) #20, !dbg !15774
  call void @llvm.dbg.value(metadata %struct.cJSON* %16, metadata !15728, metadata !DIExpression()), !dbg !15755
  %17 = call i8* @cJSON_Print(%struct.cJSON* noundef %16) #20, !dbg !15775
  call void @llvm.dbg.value(metadata i8* %17, metadata !15733, metadata !DIExpression()), !dbg !15755
  call void @cJSON_Delete(%struct.cJSON* noundef %16) #20, !dbg !15776
  %18 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15777
  call void (i8*, i8*, i32, i32, i8*, ...) %18(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.create_objects, i32 0, i32 0), i32 noundef 102, i32 noundef 1, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef %17) #20, !dbg !15777
  call void @cJSON_free(i8* noundef %17) #20, !dbg !15779
  %19 = bitcast [3 x [3 x i32]]* %2 to i8*, !dbg !15780
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %19) #19, !dbg !15780
  call void @llvm.dbg.declare(metadata [3 x [3 x i32]]* %2, metadata !15738, metadata !DIExpression()), !dbg !15781
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(36) %19, i8 0, i32 32, i1 false), !dbg !15781
  %20 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %2, i32 0, i32 0, i32 1, !dbg !15781
  store i32 -1, i32* %20, align 4, !dbg !15781
  %21 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %2, i32 0, i32 1, i32 0, !dbg !15781
  store i32 1, i32* %21, align 4, !dbg !15781
  %22 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %2, i32 0, i32 2, i32 2, !dbg !15781
  store i32 1, i32* %22, align 4, !dbg !15781
  %23 = call %struct.cJSON* @cJSON_CreateArray() #20, !dbg !15782
  call void @llvm.dbg.value(metadata %struct.cJSON* %23, metadata !15728, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata i32 0, metadata !15734, metadata !DIExpression()), !dbg !15755
  br label %24, !dbg !15783

24:                                               ; preds = %0, %24
  %25 = phi i32 [ 0, %0 ], [ %28, %24 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !15734, metadata !DIExpression()), !dbg !15755
  %26 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %2, i32 0, i32 %25, i32 0, !dbg !15785
  %27 = call %struct.cJSON* @cJSON_CreateIntArray(i32* noundef nonnull %26, i32 noundef 3) #20, !dbg !15788
  call void @cJSON_AddItemToArray(%struct.cJSON* noundef %23, %struct.cJSON* noundef %27) #20, !dbg !15789
  %28 = add nuw nsw i32 %25, 1, !dbg !15790
  call void @llvm.dbg.value(metadata i32 %28, metadata !15734, metadata !DIExpression()), !dbg !15755
  %29 = icmp eq i32 %28, 3, !dbg !15791
  br i1 %29, label %30, label %24, !dbg !15783, !llvm.loop !15792

30:                                               ; preds = %24
  %31 = call i8* @cJSON_Print(%struct.cJSON* noundef %23) #20, !dbg !15794
  call void @llvm.dbg.value(metadata i8* %31, metadata !15733, metadata !DIExpression()), !dbg !15755
  call void @cJSON_Delete(%struct.cJSON* noundef %23) #20, !dbg !15795
  %32 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15796
  call void (i8*, i8*, i32, i32, i8*, ...) %32(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.create_objects, i32 0, i32 0), i32 noundef 115, i32 noundef 1, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef %31) #20, !dbg !15796
  call void @cJSON_free(i8* noundef %31) #20, !dbg !15798
  %33 = bitcast [4 x i32]* %3 to i8*, !dbg !15799
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #19, !dbg !15799
  call void @llvm.dbg.declare(metadata [4 x i32]* %3, metadata !15741, metadata !DIExpression()), !dbg !15800
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %33, i8* noundef nonnull align 4 dereferenceable(16) bitcast ([4 x i32]* @__const.create_objects.ids to i8*), i32 16, i1 false), !dbg !15800
  %34 = call %struct.cJSON* @cJSON_CreateObject() #20, !dbg !15801
  call void @llvm.dbg.value(metadata %struct.cJSON* %34, metadata !15728, metadata !DIExpression()), !dbg !15755
  %35 = call %struct.cJSON* @cJSON_CreateObject() #20, !dbg !15802
  call void @llvm.dbg.value(metadata %struct.cJSON* %35, metadata !15730, metadata !DIExpression()), !dbg !15755
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %34, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.311, i32 0, i32 0), %struct.cJSON* noundef %35) #20, !dbg !15803
  %36 = call %struct.cJSON* @cJSON_CreateNumber(double noundef 8.000000e+02) #20, !dbg !15804
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %35, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.312, i32 0, i32 0), %struct.cJSON* noundef %36) #20, !dbg !15804
  %37 = call %struct.cJSON* @cJSON_CreateNumber(double noundef 6.000000e+02) #20, !dbg !15805
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %35, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.313, i32 0, i32 0), %struct.cJSON* noundef %37) #20, !dbg !15805
  %38 = call %struct.cJSON* @cJSON_CreateString(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.314, i32 0, i32 0)) #20, !dbg !15806
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %35, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.315, i32 0, i32 0), %struct.cJSON* noundef %38) #20, !dbg !15806
  %39 = call %struct.cJSON* @cJSON_CreateObject() #20, !dbg !15807
  call void @llvm.dbg.value(metadata %struct.cJSON* %39, metadata !15731, metadata !DIExpression()), !dbg !15755
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %35, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23.316, i32 0, i32 0), %struct.cJSON* noundef %39) #20, !dbg !15808
  %40 = call %struct.cJSON* @cJSON_CreateString(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25.317, i32 0, i32 0)) #20, !dbg !15809
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %39, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.318, i32 0, i32 0), %struct.cJSON* noundef %40) #20, !dbg !15809
  %41 = call %struct.cJSON* @cJSON_CreateNumber(double noundef 1.250000e+02) #20, !dbg !15810
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %39, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.313, i32 0, i32 0), %struct.cJSON* noundef %41) #20, !dbg !15810
  %42 = call %struct.cJSON* @cJSON_CreateString(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.319, i32 0, i32 0)) #20, !dbg !15811
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %39, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.312, i32 0, i32 0), %struct.cJSON* noundef %42) #20, !dbg !15811
  %43 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i32 0, i32 0, !dbg !15812
  %44 = call %struct.cJSON* @cJSON_CreateIntArray(i32* noundef nonnull %43, i32 noundef 4) #20, !dbg !15813
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %35, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.320, i32 0, i32 0), %struct.cJSON* noundef %44) #20, !dbg !15814
  %45 = call i8* @cJSON_Print(%struct.cJSON* noundef %34) #20, !dbg !15815
  call void @llvm.dbg.value(metadata i8* %45, metadata !15733, metadata !DIExpression()), !dbg !15755
  call void @cJSON_Delete(%struct.cJSON* noundef %34) #20, !dbg !15816
  %46 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15817
  call void (i8*, i8*, i32, i32, i8*, ...) %46(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.create_objects, i32 0, i32 0), i32 noundef 133, i32 noundef 1, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef %45) #20, !dbg !15817
  call void @cJSON_free(i8* noundef %45) #20, !dbg !15819
  call void @llvm.dbg.declare(metadata [2 x %struct.record]* @__const.create_objects.fields, metadata !15743, metadata !DIExpression()), !dbg !15820
  %47 = call %struct.cJSON* @cJSON_CreateArray() #20, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.cJSON* %47, metadata !15728, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata i32 0, metadata !15734, metadata !DIExpression()), !dbg !15755
  br label %48, !dbg !15822

48:                                               ; preds = %30, %48
  %49 = phi i1 [ true, %30 ], [ false, %48 ]
  %50 = phi i32 [ 0, %30 ], [ 1, %48 ]
  call void @llvm.dbg.value(metadata i32 %50, metadata !15734, metadata !DIExpression()), !dbg !15755
  %51 = call %struct.cJSON* @cJSON_CreateObject() #20, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.cJSON* %51, metadata !15732, metadata !DIExpression()), !dbg !15755
  call void @cJSON_AddItemToArray(%struct.cJSON* noundef %47, %struct.cJSON* noundef %51) #20, !dbg !15827
  %52 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 0, !dbg !15828
  %53 = load i8*, i8** %52, align 8, !dbg !15828
  %54 = call %struct.cJSON* @cJSON_CreateString(i8* noundef %53) #20, !dbg !15828
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36.321, i32 0, i32 0), %struct.cJSON* noundef %54) #20, !dbg !15828
  %55 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 1, !dbg !15829
  %56 = load double, double* %55, align 8, !dbg !15829
  %57 = call %struct.cJSON* @cJSON_CreateNumber(double noundef %56) #20, !dbg !15829
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37.322, i32 0, i32 0), %struct.cJSON* noundef %57) #20, !dbg !15829
  %58 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 2, !dbg !15830
  %59 = load double, double* %58, align 8, !dbg !15830
  %60 = call %struct.cJSON* @cJSON_CreateNumber(double noundef %59) #20, !dbg !15830
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38.323, i32 0, i32 0), %struct.cJSON* noundef %60) #20, !dbg !15830
  %61 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 3, !dbg !15831
  %62 = load i8*, i8** %61, align 8, !dbg !15831
  %63 = call %struct.cJSON* @cJSON_CreateString(i8* noundef %62) #20, !dbg !15831
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39.324, i32 0, i32 0), %struct.cJSON* noundef %63) #20, !dbg !15831
  %64 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 4, !dbg !15832
  %65 = load i8*, i8** %64, align 4, !dbg !15832
  %66 = call %struct.cJSON* @cJSON_CreateString(i8* noundef %65) #20, !dbg !15832
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40.325, i32 0, i32 0), %struct.cJSON* noundef %66) #20, !dbg !15832
  %67 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 5, !dbg !15833
  %68 = load i8*, i8** %67, align 8, !dbg !15833
  %69 = call %struct.cJSON* @cJSON_CreateString(i8* noundef %68) #20, !dbg !15833
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41.326, i32 0, i32 0), %struct.cJSON* noundef %69) #20, !dbg !15833
  %70 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 6, !dbg !15834
  %71 = load i8*, i8** %70, align 4, !dbg !15834
  %72 = call %struct.cJSON* @cJSON_CreateString(i8* noundef %71) #20, !dbg !15834
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42.327, i32 0, i32 0), %struct.cJSON* noundef %72) #20, !dbg !15834
  %73 = getelementptr inbounds [2 x %struct.record], [2 x %struct.record]* @__const.create_objects.fields, i32 0, i32 %50, i32 7, !dbg !15835
  %74 = load i8*, i8** %73, align 8, !dbg !15835
  %75 = call %struct.cJSON* @cJSON_CreateString(i8* noundef %74) #20, !dbg !15835
  call void @cJSON_AddItemToObject(%struct.cJSON* noundef %51, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43.328, i32 0, i32 0), %struct.cJSON* noundef %75) #20, !dbg !15835
  call void @llvm.dbg.value(metadata i32 %50, metadata !15734, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !15755
  br i1 %49, label %48, label %76, !dbg !15822, !llvm.loop !15836

76:                                               ; preds = %48
  %77 = call i8* @cJSON_Print(%struct.cJSON* noundef %47) #20, !dbg !15838
  call void @llvm.dbg.value(metadata i8* %77, metadata !15733, metadata !DIExpression()), !dbg !15755
  call void @cJSON_Delete(%struct.cJSON* noundef %47) #20, !dbg !15839
  %78 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_cjson_example, i32 0, i32 3), align 4, !dbg !15840
  call void (i8*, i8*, i32, i32, i8*, ...) %78(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_cjson_example to i8*), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.create_objects, i32 0, i32 0), i32 noundef 158, i32 noundef 1, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef %77) #20, !dbg !15840
  call void @cJSON_free(i8* noundef %77) #20, !dbg !15842
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #19, !dbg !15843
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %19) #19, !dbg !15843
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %14) #19, !dbg !15843
  ret i32 0, !dbg !15844
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #17

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #18

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cjson_test() local_unnamed_addr #0 !dbg !15845 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15847, metadata !DIExpression()), !dbg !15848
  %1 = tail call i32 @doit(i8* noundef getelementptr inbounds ([153 x i8], [153 x i8]* @text1, i32 0, i32 0)) #22, !dbg !15849
  call void @llvm.dbg.value(metadata i32 %1, metadata !15847, metadata !DIExpression()), !dbg !15848
  %2 = tail call i32 @doit(i8* noundef getelementptr inbounds ([79 x i8], [79 x i8]* @text2, i32 0, i32 0)) #22, !dbg !15850
  %3 = add nsw i32 %2, %1, !dbg !15851
  call void @llvm.dbg.value(metadata i32 %3, metadata !15847, metadata !DIExpression()), !dbg !15848
  %4 = tail call i32 @doit(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @text3, i32 0, i32 0)) #22, !dbg !15852
  %5 = add nsw i32 %3, %4, !dbg !15853
  call void @llvm.dbg.value(metadata i32 %5, metadata !15847, metadata !DIExpression()), !dbg !15848
  %6 = tail call i32 @doit(i8* noundef getelementptr inbounds ([330 x i8], [330 x i8]* @text4, i32 0, i32 0)) #22, !dbg !15854
  %7 = add nsw i32 %5, %6, !dbg !15855
  call void @llvm.dbg.value(metadata i32 %7, metadata !15847, metadata !DIExpression()), !dbg !15848
  %8 = tail call i32 @doit(i8* noundef getelementptr inbounds ([442 x i8], [442 x i8]* @text5, i32 0, i32 0)) #22, !dbg !15856
  %9 = add nsw i32 %7, %8, !dbg !15857
  call void @llvm.dbg.value(metadata i32 %9, metadata !15847, metadata !DIExpression()), !dbg !15848
  %10 = tail call i32 @create_objects() #22, !dbg !15858
  call void @llvm.dbg.value(metadata i32 %9, metadata !15847, metadata !DIExpression()), !dbg !15848
  ret i32 %9, !dbg !15859
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { naked noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { argmemonly nofree nounwind willreturn }
attributes #18 = { argmemonly nofree nounwind willreturn writeonly }
attributes #19 = { nounwind }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #22 = { nobuiltin optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !83, !1861, !1871, !164, !183, !1916, !280, !292, !342, !379, !462, !515, !1919, !607, !646, !762, !812, !1923, !838, !1926, !985, !1048, !1113, !1136, !1952, !1166, !1963, !1190, !1966, !1374, !1506, !1969, !1528, !1542, !1791, !1832, !1802, !1847}
!llvm.ident = !{!1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974, !1974}
!llvm.module.flags = !{!1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2, file: !3, line: 74, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !50, globals: !63, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!4 = !{!5, !20, !28, !35, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!10 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!11 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!12 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!13 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!14 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!15 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!16 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!17 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!18 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!19 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 387, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!24 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!25 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!26 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!27 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 666, baseType: !30, size: 32, elements: !31)
!29 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!30 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!33 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!34 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 73, baseType: !30, size: 32, elements: !36)
!36 = !{!37, !38, !39, !40, !41, !42, !43}
!37 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!38 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!39 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!40 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!41 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!42 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!43 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 123, baseType: !30, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!48 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!49 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!50 = !{!51, !52, !59}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !54)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !55, line: 24, baseType: !56)
!55 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !57, line: 43, baseType: !58)
!57 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!58 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !55, line: 48, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !57, line: 79, baseType: !30)
!63 = !{!64, !0, !67, !70, !72, !74, !76, !78}
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !2, file: !3, line: 72, type: !66, isLocal: false, isDefinition: true)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !6, line: 64, baseType: !5)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2, file: !3, line: 75, type: !69, isLocal: false, isDefinition: true)
!69 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !2, file: !3, line: 77, type: !61, isLocal: false, isDefinition: true)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "suspend_time", scope: !2, file: !3, line: 82, type: !61, isLocal: false, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !2, file: !3, line: 83, type: !61, isLocal: false, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !2, file: !3, line: 84, type: !61, isLocal: false, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !2, file: !3, line: 78, type: !7, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !83, file: !84, line: 71, type: !158, isLocal: false, isDefinition: true)
!83 = distinct !DICompileUnit(language: DW_LANG_C99, file: !84, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !85, retainedTypes: !136, globals: !141, splitDebugInlining: false, nameTableKind: None)
!84 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!85 = !{!86, !91}
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 121, baseType: !30, size: 32, elements: !88)
!87 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!90 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !92, line: 47, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!94 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!95 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!96 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!97 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!98 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!99 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!100 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!101 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!102 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!103 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!104 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!105 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!106 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!107 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!108 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!109 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!110 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!111 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!112 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!113 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!114 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!115 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!116 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!117 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!118 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!119 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!120 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!121 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!122 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!123 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!124 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!125 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!126 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!127 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!128 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!129 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!130 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!131 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!132 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!133 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!134 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!135 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!136 = !{!137, !140}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !87, line: 116, baseType: !30)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !92, line: 95, baseType: !91)
!141 = !{!81, !142}
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !83, file: !84, line: 67, type: !144, isLocal: true, isDefinition: true)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !145, line: 111, baseType: !146)
!145 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 109, size: 96, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !146, file: !145, line: 110, baseType: !149, size: 96)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !145, line: 106, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 102, size: 96, elements: !151)
!151 = !{!152, !156, !157}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !150, file: !145, line: 103, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DISubroutineType(types: !155)
!155 = !{null}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !150, file: !145, line: 104, baseType: !153, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !150, file: !145, line: 105, baseType: !153, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !87, line: 62, baseType: !30)
!160 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!161 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !164, file: !165, line: 58, type: !30, isLocal: false, isDefinition: true)
!164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !166, retainedTypes: !173, globals: !180, splitDebugInlining: false, nameTableKind: None)
!165 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!166 = !{!167}
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 45, baseType: !30, size: 32, elements: !168)
!168 = !{!169, !170, !171, !172}
!169 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!170 = !DIEnumerator(name: "SPI", value: 1)
!171 = !DIEnumerator(name: "SPIQ", value: 2)
!172 = !DIEnumerator(name: "QPI", value: 3)
!173 = !{!137, !174, !30, !175, !177, !178}
!174 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !30)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !58)
!180 = !{!162}
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !183, file: !184, line: 67, type: !30, isLocal: false, isDefinition: true)
!183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !185, retainedTypes: !192, globals: !211, splitDebugInlining: false, nameTableKind: None)
!184 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!185 = !{!35, !5, !167, !186}
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 66, baseType: !7, size: 32, elements: !187)
!187 = !{!188, !189, !190, !191}
!188 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!189 = !DIEnumerator(name: "FLASH_READY", value: 0)
!190 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!191 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!192 = !{!193, !195, !196, !30, !51, !210, !61, !139}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!195 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !6, line: 137, size: 192, elements: !199)
!199 = !{!200, !203, !204, !205, !206, !207, !208, !209}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !198, file: !6, line: 138, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!202 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !198, file: !6, line: 139, baseType: !58, size: 8, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !198, file: !6, line: 140, baseType: !195, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !198, file: !6, line: 141, baseType: !195, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !198, file: !6, line: 142, baseType: !30, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !198, file: !6, line: 144, baseType: !58, size: 8, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !198, file: !6, line: 145, baseType: !58, size: 8, offset: 168)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !198, file: !6, line: 146, baseType: !58, size: 8, offset: 176)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 32)
!211 = !{!181, !212, !217, !222, !227, !230, !232, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !264, !266, !268, !270, !273}
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !183, file: !184, line: 70, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 96, elements: !215)
!215 = !{!216}
!216 = !DISubrange(count: 12)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !183, file: !184, line: 73, type: !219, isLocal: false, isDefinition: true)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 32, elements: !220)
!220 = !{!221}
!221 = !DISubrange(count: 4)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !183, file: !184, line: 76, type: !224, isLocal: false, isDefinition: true)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 72, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 9)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !183, file: !184, line: 79, type: !229, isLocal: false, isDefinition: true)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32, elements: !220)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !183, file: !184, line: 82, type: !229, isLocal: false, isDefinition: true)
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !183, file: !184, line: 87, type: !234, isLocal: false, isDefinition: true)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, elements: !235)
!235 = !{!236}
!236 = !DISubrange(count: 8)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !183, file: !184, line: 91, type: !234, isLocal: false, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !183, file: !184, line: 95, type: !234, isLocal: false, isDefinition: true)
!241 = !DIGlobalVariableExpression(var: !242, expr: !DIExpression())
!242 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !183, file: !184, line: 100, type: !224, isLocal: false, isDefinition: true)
!243 = !DIGlobalVariableExpression(var: !244, expr: !DIExpression())
!244 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !183, file: !184, line: 104, type: !224, isLocal: false, isDefinition: true)
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !183, file: !184, line: 108, type: !224, isLocal: false, isDefinition: true)
!247 = !DIGlobalVariableExpression(var: !248, expr: !DIExpression())
!248 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !183, file: !184, line: 112, type: !234, isLocal: false, isDefinition: true)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !183, file: !184, line: 115, type: !234, isLocal: false, isDefinition: true)
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !183, file: !184, line: 119, type: !234, isLocal: false, isDefinition: true)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !183, file: !184, line: 123, type: !234, isLocal: false, isDefinition: true)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !183, file: !184, line: 126, type: !234, isLocal: false, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !183, file: !184, line: 130, type: !234, isLocal: false, isDefinition: true)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !183, file: !184, line: 135, type: !261, isLocal: false, isDefinition: true)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 56, elements: !262)
!262 = !{!263}
!263 = !DISubrange(count: 7)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !183, file: !184, line: 138, type: !261, isLocal: false, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !183, file: !184, line: 142, type: !196, isLocal: false, isDefinition: true)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !183, file: !184, line: 161, type: !7, isLocal: false, isDefinition: true)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !183, file: !184, line: 162, type: !272, isLocal: false, isDefinition: true)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !6, line: 81, baseType: !35)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "chips_data", scope: !183, file: !184, line: 144, type: !275, isLocal: true, isDefinition: true)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 2496, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 13)
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !280, file: !281, line: 43, type: !61, isLocal: true, isDefinition: true)
!280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !281, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !282, globals: !287, splitDebugInlining: false, nameTableKind: None)
!281 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!282 = !{!175, !159, !59, !283, !284, !286}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !87, line: 133, baseType: !30)
!287 = !{!278, !288}
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !280, file: !281, line: 44, type: !61, isLocal: true, isDefinition: true)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !292, file: !293, line: 54, type: !61, isLocal: false, isDefinition: true)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !294, retainedTypes: !318, globals: !326, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!294 = !{!91, !295, !301}
!295 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !296, line: 71, baseType: !30, size: 32, elements: !297)
!296 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!297 = !{!298, !299, !300}
!298 = !DIEnumerator(name: "UART_PORT0", value: 0)
!299 = !DIEnumerator(name: "UART_PORT1", value: 1)
!300 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!301 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !302, line: 129, baseType: !30, size: 32, elements: !303)
!302 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!303 = !{!304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!304 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!305 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!306 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!307 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!308 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!309 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!310 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!311 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!312 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!313 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!314 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!315 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!316 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!317 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!318 = !{!175, !61, !319, !321, !323, !324, !159}
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !87, line: 113, baseType: !322)
!322 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !87, line: 59, baseType: !58)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !323)
!326 = !{!327, !335, !290}
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !292, file: !293, line: 57, type: !329, isLocal: false, isDefinition: true)
!329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !330, size: 64, elements: !333)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!333 = !{!334}
!334 = !DISubrange(count: 2)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !292, file: !293, line: 58, type: !337, isLocal: false, isDefinition: true)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 64, elements: !333)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !92, line: 97, baseType: !140)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "log_control_block_hal", scope: !342, file: !343, line: 127, type: !357, isLocal: false, isDefinition: true)
!342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !344, globals: !356, splitDebugInlining: false, nameTableKind: None)
!343 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!344 = !{!345, !350}
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !346, line: 65, baseType: !30, size: 32, elements: !347)
!346 = !DIFile(filename: "../../../../../kernel/service/inc/syslog.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!347 = !{!348, !349}
!348 = !DIEnumerator(name: "DEBUG_LOG_ON", value: 0)
!349 = !DIEnumerator(name: "DEBUG_LOG_OFF", value: 1)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !346, line: 74, baseType: !30, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355}
!352 = !DIEnumerator(name: "PRINT_LEVEL_DEBUG", value: 0)
!353 = !DIEnumerator(name: "PRINT_LEVEL_INFO", value: 1)
!354 = !DIEnumerator(name: "PRINT_LEVEL_WARNING", value: 2)
!355 = !DIEnumerator(name: "PRINT_LEVEL_ERROR", value: 3)
!356 = !{!340}
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !359)
!359 = !{!360, !361, !363, !365, !370}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !358, file: !346, line: 90, baseType: !331, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !358, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_switch_t", file: !346, line: 68, baseType: !345)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !358, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "print_level_t", file: !346, line: 79, baseType: !350)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !358, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_print_t", file: !346, line: 82, baseType: !367)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DISubroutineType(types: !369)
!369 = !{null, !51, !331, !7, !364, !331, null}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !358, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_dump_buffer_t", file: !346, line: 83, baseType: !372)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!373 = !DISubroutineType(types: !374)
!374 = !{null, !51, !331, !7, !364, !375, !7, !331, null}
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !379, file: !380, line: 51, type: !459, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !381, retainedTypes: !428, globals: !458, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!381 = !{!382, !393, !412, !419}
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 163, baseType: !7, size: 32, elements: !384)
!383 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!384 = !{!385, !386, !387, !388, !389, !390, !391, !392}
!385 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!386 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!387 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!388 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!389 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!390 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!391 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!392 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!393 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 186, baseType: !30, size: 32, elements: !394)
!394 = !{!395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411}
!395 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!396 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!397 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!398 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!399 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!400 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!401 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!402 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!403 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!404 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!405 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!406 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!407 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!408 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!409 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!410 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!411 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 176, baseType: !30, size: 32, elements: !413)
!413 = !{!414, !415, !416, !417, !418}
!414 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!415 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!416 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!417 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!418 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!419 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !420, line: 99, baseType: !30, size: 32, elements: !421)
!420 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!421 = !{!422, !423, !424, !425, !426, !427}
!422 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!423 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!424 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!425 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!426 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!427 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!428 = !{!429, !51}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !431, line: 72, baseType: !432)
!431 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !431, line: 56, size: 525312, elements: !433)
!433 = !{!434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !448, !449, !453, !457}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !432, file: !431, line: 57, baseType: !60, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !432, file: !431, line: 58, baseType: !60, size: 32, offset: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !432, file: !431, line: 59, baseType: !60, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !432, file: !431, line: 60, baseType: !60, size: 32, offset: 96)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !432, file: !431, line: 61, baseType: !60, size: 32, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !432, file: !431, line: 62, baseType: !60, size: 32, offset: 160)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !432, file: !431, line: 63, baseType: !60, size: 32, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !432, file: !431, line: 64, baseType: !60, size: 32, offset: 224)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !432, file: !431, line: 65, baseType: !60, size: 32, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !432, file: !431, line: 66, baseType: !60, size: 32, offset: 288)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !432, file: !431, line: 67, baseType: !445, size: 32, offset: 320)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 1)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !432, file: !431, line: 68, baseType: !60, size: 32, offset: 352)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !432, file: !431, line: 69, baseType: !450, size: 523904, offset: 384)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !451)
!451 = !{!452}
!452 = !DISubrange(count: 16372)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !432, file: !431, line: 70, baseType: !454, size: 512, offset: 524288)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !455)
!455 = !{!456}
!456 = !DISubrange(count: 16)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !432, file: !431, line: 71, baseType: !454, size: 512, offset: 524800)
!458 = !{!377}
!459 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !69)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !462, file: !463, line: 48, type: !497, isLocal: false, isDefinition: true)
!462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !463, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !464, splitDebugInlining: false, nameTableKind: None)
!463 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!464 = !{!460, !465, !468}
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !462, file: !463, line: 49, type: !467, isLocal: false, isDefinition: true)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !420, line: 66, baseType: !61)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !462, file: !463, line: 50, type: !470, isLocal: false, isDefinition: true)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 1024, elements: !455)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !420, line: 90, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !420, line: 87, size: 64, elements: !473)
!473 = !{!474, !487}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !472, file: !420, line: 88, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !420, line: 77, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 68, size: 32, elements: !477)
!477 = !{!478, !486}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !476, file: !420, line: 75, baseType: !479, size: 32)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !476, file: !420, line: 69, size: 32, elements: !480)
!480 = !{!481, !482, !483, !484, !485}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !479, file: !420, line: 70, baseType: !61, size: 5, flags: DIFlagBitField, extraData: i64 0)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !479, file: !420, line: 71, baseType: !61, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !479, file: !420, line: 72, baseType: !61, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !479, file: !420, line: 73, baseType: !61, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !479, file: !420, line: 74, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !476, file: !420, line: 76, baseType: !61, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !472, file: !420, line: 89, baseType: !488, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !420, line: 85, baseType: !489)
!489 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 79, size: 32, elements: !490)
!490 = !{!491, !496}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !489, file: !420, line: 83, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !420, line: 80, size: 32, elements: !493)
!493 = !{!494, !495}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !492, file: !420, line: 81, baseType: !61, size: 12, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !492, file: !420, line: 82, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !489, file: !420, line: 84, baseType: !61, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !420, line: 64, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 51, size: 32, elements: !499)
!499 = !{!500, !512}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !498, file: !420, line: 62, baseType: !501, size: 32)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !498, file: !420, line: 52, size: 32, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !509, !510, !511}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !501, file: !420, line: 53, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !501, file: !420, line: 54, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !501, file: !420, line: 55, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !501, file: !420, line: 56, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !501, file: !420, line: 57, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !501, file: !420, line: 58, baseType: !61, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !501, file: !420, line: 59, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !501, file: !420, line: 60, baseType: !61, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !501, file: !420, line: 61, baseType: !61, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !498, file: !420, line: 63, baseType: !61, size: 32)
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !515, file: !516, line: 53, type: !594, isLocal: false, isDefinition: true)
!515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !517, retainedTypes: !526, globals: !593, splitDebugInlining: false, nameTableKind: None)
!516 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!517 = !{!518, !91}
!518 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !519, line: 152, baseType: !7, size: 32, elements: !520)
!519 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!520 = !{!521, !522, !523, !524, !525}
!521 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!522 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!523 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!524 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!525 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!526 = !{!339, !51, !61, !527, !529, !560}
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !55, line: 44, baseType: !528)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !57, line: 77, baseType: !7)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !531, line: 378, baseType: !532)
!531 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 363, size: 28704, elements: !533)
!533 = !{!534, !536, !540, !541, !542, !543, !544, !545, !546, !547, !551, !555, !559}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !532, file: !531, line: 365, baseType: !535, size: 256)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !235)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !532, file: !531, line: 366, baseType: !537, size: 768, offset: 256)
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !538)
!538 = !{!539}
!539 = !DISubrange(count: 24)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !532, file: !531, line: 367, baseType: !535, size: 256, offset: 1024)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !532, file: !531, line: 368, baseType: !537, size: 768, offset: 1280)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !532, file: !531, line: 369, baseType: !535, size: 256, offset: 2048)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !532, file: !531, line: 370, baseType: !537, size: 768, offset: 2304)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !532, file: !531, line: 371, baseType: !535, size: 256, offset: 3072)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !532, file: !531, line: 372, baseType: !537, size: 768, offset: 3328)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !532, file: !531, line: 373, baseType: !535, size: 256, offset: 4096)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !532, file: !531, line: 374, baseType: !548, size: 1792, offset: 4352)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !549)
!549 = !{!550}
!550 = !DISubrange(count: 56)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !532, file: !531, line: 375, baseType: !552, size: 1920, offset: 6144)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1920, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 240)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !532, file: !531, line: 376, baseType: !556, size: 20608, offset: 8064)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 644)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !532, file: !531, line: 377, baseType: !60, size: 32, offset: 28672)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !563)
!563 = !{!564, !566, !567, !568, !569, !570, !571, !573, !574, !575, !576, !577, !578, !579, !580, !582, !583, !584, !586, !590, !592}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !562, file: !531, line: 397, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !562, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !562, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !562, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !562, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !562, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !562, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 96, elements: !215)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !562, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !562, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !562, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !562, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !562, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !562, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !562, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !562, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 64, elements: !333)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !562, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !562, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !562, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 128, elements: !220)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !562, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 160, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 5)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !562, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !588)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !562, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!593 = !{!513}
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 6144, elements: !603)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !516, line: 50, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !516, line: 47, size: 64, elements: !597)
!597 = !{!598, !602}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !596, file: !516, line: 48, baseType: !599, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DISubroutineType(types: !601)
!601 = !{null, !339}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !596, file: !516, line: 49, baseType: !61, size: 32, offset: 32)
!603 = !{!604}
!604 = !DISubrange(count: 96)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !607, file: !608, line: 61, type: !627, isLocal: true, isDefinition: true)
!607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !609, retainedTypes: !625, globals: !626, splitDebugInlining: false, nameTableKind: None)
!608 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!609 = !{!20, !610, !617, !28, !621}
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 657, baseType: !30, size: 32, elements: !611)
!611 = !{!612, !613, !614, !615, !616}
!612 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!613 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!614 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!615 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!616 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 397, baseType: !30, size: 32, elements: !618)
!618 = !{!619, !620}
!619 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!620 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 380, baseType: !30, size: 32, elements: !622)
!622 = !{!623, !624}
!623 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!624 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!625 = !{!51, !61}
!626 = !{!605}
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 640, elements: !588)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !608, line: 55, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 51, size: 128, elements: !630)
!630 = !{!631, !633, !643}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !629, file: !608, line: 52, baseType: !632, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !21, line: 400, baseType: !617)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !629, file: !608, line: 53, baseType: !634, size: 64, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !608, line: 49, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 46, size: 64, elements: !636)
!636 = !{!637, !642}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !635, file: !608, line: 47, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !21, line: 371, baseType: !639)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DISubroutineType(types: !641)
!641 = !{null, !51}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !635, file: !608, line: 48, baseType: !51, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !629, file: !608, line: 54, baseType: !69, size: 8, offset: 96)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !646, file: !647, line: 80, type: !748, isLocal: true, isDefinition: true)
!646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !648, retainedTypes: !698, globals: !699, splitDebugInlining: false, nameTableKind: None)
!647 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!648 = !{!295, !649, !657, !662, !678, !684, !688, !301, !693}
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 345, baseType: !7, size: 32, elements: !651)
!650 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!651 = !{!652, !653, !654, !655, !656}
!652 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!653 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!654 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!655 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!656 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 109, baseType: !30, size: 32, elements: !658)
!658 = !{!659, !660, !661}
!659 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!660 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!661 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!662 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 302, baseType: !30, size: 32, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677}
!664 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!665 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!666 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!667 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!668 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!669 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!670 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!671 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!672 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!673 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!674 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!675 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!676 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!677 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!678 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 321, baseType: !30, size: 32, elements: !679)
!679 = !{!680, !681, !682, !683}
!680 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!681 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!682 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!683 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 330, baseType: !30, size: 32, elements: !685)
!685 = !{!686, !687}
!686 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!687 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 337, baseType: !30, size: 32, elements: !689)
!689 = !{!690, !691, !692}
!690 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!691 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!692 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 355, baseType: !7, size: 32, elements: !694)
!694 = !{!695, !696, !697}
!695 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!696 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!698 = !{!201, !30, !51, !58, !202, !54}
!699 = !{!700, !743, !644, !746, !749}
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !646, file: !647, line: 77, type: !702, isLocal: true, isDefinition: true)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 1024, elements: !333)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !647, line: 75, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !647, line: 68, size: 512, elements: !705)
!705 = !{!706, !707, !719, !720, !731, !732}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !704, file: !647, line: 69, baseType: !69, size: 8)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !704, file: !647, line: 70, baseType: !708, size: 128, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !650, line: 378, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 373, size: 128, elements: !710)
!710 = !{!711, !713, !715, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !709, file: !650, line: 374, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !650, line: 317, baseType: !662)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !709, file: !650, line: 375, baseType: !714, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !650, line: 326, baseType: !678)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !709, file: !650, line: 376, baseType: !716, size: 32, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !650, line: 333, baseType: !684)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !709, file: !650, line: 377, baseType: !718, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !650, line: 341, baseType: !688)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !704, file: !647, line: 71, baseType: !69, size: 8, offset: 160)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !704, file: !647, line: 72, baseType: !721, size: 64, offset: 192)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !647, line: 66, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !647, line: 63, size: 64, elements: !723)
!723 = !{!724, !730}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !722, file: !647, line: 64, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !650, line: 410, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !729, !51}
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !650, line: 359, baseType: !693)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !722, file: !647, line: 65, baseType: !51, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !704, file: !647, line: 73, baseType: !69, size: 8, offset: 256)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !704, file: !647, line: 74, baseType: !733, size: 224, offset: 288)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !650, line: 390, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 382, size: 224, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !734, file: !650, line: 383, baseType: !210, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !734, file: !650, line: 384, baseType: !61, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !734, file: !650, line: 385, baseType: !61, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !734, file: !650, line: 386, baseType: !210, size: 32, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !734, file: !650, line: 387, baseType: !61, size: 32, offset: 128)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !734, file: !650, line: 388, baseType: !61, size: 32, offset: 160)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !734, file: !650, line: 389, baseType: !61, size: 32, offset: 192)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !646, file: !647, line: 82, type: !745, isLocal: true, isDefinition: true)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 16, elements: !333)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !646, file: !647, line: 81, type: !748, isLocal: true, isDefinition: true)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 16, elements: !333)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "func_tbl", scope: !751, file: !647, line: 536, type: !758, isLocal: true, isDefinition: true)
!751 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !647, file: !647, line: 534, type: !752, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !756)
!752 = !DISubroutineType(types: !753)
!753 = !{!754, !755}
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !302, line: 197, baseType: !153)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !29, line: 113, baseType: !657)
!756 = !{!757}
!757 = !DILocalVariable(name: "uart_port", arg: 1, scope: !751, file: !647, line: 534, type: !755)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 64, elements: !333)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "DWT_NUMCOMP", scope: !762, file: !763, line: 44, type: !7, isLocal: true, isDefinition: true)
!762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !764, retainedTypes: !773, globals: !809, splitDebugInlining: false, nameTableKind: None)
!763 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_dwt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!764 = !{!765}
!765 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !766, line: 42, baseType: !30, size: 32, elements: !767)
!766 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_dwt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!767 = !{!768, !769, !770, !771, !772}
!768 = !DIEnumerator(name: "COMP_DISABLE", value: 0)
!769 = !DIEnumerator(name: "WDE_INST", value: 4)
!770 = !DIEnumerator(name: "WDE_DATA_RO", value: 5)
!771 = !DIEnumerator(name: "WDE_DATA_WO", value: 6)
!772 = !DIEnumerator(name: "WDE_DATA_RW", value: 7)
!773 = !{!774, !801}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !531, line: 826, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 801, size: 736, elements: !777)
!777 = !{!778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !776, file: !531, line: 803, baseType: !60, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !776, file: !531, line: 804, baseType: !60, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !776, file: !531, line: 805, baseType: !60, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !776, file: !531, line: 806, baseType: !60, size: 32, offset: 96)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !776, file: !531, line: 807, baseType: !60, size: 32, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !776, file: !531, line: 808, baseType: !60, size: 32, offset: 160)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !776, file: !531, line: 809, baseType: !60, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !776, file: !531, line: 810, baseType: !565, size: 32, offset: 224)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !776, file: !531, line: 811, baseType: !60, size: 32, offset: 256)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !776, file: !531, line: 812, baseType: !60, size: 32, offset: 288)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !776, file: !531, line: 813, baseType: !60, size: 32, offset: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !776, file: !531, line: 814, baseType: !445, size: 32, offset: 352)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !776, file: !531, line: 815, baseType: !60, size: 32, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !776, file: !531, line: 816, baseType: !60, size: 32, offset: 416)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !776, file: !531, line: 817, baseType: !60, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !776, file: !531, line: 818, baseType: !445, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !776, file: !531, line: 819, baseType: !60, size: 32, offset: 512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !776, file: !531, line: 820, baseType: !60, size: 32, offset: 544)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !776, file: !531, line: 821, baseType: !60, size: 32, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !776, file: !531, line: 822, baseType: !445, size: 32, offset: 608)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !776, file: !531, line: 823, baseType: !60, size: 32, offset: 640)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !776, file: !531, line: 824, baseType: !60, size: 32, offset: 672)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !776, file: !531, line: 825, baseType: !60, size: 32, offset: 704)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoreDebug_Type", file: !531, line: 1304, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 1298, size: 128, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "DHCSR", scope: !803, file: !531, line: 1300, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DCRSR", scope: !803, file: !531, line: 1301, baseType: !60, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "DCRDR", scope: !803, file: !531, line: 1302, baseType: !60, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "DEMCR", scope: !803, file: !531, line: 1303, baseType: !60, size: 32, offset: 96)
!809 = !{!760}
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !812, file: !813, line: 164, type: !214, isLocal: false, isDefinition: true)
!812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !814, globals: !829, splitDebugInlining: false, nameTableKind: None)
!813 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!814 = !{!815, !51}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !818, line: 48, baseType: !819)
!818 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !818, line: 38, size: 192, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !827, !828}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !819, file: !818, line: 39, baseType: !201, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !819, file: !818, line: 40, baseType: !58, size: 8, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !819, file: !818, line: 41, baseType: !195, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !819, file: !818, line: 42, baseType: !195, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !819, file: !818, line: 43, baseType: !30, size: 32, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !819, file: !818, line: 45, baseType: !58, size: 8, offset: 160)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !819, file: !818, line: 46, baseType: !58, size: 8, offset: 168)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !819, file: !818, line: 47, baseType: !58, size: 8, offset: 176)
!829 = !{!810, !830, !832, !834}
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !812, file: !813, line: 167, type: !219, isLocal: false, isDefinition: true)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !812, file: !813, line: 170, type: !224, isLocal: false, isDefinition: true)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !812, file: !813, line: 174, type: !816, isLocal: false, isDefinition: true)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !838, file: !839, line: 208, type: !982, isLocal: false, isDefinition: true)
!838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !840, retainedTypes: !861, globals: !923, splitDebugInlining: false, nameTableKind: None)
!839 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!840 = !{!841, !846, !854}
!841 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !839, line: 122, baseType: !30, size: 32, elements: !842)
!842 = !{!843, !844, !845}
!843 = !DIEnumerator(name: "eNotWaitingNotification", value: 0)
!844 = !DIEnumerator(name: "eWaitingNotification", value: 1)
!845 = !DIEnumerator(name: "eNotified", value: 2)
!846 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !847, line: 112, baseType: !30, size: 32, elements: !848)
!847 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!848 = !{!849, !850, !851, !852, !853}
!849 = !DIEnumerator(name: "eRunning", value: 0)
!850 = !DIEnumerator(name: "eReady", value: 1)
!851 = !DIEnumerator(name: "eBlocked", value: 2)
!852 = !DIEnumerator(name: "eSuspended", value: 3)
!853 = !DIEnumerator(name: "eDeleted", value: 4)
!854 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !847, line: 122, baseType: !30, size: 32, elements: !855)
!855 = !{!856, !857, !858, !859, !860}
!856 = !DIEnumerator(name: "eNoAction", value: 0)
!857 = !DIEnumerator(name: "eSetBits", value: 1)
!858 = !DIEnumerator(name: "eIncrement", value: 2)
!859 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!860 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!861 = !{!862, !51, !864, !866, !61, !868, !869, !59, !870, !884, !905, !322, !210, !30, !919, !7, !331, !54}
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !863, line: 99, baseType: !195)
!863 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !55, line: 36, baseType: !865)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !57, line: 57, baseType: !322)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !863, line: 97, baseType: !61)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !847, line: 103, baseType: !51)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !863, line: 98, baseType: !174)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !839, line: 195, baseType: !872)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !839, line: 191, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !839, line: 134, size: 672, elements: !874)
!874 = !{!875, !878, !890, !891, !892, !893, !897, !898, !899, !900, !901, !902}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !873, file: !839, line: 136, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !867)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "xGenericListItem", scope: !873, file: !839, line: 143, baseType: !879, size: 160, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !881)
!880 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !882)
!882 = !{!883, !885, !887, !888, !889}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !881, file: !880, line: 184, baseType: !884, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !863, line: 105, baseType: !61)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !881, file: !880, line: 185, baseType: !886, size: 32, offset: 32)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !881, file: !880, line: 186, baseType: !886, size: 32, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !881, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !881, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !873, file: !839, line: 144, baseType: !879, size: 160, offset: 192)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !873, file: !839, line: 145, baseType: !862, size: 32, offset: 352)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !873, file: !839, line: 146, baseType: !866, size: 32, offset: 384)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !873, file: !839, line: 147, baseType: !894, size: 48, offset: 416)
!894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 48, elements: !895)
!895 = !{!896}
!896 = !DISubrange(count: 6)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "uxTCBNumber", scope: !873, file: !839, line: 158, baseType: !862, size: 32, offset: 480)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "uxTaskNumber", scope: !873, file: !839, line: 159, baseType: !862, size: 32, offset: 512)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !873, file: !839, line: 163, baseType: !862, size: 32, offset: 544)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "uxMutexesHeld", scope: !873, file: !839, line: 164, baseType: !862, size: 32, offset: 576)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !873, file: !839, line: 187, baseType: !60, size: 32, offset: 608)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "eNotifyState", scope: !873, file: !839, line: 188, baseType: !903, size: 32, offset: 640)
!903 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !904)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyValue", file: !839, line: 127, baseType: !841)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !907)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !908)
!908 = !{!909, !910, !912}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !907, file: !880, line: 208, baseType: !862, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !907, file: !880, line: 209, baseType: !911, size: 32, offset: 32)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !907, file: !880, line: 210, baseType: !913, size: 96, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !915)
!915 = !{!916, !917, !918}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !914, file: !880, line: 196, baseType: !884, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !914, file: !880, line: 197, baseType: !886, size: 32, offset: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !914, file: !880, line: 198, baseType: !886, size: 32, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !920, line: 40, baseType: !921)
!920 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration")
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !922, line: 131, baseType: !30)
!922 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!923 = !{!836, !924, !939, !942, !945, !947, !949, !951, !953, !956, !959, !961, !963, !965, !967, !970, !972, !974, !976, !978, !980}
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "ucExpectedStackBytes", scope: !926, file: !839, line: 2240, type: !935, isLocal: true, isDefinition: true)
!926 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !839, file: !839, line: 2198, type: !154, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !927)
!927 = !{!928, !932}
!928 = !DILocalVariable(name: "uxTopPriority", scope: !929, file: !839, line: 2244, type: !862)
!929 = distinct !DILexicalBlock(scope: !930, file: !839, line: 2244, column: 3)
!930 = distinct !DILexicalBlock(scope: !931, file: !839, line: 2207, column: 2)
!931 = distinct !DILexicalBlock(scope: !926, file: !839, line: 2200, column: 6)
!932 = !DILocalVariable(name: "pxConstList", scope: !933, file: !839, line: 2244, type: !934)
!933 = distinct !DILexicalBlock(scope: !929, file: !839, line: 2244, column: 3)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 160, elements: !937)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!937 = !{!938}
!938 = !DISubrange(count: 20)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !838, file: !839, line: 211, type: !941, isLocal: true, isDefinition: true)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, size: 3200, elements: !937)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !838, file: !839, line: 214, type: !944, isLocal: true, isDefinition: true)
!944 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !905)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !838, file: !839, line: 215, type: !944, isLocal: true, isDefinition: true)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !838, file: !839, line: 216, type: !906, isLocal: true, isDefinition: true)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "xTasksWaitingTermination", scope: !838, file: !839, line: 220, type: !906, isLocal: true, isDefinition: true)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "xSuspendedTaskList", scope: !838, file: !839, line: 227, type: !906, isLocal: true, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !838, file: !839, line: 238, type: !955, isLocal: true, isDefinition: true)
!955 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !862)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !838, file: !839, line: 241, type: !958, isLocal: true, isDefinition: true)
!958 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !869)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !838, file: !839, line: 245, type: !862, isLocal: true, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !838, file: !839, line: 240, type: !955, isLocal: true, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "uxTasksDeleted", scope: !838, file: !839, line: 221, type: !955, isLocal: true, isDefinition: true)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !838, file: !839, line: 256, type: !955, isLocal: true, isDefinition: true)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "xTickCount", scope: !838, file: !839, line: 239, type: !969, isLocal: true, isDefinition: true)
!969 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !884)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !838, file: !839, line: 243, type: !958, isLocal: true, isDefinition: true)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !838, file: !839, line: 242, type: !955, isLocal: true, isDefinition: true)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !838, file: !839, line: 244, type: !958, isLocal: true, isDefinition: true)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !838, file: !839, line: 246, type: !969, isLocal: true, isDefinition: true)
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !838, file: !839, line: 212, type: !906, isLocal: true, isDefinition: true)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !838, file: !839, line: 213, type: !906, isLocal: true, isDefinition: true)
!982 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !870)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(name: "xQueueRegistry", scope: !985, file: !986, line: 192, type: !1037, isLocal: false, isDefinition: true)
!985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !986, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !987, globals: !1036, splitDebugInlining: false, nameTableKind: None)
!986 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/queue.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!987 = !{!988, !862, !869, !59, !51, !919, !994, !884, !54}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "Queue_t", file: !986, line: 165, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQUEUE", file: !986, line: 161, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !986, line: 130, size: 672, elements: !992)
!992 = !{!993, !998, !999, !1000, !1005, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "pcHead", scope: !991, file: !986, line: 132, baseType: !994, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !55, line: 20, baseType: !996)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !57, line: 41, baseType: !997)
!997 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pcTail", scope: !991, file: !986, line: 133, baseType: !994, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "pcWriteTo", scope: !991, file: !986, line: 134, baseType: !994, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !991, file: !986, line: 140, baseType: !1001, size: 32, offset: 96)
!1001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !991, file: !986, line: 136, size: 32, elements: !1002)
!1002 = !{!1003, !1004}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "pcReadFrom", scope: !1001, file: !986, line: 138, baseType: !994, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "uxRecursiveCallCount", scope: !1001, file: !986, line: 139, baseType: !862, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToSend", scope: !991, file: !986, line: 142, baseType: !1006, size: 160, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !1008)
!1008 = !{!1009, !1010, !1021}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1007, file: !880, line: 208, baseType: !862, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1007, file: !880, line: 209, baseType: !1011, size: 32, offset: 32)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !1014)
!1014 = !{!1015, !1016, !1018, !1019, !1020}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1013, file: !880, line: 184, baseType: !884, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1013, file: !880, line: 185, baseType: !1017, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1013, file: !880, line: 186, baseType: !1017, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1013, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1013, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1007, file: !880, line: 210, baseType: !1022, size: 96, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !1024)
!1024 = !{!1025, !1026, !1027}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1023, file: !880, line: 196, baseType: !884, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1023, file: !880, line: 197, baseType: !1017, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1023, file: !880, line: 198, baseType: !1017, size: 32, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToReceive", scope: !991, file: !986, line: 143, baseType: !1006, size: 160, offset: 288)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "uxMessagesWaiting", scope: !991, file: !986, line: 145, baseType: !955, size: 32, offset: 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "uxLength", scope: !991, file: !986, line: 146, baseType: !862, size: 32, offset: 480)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "uxItemSize", scope: !991, file: !986, line: 147, baseType: !862, size: 32, offset: 512)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "xRxLock", scope: !991, file: !986, line: 149, baseType: !958, size: 32, offset: 544)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "xTxLock", scope: !991, file: !986, line: 150, baseType: !958, size: 32, offset: 576)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "uxQueueNumber", scope: !991, file: !986, line: 153, baseType: !862, size: 32, offset: 608)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ucQueueType", scope: !991, file: !986, line: 154, baseType: !54, size: 8, offset: 640)
!1036 = !{!983}
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 512, elements: !235)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueRegistryItem_t", file: !986, line: 187, baseType: !1039)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQueueRegistryItem", file: !986, line: 182, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QUEUE_REGISTRY_ITEM", file: !986, line: 178, size: 64, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pcQueueName", scope: !1040, file: !986, line: 180, baseType: !331, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !1040, file: !986, line: 181, baseType: !1044, size: 32, offset: 32)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !1045, line: 88, baseType: !51)
!1045 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/queue.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "xTimerQueue", scope: !1048, file: !1049, line: 169, type: !1044, isLocal: true, isDefinition: true)
!1048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1050, globals: !1078, splitDebugInlining: false, nameTableKind: None)
!1049 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/timers.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1050 = !{!869, !51, !864, !322, !862, !884, !1051, !1076, !59, !54}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer_t", file: !1049, line: 119, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "xTIMER", file: !1049, line: 115, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerControl", file: !1049, line: 104, size: 352, elements: !1055)
!1055 = !{!1056, !1057, !1067, !1068, !1069, !1070, !1077}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "pcTimerName", scope: !1054, file: !1049, line: 106, baseType: !331, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerListItem", scope: !1054, file: !1049, line: 107, baseType: !1058, size: 160, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !1060)
!1060 = !{!1061, !1062, !1064, !1065, !1066}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1059, file: !880, line: 184, baseType: !884, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1059, file: !880, line: 185, baseType: !1063, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1059, file: !880, line: 186, baseType: !1063, size: 32, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1059, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1059, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerPeriodInTicks", scope: !1054, file: !1049, line: 108, baseType: !884, size: 32, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "uxAutoReload", scope: !1054, file: !1049, line: 109, baseType: !862, size: 32, offset: 224)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pvTimerID", scope: !1054, file: !1049, line: 110, baseType: !51, size: 32, offset: 256)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pxCallbackFunction", scope: !1054, file: !1049, line: 111, baseType: !1071, size: 32, offset: 288)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerCallbackFunction_t", file: !1072, line: 123, baseType: !1073)
!1072 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/timers.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerHandle_t", file: !1072, line: 118, baseType: !51)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "uxTimerNumber", scope: !1054, file: !1049, line: 113, baseType: !862, size: 32, offset: 320)
!1078 = !{!1046, !1079, !1095, !1105, !1107, !1109}
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "pxCurrentTimerList", scope: !1048, file: !1049, line: 165, type: !1081, isLocal: true, isDefinition: true)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !1084)
!1084 = !{!1085, !1086, !1088}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1083, file: !880, line: 208, baseType: !862, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1083, file: !880, line: 209, baseType: !1087, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1083, file: !880, line: 210, baseType: !1089, size: 96, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !1091)
!1091 = !{!1092, !1093, !1094}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1090, file: !880, line: 196, baseType: !884, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1090, file: !880, line: 197, baseType: !1063, size: 32, offset: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1090, file: !880, line: 198, baseType: !1063, size: 32, offset: 64)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "xLastTime", scope: !1097, file: !1049, line: 524, type: !884, isLocal: true, isDefinition: true)
!1097 = distinct !DISubprogram(name: "prvSampleTimeNow", scope: !1049, file: !1049, line: 521, type: !1098, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !1102)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!884, !1100}
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!1102 = !{!1103, !1104}
!1103 = !DILocalVariable(name: "pxTimerListsWereSwitched", arg: 1, scope: !1097, file: !1049, line: 521, type: !1100)
!1104 = !DILocalVariable(name: "xTimeNow", scope: !1097, file: !1049, line: 523, type: !884)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "pxOverflowTimerList", scope: !1048, file: !1049, line: 166, type: !1081, isLocal: true, isDefinition: true)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "xActiveTimerList1", scope: !1048, file: !1049, line: 163, type: !1082, isLocal: true, isDefinition: true)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "xActiveTimerList2", scope: !1048, file: !1049, line: 164, type: !1082, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !1113, file: !1114, line: 212, type: !54, isLocal: true, isDefinition: true)
!1113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1115, retainedTypes: !1123, globals: !1124, splitDebugInlining: false, nameTableKind: None)
!1114 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1115 = !{!1116, !765}
!1116 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !766, line: 50, baseType: !30, size: 32, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122}
!1118 = !DIEnumerator(name: "HAL_DWT_0", value: 0)
!1119 = !DIEnumerator(name: "HAL_DWT_1", value: 1)
!1120 = !DIEnumerator(name: "HAL_DWT_2", value: 2)
!1121 = !DIEnumerator(name: "HAL_DWT_3", value: 3)
!1122 = !DIEnumerator(name: "HAL_DWT_MAX", value: 4)
!1123 = !{!867, !51, !52, !54, !61, !59, !869, !884}
!1124 = !{!1125, !1111, !1130, !1132}
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !1113, file: !1114, line: 214, type: !1127, isLocal: true, isDefinition: true)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !1113, file: !1114, line: 213, type: !61, isLocal: true, isDefinition: true)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !1113, file: !1114, line: 150, type: !862, isLocal: true, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "pxEnd", scope: !1136, file: !1137, line: 142, type: !1139, isLocal: true, isDefinition: true)
!1136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1137, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1138, globals: !1146, splitDebugInlining: false, nameTableKind: None)
!1137 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1138 = !{!51, !210, !919, !61, !1139}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockLink_t", file: !1137, line: 117, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "A_BLOCK_LINK", file: !1137, line: 110, size: 64, elements: !1142)
!1142 = !{!1143, !1145}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pxNextFreeBlock", scope: !1141, file: !1137, line: 112, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "xBlockSize", scope: !1141, file: !1137, line: 113, baseType: !919, size: 32, offset: 32)
!1146 = !{!1147, !1150, !1134, !1152, !1154, !1156, !1158}
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression(DW_OP_constu, 8, DW_OP_stack_value))
!1148 = distinct !DIGlobalVariable(name: "xHeapStructSize", scope: !1136, file: !1137, line: 139, type: !1149, isLocal: true, isDefinition: true)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "xStart", scope: !1136, file: !1137, line: 142, type: !1140, isLocal: true, isDefinition: true)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "xBlockAllocatedBit", scope: !1136, file: !1137, line: 153, type: !919, isLocal: true, isDefinition: true)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "xFreeBytesRemaining", scope: !1136, file: !1137, line: 146, type: !919, isLocal: true, isDefinition: true)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "xMinimumEverFreeBytesRemaining", scope: !1136, file: !1137, line: 147, type: !919, isLocal: true, isDefinition: true)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "ucHeap", scope: !1136, file: !1137, line: 105, type: !1160, isLocal: true, isDefinition: true)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 1187840, elements: !1161)
!1161 = !{!1162}
!1162 = !DISubrange(count: 148480)
!1163 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 2147483648, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "ep", scope: !1166, file: !1167, line: 45, type: !331, isLocal: true, isDefinition: true)
!1166 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1167, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1168, globals: !1185, splitDebugInlining: false, nameTableKind: None)
!1167 = !DIFile(filename: "../../../../../middleware/third_party/cjson/src/cJSON.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1168 = !{!7, !1169, !58, !201, !1182, !1184, !193}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "cJSON", file: !1171, line: 54, baseType: !1172)
!1171 = !DIFile(filename: "../../../../../middleware/third_party/cjson/inc/cJSON.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cJSON", file: !1171, line: 43, size: 320, elements: !1173)
!1173 = !{!1174, !1176, !1177, !1178, !1179, !1180, !1181, !1183}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1172, file: !1171, line: 44, baseType: !1175, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1172, file: !1171, line: 44, baseType: !1175, size: 32, offset: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1172, file: !1171, line: 45, baseType: !1175, size: 32, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1172, file: !1171, line: 47, baseType: !7, size: 32, offset: 96)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "valuestring", scope: !1172, file: !1171, line: 49, baseType: !201, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "valueint", scope: !1172, file: !1171, line: 50, baseType: !7, size: 32, offset: 160)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "valuedouble", scope: !1172, file: !1171, line: 51, baseType: !1182, size: 64, offset: 192)
!1182 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1172, file: !1171, line: 53, baseType: !201, size: 32, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!1185 = !{!1164, !1186}
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "firstByteMark", scope: !1166, file: !1167, line: 209, type: !261, isLocal: true, isDefinition: true)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "xExceptionStack", scope: !1190, file: !1191, line: 78, type: !1365, isLocal: true, isDefinition: true)
!1190 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1191, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1192, retainedTypes: !1220, globals: !1273, splitDebugInlining: false, nameTableKind: None)
!1191 = !DIFile(filename: "../../../../../kernel/service/src/exception_handler.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1192 = !{!1193, !1116}
!1193 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1191, line: 276, baseType: !30, size: 32, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219}
!1195 = !DIEnumerator(name: "r0", value: 0)
!1196 = !DIEnumerator(name: "r1", value: 1)
!1197 = !DIEnumerator(name: "r2", value: 2)
!1198 = !DIEnumerator(name: "r3", value: 3)
!1199 = !DIEnumerator(name: "r12", value: 4)
!1200 = !DIEnumerator(name: "lr", value: 5)
!1201 = !DIEnumerator(name: "pc", value: 6)
!1202 = !DIEnumerator(name: "psr", value: 7)
!1203 = !DIEnumerator(name: "s0", value: 8)
!1204 = !DIEnumerator(name: "s1", value: 9)
!1205 = !DIEnumerator(name: "s2", value: 10)
!1206 = !DIEnumerator(name: "s3", value: 11)
!1207 = !DIEnumerator(name: "s4", value: 12)
!1208 = !DIEnumerator(name: "s5", value: 13)
!1209 = !DIEnumerator(name: "s6", value: 14)
!1210 = !DIEnumerator(name: "s7", value: 15)
!1211 = !DIEnumerator(name: "s8", value: 16)
!1212 = !DIEnumerator(name: "s9", value: 17)
!1213 = !DIEnumerator(name: "s10", value: 18)
!1214 = !DIEnumerator(name: "s11", value: 19)
!1215 = !DIEnumerator(name: "s12", value: 20)
!1216 = !DIEnumerator(name: "s13", value: 21)
!1217 = !DIEnumerator(name: "s14", value: 22)
!1218 = !DIEnumerator(name: "s15", value: 23)
!1219 = !DIEnumerator(name: "fpscr", value: 24)
!1220 = !{!1221, !175, !30, !61, !1246}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !1224)
!1224 = !{!1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1223, file: !531, line: 397, baseType: !565, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1223, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1223, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1223, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1223, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1223, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1223, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1223, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1223, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1223, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1223, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1223, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1223, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1223, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1223, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1223, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1223, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1223, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1223, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1223, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1223, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !531, line: 826, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 801, size: 736, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1248, file: !531, line: 803, baseType: !60, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !1248, file: !531, line: 804, baseType: !60, size: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !1248, file: !531, line: 805, baseType: !60, size: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !1248, file: !531, line: 806, baseType: !60, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !1248, file: !531, line: 807, baseType: !60, size: 32, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !1248, file: !531, line: 808, baseType: !60, size: 32, offset: 160)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !1248, file: !531, line: 809, baseType: !60, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !1248, file: !531, line: 810, baseType: !565, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !1248, file: !531, line: 811, baseType: !60, size: 32, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !1248, file: !531, line: 812, baseType: !60, size: 32, offset: 288)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !1248, file: !531, line: 813, baseType: !60, size: 32, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1248, file: !531, line: 814, baseType: !445, size: 32, offset: 352)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !1248, file: !531, line: 815, baseType: !60, size: 32, offset: 384)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !1248, file: !531, line: 816, baseType: !60, size: 32, offset: 416)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !1248, file: !531, line: 817, baseType: !60, size: 32, offset: 448)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1248, file: !531, line: 818, baseType: !445, size: 32, offset: 480)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !1248, file: !531, line: 819, baseType: !60, size: 32, offset: 512)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !1248, file: !531, line: 820, baseType: !60, size: 32, offset: 544)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !1248, file: !531, line: 821, baseType: !60, size: 32, offset: 576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1248, file: !531, line: 822, baseType: !445, size: 32, offset: 608)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !1248, file: !531, line: 823, baseType: !60, size: 32, offset: 640)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !1248, file: !531, line: 824, baseType: !60, size: 32, offset: 672)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !1248, file: !531, line: 825, baseType: !60, size: 32, offset: 704)
!1273 = !{!1274, !1277, !1188, !1337, !1346, !1348, !1363}
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "pxExceptionStack", scope: !1190, file: !1191, line: 79, type: !1276, isLocal: false, isDefinition: true)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 32)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "pTaskContext", scope: !1190, file: !1191, line: 340, type: !1279, isLocal: false, isDefinition: true)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskContext", file: !1191, line: 337, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TaskContextType", file: !1191, line: 282, size: 1728, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1281, file: !1191, line: 283, baseType: !30, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1281, file: !1191, line: 284, baseType: !30, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1281, file: !1191, line: 285, baseType: !30, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1281, file: !1191, line: 286, baseType: !30, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1281, file: !1191, line: 287, baseType: !30, size: 32, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1281, file: !1191, line: 288, baseType: !30, size: 32, offset: 160)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1281, file: !1191, line: 289, baseType: !30, size: 32, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1281, file: !1191, line: 290, baseType: !30, size: 32, offset: 224)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1281, file: !1191, line: 291, baseType: !30, size: 32, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1281, file: !1191, line: 292, baseType: !30, size: 32, offset: 288)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1281, file: !1191, line: 293, baseType: !30, size: 32, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1281, file: !1191, line: 294, baseType: !30, size: 32, offset: 352)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1281, file: !1191, line: 295, baseType: !30, size: 32, offset: 384)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1281, file: !1191, line: 296, baseType: !30, size: 32, offset: 416)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !1281, file: !1191, line: 297, baseType: !30, size: 32, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1281, file: !1191, line: 298, baseType: !30, size: 32, offset: 480)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "psr", scope: !1281, file: !1191, line: 299, baseType: !30, size: 32, offset: 512)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1281, file: !1191, line: 300, baseType: !30, size: 32, offset: 544)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "exc_return", scope: !1281, file: !1191, line: 301, baseType: !30, size: 32, offset: 576)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "msp", scope: !1281, file: !1191, line: 302, baseType: !30, size: 32, offset: 608)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1281, file: !1191, line: 303, baseType: !30, size: 32, offset: 640)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "fpscr", scope: !1281, file: !1191, line: 304, baseType: !30, size: 32, offset: 672)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "s0", scope: !1281, file: !1191, line: 305, baseType: !30, size: 32, offset: 704)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "s1", scope: !1281, file: !1191, line: 306, baseType: !30, size: 32, offset: 736)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !1281, file: !1191, line: 307, baseType: !30, size: 32, offset: 768)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !1281, file: !1191, line: 308, baseType: !30, size: 32, offset: 800)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "s4", scope: !1281, file: !1191, line: 309, baseType: !30, size: 32, offset: 832)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "s5", scope: !1281, file: !1191, line: 310, baseType: !30, size: 32, offset: 864)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "s6", scope: !1281, file: !1191, line: 311, baseType: !30, size: 32, offset: 896)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "s7", scope: !1281, file: !1191, line: 312, baseType: !30, size: 32, offset: 928)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "s8", scope: !1281, file: !1191, line: 313, baseType: !30, size: 32, offset: 960)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "s9", scope: !1281, file: !1191, line: 314, baseType: !30, size: 32, offset: 992)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "s10", scope: !1281, file: !1191, line: 315, baseType: !30, size: 32, offset: 1024)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "s11", scope: !1281, file: !1191, line: 316, baseType: !30, size: 32, offset: 1056)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "s12", scope: !1281, file: !1191, line: 317, baseType: !30, size: 32, offset: 1088)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "s13", scope: !1281, file: !1191, line: 318, baseType: !30, size: 32, offset: 1120)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "s14", scope: !1281, file: !1191, line: 319, baseType: !30, size: 32, offset: 1152)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "s15", scope: !1281, file: !1191, line: 320, baseType: !30, size: 32, offset: 1184)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "s16", scope: !1281, file: !1191, line: 321, baseType: !30, size: 32, offset: 1216)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "s17", scope: !1281, file: !1191, line: 322, baseType: !30, size: 32, offset: 1248)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "s18", scope: !1281, file: !1191, line: 323, baseType: !30, size: 32, offset: 1280)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "s19", scope: !1281, file: !1191, line: 324, baseType: !30, size: 32, offset: 1312)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "s20", scope: !1281, file: !1191, line: 325, baseType: !30, size: 32, offset: 1344)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "s21", scope: !1281, file: !1191, line: 326, baseType: !30, size: 32, offset: 1376)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "s22", scope: !1281, file: !1191, line: 327, baseType: !30, size: 32, offset: 1408)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "s23", scope: !1281, file: !1191, line: 328, baseType: !30, size: 32, offset: 1440)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "s24", scope: !1281, file: !1191, line: 329, baseType: !30, size: 32, offset: 1472)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "s25", scope: !1281, file: !1191, line: 330, baseType: !30, size: 32, offset: 1504)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "s26", scope: !1281, file: !1191, line: 331, baseType: !30, size: 32, offset: 1536)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "s27", scope: !1281, file: !1191, line: 332, baseType: !30, size: 32, offset: 1568)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "s28", scope: !1281, file: !1191, line: 333, baseType: !30, size: 32, offset: 1600)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "s29", scope: !1281, file: !1191, line: 334, baseType: !30, size: 32, offset: 1632)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "s30", scope: !1281, file: !1191, line: 335, baseType: !30, size: 32, offset: 1664)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "s31", scope: !1281, file: !1191, line: 336, baseType: !30, size: 32, offset: 1696)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "assert_expr", scope: !1190, file: !1191, line: 99, type: !1339, isLocal: true, isDefinition: true)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "assert_expr_t", file: !1191, line: 95, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1191, line: 89, size: 128, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "is_valid", scope: !1340, file: !1191, line: 91, baseType: !69, size: 8)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1340, file: !1191, line: 92, baseType: !331, size: 32, offset: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1340, file: !1191, line: 93, baseType: !331, size: 32, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1340, file: !1191, line: 94, baseType: !7, size: 32, offset: 96)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "reboot_flag", scope: !1190, file: !1191, line: 101, type: !7, isLocal: true, isDefinition: true)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "exception_config", scope: !1190, file: !1191, line: 97, type: !1350, isLocal: true, isDefinition: true)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_t", file: !1191, line: 87, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1191, line: 83, size: 416, elements: !1352)
!1352 = !{!1353, !1354}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1351, file: !1191, line: 85, baseType: !7, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "configs", scope: !1351, file: !1191, line: 86, baseType: !1355, size: 384, offset: 32)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 384, elements: !895)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1357, line: 99, baseType: !1358)
!1357 = !DIFile(filename: "../../../../../kernel/service/inc/exception_handler.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1357, line: 95, size: 64, elements: !1359)
!1359 = !{!1360, !1362}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !1358, file: !1357, line: 97, baseType: !1361, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_exception_callback_t", file: !1357, line: 93, baseType: !153)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !1358, file: !1357, line: 98, baseType: !1361, size: 32, offset: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "taskContext", scope: !1190, file: !1191, line: 339, type: !1280, isLocal: true, isDefinition: true)
!1365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 6144, elements: !1366)
!1366 = !{!1367}
!1367 = !DISubrange(count: 192)
!1368 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 0, 8))
!1369 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!1370 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 32))
!1371 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression(DW_OP_LLVM_fragment, 96, 32))
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "g_log_uart_port", scope: !1374, file: !1375, line: 166, type: !755, isLocal: true, isDefinition: true)
!1374 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1375, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1376, retainedTypes: !1402, globals: !1465, splitDebugInlining: false, nameTableKind: None)
!1375 = !DIFile(filename: "../../../../../kernel/service/src/syslog.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1376 = !{!345, !350, !649, !657, !662, !678, !684, !688, !1377, !1381, !1394, !28}
!1377 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 96, baseType: !30, size: 32, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIEnumerator(name: "MESSAGE_TYPE_NORMAL_LOG", value: 0)
!1380 = !DIEnumerator(name: "MESSAGE_TYPE_HEX_DUMP", value: 1)
!1381 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1382, line: 40, baseType: !30, size: 32, elements: !1383)
!1382 = !DIFile(filename: "../inc/task_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1383 = !{!1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393}
!1384 = !DIEnumerator(name: "TASK_PRIORITY_IDLE", value: 0)
!1385 = !DIEnumerator(name: "TASK_PRIORITY_SYSLOG", value: 1)
!1386 = !DIEnumerator(name: "TASK_PRIORITY_LOW", value: 2)
!1387 = !DIEnumerator(name: "TASK_PRIORITY_BELOW_NORMAL", value: 3)
!1388 = !DIEnumerator(name: "TASK_PRIORITY_NORMAL", value: 4)
!1389 = !DIEnumerator(name: "TASK_PRIORITY_ABOVE_NORMAL", value: 5)
!1390 = !DIEnumerator(name: "TASK_PRIORITY_HIGH", value: 6)
!1391 = !DIEnumerator(name: "TASK_PRIORITY_SOFT_REALTIME", value: 7)
!1392 = !DIEnumerator(name: "TASK_PRIORITY_HARD_REALTIME", value: 8)
!1393 = !DIEnumerator(name: "TASK_PRIORITY_TIMER", value: 19)
!1394 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1395, line: 50, baseType: !30, size: 32, elements: !1396)
!1395 = !DIFile(filename: "../../../../../kernel/service/inc/toi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1396 = !{!1397, !1398, !1399, !1400, !1401}
!1397 = !DIEnumerator(name: "TOI_BIN", value: 0)
!1398 = !DIEnumerator(name: "TOI_OCT", value: 1)
!1399 = !DIEnumerator(name: "TOI_DEC", value: 2)
!1400 = !DIEnumerator(name: "TOI_HEX", value: 3)
!1401 = !DIEnumerator(name: "TOI_ERR", value: 4)
!1402 = !{!1403, !54, !51, !59, !869, !884, !30, !201, !7, !1444, !362, !364, !61, !1453, !1462}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_message_t", file: !1375, line: 130, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 124, size: 2336, elements: !1406)
!1406 = !{!1407, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !1405, file: !1375, line: 125, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "message_type_t", file: !1375, line: 99, baseType: !1377)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1405, file: !1375, line: 129, baseType: !1410, size: 2304, offset: 32)
!1410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1405, file: !1375, line: 126, size: 2304, elements: !1411)
!1411 = !{!1412, !1425}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "normal_log_message", scope: !1410, file: !1375, line: 127, baseType: !1413, size: 2240)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "normal_log_message_t", file: !1375, line: 108, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 101, size: 2240, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419, !1420, !1421}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1414, file: !1375, line: 102, baseType: !331, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1414, file: !1375, line: 103, baseType: !364, size: 32, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1414, file: !1375, line: 104, baseType: !331, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1414, file: !1375, line: 105, baseType: !7, size: 32, offset: 96)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1414, file: !1375, line: 106, baseType: !61, size: 32, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1414, file: !1375, line: 107, baseType: !1422, size: 2056, offset: 160)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 2056, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 257)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "hex_dump_message", scope: !1410, file: !1375, line: 128, baseType: !1426, size: 2304)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "hex_dump_message_t", file: !1375, line: 120, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 110, size: 2304, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433, !1434, !1438, !1439, !1443}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1427, file: !1375, line: 111, baseType: !331, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1427, file: !1375, line: 112, baseType: !364, size: 32, offset: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1427, file: !1375, line: 113, baseType: !331, size: 32, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1427, file: !1375, line: 114, baseType: !7, size: 32, offset: 96)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1427, file: !1375, line: 115, baseType: !61, size: 32, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1427, file: !1375, line: 116, baseType: !1435, size: 1032, offset: 160)
!1435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 1032, elements: !1436)
!1436 = !{!1437}
!1437 = !DISubrange(count: 129)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !1427, file: !1375, line: 117, baseType: !61, size: 32, offset: 1216)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1427, file: !1375, line: 118, baseType: !1440, size: 1024, offset: 1248)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 1024, elements: !1441)
!1441 = !{!1442}
!1442 = !DISubrange(count: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "additional_data", scope: !1427, file: !1375, line: 119, baseType: !201, size: 32, offset: 2272)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451, !1452}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1446, file: !346, line: 90, baseType: !331, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1446, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1446, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1446, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1446, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_buffer_t", file: !1375, line: 135, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 132, size: 2368, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "occupied", scope: !1455, file: !1375, line: 133, baseType: !61, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1455, file: !1375, line: 134, baseType: !1459, size: 2336, offset: 32)
!1459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 2336, elements: !1460)
!1460 = !{!1461}
!1461 = !DISubrange(count: 292)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !55, line: 60, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !57, line: 105, baseType: !1464)
!1464 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1465 = !{!1466, !1468, !1470, !1473, !1372, !1487, !1489, !1491, !1493, !1496, !1498, !1500}
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "log_control_block_common", scope: !1374, file: !1375, line: 158, type: !1445, isLocal: false, isDefinition: true)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(name: "syslog_task_handle", scope: !1374, file: !1375, line: 138, type: !868, isLocal: true, isDefinition: true)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "syslog_buffer_pool", scope: !1374, file: !1375, line: 141, type: !1472, isLocal: true, isDefinition: true)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1454, size: 37888, elements: !455)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "syslog_config", scope: !1374, file: !1375, line: 160, type: !1475, isLocal: true, isDefinition: true)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_config_t", file: !346, line: 97, baseType: !1476)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syslog_config_s", file: !346, line: 122, size: 64, elements: !1477)
!1477 = !{!1478, !1485}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "save_fn", scope: !1476, file: !346, line: 123, baseType: !1479, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_save_fn", file: !346, line: 107, baseType: !1480)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{null, !1483}
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !1476, file: !346, line: 124, baseType: !1486, size: 32, offset: 32)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "syslog_init_done", scope: !1374, file: !1375, line: 153, type: !61, isLocal: true, isDefinition: true)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "syslog_drop_count", scope: !1374, file: !1375, line: 155, type: !61, isLocal: true, isDefinition: true)
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "g_log_queue", scope: !1374, file: !1375, line: 144, type: !1044, isLocal: true, isDefinition: true)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "print_level_table", scope: !1374, file: !1375, line: 164, type: !1495, isLocal: true, isDefinition: true)
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !220)
!1496 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression())
!1497 = distinct !DIGlobalVariable(name: "syslog_task_ready", scope: !1374, file: !1375, line: 154, type: !61, isLocal: true, isDefinition: true)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "syslog_init_time", scope: !1374, file: !1375, line: 152, type: !61, isLocal: true, isDefinition: true)
!1500 = !DIGlobalVariableExpression(var: !1501, expr: !DIExpression())
!1501 = distinct !DIGlobalVariable(name: "log_switch_table", scope: !1374, file: !1375, line: 162, type: !1502, isLocal: true, isDefinition: true)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 64, elements: !333)
!1503 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "g_nvdm_mutex", scope: !1506, file: !1507, line: 122, type: !1523, isLocal: true, isDefinition: true)
!1506 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1507, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1508, retainedTypes: !1519, globals: !1520, splitDebugInlining: false, nameTableKind: None)
!1507 = !DIFile(filename: "../../../../../middleware/MTK/nvdm/src/nvdm_port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1508 = !{!350, !1509, !44}
!1509 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 110, baseType: !7, size: 32, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1511 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1512 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1513 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1514 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1515 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1516 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1517 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1518 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1519 = !{!61, !54, !51, !869, !1044, !884}
!1520 = !{!1504, !1521}
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "g_task_handler", scope: !1506, file: !1507, line: 123, type: !868, isLocal: true, isDefinition: true)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvdm_port_mutex_t", file: !1507, line: 121, baseType: !1524)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreHandle_t", file: !1525, line: 79, baseType: !1044)
!1525 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/semphr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "memory_regions", scope: !1528, file: !1529, line: 51, type: !1531, isLocal: false, isDefinition: true)
!1528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1530, splitDebugInlining: false, nameTableKind: None)
!1529 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/cjson/src/regions_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1530 = !{!1526}
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 768, elements: !895)
!1532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "memory_region_type", file: !1357, line: 91, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1357, line: 85, size: 128, elements: !1535)
!1535 = !{!1536, !1537, !1538, !1539}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "region_name", scope: !1534, file: !1357, line: 87, baseType: !201, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "start_address", scope: !1534, file: !1357, line: 88, baseType: !1276, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "end_address", scope: !1534, file: !1357, line: 89, baseType: !1276, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "is_dumped", scope: !1534, file: !1357, line: 90, baseType: !30, size: 32, offset: 96)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1542, file: !1543, line: 59, type: !61, isLocal: false, isDefinition: true)
!1542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1544, globals: !1597, splitDebugInlining: false, nameTableKind: None)
!1543 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/cjson/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1544 = !{!1545, !1553, !1578}
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !531, line: 656, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 650, size: 128, elements: !1548)
!1548 = !{!1549, !1550, !1551, !1552}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1547, file: !531, line: 652, baseType: !60, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1547, file: !531, line: 653, baseType: !60, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1547, file: !531, line: 654, baseType: !60, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1547, file: !531, line: 655, baseType: !565, size: 32, offset: 96)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1555, file: !531, line: 397, baseType: !565, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1555, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1555, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1555, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1555, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1555, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1555, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1555, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1555, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1555, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1555, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1555, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1555, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1555, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1555, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1555, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1555, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1555, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1555, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1555, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1555, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !431, line: 72, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !431, line: 56, size: 525312, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !1580, file: !431, line: 57, baseType: !60, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !1580, file: !431, line: 58, baseType: !60, size: 32, offset: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !1580, file: !431, line: 59, baseType: !60, size: 32, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !1580, file: !431, line: 60, baseType: !60, size: 32, offset: 96)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !1580, file: !431, line: 61, baseType: !60, size: 32, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !1580, file: !431, line: 62, baseType: !60, size: 32, offset: 160)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !1580, file: !431, line: 63, baseType: !60, size: 32, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !1580, file: !431, line: 64, baseType: !60, size: 32, offset: 224)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !1580, file: !431, line: 65, baseType: !60, size: 32, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !1580, file: !431, line: 66, baseType: !60, size: 32, offset: 288)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1580, file: !431, line: 67, baseType: !445, size: 32, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !1580, file: !431, line: 68, baseType: !60, size: 32, offset: 352)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1580, file: !431, line: 69, baseType: !450, size: 523904, offset: 384)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !1580, file: !431, line: 70, baseType: !454, size: 512, offset: 524288)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !1580, file: !431, line: 71, baseType: !454, size: 512, offset: 524800)
!1597 = !{!1540, !1598}
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !1542, file: !1543, line: 61, type: !60, isLocal: true, isDefinition: true)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "heap_end", scope: !1602, file: !1603, line: 101, type: !201, isLocal: true, isDefinition: true)
!1602 = distinct !DISubprogram(name: "_sbrk_r", scope: !1603, file: !1603, line: 98, type: !1604, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !1795)
!1603 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/cjson/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1606, !1608, !1790}
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !1607, line: 123, baseType: !201)
!1607 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1610, line: 377, size: 1920, elements: !1611)
!1610 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!1611 = !{!1612, !1613, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1690, !1710, !1714, !1715, !1716, !1717, !1726, !1739, !1740, !1745, !1764, !1765, !1772, !1773, !1789}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !1609, file: !1610, line: 381, baseType: !7, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !1609, file: !1610, line: 386, baseType: !1614, size: 32, offset: 32)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1610, line: 292, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1610, line: 186, size: 832, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621, !1623, !1624, !1629, !1630, !1631, !1632, !1636, !1640, !1645, !1649, !1650, !1651, !1652, !1656, !1658, !1659, !1660, !1662, !1668, !1680}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1616, file: !1610, line: 187, baseType: !177, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1616, file: !1610, line: 188, baseType: !7, size: 32, offset: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1616, file: !1610, line: 189, baseType: !7, size: 32, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1616, file: !1610, line: 190, baseType: !1622, size: 16, offset: 96)
!1622 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1616, file: !1610, line: 191, baseType: !1622, size: 16, offset: 112)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1616, file: !1610, line: 192, baseType: !1625, size: 64, offset: 128)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1610, line: 122, size: 64, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1625, file: !1610, line: 123, baseType: !177, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1625, file: !1610, line: 124, baseType: !7, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1616, file: !1610, line: 193, baseType: !7, size: 32, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1616, file: !1610, line: 196, baseType: !1608, size: 32, offset: 224)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1616, file: !1610, line: 200, baseType: !51, size: 32, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1616, file: !1610, line: 202, baseType: !1633, size: 32, offset: 288)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!7, !1608, !51, !201, !7}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1616, file: !1610, line: 204, baseType: !1637, size: 32, offset: 320)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!7, !1608, !51, !331, !7}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1616, file: !1610, line: 207, baseType: !1641, size: 32, offset: 352)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!1644, !1608, !51, !1644, !7}
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !922, line: 116, baseType: !174)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1616, file: !1610, line: 208, baseType: !1646, size: 32, offset: 384)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!7, !1608, !51}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1616, file: !1610, line: 211, baseType: !1625, size: 64, offset: 416)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1616, file: !1610, line: 212, baseType: !177, size: 32, offset: 480)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1616, file: !1610, line: 213, baseType: !7, size: 32, offset: 512)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1616, file: !1610, line: 216, baseType: !1653, size: 24, offset: 544)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 24, elements: !1654)
!1654 = !{!1655}
!1655 = !DISubrange(count: 3)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1616, file: !1610, line: 217, baseType: !1657, size: 8, offset: 568)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 8, elements: !446)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1616, file: !1610, line: 220, baseType: !1625, size: 64, offset: 576)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1616, file: !1610, line: 223, baseType: !7, size: 32, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1616, file: !1610, line: 224, baseType: !1661, size: 32, offset: 672)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !922, line: 46, baseType: !174)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1616, file: !1610, line: 231, baseType: !1663, size: 32, offset: 704)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1610, line: 35, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1665, line: 34, baseType: !1666)
!1665 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!1667 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1665, line: 33, flags: DIFlagFwdDecl)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1616, file: !1610, line: 233, baseType: !1669, size: 64, offset: 736)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !922, line: 170, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !922, line: 162, size: 64, elements: !1671)
!1671 = !{!1672, !1673}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1670, file: !922, line: 164, baseType: !7, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1670, file: !922, line: 169, baseType: !1674, size: 32, offset: 32)
!1674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1670, file: !922, line: 165, size: 32, elements: !1675)
!1675 = !{!1676, !1679}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1674, file: !922, line: 167, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1678, line: 116, baseType: !7)
!1678 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1674, file: !922, line: 168, baseType: !229, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1616, file: !1610, line: 234, baseType: !7, size: 32, offset: 800)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !1609, file: !1610, line: 386, baseType: !1614, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !1609, file: !1610, line: 386, baseType: !1614, size: 32, offset: 96)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !1609, file: !1610, line: 388, baseType: !7, size: 32, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !1609, file: !1610, line: 390, baseType: !201, size: 32, offset: 160)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !1609, file: !1610, line: 392, baseType: !7, size: 32, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !1609, file: !1610, line: 394, baseType: !7, size: 32, offset: 224)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !1609, file: !1610, line: 395, baseType: !1688, size: 32, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !1610, line: 45, flags: DIFlagFwdDecl)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !1609, file: !1610, line: 397, baseType: !1691, size: 32, offset: 288)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !1610, line: 349, size: 128, elements: !1693)
!1693 = !{!1694, !1706, !1707, !1708}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1692, file: !1610, line: 352, baseType: !1695, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !1610, line: 52, size: 192, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1696, file: !1610, line: 54, baseType: !1695, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1696, file: !1610, line: 55, baseType: !7, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1696, file: !1610, line: 55, baseType: !7, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1696, file: !1610, line: 55, baseType: !7, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1696, file: !1610, line: 55, baseType: !7, size: 32, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1696, file: !1610, line: 56, baseType: !1704, size: 32, offset: 160)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 32, elements: !446)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !1610, line: 22, baseType: !195)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1692, file: !1610, line: 353, baseType: !7, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1692, file: !1610, line: 354, baseType: !1695, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1692, file: !1610, line: 355, baseType: !1709, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !1609, file: !1610, line: 399, baseType: !1711, size: 32, offset: 320)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{null, !1608}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !1609, file: !1610, line: 401, baseType: !7, size: 32, offset: 352)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !1609, file: !1610, line: 404, baseType: !7, size: 32, offset: 384)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !1609, file: !1610, line: 405, baseType: !201, size: 32, offset: 416)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !1609, file: !1610, line: 407, baseType: !1718, size: 32, offset: 448)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !1610, line: 324, size: 192, elements: !1720)
!1720 = !{!1721, !1723, !1724, !1725}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1719, file: !1610, line: 325, baseType: !1722, size: 48)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 48, elements: !1654)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1719, file: !1610, line: 326, baseType: !1722, size: 48, offset: 48)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1719, file: !1610, line: 327, baseType: !322, size: 16, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1719, file: !1610, line: 330, baseType: !1464, size: 64, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !1609, file: !1610, line: 408, baseType: !1727, size: 32, offset: 480)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !1610, line: 60, size: 288, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1728, file: !1610, line: 62, baseType: !7, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1728, file: !1610, line: 63, baseType: !7, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1728, file: !1610, line: 64, baseType: !7, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1728, file: !1610, line: 65, baseType: !7, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1728, file: !1610, line: 66, baseType: !7, size: 32, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1728, file: !1610, line: 67, baseType: !7, size: 32, offset: 160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1728, file: !1610, line: 68, baseType: !7, size: 32, offset: 192)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1728, file: !1610, line: 69, baseType: !7, size: 32, offset: 224)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1728, file: !1610, line: 70, baseType: !7, size: 32, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !1609, file: !1610, line: 409, baseType: !201, size: 32, offset: 512)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !1609, file: !1610, line: 412, baseType: !1741, size: 32, offset: 544)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !7}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !1609, file: !1610, line: 416, baseType: !1746, size: 32, offset: 576)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !1610, line: 90, size: 1120, elements: !1748)
!1748 = !{!1749, !1750, !1751, !1755}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1747, file: !1610, line: 91, baseType: !1746, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1747, file: !1610, line: 92, baseType: !7, size: 32, offset: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1747, file: !1610, line: 93, baseType: !1752, size: 1024, offset: 64)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 1024, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !1747, file: !1610, line: 94, baseType: !1756, size: 32, offset: 1088)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !1610, line: 79, size: 2112, elements: !1758)
!1758 = !{!1759, !1761, !1762, !1763}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1757, file: !1610, line: 80, baseType: !1760, size: 1024)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 1024, elements: !1753)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1757, file: !1610, line: 81, baseType: !1760, size: 1024, offset: 1024)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1757, file: !1610, line: 83, baseType: !1705, size: 32, offset: 2048)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1757, file: !1610, line: 86, baseType: !1705, size: 32, offset: 2080)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !1609, file: !1610, line: 417, baseType: !1747, size: 1120, offset: 608)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !1609, file: !1610, line: 420, baseType: !1766, size: 96, offset: 1728)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !1610, line: 296, size: 96, elements: !1767)
!1767 = !{!1768, !1770, !1771}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1766, file: !1610, line: 298, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1766, file: !1610, line: 299, baseType: !7, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1766, file: !1610, line: 300, baseType: !1614, size: 32, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !1609, file: !1610, line: 421, baseType: !1614, size: 32, offset: 1824)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !1609, file: !1610, line: 422, baseType: !1774, size: 32, offset: 1856)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !1610, line: 359, size: 640, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1783, !1784, !1785, !1786, !1787, !1788}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1775, file: !1610, line: 362, baseType: !201, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1775, file: !1610, line: 363, baseType: !1669, size: 64, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1775, file: !1610, line: 364, baseType: !1669, size: 64, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1775, file: !1610, line: 365, baseType: !1669, size: 64, offset: 160)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1775, file: !1610, line: 366, baseType: !1782, size: 64, offset: 224)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 64, elements: !235)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1775, file: !1610, line: 367, baseType: !7, size: 32, offset: 288)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1775, file: !1610, line: 368, baseType: !1669, size: 64, offset: 320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1775, file: !1610, line: 369, baseType: !1669, size: 64, offset: 384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1775, file: !1610, line: 370, baseType: !1669, size: 64, offset: 448)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1775, file: !1610, line: 371, baseType: !1669, size: 64, offset: 512)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1775, file: !1610, line: 372, baseType: !1669, size: 64, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !1609, file: !1610, line: 423, baseType: !201, size: 32, offset: 1888)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1678, line: 46, baseType: !30)
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1793, globals: !1794, splitDebugInlining: false, nameTableKind: None)
!1792 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1793 = !{!201, !1606}
!1794 = !{!1600}
!1795 = !{!1796, !1797, !1798, !1799}
!1796 = !DILocalVariable(name: "r", arg: 1, scope: !1602, file: !1603, line: 98, type: !1608)
!1797 = !DILocalVariable(name: "nbytes", arg: 2, scope: !1602, file: !1603, line: 98, type: !1790)
!1798 = !DILocalVariable(name: "prev_heap_end", scope: !1602, file: !1603, line: 102, type: !201)
!1799 = !DILocalVariable(name: "stack", scope: !1602, file: !1603, line: 103, type: !201)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "text1", scope: !1802, file: !1803, line: 37, type: !1827, isLocal: false, isDefinition: true)
!1802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1804, retainedTypes: !1805, globals: !1806, splitDebugInlining: false, nameTableKind: None)
!1803 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/cjson/src/cJSON_test.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1804 = !{!350}
!1805 = !{!201}
!1806 = !{!1800, !1807, !1812, !1817, !1822}
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "text2", scope: !1802, file: !1803, line: 38, type: !1809, isLocal: false, isDefinition: true)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 632, elements: !1810)
!1810 = !{!1811}
!1811 = !DISubrange(count: 79)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "text3", scope: !1802, file: !1803, line: 39, type: !1814, isLocal: false, isDefinition: true)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 424, elements: !1815)
!1815 = !{!1816}
!1816 = !DISubrange(count: 53)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "text4", scope: !1802, file: !1803, line: 40, type: !1819, isLocal: false, isDefinition: true)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 2640, elements: !1820)
!1820 = !{!1821}
!1821 = !DISubrange(count: 330)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "text5", scope: !1802, file: !1803, line: 41, type: !1824, isLocal: false, isDefinition: true)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 3536, elements: !1825)
!1825 = !{!1826}
!1826 = !DISubrange(count: 442)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 1224, elements: !1828)
!1828 = !{!1829}
!1829 = !DISubrange(count: 153)
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "log_control_block_cjson_example", scope: !1832, file: !1833, line: 58, type: !1837, isLocal: false, isDefinition: true)
!1832 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1833, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1834, retainedTypes: !1835, globals: !1836, splitDebugInlining: false, nameTableKind: None)
!1833 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/cjson/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1834 = !{!345, !350, !1381}
!1835 = !{!869, !51, !884}
!1836 = !{!1830}
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !1838)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843, !1844}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1838, file: !346, line: 90, baseType: !331, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1838, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1838, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1838, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1838, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !1847, file: !1852, line: 4, type: !1858, isLocal: false, isDefinition: true)
!1847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1849, splitDebugInlining: false, nameTableKind: None)
!1848 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1849 = !{!1845, !1850, !1856}
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !1847, file: !1852, line: 5, type: !1853, isLocal: false, isDefinition: true)
!1852 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 88, elements: !1854)
!1854 = !{!1855}
!1855 = !DISubrange(count: 11)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !1847, file: !1852, line: 6, type: !1853, isLocal: false, isDefinition: true)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 248, elements: !1859)
!1859 = !{!1860}
!1860 = !DISubrange(count: 31)
!1861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1862, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1863, retainedTypes: !1870, splitDebugInlining: false, nameTableKind: None)
!1862 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_trng.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1863 = !{!1864}
!1864 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1865, line: 92, baseType: !7, size: 32, elements: !1866)
!1865 = !DIFile(filename: "../../../../../driver/chip/inc/hal_trng.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1866 = !{!1867, !1868, !1869}
!1867 = !DIEnumerator(name: "HAL_TRNG_STATUS_ERROR", value: -2)
!1868 = !DIEnumerator(name: "HAL_TRNG_STATUS_INVALID_PARAMETER", value: -1)
!1869 = !DIEnumerator(name: "HAL_TRNG_STATUS_OK", value: 0)
!1870 = !{!284, !286}
!1871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1873, splitDebugInlining: false, nameTableKind: None)
!1872 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1873 = !{!1874, !1899}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1876, file: !531, line: 397, baseType: !565, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1876, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1876, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1876, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1876, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1876, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1876, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1876, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1876, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1876, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1876, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1876, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1876, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1876, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1876, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1876, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1876, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1876, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1876, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1876, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1876, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !531, line: 378, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 363, size: 28704, elements: !1902)
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1901, file: !531, line: 365, baseType: !535, size: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1901, file: !531, line: 366, baseType: !537, size: 768, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1901, file: !531, line: 367, baseType: !535, size: 256, offset: 1024)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1901, file: !531, line: 368, baseType: !537, size: 768, offset: 1280)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1901, file: !531, line: 369, baseType: !535, size: 256, offset: 2048)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1901, file: !531, line: 370, baseType: !537, size: 768, offset: 2304)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1901, file: !531, line: 371, baseType: !535, size: 256, offset: 3072)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1901, file: !531, line: 372, baseType: !537, size: 768, offset: 3328)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1901, file: !531, line: 373, baseType: !535, size: 256, offset: 4096)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1901, file: !531, line: 374, baseType: !548, size: 1792, offset: 4352)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1901, file: !531, line: 375, baseType: !552, size: 1920, offset: 6144)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1901, file: !531, line: 376, baseType: !556, size: 20608, offset: 8064)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1901, file: !531, line: 377, baseType: !60, size: 32, offset: 28672)
!1916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1918, splitDebugInlining: false, nameTableKind: None)
!1917 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1918 = !{!174, !137}
!1919 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1920, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1921, retainedTypes: !1922, splitDebugInlining: false, nameTableKind: None)
!1920 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1921 = !{!1509, !44}
!1922 = !{!51}
!1923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1925, splitDebugInlining: false, nameTableKind: None)
!1924 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/ept/src/bsp_gpio_ept_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1925 = !{!61, !59}
!1926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1928, splitDebugInlining: false, nameTableKind: None)
!1927 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1928 = !{!1929, !884, !862, !51, !1939}
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !1932)
!1932 = !{!1933, !1934, !1936, !1937, !1938}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1931, file: !880, line: 184, baseType: !884, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1931, file: !880, line: 185, baseType: !1935, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1931, file: !880, line: 186, baseType: !1935, size: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1931, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1931, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !1942)
!1942 = !{!1943, !1944, !1945}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1941, file: !880, line: 208, baseType: !862, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1941, file: !880, line: 209, baseType: !1929, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1941, file: !880, line: 210, baseType: !1946, size: 96, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !1948)
!1948 = !{!1949, !1950, !1951}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1947, file: !880, line: 196, baseType: !884, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1947, file: !880, line: 197, baseType: !1935, size: 32, offset: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1947, file: !880, line: 198, baseType: !1935, size: 32, offset: 64)
!1952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1953, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1954, splitDebugInlining: false, nameTableKind: None)
!1953 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/mt7687/port_tick.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1954 = !{!884, !1955}
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !531, line: 656, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 650, size: 128, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1957, file: !531, line: 652, baseType: !60, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1957, file: !531, line: 653, baseType: !60, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1957, file: !531, line: 654, baseType: !60, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1957, file: !531, line: 655, baseType: !565, size: 32, offset: 96)
!1963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1965, splitDebugInlining: false, nameTableKind: None)
!1964 = !DIFile(filename: "../../../../../middleware/third_party/cjson/src/cJSON_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1965 = !{!1182}
!1966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1968, splitDebugInlining: false, nameTableKind: None)
!1967 = !DIFile(filename: "../../../../../kernel/service/src/os_port_callback.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1968 = !{!30, !201}
!1969 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1970, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1971, retainedTypes: !1972, splitDebugInlining: false, nameTableKind: None)
!1970 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/cjson/src/sys_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!1971 = !{!657, !412, !350, !393, !1864}
!1972 = !{!1973, !30}
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !383, line: 204, baseType: !393)
!1974 = !{!"Ubuntu clang version 14.0.6"}
!1975 = !{i32 7, !"Dwarf Version", i32 2}
!1976 = !{i32 2, !"Debug Info Version", i32 3}
!1977 = !{i32 1, !"wchar_size", i32 4}
!1978 = !{i32 1, !"min_enum_size", i32 4}
!1979 = !{i32 1, !"branch-target-enforcement", i32 0}
!1980 = !{i32 1, !"sign-return-address", i32 0}
!1981 = !{i32 1, !"sign-return-address-all", i32 0}
!1982 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1983 = !{i32 7, !"frame-pointer", i32 2}
!1984 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !3, file: !3, line: 86, type: !1985, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1987)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!61}
!1987 = !{!1988, !1989}
!1988 = !DILocalVariable(name: "counter", scope: !1984, file: !3, line: 88, type: !61)
!1989 = !DILocalVariable(name: "ret", scope: !1984, file: !3, line: 89, type: !1990)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !21, line: 393, baseType: !20)
!1991 = !DILocation(line: 88, column: 5, scope: !1984)
!1992 = !DILocation(line: 0, scope: !1984)
!1993 = !DILocation(line: 88, column: 14, scope: !1984)
!1994 = !DILocation(line: 90, column: 11, scope: !1984)
!1995 = !DILocation(line: 91, column: 13, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 91, column: 9)
!1997 = !DILocation(line: 91, column: 9, scope: !1984)
!1998 = !DILocation(line: 92, column: 9, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1996, file: !3, line: 91, column: 35)
!2000 = !DILocation(line: 94, column: 12, scope: !1984)
!2001 = !DILocation(line: 95, column: 1, scope: !1984)
!2002 = !DILocation(line: 94, column: 5, scope: !1984)
!2003 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !3, file: !3, line: 97, type: !154, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2004)
!2004 = !{}
!2005 = !DILocation(line: 99, column: 20, scope: !2003)
!2006 = !DILocation(line: 100, column: 1, scope: !2003)
!2007 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !3, file: !3, line: 101, type: !154, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2004)
!2008 = !DILocation(line: 103, column: 20, scope: !2007)
!2009 = !DILocation(line: 104, column: 1, scope: !2007)
!2010 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !3, file: !3, line: 105, type: !154, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2004)
!2011 = !DILocation(line: 107, column: 25, scope: !2010)
!2012 = !DILocation(line: 108, column: 1, scope: !2010)
!2013 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !3, file: !3, line: 109, type: !154, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2004)
!2014 = !DILocation(line: 111, column: 25, scope: !2013)
!2015 = !DILocation(line: 112, column: 1, scope: !2013)
!2016 = distinct !DISubprogram(name: "get_sf_lock", scope: !3, file: !3, line: 114, type: !2017, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2019)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!527}
!2019 = !{!2020}
!2020 = !DILocalVariable(name: "savedMask", scope: !2016, file: !3, line: 116, type: !61)
!2021 = !DILocation(line: 117, column: 17, scope: !2016)
!2022 = !DILocation(line: 0, scope: !2016)
!2023 = !DILocation(line: 118, column: 9, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !2016, file: !3, line: 118, column: 9)
!2025 = !DILocation(line: 118, column: 9, scope: !2016)
!2026 = !DILocation(line: 119, column: 17, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2024, file: !3, line: 118, column: 24)
!2028 = !DILocation(line: 121, column: 9, scope: !2027)
!2029 = !DILocation(line: 0, scope: !2024)
!2030 = !DILocation(line: 130, column: 1, scope: !2016)
!2031 = distinct !DISubprogram(name: "free_sf_lock", scope: !3, file: !3, line: 132, type: !154, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2032)
!2032 = !{!2033}
!2033 = !DILocalVariable(name: "savedMask", scope: !2031, file: !3, line: 134, type: !61)
!2034 = !DILocation(line: 135, column: 17, scope: !2031)
!2035 = !DILocation(line: 0, scope: !2031)
!2036 = !DILocation(line: 136, column: 9, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2031, file: !3, line: 136, column: 9)
!2038 = !DILocation(line: 136, column: 9, scope: !2031)
!2039 = !DILocation(line: 137, column: 17, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2037, file: !3, line: 136, column: 24)
!2041 = !DILocation(line: 138, column: 9, scope: !2040)
!2042 = !DILocation(line: 143, column: 1, scope: !2031)
!2043 = !DILocation(line: 140, column: 9, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !2037, file: !3, line: 139, column: 12)
!2045 = !DILocation(line: 141, column: 9, scope: !2044)
!2046 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !3, file: !3, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2047 = !{!2048}
!2048 = !DILocalVariable(name: "Result", scope: !2046, file: !3, line: 147, type: !527)
!2049 = !DILocation(line: 148, column: 5, scope: !2046)
!2050 = !DILocation(line: 149, column: 18, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 148, column: 8)
!2052 = !DILocation(line: 0, scope: !2046)
!2053 = !DILocation(line: 150, column: 21, scope: !2046)
!2054 = !DILocation(line: 150, column: 5, scope: !2051)
!2055 = distinct !{!2055, !2049, !2056}
!2056 = !DILocation(line: 150, column: 25, scope: !2046)
!2057 = !DILocation(line: 151, column: 1, scope: !2046)
!2058 = distinct !DISubprogram(name: "release_sf_lock", scope: !3, file: !3, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2004)
!2059 = !DILocation(line: 160, column: 5, scope: !2058)
!2060 = !DILocation(line: 161, column: 1, scope: !2058)
!2061 = distinct !DISubprogram(name: "flash_sfc_config", scope: !3, file: !3, line: 186, type: !2062, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2064)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!527, !54}
!2064 = !{!2065, !2066}
!2065 = !DILocalVariable(name: "mode", arg: 1, scope: !2061, file: !3, line: 186, type: !54)
!2066 = !DILocalVariable(name: "ret", scope: !2061, file: !3, line: 188, type: !2067)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !87, line: 56, baseType: !7)
!2068 = !DILocation(line: 0, scope: !2061)
!2069 = !DILocation(line: 189, column: 5, scope: !2061)
!2070 = !DILocation(line: 190, column: 5, scope: !2061)
!2071 = !DILocation(line: 191, column: 9, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2061, file: !3, line: 191, column: 9)
!2073 = !DILocation(line: 191, column: 35, scope: !2072)
!2074 = !DILocation(line: 191, column: 9, scope: !2061)
!2075 = !DILocation(line: 193, column: 26, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2072, file: !3, line: 191, column: 44)
!2077 = !DILocation(line: 194, column: 5, scope: !2076)
!2078 = !DILocation(line: 195, column: 5, scope: !2061)
!2079 = !DILocation(line: 197, column: 5, scope: !2061)
!2080 = distinct !DISubprogram(name: "sfc_pad_config", scope: !3, file: !3, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2081)
!2081 = !{!2082}
!2082 = !DILocalVariable(name: "pad_io_setting", scope: !2080, file: !3, line: 166, type: !61)
!2083 = !DILocation(line: 0, scope: !2080)
!2084 = !DILocation(line: 168, column: 22, scope: !2080)
!2085 = !DILocation(line: 169, column: 20, scope: !2080)
!2086 = !DILocation(line: 170, column: 39, scope: !2080)
!2087 = !DILocation(line: 185, column: 1, scope: !2080)
!2088 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !3, file: !3, line: 200, type: !2089, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2091)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{null, !51, !210, !61}
!2091 = !{!2092, !2093, !2094}
!2092 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !2088, file: !3, line: 200, type: !51)
!2093 = !DILocalVariable(name: "buffer", arg: 2, scope: !2088, file: !3, line: 200, type: !210)
!2094 = !DILocalVariable(name: "length", arg: 3, scope: !2088, file: !3, line: 200, type: !61)
!2095 = !DILocation(line: 0, scope: !2088)
!2096 = !DILocation(line: 202, column: 5, scope: !2088)
!2097 = !DILocation(line: 203, column: 5, scope: !2088)
!2098 = !DILocation(line: 204, column: 5, scope: !2088)
!2099 = !DILocation(line: 205, column: 1, scope: !2088)
!2100 = distinct !DISubprogram(name: "flash_sfc_read", scope: !3, file: !3, line: 207, type: !2101, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2103)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!527, !61, !61, !210}
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109}
!2104 = !DILocalVariable(name: "address", arg: 1, scope: !2100, file: !3, line: 207, type: !61)
!2105 = !DILocalVariable(name: "length", arg: 2, scope: !2100, file: !3, line: 207, type: !61)
!2106 = !DILocalVariable(name: "buffer", arg: 3, scope: !2100, file: !3, line: 207, type: !210)
!2107 = !DILocalVariable(name: "ret", scope: !2100, file: !3, line: 209, type: !2067)
!2108 = !DILocalVariable(name: "u4Redidual", scope: !2100, file: !3, line: 210, type: !159)
!2109 = !DILocalVariable(name: "u4ReadLen", scope: !2100, file: !3, line: 211, type: !159)
!2110 = !DILocation(line: 0, scope: !2100)
!2111 = !DILocation(line: 213, column: 5, scope: !2100)
!2112 = !DILocation(line: 214, column: 31, scope: !2100)
!2113 = !DILocation(line: 214, column: 5, scope: !2100)
!2114 = !DILocation(line: 216, column: 31, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !3, line: 216, column: 13)
!2116 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 214, column: 46)
!2117 = !DILocation(line: 216, column: 13, scope: !2116)
!2118 = !DILocation(line: 217, column: 13, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2115, file: !3, line: 216, column: 48)
!2120 = !DILocation(line: 218, column: 9, scope: !2119)
!2121 = !DILocation(line: 219, column: 13, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 218, column: 55)
!2123 = distinct !DILexicalBlock(scope: !2115, file: !3, line: 218, column: 20)
!2124 = !DILocation(line: 220, column: 9, scope: !2122)
!2125 = !DILocation(line: 222, column: 25, scope: !2116)
!2126 = !DILocation(line: 223, column: 27, scope: !2116)
!2127 = !DILocation(line: 224, column: 33, scope: !2116)
!2128 = distinct !{!2128, !2113, !2129}
!2129 = !DILocation(line: 225, column: 5, scope: !2100)
!2130 = !DILocation(line: 227, column: 27, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 227, column: 9)
!2132 = !DILocation(line: 227, column: 9, scope: !2100)
!2133 = !DILocation(line: 228, column: 9, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 227, column: 44)
!2135 = !DILocation(line: 229, column: 5, scope: !2134)
!2136 = !DILocation(line: 230, column: 9, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2138, file: !3, line: 229, column: 51)
!2138 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 229, column: 16)
!2139 = !DILocation(line: 231, column: 5, scope: !2137)
!2140 = !DILocation(line: 232, column: 22, scope: !2100)
!2141 = !DILocation(line: 233, column: 5, scope: !2100)
!2142 = !DILocation(line: 234, column: 5, scope: !2100)
!2143 = distinct !DISubprogram(name: "flash_sfc_write", scope: !3, file: !3, line: 238, type: !2144, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2147)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!527, !61, !61, !2146}
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!2147 = !{!2148, !2149, !2150, !2151}
!2148 = !DILocalVariable(name: "address", arg: 1, scope: !2143, file: !3, line: 238, type: !61)
!2149 = !DILocalVariable(name: "length", arg: 2, scope: !2143, file: !3, line: 238, type: !61)
!2150 = !DILocalVariable(name: "buffer", arg: 3, scope: !2143, file: !3, line: 238, type: !2146)
!2151 = !DILocalVariable(name: "ret", scope: !2143, file: !3, line: 240, type: !2067)
!2152 = !DILocation(line: 0, scope: !2143)
!2153 = !DILocation(line: 242, column: 5, scope: !2143)
!2154 = !DILocation(line: 244, column: 5, scope: !2143)
!2155 = !DILocation(line: 245, column: 5, scope: !2143)
!2156 = !DILocation(line: 247, column: 11, scope: !2143)
!2157 = !DILocation(line: 248, column: 22, scope: !2143)
!2158 = !DILocation(line: 250, column: 5, scope: !2143)
!2159 = !DILocation(line: 252, column: 5, scope: !2143)
!2160 = !DILocation(line: 253, column: 5, scope: !2143)
!2161 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !3, file: !3, line: 256, type: !2162, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2164)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!527, !61, !61}
!2164 = !{!2165, !2166, !2167}
!2165 = !DILocalVariable(name: "address", arg: 1, scope: !2161, file: !3, line: 256, type: !61)
!2166 = !DILocalVariable(name: "type", arg: 2, scope: !2161, file: !3, line: 256, type: !61)
!2167 = !DILocalVariable(name: "ret", scope: !2161, file: !3, line: 258, type: !2067)
!2168 = !DILocation(line: 0, scope: !2161)
!2169 = !DILocation(line: 259, column: 5, scope: !2161)
!2170 = !DILocation(line: 261, column: 5, scope: !2161)
!2171 = !DILocation(line: 262, column: 5, scope: !2161)
!2172 = !DILocation(line: 264, column: 5, scope: !2161)
!2173 = !DILocation(line: 265, column: 5, scope: !2161)
!2174 = !DILocation(line: 267, column: 9, scope: !2161)
!2175 = !DILocation(line: 268, column: 22, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 268, column: 13)
!2177 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 267, column: 37)
!2178 = distinct !DILexicalBlock(scope: !2161, file: !3, line: 267, column: 9)
!2179 = !DILocation(line: 268, column: 31, scope: !2176)
!2180 = !DILocation(line: 268, column: 13, scope: !2177)
!2181 = !DILocation(line: 275, column: 15, scope: !2177)
!2182 = !DILocation(line: 276, column: 5, scope: !2177)
!2183 = !DILocation(line: 277, column: 22, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 277, column: 13)
!2185 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 276, column: 45)
!2186 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 276, column: 16)
!2187 = !DILocation(line: 277, column: 32, scope: !2184)
!2188 = !DILocation(line: 277, column: 13, scope: !2185)
!2189 = !DILocation(line: 284, column: 15, scope: !2185)
!2190 = !DILocation(line: 285, column: 5, scope: !2185)
!2191 = !DILocation(line: 286, column: 22, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 286, column: 13)
!2193 = distinct !DILexicalBlock(scope: !2194, file: !3, line: 285, column: 45)
!2194 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 285, column: 16)
!2195 = !DILocation(line: 286, column: 32, scope: !2192)
!2196 = !DILocation(line: 286, column: 13, scope: !2193)
!2197 = !DILocation(line: 293, column: 15, scope: !2193)
!2198 = !DILocation(line: 294, column: 5, scope: !2193)
!2199 = !DILocation(line: 301, column: 1, scope: !2161)
!2200 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !3, file: !3, line: 304, type: !154, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2201)
!2201 = !{!2202, !2203}
!2202 = !DILocalVariable(name: "sr", scope: !2200, file: !3, line: 306, type: !54)
!2203 = !DILocalVariable(name: "savedMask", scope: !2200, file: !3, line: 307, type: !61)
!2204 = !DILocation(line: 306, column: 5, scope: !2200)
!2205 = !DILocation(line: 0, scope: !2200)
!2206 = !DILocation(line: 306, column: 13, scope: !2200)
!2207 = !DILocation(line: 329, column: 17, scope: !2200)
!2208 = !DILocation(line: 330, column: 11, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2200, file: !3, line: 330, column: 9)
!2210 = !{i8 0, i8 2}
!2211 = !DILocation(line: 330, column: 30, scope: !2209)
!2212 = !DILocation(line: 331, column: 13, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 331, column: 13)
!2214 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 330, column: 53)
!2215 = !DILocation(line: 331, column: 32, scope: !2213)
!2216 = !DILocation(line: 331, column: 13, scope: !2214)
!2217 = !DILocation(line: 333, column: 13, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2213, file: !3, line: 331, column: 37)
!2219 = !DILocation(line: 337, column: 19, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 337, column: 13)
!2221 = !DILocation(line: 337, column: 22, scope: !2220)
!2222 = !DILocation(line: 337, column: 15, scope: !2220)
!2223 = !DILocation(line: 337, column: 13, scope: !2214)
!2224 = !DILocation(line: 339, column: 13, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 337, column: 44)
!2226 = !DILocation(line: 341, column: 13, scope: !2225)
!2227 = !DILocation(line: 342, column: 21, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 342, column: 21)
!2229 = distinct !DILexicalBlock(scope: !2225, file: !3, line: 341, column: 23)
!2230 = !DILocation(line: 342, column: 40, scope: !2228)
!2231 = !DILocation(line: 342, column: 21, scope: !2229)
!2232 = !DILocation(line: 344, column: 21, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2228, file: !3, line: 342, column: 45)
!2234 = !DILocation(line: 346, column: 27, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 346, column: 21)
!2236 = !DILocation(line: 346, column: 30, scope: !2235)
!2237 = !DILocation(line: 346, column: 23, scope: !2235)
!2238 = !DILocation(line: 346, column: 21, scope: !2229)
!2239 = distinct !{!2239, !2226, !2240}
!2240 = !DILocation(line: 349, column: 13, scope: !2225)
!2241 = !DILocation(line: 350, column: 13, scope: !2225)
!2242 = !DILocation(line: 352, column: 9, scope: !2225)
!2243 = !DILocation(line: 353, column: 13, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 352, column: 16)
!2245 = !DILocation(line: 356, column: 5, scope: !2200)
!2246 = !DILocation(line: 357, column: 1, scope: !2200)
!2247 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !3, file: !3, line: 359, type: !2248, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2250)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!527, !51, !61}
!2250 = !{!2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259}
!2251 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2247, file: !3, line: 359, type: !51)
!2252 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2247, file: !3, line: 359, type: !61)
!2253 = !DILocalVariable(name: "result", scope: !2247, file: !3, line: 361, type: !527)
!2254 = !DILocalVariable(name: "savedMask", scope: !2247, file: !3, line: 362, type: !61)
!2255 = !DILocalVariable(name: "status_busy", scope: !2247, file: !3, line: 363, type: !54)
!2256 = !DILocalVariable(name: "status_suspend", scope: !2247, file: !3, line: 363, type: !54)
!2257 = !DILocalVariable(name: "sr", scope: !2247, file: !3, line: 364, type: !54)
!2258 = !DILocalVariable(name: "sr1", scope: !2247, file: !3, line: 365, type: !54)
!2259 = !DILocalVariable(name: "check_status", scope: !2260, file: !3, line: 383, type: !54)
!2260 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 382, column: 49)
!2261 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 382, column: 9)
!2262 = !DILocation(line: 0, scope: !2247)
!2263 = !DILocation(line: 364, column: 5, scope: !2247)
!2264 = !DILocation(line: 364, column: 13, scope: !2247)
!2265 = !DILocation(line: 365, column: 5, scope: !2247)
!2266 = !DILocation(line: 365, column: 13, scope: !2247)
!2267 = !DILocation(line: 367, column: 9, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 367, column: 9)
!2269 = !DILocation(line: 367, column: 28, scope: !2268)
!2270 = !DILocation(line: 367, column: 9, scope: !2247)
!2271 = !DILocation(line: 368, column: 9, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 367, column: 33)
!2273 = !DILocation(line: 370, column: 23, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 369, column: 12)
!2275 = !DILocation(line: 373, column: 9, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 373, column: 9)
!2277 = !DILocation(line: 373, column: 30, scope: !2276)
!2278 = !DILocation(line: 373, column: 9, scope: !2247)
!2279 = !DILocation(line: 374, column: 9, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 373, column: 35)
!2281 = !DILocation(line: 376, column: 26, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 375, column: 12)
!2283 = !DILocation(line: 380, column: 17, scope: !2247)
!2284 = !DILocation(line: 382, column: 27, scope: !2261)
!2285 = !DILocation(line: 382, column: 11, scope: !2261)
!2286 = !DILocation(line: 382, column: 9, scope: !2247)
!2287 = !DILocation(line: 0, scope: !2260)
!2288 = !DILocation(line: 385, column: 13, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 385, column: 13)
!2290 = !DILocation(line: 385, column: 49, scope: !2289)
!2291 = !DILocation(line: 388, column: 17, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 388, column: 17)
!2293 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 385, column: 84)
!2294 = !DILocation(line: 388, column: 32, scope: !2292)
!2295 = !DILocation(line: 388, column: 17, scope: !2293)
!2296 = !DILocation(line: 399, column: 9, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 396, column: 56)
!2298 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 396, column: 20)
!2299 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 393, column: 20)
!2300 = !DILocation(line: 401, column: 28, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2302, file: !3, line: 399, column: 58)
!2302 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 399, column: 20)
!2303 = !DILocation(line: 402, column: 9, scope: !2301)
!2304 = !DILocation(line: 405, column: 20, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 405, column: 13)
!2306 = !DILocation(line: 405, column: 35, scope: !2305)
!2307 = !DILocation(line: 405, column: 16, scope: !2305)
!2308 = !DILocation(line: 405, column: 52, scope: !2305)
!2309 = !DILocation(line: 406, column: 21, scope: !2305)
!2310 = !DILocation(line: 406, column: 38, scope: !2305)
!2311 = !DILocation(line: 407, column: 13, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 406, column: 61)
!2313 = !DILocation(line: 410, column: 13, scope: !2312)
!2314 = !DILocation(line: 413, column: 9, scope: !2312)
!2315 = !DILocation(line: 414, column: 13, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2305, file: !3, line: 413, column: 16)
!2317 = !DILocation(line: 0, scope: !2305)
!2318 = !DILocation(line: 434, column: 5, scope: !2247)
!2319 = !DILocation(line: 0, scope: !2261)
!2320 = !DILocation(line: 436, column: 1, scope: !2247)
!2321 = !DILocation(line: 435, column: 5, scope: !2247)
!2322 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !3, file: !3, line: 439, type: !2323, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!527, !51, !61, !54}
!2325 = !{!2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333}
!2326 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2322, file: !3, line: 439, type: !51)
!2327 = !DILocalVariable(name: "addr", arg: 2, scope: !2322, file: !3, line: 439, type: !61)
!2328 = !DILocalVariable(name: "data", arg: 3, scope: !2322, file: !3, line: 439, type: !54)
!2329 = !DILocalVariable(name: "savedMask", scope: !2322, file: !3, line: 441, type: !61)
!2330 = !DILocalVariable(name: "result", scope: !2322, file: !3, line: 442, type: !527)
!2331 = !DILocalVariable(name: "check_data", scope: !2322, file: !3, line: 443, type: !54)
!2332 = !DILocalVariable(name: "status_busy", scope: !2322, file: !3, line: 444, type: !864)
!2333 = !DILocalVariable(name: "sr", scope: !2322, file: !3, line: 445, type: !54)
!2334 = !DILocation(line: 0, scope: !2322)
!2335 = !DILocation(line: 445, column: 5, scope: !2322)
!2336 = !DILocation(line: 445, column: 23, scope: !2322)
!2337 = !DILocation(line: 448, column: 9, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 448, column: 9)
!2339 = !DILocation(line: 448, column: 28, scope: !2338)
!2340 = !DILocation(line: 448, column: 9, scope: !2322)
!2341 = !DILocation(line: 449, column: 9, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2338, file: !3, line: 448, column: 33)
!2343 = !DILocation(line: 451, column: 23, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2338, file: !3, line: 450, column: 12)
!2345 = !DILocation(line: 454, column: 17, scope: !2322)
!2346 = !DILocation(line: 457, column: 9, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 457, column: 9)
!2348 = !DILocation(line: 457, column: 9, scope: !2322)
!2349 = !DILocation(line: 458, column: 9, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 457, column: 28)
!2351 = !DILocation(line: 459, column: 9, scope: !2350)
!2352 = !DILocation(line: 460, column: 9, scope: !2350)
!2353 = !DILocation(line: 461, column: 9, scope: !2350)
!2354 = !DILocation(line: 462, column: 5, scope: !2350)
!2355 = !DILocation(line: 464, column: 33, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 464, column: 15)
!2357 = !DILocation(line: 464, column: 17, scope: !2356)
!2358 = !DILocation(line: 464, column: 15, scope: !2347)
!2359 = !DILocation(line: 465, column: 9, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 464, column: 55)
!2361 = !DILocation(line: 467, column: 23, scope: !2360)
!2362 = !DILocation(line: 467, column: 22, scope: !2360)
!2363 = !DILocation(line: 468, column: 24, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 468, column: 13)
!2365 = !DILocation(line: 474, column: 5, scope: !2322)
!2366 = !DILocation(line: 477, column: 1, scope: !2322)
!2367 = !DILocation(line: 476, column: 5, scope: !2322)
!2368 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !84, file: !84, line: 73, type: !2369, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2371)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{null, !139, !139, !69}
!2371 = !{!2372, !2373, !2374}
!2372 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2368, file: !84, line: 73, type: !139)
!2373 = !DILocalVariable(name: "countValue", arg: 2, scope: !2368, file: !84, line: 73, type: !139)
!2374 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !2368, file: !84, line: 73, type: !69)
!2375 = !DILocation(line: 0, scope: !2368)
!2376 = !DILocation(line: 75, column: 5, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2368, file: !84, line: 75, column: 5)
!2378 = !DILocation(line: 75, column: 5, scope: !2368)
!2379 = !DILocation(line: 75, column: 5, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2377, file: !84, line: 75, column: 5)
!2381 = distinct !{!2381, !2379, !2379}
!2382 = !DILocation(line: 77, column: 9, scope: !2368)
!2383 = !DILocation(line: 78, column: 30, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2385, file: !84, line: 77, column: 24)
!2385 = distinct !DILexicalBlock(scope: !2368, file: !84, line: 77, column: 9)
!2386 = !DILocation(line: 0, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2384, file: !84, line: 79, column: 13)
!2388 = !DILocation(line: 79, column: 13, scope: !2384)
!2389 = !DILocation(line: 80, column: 34, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2387, file: !84, line: 79, column: 37)
!2391 = !DILocation(line: 81, column: 9, scope: !2390)
!2392 = !DILocation(line: 82, column: 34, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2387, file: !84, line: 81, column: 16)
!2394 = !DILocation(line: 85, column: 30, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !84, line: 84, column: 31)
!2396 = distinct !DILexicalBlock(scope: !2385, file: !84, line: 84, column: 16)
!2397 = !DILocation(line: 0, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2395, file: !84, line: 86, column: 13)
!2399 = !DILocation(line: 86, column: 13, scope: !2395)
!2400 = !DILocation(line: 87, column: 34, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2398, file: !84, line: 86, column: 37)
!2402 = !DILocation(line: 88, column: 9, scope: !2401)
!2403 = !DILocation(line: 89, column: 34, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2398, file: !84, line: 88, column: 16)
!2405 = !DILocation(line: 92, column: 1, scope: !2368)
!2406 = distinct !DISubprogram(name: "GPT_Start", scope: !84, file: !84, line: 94, type: !2407, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2409)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{null, !139}
!2409 = !{!2410}
!2410 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2406, file: !84, line: 94, type: !139)
!2411 = !DILocation(line: 0, scope: !2406)
!2412 = !DILocation(line: 96, column: 5, scope: !2406)
!2413 = !DILocation(line: 96, column: 5, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2415, file: !84, line: 96, column: 5)
!2415 = distinct !DILexicalBlock(scope: !2406, file: !84, line: 96, column: 5)
!2416 = distinct !{!2416, !2413, !2413}
!2417 = !DILocation(line: 99, column: 30, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2419, file: !84, line: 98, column: 24)
!2419 = distinct !DILexicalBlock(scope: !2406, file: !84, line: 98, column: 9)
!2420 = !DILocation(line: 100, column: 9, scope: !2418)
!2421 = !DILocation(line: 101, column: 5, scope: !2418)
!2422 = !DILocation(line: 102, column: 30, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2424, file: !84, line: 101, column: 31)
!2424 = distinct !DILexicalBlock(scope: !2419, file: !84, line: 101, column: 16)
!2425 = !DILocation(line: 103, column: 9, scope: !2423)
!2426 = !DILocation(line: 104, column: 5, scope: !2423)
!2427 = !DILocation(line: 105, column: 30, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2429, file: !84, line: 104, column: 31)
!2429 = distinct !DILexicalBlock(scope: !2424, file: !84, line: 104, column: 16)
!2430 = !DILocation(line: 106, column: 5, scope: !2428)
!2431 = !DILocation(line: 108, column: 1, scope: !2406)
!2432 = distinct !DISubprogram(name: "GPT_Stop", scope: !84, file: !84, line: 110, type: !2407, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2433)
!2433 = !{!2434}
!2434 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2432, file: !84, line: 110, type: !139)
!2435 = !DILocation(line: 0, scope: !2432)
!2436 = !DILocation(line: 112, column: 9, scope: !2432)
!2437 = !DILocation(line: 113, column: 30, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2439, file: !84, line: 112, column: 24)
!2439 = distinct !DILexicalBlock(scope: !2432, file: !84, line: 112, column: 9)
!2440 = !DILocation(line: 114, column: 30, scope: !2438)
!2441 = !DILocation(line: 115, column: 31, scope: !2438)
!2442 = !DILocation(line: 117, column: 5, scope: !2438)
!2443 = !DILocation(line: 118, column: 30, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2445, file: !84, line: 117, column: 31)
!2445 = distinct !DILexicalBlock(scope: !2439, file: !84, line: 117, column: 16)
!2446 = !DILocation(line: 119, column: 30, scope: !2444)
!2447 = !DILocation(line: 120, column: 31, scope: !2444)
!2448 = !DILocation(line: 121, column: 5, scope: !2444)
!2449 = !DILocation(line: 122, column: 30, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2451, file: !84, line: 121, column: 31)
!2451 = distinct !DILexicalBlock(scope: !2445, file: !84, line: 121, column: 16)
!2452 = !DILocation(line: 123, column: 5, scope: !2450)
!2453 = !DILocation(line: 124, column: 30, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !84, line: 123, column: 31)
!2455 = distinct !DILexicalBlock(scope: !2451, file: !84, line: 123, column: 16)
!2456 = !DILocation(line: 125, column: 5, scope: !2454)
!2457 = !DILocation(line: 128, column: 1, scope: !2432)
!2458 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !84, file: !84, line: 130, type: !600, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2459)
!2459 = !{!2460, !2461}
!2460 = !DILocalVariable(name: "irq_number", arg: 1, scope: !2458, file: !84, line: 130, type: !339)
!2461 = !DILocalVariable(name: "GPT_Status", scope: !2458, file: !84, line: 132, type: !321)
!2462 = !DILocation(line: 0, scope: !2458)
!2463 = !DILocation(line: 135, column: 18, scope: !2458)
!2464 = !DILocation(line: 136, column: 26, scope: !2458)
!2465 = !DILocation(line: 136, column: 24, scope: !2458)
!2466 = !DILocation(line: 138, column: 20, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2458, file: !84, line: 138, column: 9)
!2468 = !DILocation(line: 138, column: 9, scope: !2458)
!2469 = !DILocation(line: 141, column: 27, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2467, file: !84, line: 141, column: 16)
!2471 = !DILocation(line: 141, column: 16, scope: !2467)
!2472 = !DILocation(line: 0, scope: !2467)
!2473 = !DILocation(line: 145, column: 1, scope: !2458)
!2474 = distinct !DISubprogram(name: "GPT_init", scope: !84, file: !84, line: 147, type: !2475, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2477)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{null, !139, !139, !153}
!2477 = !{!2478, !2479, !2480}
!2478 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2474, file: !84, line: 147, type: !139)
!2479 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !2474, file: !84, line: 147, type: !139)
!2480 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !2474, file: !84, line: 147, type: !153)
!2481 = !DILocation(line: 0, scope: !2474)
!2482 = !DILocation(line: 149, column: 5, scope: !2474)
!2483 = !DILocation(line: 149, column: 5, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !84, line: 149, column: 5)
!2485 = distinct !DILexicalBlock(scope: !2474, file: !84, line: 149, column: 5)
!2486 = distinct !{!2486, !2483, !2483}
!2487 = !DILocation(line: 149, column: 5, scope: !2485)
!2488 = !DILocation(line: 151, column: 23, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2474, file: !84, line: 151, column: 9)
!2490 = !DILocation(line: 152, column: 9, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2489, file: !84, line: 151, column: 41)
!2492 = !DILocation(line: 153, column: 9, scope: !2491)
!2493 = !DILocation(line: 154, column: 9, scope: !2491)
!2494 = !DILocation(line: 155, column: 5, scope: !2491)
!2495 = !DILocation(line: 157, column: 9, scope: !2474)
!2496 = !DILocation(line: 158, column: 37, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2498, file: !84, line: 157, column: 24)
!2498 = distinct !DILexicalBlock(scope: !2474, file: !84, line: 157, column: 9)
!2499 = !DILocation(line: 159, column: 30, scope: !2497)
!2500 = !DILocation(line: 160, column: 45, scope: !2497)
!2501 = !DILocation(line: 160, column: 30, scope: !2497)
!2502 = !DILocation(line: 161, column: 5, scope: !2497)
!2503 = !DILocation(line: 162, column: 37, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2505, file: !84, line: 161, column: 31)
!2505 = distinct !DILexicalBlock(scope: !2498, file: !84, line: 161, column: 16)
!2506 = !DILocation(line: 163, column: 30, scope: !2504)
!2507 = !DILocation(line: 164, column: 45, scope: !2504)
!2508 = !DILocation(line: 164, column: 30, scope: !2504)
!2509 = !DILocation(line: 165, column: 5, scope: !2504)
!2510 = !DILocation(line: 166, column: 59, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2512, file: !84, line: 165, column: 31)
!2512 = distinct !DILexicalBlock(scope: !2505, file: !84, line: 165, column: 16)
!2513 = !DILocation(line: 166, column: 45, scope: !2511)
!2514 = !DILocation(line: 166, column: 30, scope: !2511)
!2515 = !DILocation(line: 167, column: 5, scope: !2511)
!2516 = !DILocation(line: 168, column: 59, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2518, file: !84, line: 167, column: 31)
!2518 = distinct !DILexicalBlock(scope: !2512, file: !84, line: 167, column: 16)
!2519 = !DILocation(line: 168, column: 45, scope: !2517)
!2520 = !DILocation(line: 168, column: 30, scope: !2517)
!2521 = !DILocation(line: 169, column: 30, scope: !2517)
!2522 = !DILocation(line: 170, column: 5, scope: !2517)
!2523 = !DILocation(line: 171, column: 1, scope: !2474)
!2524 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !84, file: !84, line: 173, type: !2525, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2527)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!139, !139}
!2527 = !{!2528, !2529}
!2528 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2524, file: !84, line: 173, type: !139)
!2529 = !DILocalVariable(name: "current_count", scope: !2524, file: !84, line: 175, type: !139)
!2530 = !DILocation(line: 0, scope: !2524)
!2531 = !DILocation(line: 177, column: 5, scope: !2524)
!2532 = !DILocation(line: 177, column: 5, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !84, line: 177, column: 5)
!2534 = distinct !DILexicalBlock(scope: !2524, file: !84, line: 177, column: 5)
!2535 = distinct !{!2535, !2532, !2532}
!2536 = !DILocation(line: 183, column: 5, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2538, file: !84, line: 181, column: 31)
!2538 = distinct !DILexicalBlock(scope: !2539, file: !84, line: 181, column: 16)
!2539 = distinct !DILexicalBlock(scope: !2524, file: !84, line: 179, column: 9)
!2540 = !DILocation(line: 185, column: 5, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2542, file: !84, line: 183, column: 31)
!2542 = distinct !DILexicalBlock(scope: !2538, file: !84, line: 183, column: 16)
!2543 = !DILocation(line: 187, column: 5, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2545, file: !84, line: 185, column: 31)
!2545 = distinct !DILexicalBlock(scope: !2542, file: !84, line: 185, column: 16)
!2546 = !DILocation(line: 0, scope: !2539)
!2547 = !DILocation(line: 189, column: 5, scope: !2524)
!2548 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !84, file: !84, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2004)
!2549 = !DILocation(line: 195, column: 5, scope: !2548)
!2550 = !DILocation(line: 196, column: 1, scope: !2548)
!2551 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !84, file: !84, line: 198, type: !154, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2004)
!2552 = !DILocation(line: 200, column: 5, scope: !2551)
!2553 = !DILocation(line: 201, column: 1, scope: !2551)
!2554 = distinct !DISubprogram(name: "hal_trng_init", scope: !1862, file: !1862, line: 59, type: !2555, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !2004)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!2557}
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_trng_status_t", file: !1865, line: 96, baseType: !1864)
!2558 = !DILocation(line: 61, column: 5, scope: !2554)
!2559 = distinct !DISubprogram(name: "hal_trng_deinit", scope: !1862, file: !1862, line: 71, type: !2555, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !2004)
!2560 = !DILocation(line: 73, column: 5, scope: !2559)
!2561 = distinct !DISubprogram(name: "hal_trng_get_generated_random_number", scope: !1862, file: !1862, line: 85, type: !2562, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !2565)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!2557, !2564}
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!2565 = !{!2566, !2567, !2569, !2571, !2573}
!2566 = !DILocalVariable(name: "random_number", arg: 1, scope: !2561, file: !1862, line: 85, type: !2564)
!2567 = !DILocalVariable(name: "cnt", scope: !2561, file: !1862, line: 87, type: !2568)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !87, line: 60, baseType: !322)
!2569 = !DILocalVariable(name: "addr", scope: !2570, file: !1862, line: 89, type: !284)
!2570 = distinct !DILexicalBlock(scope: !2561, file: !1862, line: 89, column: 5)
!2571 = !DILocalVariable(name: "addr", scope: !2572, file: !1862, line: 100, type: !284)
!2572 = distinct !DILexicalBlock(scope: !2561, file: !1862, line: 100, column: 5)
!2573 = !DILocalVariable(name: "addr", scope: !2574, file: !1862, line: 101, type: !284)
!2574 = distinct !DILexicalBlock(scope: !2561, file: !1862, line: 101, column: 5)
!2575 = !DILocation(line: 0, scope: !2561)
!2576 = !DILocation(line: 0, scope: !2570)
!2577 = !DILocation(line: 89, column: 5, scope: !2570)
!2578 = !DILocation(line: 91, column: 5, scope: !2561)
!2579 = !DILocation(line: 92, column: 13, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2581, file: !1862, line: 92, column: 13)
!2581 = distinct !DILexicalBlock(scope: !2561, file: !1862, line: 91, column: 23)
!2582 = !DILocation(line: 92, column: 50, scope: !2580)
!2583 = !DILocation(line: 92, column: 13, scope: !2581)
!2584 = !DILocation(line: 95, column: 9, scope: !2581)
!2585 = !DILocation(line: 96, column: 12, scope: !2581)
!2586 = !DILocation(line: 91, column: 16, scope: !2561)
!2587 = distinct !{!2587, !2578, !2588}
!2588 = !DILocation(line: 97, column: 5, scope: !2561)
!2589 = !DILocation(line: 99, column: 22, scope: !2561)
!2590 = !DILocation(line: 99, column: 20, scope: !2561)
!2591 = !DILocation(line: 0, scope: !2572)
!2592 = !DILocation(line: 100, column: 5, scope: !2572)
!2593 = !DILocation(line: 0, scope: !2574)
!2594 = !DILocation(line: 101, column: 5, scope: !2574)
!2595 = !DILocation(line: 103, column: 13, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2561, file: !1862, line: 103, column: 9)
!2597 = !DILocation(line: 103, column: 9, scope: !2561)
!2598 = !DILocation(line: 104, column: 24, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2596, file: !1862, line: 103, column: 21)
!2600 = !DILocation(line: 105, column: 9, scope: !2599)
!2601 = !DILocation(line: 0, scope: !2596)
!2602 = !DILocation(line: 109, column: 1, scope: !2561)
!2603 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !1872, file: !1872, line: 47, type: !2604, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2606)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{null, !61}
!2606 = !{!2607}
!2607 = !DILocalVariable(name: "addr", arg: 1, scope: !2603, file: !1872, line: 47, type: !61)
!2608 = !DILocation(line: 0, scope: !2603)
!2609 = !DILocation(line: 49, column: 15, scope: !2603)
!2610 = !DILocation(line: 51, column: 5, scope: !2603)
!2611 = !{i64 2624}
!2612 = !DILocation(line: 52, column: 5, scope: !2603)
!2613 = !{i64 2651}
!2614 = !DILocation(line: 53, column: 1, scope: !2603)
!2615 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !1872, file: !1872, line: 56, type: !2616, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2618)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{null, !30}
!2618 = !{!2619}
!2619 = !DILocalVariable(name: "source", arg: 1, scope: !2615, file: !1872, line: 56, type: !30)
!2620 = !DILocation(line: 0, scope: !2615)
!2621 = !DILocation(line: 58, column: 16, scope: !2615)
!2622 = !DILocation(line: 59, column: 1, scope: !2615)
!2623 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !1872, file: !1872, line: 61, type: !1985, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2624)
!2624 = !{!2625}
!2625 = !DILocalVariable(name: "mask", scope: !2623, file: !1872, line: 63, type: !61)
!2626 = !DILocation(line: 470, column: 3, scope: !2627, inlinedAt: !2631)
!2627 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !2628, file: !2628, line: 466, type: !1985, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2629)
!2628 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!2629 = !{!2630}
!2630 = !DILocalVariable(name: "result", scope: !2627, file: !2628, line: 468, type: !61)
!2631 = distinct !DILocation(line: 64, column: 5, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2623, file: !1872, line: 64, column: 5)
!2633 = !{i64 302564}
!2634 = !DILocation(line: 0, scope: !2627, inlinedAt: !2631)
!2635 = !DILocation(line: 0, scope: !2623)
!2636 = !DILocation(line: 330, column: 3, scope: !2637, inlinedAt: !2638)
!2637 = distinct !DISubprogram(name: "__disable_irq", scope: !2628, file: !2628, line: 328, type: !154, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2004)
!2638 = distinct !DILocation(line: 64, column: 5, scope: !2632)
!2639 = !{i64 299228}
!2640 = !DILocation(line: 65, column: 5, scope: !2623)
!2641 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !1872, file: !1872, line: 68, type: !2604, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2642)
!2642 = !{!2643}
!2643 = !DILocalVariable(name: "mask", arg: 1, scope: !2641, file: !1872, line: 68, type: !61)
!2644 = !DILocation(line: 0, scope: !2641)
!2645 = !DILocalVariable(name: "priMask", arg: 1, scope: !2646, file: !2628, line: 481, type: !61)
!2646 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !2628, file: !2628, line: 481, type: !2604, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1871, retainedNodes: !2647)
!2647 = !{!2645}
!2648 = !DILocation(line: 0, scope: !2646, inlinedAt: !2649)
!2649 = distinct !DILocation(line: 70, column: 5, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2641, file: !1872, line: 70, column: 5)
!2651 = !DILocation(line: 483, column: 3, scope: !2646, inlinedAt: !2649)
!2652 = !{i64 302882}
!2653 = !DILocation(line: 71, column: 1, scope: !2641)
!2654 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !165, file: !165, line: 60, type: !2655, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2657)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{!139}
!2657 = !{!2658}
!2658 = !DILocalVariable(name: "current_count", scope: !2654, file: !165, line: 62, type: !139)
!2659 = !DILocation(line: 64, column: 21, scope: !2654)
!2660 = !DILocation(line: 0, scope: !2654)
!2661 = !DILocation(line: 66, column: 5, scope: !2654)
!2662 = distinct !DISubprogram(name: "sfc_get_systime", scope: !165, file: !165, line: 69, type: !2655, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2004)
!2663 = !DILocation(line: 71, column: 12, scope: !2662)
!2664 = !DILocation(line: 71, column: 5, scope: !2662)
!2665 = distinct !DISubprogram(name: "sfc_delay_time", scope: !165, file: !165, line: 74, type: !2407, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2666)
!2666 = !{!2667, !2668, !2669}
!2667 = !DILocalVariable(name: "count", arg: 1, scope: !2665, file: !165, line: 74, type: !139)
!2668 = !DILocalVariable(name: "end_count", scope: !2665, file: !165, line: 76, type: !139)
!2669 = !DILocalVariable(name: "current", scope: !2665, file: !165, line: 76, type: !139)
!2670 = !DILocation(line: 0, scope: !2665)
!2671 = !DILocation(line: 78, column: 17, scope: !2665)
!2672 = !DILocation(line: 78, column: 35, scope: !2665)
!2673 = !DILocation(line: 78, column: 43, scope: !2665)
!2674 = !DILocation(line: 79, column: 15, scope: !2665)
!2675 = !DILocation(line: 80, column: 12, scope: !2665)
!2676 = !DILocation(line: 80, column: 5, scope: !2665)
!2677 = !DILocation(line: 81, column: 19, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2665, file: !165, line: 80, column: 49)
!2679 = distinct !{!2679, !2676, !2680}
!2680 = !DILocation(line: 82, column: 5, scope: !2665)
!2681 = !DILocation(line: 83, column: 1, scope: !2665)
!2682 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !165, file: !165, line: 85, type: !2616, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2683)
!2683 = !{!2684}
!2684 = !DILocalVariable(name: "ms", arg: 1, scope: !2682, file: !165, line: 85, type: !30)
!2685 = !DILocation(line: 0, scope: !2682)
!2686 = !DILocation(line: 87, column: 23, scope: !2682)
!2687 = !DILocation(line: 87, column: 5, scope: !2682)
!2688 = !DILocation(line: 88, column: 1, scope: !2682)
!2689 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !165, file: !165, line: 90, type: !2690, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2004)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!7}
!2692 = !DILocation(line: 92, column: 5, scope: !2689)
!2693 = distinct !DISubprogram(name: "sfc_Init", scope: !165, file: !165, line: 121, type: !1743, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2694)
!2694 = !{!2695, !2696}
!2695 = !DILocalVariable(name: "security_enable", arg: 1, scope: !2693, file: !165, line: 121, type: !7)
!2696 = !DILocalVariable(name: "reg", scope: !2693, file: !165, line: 123, type: !30)
!2697 = !DILocation(line: 0, scope: !2693)
!2698 = !DILocation(line: 125, column: 27, scope: !2693)
!2699 = !DILocation(line: 141, column: 5, scope: !2693)
!2700 = !DILocation(line: 142, column: 5, scope: !2693)
!2701 = !DILocation(line: 143, column: 5, scope: !2693)
!2702 = !DILocation(line: 144, column: 5, scope: !2693)
!2703 = !DILocation(line: 145, column: 5, scope: !2693)
!2704 = !DILocation(line: 147, column: 5, scope: !2693)
!2705 = !DILocation(line: 150, column: 11, scope: !2693)
!2706 = !DILocation(line: 151, column: 9, scope: !2693)
!2707 = !DILocation(line: 152, column: 5, scope: !2693)
!2708 = !DILocation(line: 153, column: 5, scope: !2693)
!2709 = !DILocation(line: 155, column: 11, scope: !2693)
!2710 = !DILocation(line: 156, column: 9, scope: !2693)
!2711 = !DILocation(line: 157, column: 5, scope: !2693)
!2712 = !DILocation(line: 158, column: 5, scope: !2693)
!2713 = !DILocation(line: 160, column: 11, scope: !2693)
!2714 = !DILocation(line: 161, column: 9, scope: !2693)
!2715 = !DILocation(line: 162, column: 5, scope: !2693)
!2716 = !DILocation(line: 163, column: 5, scope: !2693)
!2717 = !DILocation(line: 165, column: 11, scope: !2693)
!2718 = !DILocation(line: 166, column: 9, scope: !2693)
!2719 = !DILocation(line: 167, column: 5, scope: !2693)
!2720 = !DILocation(line: 168, column: 5, scope: !2693)
!2721 = !DILocation(line: 173, column: 9, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2693, file: !165, line: 173, column: 9)
!2723 = !DILocation(line: 173, column: 9, scope: !2693)
!2724 = !DILocation(line: 174, column: 31, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2722, file: !165, line: 173, column: 26)
!2726 = !DILocation(line: 184, column: 9, scope: !2725)
!2727 = !DILocation(line: 185, column: 9, scope: !2725)
!2728 = !DILocation(line: 187, column: 9, scope: !2725)
!2729 = !DILocation(line: 188, column: 9, scope: !2725)
!2730 = !DILocation(line: 189, column: 9, scope: !2725)
!2731 = !DILocation(line: 190, column: 9, scope: !2725)
!2732 = !DILocation(line: 192, column: 9, scope: !2725)
!2733 = !DILocation(line: 193, column: 5, scope: !2725)
!2734 = !DILocation(line: 194, column: 1, scope: !2693)
!2735 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !165, file: !165, line: 196, type: !2690, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2736)
!2736 = !{!2737, !2738}
!2737 = !DILocalVariable(name: "qpi_en", scope: !2735, file: !165, line: 198, type: !195)
!2738 = !DILocalVariable(name: "sfc_read_mode", scope: !2735, file: !165, line: 199, type: !195)
!2739 = !DILocation(line: 198, column: 29, scope: !2735)
!2740 = !DILocation(line: 0, scope: !2735)
!2741 = !DILocation(line: 199, column: 36, scope: !2735)
!2742 = !DILocation(line: 199, column: 89, scope: !2735)
!2743 = !DILocation(line: 204, column: 23, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2735, file: !165, line: 204, column: 9)
!2745 = !DILocation(line: 204, column: 9, scope: !2735)
!2746 = !DILocation(line: 218, column: 1, scope: !2735)
!2747 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !165, file: !165, line: 221, type: !2748, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2750)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{null, !195, !7}
!2750 = !{!2751, !2752, !2753}
!2751 = !DILocalVariable(name: "reg", arg: 1, scope: !2747, file: !165, line: 221, type: !195)
!2752 = !DILocalVariable(name: "mode", arg: 2, scope: !2747, file: !165, line: 221, type: !7)
!2753 = !DILocalVariable(name: "tmp", scope: !2747, file: !165, line: 223, type: !195)
!2754 = !DILocation(line: 0, scope: !2747)
!2755 = !DILocation(line: 224, column: 5, scope: !2747)
!2756 = !DILocation(line: 236, column: 9, scope: !2747)
!2757 = !DILocation(line: 237, column: 5, scope: !2747)
!2758 = !DILocation(line: 238, column: 1, scope: !2747)
!2759 = distinct !DISubprogram(name: "sfc_Command_List", scope: !165, file: !165, line: 296, type: !2760, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2762)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{null, !193}
!2762 = !{!2763, !2764, !2765, !2766}
!2763 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !2759, file: !165, line: 296, type: !193)
!2764 = !DILocalVariable(name: "i", scope: !2759, file: !165, line: 298, type: !30)
!2765 = !DILocalVariable(name: "val", scope: !2759, file: !165, line: 299, type: !30)
!2766 = !DILocalVariable(name: "force_qpi", scope: !2759, file: !165, line: 299, type: !30)
!2767 = !DILocation(line: 0, scope: !2759)
!2768 = !DILocation(line: 301, column: 10, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2759, file: !165, line: 301, column: 9)
!2770 = !DILocation(line: 301, column: 9, scope: !2759)
!2771 = !DILocation(line: 305, column: 11, scope: !2759)
!2772 = !DILocation(line: 310, column: 5, scope: !2759)
!2773 = !DILocation(line: 311, column: 17, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2759, file: !165, line: 310, column: 17)
!2775 = !DILocation(line: 311, column: 9, scope: !2774)
!2776 = !DILocation(line: 319, column: 17, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2774, file: !165, line: 311, column: 29)
!2778 = !DILocation(line: 321, column: 17, scope: !2777)
!2779 = !DILocation(line: 322, column: 17, scope: !2777)
!2780 = !DILocation(line: 325, column: 33, scope: !2774)
!2781 = !DILocation(line: 325, column: 23, scope: !2774)
!2782 = !DILocation(line: 325, column: 49, scope: !2774)
!2783 = !DILocation(line: 325, column: 39, scope: !2774)
!2784 = !DILocation(line: 325, column: 9, scope: !2774)
!2785 = !DILocation(line: 327, column: 15, scope: !2774)
!2786 = !DILocation(line: 327, column: 11, scope: !2774)
!2787 = !DILocation(line: 329, column: 9, scope: !2774)
!2788 = distinct !{!2788, !2772, !2789}
!2789 = !DILocation(line: 330, column: 5, scope: !2759)
!2790 = !DILocation(line: 331, column: 1, scope: !2759)
!2791 = distinct !DISubprogram(name: "sfc_transfer", scope: !165, file: !165, line: 417, type: !2792, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2795)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{!7, !193, !2794, !177, !2794, !30}
!2794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!2796 = !DILocalVariable(name: "cmd", arg: 1, scope: !2791, file: !165, line: 417, type: !193)
!2797 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2791, file: !165, line: 417, type: !2794)
!2798 = !DILocalVariable(name: "data", arg: 3, scope: !2791, file: !165, line: 417, type: !177)
!2799 = !DILocalVariable(name: "data_len", arg: 4, scope: !2791, file: !165, line: 417, type: !2794)
!2800 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !2791, file: !165, line: 417, type: !30)
!2801 = !DILocalVariable(name: "tmp", scope: !2791, file: !165, line: 419, type: !30)
!2802 = !DILocalVariable(name: "i", scope: !2791, file: !165, line: 419, type: !30)
!2803 = !DILocalVariable(name: "j", scope: !2791, file: !165, line: 419, type: !30)
!2804 = !DILocalVariable(name: "p_data", scope: !2791, file: !165, line: 420, type: !177)
!2805 = !DILocalVariable(name: "p_tmp", scope: !2791, file: !165, line: 420, type: !177)
!2806 = !DILocalVariable(name: "savedMask", scope: !2791, file: !165, line: 421, type: !30)
!2807 = !DILocation(line: 0, scope: !2791)
!2808 = !DILocation(line: 419, column: 5, scope: !2791)
!2809 = !DILocation(line: 423, column: 18, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2791, file: !165, line: 423, column: 9)
!2811 = !DILocation(line: 423, column: 30, scope: !2810)
!2812 = !DILocation(line: 423, column: 9, scope: !2791)
!2813 = !DILocation(line: 430, column: 19, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !165, line: 430, column: 5)
!2815 = distinct !DILexicalBlock(scope: !2791, file: !165, line: 430, column: 5)
!2816 = !DILocation(line: 430, column: 5, scope: !2815)
!2817 = !DILocation(line: 431, column: 25, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2819, file: !165, line: 431, column: 9)
!2819 = distinct !DILexicalBlock(scope: !2814, file: !165, line: 430, column: 43)
!2820 = !DILocation(line: 431, column: 32, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2818, file: !165, line: 431, column: 9)
!2822 = !DILocation(line: 431, column: 9, scope: !2818)
!2823 = !DILocation(line: 432, column: 24, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2821, file: !165, line: 431, column: 62)
!2825 = !DILocation(line: 432, column: 13, scope: !2824)
!2826 = !DILocation(line: 432, column: 22, scope: !2824)
!2827 = !DILocation(line: 431, column: 53, scope: !2821)
!2828 = !DILocation(line: 431, column: 58, scope: !2821)
!2829 = !DILocation(line: 431, column: 42, scope: !2821)
!2830 = distinct !{!2830, !2822, !2831}
!2831 = !DILocation(line: 433, column: 9, scope: !2818)
!2832 = !DILocation(line: 434, column: 9, scope: !2819)
!2833 = !DILocation(line: 0, scope: !2815)
!2834 = !DILocation(line: 436, column: 15, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2819, file: !165, line: 436, column: 13)
!2836 = !DILocation(line: 436, column: 20, scope: !2835)
!2837 = !DILocation(line: 437, column: 13, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2835, file: !165, line: 436, column: 46)
!2839 = !DILocation(line: 438, column: 13, scope: !2838)
!2840 = !DILocation(line: 440, column: 9, scope: !2838)
!2841 = !DILocation(line: 430, column: 37, scope: !2814)
!2842 = distinct !{!2842, !2816, !2843}
!2843 = !DILocation(line: 441, column: 5, scope: !2815)
!2844 = !DILocation(line: 443, column: 17, scope: !2791)
!2845 = !DILocation(line: 444, column: 9, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2791, file: !165, line: 444, column: 9)
!2847 = !DILocation(line: 444, column: 9, scope: !2791)
!2848 = !DILocation(line: 445, column: 9, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2846, file: !165, line: 444, column: 32)
!2850 = !DILocation(line: 446, column: 9, scope: !2849)
!2851 = !DILocation(line: 447, column: 5, scope: !2849)
!2852 = !DILocation(line: 449, column: 5, scope: !2791)
!2853 = !DILocation(line: 450, column: 5, scope: !2791)
!2854 = !DILocation(line: 452, column: 5, scope: !2791)
!2855 = !DILocation(line: 453, column: 5, scope: !2791)
!2856 = !DILocation(line: 454, column: 5, scope: !2791)
!2857 = !DILocation(line: 456, column: 76, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2859, file: !165, line: 456, column: 5)
!2859 = distinct !DILexicalBlock(scope: !2791, file: !165, line: 456, column: 5)
!2860 = !DILocation(line: 456, column: 5, scope: !2859)
!2861 = !DILocation(line: 456, column: 62, scope: !2859)
!2862 = !DILocation(line: 457, column: 17, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2858, file: !165, line: 456, column: 111)
!2864 = !DILocation(line: 457, column: 15, scope: !2863)
!2865 = !DILocation(line: 456, column: 88, scope: !2858)
!2866 = !DILocation(line: 456, column: 93, scope: !2858)
!2867 = !DILocation(line: 456, column: 101, scope: !2858)
!2868 = distinct !{!2868, !2860, !2869}
!2869 = !DILocation(line: 458, column: 5, scope: !2859)
!2870 = !DILocation(line: 461, column: 1, scope: !2791)
!2871 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !165, file: !165, line: 402, type: !1743, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2872)
!2872 = !{!2873, !2874}
!2873 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !2871, file: !165, line: 402, type: !7)
!2874 = !DILocalVariable(name: "val", scope: !2871, file: !165, line: 404, type: !195)
!2875 = !DILocation(line: 0, scope: !2871)
!2876 = !DILocation(line: 406, column: 11, scope: !2871)
!2877 = !DILocation(line: 408, column: 9, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2871, file: !165, line: 408, column: 9)
!2879 = !DILocation(line: 408, column: 25, scope: !2878)
!2880 = !DILocation(line: 412, column: 9, scope: !2871)
!2881 = !DILocation(line: 414, column: 5, scope: !2871)
!2882 = !DILocation(line: 415, column: 1, scope: !2871)
!2883 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !165, file: !165, line: 384, type: !154, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2004)
!2884 = !DILocation(line: 396, column: 5, scope: !2883)
!2885 = !DILocation(line: 397, column: 5, scope: !2883)
!2886 = !DILocation(line: 399, column: 1, scope: !2883)
!2887 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !165, file: !165, line: 339, type: !2888, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2890)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!195}
!2890 = !{!2891, !2892}
!2891 = !DILocalVariable(name: "val", scope: !2887, file: !165, line: 341, type: !195)
!2892 = !DILocalVariable(name: "misc_ctl", scope: !2887, file: !165, line: 342, type: !195)
!2893 = !DILocation(line: 0, scope: !2887)
!2894 = !DILocation(line: 344, column: 11, scope: !2887)
!2895 = !DILocation(line: 347, column: 9, scope: !2887)
!2896 = !DILocation(line: 349, column: 5, scope: !2887)
!2897 = !DILocation(line: 352, column: 5, scope: !2887)
!2898 = !DILocation(line: 352, column: 14, scope: !2887)
!2899 = !DILocation(line: 352, column: 44, scope: !2887)
!2900 = !DILocation(line: 352, column: 12, scope: !2887)
!2901 = distinct !{!2901, !2897, !2902}
!2902 = !DILocation(line: 353, column: 9, scope: !2887)
!2903 = !DILocation(line: 354, column: 13, scope: !2887)
!2904 = !DILocation(line: 354, column: 43, scope: !2887)
!2905 = !DILocation(line: 354, column: 5, scope: !2887)
!2906 = distinct !{!2906, !2905, !2907}
!2907 = !DILocation(line: 355, column: 9, scope: !2887)
!2908 = !DILocation(line: 357, column: 5, scope: !2887)
!2909 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !165, file: !165, line: 366, type: !154, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2910)
!2910 = !{!2911}
!2911 = !DILocalVariable(name: "val", scope: !2909, file: !165, line: 368, type: !195)
!2912 = !DILocation(line: 371, column: 11, scope: !2909)
!2913 = !DILocation(line: 0, scope: !2909)
!2914 = !DILocation(line: 372, column: 9, scope: !2909)
!2915 = !DILocation(line: 373, column: 5, scope: !2909)
!2916 = !DILocation(line: 378, column: 11, scope: !2909)
!2917 = !DILocation(line: 379, column: 9, scope: !2909)
!2918 = !DILocation(line: 380, column: 5, scope: !2909)
!2919 = !DILocation(line: 381, column: 1, scope: !2909)
!2920 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !165, file: !165, line: 463, type: !154, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2921)
!2921 = !{!2922, !2923}
!2922 = !DILocalVariable(name: "i", scope: !2920, file: !165, line: 465, type: !30)
!2923 = !DILocalVariable(name: "p_data", scope: !2920, file: !165, line: 466, type: !177)
!2924 = !DILocation(line: 0, scope: !2920)
!2925 = !DILocation(line: 470, column: 5, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2920, file: !165, line: 470, column: 5)
!2927 = !DILocation(line: 471, column: 9, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2929, file: !165, line: 470, column: 63)
!2929 = distinct !DILexicalBlock(scope: !2926, file: !165, line: 470, column: 5)
!2930 = !DILocation(line: 470, column: 52, scope: !2929)
!2931 = !DILocation(line: 470, column: 59, scope: !2929)
!2932 = !DILocation(line: 470, column: 19, scope: !2929)
!2933 = distinct !{!2933, !2925, !2934}
!2934 = !DILocation(line: 472, column: 5, scope: !2926)
!2935 = !DILocation(line: 475, column: 1, scope: !2920)
!2936 = distinct !DISubprogram(name: "sfc_read", scope: !165, file: !165, line: 478, type: !2937, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2939)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!7, !193, !2794, !177, !2794}
!2939 = !{!2940, !2941, !2942, !2943}
!2940 = !DILocalVariable(name: "cmd", arg: 1, scope: !2936, file: !165, line: 478, type: !193)
!2941 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2936, file: !165, line: 478, type: !2794)
!2942 = !DILocalVariable(name: "data", arg: 3, scope: !2936, file: !165, line: 478, type: !177)
!2943 = !DILocalVariable(name: "data_len", arg: 4, scope: !2936, file: !165, line: 478, type: !2794)
!2944 = !DILocation(line: 0, scope: !2936)
!2945 = !DILocation(line: 480, column: 12, scope: !2936)
!2946 = !DILocation(line: 480, column: 5, scope: !2936)
!2947 = distinct !DISubprogram(name: "sfc_write", scope: !165, file: !165, line: 490, type: !2948, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2950)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!7, !193, !2794, !193, !2794}
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2959}
!2951 = !DILocalVariable(name: "cmd", arg: 1, scope: !2947, file: !165, line: 490, type: !193)
!2952 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2947, file: !165, line: 490, type: !2794)
!2953 = !DILocalVariable(name: "data", arg: 3, scope: !2947, file: !165, line: 490, type: !193)
!2954 = !DILocalVariable(name: "data_len", arg: 4, scope: !2947, file: !165, line: 490, type: !2794)
!2955 = !DILocalVariable(name: "tmp", scope: !2947, file: !165, line: 492, type: !2956)
!2956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 1280, elements: !2957)
!2957 = !{!2958}
!2958 = !DISubrange(count: 160)
!2959 = !DILocalVariable(name: "total", scope: !2947, file: !165, line: 493, type: !7)
!2960 = !DILocation(line: 0, scope: !2947)
!2961 = !DILocation(line: 492, column: 5, scope: !2947)
!2962 = !DILocation(line: 492, column: 19, scope: !2947)
!2963 = !DILocation(line: 493, column: 25, scope: !2947)
!2964 = !DILocation(line: 495, column: 15, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2947, file: !165, line: 495, column: 9)
!2966 = !DILocation(line: 495, column: 9, scope: !2947)
!2967 = !DILocation(line: 496, column: 9, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !165, line: 496, column: 9)
!2969 = distinct !DILexicalBlock(scope: !2970, file: !165, line: 496, column: 9)
!2970 = distinct !DILexicalBlock(scope: !2965, file: !165, line: 495, column: 31)
!2971 = distinct !{!2971, !2967, !2967}
!2972 = !DILocation(line: 498, column: 5, scope: !2947)
!2973 = !DILocation(line: 500, column: 9, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2947, file: !165, line: 500, column: 9)
!2975 = !DILocation(line: 500, column: 14, scope: !2974)
!2976 = !DILocation(line: 501, column: 17, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2974, file: !165, line: 500, column: 27)
!2978 = !DILocation(line: 501, column: 9, scope: !2977)
!2979 = !DILocation(line: 502, column: 5, scope: !2977)
!2980 = !DILocation(line: 503, column: 12, scope: !2947)
!2981 = !DILocation(line: 504, column: 1, scope: !2947)
!2982 = !DILocation(line: 503, column: 5, scope: !2947)
!2983 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !165, file: !165, line: 506, type: !2984, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2986)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{!7, !193, !2794}
!2986 = !{!2987, !2988, !2989, !2990, !2991}
!2987 = !DILocalVariable(name: "cmd", arg: 1, scope: !2983, file: !165, line: 506, type: !193)
!2988 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2983, file: !165, line: 506, type: !2794)
!2989 = !DILocalVariable(name: "tmp", scope: !2983, file: !165, line: 508, type: !2956)
!2990 = !DILocalVariable(name: "crc", scope: !2983, file: !165, line: 509, type: !195)
!2991 = !DILocalVariable(name: "total", scope: !2983, file: !165, line: 510, type: !7)
!2992 = !DILocation(line: 0, scope: !2983)
!2993 = !DILocation(line: 508, column: 5, scope: !2983)
!2994 = !DILocation(line: 508, column: 19, scope: !2983)
!2995 = !DILocation(line: 509, column: 5, scope: !2983)
!2996 = !DILocation(line: 509, column: 25, scope: !2983)
!2997 = !DILocation(line: 509, column: 19, scope: !2983)
!2998 = !DILocation(line: 510, column: 25, scope: !2983)
!2999 = !DILocation(line: 514, column: 5, scope: !2983)
!3000 = !DILocation(line: 515, column: 13, scope: !2983)
!3001 = !DILocation(line: 515, column: 5, scope: !2983)
!3002 = !DILocation(line: 517, column: 12, scope: !2983)
!3003 = !DILocation(line: 518, column: 1, scope: !2983)
!3004 = !DILocation(line: 517, column: 5, scope: !2983)
!3005 = distinct !DISubprogram(name: "__sfc_write", scope: !165, file: !165, line: 538, type: !2792, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013}
!3007 = !DILocalVariable(name: "cmd", arg: 1, scope: !3005, file: !165, line: 538, type: !193)
!3008 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3005, file: !165, line: 538, type: !2794)
!3009 = !DILocalVariable(name: "data", arg: 3, scope: !3005, file: !165, line: 538, type: !177)
!3010 = !DILocalVariable(name: "data_len", arg: 4, scope: !3005, file: !165, line: 538, type: !2794)
!3011 = !DILocalVariable(name: "security_enable", arg: 5, scope: !3005, file: !165, line: 538, type: !30)
!3012 = !DILocalVariable(name: "tmp", scope: !3005, file: !165, line: 540, type: !2956)
!3013 = !DILocalVariable(name: "total", scope: !3005, file: !165, line: 541, type: !7)
!3014 = !DILocation(line: 0, scope: !3005)
!3015 = !DILocation(line: 540, column: 5, scope: !3005)
!3016 = !DILocation(line: 540, column: 19, scope: !3005)
!3017 = !DILocation(line: 541, column: 25, scope: !3005)
!3018 = !DILocation(line: 543, column: 15, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3005, file: !165, line: 543, column: 9)
!3020 = !DILocation(line: 543, column: 9, scope: !3005)
!3021 = !DILocation(line: 544, column: 9, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !165, line: 544, column: 9)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !165, line: 544, column: 9)
!3024 = distinct !DILexicalBlock(scope: !3019, file: !165, line: 543, column: 30)
!3025 = distinct !{!3025, !3021, !3021}
!3026 = !DILocation(line: 546, column: 5, scope: !3005)
!3027 = !DILocation(line: 548, column: 9, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3005, file: !165, line: 548, column: 9)
!3029 = !DILocation(line: 548, column: 14, scope: !3028)
!3030 = !DILocation(line: 549, column: 17, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3028, file: !165, line: 548, column: 27)
!3032 = !DILocation(line: 549, column: 9, scope: !3031)
!3033 = !DILocation(line: 550, column: 5, scope: !3031)
!3034 = !DILocation(line: 551, column: 12, scope: !3005)
!3035 = !DILocation(line: 552, column: 1, scope: !3005)
!3036 = !DILocation(line: 551, column: 5, scope: !3005)
!3037 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !184, file: !184, line: 186, type: !154, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !2004)
!3038 = !DILocation(line: 188, column: 5, scope: !3037)
!3039 = !DILocation(line: 189, column: 5, scope: !3037)
!3040 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !184, file: !184, line: 195, type: !154, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !2004)
!3041 = !DILocation(line: 197, column: 5, scope: !3040)
!3042 = !DILocation(line: 198, column: 5, scope: !3040)
!3043 = distinct !DISubprogram(name: "flash_check_device", scope: !184, file: !184, line: 276, type: !2690, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3044)
!3044 = !{!3045, !3046, !3047, !3049}
!3045 = !DILocalVariable(name: "i", scope: !3043, file: !184, line: 278, type: !7)
!3046 = !DILocalVariable(name: "jedec", scope: !3043, file: !184, line: 279, type: !195)
!3047 = !DILocalVariable(name: "buf", scope: !3043, file: !184, line: 280, type: !3048)
!3048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 40, elements: !588)
!3049 = !DILocalVariable(name: "info", scope: !3043, file: !184, line: 281, type: !196)
!3050 = !DILocation(line: 280, column: 5, scope: !3043)
!3051 = !DILocation(line: 280, column: 19, scope: !3043)
!3052 = !DILocation(line: 283, column: 5, scope: !3043)
!3053 = !DILocation(line: 284, column: 45, scope: !3043)
!3054 = !DILocation(line: 284, column: 30, scope: !3043)
!3055 = !DILocation(line: 284, column: 52, scope: !3043)
!3056 = !DILocation(line: 284, column: 77, scope: !3043)
!3057 = !DILocation(line: 284, column: 62, scope: !3043)
!3058 = !DILocation(line: 284, column: 84, scope: !3043)
!3059 = !DILocation(line: 284, column: 59, scope: !3043)
!3060 = !DILocation(line: 0, scope: !3043)
!3061 = !DILocation(line: 286, column: 23, scope: !3043)
!3062 = !DILocation(line: 286, column: 21, scope: !3043)
!3063 = !DILocation(line: 288, column: 5, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3043, file: !184, line: 288, column: 5)
!3065 = !DILocation(line: 290, column: 19, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !184, line: 290, column: 13)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !184, line: 288, column: 70)
!3068 = distinct !DILexicalBlock(scope: !3064, file: !184, line: 288, column: 5)
!3069 = !DILocation(line: 290, column: 22, scope: !3066)
!3070 = !DILocation(line: 290, column: 32, scope: !3066)
!3071 = !DILocation(line: 290, column: 41, scope: !3066)
!3072 = !DILocation(line: 290, column: 50, scope: !3066)
!3073 = !DILocation(line: 290, column: 13, scope: !3067)
!3074 = !DILocation(line: 289, column: 17, scope: !3067)
!3075 = !DILocation(line: 291, column: 27, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3066, file: !184, line: 290, column: 60)
!3077 = !DILocation(line: 292, column: 26, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3076, file: !184, line: 292, column: 17)
!3079 = !DILocation(line: 292, column: 17, scope: !3076)
!3080 = !DILocation(line: 294, column: 33, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3078, file: !184, line: 294, column: 24)
!3082 = !DILocation(line: 294, column: 24, scope: !3078)
!3083 = !DILocation(line: 296, column: 33, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3081, file: !184, line: 296, column: 24)
!3085 = !DILocation(line: 296, column: 24, scope: !3081)
!3086 = !DILocation(line: 298, column: 31, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !184, line: 298, column: 20)
!3088 = distinct !DILexicalBlock(scope: !3084, file: !184, line: 296, column: 48)
!3089 = !DILocation(line: 298, column: 49, scope: !3087)
!3090 = !DILocation(line: 0, scope: !3087)
!3091 = !DILocation(line: 303, column: 13, scope: !3088)
!3092 = !DILocation(line: 303, column: 33, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3084, file: !184, line: 303, column: 24)
!3094 = !DILocation(line: 303, column: 24, scope: !3084)
!3095 = !DILocation(line: 0, scope: !3078)
!3096 = !DILocation(line: 308, column: 30, scope: !3076)
!3097 = !DILocation(line: 288, column: 66, scope: !3068)
!3098 = !DILocation(line: 288, column: 19, scope: !3068)
!3099 = distinct !{!3099, !3063, !3100}
!3100 = !DILocation(line: 311, column: 5, scope: !3064)
!3101 = !DILocation(line: 313, column: 19, scope: !3043)
!3102 = !DILocation(line: 315, column: 9, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3043, file: !184, line: 315, column: 9)
!3104 = !DILocation(line: 315, column: 26, scope: !3103)
!3105 = !DILocation(line: 315, column: 9, scope: !3043)
!3106 = !DILocation(line: 316, column: 51, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3103, file: !184, line: 315, column: 47)
!3108 = !DILocation(line: 316, column: 23, scope: !3107)
!3109 = !DILocation(line: 318, column: 19, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3107, file: !184, line: 318, column: 13)
!3111 = !DILocation(line: 318, column: 25, scope: !3110)
!3112 = !DILocation(line: 318, column: 22, scope: !3110)
!3113 = !DILocation(line: 318, column: 32, scope: !3110)
!3114 = !DILocation(line: 318, column: 41, scope: !3110)
!3115 = !DILocation(line: 318, column: 50, scope: !3110)
!3116 = !DILocation(line: 318, column: 13, scope: !3107)
!3117 = !DILocation(line: 322, column: 13, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3110, file: !184, line: 321, column: 16)
!3119 = !DILocation(line: 323, column: 13, scope: !3118)
!3120 = !DILocation(line: 325, column: 5, scope: !3107)
!3121 = !DILocation(line: 329, column: 1, scope: !3043)
!3122 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !184, file: !184, line: 495, type: !3123, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3125)
!3123 = !DISubroutineType(types: !3124)
!3124 = !{!7, !177, !7}
!3125 = !{!3126, !3127, !3128, !3129}
!3126 = !DILocalVariable(name: "buf", arg: 1, scope: !3122, file: !184, line: 495, type: !177)
!3127 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3122, file: !184, line: 495, type: !7)
!3128 = !DILocalVariable(name: "code", scope: !3122, file: !184, line: 497, type: !58)
!3129 = !DILocalVariable(name: "rc", scope: !3122, file: !184, line: 498, type: !7)
!3130 = !DILocation(line: 0, scope: !3122)
!3131 = !DILocation(line: 497, column: 5, scope: !3122)
!3132 = !DILocation(line: 499, column: 10, scope: !3122)
!3133 = !DILocation(line: 500, column: 10, scope: !3122)
!3134 = !DILocation(line: 503, column: 1, scope: !3122)
!3135 = !DILocation(line: 502, column: 5, scope: !3122)
!3136 = distinct !DISubprogram(name: "flash_switch_mode", scope: !184, file: !184, line: 331, type: !3137, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3139)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{null, !195}
!3139 = !{!3140}
!3140 = !DILocalVariable(name: "mode", arg: 1, scope: !3136, file: !184, line: 331, type: !195)
!3141 = !DILocation(line: 0, scope: !3136)
!3142 = !DILocation(line: 333, column: 9, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3136, file: !184, line: 333, column: 9)
!3144 = !DILocation(line: 333, column: 34, scope: !3143)
!3145 = !DILocation(line: 333, column: 9, scope: !3136)
!3146 = !DILocation(line: 335, column: 26, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3143, file: !184, line: 333, column: 43)
!3148 = !DILocation(line: 336, column: 5, scope: !3147)
!3149 = !DILocation(line: 338, column: 5, scope: !3136)
!3150 = !DILocation(line: 339, column: 5, scope: !3136)
!3151 = !DILocation(line: 341, column: 9, scope: !3136)
!3152 = !DILocation(line: 342, column: 9, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3154, file: !184, line: 341, column: 22)
!3154 = distinct !DILexicalBlock(scope: !3136, file: !184, line: 341, column: 9)
!3155 = !DILocation(line: 343, column: 5, scope: !3153)
!3156 = !DILocation(line: 344, column: 12, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !184, line: 344, column: 12)
!3158 = distinct !DILexicalBlock(scope: !3159, file: !184, line: 343, column: 30)
!3159 = distinct !DILexicalBlock(scope: !3154, file: !184, line: 343, column: 16)
!3160 = !DILocation(line: 344, column: 29, scope: !3157)
!3161 = !DILocation(line: 344, column: 12, scope: !3158)
!3162 = !DILocation(line: 345, column: 13, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3157, file: !184, line: 344, column: 48)
!3164 = !DILocation(line: 346, column: 9, scope: !3163)
!3165 = !DILocation(line: 347, column: 13, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3157, file: !184, line: 346, column: 16)
!3167 = !DILocation(line: 350, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !184, line: 349, column: 29)
!3169 = distinct !DILexicalBlock(scope: !3159, file: !184, line: 349, column: 16)
!3170 = !DILocation(line: 352, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3172, file: !184, line: 352, column: 9)
!3172 = distinct !DILexicalBlock(scope: !3173, file: !184, line: 352, column: 9)
!3173 = distinct !DILexicalBlock(scope: !3169, file: !184, line: 351, column: 12)
!3174 = distinct !{!3174, !3170, !3170}
!3175 = !DILocation(line: 354, column: 21, scope: !3136)
!3176 = !DILocation(line: 355, column: 1, scope: !3136)
!3177 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !184, file: !184, line: 215, type: !2604, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3178)
!3178 = !{!3179, !3180}
!3179 = !DILocalVariable(name: "mode", arg: 1, scope: !3177, file: !184, line: 215, type: !61)
!3180 = !DILocalVariable(name: "ptr", scope: !3177, file: !184, line: 217, type: !193)
!3181 = !DILocation(line: 0, scope: !3177)
!3182 = !DILocation(line: 220, column: 5, scope: !3177)
!3183 = !DILocation(line: 223, column: 17, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !184, line: 223, column: 17)
!3185 = distinct !DILexicalBlock(scope: !3177, file: !184, line: 220, column: 19)
!3186 = !DILocation(line: 223, column: 17, scope: !3185)
!3187 = !DILocation(line: 227, column: 22, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3189, file: !184, line: 227, column: 22)
!3189 = distinct !DILexicalBlock(scope: !3190, file: !184, line: 225, column: 55)
!3190 = distinct !DILexicalBlock(scope: !3184, file: !184, line: 225, column: 23)
!3191 = !DILocation(line: 227, column: 37, scope: !3188)
!3192 = !DILocation(line: 227, column: 22, scope: !3189)
!3193 = !DILocation(line: 230, column: 13, scope: !3189)
!3194 = !DILocation(line: 232, column: 13, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3196, file: !184, line: 230, column: 59)
!3196 = distinct !DILexicalBlock(scope: !3190, file: !184, line: 230, column: 24)
!3197 = !DILocation(line: 233, column: 23, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !184, line: 232, column: 61)
!3199 = distinct !DILexicalBlock(scope: !3196, file: !184, line: 232, column: 24)
!3200 = !DILocation(line: 234, column: 13, scope: !3198)
!3201 = !DILocation(line: 239, column: 17, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3185, file: !184, line: 239, column: 17)
!3203 = !DILocation(line: 239, column: 17, scope: !3185)
!3204 = !DILocation(line: 243, column: 22, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3206, file: !184, line: 243, column: 22)
!3206 = distinct !DILexicalBlock(scope: !3207, file: !184, line: 241, column: 55)
!3207 = distinct !DILexicalBlock(scope: !3202, file: !184, line: 241, column: 23)
!3208 = !DILocation(line: 243, column: 37, scope: !3205)
!3209 = !DILocation(line: 243, column: 22, scope: !3206)
!3210 = !DILocation(line: 246, column: 13, scope: !3206)
!3211 = !DILocation(line: 248, column: 13, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3213, file: !184, line: 246, column: 59)
!3213 = distinct !DILexicalBlock(scope: !3207, file: !184, line: 246, column: 24)
!3214 = !DILocation(line: 249, column: 23, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3216, file: !184, line: 248, column: 61)
!3216 = distinct !DILexicalBlock(scope: !3213, file: !184, line: 248, column: 24)
!3217 = !DILocation(line: 250, column: 13, scope: !3215)
!3218 = !DILocation(line: 254, column: 17, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3185, file: !184, line: 254, column: 17)
!3220 = !DILocation(line: 254, column: 17, scope: !3185)
!3221 = !DILocation(line: 258, column: 22, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !184, line: 258, column: 22)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !184, line: 256, column: 55)
!3224 = distinct !DILexicalBlock(scope: !3219, file: !184, line: 256, column: 23)
!3225 = !DILocation(line: 258, column: 37, scope: !3222)
!3226 = !DILocation(line: 258, column: 22, scope: !3223)
!3227 = !DILocation(line: 261, column: 13, scope: !3223)
!3228 = !DILocation(line: 263, column: 13, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !184, line: 261, column: 59)
!3230 = distinct !DILexicalBlock(scope: !3224, file: !184, line: 261, column: 24)
!3231 = !DILocation(line: 264, column: 23, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !184, line: 263, column: 61)
!3233 = distinct !DILexicalBlock(scope: !3230, file: !184, line: 263, column: 24)
!3234 = !DILocation(line: 265, column: 13, scope: !3232)
!3235 = !DILocation(line: 268, column: 13, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !184, line: 268, column: 13)
!3237 = distinct !DILexicalBlock(scope: !3185, file: !184, line: 268, column: 13)
!3238 = distinct !{!3238, !3235, !3235}
!3239 = !DILocation(line: 272, column: 5, scope: !3177)
!3240 = !DILocation(line: 0, scope: !3185)
!3241 = !DILocation(line: 273, column: 1, scope: !3177)
!3242 = distinct !DISubprogram(name: "flash_config", scope: !184, file: !184, line: 357, type: !154, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3243)
!3243 = !{!3244, !3245, !3246, !3247}
!3244 = !DILocalVariable(name: "i", scope: !3242, file: !184, line: 360, type: !7)
!3245 = !DILocalVariable(name: "jedec", scope: !3242, file: !184, line: 361, type: !195)
!3246 = !DILocalVariable(name: "buf", scope: !3242, file: !184, line: 362, type: !3048)
!3247 = !DILocalVariable(name: "info", scope: !3242, file: !184, line: 363, type: !196)
!3248 = !DILocation(line: 362, column: 5, scope: !3242)
!3249 = !DILocation(line: 362, column: 19, scope: !3242)
!3250 = !DILocation(line: 377, column: 26, scope: !3242)
!3251 = !DILocation(line: 377, column: 24, scope: !3242)
!3252 = !DILocation(line: 380, column: 19, scope: !3242)
!3253 = !DILocation(line: 382, column: 5, scope: !3242)
!3254 = !DILocation(line: 383, column: 45, scope: !3242)
!3255 = !DILocation(line: 383, column: 30, scope: !3242)
!3256 = !DILocation(line: 383, column: 52, scope: !3242)
!3257 = !DILocation(line: 383, column: 77, scope: !3242)
!3258 = !DILocation(line: 383, column: 62, scope: !3242)
!3259 = !DILocation(line: 383, column: 84, scope: !3242)
!3260 = !DILocation(line: 383, column: 59, scope: !3242)
!3261 = !DILocation(line: 0, scope: !3242)
!3262 = !DILocation(line: 385, column: 5, scope: !3242)
!3263 = !DILocation(line: 387, column: 5, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3242, file: !184, line: 387, column: 5)
!3265 = !DILocation(line: 388, column: 17, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !184, line: 387, column: 70)
!3267 = distinct !DILexicalBlock(scope: !3264, file: !184, line: 387, column: 5)
!3268 = !DILocation(line: 389, column: 19, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3266, file: !184, line: 389, column: 13)
!3270 = !DILocation(line: 389, column: 25, scope: !3269)
!3271 = !DILocation(line: 389, column: 22, scope: !3269)
!3272 = !DILocation(line: 389, column: 32, scope: !3269)
!3273 = !DILocation(line: 389, column: 41, scope: !3269)
!3274 = !DILocation(line: 389, column: 50, scope: !3269)
!3275 = !DILocation(line: 389, column: 13, scope: !3266)
!3276 = !DILocation(line: 390, column: 13, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3269, file: !184, line: 389, column: 60)
!3278 = !DILocation(line: 391, column: 27, scope: !3277)
!3279 = !DILocation(line: 392, column: 26, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3277, file: !184, line: 392, column: 17)
!3281 = !DILocation(line: 392, column: 17, scope: !3277)
!3282 = !DILocation(line: 394, column: 33, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3280, file: !184, line: 394, column: 24)
!3284 = !DILocation(line: 394, column: 24, scope: !3280)
!3285 = !DILocation(line: 396, column: 33, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3283, file: !184, line: 396, column: 24)
!3287 = !DILocation(line: 396, column: 24, scope: !3283)
!3288 = !DILocation(line: 398, column: 33, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3286, file: !184, line: 398, column: 24)
!3290 = !DILocation(line: 398, column: 24, scope: !3286)
!3291 = !DILocation(line: 399, column: 34, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3289, file: !184, line: 398, column: 52)
!3293 = !DILocation(line: 404, column: 9, scope: !3242)
!3294 = !DILocation(line: 0, scope: !3280)
!3295 = !DILocation(line: 387, column: 66, scope: !3267)
!3296 = !DILocation(line: 387, column: 19, scope: !3267)
!3297 = distinct !{!3297, !3263, !3298}
!3298 = !DILocation(line: 402, column: 5, scope: !3264)
!3299 = !DILocation(line: 404, column: 9, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3242, file: !184, line: 404, column: 9)
!3301 = !DILocation(line: 404, column: 26, scope: !3300)
!3302 = !DILocation(line: 405, column: 51, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3300, file: !184, line: 404, column: 47)
!3304 = !DILocation(line: 405, column: 23, scope: !3303)
!3305 = !DILocation(line: 407, column: 19, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3303, file: !184, line: 407, column: 13)
!3307 = !DILocation(line: 407, column: 25, scope: !3306)
!3308 = !DILocation(line: 407, column: 22, scope: !3306)
!3309 = !DILocation(line: 407, column: 32, scope: !3306)
!3310 = !DILocation(line: 407, column: 41, scope: !3306)
!3311 = !DILocation(line: 407, column: 50, scope: !3306)
!3312 = !DILocation(line: 407, column: 13, scope: !3303)
!3313 = !DILocation(line: 411, column: 13, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3306, file: !184, line: 410, column: 16)
!3315 = !DILocation(line: 412, column: 13, scope: !3314)
!3316 = !DILocation(line: 414, column: 5, scope: !3303)
!3317 = !DILocation(line: 416, column: 10, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3242, file: !184, line: 416, column: 9)
!3319 = !DILocation(line: 416, column: 9, scope: !3242)
!3320 = !DILocation(line: 417, column: 9, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3318, file: !184, line: 416, column: 25)
!3322 = !DILocation(line: 419, column: 23, scope: !3321)
!3323 = !DILocation(line: 420, column: 5, scope: !3321)
!3324 = !DILocation(line: 422, column: 1, scope: !3242)
!3325 = distinct !DISubprogram(name: "flash_init", scope: !184, file: !184, line: 425, type: !1743, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3326)
!3326 = !{!3327, !3328, !3329, !3330, !3331}
!3327 = !DILocalVariable(name: "security_enable", arg: 1, scope: !3325, file: !184, line: 425, type: !7)
!3328 = !DILocalVariable(name: "i", scope: !3325, file: !184, line: 427, type: !7)
!3329 = !DILocalVariable(name: "jedec", scope: !3325, file: !184, line: 428, type: !195)
!3330 = !DILocalVariable(name: "buf", scope: !3325, file: !184, line: 429, type: !3048)
!3331 = !DILocalVariable(name: "info", scope: !3325, file: !184, line: 430, type: !196)
!3332 = !DILocation(line: 0, scope: !3325)
!3333 = !DILocation(line: 429, column: 5, scope: !3325)
!3334 = !DILocation(line: 429, column: 19, scope: !3325)
!3335 = !DILocation(line: 436, column: 5, scope: !3325)
!3336 = !DILocation(line: 438, column: 26, scope: !3325)
!3337 = !DILocation(line: 438, column: 24, scope: !3325)
!3338 = !DILocation(line: 440, column: 5, scope: !3325)
!3339 = !DILocation(line: 442, column: 19, scope: !3325)
!3340 = !DILocation(line: 444, column: 5, scope: !3325)
!3341 = !DILocation(line: 445, column: 45, scope: !3325)
!3342 = !DILocation(line: 445, column: 30, scope: !3325)
!3343 = !DILocation(line: 445, column: 52, scope: !3325)
!3344 = !DILocation(line: 445, column: 77, scope: !3325)
!3345 = !DILocation(line: 445, column: 62, scope: !3325)
!3346 = !DILocation(line: 445, column: 84, scope: !3325)
!3347 = !DILocation(line: 445, column: 59, scope: !3325)
!3348 = !DILocation(line: 447, column: 5, scope: !3325)
!3349 = !DILocation(line: 449, column: 5, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3325, file: !184, line: 449, column: 5)
!3351 = !DILocation(line: 450, column: 17, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !184, line: 449, column: 70)
!3353 = distinct !DILexicalBlock(scope: !3350, file: !184, line: 449, column: 5)
!3354 = !DILocation(line: 451, column: 19, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3352, file: !184, line: 451, column: 13)
!3356 = !DILocation(line: 451, column: 25, scope: !3355)
!3357 = !DILocation(line: 451, column: 22, scope: !3355)
!3358 = !DILocation(line: 451, column: 32, scope: !3355)
!3359 = !DILocation(line: 451, column: 41, scope: !3355)
!3360 = !DILocation(line: 451, column: 50, scope: !3355)
!3361 = !DILocation(line: 451, column: 13, scope: !3352)
!3362 = !DILocation(line: 452, column: 13, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3355, file: !184, line: 451, column: 60)
!3364 = !DILocation(line: 453, column: 27, scope: !3363)
!3365 = !DILocation(line: 454, column: 9, scope: !3363)
!3366 = !DILocation(line: 449, column: 66, scope: !3353)
!3367 = !DILocation(line: 449, column: 19, scope: !3353)
!3368 = distinct !{!3368, !3349, !3369}
!3369 = !DILocation(line: 455, column: 5, scope: !3350)
!3370 = !DILocation(line: 457, column: 10, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3325, file: !184, line: 457, column: 9)
!3372 = !DILocation(line: 457, column: 9, scope: !3325)
!3373 = !DILocation(line: 458, column: 9, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3371, file: !184, line: 457, column: 25)
!3375 = !DILocation(line: 460, column: 23, scope: !3374)
!3376 = !DILocation(line: 461, column: 5, scope: !3374)
!3377 = !DILocation(line: 462, column: 1, scope: !3325)
!3378 = distinct !DISubprogram(name: "flash_reset", scope: !184, file: !184, line: 170, type: !154, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !2004)
!3379 = !DILocation(line: 172, column: 5, scope: !3378)
!3380 = !DILocation(line: 173, column: 5, scope: !3378)
!3381 = !DILocation(line: 176, column: 5, scope: !3378)
!3382 = !DILocation(line: 177, column: 5, scope: !3378)
!3383 = !DILocation(line: 179, column: 5, scope: !3378)
!3384 = distinct !DISubprogram(name: "flash_wait_ready", scope: !184, file: !184, line: 469, type: !3385, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3387)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!7, !7}
!3387 = !{!3388, !3389, !3390}
!3388 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !3384, file: !184, line: 469, type: !7)
!3389 = !DILocalVariable(name: "count", scope: !3384, file: !184, line: 471, type: !7)
!3390 = !DILocalVariable(name: "sr", scope: !3384, file: !184, line: 472, type: !58)
!3391 = !DILocation(line: 0, scope: !3384)
!3392 = !DILocation(line: 472, column: 5, scope: !3384)
!3393 = !DILocation(line: 472, column: 19, scope: !3384)
!3394 = !DILocation(line: 479, column: 28, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !184, line: 479, column: 5)
!3396 = distinct !DILexicalBlock(scope: !3384, file: !184, line: 479, column: 5)
!3397 = !DILocation(line: 479, column: 5, scope: !3396)
!3398 = !DILocation(line: 480, column: 14, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !184, line: 480, column: 13)
!3400 = distinct !DILexicalBlock(scope: !3395, file: !184, line: 479, column: 64)
!3401 = !DILocation(line: 480, column: 34, scope: !3399)
!3402 = !DILocation(line: 480, column: 13, scope: !3400)
!3403 = !DILocation(line: 482, column: 22, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3399, file: !184, line: 482, column: 20)
!3405 = !DILocation(line: 482, column: 25, scope: !3404)
!3406 = !DILocation(line: 482, column: 20, scope: !3399)
!3407 = !DILocation(line: 493, column: 1, scope: !3384)
!3408 = !DILocation(line: 483, column: 13, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3404, file: !184, line: 482, column: 36)
!3410 = !DILocation(line: 486, column: 9, scope: !3400)
!3411 = !DILocation(line: 479, column: 60, scope: !3395)
!3412 = distinct !{!3412, !3397, !3413}
!3413 = !DILocation(line: 488, column: 5, scope: !3396)
!3414 = !DILocation(line: 491, column: 5, scope: !3384)
!3415 = distinct !DISubprogram(name: "flash_read_sr", scope: !184, file: !184, line: 623, type: !3416, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3418)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!7, !177}
!3418 = !{!3419, !3420, !3421}
!3419 = !DILocalVariable(name: "val", arg: 1, scope: !3415, file: !184, line: 623, type: !177)
!3420 = !DILocalVariable(name: "retval", scope: !3415, file: !184, line: 625, type: !7)
!3421 = !DILocalVariable(name: "code", scope: !3415, file: !184, line: 626, type: !58)
!3422 = !DILocation(line: 0, scope: !3415)
!3423 = !DILocation(line: 626, column: 5, scope: !3415)
!3424 = !DILocation(line: 626, column: 19, scope: !3415)
!3425 = !DILocation(line: 628, column: 14, scope: !3415)
!3426 = !DILocation(line: 629, column: 16, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3415, file: !184, line: 629, column: 9)
!3428 = !DILocation(line: 634, column: 1, scope: !3415)
!3429 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !184, file: !184, line: 505, type: !3123, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3430)
!3430 = !{!3431, !3432, !3433, !3434}
!3431 = !DILocalVariable(name: "buf", arg: 1, scope: !3429, file: !184, line: 505, type: !177)
!3432 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3429, file: !184, line: 505, type: !7)
!3433 = !DILocalVariable(name: "code", scope: !3429, file: !184, line: 507, type: !229)
!3434 = !DILocalVariable(name: "rc", scope: !3429, file: !184, line: 508, type: !7)
!3435 = !DILocation(line: 0, scope: !3429)
!3436 = !DILocation(line: 507, column: 5, scope: !3429)
!3437 = !DILocation(line: 507, column: 19, scope: !3429)
!3438 = !DILocation(line: 510, column: 10, scope: !3429)
!3439 = !DILocation(line: 513, column: 1, scope: !3429)
!3440 = !DILocation(line: 512, column: 5, scope: !3429)
!3441 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !184, file: !184, line: 515, type: !3123, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3442)
!3442 = !{!3443, !3444, !3445, !3446}
!3443 = !DILocalVariable(name: "buf", arg: 1, scope: !3441, file: !184, line: 515, type: !177)
!3444 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3441, file: !184, line: 515, type: !7)
!3445 = !DILocalVariable(name: "code", scope: !3441, file: !184, line: 517, type: !229)
!3446 = !DILocalVariable(name: "rc", scope: !3441, file: !184, line: 518, type: !7)
!3447 = !DILocation(line: 0, scope: !3441)
!3448 = !DILocation(line: 517, column: 5, scope: !3441)
!3449 = !DILocation(line: 517, column: 19, scope: !3441)
!3450 = !DILocation(line: 520, column: 10, scope: !3441)
!3451 = !DILocation(line: 523, column: 1, scope: !3441)
!3452 = !DILocation(line: 522, column: 5, scope: !3441)
!3453 = distinct !DISubprogram(name: "flash_read", scope: !184, file: !184, line: 526, type: !3454, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3456)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!7, !177, !30, !7}
!3456 = !{!3457, !3458, !3459, !3460, !3461}
!3457 = !DILocalVariable(name: "buf", arg: 1, scope: !3453, file: !184, line: 526, type: !177)
!3458 = !DILocalVariable(name: "from", arg: 2, scope: !3453, file: !184, line: 526, type: !30)
!3459 = !DILocalVariable(name: "len", arg: 3, scope: !3453, file: !184, line: 526, type: !7)
!3460 = !DILocalVariable(name: "cmd", scope: !3453, file: !184, line: 528, type: !229)
!3461 = !DILocalVariable(name: "rdlen", scope: !3453, file: !184, line: 529, type: !7)
!3462 = !DILocation(line: 0, scope: !3453)
!3463 = !DILocation(line: 528, column: 5, scope: !3453)
!3464 = !DILocation(line: 528, column: 19, scope: !3453)
!3465 = !DILocation(line: 532, column: 13, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3453, file: !184, line: 532, column: 9)
!3467 = !DILocation(line: 532, column: 9, scope: !3453)
!3468 = !DILocation(line: 537, column: 9, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3453, file: !184, line: 537, column: 9)
!3470 = !DILocation(line: 542, column: 22, scope: !3453)
!3471 = !DILocation(line: 543, column: 12, scope: !3453)
!3472 = !DILocation(line: 544, column: 19, scope: !3453)
!3473 = !DILocation(line: 544, column: 14, scope: !3453)
!3474 = !DILocation(line: 544, column: 5, scope: !3453)
!3475 = !DILocation(line: 544, column: 12, scope: !3453)
!3476 = !DILocation(line: 545, column: 19, scope: !3453)
!3477 = !DILocation(line: 545, column: 14, scope: !3453)
!3478 = !DILocation(line: 545, column: 5, scope: !3453)
!3479 = !DILocation(line: 545, column: 12, scope: !3453)
!3480 = !DILocation(line: 546, column: 14, scope: !3453)
!3481 = !DILocation(line: 546, column: 5, scope: !3453)
!3482 = !DILocation(line: 546, column: 12, scope: !3453)
!3483 = !DILocation(line: 548, column: 13, scope: !3453)
!3484 = !DILocation(line: 553, column: 5, scope: !3453)
!3485 = !DILocation(line: 554, column: 1, scope: !3453)
!3486 = distinct !DISubprogram(name: "flash_fast_read", scope: !184, file: !184, line: 557, type: !3487, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3489)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!7, !177, !30, !7, !7}
!3489 = !{!3490, !3491, !3492, !3493, !3494, !3496, !3497, !3498}
!3490 = !DILocalVariable(name: "buf", arg: 1, scope: !3486, file: !184, line: 557, type: !177)
!3491 = !DILocalVariable(name: "from", arg: 2, scope: !3486, file: !184, line: 557, type: !30)
!3492 = !DILocalVariable(name: "len", arg: 3, scope: !3486, file: !184, line: 557, type: !7)
!3493 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !3486, file: !184, line: 557, type: !7)
!3494 = !DILocalVariable(name: "cmd", scope: !3486, file: !184, line: 559, type: !3495)
!3495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 256, elements: !1753)
!3496 = !DILocalVariable(name: "cmd_len", scope: !3486, file: !184, line: 560, type: !7)
!3497 = !DILocalVariable(name: "rdlen", scope: !3486, file: !184, line: 561, type: !7)
!3498 = !DILocalVariable(name: "i", scope: !3486, file: !184, line: 561, type: !7)
!3499 = !DILocation(line: 0, scope: !3486)
!3500 = !DILocation(line: 559, column: 5, scope: !3486)
!3501 = !DILocation(line: 559, column: 19, scope: !3486)
!3502 = !DILocation(line: 564, column: 13, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3486, file: !184, line: 564, column: 9)
!3504 = !DILocation(line: 564, column: 9, scope: !3486)
!3505 = !DILocation(line: 569, column: 9, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3486, file: !184, line: 569, column: 9)
!3507 = !DILocation(line: 574, column: 12, scope: !3486)
!3508 = !DILocation(line: 575, column: 19, scope: !3486)
!3509 = !DILocation(line: 575, column: 14, scope: !3486)
!3510 = !DILocation(line: 575, column: 5, scope: !3486)
!3511 = !DILocation(line: 575, column: 12, scope: !3486)
!3512 = !DILocation(line: 576, column: 19, scope: !3486)
!3513 = !DILocation(line: 576, column: 14, scope: !3486)
!3514 = !DILocation(line: 576, column: 5, scope: !3486)
!3515 = !DILocation(line: 576, column: 12, scope: !3486)
!3516 = !DILocation(line: 577, column: 14, scope: !3486)
!3517 = !DILocation(line: 577, column: 5, scope: !3486)
!3518 = !DILocation(line: 577, column: 12, scope: !3486)
!3519 = !DILocation(line: 580, column: 19, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !184, line: 580, column: 5)
!3521 = distinct !DILexicalBlock(scope: !3486, file: !184, line: 580, column: 5)
!3522 = !DILocation(line: 580, column: 5, scope: !3521)
!3523 = !DILocation(line: 581, column: 15, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3520, file: !184, line: 580, column: 62)
!3525 = !DILocation(line: 581, column: 9, scope: !3524)
!3526 = !DILocation(line: 581, column: 20, scope: !3524)
!3527 = !DILocation(line: 580, column: 58, scope: !3520)
!3528 = !DILocation(line: 580, column: 33, scope: !3520)
!3529 = distinct !{!3529, !3522, !3530}
!3530 = !DILocation(line: 583, column: 5, scope: !3521)
!3531 = !DILocation(line: 585, column: 13, scope: !3486)
!3532 = !DILocation(line: 590, column: 5, scope: !3486)
!3533 = !DILocation(line: 591, column: 1, scope: !3486)
!3534 = distinct !DISubprogram(name: "flash_read_sr2", scope: !184, file: !184, line: 636, type: !3416, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3535)
!3535 = !{!3536, !3537, !3538}
!3536 = !DILocalVariable(name: "val", arg: 1, scope: !3534, file: !184, line: 636, type: !177)
!3537 = !DILocalVariable(name: "retval", scope: !3534, file: !184, line: 638, type: !7)
!3538 = !DILocalVariable(name: "code", scope: !3534, file: !184, line: 639, type: !58)
!3539 = !DILocation(line: 0, scope: !3534)
!3540 = !DILocation(line: 639, column: 5, scope: !3534)
!3541 = !DILocation(line: 641, column: 9, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3534, file: !184, line: 641, column: 9)
!3543 = !DILocation(line: 641, column: 45, scope: !3542)
!3544 = !DILocation(line: 643, column: 14, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3542, file: !184, line: 641, column: 80)
!3546 = !DILocation(line: 644, column: 5, scope: !3545)
!3547 = !DILocation(line: 646, column: 14, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !184, line: 644, column: 50)
!3549 = distinct !DILexicalBlock(scope: !3542, file: !184, line: 644, column: 16)
!3550 = !DILocation(line: 647, column: 5, scope: !3548)
!3551 = !DILocation(line: 649, column: 14, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !184, line: 647, column: 52)
!3553 = distinct !DILexicalBlock(scope: !3549, file: !184, line: 647, column: 16)
!3554 = !DILocation(line: 650, column: 5, scope: !3552)
!3555 = !DILocation(line: 652, column: 16, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !184, line: 650, column: 54)
!3557 = distinct !DILexicalBlock(scope: !3553, file: !184, line: 650, column: 16)
!3558 = !DILocation(line: 652, column: 14, scope: !3556)
!3559 = !DILocation(line: 653, column: 5, scope: !3556)
!3560 = !DILocation(line: 655, column: 9, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3557, file: !184, line: 654, column: 10)
!3562 = !DILocation(line: 656, column: 14, scope: !3561)
!3563 = !DILocation(line: 659, column: 14, scope: !3534)
!3564 = !DILocation(line: 660, column: 16, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3534, file: !184, line: 660, column: 9)
!3566 = !DILocation(line: 665, column: 1, scope: !3534)
!3567 = distinct !DISubprogram(name: "flash_unprotect", scope: !184, file: !184, line: 667, type: !2690, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3568)
!3568 = !{!3569}
!3569 = !DILocalVariable(name: "sr", scope: !3567, file: !184, line: 669, type: !58)
!3570 = !DILocation(line: 669, column: 5, scope: !3567)
!3571 = !DILocation(line: 0, scope: !3567)
!3572 = !DILocation(line: 669, column: 19, scope: !3567)
!3573 = !DILocation(line: 671, column: 9, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3567, file: !184, line: 671, column: 9)
!3575 = !DILocation(line: 671, column: 28, scope: !3574)
!3576 = !DILocation(line: 671, column: 9, scope: !3567)
!3577 = !DILocation(line: 676, column: 10, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3567, file: !184, line: 676, column: 9)
!3579 = !DILocation(line: 676, column: 13, scope: !3578)
!3580 = !DILocation(line: 676, column: 43, scope: !3578)
!3581 = !DILocation(line: 676, column: 9, scope: !3567)
!3582 = !DILocation(line: 677, column: 12, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3578, file: !184, line: 676, column: 49)
!3584 = !DILocation(line: 678, column: 9, scope: !3583)
!3585 = !DILocation(line: 679, column: 5, scope: !3583)
!3586 = !DILocation(line: 681, column: 1, scope: !3567)
!3587 = distinct !DISubprogram(name: "flash_write_sr", scope: !184, file: !184, line: 609, type: !3416, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3588)
!3588 = !{!3589, !3590, !3591}
!3589 = !DILocalVariable(name: "val", arg: 1, scope: !3587, file: !184, line: 609, type: !177)
!3590 = !DILocalVariable(name: "retval", scope: !3587, file: !184, line: 611, type: !7)
!3591 = !DILocalVariable(name: "code", scope: !3587, file: !184, line: 612, type: !58)
!3592 = !DILocation(line: 0, scope: !3587)
!3593 = !DILocation(line: 612, column: 5, scope: !3587)
!3594 = !DILocation(line: 612, column: 20, scope: !3587)
!3595 = !DILocation(line: 614, column: 14, scope: !3587)
!3596 = !DILocation(line: 621, column: 1, scope: !3587)
!3597 = distinct !DISubprogram(name: "flash_protect", scope: !184, file: !184, line: 686, type: !2690, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3598)
!3598 = !{!3599}
!3599 = !DILocalVariable(name: "sr", scope: !3597, file: !184, line: 688, type: !58)
!3600 = !DILocation(line: 688, column: 5, scope: !3597)
!3601 = !DILocation(line: 0, scope: !3597)
!3602 = !DILocation(line: 688, column: 19, scope: !3597)
!3603 = !DILocation(line: 690, column: 9, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3597, file: !184, line: 690, column: 9)
!3605 = !DILocation(line: 690, column: 28, scope: !3604)
!3606 = !DILocation(line: 690, column: 9, scope: !3597)
!3607 = !DILocation(line: 695, column: 8, scope: !3597)
!3608 = !DILocation(line: 696, column: 5, scope: !3597)
!3609 = !DILocation(line: 697, column: 5, scope: !3597)
!3610 = !DILocation(line: 698, column: 1, scope: !3597)
!3611 = distinct !DISubprogram(name: "flash_write_enable", scope: !184, file: !184, line: 701, type: !2690, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3612)
!3612 = !{!3613}
!3613 = !DILocalVariable(name: "code", scope: !3611, file: !184, line: 703, type: !58)
!3614 = !DILocation(line: 703, column: 5, scope: !3611)
!3615 = !DILocation(line: 0, scope: !3611)
!3616 = !DILocation(line: 703, column: 19, scope: !3611)
!3617 = !DILocation(line: 704, column: 12, scope: !3611)
!3618 = !DILocation(line: 705, column: 1, scope: !3611)
!3619 = !DILocation(line: 704, column: 5, scope: !3611)
!3620 = distinct !DISubprogram(name: "flash_write_disable", scope: !184, file: !184, line: 707, type: !2690, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3621)
!3621 = !{!3622}
!3622 = !DILocalVariable(name: "code", scope: !3620, file: !184, line: 709, type: !58)
!3623 = !DILocation(line: 709, column: 5, scope: !3620)
!3624 = !DILocation(line: 0, scope: !3620)
!3625 = !DILocation(line: 709, column: 19, scope: !3620)
!3626 = !DILocation(line: 710, column: 12, scope: !3620)
!3627 = !DILocation(line: 711, column: 1, scope: !3620)
!3628 = !DILocation(line: 710, column: 5, scope: !3620)
!3629 = distinct !DISubprogram(name: "flash_erase_sector", scope: !184, file: !184, line: 713, type: !3630, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3632)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!7, !30}
!3632 = !{!3633, !3634, !3635, !3636}
!3633 = !DILocalVariable(name: "offset", arg: 1, scope: !3629, file: !184, line: 713, type: !30)
!3634 = !DILocalVariable(name: "buf", scope: !3629, file: !184, line: 715, type: !3048)
!3635 = !DILocalVariable(name: "savedMask", scope: !3629, file: !184, line: 716, type: !61)
!3636 = !DILocalVariable(name: "result", scope: !3629, file: !184, line: 717, type: !527)
!3637 = !DILocation(line: 0, scope: !3629)
!3638 = !DILocation(line: 715, column: 5, scope: !3629)
!3639 = !DILocation(line: 715, column: 19, scope: !3629)
!3640 = !DILocation(line: 720, column: 9, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3629, file: !184, line: 720, column: 9)
!3642 = !DILocation(line: 724, column: 22, scope: !3629)
!3643 = !DILocation(line: 725, column: 5, scope: !3629)
!3644 = !DILocation(line: 726, column: 18, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3629, file: !184, line: 725, column: 8)
!3646 = !DILocation(line: 727, column: 19, scope: !3629)
!3647 = !DILocation(line: 727, column: 5, scope: !3645)
!3648 = distinct !{!3648, !3643, !3649}
!3649 = !DILocation(line: 727, column: 28, scope: !3629)
!3650 = !DILocation(line: 729, column: 17, scope: !3629)
!3651 = !DILocation(line: 732, column: 12, scope: !3629)
!3652 = !DILocation(line: 733, column: 21, scope: !3629)
!3653 = !DILocation(line: 733, column: 14, scope: !3629)
!3654 = !DILocation(line: 733, column: 5, scope: !3629)
!3655 = !DILocation(line: 733, column: 12, scope: !3629)
!3656 = !DILocation(line: 734, column: 21, scope: !3629)
!3657 = !DILocation(line: 734, column: 14, scope: !3629)
!3658 = !DILocation(line: 734, column: 5, scope: !3629)
!3659 = !DILocation(line: 734, column: 12, scope: !3629)
!3660 = !DILocation(line: 735, column: 14, scope: !3629)
!3661 = !DILocation(line: 735, column: 5, scope: !3629)
!3662 = !DILocation(line: 735, column: 12, scope: !3629)
!3663 = !DILocation(line: 736, column: 5, scope: !3629)
!3664 = !DILocation(line: 737, column: 5, scope: !3629)
!3665 = !DILocation(line: 738, column: 5, scope: !3629)
!3666 = !DILocation(line: 740, column: 5, scope: !3629)
!3667 = !DILocation(line: 741, column: 18, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3629, file: !184, line: 740, column: 8)
!3669 = !DILocation(line: 742, column: 19, scope: !3629)
!3670 = !DILocation(line: 742, column: 5, scope: !3668)
!3671 = distinct !{!3671, !3666, !3672}
!3672 = !DILocation(line: 742, column: 28, scope: !3629)
!3673 = !DILocation(line: 744, column: 5, scope: !3629)
!3674 = !DILocation(line: 746, column: 1, scope: !3629)
!3675 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !184, file: !184, line: 748, type: !3630, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3676)
!3676 = !{!3677, !3678, !3679, !3680}
!3677 = !DILocalVariable(name: "offset", arg: 1, scope: !3675, file: !184, line: 748, type: !30)
!3678 = !DILocalVariable(name: "buf", scope: !3675, file: !184, line: 750, type: !3048)
!3679 = !DILocalVariable(name: "savedMask", scope: !3675, file: !184, line: 751, type: !61)
!3680 = !DILocalVariable(name: "result", scope: !3675, file: !184, line: 752, type: !527)
!3681 = !DILocation(line: 0, scope: !3675)
!3682 = !DILocation(line: 750, column: 5, scope: !3675)
!3683 = !DILocation(line: 750, column: 19, scope: !3675)
!3684 = !DILocation(line: 755, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3675, file: !184, line: 755, column: 9)
!3686 = !DILocation(line: 759, column: 22, scope: !3675)
!3687 = !DILocation(line: 760, column: 5, scope: !3675)
!3688 = !DILocation(line: 761, column: 18, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3675, file: !184, line: 760, column: 8)
!3690 = !DILocation(line: 762, column: 19, scope: !3675)
!3691 = !DILocation(line: 762, column: 5, scope: !3689)
!3692 = distinct !{!3692, !3687, !3693}
!3693 = !DILocation(line: 762, column: 28, scope: !3675)
!3694 = !DILocation(line: 764, column: 17, scope: !3675)
!3695 = !DILocation(line: 765, column: 12, scope: !3675)
!3696 = !DILocation(line: 766, column: 21, scope: !3675)
!3697 = !DILocation(line: 766, column: 14, scope: !3675)
!3698 = !DILocation(line: 766, column: 5, scope: !3675)
!3699 = !DILocation(line: 766, column: 12, scope: !3675)
!3700 = !DILocation(line: 767, column: 21, scope: !3675)
!3701 = !DILocation(line: 767, column: 14, scope: !3675)
!3702 = !DILocation(line: 767, column: 5, scope: !3675)
!3703 = !DILocation(line: 767, column: 12, scope: !3675)
!3704 = !DILocation(line: 768, column: 14, scope: !3675)
!3705 = !DILocation(line: 768, column: 5, scope: !3675)
!3706 = !DILocation(line: 768, column: 12, scope: !3675)
!3707 = !DILocation(line: 769, column: 5, scope: !3675)
!3708 = !DILocation(line: 770, column: 5, scope: !3675)
!3709 = !DILocation(line: 771, column: 5, scope: !3675)
!3710 = !DILocation(line: 772, column: 18, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3675, file: !184, line: 771, column: 8)
!3712 = !DILocation(line: 773, column: 19, scope: !3675)
!3713 = !DILocation(line: 773, column: 5, scope: !3711)
!3714 = distinct !{!3714, !3709, !3715}
!3715 = !DILocation(line: 773, column: 28, scope: !3675)
!3716 = !DILocation(line: 775, column: 5, scope: !3675)
!3717 = !DILocation(line: 777, column: 5, scope: !3675)
!3718 = !DILocation(line: 779, column: 1, scope: !3675)
!3719 = distinct !DISubprogram(name: "flash_erase_page", scope: !184, file: !184, line: 781, type: !3630, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3720)
!3720 = !{!3721, !3722, !3723, !3724}
!3721 = !DILocalVariable(name: "offset", arg: 1, scope: !3719, file: !184, line: 781, type: !30)
!3722 = !DILocalVariable(name: "buf", scope: !3719, file: !184, line: 783, type: !3048)
!3723 = !DILocalVariable(name: "savedMask", scope: !3719, file: !184, line: 784, type: !61)
!3724 = !DILocalVariable(name: "result", scope: !3719, file: !184, line: 785, type: !527)
!3725 = !DILocation(line: 0, scope: !3719)
!3726 = !DILocation(line: 783, column: 5, scope: !3719)
!3727 = !DILocation(line: 783, column: 19, scope: !3719)
!3728 = !DILocation(line: 788, column: 9, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3719, file: !184, line: 788, column: 9)
!3730 = !DILocation(line: 792, column: 22, scope: !3719)
!3731 = !DILocation(line: 793, column: 5, scope: !3719)
!3732 = !DILocation(line: 794, column: 18, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3719, file: !184, line: 793, column: 8)
!3734 = !DILocation(line: 795, column: 19, scope: !3719)
!3735 = !DILocation(line: 795, column: 5, scope: !3733)
!3736 = distinct !{!3736, !3731, !3737}
!3737 = !DILocation(line: 795, column: 28, scope: !3719)
!3738 = !DILocation(line: 798, column: 17, scope: !3719)
!3739 = !DILocation(line: 799, column: 12, scope: !3719)
!3740 = !DILocation(line: 800, column: 21, scope: !3719)
!3741 = !DILocation(line: 800, column: 14, scope: !3719)
!3742 = !DILocation(line: 800, column: 5, scope: !3719)
!3743 = !DILocation(line: 800, column: 12, scope: !3719)
!3744 = !DILocation(line: 801, column: 21, scope: !3719)
!3745 = !DILocation(line: 801, column: 14, scope: !3719)
!3746 = !DILocation(line: 801, column: 5, scope: !3719)
!3747 = !DILocation(line: 801, column: 12, scope: !3719)
!3748 = !DILocation(line: 802, column: 14, scope: !3719)
!3749 = !DILocation(line: 802, column: 5, scope: !3719)
!3750 = !DILocation(line: 802, column: 12, scope: !3719)
!3751 = !DILocation(line: 803, column: 5, scope: !3719)
!3752 = !DILocation(line: 805, column: 5, scope: !3719)
!3753 = !DILocation(line: 806, column: 5, scope: !3719)
!3754 = !DILocation(line: 808, column: 5, scope: !3719)
!3755 = !DILocation(line: 809, column: 18, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3719, file: !184, line: 808, column: 8)
!3757 = !DILocation(line: 810, column: 19, scope: !3719)
!3758 = !DILocation(line: 810, column: 5, scope: !3756)
!3759 = distinct !{!3759, !3754, !3760}
!3760 = !DILocation(line: 810, column: 28, scope: !3719)
!3761 = !DILocation(line: 812, column: 5, scope: !3719)
!3762 = !DILocation(line: 814, column: 1, scope: !3719)
!3763 = distinct !DISubprogram(name: "flash_erase_chip", scope: !184, file: !184, line: 816, type: !2690, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3764)
!3764 = !{!3765}
!3765 = !DILocalVariable(name: "buf", scope: !3763, file: !184, line: 818, type: !3048)
!3766 = !DILocation(line: 818, column: 5, scope: !3763)
!3767 = !DILocation(line: 818, column: 19, scope: !3763)
!3768 = !DILocation(line: 821, column: 9, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3763, file: !184, line: 821, column: 9)
!3770 = !DILocation(line: 825, column: 22, scope: !3763)
!3771 = !DILocation(line: 827, column: 5, scope: !3763)
!3772 = !DILocation(line: 828, column: 5, scope: !3763)
!3773 = !DILocation(line: 830, column: 12, scope: !3763)
!3774 = !DILocation(line: 832, column: 5, scope: !3763)
!3775 = !DILocation(line: 834, column: 9, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3763, file: !184, line: 834, column: 9)
!3777 = !DILocation(line: 838, column: 5, scope: !3763)
!3778 = !DILocation(line: 839, column: 22, scope: !3763)
!3779 = !DILocation(line: 841, column: 1, scope: !3763)
!3780 = distinct !DISubprogram(name: "flash_erase", scope: !184, file: !184, line: 844, type: !3781, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3783)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!7, !30, !7}
!3783 = !{!3784, !3785}
!3784 = !DILocalVariable(name: "offs", arg: 1, scope: !3780, file: !184, line: 844, type: !30)
!3785 = !DILocalVariable(name: "len", arg: 2, scope: !3780, file: !184, line: 844, type: !7)
!3786 = !DILocation(line: 0, scope: !3780)
!3787 = !DILocation(line: 849, column: 9, scope: !3780)
!3788 = !DILocation(line: 855, column: 13, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !184, line: 855, column: 13)
!3790 = distinct !DILexicalBlock(scope: !3780, file: !184, line: 854, column: 21)
!3791 = !DILocation(line: 859, column: 17, scope: !3790)
!3792 = !DILocation(line: 859, column: 32, scope: !3790)
!3793 = !DILocation(line: 859, column: 14, scope: !3790)
!3794 = !DILocation(line: 860, column: 13, scope: !3790)
!3795 = !DILocation(line: 854, column: 16, scope: !3780)
!3796 = !DILocation(line: 854, column: 5, scope: !3780)
!3797 = distinct !{!3797, !3796, !3798}
!3798 = !DILocation(line: 861, column: 5, scope: !3780)
!3799 = !DILocation(line: 864, column: 1, scope: !3780)
!3800 = distinct !DISubprogram(name: "flash_write", scope: !184, file: !184, line: 868, type: !3801, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3803)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!7, !193, !30, !7}
!3803 = !{!3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817}
!3804 = !DILocalVariable(name: "buf", arg: 1, scope: !3800, file: !184, line: 868, type: !193)
!3805 = !DILocalVariable(name: "to", arg: 2, scope: !3800, file: !184, line: 868, type: !30)
!3806 = !DILocalVariable(name: "len", arg: 3, scope: !3800, file: !184, line: 868, type: !7)
!3807 = !DILocalVariable(name: "page_offset", scope: !3800, file: !184, line: 870, type: !195)
!3808 = !DILocalVariable(name: "page_size", scope: !3800, file: !184, line: 870, type: !195)
!3809 = !DILocalVariable(name: "rc", scope: !3800, file: !184, line: 871, type: !7)
!3810 = !DILocalVariable(name: "retlen", scope: !3800, file: !184, line: 871, type: !7)
!3811 = !DILocalVariable(name: "mode", scope: !3800, file: !184, line: 872, type: !7)
!3812 = !DILocalVariable(name: "cmd", scope: !3800, file: !184, line: 873, type: !3048)
!3813 = !DILocalVariable(name: "result", scope: !3800, file: !184, line: 874, type: !527)
!3814 = !DILocalVariable(name: "savedMask", scope: !3800, file: !184, line: 875, type: !61)
!3815 = !DILocalVariable(name: "To", scope: !3800, file: !184, line: 877, type: !61)
!3816 = !DILocalVariable(name: "Buf", scope: !3800, file: !184, line: 878, type: !2146)
!3817 = !DILocalVariable(name: "p_data_first", scope: !3800, file: !184, line: 879, type: !2146)
!3818 = !DILocation(line: 0, scope: !3800)
!3819 = !DILocation(line: 873, column: 5, scope: !3800)
!3820 = !DILocation(line: 873, column: 19, scope: !3800)
!3821 = !DILocation(line: 882, column: 13, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3800, file: !184, line: 882, column: 9)
!3823 = !DILocation(line: 882, column: 9, scope: !3800)
!3824 = !DILocation(line: 886, column: 12, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3800, file: !184, line: 886, column: 9)
!3826 = !DILocation(line: 886, column: 20, scope: !3825)
!3827 = !DILocation(line: 886, column: 35, scope: !3825)
!3828 = !DILocation(line: 886, column: 62, scope: !3825)
!3829 = !DILocation(line: 886, column: 45, scope: !3825)
!3830 = !DILocation(line: 886, column: 18, scope: !3825)
!3831 = !DILocation(line: 886, column: 9, scope: !3800)
!3832 = !DILocation(line: 891, column: 9, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3800, file: !184, line: 891, column: 9)
!3834 = !DILocation(line: 896, column: 18, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3800, file: !184, line: 895, column: 8)
!3836 = !DILocation(line: 897, column: 19, scope: !3800)
!3837 = !DILocation(line: 897, column: 5, scope: !3835)
!3838 = distinct !{!3838, !3839, !3840}
!3839 = !DILocation(line: 895, column: 5, scope: !3800)
!3840 = !DILocation(line: 897, column: 28, scope: !3800)
!3841 = !DILocation(line: 899, column: 22, scope: !3800)
!3842 = !DILocation(line: 901, column: 12, scope: !3800)
!3843 = !DILocation(line: 903, column: 15, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3800, file: !184, line: 903, column: 9)
!3845 = !DILocation(line: 903, column: 24, scope: !3844)
!3846 = !DILocation(line: 903, column: 27, scope: !3844)
!3847 = !DILocation(line: 903, column: 43, scope: !3844)
!3848 = !DILocation(line: 903, column: 9, scope: !3800)
!3849 = !DILocation(line: 0, scope: !3844)
!3850 = !DILocation(line: 913, column: 16, scope: !3800)
!3851 = !DILocation(line: 913, column: 5, scope: !3800)
!3852 = !DILocation(line: 910, column: 24, scope: !3800)
!3853 = !DILocation(line: 910, column: 22, scope: !3800)
!3854 = !DILocation(line: 952, column: 5, scope: !3800)
!3855 = !DILocation(line: 914, column: 21, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3800, file: !184, line: 913, column: 21)
!3857 = !DILocation(line: 919, column: 21, scope: !3856)
!3858 = !DILocation(line: 919, column: 18, scope: !3856)
!3859 = !DILocation(line: 919, column: 16, scope: !3856)
!3860 = !DILocation(line: 920, column: 21, scope: !3856)
!3861 = !DILocation(line: 920, column: 18, scope: !3856)
!3862 = !DILocation(line: 920, column: 16, scope: !3856)
!3863 = !DILocation(line: 921, column: 18, scope: !3856)
!3864 = !DILocation(line: 921, column: 16, scope: !3856)
!3865 = !DILocation(line: 923, column: 13, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3856, file: !184, line: 923, column: 13)
!3867 = !DILocation(line: 927, column: 9, scope: !3856)
!3868 = !DILocation(line: 928, column: 21, scope: !3856)
!3869 = !DILocation(line: 929, column: 9, scope: !3856)
!3870 = !DILocation(line: 930, column: 14, scope: !3856)
!3871 = !DILocation(line: 931, column: 9, scope: !3856)
!3872 = !DILocation(line: 933, column: 9, scope: !3856)
!3873 = !DILocation(line: 934, column: 86, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3856, file: !184, line: 933, column: 12)
!3875 = !DILocation(line: 934, column: 22, scope: !3874)
!3876 = !DILocation(line: 935, column: 20, scope: !3856)
!3877 = !DILocation(line: 935, column: 9, scope: !3874)
!3878 = distinct !{!3878, !3872, !3879}
!3879 = !DILocation(line: 935, column: 29, scope: !3856)
!3880 = !DILocation(line: 937, column: 16, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3856, file: !184, line: 937, column: 13)
!3882 = !DILocation(line: 937, column: 13, scope: !3856)
!3883 = !DILocation(line: 938, column: 20, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3881, file: !184, line: 937, column: 21)
!3885 = !DILocation(line: 939, column: 20, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3884, file: !184, line: 939, column: 17)
!3887 = !DILocation(line: 939, column: 17, scope: !3884)
!3888 = !DILocation(line: 941, column: 17, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3886, file: !184, line: 939, column: 33)
!3890 = !DILocation(line: 942, column: 17, scope: !3889)
!3891 = !DILocation(line: 947, column: 13, scope: !3856)
!3892 = distinct !{!3892, !3851, !3893}
!3893 = !DILocation(line: 950, column: 5, scope: !3800)
!3894 = !DILocation(line: 949, column: 13, scope: !3856)
!3895 = !DILocation(line: 948, column: 12, scope: !3856)
!3896 = !DILocation(line: 953, column: 18, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3800, file: !184, line: 952, column: 8)
!3898 = !DILocation(line: 954, column: 19, scope: !3800)
!3899 = !DILocation(line: 954, column: 5, scope: !3897)
!3900 = distinct !{!3900, !3854, !3901}
!3901 = !DILocation(line: 954, column: 28, scope: !3800)
!3902 = !DILocation(line: 956, column: 5, scope: !3800)
!3903 = !DILocation(line: 957, column: 5, scope: !3800)
!3904 = !DILocation(line: 958, column: 1, scope: !3800)
!3905 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !184, file: !184, line: 963, type: !3630, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3906)
!3906 = !{!3907, !3908, !3909, !3910}
!3907 = !DILocalVariable(name: "to", arg: 1, scope: !3905, file: !184, line: 963, type: !30)
!3908 = !DILocalVariable(name: "len", scope: !3905, file: !184, line: 965, type: !7)
!3909 = !DILocalVariable(name: "rc", scope: !3905, file: !184, line: 965, type: !7)
!3910 = !DILocalVariable(name: "cmd", scope: !3905, file: !184, line: 966, type: !3048)
!3911 = !DILocation(line: 0, scope: !3905)
!3912 = !DILocation(line: 966, column: 5, scope: !3905)
!3913 = !DILocation(line: 966, column: 19, scope: !3905)
!3914 = !DILocation(line: 968, column: 12, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3905, file: !184, line: 968, column: 9)
!3916 = !DILocation(line: 968, column: 9, scope: !3905)
!3917 = !DILocation(line: 972, column: 12, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3905, file: !184, line: 972, column: 9)
!3919 = !DILocation(line: 972, column: 20, scope: !3918)
!3920 = !DILocation(line: 972, column: 35, scope: !3918)
!3921 = !DILocation(line: 972, column: 62, scope: !3918)
!3922 = !DILocation(line: 972, column: 45, scope: !3918)
!3923 = !DILocation(line: 972, column: 18, scope: !3918)
!3924 = !DILocation(line: 972, column: 9, scope: !3905)
!3925 = !DILocation(line: 976, column: 22, scope: !3905)
!3926 = !DILocation(line: 979, column: 9, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3905, file: !184, line: 979, column: 9)
!3928 = !DILocation(line: 983, column: 5, scope: !3905)
!3929 = !DILocation(line: 985, column: 12, scope: !3905)
!3930 = !DILocation(line: 986, column: 17, scope: !3905)
!3931 = !DILocation(line: 986, column: 14, scope: !3905)
!3932 = !DILocation(line: 986, column: 5, scope: !3905)
!3933 = !DILocation(line: 986, column: 12, scope: !3905)
!3934 = !DILocation(line: 987, column: 17, scope: !3905)
!3935 = !DILocation(line: 987, column: 14, scope: !3905)
!3936 = !DILocation(line: 987, column: 5, scope: !3905)
!3937 = !DILocation(line: 987, column: 12, scope: !3905)
!3938 = !DILocation(line: 988, column: 14, scope: !3905)
!3939 = !DILocation(line: 988, column: 5, scope: !3905)
!3940 = !DILocation(line: 988, column: 12, scope: !3905)
!3941 = !DILocation(line: 990, column: 5, scope: !3905)
!3942 = !DILocation(line: 991, column: 5, scope: !3905)
!3943 = !DILocation(line: 993, column: 10, scope: !3905)
!3944 = !DILocation(line: 994, column: 22, scope: !3905)
!3945 = !DILocation(line: 995, column: 5, scope: !3905)
!3946 = !DILocation(line: 996, column: 1, scope: !3905)
!3947 = distinct !DISubprogram(name: "flash_erase_write", scope: !184, file: !184, line: 998, type: !3801, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3948)
!3948 = !{!3949, !3950, !3951, !3952, !3956, !3957, !3958, !3962, !3963, !3964}
!3949 = !DILocalVariable(name: "buf", arg: 1, scope: !3947, file: !184, line: 998, type: !193)
!3950 = !DILocalVariable(name: "offs", arg: 2, scope: !3947, file: !184, line: 998, type: !30)
!3951 = !DILocalVariable(name: "count", arg: 3, scope: !3947, file: !184, line: 998, type: !7)
!3952 = !DILocalVariable(name: "block", scope: !3947, file: !184, line: 1000, type: !3953)
!3953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32768, elements: !3954)
!3954 = !{!3955}
!3955 = !DISubrange(count: 4096)
!3956 = !DILocalVariable(name: "blocksize", scope: !3947, file: !184, line: 1002, type: !7)
!3957 = !DILocalVariable(name: "blockmask", scope: !3947, file: !184, line: 1003, type: !7)
!3958 = !DILocalVariable(name: "piece", scope: !3959, file: !184, line: 1008, type: !30)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !184, line: 1007, column: 56)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !184, line: 1007, column: 13)
!3961 = distinct !DILexicalBlock(scope: !3947, file: !184, line: 1005, column: 23)
!3962 = !DILocalVariable(name: "blockaddr", scope: !3959, file: !184, line: 1008, type: !30)
!3963 = !DILocalVariable(name: "piece_size", scope: !3959, file: !184, line: 1009, type: !7)
!3964 = !DILocalVariable(name: "aligned_size", scope: !3965, file: !184, line: 1034, type: !30)
!3965 = distinct !DILexicalBlock(scope: !3960, file: !184, line: 1033, column: 16)
!3966 = !DILocation(line: 0, scope: !3947)
!3967 = !DILocation(line: 1000, column: 5, scope: !3947)
!3968 = !DILocation(line: 1000, column: 19, scope: !3947)
!3969 = !DILocation(line: 1005, column: 18, scope: !3947)
!3970 = !DILocation(line: 1005, column: 5, scope: !3947)
!3971 = !DILocation(line: 1007, column: 13, scope: !3960)
!3972 = !DILocation(line: 1007, column: 32, scope: !3960)
!3973 = !DILocation(line: 1011, column: 30, scope: !3959)
!3974 = !DILocation(line: 0, scope: !3959)
!3975 = !DILocation(line: 1013, column: 17, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3959, file: !184, line: 1013, column: 17)
!3977 = !DILocation(line: 1013, column: 72, scope: !3976)
!3978 = !DILocation(line: 1013, column: 17, scope: !3959)
!3979 = !DILocation(line: 1017, column: 30, scope: !3959)
!3980 = !DILocation(line: 1019, column: 26, scope: !3959)
!3981 = !DILocation(line: 1020, column: 26, scope: !3959)
!3982 = !DILocation(line: 1020, column: 13, scope: !3959)
!3983 = !DILocation(line: 1022, column: 17, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3959, file: !184, line: 1022, column: 17)
!3985 = !DILocation(line: 1026, column: 17, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3959, file: !184, line: 1026, column: 17)
!3987 = !DILocation(line: 1026, column: 58, scope: !3986)
!3988 = !DILocation(line: 1026, column: 17, scope: !3959)
!3989 = !DILocation(line: 1032, column: 19, scope: !3959)
!3990 = !DILocation(line: 1034, column: 47, scope: !3965)
!3991 = !DILocation(line: 0, scope: !3965)
!3992 = !DILocation(line: 1036, column: 17, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3965, file: !184, line: 1036, column: 17)
!3994 = !DILocation(line: 1040, column: 17, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3965, file: !184, line: 1040, column: 17)
!3996 = !DILocation(line: 1040, column: 54, scope: !3995)
!3997 = !DILocation(line: 1040, column: 17, scope: !3965)
!3998 = !DILocation(line: 1047, column: 19, scope: !3965)
!3999 = !DILocation(line: 0, scope: !3960)
!4000 = distinct !{!4000, !3970, !4001}
!4001 = !DILocation(line: 1049, column: 5, scope: !3947)
!4002 = !DILocation(line: 1052, column: 1, scope: !3947)
!4003 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !184, file: !184, line: 1055, type: !4004, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !2004)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!4006}
!4006 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !6, line: 71, baseType: !186)
!4007 = !DILocation(line: 1057, column: 9, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4003, file: !184, line: 1057, column: 9)
!4009 = !DILocation(line: 1057, column: 9, scope: !4003)
!4010 = !DILocation(line: 1062, column: 9, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !184, line: 1061, column: 43)
!4012 = distinct !DILexicalBlock(scope: !4003, file: !184, line: 1061, column: 9)
!4013 = !DILocation(line: 1065, column: 48, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4003, file: !184, line: 1065, column: 9)
!4015 = !DILocation(line: 0, scope: !4014)
!4016 = !DILocation(line: 0, scope: !4003)
!4017 = !DILocation(line: 1072, column: 1, scope: !4003)
!4018 = distinct !DISubprogram(name: "get_current_count", scope: !1917, file: !1917, line: 56, type: !1985, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !2004)
!4019 = !DILocation(line: 58, column: 12, scope: !4018)
!4020 = !DILocation(line: 58, column: 5, scope: !4018)
!4021 = distinct !DISubprogram(name: "delay_time", scope: !1917, file: !1917, line: 62, type: !2407, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DILocalVariable(name: "count", arg: 1, scope: !4021, file: !1917, line: 62, type: !139)
!4024 = !DILocalVariable(name: "end_count", scope: !4021, file: !1917, line: 64, type: !139)
!4025 = !DILocalVariable(name: "current", scope: !4021, file: !1917, line: 64, type: !139)
!4026 = !DILocation(line: 0, scope: !4021)
!4027 = !DILocation(line: 66, column: 17, scope: !4021)
!4028 = !DILocation(line: 66, column: 37, scope: !4021)
!4029 = !DILocation(line: 66, column: 45, scope: !4021)
!4030 = !DILocation(line: 67, column: 15, scope: !4021)
!4031 = !DILocation(line: 68, column: 12, scope: !4021)
!4032 = !DILocation(line: 68, column: 5, scope: !4021)
!4033 = !DILocation(line: 69, column: 19, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4021, file: !1917, line: 68, column: 45)
!4035 = distinct !{!4035, !4032, !4036}
!4036 = !DILocation(line: 70, column: 5, scope: !4021)
!4037 = !DILocation(line: 72, column: 1, scope: !4021)
!4038 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !1917, file: !1917, line: 75, type: !2407, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4039)
!4039 = !{!4040, !4041, !4042}
!4040 = !DILocalVariable(name: "count", arg: 1, scope: !4038, file: !1917, line: 75, type: !139)
!4041 = !DILocalVariable(name: "end_count", scope: !4038, file: !1917, line: 77, type: !139)
!4042 = !DILocalVariable(name: "current", scope: !4038, file: !1917, line: 77, type: !139)
!4043 = !DILocation(line: 0, scope: !4038)
!4044 = !DILocation(line: 79, column: 17, scope: !4038)
!4045 = !DILocation(line: 79, column: 42, scope: !4038)
!4046 = !DILocation(line: 79, column: 50, scope: !4038)
!4047 = !DILocation(line: 80, column: 15, scope: !4038)
!4048 = !DILocation(line: 81, column: 12, scope: !4038)
!4049 = !DILocation(line: 81, column: 5, scope: !4038)
!4050 = !DILocation(line: 82, column: 19, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4038, file: !1917, line: 81, column: 45)
!4052 = distinct !{!4052, !4049, !4053}
!4053 = !DILocation(line: 83, column: 5, scope: !4038)
!4054 = !DILocation(line: 85, column: 1, scope: !4038)
!4055 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !1917, file: !1917, line: 95, type: !1985, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !2004)
!4056 = !DILocation(line: 97, column: 13, scope: !4055)
!4057 = !DILocation(line: 97, column: 5, scope: !4055)
!4058 = distinct !DISubprogram(name: "delay_ms", scope: !1917, file: !1917, line: 107, type: !2604, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4059)
!4059 = !{!4060, !4061}
!4060 = !DILocalVariable(name: "ms", arg: 1, scope: !4058, file: !1917, line: 107, type: !61)
!4061 = !DILocalVariable(name: "count", scope: !4058, file: !1917, line: 109, type: !61)
!4062 = !DILocation(line: 0, scope: !4058)
!4063 = !DILocation(line: 111, column: 17, scope: !4058)
!4064 = !DILocation(line: 112, column: 17, scope: !4058)
!4065 = !DILocation(line: 112, column: 23, scope: !4058)
!4066 = !DILocation(line: 112, column: 11, scope: !4058)
!4067 = !DILocation(line: 113, column: 17, scope: !4058)
!4068 = !DILocation(line: 113, column: 23, scope: !4058)
!4069 = !DILocation(line: 113, column: 11, scope: !4058)
!4070 = !DILocation(line: 114, column: 17, scope: !4058)
!4071 = !DILocation(line: 114, column: 23, scope: !4058)
!4072 = !DILocation(line: 114, column: 11, scope: !4058)
!4073 = !DILocation(line: 115, column: 5, scope: !4058)
!4074 = !DILocation(line: 116, column: 1, scope: !4058)
!4075 = distinct !DISubprogram(name: "delay_us", scope: !1917, file: !1917, line: 120, type: !2604, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4076)
!4076 = !{!4077, !4078, !4079}
!4077 = !DILocalVariable(name: "us", arg: 1, scope: !4075, file: !1917, line: 120, type: !61)
!4078 = !DILocalVariable(name: "count", scope: !4075, file: !1917, line: 122, type: !61)
!4079 = !DILocalVariable(name: "ticks_per_us", scope: !4075, file: !1917, line: 123, type: !61)
!4080 = !DILocation(line: 0, scope: !4075)
!4081 = !DILocation(line: 125, column: 20, scope: !4075)
!4082 = !DILocation(line: 125, column: 39, scope: !4075)
!4083 = !DILocation(line: 126, column: 26, scope: !4075)
!4084 = !DILocation(line: 128, column: 5, scope: !4075)
!4085 = !DILocation(line: 129, column: 1, scope: !4075)
!4086 = distinct !DISubprogram(name: "drvTMR_init", scope: !1917, file: !1917, line: 133, type: !4087, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4089)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{null, !61, !61, !69, !153}
!4089 = !{!4090, !4091, !4092, !4093}
!4090 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4086, file: !1917, line: 133, type: !61)
!4091 = !DILocalVariable(name: "countValue", arg: 2, scope: !4086, file: !1917, line: 133, type: !61)
!4092 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !4086, file: !1917, line: 133, type: !69)
!4093 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !4086, file: !1917, line: 133, type: !153)
!4094 = !DILocation(line: 0, scope: !4086)
!4095 = !DILocation(line: 136, column: 5, scope: !4086)
!4096 = !DILocation(line: 138, column: 18, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4086, file: !1917, line: 138, column: 9)
!4098 = !DILocation(line: 138, column: 9, scope: !4086)
!4099 = !DILocation(line: 139, column: 30, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4097, file: !1917, line: 138, column: 27)
!4101 = !DILocation(line: 141, column: 5, scope: !4100)
!4102 = !DILocation(line: 142, column: 30, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4097, file: !1917, line: 141, column: 12)
!4104 = !DILocation(line: 0, scope: !4097)
!4105 = !DILocation(line: 146, column: 5, scope: !4086)
!4106 = !DILocation(line: 147, column: 1, scope: !4086)
!4107 = distinct !DISubprogram(name: "TMR_Start", scope: !1917, file: !1917, line: 149, type: !2604, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4108)
!4108 = !{!4109}
!4109 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4107, file: !1917, line: 149, type: !61)
!4110 = !DILocation(line: 0, scope: !4107)
!4111 = !DILocation(line: 151, column: 5, scope: !4107)
!4112 = !DILocation(line: 152, column: 1, scope: !4107)
!4113 = distinct !DISubprogram(name: "TMR_Stop", scope: !1917, file: !1917, line: 154, type: !2604, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4114)
!4114 = !{!4115}
!4115 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4113, file: !1917, line: 154, type: !61)
!4116 = !DILocation(line: 0, scope: !4113)
!4117 = !DILocation(line: 156, column: 5, scope: !4113)
!4118 = !DILocation(line: 157, column: 1, scope: !4113)
!4119 = distinct !DISubprogram(name: "drvGPT2Init", scope: !1917, file: !1917, line: 160, type: !154, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !2004)
!4120 = !DILocation(line: 162, column: 5, scope: !4119)
!4121 = !DILocation(line: 163, column: 1, scope: !4119)
!4122 = distinct !DISubprogram(name: "drvGPT4Init", scope: !1917, file: !1917, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !2004)
!4123 = !DILocation(line: 167, column: 5, scope: !4122)
!4124 = !DILocation(line: 168, column: 1, scope: !4122)
!4125 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !1917, file: !1917, line: 170, type: !2604, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1916, retainedNodes: !4126)
!4126 = !{!4127}
!4127 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4125, file: !1917, line: 170, type: !61)
!4128 = !DILocation(line: 0, scope: !4125)
!4129 = !DILocation(line: 172, column: 9, scope: !4125)
!4130 = !DILocation(line: 177, column: 5, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !1917, line: 175, column: 27)
!4132 = distinct !DILexicalBlock(scope: !4125, file: !1917, line: 175, column: 9)
!4133 = !DILocation(line: 178, column: 1, scope: !4125)
!4134 = distinct !DISubprogram(name: "top_xtal_init", scope: !281, file: !281, line: 52, type: !154, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4135)
!4135 = !{!4136, !4137}
!4136 = !DILocalVariable(name: "u4RegVal", scope: !4134, file: !281, line: 54, type: !61)
!4137 = !DILocalVariable(name: "reg", scope: !4134, file: !281, line: 55, type: !195)
!4138 = !DILocation(line: 0, scope: !4134)
!4139 = !DILocation(line: 55, column: 25, scope: !4134)
!4140 = !DILocation(line: 56, column: 16, scope: !4134)
!4141 = !DILocation(line: 56, column: 23, scope: !4134)
!4142 = !DILocation(line: 58, column: 16, scope: !4134)
!4143 = !DILocation(line: 61, column: 5, scope: !4134)
!4144 = !DILocation(line: 59, column: 14, scope: !4134)
!4145 = !DILocation(line: 0, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4134, file: !281, line: 61, column: 18)
!4147 = !DILocation(line: 87, column: 38, scope: !4134)
!4148 = !DILocation(line: 88, column: 21, scope: !4134)
!4149 = !DILocation(line: 88, column: 19, scope: !4134)
!4150 = !DILocation(line: 89, column: 5, scope: !4134)
!4151 = !DILocation(line: 90, column: 17, scope: !4134)
!4152 = !DILocation(line: 90, column: 33, scope: !4134)
!4153 = !DILocation(line: 90, column: 5, scope: !4134)
!4154 = !DILocation(line: 91, column: 1, scope: !4134)
!4155 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !281, file: !281, line: 98, type: !1985, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !2004)
!4156 = !DILocation(line: 100, column: 12, scope: !4155)
!4157 = !DILocation(line: 100, column: 5, scope: !4155)
!4158 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !281, file: !281, line: 108, type: !1985, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !2004)
!4159 = !DILocation(line: 110, column: 12, scope: !4158)
!4160 = !DILocation(line: 110, column: 5, scope: !4158)
!4161 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !281, file: !281, line: 118, type: !154, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4162)
!4162 = !{!4163, !4164}
!4163 = !DILocalVariable(name: "reg", scope: !4161, file: !281, line: 120, type: !60)
!4164 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4161, file: !281, line: 121, type: !59)
!4165 = !DILocation(line: 120, column: 5, scope: !4161)
!4166 = !DILocation(line: 120, column: 23, scope: !4161)
!4167 = !DILocation(line: 0, scope: !4161)
!4168 = !DILocation(line: 123, column: 11, scope: !4161)
!4169 = !DILocation(line: 123, column: 9, scope: !4161)
!4170 = !DILocation(line: 124, column: 12, scope: !4161)
!4171 = !DILocation(line: 124, column: 16, scope: !4161)
!4172 = !DILocation(line: 124, column: 39, scope: !4161)
!4173 = !DILocation(line: 124, column: 9, scope: !4161)
!4174 = !DILocation(line: 126, column: 9, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4161, file: !281, line: 126, column: 9)
!4176 = !DILocation(line: 126, column: 13, scope: !4175)
!4177 = !DILocation(line: 126, column: 9, scope: !4161)
!4178 = !DILocation(line: 127, column: 15, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4175, file: !281, line: 126, column: 47)
!4180 = !DILocation(line: 127, column: 13, scope: !4179)
!4181 = !DILocation(line: 128, column: 15, scope: !4179)
!4182 = !DILocation(line: 128, column: 19, scope: !4179)
!4183 = !DILocation(line: 128, column: 13, scope: !4179)
!4184 = !DILocation(line: 129, column: 15, scope: !4179)
!4185 = !DILocation(line: 129, column: 19, scope: !4179)
!4186 = !DILocation(line: 129, column: 13, scope: !4179)
!4187 = !DILocation(line: 130, column: 46, scope: !4179)
!4188 = !DILocation(line: 130, column: 9, scope: !4179)
!4189 = !DILocation(line: 132, column: 9, scope: !4179)
!4190 = !DILocation(line: 133, column: 19, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4179, file: !281, line: 132, column: 12)
!4192 = !DILocation(line: 133, column: 17, scope: !4191)
!4193 = !DILocation(line: 134, column: 19, scope: !4191)
!4194 = !DILocation(line: 134, column: 23, scope: !4191)
!4195 = !DILocation(line: 134, column: 17, scope: !4191)
!4196 = !DILocation(line: 135, column: 19, scope: !4179)
!4197 = !DILocation(line: 135, column: 18, scope: !4179)
!4198 = !DILocation(line: 135, column: 9, scope: !4191)
!4199 = distinct !{!4199, !4189, !4200}
!4200 = !DILocation(line: 135, column: 22, scope: !4179)
!4201 = !DILocation(line: 138, column: 1, scope: !4161)
!4202 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !4203, file: !4203, line: 176, type: !4204, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4208)
!4203 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!61, !4206}
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 32)
!4207 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4208 = !{!4209}
!4209 = !DILocalVariable(name: "Register", arg: 1, scope: !4202, file: !4203, line: 176, type: !4206)
!4210 = !DILocation(line: 0, scope: !4202)
!4211 = !DILocation(line: 178, column: 13, scope: !4202)
!4212 = !DILocation(line: 178, column: 12, scope: !4202)
!4213 = !DILocation(line: 178, column: 5, scope: !4202)
!4214 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !4203, file: !4203, line: 171, type: !4215, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4217)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{null, !4206, !61}
!4217 = !{!4218, !4219}
!4218 = !DILocalVariable(name: "Register", arg: 1, scope: !4214, file: !4203, line: 171, type: !4206)
!4219 = !DILocalVariable(name: "Value", arg: 2, scope: !4214, file: !4203, line: 171, type: !61)
!4220 = !DILocation(line: 0, scope: !4214)
!4221 = !DILocation(line: 173, column: 6, scope: !4214)
!4222 = !DILocation(line: 173, column: 36, scope: !4214)
!4223 = !DILocation(line: 174, column: 1, scope: !4214)
!4224 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !281, file: !281, line: 145, type: !4225, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4227)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{null, !54}
!4227 = !{!4228, !4229, !4230}
!4228 = !DILocalVariable(name: "fg960M", arg: 1, scope: !4224, file: !281, line: 145, type: !54)
!4229 = !DILocalVariable(name: "reg", scope: !4224, file: !281, line: 147, type: !60)
!4230 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4224, file: !281, line: 148, type: !59)
!4231 = !DILocation(line: 0, scope: !4224)
!4232 = !DILocation(line: 147, column: 5, scope: !4224)
!4233 = !DILocation(line: 147, column: 23, scope: !4224)
!4234 = !DILocation(line: 150, column: 11, scope: !4224)
!4235 = !DILocation(line: 150, column: 9, scope: !4224)
!4236 = !DILocation(line: 151, column: 12, scope: !4224)
!4237 = !DILocation(line: 151, column: 16, scope: !4224)
!4238 = !DILocation(line: 151, column: 39, scope: !4224)
!4239 = !DILocation(line: 151, column: 9, scope: !4224)
!4240 = !DILocation(line: 153, column: 9, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4224, file: !281, line: 153, column: 9)
!4242 = !DILocation(line: 153, column: 13, scope: !4241)
!4243 = !DILocation(line: 153, column: 9, scope: !4224)
!4244 = !DILocation(line: 154, column: 15, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4241, file: !281, line: 153, column: 45)
!4246 = !DILocation(line: 154, column: 13, scope: !4245)
!4247 = !DILocation(line: 155, column: 15, scope: !4245)
!4248 = !DILocation(line: 155, column: 19, scope: !4245)
!4249 = !DILocation(line: 155, column: 13, scope: !4245)
!4250 = !DILocation(line: 156, column: 15, scope: !4245)
!4251 = !DILocation(line: 156, column: 19, scope: !4245)
!4252 = !DILocation(line: 156, column: 13, scope: !4245)
!4253 = !DILocation(line: 157, column: 15, scope: !4245)
!4254 = !DILocation(line: 157, column: 13, scope: !4245)
!4255 = !DILocation(line: 158, column: 46, scope: !4245)
!4256 = !DILocation(line: 158, column: 9, scope: !4245)
!4257 = !DILocation(line: 160, column: 15, scope: !4245)
!4258 = !DILocation(line: 160, column: 13, scope: !4245)
!4259 = !DILocation(line: 161, column: 15, scope: !4245)
!4260 = !DILocation(line: 161, column: 19, scope: !4245)
!4261 = !DILocation(line: 161, column: 13, scope: !4245)
!4262 = !DILocation(line: 162, column: 15, scope: !4245)
!4263 = !DILocation(line: 162, column: 19, scope: !4245)
!4264 = !DILocation(line: 162, column: 13, scope: !4245)
!4265 = !DILocation(line: 163, column: 15, scope: !4245)
!4266 = !DILocation(line: 163, column: 19, scope: !4245)
!4267 = !DILocation(line: 163, column: 13, scope: !4245)
!4268 = !DILocation(line: 164, column: 46, scope: !4245)
!4269 = !DILocation(line: 164, column: 9, scope: !4245)
!4270 = !DILocation(line: 166, column: 9, scope: !4245)
!4271 = !DILocation(line: 167, column: 19, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4245, file: !281, line: 166, column: 12)
!4273 = !DILocation(line: 167, column: 17, scope: !4272)
!4274 = !DILocation(line: 168, column: 19, scope: !4272)
!4275 = !DILocation(line: 168, column: 23, scope: !4272)
!4276 = !DILocation(line: 168, column: 17, scope: !4272)
!4277 = !DILocation(line: 169, column: 19, scope: !4245)
!4278 = !DILocation(line: 169, column: 18, scope: !4245)
!4279 = !DILocation(line: 169, column: 9, scope: !4272)
!4280 = distinct !{!4280, !4270, !4281}
!4281 = !DILocation(line: 169, column: 22, scope: !4245)
!4282 = !DILocation(line: 171, column: 15, scope: !4245)
!4283 = !DILocation(line: 171, column: 13, scope: !4245)
!4284 = !DILocation(line: 172, column: 15, scope: !4245)
!4285 = !DILocation(line: 172, column: 19, scope: !4245)
!4286 = !DILocation(line: 172, column: 13, scope: !4245)
!4287 = !DILocation(line: 173, column: 15, scope: !4245)
!4288 = !DILocation(line: 173, column: 19, scope: !4245)
!4289 = !DILocation(line: 173, column: 13, scope: !4245)
!4290 = !DILocation(line: 174, column: 5, scope: !4245)
!4291 = !DILocation(line: 176, column: 11, scope: !4224)
!4292 = !DILocation(line: 176, column: 9, scope: !4224)
!4293 = !DILocation(line: 177, column: 9, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4224, file: !281, line: 177, column: 9)
!4295 = !DILocation(line: 0, scope: !4294)
!4296 = !DILocation(line: 177, column: 9, scope: !4224)
!4297 = !DILocation(line: 178, column: 19, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4294, file: !281, line: 177, column: 17)
!4299 = !DILocation(line: 178, column: 13, scope: !4298)
!4300 = !DILocation(line: 179, column: 5, scope: !4298)
!4301 = !DILocation(line: 180, column: 13, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4294, file: !281, line: 179, column: 12)
!4303 = !DILocation(line: 182, column: 42, scope: !4224)
!4304 = !DILocation(line: 182, column: 5, scope: !4224)
!4305 = !DILocation(line: 184, column: 1, scope: !4224)
!4306 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !281, file: !281, line: 191, type: !154, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4307)
!4307 = !{!4308, !4309}
!4308 = !DILocalVariable(name: "reg", scope: !4306, file: !281, line: 193, type: !60)
!4309 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4306, file: !281, line: 194, type: !59)
!4310 = !DILocation(line: 193, column: 5, scope: !4306)
!4311 = !DILocation(line: 193, column: 23, scope: !4306)
!4312 = !DILocation(line: 0, scope: !4306)
!4313 = !DILocation(line: 196, column: 11, scope: !4306)
!4314 = !DILocation(line: 196, column: 9, scope: !4306)
!4315 = !DILocation(line: 197, column: 11, scope: !4306)
!4316 = !DILocation(line: 197, column: 15, scope: !4306)
!4317 = !DILocation(line: 197, column: 9, scope: !4306)
!4318 = !DILocation(line: 198, column: 11, scope: !4306)
!4319 = !DILocation(line: 198, column: 15, scope: !4306)
!4320 = !DILocation(line: 198, column: 9, scope: !4306)
!4321 = !DILocation(line: 199, column: 11, scope: !4306)
!4322 = !DILocation(line: 199, column: 9, scope: !4306)
!4323 = !DILocation(line: 200, column: 42, scope: !4306)
!4324 = !DILocation(line: 200, column: 5, scope: !4306)
!4325 = !DILocation(line: 202, column: 11, scope: !4306)
!4326 = !DILocation(line: 202, column: 9, scope: !4306)
!4327 = !DILocation(line: 203, column: 11, scope: !4306)
!4328 = !DILocation(line: 203, column: 15, scope: !4306)
!4329 = !DILocation(line: 203, column: 9, scope: !4306)
!4330 = !DILocation(line: 204, column: 11, scope: !4306)
!4331 = !DILocation(line: 204, column: 15, scope: !4306)
!4332 = !DILocation(line: 204, column: 9, scope: !4306)
!4333 = !DILocation(line: 205, column: 11, scope: !4306)
!4334 = !DILocation(line: 205, column: 9, scope: !4306)
!4335 = !DILocation(line: 206, column: 42, scope: !4306)
!4336 = !DILocation(line: 206, column: 5, scope: !4306)
!4337 = !DILocation(line: 209, column: 1, scope: !4306)
!4338 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !281, file: !281, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4339)
!4339 = !{!4340, !4341}
!4340 = !DILocalVariable(name: "reg", scope: !4338, file: !281, line: 218, type: !60)
!4341 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4338, file: !281, line: 219, type: !59)
!4342 = !DILocation(line: 218, column: 5, scope: !4338)
!4343 = !DILocation(line: 218, column: 23, scope: !4338)
!4344 = !DILocation(line: 0, scope: !4338)
!4345 = !DILocation(line: 222, column: 11, scope: !4338)
!4346 = !DILocation(line: 222, column: 9, scope: !4338)
!4347 = !DILocation(line: 223, column: 11, scope: !4338)
!4348 = !DILocation(line: 223, column: 15, scope: !4338)
!4349 = !DILocation(line: 223, column: 9, scope: !4338)
!4350 = !DILocation(line: 224, column: 11, scope: !4338)
!4351 = !DILocation(line: 224, column: 9, scope: !4338)
!4352 = !DILocation(line: 225, column: 39, scope: !4338)
!4353 = !DILocation(line: 225, column: 5, scope: !4338)
!4354 = !DILocation(line: 228, column: 11, scope: !4338)
!4355 = !DILocation(line: 228, column: 9, scope: !4338)
!4356 = !DILocation(line: 229, column: 11, scope: !4338)
!4357 = !DILocation(line: 229, column: 15, scope: !4338)
!4358 = !DILocation(line: 229, column: 9, scope: !4338)
!4359 = !DILocation(line: 230, column: 11, scope: !4338)
!4360 = !DILocation(line: 230, column: 9, scope: !4338)
!4361 = !DILocation(line: 231, column: 39, scope: !4338)
!4362 = !DILocation(line: 231, column: 5, scope: !4338)
!4363 = !DILocation(line: 233, column: 5, scope: !4338)
!4364 = !DILocation(line: 233, column: 12, scope: !4338)
!4365 = !DILocation(line: 233, column: 19, scope: !4338)
!4366 = !DILocation(line: 233, column: 16, scope: !4338)
!4367 = distinct !{!4367, !4363, !4368}
!4368 = !DILocation(line: 233, column: 52, scope: !4338)
!4369 = !DILocation(line: 235, column: 21, scope: !4338)
!4370 = !DILocation(line: 235, column: 19, scope: !4338)
!4371 = !DILocation(line: 236, column: 5, scope: !4338)
!4372 = !DILocation(line: 237, column: 17, scope: !4338)
!4373 = !DILocation(line: 237, column: 33, scope: !4338)
!4374 = !DILocation(line: 237, column: 5, scope: !4338)
!4375 = !DILocation(line: 239, column: 1, scope: !4338)
!4376 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !281, file: !281, line: 246, type: !154, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4377)
!4377 = !{!4378, !4379}
!4378 = !DILocalVariable(name: "reg", scope: !4376, file: !281, line: 248, type: !60)
!4379 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4376, file: !281, line: 249, type: !59)
!4380 = !DILocation(line: 248, column: 5, scope: !4376)
!4381 = !DILocation(line: 248, column: 23, scope: !4376)
!4382 = !DILocation(line: 0, scope: !4376)
!4383 = !DILocation(line: 252, column: 5, scope: !4376)
!4384 = !DILocation(line: 255, column: 11, scope: !4376)
!4385 = !DILocation(line: 255, column: 9, scope: !4376)
!4386 = !DILocation(line: 256, column: 11, scope: !4376)
!4387 = !DILocation(line: 256, column: 15, scope: !4376)
!4388 = !DILocation(line: 256, column: 9, scope: !4376)
!4389 = !DILocation(line: 257, column: 11, scope: !4376)
!4390 = !DILocation(line: 257, column: 15, scope: !4376)
!4391 = !DILocation(line: 257, column: 9, scope: !4376)
!4392 = !DILocation(line: 258, column: 39, scope: !4376)
!4393 = !DILocation(line: 258, column: 5, scope: !4376)
!4394 = !DILocation(line: 260, column: 5, scope: !4376)
!4395 = !DILocation(line: 260, column: 12, scope: !4376)
!4396 = !DILocation(line: 260, column: 19, scope: !4376)
!4397 = !DILocation(line: 260, column: 16, scope: !4376)
!4398 = distinct !{!4398, !4394, !4399}
!4399 = !DILocation(line: 260, column: 52, scope: !4376)
!4400 = !DILocation(line: 263, column: 11, scope: !4376)
!4401 = !DILocation(line: 263, column: 9, scope: !4376)
!4402 = !DILocation(line: 264, column: 11, scope: !4376)
!4403 = !DILocation(line: 264, column: 15, scope: !4376)
!4404 = !DILocation(line: 264, column: 9, scope: !4376)
!4405 = !DILocation(line: 265, column: 11, scope: !4376)
!4406 = !DILocation(line: 265, column: 15, scope: !4376)
!4407 = !DILocation(line: 265, column: 9, scope: !4376)
!4408 = !DILocation(line: 266, column: 39, scope: !4376)
!4409 = !DILocation(line: 266, column: 5, scope: !4376)
!4410 = !DILocation(line: 269, column: 11, scope: !4376)
!4411 = !DILocation(line: 269, column: 9, scope: !4376)
!4412 = !DILocation(line: 270, column: 11, scope: !4376)
!4413 = !DILocation(line: 270, column: 15, scope: !4376)
!4414 = !DILocation(line: 270, column: 9, scope: !4376)
!4415 = !DILocation(line: 271, column: 11, scope: !4376)
!4416 = !DILocation(line: 271, column: 15, scope: !4376)
!4417 = !DILocation(line: 271, column: 9, scope: !4376)
!4418 = !DILocation(line: 272, column: 39, scope: !4376)
!4419 = !DILocation(line: 272, column: 5, scope: !4376)
!4420 = !DILocation(line: 273, column: 19, scope: !4376)
!4421 = !DILocation(line: 274, column: 5, scope: !4376)
!4422 = !DILocation(line: 275, column: 17, scope: !4376)
!4423 = !DILocation(line: 275, column: 33, scope: !4376)
!4424 = !DILocation(line: 275, column: 5, scope: !4376)
!4425 = !DILocation(line: 277, column: 1, scope: !4376)
!4426 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !281, file: !281, line: 284, type: !154, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4427)
!4427 = !{!4428, !4429}
!4428 = !DILocalVariable(name: "reg", scope: !4426, file: !281, line: 286, type: !60)
!4429 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4426, file: !281, line: 287, type: !59)
!4430 = !DILocation(line: 286, column: 5, scope: !4426)
!4431 = !DILocation(line: 286, column: 23, scope: !4426)
!4432 = !DILocation(line: 0, scope: !4426)
!4433 = !DILocation(line: 290, column: 5, scope: !4426)
!4434 = !DILocation(line: 293, column: 11, scope: !4426)
!4435 = !DILocation(line: 293, column: 9, scope: !4426)
!4436 = !DILocation(line: 294, column: 11, scope: !4426)
!4437 = !DILocation(line: 294, column: 15, scope: !4426)
!4438 = !DILocation(line: 294, column: 9, scope: !4426)
!4439 = !DILocation(line: 295, column: 11, scope: !4426)
!4440 = !DILocation(line: 295, column: 15, scope: !4426)
!4441 = !DILocation(line: 295, column: 9, scope: !4426)
!4442 = !DILocation(line: 296, column: 39, scope: !4426)
!4443 = !DILocation(line: 296, column: 5, scope: !4426)
!4444 = !DILocation(line: 298, column: 5, scope: !4426)
!4445 = !DILocation(line: 298, column: 12, scope: !4426)
!4446 = !DILocation(line: 298, column: 19, scope: !4426)
!4447 = !DILocation(line: 298, column: 16, scope: !4426)
!4448 = distinct !{!4448, !4444, !4449}
!4449 = !DILocation(line: 298, column: 52, scope: !4426)
!4450 = !DILocation(line: 301, column: 11, scope: !4426)
!4451 = !DILocation(line: 301, column: 9, scope: !4426)
!4452 = !DILocation(line: 302, column: 11, scope: !4426)
!4453 = !DILocation(line: 302, column: 15, scope: !4426)
!4454 = !DILocation(line: 302, column: 9, scope: !4426)
!4455 = !DILocation(line: 303, column: 11, scope: !4426)
!4456 = !DILocation(line: 303, column: 15, scope: !4426)
!4457 = !DILocation(line: 303, column: 9, scope: !4426)
!4458 = !DILocation(line: 304, column: 39, scope: !4426)
!4459 = !DILocation(line: 304, column: 5, scope: !4426)
!4460 = !DILocation(line: 307, column: 11, scope: !4426)
!4461 = !DILocation(line: 307, column: 9, scope: !4426)
!4462 = !DILocation(line: 308, column: 11, scope: !4426)
!4463 = !DILocation(line: 308, column: 15, scope: !4426)
!4464 = !DILocation(line: 308, column: 9, scope: !4426)
!4465 = !DILocation(line: 309, column: 11, scope: !4426)
!4466 = !DILocation(line: 309, column: 15, scope: !4426)
!4467 = !DILocation(line: 309, column: 9, scope: !4426)
!4468 = !DILocation(line: 310, column: 39, scope: !4426)
!4469 = !DILocation(line: 310, column: 5, scope: !4426)
!4470 = !DILocation(line: 311, column: 19, scope: !4426)
!4471 = !DILocation(line: 312, column: 5, scope: !4426)
!4472 = !DILocation(line: 313, column: 17, scope: !4426)
!4473 = !DILocation(line: 313, column: 33, scope: !4426)
!4474 = !DILocation(line: 313, column: 5, scope: !4426)
!4475 = !DILocation(line: 315, column: 1, scope: !4426)
!4476 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !281, file: !281, line: 323, type: !154, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4477)
!4477 = !{!4478, !4479}
!4478 = !DILocalVariable(name: "reg", scope: !4476, file: !281, line: 325, type: !60)
!4479 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4476, file: !281, line: 326, type: !59)
!4480 = !DILocation(line: 325, column: 5, scope: !4476)
!4481 = !DILocation(line: 325, column: 23, scope: !4476)
!4482 = !DILocation(line: 0, scope: !4476)
!4483 = !DILocation(line: 329, column: 5, scope: !4476)
!4484 = !DILocation(line: 332, column: 11, scope: !4476)
!4485 = !DILocation(line: 332, column: 9, scope: !4476)
!4486 = !DILocation(line: 333, column: 11, scope: !4476)
!4487 = !DILocation(line: 333, column: 15, scope: !4476)
!4488 = !DILocation(line: 333, column: 9, scope: !4476)
!4489 = !DILocation(line: 334, column: 11, scope: !4476)
!4490 = !DILocation(line: 334, column: 9, scope: !4476)
!4491 = !DILocation(line: 335, column: 39, scope: !4476)
!4492 = !DILocation(line: 335, column: 5, scope: !4476)
!4493 = !DILocation(line: 337, column: 5, scope: !4476)
!4494 = !DILocation(line: 337, column: 12, scope: !4476)
!4495 = !DILocation(line: 337, column: 19, scope: !4476)
!4496 = !DILocation(line: 337, column: 16, scope: !4476)
!4497 = distinct !{!4497, !4493, !4498}
!4498 = !DILocation(line: 337, column: 52, scope: !4476)
!4499 = !DILocation(line: 340, column: 11, scope: !4476)
!4500 = !DILocation(line: 340, column: 9, scope: !4476)
!4501 = !DILocation(line: 341, column: 11, scope: !4476)
!4502 = !DILocation(line: 341, column: 15, scope: !4476)
!4503 = !DILocation(line: 341, column: 9, scope: !4476)
!4504 = !DILocation(line: 342, column: 11, scope: !4476)
!4505 = !DILocation(line: 342, column: 15, scope: !4476)
!4506 = !DILocation(line: 342, column: 9, scope: !4476)
!4507 = !DILocation(line: 343, column: 39, scope: !4476)
!4508 = !DILocation(line: 343, column: 5, scope: !4476)
!4509 = !DILocation(line: 344, column: 19, scope: !4476)
!4510 = !DILocation(line: 345, column: 5, scope: !4476)
!4511 = !DILocation(line: 346, column: 17, scope: !4476)
!4512 = !DILocation(line: 346, column: 33, scope: !4476)
!4513 = !DILocation(line: 346, column: 5, scope: !4476)
!4514 = !DILocation(line: 348, column: 1, scope: !4476)
!4515 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !281, file: !281, line: 353, type: !154, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4516)
!4516 = !{!4517, !4518}
!4517 = !DILocalVariable(name: "reg", scope: !4515, file: !281, line: 355, type: !158)
!4518 = !DILocalVariable(name: "pTopCfgHclk", scope: !4515, file: !281, line: 356, type: !283)
!4519 = !DILocation(line: 355, column: 5, scope: !4515)
!4520 = !DILocation(line: 355, column: 21, scope: !4515)
!4521 = !DILocation(line: 0, scope: !4515)
!4522 = !DILocation(line: 358, column: 11, scope: !4515)
!4523 = !DILocation(line: 358, column: 9, scope: !4515)
!4524 = !DILocation(line: 359, column: 11, scope: !4515)
!4525 = !DILocation(line: 359, column: 15, scope: !4515)
!4526 = !DILocation(line: 359, column: 9, scope: !4515)
!4527 = !DILocation(line: 360, column: 11, scope: !4515)
!4528 = !DILocation(line: 360, column: 9, scope: !4515)
!4529 = !DILocation(line: 361, column: 37, scope: !4515)
!4530 = !DILocation(line: 361, column: 5, scope: !4515)
!4531 = !DILocation(line: 362, column: 1, scope: !4515)
!4532 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !281, file: !281, line: 368, type: !154, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4533)
!4533 = !{!4534, !4535, !4536, !4538, !4540}
!4534 = !DILocalVariable(name: "reg", scope: !4532, file: !281, line: 370, type: !158)
!4535 = !DILocalVariable(name: "pTopCfgHclk", scope: !4532, file: !281, line: 371, type: !283)
!4536 = !DILocalVariable(name: "addr", scope: !4537, file: !281, line: 383, type: !284)
!4537 = distinct !DILexicalBlock(scope: !4532, file: !281, line: 383, column: 5)
!4538 = !DILocalVariable(name: "addr", scope: !4539, file: !281, line: 384, type: !284)
!4539 = distinct !DILexicalBlock(scope: !4532, file: !281, line: 384, column: 5)
!4540 = !DILocalVariable(name: "addr", scope: !4541, file: !281, line: 385, type: !284)
!4541 = distinct !DILexicalBlock(scope: !4532, file: !281, line: 385, column: 5)
!4542 = !DILocation(line: 370, column: 5, scope: !4532)
!4543 = !DILocation(line: 370, column: 21, scope: !4532)
!4544 = !DILocation(line: 0, scope: !4532)
!4545 = !DILocation(line: 374, column: 5, scope: !4532)
!4546 = !DILocation(line: 377, column: 11, scope: !4532)
!4547 = !DILocation(line: 377, column: 9, scope: !4532)
!4548 = !DILocation(line: 378, column: 11, scope: !4532)
!4549 = !DILocation(line: 378, column: 15, scope: !4532)
!4550 = !DILocation(line: 378, column: 9, scope: !4532)
!4551 = !DILocation(line: 379, column: 11, scope: !4532)
!4552 = !DILocation(line: 379, column: 15, scope: !4532)
!4553 = !DILocation(line: 379, column: 9, scope: !4532)
!4554 = !DILocation(line: 380, column: 37, scope: !4532)
!4555 = !DILocation(line: 380, column: 5, scope: !4532)
!4556 = !DILocation(line: 0, scope: !4537)
!4557 = !DILocation(line: 383, column: 5, scope: !4537)
!4558 = !DILocation(line: 0, scope: !4539)
!4559 = !DILocation(line: 384, column: 5, scope: !4539)
!4560 = !DILocation(line: 0, scope: !4541)
!4561 = !DILocation(line: 385, column: 5, scope: !4541)
!4562 = !DILocation(line: 388, column: 1, scope: !4532)
!4563 = distinct !DISubprogram(name: "getc", scope: !293, file: !293, line: 68, type: !2690, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4564)
!4564 = !{!4565}
!4565 = !DILocalVariable(name: "rc", scope: !4563, file: !293, line: 71, type: !7)
!4566 = !DILocation(line: 71, column: 14, scope: !4563)
!4567 = !DILocation(line: 0, scope: !4563)
!4568 = !DILocation(line: 72, column: 5, scope: !4563)
!4569 = distinct !DISubprogram(name: "getc_nowait", scope: !293, file: !293, line: 80, type: !2690, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4570)
!4570 = !{!4571}
!4571 = !DILocalVariable(name: "c", scope: !4569, file: !293, line: 82, type: !202)
!4572 = !DILocation(line: 84, column: 9, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4569, file: !293, line: 84, column: 9)
!4574 = !DILocation(line: 84, column: 40, scope: !4573)
!4575 = !DILocation(line: 84, column: 9, scope: !4569)
!4576 = !DILocation(line: 85, column: 13, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4573, file: !293, line: 84, column: 47)
!4578 = !DILocation(line: 86, column: 16, scope: !4577)
!4579 = !DILocation(line: 0, scope: !4569)
!4580 = !DILocation(line: 86, column: 9, scope: !4577)
!4581 = !DILocation(line: 0, scope: !4573)
!4582 = !DILocation(line: 90, column: 1, scope: !4569)
!4583 = distinct !DISubprogram(name: "uart_output_char", scope: !293, file: !293, line: 93, type: !4584, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4587)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{null, !4586, !58}
!4586 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !296, line: 75, baseType: !295)
!4587 = !{!4588, !4589, !4590}
!4588 = !DILocalVariable(name: "port_no", arg: 1, scope: !4583, file: !293, line: 93, type: !4586)
!4589 = !DILocalVariable(name: "c", arg: 2, scope: !4583, file: !293, line: 93, type: !58)
!4590 = !DILocalVariable(name: "base", scope: !4583, file: !293, line: 95, type: !30)
!4591 = !DILocation(line: 0, scope: !4583)
!4592 = !DILocation(line: 95, column: 25, scope: !4583)
!4593 = !DILocation(line: 97, column: 5, scope: !4583)
!4594 = !DILocation(line: 97, column: 14, scope: !4583)
!4595 = !DILocation(line: 97, column: 42, scope: !4583)
!4596 = !DILocation(line: 97, column: 12, scope: !4583)
!4597 = distinct !{!4597, !4593, !4598}
!4598 = !DILocation(line: 98, column: 9, scope: !4583)
!4599 = !DILocation(line: 99, column: 35, scope: !4583)
!4600 = !DILocation(line: 99, column: 5, scope: !4583)
!4601 = !DILocation(line: 99, column: 33, scope: !4583)
!4602 = !DILocation(line: 102, column: 1, scope: !4583)
!4603 = distinct !DISubprogram(name: "uart_input_char", scope: !293, file: !293, line: 106, type: !4604, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4606)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{!54, !4586}
!4606 = !{!4607, !4608, !4609}
!4607 = !DILocalVariable(name: "port_no", arg: 1, scope: !4603, file: !293, line: 106, type: !4586)
!4608 = !DILocalVariable(name: "base", scope: !4603, file: !293, line: 108, type: !30)
!4609 = !DILocalVariable(name: "c", scope: !4603, file: !293, line: 109, type: !202)
!4610 = !DILocation(line: 0, scope: !4603)
!4611 = !DILocation(line: 108, column: 25, scope: !4603)
!4612 = !DILocation(line: 111, column: 5, scope: !4603)
!4613 = !DILocation(line: 111, column: 14, scope: !4603)
!4614 = !DILocation(line: 111, column: 42, scope: !4603)
!4615 = !DILocation(line: 111, column: 12, scope: !4603)
!4616 = distinct !{!4616, !4612, !4617}
!4617 = !DILocation(line: 112, column: 9, scope: !4603)
!4618 = !DILocation(line: 114, column: 9, scope: !4603)
!4619 = !DILocation(line: 116, column: 5, scope: !4603)
!4620 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !293, file: !293, line: 120, type: !4621, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!61, !4586}
!4623 = !{!4624, !4625, !4626}
!4624 = !DILocalVariable(name: "port_no", arg: 1, scope: !4620, file: !293, line: 120, type: !4586)
!4625 = !DILocalVariable(name: "base", scope: !4620, file: !293, line: 122, type: !30)
!4626 = !DILocalVariable(name: "c", scope: !4620, file: !293, line: 123, type: !202)
!4627 = !DILocation(line: 0, scope: !4620)
!4628 = !DILocation(line: 122, column: 25, scope: !4620)
!4629 = !DILocation(line: 125, column: 9, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4620, file: !293, line: 125, column: 9)
!4631 = !DILocation(line: 125, column: 37, scope: !4630)
!4632 = !DILocation(line: 125, column: 9, scope: !4620)
!4633 = !DILocation(line: 126, column: 13, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4630, file: !293, line: 125, column: 44)
!4635 = !DILocation(line: 127, column: 16, scope: !4634)
!4636 = !DILocation(line: 127, column: 9, scope: !4634)
!4637 = !DILocation(line: 0, scope: !4630)
!4638 = !DILocation(line: 131, column: 1, scope: !4620)
!4639 = distinct !DISubprogram(name: "halUART_HWInit", scope: !293, file: !293, line: 136, type: !4640, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4642)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{null, !4586}
!4642 = !{!4643}
!4643 = !DILocalVariable(name: "u_port", arg: 1, scope: !4639, file: !293, line: 136, type: !4586)
!4644 = !DILocation(line: 0, scope: !4639)
!4645 = !DILocation(line: 139, column: 5, scope: !4639)
!4646 = !DILocation(line: 140, column: 9, scope: !4639)
!4647 = !DILocation(line: 153, column: 5, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !293, line: 147, column: 38)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !293, line: 147, column: 16)
!4650 = distinct !DILexicalBlock(scope: !4639, file: !293, line: 140, column: 9)
!4651 = !DILocation(line: 0, scope: !4650)
!4652 = !DILocation(line: 155, column: 1, scope: !4639)
!4653 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !293, file: !293, line: 158, type: !4654, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4656)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{null, !4586, !61, !864, !864, !864}
!4656 = !{!4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4672, !4673}
!4657 = !DILocalVariable(name: "u_port", arg: 1, scope: !4653, file: !293, line: 158, type: !4586)
!4658 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4653, file: !293, line: 158, type: !61)
!4659 = !DILocalVariable(name: "databit", arg: 3, scope: !4653, file: !293, line: 158, type: !864)
!4660 = !DILocalVariable(name: "parity", arg: 4, scope: !4653, file: !293, line: 158, type: !864)
!4661 = !DILocalVariable(name: "stopbit", arg: 5, scope: !4653, file: !293, line: 158, type: !864)
!4662 = !DILocalVariable(name: "control_word", scope: !4653, file: !293, line: 160, type: !864)
!4663 = !DILocalVariable(name: "UART_BASE", scope: !4653, file: !293, line: 161, type: !61)
!4664 = !DILocalVariable(name: "data", scope: !4653, file: !293, line: 162, type: !61)
!4665 = !DILocalVariable(name: "uart_lcr", scope: !4653, file: !293, line: 162, type: !61)
!4666 = !DILocalVariable(name: "high_speed_div", scope: !4653, file: !293, line: 162, type: !61)
!4667 = !DILocalVariable(name: "sample_count", scope: !4653, file: !293, line: 162, type: !61)
!4668 = !DILocalVariable(name: "sample_point", scope: !4653, file: !293, line: 162, type: !61)
!4669 = !DILocalVariable(name: "fraction", scope: !4653, file: !293, line: 162, type: !61)
!4670 = !DILocalVariable(name: "fraction_L_mapping", scope: !4653, file: !293, line: 163, type: !4671)
!4671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 176, elements: !1854)
!4672 = !DILocalVariable(name: "fraction_M_mapping", scope: !4653, file: !293, line: 164, type: !4671)
!4673 = !DILocalVariable(name: "status", scope: !4653, file: !293, line: 165, type: !527)
!4674 = !DILocation(line: 0, scope: !4653)
!4675 = !DILocation(line: 163, column: 15, scope: !4653)
!4676 = !DILocation(line: 164, column: 15, scope: !4653)
!4677 = !DILocation(line: 166, column: 20, scope: !4653)
!4678 = !DILocation(line: 166, column: 18, scope: !4653)
!4679 = !DILocation(line: 168, column: 9, scope: !4653)
!4680 = !DILocation(line: 176, column: 5, scope: !4653)
!4681 = !DILocation(line: 176, column: 44, scope: !4653)
!4682 = !DILocation(line: 177, column: 16, scope: !4653)
!4683 = !DILocation(line: 178, column: 50, scope: !4653)
!4684 = !DILocation(line: 178, column: 38, scope: !4653)
!4685 = !DILocation(line: 179, column: 12, scope: !4653)
!4686 = !DILocation(line: 179, column: 25, scope: !4653)
!4687 = !DILocation(line: 180, column: 28, scope: !4653)
!4688 = !DILocation(line: 180, column: 34, scope: !4653)
!4689 = !DILocation(line: 182, column: 29, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4653, file: !293, line: 181, column: 5)
!4691 = !DILocation(line: 182, column: 46, scope: !4690)
!4692 = !DILocation(line: 183, column: 26, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !293, line: 183, column: 13)
!4694 = !DILocation(line: 183, column: 13, scope: !4690)
!4695 = !DILocation(line: 192, column: 30, scope: !4653)
!4696 = !DILocation(line: 192, column: 35, scope: !4653)
!4697 = !DILocation(line: 192, column: 46, scope: !4653)
!4698 = !DILocation(line: 192, column: 74, scope: !4653)
!4699 = !DILocation(line: 192, column: 53, scope: !4653)
!4700 = !DILocation(line: 192, column: 80, scope: !4653)
!4701 = !DILocation(line: 193, column: 56, scope: !4653)
!4702 = !DILocation(line: 193, column: 5, scope: !4653)
!4703 = !DILocation(line: 193, column: 38, scope: !4653)
!4704 = !DILocation(line: 194, column: 57, scope: !4653)
!4705 = !DILocation(line: 194, column: 63, scope: !4653)
!4706 = !DILocation(line: 194, column: 5, scope: !4653)
!4707 = !DILocation(line: 194, column: 38, scope: !4653)
!4708 = !DILocation(line: 195, column: 5, scope: !4653)
!4709 = !DILocation(line: 195, column: 45, scope: !4653)
!4710 = !DILocation(line: 196, column: 5, scope: !4653)
!4711 = !DILocation(line: 196, column: 47, scope: !4653)
!4712 = !DILocation(line: 197, column: 46, scope: !4653)
!4713 = !DILocation(line: 197, column: 5, scope: !4653)
!4714 = !DILocation(line: 197, column: 44, scope: !4653)
!4715 = !DILocation(line: 198, column: 46, scope: !4653)
!4716 = !DILocation(line: 198, column: 5, scope: !4653)
!4717 = !DILocation(line: 198, column: 44, scope: !4653)
!4718 = !DILocation(line: 199, column: 38, scope: !4653)
!4719 = !DILocation(line: 200, column: 5, scope: !4653)
!4720 = !DILocation(line: 200, column: 38, scope: !4653)
!4721 = !DILocation(line: 202, column: 20, scope: !4653)
!4722 = !DILocation(line: 203, column: 18, scope: !4653)
!4723 = !DILocation(line: 205, column: 18, scope: !4653)
!4724 = !DILocation(line: 207, column: 18, scope: !4653)
!4725 = !DILocation(line: 208, column: 18, scope: !4653)
!4726 = !DILocation(line: 209, column: 5, scope: !4653)
!4727 = !DILocation(line: 213, column: 1, scope: !4653)
!4728 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !293, file: !293, line: 215, type: !4729, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4731)
!4729 = !DISubroutineType(types: !4730)
!4730 = !{null, !4586, !527, !2564}
!4731 = !{!4732, !4733, !4734}
!4732 = !DILocalVariable(name: "u_port", arg: 1, scope: !4728, file: !293, line: 215, type: !4586)
!4733 = !DILocalVariable(name: "is_rx", arg: 2, scope: !4728, file: !293, line: 215, type: !527)
!4734 = !DILocalVariable(name: "length", arg: 3, scope: !4728, file: !293, line: 215, type: !2564)
!4735 = !DILocation(line: 0, scope: !4728)
!4736 = !DILocation(line: 217, column: 16, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4728, file: !293, line: 217, column: 9)
!4738 = !DILocation(line: 0, scope: !4737)
!4739 = !DILocation(line: 217, column: 9, scope: !4728)
!4740 = !DILocation(line: 218, column: 13, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4737, file: !293, line: 217, column: 31)
!4742 = !DILocation(line: 219, column: 23, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !293, line: 218, column: 20)
!4744 = distinct !DILexicalBlock(scope: !4741, file: !293, line: 218, column: 13)
!4745 = !DILocation(line: 220, column: 9, scope: !4743)
!4746 = !DILocation(line: 221, column: 23, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4744, file: !293, line: 220, column: 16)
!4748 = !DILocation(line: 221, column: 21, scope: !4747)
!4749 = !DILocation(line: 222, column: 24, scope: !4747)
!4750 = !DILocation(line: 222, column: 21, scope: !4747)
!4751 = !DILocation(line: 225, column: 13, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4737, file: !293, line: 224, column: 12)
!4753 = !DILocation(line: 226, column: 23, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !293, line: 225, column: 20)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !293, line: 225, column: 13)
!4756 = !DILocation(line: 227, column: 9, scope: !4754)
!4757 = !DILocation(line: 228, column: 23, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4755, file: !293, line: 227, column: 16)
!4759 = !DILocation(line: 228, column: 21, scope: !4758)
!4760 = !DILocation(line: 229, column: 24, scope: !4758)
!4761 = !DILocation(line: 229, column: 21, scope: !4758)
!4762 = !DILocation(line: 233, column: 5, scope: !4728)
!4763 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !293, file: !293, line: 236, type: !4764, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4766)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{null, !4586, !210, !61}
!4766 = !{!4767, !4768, !4769, !4770}
!4767 = !DILocalVariable(name: "u_port", arg: 1, scope: !4763, file: !293, line: 236, type: !4586)
!4768 = !DILocalVariable(name: "data", arg: 2, scope: !4763, file: !293, line: 236, type: !210)
!4769 = !DILocalVariable(name: "length", arg: 3, scope: !4763, file: !293, line: 236, type: !61)
!4770 = !DILocalVariable(name: "idx", scope: !4763, file: !293, line: 238, type: !159)
!4771 = !DILocation(line: 0, scope: !4763)
!4772 = !DILocation(line: 239, column: 23, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !293, line: 239, column: 5)
!4774 = distinct !DILexicalBlock(scope: !4763, file: !293, line: 239, column: 5)
!4775 = !DILocation(line: 239, column: 5, scope: !4774)
!4776 = !DILocation(line: 240, column: 13, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4773, file: !293, line: 239, column: 40)
!4778 = !DILocation(line: 244, column: 9, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !293, line: 242, column: 42)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !293, line: 242, column: 20)
!4781 = distinct !DILexicalBlock(scope: !4777, file: !293, line: 240, column: 13)
!4782 = !DILocation(line: 0, scope: !4781)
!4783 = !DILocation(line: 239, column: 36, scope: !4773)
!4784 = distinct !{!4784, !4775, !4785}
!4785 = !DILocation(line: 246, column: 5, scope: !4774)
!4786 = !DILocation(line: 249, column: 1, scope: !4763)
!4787 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !293, file: !293, line: 251, type: !4788, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4790)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !4586, !2146, !61}
!4790 = !{!4791, !4792, !4793, !4794}
!4791 = !DILocalVariable(name: "u_port", arg: 1, scope: !4787, file: !293, line: 251, type: !4586)
!4792 = !DILocalVariable(name: "data", arg: 2, scope: !4787, file: !293, line: 251, type: !2146)
!4793 = !DILocalVariable(name: "length", arg: 3, scope: !4787, file: !293, line: 251, type: !61)
!4794 = !DILocalVariable(name: "idx", scope: !4787, file: !293, line: 253, type: !159)
!4795 = !DILocation(line: 0, scope: !4787)
!4796 = !DILocation(line: 254, column: 23, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !293, line: 254, column: 5)
!4798 = distinct !DILexicalBlock(scope: !4787, file: !293, line: 254, column: 5)
!4799 = !DILocation(line: 254, column: 5, scope: !4798)
!4800 = !DILocation(line: 255, column: 13, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4797, file: !293, line: 254, column: 40)
!4802 = !DILocation(line: 256, column: 61, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !293, line: 255, column: 35)
!4804 = distinct !DILexicalBlock(scope: !4801, file: !293, line: 255, column: 13)
!4805 = !DILocation(line: 256, column: 59, scope: !4803)
!4806 = !DILocation(line: 257, column: 9, scope: !4803)
!4807 = !DILocation(line: 258, column: 61, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !293, line: 257, column: 42)
!4809 = distinct !DILexicalBlock(scope: !4804, file: !293, line: 257, column: 20)
!4810 = !DILocation(line: 258, column: 59, scope: !4808)
!4811 = !DILocation(line: 259, column: 9, scope: !4808)
!4812 = !DILocation(line: 254, column: 36, scope: !4797)
!4813 = distinct !{!4813, !4799, !4814}
!4814 = !DILocation(line: 261, column: 5, scope: !4798)
!4815 = !DILocation(line: 264, column: 1, scope: !4787)
!4816 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !293, file: !293, line: 266, type: !4817, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4819)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{null, !4586, !210, !61, !61}
!4819 = !{!4820, !4821, !4822, !4823}
!4820 = !DILocalVariable(name: "u_port", arg: 1, scope: !4816, file: !293, line: 266, type: !4586)
!4821 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !4816, file: !293, line: 266, type: !210)
!4822 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !4816, file: !293, line: 266, type: !61)
!4823 = !DILocalVariable(name: "threshold", arg: 4, scope: !4816, file: !293, line: 266, type: !61)
!4824 = !DILocation(line: 0, scope: !4816)
!4825 = !DILocation(line: 268, column: 9, scope: !4816)
!4826 = !DILocation(line: 274, column: 5, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !293, line: 271, column: 38)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !293, line: 271, column: 16)
!4829 = distinct !DILexicalBlock(scope: !4816, file: !293, line: 268, column: 9)
!4830 = !DILocation(line: 0, scope: !4829)
!4831 = !DILocation(line: 276, column: 1, scope: !4816)
!4832 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !293, file: !293, line: 278, type: !4833, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4835)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{null, !4586, !210, !61, !61, !61, !61}
!4835 = !{!4836, !4837, !4838, !4839, !4840, !4841}
!4836 = !DILocalVariable(name: "u_port", arg: 1, scope: !4832, file: !293, line: 278, type: !4586)
!4837 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !4832, file: !293, line: 278, type: !210)
!4838 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !4832, file: !293, line: 278, type: !61)
!4839 = !DILocalVariable(name: "alert_length", arg: 4, scope: !4832, file: !293, line: 278, type: !61)
!4840 = !DILocalVariable(name: "threshold", arg: 5, scope: !4832, file: !293, line: 278, type: !61)
!4841 = !DILocalVariable(name: "timeout", arg: 6, scope: !4832, file: !293, line: 278, type: !61)
!4842 = !DILocation(line: 0, scope: !4832)
!4843 = !DILocation(line: 280, column: 9, scope: !4832)
!4844 = !DILocation(line: 286, column: 5, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !293, line: 283, column: 38)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !293, line: 283, column: 16)
!4847 = distinct !DILexicalBlock(scope: !4832, file: !293, line: 280, column: 9)
!4848 = !DILocation(line: 0, scope: !4847)
!4849 = !DILocation(line: 288, column: 1, scope: !4832)
!4850 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !293, file: !293, line: 290, type: !4851, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{null, !4586, !754}
!4853 = !{!4854, !4855}
!4854 = !DILocalVariable(name: "u_port", arg: 1, scope: !4850, file: !293, line: 290, type: !4586)
!4855 = !DILocalVariable(name: "func", arg: 2, scope: !4850, file: !293, line: 290, type: !754)
!4856 = !DILocation(line: 0, scope: !4850)
!4857 = !DILocation(line: 292, column: 9, scope: !4850)
!4858 = !DILocation(line: 296, column: 5, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !293, line: 294, column: 38)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !293, line: 294, column: 16)
!4861 = distinct !DILexicalBlock(scope: !4850, file: !293, line: 292, column: 9)
!4862 = !DILocation(line: 0, scope: !4861)
!4863 = !DILocation(line: 298, column: 1, scope: !4850)
!4864 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !293, file: !293, line: 300, type: !4851, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4865)
!4865 = !{!4866, !4867}
!4866 = !DILocalVariable(name: "u_port", arg: 1, scope: !4864, file: !293, line: 300, type: !4586)
!4867 = !DILocalVariable(name: "func", arg: 2, scope: !4864, file: !293, line: 300, type: !754)
!4868 = !DILocation(line: 0, scope: !4864)
!4869 = !DILocation(line: 302, column: 9, scope: !4864)
!4870 = !DILocation(line: 306, column: 5, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !293, line: 304, column: 38)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !293, line: 304, column: 16)
!4873 = distinct !DILexicalBlock(scope: !4864, file: !293, line: 302, column: 9)
!4874 = !DILocation(line: 0, scope: !4873)
!4875 = !DILocation(line: 308, column: 1, scope: !4864)
!4876 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !293, file: !293, line: 310, type: !4640, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4877)
!4877 = !{!4878, !4879, !4880, !4881}
!4878 = !DILocalVariable(name: "u_port", arg: 1, scope: !4876, file: !293, line: 310, type: !4586)
!4879 = !DILocalVariable(name: "base", scope: !4876, file: !293, line: 312, type: !30)
!4880 = !DILocalVariable(name: "EFR", scope: !4876, file: !293, line: 313, type: !864)
!4881 = !DILocalVariable(name: "LCR", scope: !4876, file: !293, line: 313, type: !864)
!4882 = !DILocation(line: 0, scope: !4876)
!4883 = !DILocation(line: 312, column: 25, scope: !4876)
!4884 = !DILocation(line: 315, column: 11, scope: !4876)
!4885 = !DILocation(line: 317, column: 33, scope: !4876)
!4886 = !DILocation(line: 318, column: 11, scope: !4876)
!4887 = !DILocation(line: 320, column: 35, scope: !4876)
!4888 = !DILocation(line: 320, column: 33, scope: !4876)
!4889 = !DILocation(line: 322, column: 5, scope: !4876)
!4890 = !DILocation(line: 322, column: 39, scope: !4876)
!4891 = !DILocation(line: 324, column: 33, scope: !4876)
!4892 = !DILocation(line: 325, column: 5, scope: !4876)
!4893 = !DILocation(line: 325, column: 33, scope: !4876)
!4894 = !DILocation(line: 327, column: 35, scope: !4876)
!4895 = !DILocation(line: 327, column: 33, scope: !4876)
!4896 = !DILocation(line: 328, column: 1, scope: !4876)
!4897 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !293, file: !293, line: 330, type: !4898, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4900)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{null, !4586, !54, !54, !54}
!4900 = !{!4901, !4902, !4903, !4904, !4905, !4906, !4907}
!4901 = !DILocalVariable(name: "u_port", arg: 1, scope: !4897, file: !293, line: 330, type: !4586)
!4902 = !DILocalVariable(name: "xon", arg: 2, scope: !4897, file: !293, line: 330, type: !54)
!4903 = !DILocalVariable(name: "xoff", arg: 3, scope: !4897, file: !293, line: 330, type: !54)
!4904 = !DILocalVariable(name: "escape_character", arg: 4, scope: !4897, file: !293, line: 330, type: !54)
!4905 = !DILocalVariable(name: "base", scope: !4897, file: !293, line: 332, type: !30)
!4906 = !DILocalVariable(name: "EFR", scope: !4897, file: !293, line: 333, type: !864)
!4907 = !DILocalVariable(name: "LCR", scope: !4897, file: !293, line: 333, type: !864)
!4908 = !DILocation(line: 0, scope: !4897)
!4909 = !DILocation(line: 332, column: 25, scope: !4897)
!4910 = !DILocation(line: 335, column: 11, scope: !4897)
!4911 = !DILocation(line: 337, column: 33, scope: !4897)
!4912 = !DILocation(line: 338, column: 36, scope: !4897)
!4913 = !DILocation(line: 338, column: 5, scope: !4897)
!4914 = !DILocation(line: 338, column: 34, scope: !4897)
!4915 = !DILocation(line: 339, column: 5, scope: !4897)
!4916 = !DILocation(line: 339, column: 34, scope: !4897)
!4917 = !DILocation(line: 340, column: 37, scope: !4897)
!4918 = !DILocation(line: 340, column: 5, scope: !4897)
!4919 = !DILocation(line: 340, column: 35, scope: !4897)
!4920 = !DILocation(line: 341, column: 5, scope: !4897)
!4921 = !DILocation(line: 341, column: 35, scope: !4897)
!4922 = !DILocation(line: 343, column: 11, scope: !4897)
!4923 = !DILocation(line: 345, column: 35, scope: !4897)
!4924 = !DILocation(line: 345, column: 33, scope: !4897)
!4925 = !DILocation(line: 347, column: 35, scope: !4897)
!4926 = !DILocation(line: 347, column: 33, scope: !4897)
!4927 = !DILocation(line: 349, column: 43, scope: !4897)
!4928 = !DILocation(line: 349, column: 5, scope: !4897)
!4929 = !DILocation(line: 349, column: 41, scope: !4897)
!4930 = !DILocation(line: 350, column: 5, scope: !4897)
!4931 = !DILocation(line: 350, column: 39, scope: !4897)
!4932 = !DILocation(line: 351, column: 1, scope: !4897)
!4933 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !293, file: !293, line: 353, type: !4640, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4934)
!4934 = !{!4935, !4936, !4937}
!4935 = !DILocalVariable(name: "u_port", arg: 1, scope: !4933, file: !293, line: 353, type: !4586)
!4936 = !DILocalVariable(name: "base", scope: !4933, file: !293, line: 355, type: !30)
!4937 = !DILocalVariable(name: "LCR", scope: !4933, file: !293, line: 356, type: !864)
!4938 = !DILocation(line: 0, scope: !4933)
!4939 = !DILocation(line: 355, column: 25, scope: !4933)
!4940 = !DILocation(line: 358, column: 11, scope: !4933)
!4941 = !DILocation(line: 360, column: 33, scope: !4933)
!4942 = !DILocation(line: 362, column: 5, scope: !4933)
!4943 = !DILocation(line: 362, column: 33, scope: !4933)
!4944 = !DILocation(line: 364, column: 33, scope: !4933)
!4945 = !DILocation(line: 366, column: 35, scope: !4933)
!4946 = !DILocation(line: 366, column: 33, scope: !4933)
!4947 = !DILocation(line: 367, column: 1, scope: !4933)
!4948 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !293, file: !293, line: 370, type: !4640, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4949)
!4949 = !{!4950, !4951}
!4950 = !DILocalVariable(name: "u_port", arg: 1, scope: !4948, file: !293, line: 370, type: !4586)
!4951 = !DILocalVariable(name: "base", scope: !4948, file: !293, line: 372, type: !30)
!4952 = !DILocation(line: 0, scope: !4948)
!4953 = !DILocation(line: 372, column: 25, scope: !4948)
!4954 = !DILocation(line: 374, column: 5, scope: !4948)
!4955 = !DILocation(line: 374, column: 38, scope: !4948)
!4956 = !DILocation(line: 375, column: 1, scope: !4948)
!4957 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !293, file: !293, line: 377, type: !4640, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4958)
!4958 = !{!4959, !4960, !4961, !4962}
!4959 = !DILocalVariable(name: "u_port", arg: 1, scope: !4957, file: !293, line: 377, type: !4586)
!4960 = !DILocalVariable(name: "base", scope: !4957, file: !293, line: 379, type: !30)
!4961 = !DILocalVariable(name: "IER", scope: !4957, file: !293, line: 380, type: !864)
!4962 = !DILocalVariable(name: "LCR", scope: !4957, file: !293, line: 380, type: !864)
!4963 = !DILocation(line: 0, scope: !4957)
!4964 = !DILocation(line: 379, column: 25, scope: !4957)
!4965 = !DILocation(line: 382, column: 11, scope: !4957)
!4966 = !DILocation(line: 383, column: 33, scope: !4957)
!4967 = !DILocation(line: 385, column: 11, scope: !4957)
!4968 = !DILocation(line: 387, column: 35, scope: !4957)
!4969 = !DILocation(line: 387, column: 33, scope: !4957)
!4970 = !DILocation(line: 389, column: 35, scope: !4957)
!4971 = !DILocation(line: 389, column: 33, scope: !4957)
!4972 = !DILocation(line: 391, column: 5, scope: !4957)
!4973 = !DILocation(line: 391, column: 38, scope: !4957)
!4974 = !DILocation(line: 392, column: 1, scope: !4957)
!4975 = distinct !DISubprogram(name: "uart_mask_send_interrupt", scope: !293, file: !293, line: 394, type: !4640, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4976)
!4976 = !{!4977, !4978, !4979, !4980}
!4977 = !DILocalVariable(name: "u_port", arg: 1, scope: !4975, file: !293, line: 394, type: !4586)
!4978 = !DILocalVariable(name: "base", scope: !4975, file: !293, line: 396, type: !30)
!4979 = !DILocalVariable(name: "IER", scope: !4975, file: !293, line: 397, type: !864)
!4980 = !DILocalVariable(name: "LCR", scope: !4975, file: !293, line: 397, type: !864)
!4981 = !DILocation(line: 0, scope: !4975)
!4982 = !DILocation(line: 396, column: 25, scope: !4975)
!4983 = !DILocation(line: 399, column: 11, scope: !4975)
!4984 = !DILocation(line: 400, column: 33, scope: !4975)
!4985 = !DILocation(line: 402, column: 11, scope: !4975)
!4986 = !DILocation(line: 403, column: 9, scope: !4975)
!4987 = !DILocation(line: 404, column: 33, scope: !4975)
!4988 = !DILocation(line: 406, column: 35, scope: !4975)
!4989 = !DILocation(line: 406, column: 33, scope: !4975)
!4990 = !DILocation(line: 408, column: 5, scope: !4975)
!4991 = !DILocation(line: 408, column: 38, scope: !4975)
!4992 = !DILocation(line: 409, column: 1, scope: !4975)
!4993 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !293, file: !293, line: 411, type: !600, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4994)
!4994 = !{!4995, !4996, !4997, !4998}
!4995 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4993, file: !293, line: 411, type: !339)
!4996 = !DILocalVariable(name: "u_port", scope: !4993, file: !293, line: 413, type: !4586)
!4997 = !DILocalVariable(name: "base", scope: !4993, file: !293, line: 414, type: !30)
!4998 = !DILocalVariable(name: "IIR", scope: !4993, file: !293, line: 415, type: !864)
!4999 = !DILocation(line: 0, scope: !4993)
!5000 = !DILocation(line: 417, column: 20, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4993, file: !293, line: 417, column: 9)
!5002 = !DILocation(line: 425, column: 11, scope: !4993)
!5003 = !DILocation(line: 426, column: 17, scope: !4993)
!5004 = !DILocation(line: 426, column: 5, scope: !4993)
!5005 = !DILocation(line: 428, column: 13, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4993, file: !293, line: 426, column: 25)
!5007 = !DILocation(line: 429, column: 13, scope: !5006)
!5008 = !DILocation(line: 433, column: 1, scope: !4993)
!5009 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !293, file: !293, line: 436, type: !4640, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5010)
!5010 = !{!5011, !5012}
!5011 = !DILocalVariable(name: "u_port", arg: 1, scope: !5009, file: !293, line: 436, type: !4586)
!5012 = !DILocalVariable(name: "base", scope: !5009, file: !293, line: 438, type: !30)
!5013 = !DILocation(line: 0, scope: !5009)
!5014 = !DILocation(line: 438, column: 25, scope: !5009)
!5015 = !DILocation(line: 440, column: 5, scope: !5009)
!5016 = !DILocation(line: 440, column: 33, scope: !5009)
!5017 = !DILocation(line: 441, column: 5, scope: !5009)
!5018 = !DILocation(line: 441, column: 33, scope: !5009)
!5019 = !DILocation(line: 442, column: 5, scope: !5009)
!5020 = !DILocation(line: 442, column: 34, scope: !5009)
!5021 = !DILocation(line: 443, column: 5, scope: !5009)
!5022 = !DILocation(line: 443, column: 35, scope: !5009)
!5023 = !DILocation(line: 445, column: 33, scope: !5009)
!5024 = !DILocation(line: 446, column: 5, scope: !5009)
!5025 = !DILocation(line: 446, column: 33, scope: !5009)
!5026 = !DILocation(line: 447, column: 5, scope: !5009)
!5027 = !DILocation(line: 447, column: 33, scope: !5009)
!5028 = !DILocation(line: 449, column: 33, scope: !5009)
!5029 = !DILocation(line: 450, column: 33, scope: !5009)
!5030 = !DILocation(line: 451, column: 33, scope: !5009)
!5031 = !DILocation(line: 453, column: 33, scope: !5009)
!5032 = !DILocation(line: 454, column: 33, scope: !5009)
!5033 = !DILocation(line: 455, column: 33, scope: !5009)
!5034 = !DILocation(line: 457, column: 33, scope: !5009)
!5035 = !DILocation(line: 458, column: 5, scope: !5009)
!5036 = !DILocation(line: 458, column: 33, scope: !5009)
!5037 = !DILocation(line: 459, column: 5, scope: !5009)
!5038 = !DILocation(line: 459, column: 39, scope: !5009)
!5039 = !DILocation(line: 460, column: 5, scope: !5009)
!5040 = !DILocation(line: 460, column: 40, scope: !5009)
!5041 = !DILocation(line: 461, column: 5, scope: !5009)
!5042 = !DILocation(line: 461, column: 42, scope: !5009)
!5043 = !DILocation(line: 462, column: 5, scope: !5009)
!5044 = !DILocation(line: 462, column: 42, scope: !5009)
!5045 = !DILocation(line: 463, column: 5, scope: !5009)
!5046 = !DILocation(line: 463, column: 35, scope: !5009)
!5047 = !DILocation(line: 464, column: 5, scope: !5009)
!5048 = !DILocation(line: 464, column: 41, scope: !5009)
!5049 = !DILocation(line: 465, column: 5, scope: !5009)
!5050 = !DILocation(line: 465, column: 39, scope: !5009)
!5051 = !DILocation(line: 466, column: 5, scope: !5009)
!5052 = !DILocation(line: 466, column: 38, scope: !5009)
!5053 = !DILocation(line: 467, column: 5, scope: !5009)
!5054 = !DILocation(line: 467, column: 42, scope: !5009)
!5055 = !DILocation(line: 468, column: 5, scope: !5009)
!5056 = !DILocation(line: 468, column: 45, scope: !5009)
!5057 = !DILocation(line: 469, column: 5, scope: !5009)
!5058 = !DILocation(line: 469, column: 39, scope: !5009)
!5059 = !DILocation(line: 470, column: 5, scope: !5009)
!5060 = !DILocation(line: 470, column: 39, scope: !5009)
!5061 = !DILocation(line: 471, column: 5, scope: !5009)
!5062 = !DILocation(line: 471, column: 42, scope: !5009)
!5063 = !DILocation(line: 472, column: 1, scope: !5009)
!5064 = distinct !DISubprogram(name: "uart_query_empty", scope: !293, file: !293, line: 474, type: !4640, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5065)
!5065 = !{!5066, !5067}
!5066 = !DILocalVariable(name: "u_port", arg: 1, scope: !5064, file: !293, line: 474, type: !4586)
!5067 = !DILocalVariable(name: "base", scope: !5064, file: !293, line: 476, type: !30)
!5068 = !DILocation(line: 0, scope: !5064)
!5069 = !DILocation(line: 476, column: 25, scope: !5064)
!5070 = !DILocation(line: 478, column: 5, scope: !5064)
!5071 = !DILocation(line: 478, column: 14, scope: !5064)
!5072 = !DILocation(line: 478, column: 42, scope: !5064)
!5073 = !DILocation(line: 478, column: 12, scope: !5064)
!5074 = distinct !{!5074, !5070, !5075}
!5075 = !DILocation(line: 478, column: 50, scope: !5064)
!5076 = !DILocation(line: 479, column: 1, scope: !5064)
!5077 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !343, file: !343, line: 129, type: !5078, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5080)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{null, !331, !7, !331, null}
!5080 = !{!5081, !5082, !5083, !5084}
!5081 = !DILocalVariable(name: "func", arg: 1, scope: !5077, file: !343, line: 129, type: !331)
!5082 = !DILocalVariable(name: "line", arg: 2, scope: !5077, file: !343, line: 129, type: !7)
!5083 = !DILocalVariable(name: "message", arg: 3, scope: !5077, file: !343, line: 129, type: !331)
!5084 = !DILocalVariable(name: "ap", scope: !5077, file: !343, line: 131, type: !5085)
!5085 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5086, line: 46, baseType: !5087)
!5086 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!5087 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5088, line: 32, baseType: !5089)
!5088 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!5089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !343, baseType: !5090)
!5090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5091)
!5091 = !{!5092}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5090, file: !343, line: 131, baseType: !51, size: 32)
!5093 = !DILocation(line: 0, scope: !5077)
!5094 = !DILocation(line: 131, column: 5, scope: !5077)
!5095 = !DILocation(line: 131, column: 13, scope: !5077)
!5096 = !DILocation(line: 132, column: 5, scope: !5077)
!5097 = !DILocation(line: 133, column: 5, scope: !5077)
!5098 = !DILocation(line: 134, column: 5, scope: !5077)
!5099 = !DILocation(line: 135, column: 1, scope: !5077)
!5100 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !343, file: !343, line: 138, type: !5078, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5101)
!5101 = !{!5102, !5103, !5104, !5105}
!5102 = !DILocalVariable(name: "func", arg: 1, scope: !5100, file: !343, line: 138, type: !331)
!5103 = !DILocalVariable(name: "line", arg: 2, scope: !5100, file: !343, line: 138, type: !7)
!5104 = !DILocalVariable(name: "message", arg: 3, scope: !5100, file: !343, line: 138, type: !331)
!5105 = !DILocalVariable(name: "ap", scope: !5100, file: !343, line: 140, type: !5085)
!5106 = !DILocation(line: 0, scope: !5100)
!5107 = !DILocation(line: 140, column: 5, scope: !5100)
!5108 = !DILocation(line: 140, column: 13, scope: !5100)
!5109 = !DILocation(line: 141, column: 5, scope: !5100)
!5110 = !DILocation(line: 142, column: 5, scope: !5100)
!5111 = !DILocation(line: 143, column: 5, scope: !5100)
!5112 = !DILocation(line: 144, column: 1, scope: !5100)
!5113 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !343, file: !343, line: 146, type: !5078, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5114)
!5114 = !{!5115, !5116, !5117, !5118}
!5115 = !DILocalVariable(name: "func", arg: 1, scope: !5113, file: !343, line: 146, type: !331)
!5116 = !DILocalVariable(name: "line", arg: 2, scope: !5113, file: !343, line: 146, type: !7)
!5117 = !DILocalVariable(name: "message", arg: 3, scope: !5113, file: !343, line: 146, type: !331)
!5118 = !DILocalVariable(name: "ap", scope: !5113, file: !343, line: 148, type: !5085)
!5119 = !DILocation(line: 0, scope: !5113)
!5120 = !DILocation(line: 148, column: 5, scope: !5113)
!5121 = !DILocation(line: 148, column: 13, scope: !5113)
!5122 = !DILocation(line: 149, column: 5, scope: !5113)
!5123 = !DILocation(line: 150, column: 5, scope: !5113)
!5124 = !DILocation(line: 151, column: 5, scope: !5113)
!5125 = !DILocation(line: 152, column: 1, scope: !5113)
!5126 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !343, file: !343, line: 154, type: !5078, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5127)
!5127 = !{!5128, !5129, !5130, !5131}
!5128 = !DILocalVariable(name: "func", arg: 1, scope: !5126, file: !343, line: 154, type: !331)
!5129 = !DILocalVariable(name: "line", arg: 2, scope: !5126, file: !343, line: 154, type: !7)
!5130 = !DILocalVariable(name: "message", arg: 3, scope: !5126, file: !343, line: 154, type: !331)
!5131 = !DILocalVariable(name: "ap", scope: !5126, file: !343, line: 156, type: !5085)
!5132 = !DILocation(line: 0, scope: !5126)
!5133 = !DILocation(line: 156, column: 5, scope: !5126)
!5134 = !DILocation(line: 156, column: 13, scope: !5126)
!5135 = !DILocation(line: 157, column: 5, scope: !5126)
!5136 = !DILocation(line: 158, column: 5, scope: !5126)
!5137 = !DILocation(line: 159, column: 5, scope: !5126)
!5138 = !DILocation(line: 160, column: 1, scope: !5126)
!5139 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !343, file: !343, line: 162, type: !5140, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5142)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !331, !7, !331, !375, !7, null}
!5142 = !{!5143, !5144, !5145, !5146, !5147, !5148}
!5143 = !DILocalVariable(name: "func", arg: 1, scope: !5139, file: !343, line: 162, type: !331)
!5144 = !DILocalVariable(name: "line", arg: 2, scope: !5139, file: !343, line: 162, type: !7)
!5145 = !DILocalVariable(name: "message", arg: 3, scope: !5139, file: !343, line: 162, type: !331)
!5146 = !DILocalVariable(name: "data", arg: 4, scope: !5139, file: !343, line: 162, type: !375)
!5147 = !DILocalVariable(name: "length", arg: 5, scope: !5139, file: !343, line: 162, type: !7)
!5148 = !DILocalVariable(name: "ap", scope: !5139, file: !343, line: 164, type: !5085)
!5149 = !DILocation(line: 0, scope: !5139)
!5150 = !DILocation(line: 164, column: 5, scope: !5139)
!5151 = !DILocation(line: 164, column: 13, scope: !5139)
!5152 = !DILocation(line: 165, column: 5, scope: !5139)
!5153 = !DILocation(line: 166, column: 5, scope: !5139)
!5154 = !DILocation(line: 167, column: 5, scope: !5139)
!5155 = !DILocation(line: 168, column: 1, scope: !5139)
!5156 = distinct !DISubprogram(name: "hal_cache_init", scope: !380, file: !380, line: 53, type: !5157, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5160)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!5159}
!5159 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !383, line: 172, baseType: !382)
!5160 = !{!5161, !5162}
!5161 = !DILocalVariable(name: "region", scope: !5156, file: !380, line: 55, type: !1973)
!5162 = !DILocalVariable(name: "irq_flag", scope: !5156, file: !380, line: 56, type: !61)
!5163 = !DILocation(line: 59, column: 16, scope: !5156)
!5164 = !DILocation(line: 0, scope: !5156)
!5165 = !DILocation(line: 62, column: 9, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5156, file: !380, line: 62, column: 9)
!5167 = !DILocation(line: 62, column: 9, scope: !5156)
!5168 = !DILocation(line: 64, column: 9, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5166, file: !380, line: 62, column: 39)
!5170 = !DILocation(line: 66, column: 9, scope: !5169)
!5171 = !DILocation(line: 69, column: 24, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5166, file: !380, line: 67, column: 12)
!5173 = !DILocation(line: 72, column: 9, scope: !5172)
!5174 = !DILocation(line: 77, column: 5, scope: !5156)
!5175 = !DILocation(line: 80, column: 22, scope: !5156)
!5176 = !DILocation(line: 81, column: 28, scope: !5156)
!5177 = !DILocation(line: 84, column: 19, scope: !5156)
!5178 = !DILocation(line: 85, column: 23, scope: !5156)
!5179 = !DILocation(line: 88, column: 5, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5156, file: !380, line: 88, column: 5)
!5181 = !DILocation(line: 90, column: 9, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !380, line: 88, column: 81)
!5183 = distinct !DILexicalBlock(scope: !5180, file: !380, line: 88, column: 5)
!5184 = !DILocation(line: 90, column: 38, scope: !5182)
!5185 = !DILocation(line: 91, column: 9, scope: !5182)
!5186 = !DILocation(line: 91, column: 42, scope: !5182)
!5187 = !DILocation(line: 94, column: 45, scope: !5182)
!5188 = !DILocation(line: 94, column: 47, scope: !5182)
!5189 = !DILocation(line: 95, column: 49, scope: !5182)
!5190 = !DILocation(line: 95, column: 51, scope: !5182)
!5191 = !DILocation(line: 88, column: 77, scope: !5183)
!5192 = !DILocation(line: 88, column: 46, scope: !5183)
!5193 = distinct !{!5193, !5179, !5194}
!5194 = !DILocation(line: 96, column: 5, scope: !5180)
!5195 = !DILocation(line: 99, column: 1, scope: !5156)
!5196 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !380, file: !380, line: 327, type: !5157, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5197)
!5197 = !{!5198}
!5198 = !DILocalVariable(name: "irq_flag", scope: !5196, file: !380, line: 329, type: !61)
!5199 = !DILocation(line: 332, column: 16, scope: !5196)
!5200 = !DILocation(line: 0, scope: !5196)
!5201 = !DILocation(line: 335, column: 21, scope: !5196)
!5202 = !DILocation(line: 336, column: 21, scope: !5196)
!5203 = !DILocation(line: 339, column: 21, scope: !5196)
!5204 = !DILocation(line: 340, column: 21, scope: !5196)
!5205 = !DILocation(line: 434, column: 3, scope: !5206, inlinedAt: !5208)
!5206 = distinct !DISubprogram(name: "__ISB", scope: !5207, file: !5207, line: 432, type: !154, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !2004)
!5207 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!5208 = distinct !DILocation(line: 343, column: 5, scope: !5196)
!5209 = !{i64 296977}
!5210 = !DILocation(line: 346, column: 5, scope: !5196)
!5211 = !DILocation(line: 348, column: 5, scope: !5196)
!5212 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !380, file: !380, line: 101, type: !5157, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5213)
!5213 = !{!5214}
!5214 = !DILocalVariable(name: "region", scope: !5212, file: !380, line: 103, type: !1973)
!5215 = !DILocation(line: 107, column: 5, scope: !5212)
!5216 = !DILocation(line: 110, column: 22, scope: !5212)
!5217 = !DILocation(line: 111, column: 28, scope: !5212)
!5218 = !DILocation(line: 114, column: 19, scope: !5212)
!5219 = !DILocation(line: 115, column: 23, scope: !5212)
!5220 = !DILocation(line: 0, scope: !5212)
!5221 = !DILocation(line: 118, column: 5, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5212, file: !380, line: 118, column: 5)
!5223 = !DILocation(line: 120, column: 9, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !380, line: 118, column: 81)
!5225 = distinct !DILexicalBlock(scope: !5222, file: !380, line: 118, column: 5)
!5226 = !DILocation(line: 120, column: 38, scope: !5224)
!5227 = !DILocation(line: 121, column: 9, scope: !5224)
!5228 = !DILocation(line: 121, column: 42, scope: !5224)
!5229 = !DILocation(line: 124, column: 45, scope: !5224)
!5230 = !DILocation(line: 124, column: 47, scope: !5224)
!5231 = !DILocation(line: 125, column: 49, scope: !5224)
!5232 = !DILocation(line: 125, column: 51, scope: !5224)
!5233 = !DILocation(line: 118, column: 77, scope: !5225)
!5234 = !DILocation(line: 118, column: 46, scope: !5225)
!5235 = distinct !{!5235, !5221, !5236}
!5236 = !DILocation(line: 126, column: 5, scope: !5222)
!5237 = !DILocation(line: 129, column: 20, scope: !5212)
!5238 = !DILocation(line: 131, column: 5, scope: !5212)
!5239 = distinct !DISubprogram(name: "hal_cache_enable", scope: !380, file: !380, line: 134, type: !5157, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !2004)
!5240 = !DILocation(line: 137, column: 45, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5239, file: !380, line: 137, column: 9)
!5242 = !DILocation(line: 137, column: 28, scope: !5241)
!5243 = !DILocation(line: 137, column: 9, scope: !5239)
!5244 = !DILocation(line: 142, column: 22, scope: !5239)
!5245 = !DILocation(line: 145, column: 28, scope: !5239)
!5246 = !DILocation(line: 145, column: 19, scope: !5239)
!5247 = !DILocation(line: 147, column: 5, scope: !5239)
!5248 = !DILocation(line: 0, scope: !5239)
!5249 = !DILocation(line: 148, column: 1, scope: !5239)
!5250 = distinct !DISubprogram(name: "hal_cache_disable", scope: !380, file: !380, line: 150, type: !5157, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5251)
!5251 = !{!5252}
!5252 = !DILocalVariable(name: "irq_flag", scope: !5250, file: !380, line: 152, type: !61)
!5253 = !DILocation(line: 155, column: 16, scope: !5250)
!5254 = !DILocation(line: 0, scope: !5250)
!5255 = !DILocation(line: 158, column: 16, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5250, file: !380, line: 158, column: 9)
!5257 = !DILocation(line: 158, column: 26, scope: !5256)
!5258 = !DILocation(line: 158, column: 9, scope: !5250)
!5259 = !DILocation(line: 160, column: 9, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !380, line: 158, column: 49)
!5261 = !DILocation(line: 161, column: 5, scope: !5260)
!5262 = !DILocation(line: 164, column: 22, scope: !5250)
!5263 = !DILocation(line: 167, column: 28, scope: !5250)
!5264 = !DILocation(line: 167, column: 19, scope: !5250)
!5265 = !DILocation(line: 170, column: 5, scope: !5250)
!5266 = !DILocation(line: 172, column: 5, scope: !5250)
!5267 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !380, file: !380, line: 175, type: !5268, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5270)
!5268 = !DISubroutineType(types: !5269)
!5269 = !{!5159, !1973}
!5270 = !{!5271}
!5271 = !DILocalVariable(name: "region", arg: 1, scope: !5267, file: !380, line: 175, type: !1973)
!5272 = !DILocation(line: 0, scope: !5267)
!5273 = !DILocation(line: 178, column: 16, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5267, file: !380, line: 178, column: 9)
!5275 = !DILocation(line: 178, column: 9, scope: !5267)
!5276 = !DILocation(line: 183, column: 9, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5267, file: !380, line: 183, column: 9)
!5278 = !DILocation(line: 183, column: 38, scope: !5277)
!5279 = !DILocation(line: 183, column: 9, scope: !5267)
!5280 = !DILocation(line: 184, column: 38, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5277, file: !380, line: 183, column: 62)
!5282 = !DILocation(line: 184, column: 32, scope: !5281)
!5283 = !DILocation(line: 190, column: 32, scope: !5267)
!5284 = !DILocation(line: 190, column: 23, scope: !5267)
!5285 = !DILocation(line: 192, column: 5, scope: !5267)
!5286 = !DILocation(line: 193, column: 1, scope: !5267)
!5287 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !380, file: !380, line: 195, type: !5268, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5288)
!5288 = !{!5289}
!5289 = !DILocalVariable(name: "region", arg: 1, scope: !5287, file: !380, line: 195, type: !1973)
!5290 = !DILocation(line: 0, scope: !5287)
!5291 = !DILocation(line: 198, column: 16, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5287, file: !380, line: 198, column: 9)
!5293 = !DILocation(line: 198, column: 9, scope: !5287)
!5294 = !DILocation(line: 203, column: 35, scope: !5287)
!5295 = !DILocation(line: 203, column: 31, scope: !5287)
!5296 = !DILocation(line: 203, column: 28, scope: !5287)
!5297 = !DILocation(line: 206, column: 32, scope: !5287)
!5298 = !DILocation(line: 206, column: 23, scope: !5287)
!5299 = !DILocation(line: 209, column: 41, scope: !5287)
!5300 = !DILocation(line: 209, column: 43, scope: !5287)
!5301 = !DILocation(line: 210, column: 45, scope: !5287)
!5302 = !DILocation(line: 210, column: 47, scope: !5287)
!5303 = !DILocation(line: 212, column: 5, scope: !5287)
!5304 = !DILocation(line: 213, column: 1, scope: !5287)
!5305 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !380, file: !380, line: 215, type: !5306, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5309)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!5159, !5308}
!5308 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !383, line: 182, baseType: !412)
!5309 = !{!5310}
!5310 = !DILocalVariable(name: "cache_size", arg: 1, scope: !5305, file: !380, line: 215, type: !5308)
!5311 = !DILocation(line: 0, scope: !5305)
!5312 = !DILocation(line: 218, column: 20, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5305, file: !380, line: 218, column: 9)
!5314 = !DILocation(line: 218, column: 9, scope: !5305)
!5315 = !DILocation(line: 223, column: 22, scope: !5305)
!5316 = !DILocation(line: 224, column: 37, scope: !5305)
!5317 = !DILocation(line: 224, column: 22, scope: !5305)
!5318 = !DILocation(line: 227, column: 20, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5305, file: !380, line: 227, column: 9)
!5320 = !DILocation(line: 227, column: 9, scope: !5305)
!5321 = !DILocation(line: 228, column: 26, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5319, file: !380, line: 227, column: 43)
!5323 = !DILocation(line: 229, column: 5, scope: !5322)
!5324 = !DILocation(line: 232, column: 28, scope: !5305)
!5325 = !DILocation(line: 232, column: 19, scope: !5305)
!5326 = !DILocation(line: 234, column: 5, scope: !5305)
!5327 = !DILocation(line: 235, column: 1, scope: !5305)
!5328 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !380, file: !380, line: 237, type: !5329, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5338)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!5159, !1973, !5331}
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 32)
!5332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5333)
!5333 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !383, line: 222, baseType: !5334)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !383, line: 219, size: 64, elements: !5335)
!5335 = !{!5336, !5337}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !5334, file: !383, line: 220, baseType: !61, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !5334, file: !383, line: 221, baseType: !61, size: 32, offset: 32)
!5338 = !{!5339, !5340}
!5339 = !DILocalVariable(name: "region", arg: 1, scope: !5328, file: !380, line: 237, type: !1973)
!5340 = !DILocalVariable(name: "region_config", arg: 2, scope: !5328, file: !380, line: 237, type: !5331)
!5341 = !DILocation(line: 0, scope: !5328)
!5342 = !DILocation(line: 240, column: 16, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5328, file: !380, line: 240, column: 9)
!5344 = !DILocation(line: 240, column: 9, scope: !5328)
!5345 = !DILocation(line: 245, column: 23, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5328, file: !380, line: 245, column: 9)
!5347 = !DILocation(line: 245, column: 9, scope: !5328)
!5348 = !DILocation(line: 250, column: 24, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5328, file: !380, line: 250, column: 9)
!5350 = !DILocation(line: 250, column: 45, scope: !5349)
!5351 = !DILocation(line: 250, column: 9, scope: !5328)
!5352 = !DILocation(line: 251, column: 9, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5349, file: !380, line: 250, column: 81)
!5354 = !DILocation(line: 256, column: 24, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5328, file: !380, line: 256, column: 9)
!5356 = !DILocation(line: 256, column: 42, scope: !5355)
!5357 = !DILocation(line: 256, column: 9, scope: !5328)
!5358 = !DILocation(line: 257, column: 9, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5355, file: !380, line: 256, column: 78)
!5360 = !DILocation(line: 262, column: 5, scope: !5328)
!5361 = !DILocation(line: 262, column: 34, scope: !5328)
!5362 = !DILocation(line: 263, column: 55, scope: !5328)
!5363 = !DILocation(line: 263, column: 93, scope: !5328)
!5364 = !DILocation(line: 263, column: 76, scope: !5328)
!5365 = !DILocation(line: 263, column: 5, scope: !5328)
!5366 = !DILocation(line: 263, column: 38, scope: !5328)
!5367 = !DILocation(line: 266, column: 34, scope: !5328)
!5368 = !DILocation(line: 269, column: 45, scope: !5328)
!5369 = !DILocation(line: 269, column: 41, scope: !5328)
!5370 = !DILocation(line: 269, column: 43, scope: !5328)
!5371 = !DILocation(line: 270, column: 49, scope: !5328)
!5372 = !DILocation(line: 270, column: 45, scope: !5328)
!5373 = !DILocation(line: 270, column: 47, scope: !5328)
!5374 = !DILocation(line: 272, column: 5, scope: !5328)
!5375 = !DILocation(line: 273, column: 1, scope: !5328)
!5376 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !380, file: !380, line: 275, type: !5377, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5379)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!5159, !61}
!5379 = !{!5380, !5381}
!5380 = !DILocalVariable(name: "address", arg: 1, scope: !5376, file: !380, line: 275, type: !61)
!5381 = !DILocalVariable(name: "irq_flag", scope: !5376, file: !380, line: 277, type: !61)
!5382 = !DILocation(line: 0, scope: !5376)
!5383 = !DILocation(line: 280, column: 17, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5376, file: !380, line: 280, column: 9)
!5385 = !DILocation(line: 280, column: 9, scope: !5376)
!5386 = !DILocation(line: 284, column: 16, scope: !5376)
!5387 = !DILocation(line: 287, column: 32, scope: !5376)
!5388 = !DILocation(line: 287, column: 21, scope: !5376)
!5389 = !DILocation(line: 288, column: 21, scope: !5376)
!5390 = !DILocation(line: 434, column: 3, scope: !5206, inlinedAt: !5391)
!5391 = distinct !DILocation(line: 291, column: 5, scope: !5376)
!5392 = !DILocation(line: 294, column: 5, scope: !5376)
!5393 = !DILocation(line: 296, column: 5, scope: !5376)
!5394 = !DILocation(line: 297, column: 1, scope: !5376)
!5395 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !380, file: !380, line: 299, type: !5396, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5398)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{!5159, !61, !61}
!5398 = !{!5399, !5400, !5401, !5402}
!5399 = !DILocalVariable(name: "address", arg: 1, scope: !5395, file: !380, line: 299, type: !61)
!5400 = !DILocalVariable(name: "length", arg: 2, scope: !5395, file: !380, line: 299, type: !61)
!5401 = !DILocalVariable(name: "irq_flag", scope: !5395, file: !380, line: 301, type: !61)
!5402 = !DILocalVariable(name: "end_address", scope: !5395, file: !380, line: 302, type: !61)
!5403 = !DILocation(line: 0, scope: !5395)
!5404 = !DILocation(line: 302, column: 36, scope: !5395)
!5405 = !DILocation(line: 305, column: 47, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5395, file: !380, line: 305, column: 9)
!5407 = !DILocation(line: 310, column: 16, scope: !5395)
!5408 = !DILocation(line: 313, column: 20, scope: !5395)
!5409 = !DILocation(line: 313, column: 5, scope: !5395)
!5410 = !DILocation(line: 314, column: 9, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5395, file: !380, line: 313, column: 35)
!5412 = !DILocation(line: 315, column: 17, scope: !5411)
!5413 = distinct !{!5413, !5409, !5414}
!5414 = !DILocation(line: 316, column: 5, scope: !5395)
!5415 = !DILocation(line: 434, column: 3, scope: !5206, inlinedAt: !5416)
!5416 = distinct !DILocation(line: 319, column: 5, scope: !5395)
!5417 = !DILocation(line: 322, column: 5, scope: !5395)
!5418 = !DILocation(line: 324, column: 5, scope: !5395)
!5419 = !DILocation(line: 325, column: 1, scope: !5395)
!5420 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !380, file: !380, line: 351, type: !5377, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5421)
!5421 = !{!5422, !5423}
!5422 = !DILocalVariable(name: "address", arg: 1, scope: !5420, file: !380, line: 351, type: !61)
!5423 = !DILocalVariable(name: "irq_flag", scope: !5420, file: !380, line: 353, type: !61)
!5424 = !DILocation(line: 0, scope: !5420)
!5425 = !DILocation(line: 356, column: 17, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5420, file: !380, line: 356, column: 9)
!5427 = !DILocation(line: 356, column: 9, scope: !5420)
!5428 = !DILocation(line: 361, column: 16, scope: !5420)
!5429 = !DILocation(line: 364, column: 32, scope: !5420)
!5430 = !DILocation(line: 364, column: 21, scope: !5420)
!5431 = !DILocation(line: 365, column: 21, scope: !5420)
!5432 = !DILocation(line: 434, column: 3, scope: !5206, inlinedAt: !5433)
!5433 = distinct !DILocation(line: 368, column: 5, scope: !5420)
!5434 = !DILocation(line: 371, column: 5, scope: !5420)
!5435 = !DILocation(line: 373, column: 5, scope: !5420)
!5436 = !DILocation(line: 374, column: 1, scope: !5420)
!5437 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !380, file: !380, line: 376, type: !5396, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5438)
!5438 = !{!5439, !5440, !5441, !5442}
!5439 = !DILocalVariable(name: "address", arg: 1, scope: !5437, file: !380, line: 376, type: !61)
!5440 = !DILocalVariable(name: "length", arg: 2, scope: !5437, file: !380, line: 376, type: !61)
!5441 = !DILocalVariable(name: "irq_flag", scope: !5437, file: !380, line: 378, type: !61)
!5442 = !DILocalVariable(name: "end_address", scope: !5437, file: !380, line: 379, type: !61)
!5443 = !DILocation(line: 0, scope: !5437)
!5444 = !DILocation(line: 379, column: 36, scope: !5437)
!5445 = !DILocation(line: 382, column: 47, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5437, file: !380, line: 382, column: 9)
!5447 = !DILocation(line: 387, column: 16, scope: !5437)
!5448 = !DILocation(line: 390, column: 20, scope: !5437)
!5449 = !DILocation(line: 390, column: 5, scope: !5437)
!5450 = !DILocation(line: 391, column: 9, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5437, file: !380, line: 390, column: 35)
!5452 = !DILocation(line: 392, column: 17, scope: !5451)
!5453 = distinct !{!5453, !5449, !5454}
!5454 = !DILocation(line: 393, column: 5, scope: !5437)
!5455 = !DILocation(line: 434, column: 3, scope: !5206, inlinedAt: !5456)
!5456 = distinct !DILocation(line: 396, column: 5, scope: !5437)
!5457 = !DILocation(line: 399, column: 5, scope: !5437)
!5458 = !DILocation(line: 401, column: 5, scope: !5437)
!5459 = !DILocation(line: 402, column: 1, scope: !5437)
!5460 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !380, file: !380, line: 404, type: !5157, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5461)
!5461 = !{!5462}
!5462 = !DILocalVariable(name: "irq_flag", scope: !5460, file: !380, line: 406, type: !61)
!5463 = !DILocation(line: 409, column: 16, scope: !5460)
!5464 = !DILocation(line: 0, scope: !5460)
!5465 = !DILocation(line: 412, column: 21, scope: !5460)
!5466 = !DILocation(line: 413, column: 21, scope: !5460)
!5467 = !DILocation(line: 434, column: 3, scope: !5206, inlinedAt: !5468)
!5468 = distinct !DILocation(line: 416, column: 5, scope: !5460)
!5469 = !DILocation(line: 419, column: 5, scope: !5460)
!5470 = !DILocation(line: 421, column: 5, scope: !5460)
!5471 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !380, file: !380, line: 424, type: !5472, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5474)
!5472 = !DISubroutineType(types: !5473)
!5473 = !{!69, !61}
!5474 = !{!5475, !5476}
!5475 = !DILocalVariable(name: "address", arg: 1, scope: !5471, file: !380, line: 424, type: !61)
!5476 = !DILocalVariable(name: "region", scope: !5471, file: !380, line: 426, type: !1973)
!5477 = !DILocation(line: 0, scope: !5471)
!5478 = !DILocation(line: 429, column: 18, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5471, file: !380, line: 429, column: 9)
!5480 = !DILocation(line: 429, column: 28, scope: !5479)
!5481 = !DILocation(line: 429, column: 9, scope: !5471)
!5482 = !DILocation(line: 435, column: 20, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !380, line: 435, column: 13)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !380, line: 433, column: 81)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !380, line: 433, column: 5)
!5486 = distinct !DILexicalBlock(scope: !5471, file: !380, line: 433, column: 5)
!5487 = !DILocation(line: 435, column: 41, scope: !5483)
!5488 = !DILocation(line: 435, column: 36, scope: !5483)
!5489 = !DILocation(line: 435, column: 13, scope: !5484)
!5490 = !DILocation(line: 436, column: 30, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !380, line: 436, column: 17)
!5492 = distinct !DILexicalBlock(scope: !5483, file: !380, line: 435, column: 53)
!5493 = !DILocation(line: 436, column: 59, scope: !5491)
!5494 = !DILocation(line: 436, column: 26, scope: !5491)
!5495 = !DILocation(line: 436, column: 85, scope: !5491)
!5496 = !DILocation(line: 436, column: 99, scope: !5491)
!5497 = !DILocation(line: 436, column: 97, scope: !5491)
!5498 = !DILocation(line: 436, column: 17, scope: !5492)
!5499 = !DILocation(line: 433, column: 77, scope: !5485)
!5500 = !DILocation(line: 433, column: 46, scope: !5485)
!5501 = !DILocation(line: 433, column: 5, scope: !5486)
!5502 = distinct !{!5502, !5501, !5503}
!5503 = !DILocation(line: 440, column: 5, scope: !5486)
!5504 = !DILocation(line: 442, column: 1, scope: !5471)
!5505 = distinct !DISubprogram(name: "hal_nvic_init", scope: !516, file: !516, line: 60, type: !5506, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !2004)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!5508}
!5508 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !519, line: 158, baseType: !518)
!5509 = !DILocation(line: 62, column: 5, scope: !5505)
!5510 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !516, file: !516, line: 65, type: !5511, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5513)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!5508, !339}
!5513 = !{!5514, !5515}
!5514 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5510, file: !516, line: 65, type: !339)
!5515 = !DILocalVariable(name: "status", scope: !5510, file: !516, line: 67, type: !5508)
!5516 = !DILocation(line: 0, scope: !5510)
!5517 = !DILocation(line: 69, column: 40, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5510, file: !516, line: 69, column: 9)
!5519 = !DILocation(line: 73, column: 9, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5518, file: !516, line: 72, column: 12)
!5521 = !DILocation(line: 77, column: 5, scope: !5510)
!5522 = !DILocation(line: 78, column: 1, scope: !5510)
!5523 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !531, file: !531, line: 1494, type: !5524, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5526)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{null, !140}
!5526 = !{!5527}
!5527 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5523, file: !531, line: 1494, type: !140)
!5528 = !DILocation(line: 0, scope: !5523)
!5529 = !DILocation(line: 1497, column: 91, scope: !5523)
!5530 = !DILocation(line: 1497, column: 61, scope: !5523)
!5531 = !DILocation(line: 1497, column: 40, scope: !5523)
!5532 = !DILocation(line: 1497, column: 3, scope: !5523)
!5533 = !DILocation(line: 1497, column: 46, scope: !5523)
!5534 = !DILocation(line: 1498, column: 1, scope: !5523)
!5535 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !516, file: !516, line: 80, type: !5511, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5536)
!5536 = !{!5537, !5538}
!5537 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5535, file: !516, line: 80, type: !339)
!5538 = !DILocalVariable(name: "status", scope: !5535, file: !516, line: 82, type: !5508)
!5539 = !DILocation(line: 0, scope: !5535)
!5540 = !DILocation(line: 84, column: 40, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5535, file: !516, line: 84, column: 9)
!5542 = !DILocation(line: 88, column: 9, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5541, file: !516, line: 87, column: 12)
!5544 = !DILocation(line: 92, column: 5, scope: !5535)
!5545 = !DILocation(line: 93, column: 1, scope: !5535)
!5546 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !531, file: !531, line: 1507, type: !5524, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5547)
!5547 = !{!5548}
!5548 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5546, file: !531, line: 1507, type: !140)
!5549 = !DILocation(line: 0, scope: !5546)
!5550 = !DILocation(line: 1509, column: 65, scope: !5546)
!5551 = !DILocation(line: 1509, column: 44, scope: !5546)
!5552 = !DILocation(line: 1509, column: 32, scope: !5546)
!5553 = !DILocation(line: 1509, column: 3, scope: !5546)
!5554 = !DILocation(line: 1509, column: 39, scope: !5546)
!5555 = !DILocation(line: 1510, column: 1, scope: !5546)
!5556 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !516, file: !516, line: 95, type: !5557, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5559)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{!61, !339}
!5559 = !{!5560, !5561}
!5560 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5556, file: !516, line: 95, type: !339)
!5561 = !DILocalVariable(name: "ret", scope: !5556, file: !516, line: 97, type: !61)
!5562 = !DILocation(line: 0, scope: !5556)
!5563 = !DILocation(line: 99, column: 40, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5556, file: !516, line: 99, column: 9)
!5565 = !DILocation(line: 102, column: 15, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5564, file: !516, line: 101, column: 12)
!5567 = !DILocation(line: 105, column: 5, scope: !5556)
!5568 = !DILocation(line: 106, column: 1, scope: !5556)
!5569 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !531, file: !531, line: 1523, type: !5570, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5572)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!61, !140}
!5572 = !{!5573}
!5573 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5569, file: !531, line: 1523, type: !140)
!5574 = !DILocation(line: 0, scope: !5569)
!5575 = !DILocation(line: 1525, column: 51, scope: !5569)
!5576 = !DILocation(line: 1525, column: 23, scope: !5569)
!5577 = !DILocation(line: 1525, column: 83, scope: !5569)
!5578 = !DILocation(line: 1525, column: 22, scope: !5569)
!5579 = !DILocation(line: 1525, column: 3, scope: !5569)
!5580 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !516, file: !516, line: 108, type: !5511, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5581)
!5581 = !{!5582, !5583}
!5582 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5580, file: !516, line: 108, type: !339)
!5583 = !DILocalVariable(name: "status", scope: !5580, file: !516, line: 110, type: !5508)
!5584 = !DILocation(line: 0, scope: !5580)
!5585 = !DILocation(line: 112, column: 40, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5580, file: !516, line: 112, column: 9)
!5587 = !DILocation(line: 116, column: 9, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5586, file: !516, line: 115, column: 12)
!5589 = !DILocation(line: 120, column: 5, scope: !5580)
!5590 = !DILocation(line: 121, column: 1, scope: !5580)
!5591 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !531, file: !531, line: 1535, type: !5524, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5592)
!5592 = !{!5593}
!5593 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5591, file: !531, line: 1535, type: !140)
!5594 = !DILocation(line: 0, scope: !5591)
!5595 = !DILocation(line: 1537, column: 65, scope: !5591)
!5596 = !DILocation(line: 1537, column: 44, scope: !5591)
!5597 = !DILocation(line: 1537, column: 32, scope: !5591)
!5598 = !DILocation(line: 1537, column: 3, scope: !5591)
!5599 = !DILocation(line: 1537, column: 39, scope: !5591)
!5600 = !DILocation(line: 1538, column: 1, scope: !5591)
!5601 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !516, file: !516, line: 123, type: !5511, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5602)
!5602 = !{!5603, !5604}
!5603 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5601, file: !516, line: 123, type: !339)
!5604 = !DILocalVariable(name: "status", scope: !5601, file: !516, line: 125, type: !5508)
!5605 = !DILocation(line: 0, scope: !5601)
!5606 = !DILocation(line: 127, column: 40, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5601, file: !516, line: 127, column: 9)
!5608 = !DILocation(line: 131, column: 9, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5607, file: !516, line: 130, column: 12)
!5610 = !DILocation(line: 135, column: 5, scope: !5601)
!5611 = !DILocation(line: 136, column: 1, scope: !5601)
!5612 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !531, file: !531, line: 1547, type: !5524, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5613)
!5613 = !{!5614}
!5614 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5612, file: !531, line: 1547, type: !140)
!5615 = !DILocation(line: 0, scope: !5612)
!5616 = !DILocation(line: 1549, column: 65, scope: !5612)
!5617 = !DILocation(line: 1549, column: 44, scope: !5612)
!5618 = !DILocation(line: 1549, column: 32, scope: !5612)
!5619 = !DILocation(line: 1549, column: 3, scope: !5612)
!5620 = !DILocation(line: 1549, column: 39, scope: !5612)
!5621 = !DILocation(line: 1550, column: 1, scope: !5612)
!5622 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !516, file: !516, line: 138, type: !5623, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5625)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{!5508, !339, !61}
!5625 = !{!5626, !5627, !5628}
!5626 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5622, file: !516, line: 138, type: !339)
!5627 = !DILocalVariable(name: "priority", arg: 2, scope: !5622, file: !516, line: 138, type: !61)
!5628 = !DILocalVariable(name: "status", scope: !5622, file: !516, line: 140, type: !5508)
!5629 = !DILocation(line: 0, scope: !5622)
!5630 = !DILocation(line: 142, column: 40, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5622, file: !516, line: 142, column: 9)
!5632 = !DILocation(line: 146, column: 9, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5631, file: !516, line: 145, column: 12)
!5634 = !DILocation(line: 150, column: 5, scope: !5622)
!5635 = !DILocation(line: 151, column: 1, scope: !5622)
!5636 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !531, file: !531, line: 1577, type: !5637, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5639)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{null, !140, !61}
!5639 = !{!5640, !5641}
!5640 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5636, file: !531, line: 1577, type: !140)
!5641 = !DILocalVariable(name: "priority", arg: 2, scope: !5636, file: !531, line: 1577, type: !61)
!5642 = !DILocation(line: 0, scope: !5636)
!5643 = !DILocation(line: 1582, column: 34, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !531, line: 1581, column: 8)
!5645 = distinct !DILexicalBlock(scope: !5636, file: !531, line: 1579, column: 6)
!5646 = !DILocation(line: 1582, column: 5, scope: !5644)
!5647 = !DILocation(line: 1582, column: 32, scope: !5644)
!5648 = !DILocation(line: 1583, column: 1, scope: !5636)
!5649 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !516, file: !516, line: 153, type: !5557, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5650)
!5650 = !{!5651, !5652}
!5651 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5649, file: !516, line: 153, type: !339)
!5652 = !DILocalVariable(name: "ret", scope: !5649, file: !516, line: 155, type: !61)
!5653 = !DILocation(line: 0, scope: !5649)
!5654 = !DILocation(line: 157, column: 40, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5649, file: !516, line: 157, column: 9)
!5656 = !DILocation(line: 160, column: 15, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5655, file: !516, line: 159, column: 12)
!5658 = !DILocation(line: 163, column: 5, scope: !5649)
!5659 = !DILocation(line: 164, column: 1, scope: !5649)
!5660 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !531, file: !531, line: 1597, type: !5570, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5661)
!5661 = !{!5662}
!5662 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5660, file: !531, line: 1597, type: !140)
!5663 = !DILocation(line: 0, scope: !5660)
!5664 = !DILocation(line: 1603, column: 23, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !531, line: 1602, column: 8)
!5666 = distinct !DILexicalBlock(scope: !5660, file: !531, line: 1600, column: 6)
!5667 = !DILocation(line: 1603, column: 60, scope: !5665)
!5668 = !DILocation(line: 1604, column: 1, scope: !5660)
!5669 = distinct !DISubprogram(name: "isrC_main", scope: !516, file: !516, line: 178, type: !5506, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5670)
!5670 = !{!5671, !5672}
!5671 = !DILocalVariable(name: "status", scope: !5669, file: !516, line: 180, type: !5508)
!5672 = !DILocalVariable(name: "irq_number", scope: !5669, file: !516, line: 181, type: !339)
!5673 = !DILocation(line: 0, scope: !5669)
!5674 = !DILocation(line: 185, column: 5, scope: !5669)
!5675 = !DILocation(line: 188, column: 34, scope: !5669)
!5676 = !DILocation(line: 189, column: 24, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5669, file: !516, line: 189, column: 9)
!5678 = !DILocation(line: 192, column: 48, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5677, file: !516, line: 192, column: 16)
!5680 = !DILocation(line: 192, column: 62, scope: !5679)
!5681 = !DILocation(line: 192, column: 16, scope: !5677)
!5682 = !DILocation(line: 194, column: 9, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5679, file: !516, line: 192, column: 71)
!5684 = !DILocation(line: 195, column: 9, scope: !5683)
!5685 = !DILocation(line: 197, column: 55, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5679, file: !516, line: 196, column: 12)
!5687 = !DILocation(line: 197, column: 41, scope: !5686)
!5688 = !DILocation(line: 197, column: 53, scope: !5686)
!5689 = !DILocation(line: 198, column: 41, scope: !5686)
!5690 = !DILocation(line: 198, column: 9, scope: !5686)
!5691 = !DILocation(line: 202, column: 5, scope: !5669)
!5692 = !DILocation(line: 203, column: 1, scope: !5669)
!5693 = distinct !DISubprogram(name: "get_current_irq", scope: !516, file: !516, line: 166, type: !1985, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5694)
!5694 = !{!5695}
!5695 = !DILocalVariable(name: "irq_num", scope: !5693, file: !516, line: 168, type: !61)
!5696 = !DILocation(line: 168, column: 31, scope: !5693)
!5697 = !DILocation(line: 168, column: 36, scope: !5693)
!5698 = !DILocation(line: 0, scope: !5693)
!5699 = !DILocation(line: 169, column: 21, scope: !5693)
!5700 = !DILocation(line: 169, column: 5, scope: !5693)
!5701 = distinct !DISubprogram(name: "get_pending_irq", scope: !516, file: !516, line: 55, type: !1985, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !2004)
!5702 = !DILocation(line: 57, column: 19, scope: !5701)
!5703 = !DILocation(line: 57, column: 51, scope: !5701)
!5704 = !DILocation(line: 57, column: 5, scope: !5701)
!5705 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !516, file: !516, line: 205, type: !5706, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5709)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!5508, !339, !5708}
!5708 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !519, line: 175, baseType: !599)
!5709 = !{!5710, !5711, !5712}
!5710 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5705, file: !516, line: 205, type: !339)
!5711 = !DILocalVariable(name: "callback", arg: 2, scope: !5705, file: !516, line: 205, type: !5708)
!5712 = !DILocalVariable(name: "mask", scope: !5705, file: !516, line: 207, type: !61)
!5713 = !DILocation(line: 0, scope: !5705)
!5714 = !DILocation(line: 209, column: 24, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5705, file: !516, line: 209, column: 9)
!5716 = !DILocation(line: 213, column: 12, scope: !5705)
!5717 = !DILocation(line: 214, column: 5, scope: !5705)
!5718 = !DILocation(line: 215, column: 37, scope: !5705)
!5719 = !DILocation(line: 215, column: 51, scope: !5705)
!5720 = !DILocation(line: 216, column: 37, scope: !5705)
!5721 = !DILocation(line: 216, column: 49, scope: !5705)
!5722 = !DILocation(line: 217, column: 5, scope: !5705)
!5723 = !DILocation(line: 219, column: 5, scope: !5705)
!5724 = !DILocation(line: 220, column: 1, scope: !5705)
!5725 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !516, file: !516, line: 222, type: !5726, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5728)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!5508, !2564}
!5728 = !{!5729}
!5729 = !DILocalVariable(name: "mask", arg: 1, scope: !5725, file: !516, line: 222, type: !2564)
!5730 = !DILocation(line: 0, scope: !5725)
!5731 = !DILocation(line: 224, column: 13, scope: !5725)
!5732 = !DILocation(line: 224, column: 11, scope: !5725)
!5733 = !DILocation(line: 225, column: 5, scope: !5725)
!5734 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !516, file: !516, line: 228, type: !5735, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5737)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{!5508, !61}
!5737 = !{!5738}
!5738 = !DILocalVariable(name: "mask", arg: 1, scope: !5734, file: !516, line: 228, type: !61)
!5739 = !DILocation(line: 0, scope: !5734)
!5740 = !DILocation(line: 230, column: 5, scope: !5734)
!5741 = !DILocation(line: 231, column: 5, scope: !5734)
!5742 = distinct !DISubprogram(name: "hal_flash_init", scope: !1920, file: !1920, line: 42, type: !5743, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !5746)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{!5745}
!5745 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !45, line: 119, baseType: !1509)
!5746 = !{!5747}
!5747 = !DILocalVariable(name: "ret_value", scope: !5742, file: !1920, line: 44, type: !527)
!5748 = !DILocation(line: 0, scope: !5742)
!5749 = !DILocation(line: 45, column: 17, scope: !5742)
!5750 = !DILocation(line: 46, column: 12, scope: !5742)
!5751 = !DILocation(line: 46, column: 5, scope: !5742)
!5752 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1920, file: !1920, line: 49, type: !5743, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !2004)
!5753 = !DILocation(line: 51, column: 5, scope: !5752)
!5754 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1920, file: !1920, line: 54, type: !5755, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !5758)
!5755 = !DISubroutineType(types: !5756)
!5756 = !{!5745, !61, !5757}
!5757 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !45, line: 127, baseType: !44)
!5758 = !{!5759, !5760, !5761}
!5759 = !DILocalVariable(name: "start_address", arg: 1, scope: !5754, file: !1920, line: 54, type: !61)
!5760 = !DILocalVariable(name: "block", arg: 2, scope: !5754, file: !1920, line: 54, type: !5757)
!5761 = !DILocalVariable(name: "ret_value", scope: !5754, file: !1920, line: 56, type: !527)
!5762 = !DILocation(line: 0, scope: !5754)
!5763 = !DILocation(line: 57, column: 17, scope: !5754)
!5764 = !DILocation(line: 58, column: 12, scope: !5754)
!5765 = !DILocation(line: 58, column: 5, scope: !5754)
!5766 = distinct !DISubprogram(name: "hal_flash_read", scope: !1920, file: !1920, line: 62, type: !5767, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!5745, !61, !210, !61}
!5769 = !{!5770, !5771, !5772}
!5770 = !DILocalVariable(name: "start_address", arg: 1, scope: !5766, file: !1920, line: 62, type: !61)
!5771 = !DILocalVariable(name: "buffer", arg: 2, scope: !5766, file: !1920, line: 62, type: !210)
!5772 = !DILocalVariable(name: "length", arg: 3, scope: !5766, file: !1920, line: 62, type: !61)
!5773 = !DILocation(line: 0, scope: !5766)
!5774 = !DILocation(line: 64, column: 50, scope: !5766)
!5775 = !DILocation(line: 64, column: 27, scope: !5766)
!5776 = !DILocation(line: 64, column: 5, scope: !5766)
!5777 = !DILocation(line: 65, column: 5, scope: !5766)
!5778 = distinct !DISubprogram(name: "hal_flash_write", scope: !1920, file: !1920, line: 68, type: !5779, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !5781)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!5745, !61, !2146, !61}
!5781 = !{!5782, !5783, !5784, !5785}
!5782 = !DILocalVariable(name: "address", arg: 1, scope: !5778, file: !1920, line: 68, type: !61)
!5783 = !DILocalVariable(name: "data", arg: 2, scope: !5778, file: !1920, line: 68, type: !2146)
!5784 = !DILocalVariable(name: "length", arg: 3, scope: !5778, file: !1920, line: 68, type: !61)
!5785 = !DILocalVariable(name: "ret_value", scope: !5778, file: !1920, line: 70, type: !527)
!5786 = !DILocation(line: 0, scope: !5778)
!5787 = !DILocation(line: 70, column: 25, scope: !5778)
!5788 = !DILocation(line: 71, column: 12, scope: !5778)
!5789 = !DILocation(line: 71, column: 5, scope: !5778)
!5790 = distinct !DISubprogram(name: "hal_gpt_init", scope: !608, file: !608, line: 82, type: !5791, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5794)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!1990, !5793}
!5793 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !29, line: 663, baseType: !610)
!5794 = !{!5795}
!5795 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5790, file: !608, line: 82, type: !5793)
!5796 = !DILocation(line: 0, scope: !5790)
!5797 = !DILocation(line: 84, column: 9, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5790, file: !608, line: 84, column: 9)
!5799 = !DILocation(line: 84, column: 33, scope: !5798)
!5800 = !DILocation(line: 84, column: 9, scope: !5790)
!5801 = !DILocation(line: 88, column: 9, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5790, file: !608, line: 88, column: 9)
!5803 = !DILocation(line: 88, column: 9, scope: !5790)
!5804 = !DILocation(line: 89, column: 9, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !608, line: 88, column: 50)
!5806 = !DILocation(line: 90, column: 9, scope: !5805)
!5807 = !DILocation(line: 92, column: 12, scope: !5790)
!5808 = !DILocation(line: 92, column: 5, scope: !5790)
!5809 = !DILocation(line: 96, column: 43, scope: !5790)
!5810 = !DILocation(line: 98, column: 5, scope: !5790)
!5811 = !DILocation(line: 99, column: 1, scope: !5790)
!5812 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !608, file: !608, line: 63, type: !5813, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5815)
!5813 = !DISubroutineType(types: !5814)
!5814 = !{!69, !5793}
!5815 = !{!5816}
!5816 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5812, file: !608, line: 63, type: !5793)
!5817 = !DILocation(line: 0, scope: !5812)
!5818 = !DILocation(line: 65, column: 19, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5812, file: !608, line: 65, column: 9)
!5820 = !DILocation(line: 65, column: 34, scope: !5819)
!5821 = !DILocation(line: 70, column: 1, scope: !5812)
!5822 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !608, file: !608, line: 101, type: !5791, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5823)
!5823 = !{!5824}
!5824 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5822, file: !608, line: 101, type: !5793)
!5825 = !DILocation(line: 0, scope: !5822)
!5826 = !DILocation(line: 103, column: 9, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5822, file: !608, line: 103, column: 9)
!5828 = !DILocation(line: 103, column: 9, scope: !5822)
!5829 = !DILocation(line: 104, column: 9, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5827, file: !608, line: 103, column: 50)
!5831 = !DILocation(line: 105, column: 9, scope: !5830)
!5832 = !DILocation(line: 108, column: 9, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5822, file: !608, line: 108, column: 9)
!5834 = !DILocation(line: 108, column: 33, scope: !5833)
!5835 = !DILocation(line: 108, column: 48, scope: !5833)
!5836 = !DILocation(line: 108, column: 9, scope: !5822)
!5837 = !DILocation(line: 109, column: 9, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5833, file: !608, line: 108, column: 68)
!5839 = !DILocation(line: 110, column: 9, scope: !5838)
!5840 = !DILocation(line: 113, column: 12, scope: !5822)
!5841 = !DILocation(line: 113, column: 5, scope: !5822)
!5842 = !DILocation(line: 116, column: 29, scope: !5822)
!5843 = !DILocation(line: 116, column: 43, scope: !5822)
!5844 = !DILocation(line: 117, column: 5, scope: !5822)
!5845 = !DILocation(line: 118, column: 1, scope: !5822)
!5846 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !608, file: !608, line: 120, type: !5847, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5850)
!5847 = !DISubroutineType(types: !5848)
!5848 = !{!1990, !5849, !2564}
!5849 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !29, line: 674, baseType: !28)
!5850 = !{!5851, !5852}
!5851 = !DILocalVariable(name: "clock_source", arg: 1, scope: !5846, file: !608, line: 120, type: !5849)
!5852 = !DILocalVariable(name: "count", arg: 2, scope: !5846, file: !608, line: 120, type: !2564)
!5853 = !DILocation(line: 0, scope: !5846)
!5854 = !DILocation(line: 122, column: 9, scope: !5846)
!5855 = !DILocation(line: 123, column: 50, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !608, line: 123, column: 13)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !608, line: 122, column: 51)
!5858 = distinct !DILexicalBlock(scope: !5846, file: !608, line: 122, column: 9)
!5859 = !DILocation(line: 123, column: 65, scope: !5856)
!5860 = !DILocation(line: 123, column: 13, scope: !5857)
!5861 = !DILocation(line: 124, column: 13, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5856, file: !608, line: 123, column: 86)
!5863 = !DILocation(line: 125, column: 9, scope: !5862)
!5864 = !DILocation(line: 126, column: 18, scope: !5857)
!5865 = !DILocation(line: 126, column: 16, scope: !5857)
!5866 = !DILocation(line: 127, column: 49, scope: !5857)
!5867 = !DILocation(line: 128, column: 5, scope: !5857)
!5868 = !DILocation(line: 129, column: 50, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !608, line: 129, column: 13)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !608, line: 128, column: 57)
!5871 = distinct !DILexicalBlock(scope: !5858, file: !608, line: 128, column: 16)
!5872 = !DILocation(line: 129, column: 65, scope: !5869)
!5873 = !DILocation(line: 129, column: 13, scope: !5870)
!5874 = !DILocation(line: 130, column: 13, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5869, file: !608, line: 129, column: 86)
!5876 = !DILocation(line: 131, column: 9, scope: !5875)
!5877 = !DILocation(line: 132, column: 18, scope: !5870)
!5878 = !DILocation(line: 132, column: 46, scope: !5870)
!5879 = !DILocation(line: 132, column: 65, scope: !5870)
!5880 = !DILocation(line: 132, column: 43, scope: !5870)
!5881 = !DILocation(line: 132, column: 16, scope: !5870)
!5882 = !DILocation(line: 133, column: 49, scope: !5870)
!5883 = !DILocation(line: 134, column: 5, scope: !5870)
!5884 = !DILocation(line: 135, column: 50, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !608, line: 135, column: 13)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !608, line: 134, column: 58)
!5887 = distinct !DILexicalBlock(scope: !5871, file: !608, line: 134, column: 16)
!5888 = !DILocation(line: 135, column: 65, scope: !5885)
!5889 = !DILocation(line: 135, column: 13, scope: !5886)
!5890 = !DILocation(line: 136, column: 13, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5885, file: !608, line: 135, column: 86)
!5892 = !DILocation(line: 137, column: 9, scope: !5891)
!5893 = !DILocation(line: 138, column: 18, scope: !5886)
!5894 = !DILocation(line: 138, column: 16, scope: !5886)
!5895 = !DILocation(line: 139, column: 49, scope: !5886)
!5896 = !DILocation(line: 141, column: 9, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5887, file: !608, line: 140, column: 11)
!5898 = !DILocation(line: 142, column: 9, scope: !5897)
!5899 = !DILocation(line: 146, column: 1, scope: !5846)
!5900 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !608, file: !608, line: 148, type: !5901, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5903)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{!1990, !61, !61, !2564}
!5903 = !{!5904, !5905, !5906}
!5904 = !DILocalVariable(name: "start_count", arg: 1, scope: !5900, file: !608, line: 148, type: !61)
!5905 = !DILocalVariable(name: "end_count", arg: 2, scope: !5900, file: !608, line: 148, type: !61)
!5906 = !DILocalVariable(name: "duration_count", arg: 3, scope: !5900, file: !608, line: 148, type: !2564)
!5907 = !DILocation(line: 0, scope: !5900)
!5908 = !DILocation(line: 150, column: 24, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5900, file: !608, line: 150, column: 9)
!5910 = !DILocation(line: 150, column: 9, scope: !5900)
!5911 = !DILocation(line: 0, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5900, file: !608, line: 154, column: 9)
!5913 = !DILocation(line: 160, column: 5, scope: !5900)
!5914 = !DILocation(line: 161, column: 1, scope: !5900)
!5915 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !608, file: !608, line: 163, type: !5916, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5919)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!1990, !5793, !5918}
!5918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!5919 = !{!5920, !5921}
!5920 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5915, file: !608, line: 163, type: !5793)
!5921 = !DILocalVariable(name: "running_status", arg: 2, scope: !5915, file: !608, line: 164, type: !5918)
!5922 = !DILocation(line: 0, scope: !5915)
!5923 = !DILocation(line: 166, column: 18, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5915, file: !608, line: 166, column: 9)
!5925 = !DILocation(line: 166, column: 9, scope: !5915)
!5926 = !DILocation(line: 167, column: 9, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5924, file: !608, line: 166, column: 34)
!5928 = !DILocation(line: 168, column: 9, scope: !5927)
!5929 = !DILocation(line: 170, column: 47, scope: !5915)
!5930 = !DILocation(line: 170, column: 21, scope: !5915)
!5931 = !DILocation(line: 171, column: 5, scope: !5915)
!5932 = !DILocation(line: 172, column: 1, scope: !5915)
!5933 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !608, file: !608, line: 174, type: !5934, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5936)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{!1990, !5793, !638, !51}
!5936 = !{!5937, !5938, !5939}
!5937 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5933, file: !608, line: 174, type: !5793)
!5938 = !DILocalVariable(name: "callback", arg: 2, scope: !5933, file: !608, line: 175, type: !638)
!5939 = !DILocalVariable(name: "user_data", arg: 3, scope: !5933, file: !608, line: 176, type: !51)
!5940 = !DILocation(line: 0, scope: !5933)
!5941 = !DILocation(line: 178, column: 9, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5933, file: !608, line: 178, column: 9)
!5943 = !DILocation(line: 178, column: 9, scope: !5933)
!5944 = !DILocation(line: 179, column: 9, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5942, file: !608, line: 178, column: 50)
!5946 = !DILocation(line: 180, column: 9, scope: !5945)
!5947 = !DILocation(line: 182, column: 33, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5933, file: !608, line: 182, column: 9)
!5949 = !DILocation(line: 182, column: 47, scope: !5948)
!5950 = !DILocation(line: 182, column: 9, scope: !5933)
!5951 = !DILocation(line: 185, column: 18, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5933, file: !608, line: 185, column: 9)
!5953 = !DILocation(line: 185, column: 9, scope: !5933)
!5954 = !DILocation(line: 188, column: 46, scope: !5933)
!5955 = !DILocation(line: 188, column: 56, scope: !5933)
!5956 = !DILocation(line: 189, column: 46, scope: !5933)
!5957 = !DILocation(line: 189, column: 56, scope: !5933)
!5958 = !DILocation(line: 190, column: 5, scope: !5933)
!5959 = !DILocation(line: 191, column: 1, scope: !5933)
!5960 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !608, file: !608, line: 218, type: !5961, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5964)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!1990, !5793, !61, !5963}
!5963 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !21, line: 383, baseType: !621)
!5964 = !{!5965, !5966, !5967}
!5965 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5960, file: !608, line: 218, type: !5793)
!5966 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !5960, file: !608, line: 218, type: !61)
!5967 = !DILocalVariable(name: "timer_type", arg: 3, scope: !5960, file: !608, line: 218, type: !5963)
!5968 = !DILocation(line: 0, scope: !5960)
!5969 = !DILocation(line: 220, column: 9, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5960, file: !608, line: 220, column: 9)
!5971 = !DILocation(line: 220, column: 9, scope: !5960)
!5972 = !DILocation(line: 221, column: 9, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5970, file: !608, line: 220, column: 50)
!5974 = !DILocation(line: 222, column: 9, scope: !5973)
!5975 = !DILocation(line: 225, column: 33, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5960, file: !608, line: 225, column: 9)
!5977 = !DILocation(line: 225, column: 47, scope: !5976)
!5978 = !DILocation(line: 225, column: 9, scope: !5960)
!5979 = !DILocation(line: 229, column: 25, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5960, file: !608, line: 229, column: 9)
!5981 = !DILocation(line: 229, column: 9, scope: !5960)
!5982 = !DILocation(line: 234, column: 17, scope: !5960)
!5983 = !DILocation(line: 235, column: 17, scope: !5960)
!5984 = !DILocation(line: 236, column: 17, scope: !5960)
!5985 = !DILocation(line: 233, column: 5, scope: !5960)
!5986 = !DILocation(line: 237, column: 5, scope: !5960)
!5987 = !DILocation(line: 238, column: 29, scope: !5960)
!5988 = !DILocation(line: 238, column: 44, scope: !5960)
!5989 = !DILocation(line: 239, column: 5, scope: !5960)
!5990 = !DILocation(line: 240, column: 1, scope: !5960)
!5991 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !608, file: !608, line: 72, type: !5992, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5994)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!61, !61}
!5994 = !{!5995}
!5995 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !5991, file: !608, line: 72, type: !61)
!5996 = !DILocation(line: 0, scope: !5991)
!5997 = !DILocation(line: 74, column: 37, scope: !5991)
!5998 = !DILocation(line: 74, column: 47, scope: !5991)
!5999 = !DILocation(line: 74, column: 63, scope: !5991)
!6000 = !DILocation(line: 74, column: 42, scope: !5991)
!6001 = !DILocation(line: 74, column: 73, scope: !5991)
!6002 = !DILocation(line: 74, column: 89, scope: !5991)
!6003 = !DILocation(line: 74, column: 68, scope: !5991)
!6004 = !DILocation(line: 74, column: 100, scope: !5991)
!6005 = !DILocation(line: 74, column: 116, scope: !5991)
!6006 = !DILocation(line: 74, column: 95, scope: !5991)
!6007 = !DILocation(line: 74, column: 5, scope: !5991)
!6008 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !608, file: !608, line: 77, type: !6009, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6011)
!6009 = !DISubroutineType(types: !6010)
!6010 = !{!69, !5963}
!6011 = !{!6012}
!6012 = !DILocalVariable(name: "type", arg: 1, scope: !6008, file: !608, line: 77, type: !5963)
!6013 = !DILocation(line: 0, scope: !6008)
!6014 = !DILocation(line: 79, column: 38, scope: !6008)
!6015 = !DILocation(line: 79, column: 5, scope: !6008)
!6016 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !608, file: !608, line: 213, type: !6017, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6020)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!6019, !5793}
!6019 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !608, line: 211, baseType: !153)
!6020 = !{!6021}
!6021 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6016, file: !608, line: 213, type: !5793)
!6022 = !DILocation(line: 0, scope: !6016)
!6023 = !DILocation(line: 215, column: 23, scope: !6016)
!6024 = !DILocation(line: 215, column: 12, scope: !6016)
!6025 = !DILocation(line: 215, column: 5, scope: !6016)
!6026 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !608, file: !608, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6027)
!6027 = !{!6028}
!6028 = !DILocalVariable(name: "context", scope: !6026, file: !608, line: 195, type: !6029)
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!6030 = !DILocation(line: 196, column: 26, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6026, file: !608, line: 196, column: 9)
!6032 = !DILocation(line: 196, column: 14, scope: !6031)
!6033 = !DILocation(line: 196, column: 9, scope: !6026)
!6034 = !DILocation(line: 197, column: 36, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6031, file: !608, line: 196, column: 36)
!6036 = !DILocation(line: 197, column: 9, scope: !6035)
!6037 = !DILocation(line: 198, column: 5, scope: !6035)
!6038 = !DILocation(line: 199, column: 45, scope: !6026)
!6039 = !DILocation(line: 200, column: 1, scope: !6026)
!6040 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !608, file: !608, line: 202, type: !154, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6041)
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "context", scope: !6040, file: !608, line: 204, type: !6029)
!6043 = !DILocation(line: 205, column: 26, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6040, file: !608, line: 205, column: 9)
!6045 = !DILocation(line: 205, column: 14, scope: !6044)
!6046 = !DILocation(line: 205, column: 9, scope: !6040)
!6047 = !DILocation(line: 206, column: 36, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6044, file: !608, line: 205, column: 36)
!6049 = !DILocation(line: 206, column: 9, scope: !6048)
!6050 = !DILocation(line: 207, column: 5, scope: !6048)
!6051 = !DILocation(line: 208, column: 45, scope: !6040)
!6052 = !DILocation(line: 209, column: 1, scope: !6040)
!6053 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !608, file: !608, line: 242, type: !5791, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6054)
!6054 = !{!6055}
!6055 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6053, file: !608, line: 242, type: !5793)
!6056 = !DILocation(line: 0, scope: !6053)
!6057 = !DILocation(line: 244, column: 9, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6053, file: !608, line: 244, column: 9)
!6059 = !DILocation(line: 244, column: 9, scope: !6053)
!6060 = !DILocation(line: 245, column: 9, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !608, line: 244, column: 50)
!6062 = !DILocation(line: 246, column: 9, scope: !6061)
!6063 = !DILocation(line: 248, column: 5, scope: !6053)
!6064 = !DILocation(line: 249, column: 29, scope: !6053)
!6065 = !DILocation(line: 249, column: 44, scope: !6053)
!6066 = !DILocation(line: 250, column: 5, scope: !6053)
!6067 = !DILocation(line: 251, column: 1, scope: !6053)
!6068 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !608, file: !608, line: 253, type: !6069, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6071)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{!1990, !61}
!6071 = !{!6072}
!6072 = !DILocalVariable(name: "ms", arg: 1, scope: !6068, file: !608, line: 253, type: !61)
!6073 = !DILocation(line: 0, scope: !6068)
!6074 = !DILocation(line: 255, column: 46, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6068, file: !608, line: 255, column: 9)
!6076 = !DILocation(line: 255, column: 61, scope: !6075)
!6077 = !DILocation(line: 255, column: 9, scope: !6068)
!6078 = !DILocation(line: 256, column: 9, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6075, file: !608, line: 255, column: 82)
!6080 = !DILocation(line: 257, column: 5, scope: !6079)
!6081 = !DILocation(line: 258, column: 5, scope: !6068)
!6082 = !DILocation(line: 259, column: 57, scope: !6068)
!6083 = !DILocation(line: 260, column: 5, scope: !6068)
!6084 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !608, file: !608, line: 264, type: !6069, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6085)
!6085 = !{!6086}
!6086 = !DILocalVariable(name: "us", arg: 1, scope: !6084, file: !608, line: 264, type: !61)
!6087 = !DILocation(line: 0, scope: !6084)
!6088 = !DILocation(line: 266, column: 46, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6084, file: !608, line: 266, column: 9)
!6090 = !DILocation(line: 266, column: 61, scope: !6089)
!6091 = !DILocation(line: 266, column: 9, scope: !6084)
!6092 = !DILocation(line: 267, column: 9, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !608, line: 266, column: 82)
!6094 = !DILocation(line: 268, column: 5, scope: !6093)
!6095 = !DILocation(line: 269, column: 5, scope: !6084)
!6096 = !DILocation(line: 270, column: 57, scope: !6084)
!6097 = !DILocation(line: 271, column: 5, scope: !6084)
!6098 = distinct !DISubprogram(name: "uart_send_handler", scope: !647, file: !647, line: 213, type: !4640, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6099)
!6099 = !{!6100, !6101, !6102}
!6100 = !DILocalVariable(name: "u_port", arg: 1, scope: !6098, file: !647, line: 213, type: !4586)
!6101 = !DILocalVariable(name: "length", scope: !6098, file: !647, line: 215, type: !61)
!6102 = !DILocalVariable(name: "irq_status", scope: !6098, file: !647, line: 216, type: !61)
!6103 = !DILocation(line: 0, scope: !6098)
!6104 = !DILocation(line: 215, column: 5, scope: !6098)
!6105 = !DILocation(line: 216, column: 5, scope: !6098)
!6106 = !DILocation(line: 218, column: 9, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6098, file: !647, line: 218, column: 9)
!6108 = !DILocation(line: 218, column: 54, scope: !6107)
!6109 = !DILocation(line: 218, column: 9, scope: !6098)
!6110 = !DILocation(line: 219, column: 9, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !647, line: 218, column: 64)
!6112 = !DILocation(line: 220, column: 9, scope: !6111)
!6113 = !DILocation(line: 221, column: 53, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6111, file: !647, line: 221, column: 13)
!6115 = !DILocation(line: 221, column: 78, scope: !6114)
!6116 = !DILocation(line: 221, column: 85, scope: !6114)
!6117 = !DILocation(line: 221, column: 13, scope: !6111)
!6118 = !DILocation(line: 222, column: 17, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !647, line: 222, column: 17)
!6120 = distinct !DILexicalBlock(scope: !6114, file: !647, line: 221, column: 91)
!6121 = !DILocation(line: 222, column: 17, scope: !6120)
!6122 = !DILocation(line: 223, column: 48, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6119, file: !647, line: 222, column: 58)
!6124 = !DILocation(line: 223, column: 17, scope: !6123)
!6125 = !DILocation(line: 224, column: 49, scope: !6123)
!6126 = !DILocation(line: 225, column: 13, scope: !6123)
!6127 = !DILocation(line: 227, column: 41, scope: !6111)
!6128 = !DILocation(line: 227, column: 9, scope: !6111)
!6129 = !DILocation(line: 228, column: 5, scope: !6111)
!6130 = !DILocation(line: 229, column: 54, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6107, file: !647, line: 228, column: 12)
!6132 = !DILocation(line: 231, column: 1, scope: !6098)
!6133 = distinct !DISubprogram(name: "hal_uart_init", scope: !647, file: !647, line: 234, type: !6134, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6138)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{!6136, !755, !6137}
!6136 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !650, line: 351, baseType: !649)
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!6138 = !{!6139, !6140}
!6139 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6133, file: !647, line: 234, type: !755)
!6140 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6133, file: !647, line: 234, type: !6137)
!6141 = !DILocation(line: 0, scope: !6133)
!6142 = !DILocation(line: 236, column: 10, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6133, file: !647, line: 236, column: 9)
!6144 = !DILocation(line: 236, column: 9, scope: !6133)
!6145 = !DILocation(line: 239, column: 41, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6133, file: !647, line: 239, column: 9)
!6147 = !DILocation(line: 239, column: 9, scope: !6133)
!6148 = !DILocation(line: 242, column: 5, scope: !6133)
!6149 = !DILocation(line: 243, column: 45, scope: !6133)
!6150 = !DILocation(line: 243, column: 12, scope: !6133)
!6151 = !DILocation(line: 244, column: 12, scope: !6133)
!6152 = !DILocation(line: 243, column: 5, scope: !6133)
!6153 = !DILocation(line: 245, column: 58, scope: !6133)
!6154 = !DILocation(line: 246, column: 30, scope: !6133)
!6155 = !{i32 0, i32 2}
!6156 = !DILocation(line: 246, column: 5, scope: !6133)
!6157 = !DILocation(line: 247, column: 5, scope: !6133)
!6158 = !DILocation(line: 249, column: 31, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6133, file: !647, line: 249, column: 9)
!6160 = !DILocation(line: 249, column: 28, scope: !6159)
!6161 = !DILocation(line: 249, column: 9, scope: !6133)
!6162 = !DILocation(line: 254, column: 5, scope: !6133)
!6163 = !DILocation(line: 255, column: 5, scope: !6133)
!6164 = !DILocation(line: 255, column: 53, scope: !6133)
!6165 = !DILocation(line: 256, column: 5, scope: !6133)
!6166 = !DILocation(line: 256, column: 40, scope: !6133)
!6167 = !DILocation(line: 257, column: 82, scope: !6133)
!6168 = !DILocation(line: 257, column: 39, scope: !6133)
!6169 = !DILocation(line: 257, column: 5, scope: !6133)
!6170 = !DILocation(line: 257, column: 37, scope: !6133)
!6171 = !DILocation(line: 260, column: 5, scope: !6133)
!6172 = !DILocation(line: 261, column: 1, scope: !6133)
!6173 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !647, file: !647, line: 93, type: !6174, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6178)
!6174 = !DISubroutineType(types: !6175)
!6175 = !{!69, !755, !6176}
!6176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6177, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!6178 = !{!6179, !6180}
!6179 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6173, file: !647, line: 93, type: !755)
!6180 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6173, file: !647, line: 93, type: !6176)
!6181 = !DILocation(line: 0, scope: !6173)
!6182 = !DILocation(line: 95, column: 10, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6173, file: !647, line: 95, column: 9)
!6184 = !DILocation(line: 95, column: 9, scope: !6173)
!6185 = !DILocation(line: 101, column: 23, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6173, file: !647, line: 101, column: 9)
!6187 = !DILocation(line: 101, column: 32, scope: !6186)
!6188 = !DILocation(line: 101, column: 60, scope: !6186)
!6189 = !DILocation(line: 102, column: 27, scope: !6186)
!6190 = !DILocation(line: 102, column: 34, scope: !6186)
!6191 = !DILocation(line: 102, column: 58, scope: !6186)
!6192 = !DILocation(line: 103, column: 27, scope: !6186)
!6193 = !DILocation(line: 103, column: 36, scope: !6186)
!6194 = !DILocation(line: 103, column: 59, scope: !6186)
!6195 = !DILocation(line: 104, column: 27, scope: !6186)
!6196 = !DILocation(line: 104, column: 39, scope: !6186)
!6197 = !DILocation(line: 101, column: 9, scope: !6173)
!6198 = !DILocation(line: 109, column: 1, scope: !6173)
!6199 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !647, file: !647, line: 139, type: !6200, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6202)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{!4586, !755}
!6202 = !{!6203}
!6203 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6199, file: !647, line: 139, type: !755)
!6204 = !DILocation(line: 0, scope: !6199)
!6205 = !DILocation(line: 141, column: 24, scope: !6199)
!6206 = !DILocation(line: 141, column: 12, scope: !6199)
!6207 = !DILocation(line: 141, column: 5, scope: !6199)
!6208 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !647, file: !647, line: 593, type: !6209, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6211)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{!6136, !755, !6176}
!6211 = !{!6212, !6213}
!6212 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6208, file: !647, line: 593, type: !755)
!6213 = !DILocalVariable(name: "config", arg: 2, scope: !6208, file: !647, line: 593, type: !6176)
!6214 = !DILocation(line: 0, scope: !6208)
!6215 = !DILocation(line: 595, column: 10, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6208, file: !647, line: 595, column: 9)
!6217 = !DILocation(line: 595, column: 9, scope: !6208)
!6218 = !DILocation(line: 598, column: 45, scope: !6208)
!6219 = !DILocation(line: 598, column: 12, scope: !6208)
!6220 = !DILocation(line: 598, column: 59, scope: !6208)
!6221 = !DILocation(line: 598, column: 5, scope: !6208)
!6222 = !DILocation(line: 599, column: 23, scope: !6208)
!6223 = !DILocation(line: 600, column: 59, scope: !6208)
!6224 = !DILocation(line: 600, column: 23, scope: !6208)
!6225 = !DILocation(line: 601, column: 62, scope: !6208)
!6226 = !DILocation(line: 601, column: 23, scope: !6208)
!6227 = !DILocation(line: 602, column: 57, scope: !6208)
!6228 = !DILocation(line: 602, column: 23, scope: !6208)
!6229 = !DILocation(line: 603, column: 58, scope: !6208)
!6230 = !DILocation(line: 603, column: 23, scope: !6208)
!6231 = !DILocation(line: 599, column: 5, scope: !6208)
!6232 = !DILocation(line: 604, column: 5, scope: !6208)
!6233 = !DILocation(line: 605, column: 1, scope: !6208)
!6234 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !647, file: !647, line: 145, type: !6235, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6237)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{!61, !712}
!6237 = !{!6238, !6239}
!6238 = !DILocalVariable(name: "bandrate", arg: 1, scope: !6234, file: !647, line: 145, type: !712)
!6239 = !DILocalVariable(name: "baudrate_tbl", scope: !6234, file: !647, line: 147, type: !6240)
!6240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 416, elements: !276)
!6241 = !DILocation(line: 0, scope: !6234)
!6242 = !DILocation(line: 147, column: 14, scope: !6234)
!6243 = !DILocation(line: 151, column: 12, scope: !6234)
!6244 = !DILocation(line: 151, column: 5, scope: !6234)
!6245 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !647, file: !647, line: 155, type: !6246, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6248)
!6246 = !DISubroutineType(types: !6247)
!6247 = !{!864, !714}
!6248 = !{!6249, !6250}
!6249 = !DILocalVariable(name: "word_length", arg: 1, scope: !6245, file: !647, line: 155, type: !714)
!6250 = !DILocalVariable(name: "databit_tbl", scope: !6245, file: !647, line: 157, type: !6251)
!6251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 64, elements: !220)
!6252 = !DILocation(line: 0, scope: !6245)
!6253 = !DILocation(line: 157, column: 14, scope: !6245)
!6254 = !DILocation(line: 160, column: 12, scope: !6245)
!6255 = !DILocation(line: 160, column: 5, scope: !6245)
!6256 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !647, file: !647, line: 164, type: !6257, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6259)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{!864, !718}
!6259 = !{!6260, !6261}
!6260 = !DILocalVariable(name: "parity", arg: 1, scope: !6256, file: !647, line: 164, type: !718)
!6261 = !DILocalVariable(name: "parity_tbl", scope: !6256, file: !647, line: 166, type: !6262)
!6262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 80, elements: !588)
!6263 = !DILocation(line: 0, scope: !6256)
!6264 = !DILocation(line: 166, column: 14, scope: !6256)
!6265 = !DILocation(line: 169, column: 12, scope: !6256)
!6266 = !DILocation(line: 169, column: 5, scope: !6256)
!6267 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !647, file: !647, line: 173, type: !6268, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6270)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!864, !716}
!6270 = !{!6271, !6272}
!6271 = !DILocalVariable(name: "stopbit", arg: 1, scope: !6267, file: !647, line: 173, type: !716)
!6272 = !DILocalVariable(name: "stopbit_tbl", scope: !6267, file: !647, line: 175, type: !6273)
!6273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 48, elements: !1654)
!6274 = !DILocation(line: 0, scope: !6267)
!6275 = !DILocation(line: 175, column: 14, scope: !6267)
!6276 = !DILocation(line: 178, column: 12, scope: !6267)
!6277 = !DILocation(line: 178, column: 5, scope: !6267)
!6278 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !647, file: !647, line: 87, type: !6279, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6281)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!69, !755}
!6281 = !{!6282}
!6282 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6278, file: !647, line: 87, type: !755)
!6283 = !DILocation(line: 0, scope: !6278)
!6284 = !DILocation(line: 89, column: 23, scope: !6278)
!6285 = !DILocation(line: 89, column: 5, scope: !6278)
!6286 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !647, file: !647, line: 264, type: !6287, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6289)
!6287 = !DISubroutineType(types: !6288)
!6288 = !{!6136, !755}
!6289 = !{!6290}
!6290 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6286, file: !647, line: 264, type: !755)
!6291 = !DILocation(line: 0, scope: !6286)
!6292 = !DILocation(line: 266, column: 10, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6286, file: !647, line: 266, column: 9)
!6294 = !DILocation(line: 266, column: 9, scope: !6286)
!6295 = !DILocation(line: 269, column: 41, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6286, file: !647, line: 269, column: 9)
!6297 = !DILocation(line: 269, column: 62, scope: !6296)
!6298 = !DILocation(line: 269, column: 9, scope: !6286)
!6299 = !DILocation(line: 272, column: 5, scope: !6286)
!6300 = !DILocation(line: 275, column: 22, scope: !6286)
!6301 = !DILocation(line: 275, column: 5, scope: !6286)
!6302 = !DILocation(line: 278, column: 26, scope: !6286)
!6303 = !DILocation(line: 278, column: 5, scope: !6286)
!6304 = !DILocation(line: 279, column: 5, scope: !6286)
!6305 = !DILocation(line: 279, column: 53, scope: !6286)
!6306 = !DILocation(line: 280, column: 5, scope: !6286)
!6307 = !DILocation(line: 280, column: 40, scope: !6286)
!6308 = !DILocation(line: 281, column: 5, scope: !6286)
!6309 = !DILocation(line: 282, column: 44, scope: !6286)
!6310 = !DILocation(line: 282, column: 5, scope: !6286)
!6311 = !DILocation(line: 284, column: 5, scope: !6286)
!6312 = !DILocation(line: 286, column: 5, scope: !6286)
!6313 = !DILocation(line: 287, column: 1, scope: !6286)
!6314 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !647, file: !647, line: 290, type: !6315, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6317)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{null, !755, !202}
!6317 = !{!6318, !6319, !6320}
!6318 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6314, file: !647, line: 290, type: !755)
!6319 = !DILocalVariable(name: "byte", arg: 2, scope: !6314, file: !647, line: 290, type: !202)
!6320 = !DILocalVariable(name: "int_no", scope: !6314, file: !647, line: 292, type: !4586)
!6321 = !DILocation(line: 0, scope: !6314)
!6322 = !DILocation(line: 292, column: 26, scope: !6314)
!6323 = !DILocation(line: 294, column: 16, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6314, file: !647, line: 294, column: 9)
!6325 = !DILocation(line: 294, column: 9, scope: !6314)
!6326 = !DILocation(line: 295, column: 9, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !647, line: 294, column: 34)
!6328 = !DILocation(line: 296, column: 5, scope: !6327)
!6329 = !DILocation(line: 299, column: 1, scope: !6314)
!6330 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !647, file: !647, line: 302, type: !6331, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6333)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!61, !755, !2146, !61}
!6333 = !{!6334, !6335, !6336, !6337, !6338}
!6334 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6330, file: !647, line: 302, type: !755)
!6335 = !DILocalVariable(name: "data", arg: 2, scope: !6330, file: !647, line: 302, type: !2146)
!6336 = !DILocalVariable(name: "size", arg: 3, scope: !6330, file: !647, line: 302, type: !61)
!6337 = !DILocalVariable(name: "int_no", scope: !6330, file: !647, line: 304, type: !4586)
!6338 = !DILocalVariable(name: "index", scope: !6330, file: !647, line: 305, type: !61)
!6339 = !DILocation(line: 0, scope: !6330)
!6340 = !DILocation(line: 304, column: 26, scope: !6330)
!6341 = !DILocation(line: 307, column: 14, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6330, file: !647, line: 307, column: 9)
!6343 = !DILocation(line: 307, column: 9, scope: !6330)
!6344 = !DILocation(line: 313, column: 53, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !647, line: 312, column: 48)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !647, line: 312, column: 9)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !647, line: 312, column: 9)
!6348 = distinct !DILexicalBlock(scope: !6349, file: !647, line: 311, column: 33)
!6349 = distinct !DILexicalBlock(scope: !6330, file: !647, line: 311, column: 9)
!6350 = !DILocation(line: 313, column: 13, scope: !6345)
!6351 = !DILocation(line: 312, column: 44, scope: !6346)
!6352 = !DILocation(line: 312, column: 31, scope: !6346)
!6353 = !DILocation(line: 312, column: 9, scope: !6347)
!6354 = distinct !{!6354, !6353, !6355}
!6355 = !DILocation(line: 314, column: 9, scope: !6347)
!6356 = !DILocation(line: 318, column: 1, scope: !6330)
!6357 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !647, file: !647, line: 320, type: !6331, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6358)
!6358 = !{!6359, !6360, !6361, !6362, !6363, !6364, !6366}
!6359 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6357, file: !647, line: 320, type: !755)
!6360 = !DILocalVariable(name: "data", arg: 2, scope: !6357, file: !647, line: 320, type: !2146)
!6361 = !DILocalVariable(name: "size", arg: 3, scope: !6357, file: !647, line: 320, type: !61)
!6362 = !DILocalVariable(name: "actual_space", scope: !6357, file: !647, line: 322, type: !61)
!6363 = !DILocalVariable(name: "send_size", scope: !6357, file: !647, line: 322, type: !61)
!6364 = !DILocalVariable(name: "ch", scope: !6357, file: !647, line: 323, type: !6365)
!6365 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !302, line: 144, baseType: !301)
!6366 = !DILocalVariable(name: "irq_status", scope: !6357, file: !647, line: 325, type: !61)
!6367 = !DILocation(line: 0, scope: !6357)
!6368 = !DILocation(line: 322, column: 5, scope: !6357)
!6369 = !DILocation(line: 325, column: 5, scope: !6357)
!6370 = !DILocation(line: 328, column: 10, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6357, file: !647, line: 328, column: 9)
!6372 = !DILocation(line: 328, column: 9, scope: !6357)
!6373 = !DILocation(line: 332, column: 15, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6357, file: !647, line: 332, column: 9)
!6375 = !DILocation(line: 332, column: 24, scope: !6374)
!6376 = !DILocation(line: 335, column: 42, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6357, file: !647, line: 335, column: 9)
!6378 = !DILocation(line: 335, column: 9, scope: !6357)
!6379 = !DILocation(line: 341, column: 5, scope: !6357)
!6380 = !DILocation(line: 342, column: 9, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6357, file: !647, line: 342, column: 9)
!6382 = !DILocation(line: 342, column: 44, scope: !6381)
!6383 = !DILocation(line: 342, column: 9, scope: !6357)
!6384 = !DILocation(line: 343, column: 38, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6381, file: !647, line: 342, column: 54)
!6386 = !DILocation(line: 343, column: 9, scope: !6385)
!6387 = !DILocation(line: 344, column: 44, scope: !6385)
!6388 = !DILocation(line: 345, column: 5, scope: !6385)
!6389 = !DILocation(line: 346, column: 37, scope: !6357)
!6390 = !DILocation(line: 346, column: 5, scope: !6357)
!6391 = !DILocation(line: 349, column: 30, scope: !6357)
!6392 = !DILocation(line: 349, column: 5, scope: !6357)
!6393 = !DILocation(line: 350, column: 9, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6357, file: !647, line: 350, column: 9)
!6395 = !DILocation(line: 350, column: 22, scope: !6394)
!6396 = !DILocation(line: 355, column: 5, scope: !6357)
!6397 = !DILocation(line: 357, column: 22, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6357, file: !647, line: 357, column: 9)
!6399 = !DILocation(line: 357, column: 19, scope: !6398)
!6400 = !DILocation(line: 357, column: 9, scope: !6357)
!6401 = !DILocation(line: 358, column: 14, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6398, file: !647, line: 357, column: 36)
!6403 = !{i32 14, i32 18}
!6404 = !DILocation(line: 359, column: 9, scope: !6402)
!6405 = !DILocation(line: 360, column: 5, scope: !6402)
!6406 = !DILocation(line: 362, column: 1, scope: !6357)
!6407 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !647, file: !647, line: 191, type: !6408, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6410)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!6365, !4586, !69}
!6410 = !{!6411, !6412, !6413}
!6411 = !DILocalVariable(name: "port", arg: 1, scope: !6407, file: !647, line: 191, type: !4586)
!6412 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6407, file: !647, line: 191, type: !69)
!6413 = !DILocalVariable(name: "ch", scope: !6407, file: !647, line: 193, type: !6365)
!6414 = !DILocation(line: 0, scope: !6407)
!6415 = !DILocation(line: 195, column: 14, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6407, file: !647, line: 195, column: 9)
!6417 = !DILocation(line: 195, column: 9, scope: !6407)
!6418 = !DILocation(line: 209, column: 5, scope: !6407)
!6419 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !647, file: !647, line: 365, type: !6420, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6422)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!202, !755}
!6422 = !{!6423, !6424}
!6423 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6419, file: !647, line: 365, type: !755)
!6424 = !DILocalVariable(name: "int_no", scope: !6419, file: !647, line: 367, type: !4586)
!6425 = !DILocation(line: 0, scope: !6419)
!6426 = !DILocation(line: 367, column: 26, scope: !6419)
!6427 = !DILocation(line: 369, column: 16, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6419, file: !647, line: 369, column: 9)
!6429 = !DILocation(line: 369, column: 9, scope: !6419)
!6430 = !DILocation(line: 370, column: 22, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6428, file: !647, line: 369, column: 33)
!6432 = !DILocation(line: 370, column: 9, scope: !6431)
!6433 = !DILocation(line: 0, scope: !6428)
!6434 = !DILocation(line: 375, column: 1, scope: !6419)
!6435 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !647, file: !647, line: 377, type: !6436, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6438)
!6436 = !DISubroutineType(types: !6437)
!6437 = !{!61, !755}
!6438 = !{!6439, !6440}
!6439 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6435, file: !647, line: 377, type: !755)
!6440 = !DILocalVariable(name: "int_no", scope: !6435, file: !647, line: 379, type: !4586)
!6441 = !DILocation(line: 0, scope: !6435)
!6442 = !DILocation(line: 379, column: 26, scope: !6435)
!6443 = !DILocation(line: 381, column: 16, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6435, file: !647, line: 381, column: 9)
!6445 = !DILocation(line: 381, column: 9, scope: !6435)
!6446 = !DILocation(line: 382, column: 16, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6444, file: !647, line: 381, column: 33)
!6448 = !DILocation(line: 382, column: 9, scope: !6447)
!6449 = !DILocation(line: 0, scope: !6444)
!6450 = !DILocation(line: 387, column: 1, scope: !6435)
!6451 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !647, file: !647, line: 390, type: !6452, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6454)
!6452 = !DISubroutineType(types: !6453)
!6453 = !{!61, !755, !210, !61}
!6454 = !{!6455, !6456, !6457, !6458, !6459}
!6455 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6451, file: !647, line: 390, type: !755)
!6456 = !DILocalVariable(name: "buffer", arg: 2, scope: !6451, file: !647, line: 390, type: !210)
!6457 = !DILocalVariable(name: "size", arg: 3, scope: !6451, file: !647, line: 390, type: !61)
!6458 = !DILocalVariable(name: "int_no", scope: !6451, file: !647, line: 392, type: !4586)
!6459 = !DILocalVariable(name: "index", scope: !6451, file: !647, line: 393, type: !61)
!6460 = !DILocation(line: 0, scope: !6451)
!6461 = !DILocation(line: 392, column: 26, scope: !6451)
!6462 = !DILocation(line: 395, column: 16, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6451, file: !647, line: 395, column: 9)
!6464 = !DILocation(line: 395, column: 9, scope: !6451)
!6465 = !DILocation(line: 401, column: 38, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !647, line: 400, column: 48)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !647, line: 400, column: 9)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !647, line: 400, column: 9)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !647, line: 399, column: 33)
!6470 = distinct !DILexicalBlock(scope: !6451, file: !647, line: 399, column: 9)
!6471 = !DILocation(line: 401, column: 13, scope: !6466)
!6472 = !DILocation(line: 401, column: 27, scope: !6466)
!6473 = !DILocation(line: 400, column: 44, scope: !6467)
!6474 = !DILocation(line: 400, column: 31, scope: !6467)
!6475 = !DILocation(line: 400, column: 9, scope: !6468)
!6476 = distinct !{!6476, !6475, !6477}
!6477 = !DILocation(line: 402, column: 9, scope: !6468)
!6478 = !DILocation(line: 406, column: 1, scope: !6451)
!6479 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !647, file: !647, line: 408, type: !6452, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6480)
!6480 = !{!6481, !6482, !6483, !6484, !6485, !6486}
!6481 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6479, file: !647, line: 408, type: !755)
!6482 = !DILocalVariable(name: "buffer", arg: 2, scope: !6479, file: !647, line: 408, type: !210)
!6483 = !DILocalVariable(name: "size", arg: 3, scope: !6479, file: !647, line: 408, type: !61)
!6484 = !DILocalVariable(name: "actual_size", scope: !6479, file: !647, line: 410, type: !61)
!6485 = !DILocalVariable(name: "receive_size", scope: !6479, file: !647, line: 410, type: !61)
!6486 = !DILocalVariable(name: "ch", scope: !6479, file: !647, line: 411, type: !6365)
!6487 = !DILocation(line: 0, scope: !6479)
!6488 = !DILocation(line: 410, column: 5, scope: !6479)
!6489 = !DILocation(line: 413, column: 10, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6479, file: !647, line: 413, column: 9)
!6491 = !DILocation(line: 413, column: 9, scope: !6479)
!6492 = !DILocation(line: 417, column: 17, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6479, file: !647, line: 417, column: 9)
!6494 = !DILocation(line: 417, column: 26, scope: !6493)
!6495 = !DILocation(line: 421, column: 30, scope: !6479)
!6496 = !DILocation(line: 421, column: 5, scope: !6479)
!6497 = !DILocation(line: 422, column: 9, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6479, file: !647, line: 422, column: 9)
!6499 = !DILocation(line: 422, column: 21, scope: !6498)
!6500 = !DILocation(line: 427, column: 5, scope: !6479)
!6501 = !DILocation(line: 429, column: 25, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6479, file: !647, line: 429, column: 9)
!6503 = !DILocation(line: 429, column: 22, scope: !6502)
!6504 = !DILocation(line: 429, column: 9, scope: !6479)
!6505 = !DILocation(line: 430, column: 14, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6502, file: !647, line: 429, column: 38)
!6507 = !DILocation(line: 431, column: 9, scope: !6506)
!6508 = !DILocation(line: 432, column: 5, scope: !6506)
!6509 = !DILocation(line: 435, column: 1, scope: !6479)
!6510 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !647, file: !647, line: 438, type: !6436, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6511)
!6511 = !{!6512, !6513}
!6512 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6510, file: !647, line: 438, type: !755)
!6513 = !DILocalVariable(name: "length", scope: !6510, file: !647, line: 440, type: !61)
!6514 = !DILocation(line: 0, scope: !6510)
!6515 = !DILocation(line: 440, column: 5, scope: !6510)
!6516 = !DILocation(line: 440, column: 14, scope: !6510)
!6517 = !DILocation(line: 442, column: 10, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6510, file: !647, line: 442, column: 9)
!6519 = !DILocation(line: 442, column: 9, scope: !6510)
!6520 = !DILocation(line: 446, column: 30, scope: !6510)
!6521 = !DILocation(line: 446, column: 5, scope: !6510)
!6522 = !DILocation(line: 447, column: 12, scope: !6510)
!6523 = !DILocation(line: 447, column: 5, scope: !6510)
!6524 = !DILocation(line: 448, column: 1, scope: !6510)
!6525 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !647, file: !647, line: 451, type: !6436, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6526)
!6526 = !{!6527, !6528}
!6527 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6525, file: !647, line: 451, type: !755)
!6528 = !DILocalVariable(name: "length", scope: !6525, file: !647, line: 453, type: !61)
!6529 = !DILocation(line: 0, scope: !6525)
!6530 = !DILocation(line: 453, column: 5, scope: !6525)
!6531 = !DILocation(line: 453, column: 14, scope: !6525)
!6532 = !DILocation(line: 455, column: 10, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6525, file: !647, line: 455, column: 9)
!6534 = !DILocation(line: 455, column: 9, scope: !6525)
!6535 = !DILocation(line: 459, column: 30, scope: !6525)
!6536 = !DILocation(line: 459, column: 5, scope: !6525)
!6537 = !DILocation(line: 461, column: 12, scope: !6525)
!6538 = !DILocation(line: 461, column: 5, scope: !6525)
!6539 = !DILocation(line: 462, column: 1, scope: !6525)
!6540 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !647, file: !647, line: 543, type: !6541, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!6136, !755, !725, !51}
!6543 = !{!6544, !6545, !6546, !6547}
!6544 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6540, file: !647, line: 543, type: !755)
!6545 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6540, file: !647, line: 544, type: !725)
!6546 = !DILocalVariable(name: "user_data", arg: 3, scope: !6540, file: !647, line: 545, type: !51)
!6547 = !DILocalVariable(name: "ch", scope: !6540, file: !647, line: 547, type: !6365)
!6548 = !DILocation(line: 0, scope: !6540)
!6549 = !DILocation(line: 549, column: 10, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6540, file: !647, line: 549, column: 9)
!6551 = !DILocation(line: 549, column: 9, scope: !6540)
!6552 = !DILocation(line: 556, column: 53, scope: !6540)
!6553 = !DILocation(line: 556, column: 62, scope: !6540)
!6554 = !DILocation(line: 557, column: 53, scope: !6540)
!6555 = !DILocation(line: 557, column: 63, scope: !6540)
!6556 = !DILocation(line: 558, column: 37, scope: !6540)
!6557 = !DILocation(line: 558, column: 54, scope: !6540)
!6558 = !DILocation(line: 560, column: 39, scope: !6540)
!6559 = !DILocation(line: 561, column: 39, scope: !6540)
!6560 = !DILocation(line: 560, column: 5, scope: !6540)
!6561 = !DILocation(line: 562, column: 5, scope: !6540)
!6562 = !DILocation(line: 564, column: 44, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6540, file: !647, line: 564, column: 9)
!6564 = !DILocation(line: 564, column: 9, scope: !6540)
!6565 = !DILocation(line: 565, column: 9, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6563, file: !647, line: 564, column: 59)
!6567 = !DILocation(line: 566, column: 5, scope: !6566)
!6568 = !DILocation(line: 567, column: 9, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6563, file: !647, line: 566, column: 12)
!6570 = !DILocation(line: 569, column: 10, scope: !6540)
!6571 = !DILocation(line: 570, column: 5, scope: !6540)
!6572 = !DILocation(line: 572, column: 5, scope: !6540)
!6573 = !DILocation(line: 572, column: 53, scope: !6540)
!6574 = !DILocation(line: 573, column: 35, scope: !6540)
!6575 = !DILocation(line: 573, column: 5, scope: !6540)
!6576 = !DILocation(line: 574, column: 5, scope: !6540)
!6577 = !DILocation(line: 575, column: 25, scope: !6540)
!6578 = !DILocation(line: 575, column: 5, scope: !6540)
!6579 = !DILocation(line: 578, column: 5, scope: !6540)
!6580 = !DILocation(line: 579, column: 1, scope: !6540)
!6581 = !DILocation(line: 0, scope: !751)
!6582 = !DILocation(line: 539, column: 12, scope: !751)
!6583 = !DILocation(line: 539, column: 5, scope: !751)
!6584 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !647, file: !647, line: 511, type: !154, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6585)
!6585 = !{!6586}
!6586 = !DILocalVariable(name: "callback_context", scope: !6587, file: !647, line: 514, type: !6589)
!6587 = distinct !DILexicalBlock(scope: !6588, file: !647, line: 513, column: 60)
!6588 = distinct !DILexicalBlock(scope: !6584, file: !647, line: 513, column: 9)
!6589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!6590 = !DILocation(line: 513, column: 42, scope: !6588)
!6591 = !DILocation(line: 513, column: 9, scope: !6584)
!6592 = !DILocation(line: 515, column: 39, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6587, file: !647, line: 515, column: 13)
!6594 = !DILocation(line: 515, column: 18, scope: !6593)
!6595 = !DILocation(line: 515, column: 13, scope: !6587)
!6596 = !DILocation(line: 516, column: 89, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6593, file: !647, line: 515, column: 49)
!6598 = !DILocation(line: 516, column: 13, scope: !6597)
!6599 = !DILocation(line: 517, column: 9, scope: !6597)
!6600 = !DILocation(line: 519, column: 32, scope: !6584)
!6601 = !DILocation(line: 519, column: 5, scope: !6584)
!6602 = !DILocation(line: 520, column: 1, scope: !6584)
!6603 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !647, file: !647, line: 523, type: !154, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6604)
!6604 = !{!6605}
!6605 = !DILocalVariable(name: "callback_context", scope: !6606, file: !647, line: 526, type: !6589)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !647, line: 525, column: 60)
!6607 = distinct !DILexicalBlock(scope: !6603, file: !647, line: 525, column: 9)
!6608 = !DILocation(line: 525, column: 42, scope: !6607)
!6609 = !DILocation(line: 525, column: 9, scope: !6603)
!6610 = !DILocation(line: 527, column: 39, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !647, line: 527, column: 13)
!6612 = !DILocation(line: 527, column: 18, scope: !6611)
!6613 = !DILocation(line: 527, column: 13, scope: !6606)
!6614 = !DILocation(line: 528, column: 89, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !647, line: 527, column: 49)
!6616 = !DILocation(line: 528, column: 13, scope: !6615)
!6617 = !DILocation(line: 529, column: 9, scope: !6615)
!6618 = !DILocation(line: 531, column: 32, scope: !6603)
!6619 = !DILocation(line: 531, column: 5, scope: !6603)
!6620 = !DILocation(line: 532, column: 1, scope: !6603)
!6621 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !647, file: !647, line: 464, type: !6622, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6624)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{null, !4586, !69}
!6624 = !{!6625, !6626, !6627, !6628, !6629, !6631}
!6625 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6621, file: !647, line: 464, type: !4586)
!6626 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6621, file: !647, line: 464, type: !69)
!6627 = !DILocalVariable(name: "avail_size", scope: !6621, file: !647, line: 466, type: !61)
!6628 = !DILocalVariable(name: "avail_space", scope: !6621, file: !647, line: 466, type: !61)
!6629 = !DILocalVariable(name: "dma_config", scope: !6621, file: !647, line: 467, type: !6630)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!6631 = !DILocalVariable(name: "ch", scope: !6621, file: !647, line: 468, type: !6365)
!6632 = !DILocation(line: 0, scope: !6621)
!6633 = !DILocation(line: 466, column: 5, scope: !6621)
!6634 = !DILocation(line: 471, column: 9, scope: !6621)
!6635 = !DILocation(line: 472, column: 9, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !647, line: 471, column: 16)
!6637 = distinct !DILexicalBlock(scope: !6621, file: !647, line: 471, column: 9)
!6638 = !DILocation(line: 473, column: 13, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6636, file: !647, line: 473, column: 13)
!6640 = !DILocation(line: 473, column: 39, scope: !6639)
!6641 = !DILocation(line: 473, column: 24, scope: !6639)
!6642 = !DILocation(line: 473, column: 13, scope: !6636)
!6643 = !DILocation(line: 478, column: 9, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6637, file: !647, line: 477, column: 12)
!6645 = !DILocation(line: 479, column: 13, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6644, file: !647, line: 479, column: 13)
!6647 = !DILocation(line: 479, column: 40, scope: !6646)
!6648 = !DILocation(line: 479, column: 77, scope: !6646)
!6649 = !DILocation(line: 479, column: 63, scope: !6646)
!6650 = !DILocation(line: 479, column: 25, scope: !6646)
!6651 = !DILocation(line: 479, column: 13, scope: !6644)
!6652 = !DILocation(line: 0, scope: !6637)
!6653 = !DILocation(line: 484, column: 1, scope: !6621)
!6654 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !647, file: !647, line: 486, type: !154, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6655)
!6655 = !{!6656}
!6656 = !DILocalVariable(name: "callback_context", scope: !6657, file: !647, line: 490, type: !6589)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !647, line: 489, column: 70)
!6658 = distinct !DILexicalBlock(scope: !6654, file: !647, line: 488, column: 9)
!6659 = !DILocation(line: 488, column: 43, scope: !6658)
!6660 = !DILocation(line: 488, column: 61, scope: !6658)
!6661 = !DILocation(line: 489, column: 14, scope: !6658)
!6662 = !DILocation(line: 489, column: 63, scope: !6658)
!6663 = !DILocation(line: 488, column: 9, scope: !6654)
!6664 = !DILocation(line: 491, column: 39, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6657, file: !647, line: 491, column: 13)
!6666 = !DILocation(line: 491, column: 18, scope: !6665)
!6667 = !DILocation(line: 491, column: 13, scope: !6657)
!6668 = !DILocation(line: 492, column: 88, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6665, file: !647, line: 491, column: 49)
!6670 = !DILocation(line: 492, column: 13, scope: !6669)
!6671 = !DILocation(line: 493, column: 9, scope: !6669)
!6672 = !DILocation(line: 495, column: 32, scope: !6654)
!6673 = !DILocation(line: 495, column: 5, scope: !6654)
!6674 = !DILocation(line: 496, column: 1, scope: !6654)
!6675 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !647, file: !647, line: 499, type: !154, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6676)
!6676 = !{!6677}
!6677 = !DILocalVariable(name: "callback_context", scope: !6678, file: !647, line: 503, type: !6589)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !647, line: 502, column: 70)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !647, line: 501, column: 9)
!6680 = !DILocation(line: 501, column: 43, scope: !6679)
!6681 = !DILocation(line: 501, column: 61, scope: !6679)
!6682 = !DILocation(line: 502, column: 14, scope: !6679)
!6683 = !DILocation(line: 502, column: 63, scope: !6679)
!6684 = !DILocation(line: 501, column: 9, scope: !6675)
!6685 = !DILocation(line: 504, column: 39, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6678, file: !647, line: 504, column: 13)
!6687 = !DILocation(line: 504, column: 18, scope: !6686)
!6688 = !DILocation(line: 504, column: 13, scope: !6678)
!6689 = !DILocation(line: 505, column: 88, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !647, line: 504, column: 49)
!6691 = !DILocation(line: 505, column: 13, scope: !6690)
!6692 = !DILocation(line: 506, column: 9, scope: !6690)
!6693 = !DILocation(line: 508, column: 32, scope: !6675)
!6694 = !DILocation(line: 508, column: 5, scope: !6675)
!6695 = !DILocation(line: 509, column: 1, scope: !6675)
!6696 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !647, file: !647, line: 582, type: !6697, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6699)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!6136, !755, !712}
!6699 = !{!6700, !6701}
!6700 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6696, file: !647, line: 582, type: !755)
!6701 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6696, file: !647, line: 582, type: !712)
!6702 = !DILocation(line: 0, scope: !6696)
!6703 = !DILocation(line: 584, column: 11, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6696, file: !647, line: 584, column: 9)
!6705 = !DILocation(line: 584, column: 46, scope: !6704)
!6706 = !DILocation(line: 588, column: 37, scope: !6696)
!6707 = !DILocation(line: 588, column: 50, scope: !6696)
!6708 = !DILocation(line: 588, column: 59, scope: !6696)
!6709 = !DILocation(line: 589, column: 12, scope: !6696)
!6710 = !DILocation(line: 589, column: 5, scope: !6696)
!6711 = !DILocation(line: 590, column: 1, scope: !6696)
!6712 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !647, file: !647, line: 608, type: !6713, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6717)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!6136, !755, !6715}
!6715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6716, size: 32)
!6716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!6717 = !{!6718, !6719}
!6718 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6712, file: !647, line: 608, type: !755)
!6719 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !6712, file: !647, line: 608, type: !6715)
!6720 = !DILocation(line: 0, scope: !6712)
!6721 = !DILocation(line: 610, column: 10, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6712, file: !647, line: 610, column: 9)
!6723 = !DILocation(line: 610, column: 9, scope: !6712)
!6724 = !DILocation(line: 614, column: 10, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6712, file: !647, line: 614, column: 9)
!6726 = !DILocation(line: 614, column: 9, scope: !6712)
!6727 = !DILocation(line: 618, column: 37, scope: !6712)
!6728 = !DILocation(line: 618, column: 56, scope: !6712)
!6729 = !DILocation(line: 619, column: 45, scope: !6712)
!6730 = !DILocation(line: 619, column: 12, scope: !6712)
!6731 = !DILocation(line: 620, column: 12, scope: !6712)
!6732 = !DILocation(line: 619, column: 5, scope: !6712)
!6733 = !DILocation(line: 621, column: 5, scope: !6712)
!6734 = !DILocation(line: 622, column: 5, scope: !6712)
!6735 = !DILocation(line: 623, column: 33, scope: !6712)
!6736 = !DILocation(line: 624, column: 50, scope: !6712)
!6737 = !DILocation(line: 625, column: 50, scope: !6712)
!6738 = !DILocation(line: 626, column: 50, scope: !6712)
!6739 = !DILocation(line: 627, column: 50, scope: !6712)
!6740 = !DILocation(line: 628, column: 33, scope: !6712)
!6741 = !DILocation(line: 623, column: 5, scope: !6712)
!6742 = !DILocation(line: 630, column: 50, scope: !6712)
!6743 = !DILocation(line: 631, column: 50, scope: !6712)
!6744 = !DILocation(line: 632, column: 50, scope: !6712)
!6745 = !DILocation(line: 629, column: 5, scope: !6712)
!6746 = !DILocation(line: 634, column: 5, scope: !6712)
!6747 = !DILocation(line: 635, column: 1, scope: !6712)
!6748 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !647, file: !647, line: 112, type: !6749, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6751)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!69, !6715}
!6751 = !{!6752}
!6752 = !DILocalVariable(name: "dma_config", arg: 1, scope: !6748, file: !647, line: 112, type: !6715)
!6753 = !DILocation(line: 0, scope: !6748)
!6754 = !DILocation(line: 114, column: 14, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6748, file: !647, line: 114, column: 9)
!6756 = !DILocation(line: 114, column: 9, scope: !6748)
!6757 = !DILocation(line: 117, column: 29, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6748, file: !647, line: 117, column: 9)
!6759 = !DILocation(line: 117, column: 14, scope: !6758)
!6760 = !DILocation(line: 117, column: 9, scope: !6748)
!6761 = !DILocation(line: 120, column: 21, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6748, file: !647, line: 120, column: 9)
!6763 = !DILocation(line: 120, column: 61, scope: !6762)
!6764 = !DILocation(line: 120, column: 47, scope: !6762)
!6765 = !DILocation(line: 120, column: 9, scope: !6748)
!6766 = !DILocation(line: 123, column: 61, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6748, file: !647, line: 123, column: 9)
!6768 = !DILocation(line: 123, column: 47, scope: !6767)
!6769 = !DILocation(line: 123, column: 9, scope: !6748)
!6770 = !DILocation(line: 126, column: 29, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6748, file: !647, line: 126, column: 9)
!6772 = !DILocation(line: 126, column: 14, scope: !6771)
!6773 = !DILocation(line: 126, column: 9, scope: !6748)
!6774 = !DILocation(line: 129, column: 21, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6748, file: !647, line: 129, column: 9)
!6776 = !DILocation(line: 129, column: 58, scope: !6775)
!6777 = !DILocation(line: 129, column: 44, scope: !6775)
!6778 = !DILocation(line: 129, column: 9, scope: !6748)
!6779 = !DILocation(line: 136, column: 1, scope: !6748)
!6780 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !647, file: !647, line: 182, type: !5992, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6781)
!6781 = !{!6782, !6783}
!6782 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !6780, file: !647, line: 182, type: !61)
!6783 = !DILocalVariable(name: "ticks_per_us", scope: !6780, file: !647, line: 184, type: !61)
!6784 = !DILocation(line: 0, scope: !6780)
!6785 = !DILocation(line: 186, column: 20, scope: !6780)
!6786 = !DILocation(line: 186, column: 39, scope: !6780)
!6787 = !DILocation(line: 188, column: 25, scope: !6780)
!6788 = !DILocation(line: 188, column: 5, scope: !6780)
!6789 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !647, file: !647, line: 637, type: !6287, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6790)
!6790 = !{!6791, !6792}
!6791 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6789, file: !647, line: 637, type: !755)
!6792 = !DILocalVariable(name: "int_no", scope: !6789, file: !647, line: 639, type: !4586)
!6793 = !DILocation(line: 0, scope: !6789)
!6794 = !DILocation(line: 641, column: 10, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6789, file: !647, line: 641, column: 9)
!6796 = !DILocation(line: 641, column: 9, scope: !6789)
!6797 = !DILocation(line: 645, column: 14, scope: !6789)
!6798 = !DILocation(line: 646, column: 5, scope: !6789)
!6799 = !DILocation(line: 648, column: 5, scope: !6789)
!6800 = !DILocation(line: 649, column: 1, scope: !6789)
!6801 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !647, file: !647, line: 651, type: !6802, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6804)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{!6136, !755, !54, !54, !54}
!6804 = !{!6805, !6806, !6807, !6808, !6809}
!6805 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6801, file: !647, line: 651, type: !755)
!6806 = !DILocalVariable(name: "xon", arg: 2, scope: !6801, file: !647, line: 652, type: !54)
!6807 = !DILocalVariable(name: "xoff", arg: 3, scope: !6801, file: !647, line: 653, type: !54)
!6808 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6801, file: !647, line: 654, type: !54)
!6809 = !DILocalVariable(name: "int_no", scope: !6801, file: !647, line: 656, type: !4586)
!6810 = !DILocation(line: 0, scope: !6801)
!6811 = !DILocation(line: 658, column: 10, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6801, file: !647, line: 658, column: 9)
!6813 = !DILocation(line: 658, column: 9, scope: !6801)
!6814 = !DILocation(line: 662, column: 14, scope: !6801)
!6815 = !DILocation(line: 663, column: 5, scope: !6801)
!6816 = !DILocation(line: 665, column: 5, scope: !6801)
!6817 = !DILocation(line: 666, column: 1, scope: !6801)
!6818 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !647, file: !647, line: 668, type: !6287, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6819)
!6819 = !{!6820, !6821}
!6820 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6818, file: !647, line: 668, type: !755)
!6821 = !DILocalVariable(name: "int_no", scope: !6818, file: !647, line: 670, type: !4586)
!6822 = !DILocation(line: 0, scope: !6818)
!6823 = !DILocation(line: 672, column: 10, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6818, file: !647, line: 672, column: 9)
!6825 = !DILocation(line: 672, column: 9, scope: !6818)
!6826 = !DILocation(line: 676, column: 14, scope: !6818)
!6827 = !DILocation(line: 677, column: 5, scope: !6818)
!6828 = !DILocation(line: 679, column: 5, scope: !6818)
!6829 = !DILocation(line: 680, column: 1, scope: !6818)
!6830 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !647, file: !647, line: 683, type: !6831, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6833)
!6831 = !DISubroutineType(types: !6832)
!6832 = !{!6136, !755, !61}
!6833 = !{!6834, !6835}
!6834 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6830, file: !647, line: 683, type: !755)
!6835 = !DILocalVariable(name: "timeout", arg: 2, scope: !6830, file: !647, line: 683, type: !61)
!6836 = !DILocation(line: 0, scope: !6830)
!6837 = !DILocation(line: 685, column: 10, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6830, file: !647, line: 685, column: 9)
!6839 = !DILocation(line: 685, column: 9, scope: !6830)
!6840 = !DILocation(line: 689, column: 19, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6830, file: !647, line: 689, column: 9)
!6842 = !DILocation(line: 0, scope: !6841)
!6843 = !DILocation(line: 696, column: 1, scope: !6830)
!6844 = distinct !DISubprogram(name: "hal_dwt_reset", scope: !763, file: !763, line: 47, type: !154, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !2004)
!6845 = !DILocation(line: 49, column: 16, scope: !6844)
!6846 = !DILocation(line: 50, column: 16, scope: !6844)
!6847 = !DILocation(line: 51, column: 16, scope: !6844)
!6848 = !DILocation(line: 52, column: 16, scope: !6844)
!6849 = !DILocation(line: 53, column: 16, scope: !6844)
!6850 = !DILocation(line: 54, column: 16, scope: !6844)
!6851 = !DILocation(line: 55, column: 16, scope: !6844)
!6852 = !DILocation(line: 56, column: 16, scope: !6844)
!6853 = !DILocation(line: 57, column: 20, scope: !6844)
!6854 = !DILocation(line: 58, column: 20, scope: !6844)
!6855 = !DILocation(line: 59, column: 20, scope: !6844)
!6856 = !DILocation(line: 60, column: 20, scope: !6844)
!6857 = !DILocation(line: 61, column: 1, scope: !6844)
!6858 = distinct !DISubprogram(name: "hal_dwt_init", scope: !763, file: !763, line: 62, type: !154, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !2004)
!6859 = !DILocation(line: 70, column: 22, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6858, file: !763, line: 70, column: 9)
!6861 = !DILocation(line: 70, column: 28, scope: !6860)
!6862 = !DILocation(line: 70, column: 9, scope: !6858)
!6863 = !DILocation(line: 72, column: 9, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !763, line: 70, column: 62)
!6865 = !DILocation(line: 75, column: 26, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6864, file: !763, line: 75, column: 13)
!6867 = !DILocation(line: 75, column: 32, scope: !6866)
!6868 = !DILocation(line: 75, column: 13, scope: !6864)
!6869 = !DILocation(line: 76, column: 30, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6866, file: !763, line: 75, column: 63)
!6871 = !DILocation(line: 77, column: 9, scope: !6870)
!6872 = !DILocation(line: 79, column: 28, scope: !6864)
!6873 = !DILocation(line: 79, column: 33, scope: !6864)
!6874 = !DILocation(line: 79, column: 21, scope: !6864)
!6875 = !DILocation(line: 83, column: 20, scope: !6864)
!6876 = !DILocation(line: 84, column: 20, scope: !6864)
!6877 = !DILocation(line: 85, column: 20, scope: !6864)
!6878 = !DILocation(line: 86, column: 20, scope: !6864)
!6879 = !DILocation(line: 92, column: 5, scope: !6864)
!6880 = !DILocation(line: 93, column: 1, scope: !6858)
!6881 = distinct !DISubprogram(name: "hal_dwt_request_watchpoint", scope: !763, file: !763, line: 120, type: !6882, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !6885)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!527, !61, !61, !61, !6884}
!6884 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_FUNC_TYPE", file: !766, line: 48, baseType: !765)
!6885 = !{!6886, !6887, !6888, !6889, !6890}
!6886 = !DILocalVariable(name: "index", arg: 1, scope: !6881, file: !763, line: 120, type: !61)
!6887 = !DILocalVariable(name: "addr_base", arg: 2, scope: !6881, file: !763, line: 120, type: !61)
!6888 = !DILocalVariable(name: "addr_mask", arg: 3, scope: !6881, file: !763, line: 120, type: !61)
!6889 = !DILocalVariable(name: "func", arg: 4, scope: !6881, file: !763, line: 120, type: !6884)
!6890 = !DILocalVariable(name: "offset", scope: !6881, file: !763, line: 122, type: !61)
!6891 = !DILocation(line: 0, scope: !6881)
!6892 = !DILocation(line: 129, column: 22, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6881, file: !763, line: 129, column: 9)
!6894 = !DILocation(line: 129, column: 28, scope: !6893)
!6895 = !DILocation(line: 129, column: 9, scope: !6881)
!6896 = !DILocation(line: 131, column: 23, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6898, file: !763, line: 131, column: 13)
!6898 = distinct !DILexicalBlock(scope: !6893, file: !763, line: 129, column: 62)
!6899 = !DILocation(line: 131, column: 20, scope: !6897)
!6900 = !DILocation(line: 131, column: 36, scope: !6897)
!6901 = !DILocation(line: 135, column: 33, scope: !6898)
!6902 = !DILocation(line: 138, column: 23, scope: !6898)
!6903 = !DILocation(line: 138, column: 33, scope: !6898)
!6904 = !DILocation(line: 139, column: 23, scope: !6898)
!6905 = !DILocation(line: 139, column: 33, scope: !6898)
!6906 = !DILocation(line: 140, column: 58, scope: !6898)
!6907 = !DILocation(line: 140, column: 40, scope: !6898)
!6908 = !DILocation(line: 140, column: 68, scope: !6898)
!6909 = !DILocation(line: 140, column: 97, scope: !6898)
!6910 = !DILocation(line: 140, column: 37, scope: !6898)
!6911 = !DILocation(line: 142, column: 9, scope: !6898)
!6912 = !DILocation(line: 0, scope: !6893)
!6913 = !DILocation(line: 146, column: 1, scope: !6881)
!6914 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !813, file: !813, line: 178, type: !6915, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !6917)
!6915 = !DISubroutineType(types: !6916)
!6916 = !{!58}
!6917 = !{!6918}
!6918 = !DILocalVariable(name: "suspend_bit", scope: !6914, file: !813, line: 181, type: !58)
!6919 = !DILocation(line: 0, scope: !6914)
!6920 = !DILocation(line: 182, column: 5, scope: !6914)
!6921 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !813, file: !813, line: 185, type: !6922, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !2004)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!193}
!6924 = !DILocation(line: 188, column: 4, scope: !6921)
!6925 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !813, file: !813, line: 191, type: !6922, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !2004)
!6926 = !DILocation(line: 194, column: 5, scope: !6925)
!6927 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !813, file: !813, line: 197, type: !6915, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !6928)
!6928 = !{!6929}
!6929 = !DILocalVariable(name: "cmd", scope: !6927, file: !813, line: 201, type: !58)
!6930 = !DILocation(line: 0, scope: !6927)
!6931 = !DILocation(line: 202, column: 5, scope: !6927)
!6932 = distinct !DISubprogram(name: "customer_flash_register", scope: !813, file: !813, line: 207, type: !6933, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !2004)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{!815}
!6935 = !DILocation(line: 209, column: 5, scope: !6932)
!6936 = distinct !DISubprogram(name: "gpio_mode_init", scope: !1924, file: !1924, line: 93, type: !154, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !6937)
!6937 = !{!6938, !6939}
!6938 = !DILocalVariable(name: "i", scope: !6936, file: !1924, line: 95, type: !61)
!6939 = !DILocalVariable(name: "mode_temp", scope: !6936, file: !1924, line: 98, type: !6940)
!6940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !6941)
!6941 = !{!6942}
!6942 = !DISubrange(count: 10)
!6943 = !DILocation(line: 98, column: 14, scope: !6936)
!6944 = !DILocation(line: 0, scope: !6936)
!6945 = !DILocation(line: 100, column: 5, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6936, file: !1924, line: 100, column: 5)
!6947 = !DILocation(line: 101, column: 9, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !1924, line: 100, column: 50)
!6949 = distinct !DILexicalBlock(scope: !6946, file: !1924, line: 100, column: 5)
!6950 = !DILocation(line: 100, column: 46, scope: !6949)
!6951 = !DILocation(line: 100, column: 19, scope: !6949)
!6952 = distinct !{!6952, !6945, !6953}
!6953 = !DILocation(line: 103, column: 5, scope: !6946)
!6954 = !DILocation(line: 106, column: 1, scope: !6936)
!6955 = distinct !DISubprogram(name: "gpio_oe_init", scope: !1924, file: !1924, line: 114, type: !154, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !6956)
!6956 = !{!6957, !6958}
!6957 = !DILocalVariable(name: "i", scope: !6955, file: !1924, line: 116, type: !61)
!6958 = !DILocalVariable(name: "oe_temp", scope: !6955, file: !1924, line: 119, type: !6959)
!6959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 96, elements: !1654)
!6960 = !DILocation(line: 0, scope: !6955)
!6961 = !DILocation(line: 122, column: 9, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !1924, line: 121, column: 48)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !1924, line: 121, column: 5)
!6964 = distinct !DILexicalBlock(scope: !6955, file: !1924, line: 121, column: 5)
!6965 = !DILocation(line: 125, column: 1, scope: !6955)
!6966 = distinct !DISubprogram(name: "gpio_ies_init", scope: !1924, file: !1924, line: 133, type: !154, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !6967)
!6967 = !{!6968, !6969}
!6968 = !DILocalVariable(name: "i", scope: !6966, file: !1924, line: 135, type: !61)
!6969 = !DILocalVariable(name: "ies_temp", scope: !6966, file: !1924, line: 138, type: !6959)
!6970 = !DILocation(line: 0, scope: !6966)
!6971 = !DILocation(line: 141, column: 9, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !1924, line: 140, column: 49)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !1924, line: 140, column: 5)
!6974 = distinct !DILexicalBlock(scope: !6966, file: !1924, line: 140, column: 5)
!6975 = !DILocation(line: 145, column: 33, scope: !6966)
!6976 = !DILocation(line: 146, column: 33, scope: !6966)
!6977 = !DILocation(line: 147, column: 33, scope: !6966)
!6978 = !DILocation(line: 150, column: 33, scope: !6966)
!6979 = !DILocation(line: 151, column: 33, scope: !6966)
!6980 = !DILocation(line: 152, column: 33, scope: !6966)
!6981 = !DILocation(line: 155, column: 35, scope: !6966)
!6982 = !DILocation(line: 156, column: 35, scope: !6966)
!6983 = !DILocation(line: 157, column: 35, scope: !6966)
!6984 = !DILocation(line: 160, column: 35, scope: !6966)
!6985 = !DILocation(line: 161, column: 35, scope: !6966)
!6986 = !DILocation(line: 162, column: 35, scope: !6966)
!6987 = !DILocation(line: 165, column: 35, scope: !6966)
!6988 = !DILocation(line: 166, column: 35, scope: !6966)
!6989 = !DILocation(line: 167, column: 35, scope: !6966)
!6990 = !DILocation(line: 170, column: 35, scope: !6966)
!6991 = !DILocation(line: 171, column: 35, scope: !6966)
!6992 = !DILocation(line: 172, column: 35, scope: !6966)
!6993 = !DILocation(line: 174, column: 1, scope: !6966)
!6994 = distinct !DISubprogram(name: "gpio_pull_up_init", scope: !1924, file: !1924, line: 182, type: !154, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !6995)
!6995 = !{!6996, !6997}
!6996 = !DILocalVariable(name: "i", scope: !6994, file: !1924, line: 184, type: !61)
!6997 = !DILocalVariable(name: "pull_up_temp", scope: !6994, file: !1924, line: 187, type: !6959)
!6998 = !DILocation(line: 0, scope: !6994)
!6999 = !DILocation(line: 190, column: 9, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !1924, line: 189, column: 53)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !1924, line: 189, column: 5)
!7002 = distinct !DILexicalBlock(scope: !6994, file: !1924, line: 189, column: 5)
!7003 = !DILocation(line: 194, column: 33, scope: !6994)
!7004 = !DILocation(line: 202, column: 33, scope: !6994)
!7005 = !DILocation(line: 210, column: 35, scope: !6994)
!7006 = !DILocation(line: 218, column: 35, scope: !6994)
!7007 = !DILocation(line: 226, column: 35, scope: !6994)
!7008 = !DILocation(line: 234, column: 35, scope: !6994)
!7009 = !DILocation(line: 241, column: 1, scope: !6994)
!7010 = distinct !DISubprogram(name: "gpio_pull_down_init", scope: !1924, file: !1924, line: 250, type: !154, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !7011)
!7011 = !{!7012, !7013}
!7012 = !DILocalVariable(name: "i", scope: !7010, file: !1924, line: 252, type: !61)
!7013 = !DILocalVariable(name: "pull_down_temp", scope: !7010, file: !1924, line: 255, type: !6959)
!7014 = !DILocation(line: 0, scope: !7010)
!7015 = !DILocation(line: 258, column: 9, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !1924, line: 257, column: 55)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !1924, line: 257, column: 5)
!7018 = distinct !DILexicalBlock(scope: !7010, file: !1924, line: 257, column: 5)
!7019 = !DILocation(line: 261, column: 1, scope: !7010)
!7020 = distinct !DISubprogram(name: "gpio_output_init", scope: !1924, file: !1924, line: 269, type: !154, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !7021)
!7021 = !{!7022, !7023}
!7022 = !DILocalVariable(name: "i", scope: !7020, file: !1924, line: 271, type: !61)
!7023 = !DILocalVariable(name: "output_temp", scope: !7020, file: !1924, line: 274, type: !6959)
!7024 = !DILocation(line: 0, scope: !7020)
!7025 = !DILocation(line: 277, column: 9, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !1924, line: 276, column: 52)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !1924, line: 276, column: 5)
!7028 = distinct !DILexicalBlock(scope: !7020, file: !1924, line: 276, column: 5)
!7029 = !DILocation(line: 281, column: 1, scope: !7020)
!7030 = distinct !DISubprogram(name: "bsp_ept_gpio_set_control_by_cm4", scope: !1924, file: !1924, line: 289, type: !154, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !2004)
!7031 = !DILocation(line: 292, column: 39, scope: !7030)
!7032 = !DILocation(line: 293, column: 39, scope: !7030)
!7033 = !DILocation(line: 294, column: 39, scope: !7030)
!7034 = !DILocation(line: 295, column: 1, scope: !7030)
!7035 = distinct !DISubprogram(name: "bsp_ept_gpio_setting_init", scope: !1924, file: !1924, line: 302, type: !154, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !2004)
!7036 = !DILocation(line: 304, column: 5, scope: !7035)
!7037 = !DILocation(line: 305, column: 5, scope: !7035)
!7038 = !DILocation(line: 306, column: 5, scope: !7035)
!7039 = !DILocation(line: 307, column: 5, scope: !7035)
!7040 = !DILocation(line: 308, column: 5, scope: !7035)
!7041 = !DILocation(line: 309, column: 5, scope: !7035)
!7042 = !DILocation(line: 310, column: 1, scope: !7035)
!7043 = distinct !DISubprogram(name: "xTaskGenericCreate", scope: !839, file: !839, line: 547, type: !7044, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7062)
!7044 = !DISubroutineType(types: !7045)
!7045 = !{!869, !7046, !330, !7048, !7049, !862, !7050, !7052, !7053}
!7046 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !7047, line: 77, baseType: !639)
!7047 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/cjson/GCC")
!7048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!7049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!7050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7051)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!7052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!7053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7054)
!7054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7055, size: 32)
!7055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7056)
!7056 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !847, line: 148, baseType: !7057)
!7057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !847, line: 143, size: 96, elements: !7058)
!7058 = !{!7059, !7060, !7061}
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !7057, file: !847, line: 145, baseType: !51, size: 32)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !7057, file: !847, line: 146, baseType: !61, size: 32, offset: 32)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !7057, file: !847, line: 147, baseType: !61, size: 32, offset: 64)
!7062 = !{!7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073}
!7063 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !7043, file: !839, line: 547, type: !7046)
!7064 = !DILocalVariable(name: "pcName", arg: 2, scope: !7043, file: !839, line: 547, type: !330)
!7065 = !DILocalVariable(name: "usStackDepth", arg: 3, scope: !7043, file: !839, line: 547, type: !7048)
!7066 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !7043, file: !839, line: 547, type: !7049)
!7067 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !7043, file: !839, line: 547, type: !862)
!7068 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !7043, file: !839, line: 547, type: !7050)
!7069 = !DILocalVariable(name: "puxStackBuffer", arg: 7, scope: !7043, file: !839, line: 547, type: !7052)
!7070 = !DILocalVariable(name: "xRegions", arg: 8, scope: !7043, file: !839, line: 547, type: !7053)
!7071 = !DILocalVariable(name: "xReturn", scope: !7043, file: !839, line: 549, type: !869)
!7072 = !DILocalVariable(name: "pxNewTCB", scope: !7043, file: !839, line: 550, type: !870)
!7073 = !DILocalVariable(name: "pxTopOfStack", scope: !7043, file: !839, line: 551, type: !866)
!7074 = !DILocation(line: 0, scope: !7043)
!7075 = !DILocation(line: 553, column: 2, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7043, file: !839, line: 553, column: 2)
!7077 = !DILocation(line: 553, column: 2, scope: !7043)
!7078 = !DILocation(line: 553, column: 2, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7076, file: !839, line: 553, column: 2)
!7080 = !DILocation(line: 554, column: 2, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7043, file: !839, line: 554, column: 2)
!7082 = !DILocation(line: 554, column: 2, scope: !7043)
!7083 = !DILocation(line: 554, column: 2, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7081, file: !839, line: 554, column: 2)
!7085 = !DILocation(line: 558, column: 13, scope: !7043)
!7086 = !DILocation(line: 560, column: 15, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7043, file: !839, line: 560, column: 6)
!7088 = !DILocation(line: 560, column: 6, scope: !7043)
!7089 = !DILocation(line: 596, column: 29, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !839, line: 595, column: 3)
!7091 = distinct !DILexicalBlock(scope: !7087, file: !839, line: 561, column: 2)
!7092 = !DILocation(line: 596, column: 41, scope: !7090)
!7093 = !DILocation(line: 596, column: 54, scope: !7090)
!7094 = !DILocation(line: 596, column: 37, scope: !7090)
!7095 = !DILocation(line: 597, column: 41, scope: !7090)
!7096 = !DILocation(line: 597, column: 82, scope: !7090)
!7097 = !DILocation(line: 597, column: 19, scope: !7090)
!7098 = !DILocation(line: 617, column: 3, scope: !7091)
!7099 = !DILocation(line: 629, column: 29, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7091, file: !839, line: 628, column: 3)
!7101 = !DILocation(line: 629, column: 14, scope: !7100)
!7102 = !DILocation(line: 629, column: 27, scope: !7100)
!7103 = !DILocation(line: 633, column: 32, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7091, file: !839, line: 633, column: 7)
!7105 = !DILocation(line: 633, column: 7, scope: !7091)
!7106 = !DILocation(line: 638, column: 19, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7104, file: !839, line: 634, column: 3)
!7108 = !DILocation(line: 639, column: 3, scope: !7107)
!7109 = !DILocation(line: 647, column: 3, scope: !7091)
!7110 = !DILocation(line: 649, column: 26, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7091, file: !839, line: 648, column: 3)
!7112 = !DILocation(line: 650, column: 8, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7111, file: !839, line: 650, column: 8)
!7114 = !DILocation(line: 650, column: 21, scope: !7113)
!7115 = !DILocation(line: 650, column: 8, scope: !7111)
!7116 = !DILocation(line: 654, column: 18, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7113, file: !839, line: 651, column: 4)
!7118 = !DILocation(line: 656, column: 9, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7117, file: !839, line: 656, column: 9)
!7120 = !DILocation(line: 656, column: 32, scope: !7119)
!7121 = !DILocation(line: 656, column: 9, scope: !7117)
!7122 = !DILocation(line: 661, column: 6, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7119, file: !839, line: 657, column: 5)
!7124 = !DILocation(line: 662, column: 5, scope: !7123)
!7125 = !DILocation(line: 673, column: 9, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !839, line: 673, column: 9)
!7127 = distinct !DILexicalBlock(scope: !7113, file: !839, line: 669, column: 4)
!7128 = !DILocation(line: 673, column: 27, scope: !7126)
!7129 = !DILocation(line: 673, column: 9, scope: !7127)
!7130 = !DILocation(line: 675, column: 10, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !839, line: 675, column: 10)
!7132 = distinct !DILexicalBlock(scope: !7126, file: !839, line: 674, column: 5)
!7133 = !DILocation(line: 675, column: 24, scope: !7131)
!7134 = !DILocation(line: 675, column: 35, scope: !7131)
!7135 = !DILocation(line: 675, column: 10, scope: !7132)
!7136 = !DILocation(line: 677, column: 20, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7131, file: !839, line: 676, column: 6)
!7138 = !DILocation(line: 678, column: 6, scope: !7137)
!7139 = !DILocation(line: 690, column: 16, scope: !7111)
!7140 = !DILocation(line: 695, column: 15, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7111, file: !839, line: 693, column: 4)
!7142 = !DILocation(line: 695, column: 27, scope: !7141)
!7143 = !DILocation(line: 700, column: 4, scope: !7111)
!7144 = !DILocation(line: 705, column: 3, scope: !7091)
!7145 = !DILocation(line: 715, column: 7, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !839, line: 715, column: 7)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !839, line: 714, column: 2)
!7148 = distinct !DILexicalBlock(scope: !7043, file: !839, line: 713, column: 6)
!7149 = !DILocation(line: 715, column: 25, scope: !7146)
!7150 = !DILocation(line: 715, column: 7, scope: !7147)
!7151 = !DILocation(line: 719, column: 8, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !839, line: 719, column: 8)
!7153 = distinct !DILexicalBlock(scope: !7146, file: !839, line: 716, column: 3)
!7154 = !DILocation(line: 719, column: 22, scope: !7152)
!7155 = !DILocation(line: 719, column: 33, scope: !7152)
!7156 = !DILocation(line: 719, column: 8, scope: !7153)
!7157 = !DILocation(line: 721, column: 5, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !839, line: 721, column: 5)
!7159 = distinct !DILexicalBlock(scope: !7152, file: !839, line: 720, column: 4)
!7160 = !{i64 2148474598}
!7161 = !{i64 2148474638}
!7162 = !DILocation(line: 722, column: 4, scope: !7159)
!7163 = !DILocation(line: 734, column: 2, scope: !7043)
!7164 = distinct !DISubprogram(name: "prvAllocateTCBAndStack", scope: !839, file: !839, line: 3021, type: !7165, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7167)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!870, !7048, !7052}
!7167 = !{!7168, !7169, !7170, !7171}
!7168 = !DILocalVariable(name: "usStackDepth", arg: 1, scope: !7164, file: !839, line: 3021, type: !7048)
!7169 = !DILocalVariable(name: "puxStackBuffer", arg: 2, scope: !7164, file: !839, line: 3021, type: !7052)
!7170 = !DILocalVariable(name: "pxNewTCB", scope: !7164, file: !839, line: 3023, type: !870)
!7171 = !DILocalVariable(name: "pxStack", scope: !7172, file: !839, line: 3051, type: !866)
!7172 = distinct !DILexicalBlock(scope: !7164, file: !839, line: 3050, column: 2)
!7173 = !DILocation(line: 0, scope: !7164)
!7174 = !DILocation(line: 3054, column: 31, scope: !7172)
!7175 = !DILocation(line: 0, scope: !7172)
!7176 = !DILocation(line: 3056, column: 15, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7172, file: !839, line: 3056, column: 7)
!7178 = !DILocation(line: 3056, column: 7, scope: !7172)
!7179 = !DILocation(line: 3060, column: 27, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7177, file: !839, line: 3057, column: 3)
!7181 = !DILocation(line: 3062, column: 17, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7180, file: !839, line: 3062, column: 8)
!7183 = !DILocation(line: 3062, column: 8, scope: !7180)
!7184 = !DILocation(line: 3071, column: 5, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7182, file: !839, line: 3068, column: 4)
!7186 = !DILocation(line: 3065, column: 15, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7182, file: !839, line: 3063, column: 4)
!7188 = !DILocation(line: 3065, column: 23, scope: !7187)
!7189 = !DILocation(line: 3060, column: 15, scope: !7180)
!7190 = !DILocation(line: 3087, column: 68, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !839, line: 3085, column: 3)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !839, line: 3082, column: 2)
!7193 = distinct !DILexicalBlock(scope: !7164, file: !839, line: 3081, column: 6)
!7194 = !DILocation(line: 3087, column: 92, scope: !7191)
!7195 = !DILocation(line: 3087, column: 13, scope: !7191)
!7196 = !DILocation(line: 3090, column: 2, scope: !7192)
!7197 = !DILocation(line: 3092, column: 2, scope: !7164)
!7198 = distinct !DISubprogram(name: "prvInitialiseTCBVariables", scope: !839, file: !839, line: 2802, type: !7199, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7202)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{null, !7201, !330, !862, !7053, !7048}
!7201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!7202 = !{!7203, !7204, !7205, !7206, !7207, !7208}
!7203 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !7198, file: !839, line: 2802, type: !7201)
!7204 = !DILocalVariable(name: "pcName", arg: 2, scope: !7198, file: !839, line: 2802, type: !330)
!7205 = !DILocalVariable(name: "uxPriority", arg: 3, scope: !7198, file: !839, line: 2802, type: !862)
!7206 = !DILocalVariable(name: "xRegions", arg: 4, scope: !7198, file: !839, line: 2802, type: !7053)
!7207 = !DILocalVariable(name: "usStackDepth", arg: 5, scope: !7198, file: !839, line: 2802, type: !7048)
!7208 = !DILocalVariable(name: "x", scope: !7198, file: !839, line: 2804, type: !862)
!7209 = !DILocation(line: 0, scope: !7198)
!7210 = !DILocation(line: 2807, column: 2, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7198, file: !839, line: 2807, column: 2)
!7212 = !DILocation(line: 2809, column: 28, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !839, line: 2808, column: 2)
!7214 = distinct !DILexicalBlock(scope: !7211, file: !839, line: 2807, column: 2)
!7215 = !DILocation(line: 2809, column: 3, scope: !7213)
!7216 = !DILocation(line: 2809, column: 26, scope: !7213)
!7217 = !DILocation(line: 2814, column: 7, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7213, file: !839, line: 2814, column: 7)
!7219 = !DILocation(line: 2814, column: 19, scope: !7218)
!7220 = !DILocation(line: 2814, column: 7, scope: !7213)
!7221 = distinct !{!7221, !7210, !7222}
!7222 = !DILocation(line: 2822, column: 2, scope: !7211)
!7223 = !DILocation(line: 2826, column: 2, scope: !7198)
!7224 = !DILocation(line: 2826, column: 51, scope: !7198)
!7225 = !DILocation(line: 2830, column: 6, scope: !7198)
!7226 = !DILocation(line: 2839, column: 9, scope: !7198)
!7227 = !DILocation(line: 2839, column: 20, scope: !7198)
!7228 = !DILocation(line: 2842, column: 10, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7198, file: !839, line: 2841, column: 2)
!7230 = !DILocation(line: 2842, column: 25, scope: !7229)
!7231 = !DILocation(line: 2843, column: 10, scope: !7229)
!7232 = !DILocation(line: 2843, column: 24, scope: !7229)
!7233 = !DILocation(line: 2847, column: 33, scope: !7198)
!7234 = !DILocation(line: 2847, column: 2, scope: !7198)
!7235 = !DILocation(line: 2848, column: 33, scope: !7198)
!7236 = !DILocation(line: 2848, column: 2, scope: !7198)
!7237 = !DILocation(line: 2852, column: 2, scope: !7198)
!7238 = !DILocation(line: 2855, column: 2, scope: !7198)
!7239 = !DILocation(line: 2856, column: 2, scope: !7198)
!7240 = !DILocation(line: 2889, column: 10, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7198, file: !839, line: 2888, column: 2)
!7242 = !DILocation(line: 2889, column: 26, scope: !7241)
!7243 = !DILocation(line: 2890, column: 10, scope: !7241)
!7244 = !DILocation(line: 2890, column: 23, scope: !7241)
!7245 = !DILocation(line: 2900, column: 1, scope: !7198)
!7246 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !839, file: !839, line: 2918, type: !154, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7247)
!7247 = !{!7248}
!7248 = !DILocalVariable(name: "uxPriority", scope: !7246, file: !839, line: 2920, type: !862)
!7249 = !DILocation(line: 0, scope: !7246)
!7250 = !DILocation(line: 2922, column: 2, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7246, file: !839, line: 2922, column: 2)
!7252 = !DILocation(line: 2924, column: 23, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !839, line: 2923, column: 2)
!7254 = distinct !DILexicalBlock(scope: !7251, file: !839, line: 2922, column: 2)
!7255 = !DILocation(line: 2924, column: 3, scope: !7253)
!7256 = !DILocation(line: 2922, column: 101, scope: !7254)
!7257 = !DILocation(line: 2922, column: 51, scope: !7254)
!7258 = distinct !{!7258, !7250, !7259}
!7259 = !DILocation(line: 2925, column: 2, scope: !7251)
!7260 = !DILocation(line: 2927, column: 2, scope: !7246)
!7261 = !DILocation(line: 2928, column: 2, scope: !7246)
!7262 = !DILocation(line: 2929, column: 2, scope: !7246)
!7263 = !DILocation(line: 2933, column: 3, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7246, file: !839, line: 2932, column: 2)
!7265 = !DILocation(line: 2939, column: 3, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7246, file: !839, line: 2938, column: 2)
!7267 = !DILocation(line: 2945, column: 20, scope: !7246)
!7268 = !DILocation(line: 2946, column: 28, scope: !7246)
!7269 = !DILocation(line: 2947, column: 1, scope: !7246)
!7270 = distinct !DISubprogram(name: "vTaskDelete", scope: !839, file: !839, line: 740, type: !7271, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7273)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{null, !868}
!7273 = !{!7274, !7275}
!7274 = !DILocalVariable(name: "xTaskToDelete", arg: 1, scope: !7270, file: !839, line: 740, type: !868)
!7275 = !DILocalVariable(name: "pxTCB", scope: !7270, file: !839, line: 742, type: !870)
!7276 = !DILocation(line: 0, scope: !7270)
!7277 = !DILocation(line: 744, column: 3, scope: !7270)
!7278 = !DILocation(line: 748, column: 12, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7270, file: !839, line: 745, column: 3)
!7280 = !DILocation(line: 754, column: 32, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7279, file: !839, line: 754, column: 8)
!7282 = !DILocation(line: 754, column: 8, scope: !7281)
!7283 = !DILocation(line: 754, column: 53, scope: !7281)
!7284 = !DILocation(line: 754, column: 8, scope: !7279)
!7285 = !DILocation(line: 756, column: 5, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7287, file: !839, line: 756, column: 5)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !839, line: 756, column: 5)
!7288 = distinct !DILexicalBlock(scope: !7281, file: !839, line: 755, column: 4)
!7289 = !DILocation(line: 756, column: 5, scope: !7287)
!7290 = !DILocation(line: 756, column: 5, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7286, file: !839, line: 756, column: 5)
!7292 = !DILocation(line: 764, column: 8, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7279, file: !839, line: 764, column: 8)
!7294 = !DILocation(line: 764, column: 62, scope: !7293)
!7295 = !DILocation(line: 764, column: 8, scope: !7279)
!7296 = !DILocation(line: 766, column: 14, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7293, file: !839, line: 765, column: 4)
!7298 = !DILocation(line: 767, column: 4, scope: !7297)
!7299 = !DILocation(line: 773, column: 4, scope: !7279)
!7300 = !DILocation(line: 778, column: 4, scope: !7279)
!7301 = !DILocation(line: 782, column: 16, scope: !7279)
!7302 = !DILocation(line: 786, column: 3, scope: !7270)
!7303 = !DILocation(line: 790, column: 7, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7270, file: !839, line: 790, column: 7)
!7305 = !DILocation(line: 790, column: 25, scope: !7304)
!7306 = !DILocation(line: 790, column: 7, scope: !7270)
!7307 = !DILocation(line: 792, column: 17, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !839, line: 792, column: 8)
!7309 = distinct !DILexicalBlock(scope: !7304, file: !839, line: 791, column: 3)
!7310 = !DILocation(line: 792, column: 14, scope: !7308)
!7311 = !DILocation(line: 792, column: 8, scope: !7309)
!7312 = !DILocation(line: 794, column: 5, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !839, line: 794, column: 5)
!7314 = distinct !DILexicalBlock(scope: !7308, file: !839, line: 793, column: 4)
!7315 = !DILocation(line: 794, column: 5, scope: !7314)
!7316 = !DILocation(line: 794, column: 5, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7313, file: !839, line: 794, column: 5)
!7318 = !DILocation(line: 802, column: 5, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7314, file: !839, line: 802, column: 5)
!7320 = !{i64 2148476004}
!7321 = !{i64 2148476044}
!7322 = !DILocation(line: 803, column: 4, scope: !7314)
!7323 = !DILocation(line: 808, column: 5, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7308, file: !839, line: 805, column: 4)
!7325 = !DILocation(line: 810, column: 6, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7324, file: !839, line: 809, column: 5)
!7327 = !DILocation(line: 812, column: 5, scope: !7324)
!7328 = !DILocation(line: 815, column: 2, scope: !7270)
!7329 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !839, file: !839, line: 3267, type: !154, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7330)
!7330 = !{!7331}
!7331 = !DILocalVariable(name: "pxTCB", scope: !7329, file: !839, line: 3269, type: !870)
!7332 = !DILocation(line: 3271, column: 6, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7329, file: !839, line: 3271, column: 6)
!7334 = !DILocation(line: 3271, column: 6, scope: !7329)
!7335 = !DILocation(line: 3286, column: 27, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7333, file: !839, line: 3281, column: 2)
!7337 = !DILocation(line: 0, scope: !7329)
!7338 = !DILocation(line: 3287, column: 26, scope: !7336)
!7339 = !DILocation(line: 0, scope: !7333)
!7340 = !DILocation(line: 3289, column: 1, scope: !7329)
!7341 = distinct !DISubprogram(name: "vTaskDelayUntil", scope: !839, file: !839, line: 822, type: !7342, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7347)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{null, !7344, !7346}
!7344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7345)
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!7347 = !{!7348, !7349, !7350, !7351, !7352, !7353}
!7348 = !DILocalVariable(name: "pxPreviousWakeTime", arg: 1, scope: !7341, file: !839, line: 822, type: !7344)
!7349 = !DILocalVariable(name: "xTimeIncrement", arg: 2, scope: !7341, file: !839, line: 822, type: !7346)
!7350 = !DILocalVariable(name: "xTimeToWake", scope: !7341, file: !839, line: 824, type: !884)
!7351 = !DILocalVariable(name: "xAlreadyYielded", scope: !7341, file: !839, line: 825, type: !869)
!7352 = !DILocalVariable(name: "xShouldDelay", scope: !7341, file: !839, line: 825, type: !869)
!7353 = !DILocalVariable(name: "xConstTickCount", scope: !7354, file: !839, line: 835, type: !7346)
!7354 = distinct !DILexicalBlock(scope: !7341, file: !839, line: 832, column: 3)
!7355 = !DILocation(line: 0, scope: !7341)
!7356 = !DILocation(line: 827, column: 3, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7341, file: !839, line: 827, column: 3)
!7358 = !DILocation(line: 827, column: 3, scope: !7341)
!7359 = !DILocation(line: 827, column: 3, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7357, file: !839, line: 827, column: 3)
!7361 = !DILocation(line: 828, column: 3, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7341, file: !839, line: 828, column: 3)
!7363 = !DILocation(line: 828, column: 3, scope: !7341)
!7364 = !DILocation(line: 828, column: 3, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !839, line: 828, column: 3)
!7366 = !DILocation(line: 829, column: 3, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7341, file: !839, line: 829, column: 3)
!7368 = !DILocation(line: 829, column: 3, scope: !7341)
!7369 = !DILocation(line: 829, column: 3, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7367, file: !839, line: 829, column: 3)
!7371 = !DILocation(line: 831, column: 3, scope: !7341)
!7372 = !DILocation(line: 835, column: 39, scope: !7354)
!7373 = !DILocation(line: 0, scope: !7354)
!7374 = !DILocation(line: 838, column: 18, scope: !7354)
!7375 = !DILocation(line: 838, column: 38, scope: !7354)
!7376 = !DILocation(line: 840, column: 24, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7354, file: !839, line: 840, column: 8)
!7378 = !DILocation(line: 0, scope: !7377)
!7379 = !DILocation(line: 840, column: 8, scope: !7354)
!7380 = !DILocation(line: 847, column: 47, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !839, line: 847, column: 9)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !839, line: 841, column: 4)
!7383 = !DILocation(line: 861, column: 47, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !839, line: 861, column: 9)
!7385 = distinct !DILexicalBlock(scope: !7377, file: !839, line: 857, column: 4)
!7386 = !DILocation(line: 872, column: 24, scope: !7354)
!7387 = !DILocation(line: 874, column: 8, scope: !7354)
!7388 = !DILocation(line: 880, column: 26, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7390, file: !839, line: 880, column: 9)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !839, line: 875, column: 4)
!7391 = distinct !DILexicalBlock(scope: !7354, file: !839, line: 874, column: 8)
!7392 = !DILocation(line: 880, column: 40, scope: !7389)
!7393 = !DILocation(line: 880, column: 9, scope: !7389)
!7394 = !DILocation(line: 880, column: 61, scope: !7389)
!7395 = !DILocation(line: 880, column: 9, scope: !7390)
!7396 = !DILocation(line: 885, column: 6, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7389, file: !839, line: 881, column: 5)
!7398 = !DILocation(line: 886, column: 5, scope: !7397)
!7399 = !DILocation(line: 892, column: 5, scope: !7390)
!7400 = !DILocation(line: 893, column: 4, scope: !7390)
!7401 = !DILocation(line: 899, column: 21, scope: !7341)
!7402 = !DILocation(line: 903, column: 23, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7341, file: !839, line: 903, column: 7)
!7404 = !DILocation(line: 903, column: 7, scope: !7341)
!7405 = !DILocation(line: 905, column: 4, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !839, line: 905, column: 4)
!7407 = distinct !DILexicalBlock(scope: !7403, file: !839, line: 904, column: 3)
!7408 = !{i64 2148477242}
!7409 = !{i64 2148477282}
!7410 = !DILocation(line: 906, column: 3, scope: !7407)
!7411 = !DILocation(line: 911, column: 2, scope: !7341)
!7412 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !839, file: !839, line: 1628, type: !154, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !2004)
!7413 = !DILocation(line: 1634, column: 2, scope: !7412)
!7414 = !DILocation(line: 1635, column: 1, scope: !7412)
!7415 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !839, file: !839, line: 2991, type: !7416, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7418)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{null, !7346}
!7418 = !{!7419}
!7419 = !DILocalVariable(name: "xTimeToWake", arg: 1, scope: !7415, file: !839, line: 2991, type: !7346)
!7420 = !DILocation(line: 0, scope: !7415)
!7421 = !DILocation(line: 2994, column: 2, scope: !7415)
!7422 = !DILocation(line: 2996, column: 20, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7415, file: !839, line: 2996, column: 6)
!7424 = !DILocation(line: 2996, column: 18, scope: !7423)
!7425 = !DILocation(line: 2996, column: 6, scope: !7415)
!7426 = !DILocation(line: 2999, column: 16, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7423, file: !839, line: 2997, column: 2)
!7428 = !DILocation(line: 2999, column: 46, scope: !7427)
!7429 = !DILocation(line: 2999, column: 60, scope: !7427)
!7430 = !DILocation(line: 2999, column: 3, scope: !7427)
!7431 = !DILocation(line: 3000, column: 2, scope: !7427)
!7432 = !DILocation(line: 3004, column: 16, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7423, file: !839, line: 3002, column: 2)
!7434 = !DILocation(line: 3004, column: 38, scope: !7433)
!7435 = !DILocation(line: 3004, column: 52, scope: !7433)
!7436 = !DILocation(line: 3004, column: 3, scope: !7433)
!7437 = !DILocation(line: 3009, column: 21, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7433, file: !839, line: 3009, column: 7)
!7439 = !DILocation(line: 3009, column: 19, scope: !7438)
!7440 = !DILocation(line: 3009, column: 7, scope: !7433)
!7441 = !DILocation(line: 3011, column: 25, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !839, line: 3010, column: 3)
!7443 = !DILocation(line: 3012, column: 3, scope: !7442)
!7444 = !DILocation(line: 3018, column: 1, scope: !7415)
!7445 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !839, file: !839, line: 1666, type: !7446, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7448)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{!869}
!7448 = !{!7449, !7450}
!7449 = !DILocalVariable(name: "pxTCB", scope: !7445, file: !839, line: 1668, type: !870)
!7450 = !DILocalVariable(name: "xAlreadyYielded", scope: !7445, file: !839, line: 1669, type: !869)
!7451 = !DILocation(line: 0, scope: !7445)
!7452 = !DILocation(line: 1673, column: 2, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7445, file: !839, line: 1673, column: 2)
!7454 = !DILocation(line: 1673, column: 2, scope: !7445)
!7455 = !DILocation(line: 1673, column: 2, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7453, file: !839, line: 1673, column: 2)
!7457 = !DILocation(line: 1680, column: 2, scope: !7445)
!7458 = !DILocation(line: 1682, column: 3, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7445, file: !839, line: 1681, column: 2)
!7460 = !DILocation(line: 1684, column: 7, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7459, file: !839, line: 1684, column: 7)
!7462 = !DILocation(line: 1684, column: 28, scope: !7461)
!7463 = !DILocation(line: 1684, column: 7, scope: !7459)
!7464 = !DILocation(line: 1686, column: 8, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !839, line: 1686, column: 8)
!7466 = distinct !DILexicalBlock(scope: !7461, file: !839, line: 1685, column: 3)
!7467 = !DILocation(line: 1686, column: 31, scope: !7465)
!7468 = !DILocation(line: 1686, column: 8, scope: !7466)
!7469 = !DILocation(line: 1690, column: 12, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7465, file: !839, line: 1687, column: 4)
!7471 = !DILocation(line: 1690, column: 5, scope: !7470)
!7472 = !DILocation(line: 1692, column: 26, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7470, file: !839, line: 1691, column: 5)
!7474 = !DILocation(line: 1693, column: 39, scope: !7473)
!7475 = !DILocation(line: 1693, column: 15, scope: !7473)
!7476 = !DILocation(line: 1694, column: 39, scope: !7473)
!7477 = !DILocation(line: 1694, column: 15, scope: !7473)
!7478 = !DILocation(line: 1695, column: 6, scope: !7473)
!7479 = !DILocation(line: 1699, column: 17, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7473, file: !839, line: 1699, column: 10)
!7481 = !DILocation(line: 1699, column: 31, scope: !7480)
!7482 = !DILocation(line: 1699, column: 45, scope: !7480)
!7483 = !DILocation(line: 1699, column: 28, scope: !7480)
!7484 = !DILocation(line: 1699, column: 10, scope: !7473)
!7485 = !DILocation(line: 1701, column: 21, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7480, file: !839, line: 1700, column: 6)
!7487 = !DILocation(line: 1702, column: 6, scope: !7486)
!7488 = distinct !{!7488, !7471, !7489}
!7489 = !DILocation(line: 1707, column: 5, scope: !7470)
!7490 = !DILocation(line: 1713, column: 9, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7470, file: !839, line: 1713, column: 9)
!7492 = !DILocation(line: 1713, column: 23, scope: !7491)
!7493 = !DILocation(line: 1713, column: 9, scope: !7470)
!7494 = !DILocation(line: 1715, column: 13, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7491, file: !839, line: 1714, column: 5)
!7496 = !DILocation(line: 1715, column: 27, scope: !7495)
!7497 = !DILocation(line: 1715, column: 6, scope: !7495)
!7498 = !DILocation(line: 1717, column: 11, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !839, line: 1717, column: 11)
!7500 = distinct !DILexicalBlock(scope: !7495, file: !839, line: 1716, column: 6)
!7501 = !DILocation(line: 1717, column: 32, scope: !7499)
!7502 = !DILocation(line: 1717, column: 11, scope: !7500)
!7503 = !DILocation(line: 1719, column: 22, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7499, file: !839, line: 1718, column: 7)
!7505 = !DILocation(line: 1720, column: 7, scope: !7504)
!7506 = !DILocation(line: 1725, column: 7, scope: !7500)
!7507 = distinct !{!7507, !7497, !7508}
!7508 = !DILocation(line: 1726, column: 6, scope: !7495)
!7509 = !DILocation(line: 1733, column: 9, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7470, file: !839, line: 1733, column: 9)
!7511 = !DILocation(line: 1733, column: 23, scope: !7510)
!7512 = !DILocation(line: 1733, column: 9, scope: !7470)
!7513 = !DILocation(line: 1740, column: 6, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !839, line: 1740, column: 6)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !839, line: 1734, column: 5)
!7516 = !{i64 2148486888}
!7517 = !{i64 2148486928}
!7518 = !DILocation(line: 1741, column: 5, scope: !7515)
!7519 = !DILocation(line: 1753, column: 2, scope: !7445)
!7520 = !DILocation(line: 1755, column: 2, scope: !7445)
!7521 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !839, file: !839, line: 1934, type: !7446, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7522)
!7522 = !{!7523, !7524, !7525, !7526, !7530}
!7523 = !DILocalVariable(name: "pxTCB", scope: !7521, file: !839, line: 1936, type: !870)
!7524 = !DILocalVariable(name: "xItemValue", scope: !7521, file: !839, line: 1937, type: !884)
!7525 = !DILocalVariable(name: "xSwitchRequired", scope: !7521, file: !839, line: 1938, type: !869)
!7526 = !DILocalVariable(name: "xConstTickCount", scope: !7527, file: !839, line: 1953, type: !7346)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !839, line: 1950, column: 3)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !839, line: 1945, column: 2)
!7529 = distinct !DILexicalBlock(scope: !7521, file: !839, line: 1944, column: 6)
!7530 = !DILocalVariable(name: "pxTemp", scope: !7531, file: !839, line: 1957, type: !905)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !839, line: 1957, column: 5)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !839, line: 1956, column: 4)
!7533 = distinct !DILexicalBlock(scope: !7527, file: !839, line: 1955, column: 8)
!7534 = !DILocation(line: 0, scope: !7521)
!7535 = !DILocation(line: 1944, column: 6, scope: !7529)
!7536 = !DILocation(line: 1944, column: 27, scope: !7529)
!7537 = !DILocation(line: 1944, column: 6, scope: !7521)
!7538 = !DILocation(line: 1948, column: 3, scope: !7528)
!7539 = !DILocation(line: 1953, column: 39, scope: !7527)
!7540 = !DILocation(line: 0, scope: !7527)
!7541 = !DILocation(line: 1955, column: 24, scope: !7533)
!7542 = !DILocation(line: 1955, column: 8, scope: !7527)
!7543 = !DILocation(line: 1957, column: 5, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7531, file: !839, line: 1957, column: 5)
!7545 = !DILocation(line: 1957, column: 5, scope: !7531)
!7546 = !DILocation(line: 1957, column: 5, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7544, file: !839, line: 1957, column: 5)
!7548 = !DILocation(line: 0, scope: !7531)
!7549 = !DILocation(line: 1958, column: 4, scope: !7532)
!7550 = !DILocation(line: 1968, column: 27, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7527, file: !839, line: 1968, column: 8)
!7552 = !DILocation(line: 1968, column: 24, scope: !7551)
!7553 = !DILocation(line: 1968, column: 8, scope: !7527)
!7554 = !DILocation(line: 1972, column: 10, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !839, line: 1972, column: 10)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !839, line: 1971, column: 5)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !839, line: 1970, column: 5)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !839, line: 1970, column: 5)
!7559 = distinct !DILexicalBlock(scope: !7551, file: !839, line: 1969, column: 4)
!7560 = !DILocation(line: 1972, column: 10, scope: !7556)
!7561 = !DILocation(line: 1988, column: 27, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7555, file: !839, line: 1983, column: 6)
!7563 = !DILocation(line: 1989, column: 20, scope: !7562)
!7564 = !DILocation(line: 1991, column: 27, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !839, line: 1991, column: 11)
!7566 = !DILocation(line: 1991, column: 11, scope: !7562)
!7567 = !DILocation(line: 2007, column: 16, scope: !7562)
!7568 = !DILocation(line: 2011, column: 11, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7562, file: !839, line: 2011, column: 11)
!7570 = !DILocation(line: 2011, column: 65, scope: !7569)
!7571 = !DILocation(line: 2011, column: 11, scope: !7562)
!7572 = !DILocation(line: 2013, column: 17, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7569, file: !839, line: 2012, column: 7)
!7574 = !DILocation(line: 2014, column: 7, scope: !7573)
!7575 = !DILocation(line: 2022, column: 7, scope: !7562)
!7576 = !DILocation(line: 2032, column: 19, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !839, line: 2032, column: 12)
!7578 = distinct !DILexicalBlock(scope: !7562, file: !839, line: 2027, column: 7)
!7579 = !DILocation(line: 2032, column: 33, scope: !7577)
!7580 = !DILocation(line: 2032, column: 47, scope: !7577)
!7581 = !DILocation(line: 2032, column: 30, scope: !7577)
!7582 = !DILocation(line: 2032, column: 12, scope: !7578)
!7583 = distinct !{!7583, !7584, !7585}
!7584 = !DILocation(line: 1970, column: 5, scope: !7558)
!7585 = !DILocation(line: 2043, column: 5, scope: !7558)
!7586 = !DILocation(line: 0, scope: !7555)
!7587 = !DILocation(line: 2052, column: 8, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !839, line: 2052, column: 8)
!7589 = distinct !DILexicalBlock(scope: !7528, file: !839, line: 2051, column: 3)
!7590 = !DILocation(line: 1938, column: 12, scope: !7521)
!7591 = !DILocation(line: 2052, column: 86, scope: !7588)
!7592 = !DILocation(line: 2052, column: 8, scope: !7589)
!7593 = !DILocation(line: 2080, column: 3, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7529, file: !839, line: 2079, column: 2)
!7595 = !DILocation(line: 2093, column: 7, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !839, line: 2093, column: 7)
!7597 = distinct !DILexicalBlock(scope: !7521, file: !839, line: 2092, column: 2)
!7598 = !DILocation(line: 2093, column: 21, scope: !7596)
!7599 = !DILocation(line: 2093, column: 7, scope: !7597)
!7600 = !DILocation(line: 2104, column: 2, scope: !7521)
!7601 = distinct !DISubprogram(name: "vTaskDelay", scope: !839, file: !839, line: 918, type: !7416, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7602)
!7602 = !{!7603, !7604, !7605}
!7603 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !7601, file: !839, line: 918, type: !7346)
!7604 = !DILocalVariable(name: "xTimeToWake", scope: !7601, file: !839, line: 920, type: !884)
!7605 = !DILocalVariable(name: "xAlreadyYielded", scope: !7601, file: !839, line: 921, type: !869)
!7606 = !DILocation(line: 0, scope: !7601)
!7607 = !DILocation(line: 925, column: 21, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7601, file: !839, line: 925, column: 7)
!7609 = !DILocation(line: 925, column: 7, scope: !7601)
!7610 = !DILocation(line: 927, column: 4, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !839, line: 927, column: 4)
!7612 = distinct !DILexicalBlock(scope: !7608, file: !839, line: 926, column: 3)
!7613 = !DILocation(line: 927, column: 4, scope: !7612)
!7614 = !DILocation(line: 927, column: 4, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7611, file: !839, line: 927, column: 4)
!7616 = !DILocation(line: 928, column: 4, scope: !7612)
!7617 = !DILocation(line: 942, column: 19, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7612, file: !839, line: 929, column: 4)
!7619 = !DILocation(line: 942, column: 30, scope: !7618)
!7620 = !DILocation(line: 947, column: 26, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7618, file: !839, line: 947, column: 9)
!7622 = !DILocation(line: 947, column: 40, scope: !7621)
!7623 = !DILocation(line: 947, column: 9, scope: !7621)
!7624 = !DILocation(line: 947, column: 61, scope: !7621)
!7625 = !DILocation(line: 947, column: 9, scope: !7618)
!7626 = !DILocation(line: 952, column: 6, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7621, file: !839, line: 948, column: 5)
!7628 = !DILocation(line: 953, column: 5, scope: !7627)
!7629 = !DILocation(line: 958, column: 5, scope: !7618)
!7630 = !DILocation(line: 960, column: 22, scope: !7612)
!7631 = !DILocation(line: 961, column: 3, scope: !7612)
!7632 = !DILocation(line: 969, column: 7, scope: !7601)
!7633 = !DILocation(line: 971, column: 4, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !839, line: 971, column: 4)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !839, line: 970, column: 3)
!7636 = distinct !DILexicalBlock(scope: !7601, file: !839, line: 969, column: 7)
!7637 = !{i64 2148478011}
!7638 = !{i64 2148478051}
!7639 = !DILocation(line: 972, column: 3, scope: !7635)
!7640 = !DILocation(line: 977, column: 2, scope: !7601)
!7641 = distinct !DISubprogram(name: "eTaskGetState", scope: !839, file: !839, line: 984, type: !7642, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7645)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{!7644, !868}
!7644 = !DIDerivedType(tag: DW_TAG_typedef, name: "eTaskState", file: !847, line: 119, baseType: !846)
!7645 = !{!7646, !7647, !7648, !7649}
!7646 = !DILocalVariable(name: "xTask", arg: 1, scope: !7641, file: !839, line: 984, type: !868)
!7647 = !DILocalVariable(name: "eReturn", scope: !7641, file: !839, line: 986, type: !7644)
!7648 = !DILocalVariable(name: "pxStateList", scope: !7641, file: !839, line: 987, type: !905)
!7649 = !DILocalVariable(name: "pxTCB", scope: !7641, file: !839, line: 988, type: !7650)
!7650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7651)
!7651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7652, size: 32)
!7652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !871)
!7653 = !DILocation(line: 0, scope: !7641)
!7654 = !DILocation(line: 988, column: 30, scope: !7641)
!7655 = !DILocation(line: 990, column: 3, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7641, file: !839, line: 990, column: 3)
!7657 = !DILocation(line: 990, column: 3, scope: !7641)
!7658 = !DILocation(line: 990, column: 3, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7656, file: !839, line: 990, column: 3)
!7660 = !DILocation(line: 992, column: 16, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7641, file: !839, line: 992, column: 7)
!7662 = !DILocation(line: 992, column: 13, scope: !7661)
!7663 = !DILocation(line: 992, column: 7, scope: !7641)
!7664 = !DILocation(line: 999, column: 4, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7661, file: !839, line: 998, column: 3)
!7666 = !DILocation(line: 1001, column: 32, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7665, file: !839, line: 1000, column: 4)
!7668 = !DILocation(line: 1003, column: 4, scope: !7665)
!7669 = !DILocation(line: 1005, column: 25, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7665, file: !839, line: 1005, column: 8)
!7671 = !DILocation(line: 1005, column: 22, scope: !7670)
!7672 = !DILocation(line: 1005, column: 45, scope: !7670)
!7673 = !DILocation(line: 1005, column: 65, scope: !7670)
!7674 = !DILocation(line: 1005, column: 62, scope: !7670)
!7675 = !DILocation(line: 1005, column: 8, scope: !7665)
!7676 = !DILocation(line: 1013, column: 26, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7670, file: !839, line: 1013, column: 14)
!7678 = !DILocation(line: 1013, column: 14, scope: !7670)
!7679 = !DILocation(line: 1018, column: 10, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !839, line: 1018, column: 10)
!7681 = distinct !DILexicalBlock(scope: !7677, file: !839, line: 1014, column: 5)
!7682 = !DILocation(line: 1018, column: 64, scope: !7680)
!7683 = !DILocation(line: 1030, column: 26, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7677, file: !839, line: 1030, column: 14)
!7685 = !DILocation(line: 0, scope: !7661)
!7686 = !DILocation(line: 1046, column: 3, scope: !7641)
!7687 = distinct !DISubprogram(name: "uxTaskPriorityGet", scope: !839, file: !839, line: 1054, type: !7688, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7690)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!862, !868}
!7690 = !{!7691, !7692, !7693}
!7691 = !DILocalVariable(name: "xTask", arg: 1, scope: !7687, file: !839, line: 1054, type: !868)
!7692 = !DILocalVariable(name: "pxTCB", scope: !7687, file: !839, line: 1056, type: !870)
!7693 = !DILocalVariable(name: "uxReturn", scope: !7687, file: !839, line: 1057, type: !862)
!7694 = !DILocation(line: 0, scope: !7687)
!7695 = !DILocation(line: 1059, column: 3, scope: !7687)
!7696 = !DILocation(line: 1063, column: 12, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7687, file: !839, line: 1060, column: 3)
!7698 = !DILocation(line: 1064, column: 22, scope: !7697)
!7699 = !DILocation(line: 1066, column: 3, scope: !7687)
!7700 = !DILocation(line: 1068, column: 3, scope: !7687)
!7701 = distinct !DISubprogram(name: "uxTaskPriorityGetFromISR", scope: !839, file: !839, line: 1076, type: !7688, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7702)
!7702 = !{!7703, !7704, !7705, !7706}
!7703 = !DILocalVariable(name: "xTask", arg: 1, scope: !7701, file: !839, line: 1076, type: !868)
!7704 = !DILocalVariable(name: "pxTCB", scope: !7701, file: !839, line: 1078, type: !870)
!7705 = !DILocalVariable(name: "uxReturn", scope: !7701, file: !839, line: 1079, type: !862)
!7706 = !DILocalVariable(name: "uxSavedInterruptState", scope: !7701, file: !839, line: 1079, type: !862)
!7707 = !DILocation(line: 0, scope: !7701)
!7708 = !DILocation(line: 1097, column: 3, scope: !7701)
!7709 = !DILocation(line: 231, column: 2, scope: !7710, inlinedAt: !7714)
!7710 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !1985, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7711)
!7711 = !{!7712, !7713}
!7712 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !7710, file: !863, line: 229, type: !61)
!7713 = !DILocalVariable(name: "ulNewBASEPRI", scope: !7710, file: !863, line: 229, type: !61)
!7714 = distinct !DILocation(line: 1099, column: 27, scope: !7701)
!7715 = !{i64 815127, i64 815164, i64 815196, i64 815232, i64 815259}
!7716 = !DILocation(line: 0, scope: !7710, inlinedAt: !7714)
!7717 = !DILocation(line: 1103, column: 12, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7701, file: !839, line: 1100, column: 3)
!7719 = !DILocation(line: 1104, column: 22, scope: !7718)
!7720 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !7721, file: !863, line: 247, type: !61)
!7721 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2604, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7722)
!7722 = !{!7720}
!7723 = !DILocation(line: 0, scope: !7721, inlinedAt: !7724)
!7724 = distinct !DILocation(line: 1106, column: 3, scope: !7701)
!7725 = !DILocation(line: 249, column: 2, scope: !7721, inlinedAt: !7724)
!7726 = !{i64 815660}
!7727 = !DILocation(line: 1108, column: 3, scope: !7701)
!7728 = distinct !DISubprogram(name: "vTaskPrioritySet", scope: !839, file: !839, line: 1116, type: !7729, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7731)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{null, !868, !862}
!7731 = !{!7732, !7733, !7734, !7735, !7736, !7737}
!7732 = !DILocalVariable(name: "xTask", arg: 1, scope: !7728, file: !839, line: 1116, type: !868)
!7733 = !DILocalVariable(name: "uxNewPriority", arg: 2, scope: !7728, file: !839, line: 1116, type: !862)
!7734 = !DILocalVariable(name: "pxTCB", scope: !7728, file: !839, line: 1118, type: !870)
!7735 = !DILocalVariable(name: "uxCurrentBasePriority", scope: !7728, file: !839, line: 1119, type: !862)
!7736 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !7728, file: !839, line: 1119, type: !862)
!7737 = !DILocalVariable(name: "xYieldRequired", scope: !7728, file: !839, line: 1120, type: !869)
!7738 = !DILocation(line: 0, scope: !7728)
!7739 = !DILocation(line: 1122, column: 3, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7728, file: !839, line: 1122, column: 3)
!7741 = !DILocation(line: 1122, column: 3, scope: !7728)
!7742 = !DILocation(line: 1122, column: 3, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7740, file: !839, line: 1122, column: 3)
!7744 = !DILocation(line: 1125, column: 7, scope: !7728)
!7745 = !DILocation(line: 1134, column: 3, scope: !7728)
!7746 = !DILocation(line: 1138, column: 12, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7728, file: !839, line: 1135, column: 3)
!7748 = !DILocation(line: 1144, column: 36, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7747, file: !839, line: 1143, column: 4)
!7750 = !DILocation(line: 1152, column: 30, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7747, file: !839, line: 1152, column: 8)
!7752 = !DILocation(line: 1152, column: 8, scope: !7747)
!7753 = !DILocation(line: 1156, column: 23, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !839, line: 1156, column: 9)
!7755 = distinct !DILexicalBlock(scope: !7751, file: !839, line: 1153, column: 4)
!7756 = !DILocation(line: 0, scope: !7754)
!7757 = !DILocation(line: 1156, column: 9, scope: !7755)
!7758 = !DILocation(line: 1163, column: 28, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !839, line: 1163, column: 11)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !839, line: 1159, column: 6)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !839, line: 1158, column: 10)
!7762 = distinct !DILexicalBlock(scope: !7754, file: !839, line: 1157, column: 5)
!7763 = !DILocation(line: 1163, column: 42, scope: !7759)
!7764 = !DILocation(line: 1163, column: 25, scope: !7759)
!7765 = !DILocation(line: 1163, column: 11, scope: !7760)
!7766 = !DILocation(line: 1196, column: 36, scope: !7755)
!7767 = !DILocation(line: 1202, column: 32, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !839, line: 1202, column: 10)
!7769 = distinct !DILexicalBlock(scope: !7755, file: !839, line: 1199, column: 5)
!7770 = !DILocation(line: 1202, column: 10, scope: !7769)
!7771 = !DILocation(line: 1204, column: 25, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7768, file: !839, line: 1203, column: 6)
!7773 = !DILocation(line: 1205, column: 6, scope: !7772)
!7774 = !DILocation(line: 1212, column: 28, scope: !7769)
!7775 = !DILocation(line: 1222, column: 11, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7755, file: !839, line: 1222, column: 9)
!7777 = !DILocation(line: 1222, column: 102, scope: !7776)
!7778 = !DILocation(line: 1222, column: 9, scope: !7755)
!7779 = !DILocation(line: 1224, column: 6, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !839, line: 1223, column: 5)
!7781 = !DILocation(line: 1225, column: 5, scope: !7780)
!7782 = !DILocation(line: 1235, column: 9, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7755, file: !839, line: 1235, column: 9)
!7784 = !DILocation(line: 1235, column: 9, scope: !7755)
!7785 = !DILocation(line: 1240, column: 10, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !839, line: 1240, column: 10)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !839, line: 1236, column: 5)
!7788 = !DILocation(line: 1240, column: 55, scope: !7786)
!7789 = !DILocation(line: 1240, column: 10, scope: !7787)
!7790 = !DILocation(line: 1245, column: 7, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7786, file: !839, line: 1241, column: 6)
!7792 = !DILocation(line: 1246, column: 6, scope: !7791)
!7793 = !DILocation(line: 1251, column: 6, scope: !7787)
!7794 = !DILocation(line: 1252, column: 5, scope: !7787)
!7795 = !DILocation(line: 1258, column: 9, scope: !7755)
!7796 = !DILocation(line: 1260, column: 6, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7798, file: !839, line: 1260, column: 6)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !839, line: 1259, column: 5)
!7799 = distinct !DILexicalBlock(scope: !7755, file: !839, line: 1258, column: 9)
!7800 = !{i64 2148480576}
!7801 = !{i64 2148480616}
!7802 = !DILocation(line: 1261, column: 5, scope: !7798)
!7803 = !DILocation(line: 1272, column: 3, scope: !7728)
!7804 = !DILocation(line: 1273, column: 2, scope: !7728)
!7805 = distinct !DISubprogram(name: "vTaskSuspend", scope: !839, file: !839, line: 1280, type: !7271, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7806)
!7806 = !{!7807, !7808}
!7807 = !DILocalVariable(name: "xTaskToSuspend", arg: 1, scope: !7805, file: !839, line: 1280, type: !868)
!7808 = !DILocalVariable(name: "pxTCB", scope: !7805, file: !839, line: 1282, type: !870)
!7809 = !DILocation(line: 0, scope: !7805)
!7810 = !DILocation(line: 1284, column: 3, scope: !7805)
!7811 = !DILocation(line: 1288, column: 12, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7805, file: !839, line: 1285, column: 3)
!7813 = !DILocation(line: 1294, column: 32, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7812, file: !839, line: 1294, column: 8)
!7815 = !DILocation(line: 1294, column: 8, scope: !7814)
!7816 = !DILocation(line: 1294, column: 53, scope: !7814)
!7817 = !DILocation(line: 1294, column: 8, scope: !7812)
!7818 = !DILocation(line: 1296, column: 5, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7820, file: !839, line: 1296, column: 5)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !839, line: 1296, column: 5)
!7821 = distinct !DILexicalBlock(scope: !7814, file: !839, line: 1295, column: 4)
!7822 = !DILocation(line: 1296, column: 5, scope: !7820)
!7823 = !DILocation(line: 1296, column: 5, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7819, file: !839, line: 1296, column: 5)
!7825 = !DILocation(line: 1304, column: 8, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7812, file: !839, line: 1304, column: 8)
!7827 = !DILocation(line: 1304, column: 62, scope: !7826)
!7828 = !DILocation(line: 1304, column: 8, scope: !7812)
!7829 = !DILocation(line: 1306, column: 14, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7826, file: !839, line: 1305, column: 4)
!7831 = !DILocation(line: 1307, column: 4, scope: !7830)
!7832 = !DILocation(line: 1313, column: 4, scope: !7812)
!7833 = !DILocation(line: 1315, column: 3, scope: !7805)
!7834 = !DILocation(line: 1317, column: 16, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7805, file: !839, line: 1317, column: 7)
!7836 = !DILocation(line: 1317, column: 13, scope: !7835)
!7837 = !DILocation(line: 0, scope: !7835)
!7838 = !DILocation(line: 1317, column: 7, scope: !7805)
!7839 = !DILocation(line: 1319, column: 8, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7835, file: !839, line: 1318, column: 3)
!7841 = !DILocation(line: 1322, column: 5, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !839, line: 1322, column: 5)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !839, line: 1320, column: 4)
!7844 = distinct !DILexicalBlock(scope: !7840, file: !839, line: 1319, column: 8)
!7845 = !DILocation(line: 1322, column: 5, scope: !7843)
!7846 = !DILocation(line: 1322, column: 5, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7842, file: !839, line: 1322, column: 5)
!7848 = !DILocation(line: 1323, column: 5, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7843, file: !839, line: 1323, column: 5)
!7850 = !{i64 2148482025}
!7851 = !{i64 2148482065}
!7852 = !DILocation(line: 1324, column: 4, scope: !7843)
!7853 = !DILocation(line: 1330, column: 9, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !839, line: 1330, column: 9)
!7855 = distinct !DILexicalBlock(scope: !7844, file: !839, line: 1326, column: 4)
!7856 = !DILocation(line: 1330, column: 59, scope: !7854)
!7857 = !DILocation(line: 1330, column: 56, scope: !7854)
!7858 = !DILocation(line: 1330, column: 9, scope: !7855)
!7859 = !DILocation(line: 1336, column: 19, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7854, file: !839, line: 1331, column: 5)
!7861 = !DILocation(line: 1337, column: 5, scope: !7860)
!7862 = !DILocation(line: 1340, column: 6, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7854, file: !839, line: 1339, column: 5)
!7864 = !DILocation(line: 1346, column: 8, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7835, file: !839, line: 1345, column: 3)
!7866 = !DILocation(line: 1351, column: 5, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !839, line: 1347, column: 4)
!7868 = distinct !DILexicalBlock(scope: !7865, file: !839, line: 1346, column: 8)
!7869 = !DILocation(line: 1353, column: 6, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7867, file: !839, line: 1352, column: 5)
!7871 = !DILocation(line: 1355, column: 5, scope: !7867)
!7872 = !DILocation(line: 1356, column: 4, scope: !7867)
!7873 = !DILocation(line: 1362, column: 2, scope: !7805)
!7874 = !DILocation(line: 2200, column: 6, scope: !931)
!7875 = !DILocation(line: 2200, column: 27, scope: !931)
!7876 = !DILocation(line: 2200, column: 6, scope: !926)
!7877 = !DILocation(line: 2204, column: 17, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !931, file: !839, line: 2201, column: 2)
!7879 = !DILocation(line: 2205, column: 2, scope: !7878)
!7880 = !DILocation(line: 2208, column: 17, scope: !930)
!7881 = !DILocation(line: 2239, column: 3, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !839, line: 2239, column: 3)
!7883 = distinct !DILexicalBlock(scope: !930, file: !839, line: 2239, column: 3)
!7884 = !DILocation(line: 2239, column: 3, scope: !7883)
!7885 = !DILocation(line: 2239, column: 3, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !839, line: 2239, column: 3)
!7887 = distinct !DILexicalBlock(scope: !7882, file: !839, line: 2239, column: 3)
!7888 = !DILocation(line: 2239, column: 3, scope: !7887)
!7889 = !DILocation(line: 2239, column: 3, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7886, file: !839, line: 2239, column: 3)
!7891 = !DILocation(line: 2240, column: 3, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !839, line: 2240, column: 3)
!7893 = distinct !DILexicalBlock(scope: !930, file: !839, line: 2240, column: 3)
!7894 = !DILocation(line: 2240, column: 3, scope: !7893)
!7895 = !DILocation(line: 2240, column: 3, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !839, line: 2240, column: 3)
!7897 = distinct !DILexicalBlock(scope: !7892, file: !839, line: 2240, column: 3)
!7898 = !DILocation(line: 2240, column: 3, scope: !7897)
!7899 = !DILocation(line: 2240, column: 3, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7896, file: !839, line: 2240, column: 3)
!7901 = !DILocation(line: 2244, column: 3, scope: !929)
!7902 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !7903, file: !863, line: 172, type: !61)
!7903 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !863, file: !863, line: 172, type: !7904, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7906)
!7904 = !DISubroutineType(types: !7905)
!7905 = !{!54, !61}
!7906 = !{!7902, !7907}
!7907 = !DILocalVariable(name: "ucReturn", scope: !7903, file: !863, line: 174, type: !54)
!7908 = !DILocation(line: 0, scope: !7903, inlinedAt: !7909)
!7909 = distinct !DILocation(line: 2244, column: 3, scope: !929)
!7910 = !DILocation(line: 176, column: 3, scope: !7903, inlinedAt: !7909)
!7911 = !{i64 813219}
!7912 = !DILocation(line: 0, scope: !929)
!7913 = !DILocation(line: 2244, column: 3, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !929, file: !839, line: 2244, column: 3)
!7915 = !DILocation(line: 2244, column: 3, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7914, file: !839, line: 2244, column: 3)
!7917 = !DILocation(line: 0, scope: !933)
!7918 = !DILocation(line: 2244, column: 3, scope: !933)
!7919 = !DILocation(line: 2244, column: 3, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !933, file: !839, line: 2244, column: 3)
!7921 = !DILocation(line: 2244, column: 3, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7920, file: !839, line: 2244, column: 3)
!7923 = !DILocation(line: 2255, column: 1, scope: !926)
!7924 = distinct !DISubprogram(name: "vTaskResume", scope: !839, file: !839, line: 1415, type: !7271, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7925)
!7925 = !{!7926, !7927}
!7926 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !7924, file: !839, line: 1415, type: !868)
!7927 = !DILocalVariable(name: "pxTCB", scope: !7924, file: !839, line: 1417, type: !7201)
!7928 = !DILocation(line: 0, scope: !7924)
!7929 = !DILocation(line: 1420, column: 3, scope: !7924)
!7930 = !DILocation(line: 1420, column: 3, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !839, line: 1420, column: 3)
!7932 = distinct !DILexicalBlock(scope: !7924, file: !839, line: 1420, column: 3)
!7933 = !DILocation(line: 1424, column: 25, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7924, file: !839, line: 1424, column: 7)
!7935 = !DILocation(line: 1417, column: 24, scope: !7924)
!7936 = !DILocation(line: 1424, column: 39, scope: !7934)
!7937 = !DILocation(line: 1424, column: 36, scope: !7934)
!7938 = !DILocation(line: 1424, column: 7, scope: !7924)
!7939 = !DILocation(line: 1426, column: 4, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7934, file: !839, line: 1425, column: 3)
!7941 = !DILocation(line: 1428, column: 9, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !839, line: 1428, column: 9)
!7943 = distinct !DILexicalBlock(scope: !7940, file: !839, line: 1427, column: 4)
!7944 = !DILocation(line: 1428, column: 41, scope: !7942)
!7945 = !DILocation(line: 1428, column: 9, scope: !7943)
!7946 = !DILocation(line: 1434, column: 40, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7942, file: !839, line: 1429, column: 5)
!7948 = !DILocation(line: 1434, column: 15, scope: !7947)
!7949 = !DILocation(line: 1435, column: 6, scope: !7947)
!7950 = !DILocation(line: 1438, column: 17, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7947, file: !839, line: 1438, column: 10)
!7952 = !DILocation(line: 1438, column: 31, scope: !7951)
!7953 = !DILocation(line: 1438, column: 45, scope: !7951)
!7954 = !DILocation(line: 1438, column: 28, scope: !7951)
!7955 = !DILocation(line: 1438, column: 10, scope: !7947)
!7956 = !DILocation(line: 1443, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !839, line: 1443, column: 7)
!7958 = distinct !DILexicalBlock(scope: !7951, file: !839, line: 1439, column: 6)
!7959 = !{i64 2148483928}
!7960 = !{i64 2148483968}
!7961 = !DILocation(line: 1444, column: 6, scope: !7958)
!7962 = !DILocation(line: 1455, column: 4, scope: !7940)
!7963 = !DILocation(line: 1456, column: 3, scope: !7940)
!7964 = !DILocation(line: 1461, column: 2, scope: !7924)
!7965 = distinct !DISubprogram(name: "prvTaskIsTaskSuspended", scope: !839, file: !839, line: 1369, type: !7966, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7969)
!7966 = !DISubroutineType(types: !7967)
!7967 = !{!869, !7968}
!7968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!7969 = !{!7970, !7971, !7972}
!7970 = !DILocalVariable(name: "xTask", arg: 1, scope: !7965, file: !839, line: 1369, type: !7968)
!7971 = !DILocalVariable(name: "xReturn", scope: !7965, file: !839, line: 1371, type: !869)
!7972 = !DILocalVariable(name: "pxTCB", scope: !7965, file: !839, line: 1372, type: !7650)
!7973 = !DILocation(line: 0, scope: !7965)
!7974 = !DILocation(line: 1378, column: 3, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7965, file: !839, line: 1378, column: 3)
!7976 = !DILocation(line: 1378, column: 3, scope: !7965)
!7977 = !DILocation(line: 1378, column: 3, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7975, file: !839, line: 1378, column: 3)
!7979 = !DILocation(line: 1381, column: 7, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7965, file: !839, line: 1381, column: 7)
!7981 = !DILocation(line: 1381, column: 7, scope: !7965)
!7982 = !DILocation(line: 1384, column: 8, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7984, file: !839, line: 1384, column: 8)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !839, line: 1382, column: 3)
!7985 = !DILocation(line: 1384, column: 8, scope: !7984)
!7986 = !DILocation(line: 1407, column: 3, scope: !7965)
!7987 = distinct !DISubprogram(name: "xTaskResumeFromISR", scope: !839, file: !839, line: 1469, type: !7988, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7990)
!7988 = !DISubroutineType(types: !7989)
!7989 = !{!869, !868}
!7990 = !{!7991, !7992, !7993, !7994}
!7991 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !7987, file: !839, line: 1469, type: !868)
!7992 = !DILocalVariable(name: "xYieldRequired", scope: !7987, file: !839, line: 1471, type: !869)
!7993 = !DILocalVariable(name: "pxTCB", scope: !7987, file: !839, line: 1472, type: !7201)
!7994 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !7987, file: !839, line: 1473, type: !862)
!7995 = !DILocation(line: 0, scope: !7987)
!7996 = !DILocation(line: 1475, column: 3, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7987, file: !839, line: 1475, column: 3)
!7998 = !DILocation(line: 1475, column: 3, scope: !7987)
!7999 = !DILocation(line: 1475, column: 3, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7997, file: !839, line: 1475, column: 3)
!8001 = !DILocation(line: 1493, column: 3, scope: !7987)
!8002 = !DILocation(line: 231, column: 2, scope: !7710, inlinedAt: !8003)
!8003 = distinct !DILocation(line: 1495, column: 28, scope: !7987)
!8004 = !DILocation(line: 0, scope: !7710, inlinedAt: !8003)
!8005 = !DILocation(line: 1497, column: 8, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !839, line: 1497, column: 8)
!8007 = distinct !DILexicalBlock(scope: !7987, file: !839, line: 1496, column: 3)
!8008 = !DILocation(line: 1497, column: 40, scope: !8006)
!8009 = !DILocation(line: 1497, column: 8, scope: !8007)
!8010 = !DILocation(line: 1502, column: 9, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !839, line: 1502, column: 9)
!8012 = distinct !DILexicalBlock(scope: !8006, file: !839, line: 1498, column: 4)
!8013 = !DILocation(line: 1502, column: 30, scope: !8011)
!8014 = !DILocation(line: 1502, column: 9, scope: !8012)
!8015 = !DILocation(line: 1506, column: 17, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !839, line: 1506, column: 10)
!8017 = distinct !DILexicalBlock(scope: !8011, file: !839, line: 1503, column: 5)
!8018 = !DILocation(line: 1506, column: 31, scope: !8016)
!8019 = !DILocation(line: 1506, column: 45, scope: !8016)
!8020 = !DILocation(line: 1506, column: 28, scope: !8016)
!8021 = !DILocation(line: 1506, column: 10, scope: !8017)
!8022 = !DILocation(line: 1515, column: 40, scope: !8017)
!8023 = !DILocation(line: 1515, column: 15, scope: !8017)
!8024 = !DILocation(line: 1516, column: 6, scope: !8017)
!8025 = !DILocation(line: 1517, column: 5, scope: !8017)
!8026 = !DILocation(line: 1523, column: 56, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8011, file: !839, line: 1519, column: 5)
!8028 = !DILocation(line: 1523, column: 6, scope: !8027)
!8029 = !DILocation(line: 0, scope: !7721, inlinedAt: !8030)
!8030 = distinct !DILocation(line: 1531, column: 3, scope: !7987)
!8031 = !DILocation(line: 249, column: 2, scope: !7721, inlinedAt: !8030)
!8032 = !DILocation(line: 1533, column: 3, scope: !7987)
!8033 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !839, file: !839, line: 1539, type: !154, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8034)
!8034 = !{!8035}
!8035 = !DILocalVariable(name: "xReturn", scope: !8033, file: !839, line: 1541, type: !869)
!8036 = !DILocation(line: 1553, column: 13, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8033, file: !839, line: 1551, column: 2)
!8038 = !DILocation(line: 0, scope: !8033)
!8039 = !DILocation(line: 1559, column: 15, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !839, line: 1559, column: 7)
!8041 = distinct !DILexicalBlock(scope: !8033, file: !839, line: 1558, column: 2)
!8042 = !DILocation(line: 1559, column: 7, scope: !8041)
!8043 = !DILocation(line: 1561, column: 14, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8040, file: !839, line: 1560, column: 3)
!8045 = !DILocation(line: 1562, column: 3, scope: !8044)
!8046 = !DILocation(line: 1570, column: 6, scope: !8033)
!8047 = !DILocation(line: 215, column: 2, scope: !8048, inlinedAt: !8051)
!8048 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !863, file: !863, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8049)
!8049 = !{!8050}
!8050 = !DILocalVariable(name: "ulNewBASEPRI", scope: !8048, file: !863, line: 213, type: !61)
!8051 = distinct !DILocation(line: 1577, column: 3, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !839, line: 1571, column: 2)
!8053 = distinct !DILexicalBlock(scope: !8033, file: !839, line: 1570, column: 6)
!8054 = !{i64 814739, i64 814772, i64 814808, i64 814835}
!8055 = !DILocation(line: 0, scope: !8048, inlinedAt: !8051)
!8056 = !DILocation(line: 1587, column: 21, scope: !8052)
!8057 = !DILocation(line: 1588, column: 14, scope: !8052)
!8058 = !DILocation(line: 1597, column: 7, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8052, file: !839, line: 1597, column: 7)
!8060 = !DILocation(line: 1606, column: 2, scope: !8052)
!8061 = !DILocation(line: 1612, column: 3, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !839, line: 1612, column: 3)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !839, line: 1612, column: 3)
!8064 = distinct !DILexicalBlock(scope: !8053, file: !839, line: 1608, column: 2)
!8065 = !DILocation(line: 1614, column: 1, scope: !8033)
!8066 = distinct !DISubprogram(name: "prvIdleTask", scope: !839, file: !839, line: 2653, type: !640, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8067)
!8067 = !{!8068}
!8068 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !8066, file: !839, line: 2653, type: !51)
!8069 = !DILocation(line: 0, scope: !8066)
!8070 = !DILocation(line: 2658, column: 2, scope: !8066)
!8071 = !DILocation(line: 2661, column: 3, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !839, line: 2659, column: 2)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !839, line: 2658, column: 2)
!8074 = distinct !DILexicalBlock(scope: !8066, file: !839, line: 2658, column: 2)
!8075 = !DILocation(line: 2684, column: 8, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !839, line: 2684, column: 8)
!8077 = distinct !DILexicalBlock(scope: !8072, file: !839, line: 2674, column: 3)
!8078 = !DILocation(line: 2684, column: 78, scope: !8076)
!8079 = !DILocation(line: 2684, column: 8, scope: !8077)
!8080 = distinct !{!8080, !8081, !8082}
!8081 = !DILocation(line: 2658, column: 2, scope: !8074)
!8082 = !DILocation(line: 2754, column: 2, scope: !8074)
!8083 = !DILocation(line: 2686, column: 5, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !839, line: 2686, column: 5)
!8085 = distinct !DILexicalBlock(scope: !8076, file: !839, line: 2685, column: 4)
!8086 = !{i64 2148497158}
!8087 = !{i64 2148497198}
!8088 = !DILocation(line: 2687, column: 4, scope: !8085)
!8089 = distinct !DISubprogram(name: "prvCheckTasksWaitingTermination", scope: !839, file: !839, line: 2950, type: !154, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8090)
!8090 = !{!8091, !8093}
!8091 = !DILocalVariable(name: "xListIsEmpty", scope: !8092, file: !839, line: 2954, type: !869)
!8092 = distinct !DILexicalBlock(scope: !8089, file: !839, line: 2953, column: 2)
!8093 = !DILocalVariable(name: "pxTCB", scope: !8094, file: !839, line: 2968, type: !870)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !839, line: 2967, column: 4)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !839, line: 2966, column: 8)
!8096 = distinct !DILexicalBlock(scope: !8092, file: !839, line: 2959, column: 3)
!8097 = !DILocation(line: 2958, column: 10, scope: !8092)
!8098 = !DILocation(line: 2958, column: 25, scope: !8092)
!8099 = !DILocation(line: 2958, column: 3, scope: !8092)
!8100 = !DILocation(line: 2960, column: 4, scope: !8096)
!8101 = !DILocation(line: 2962, column: 20, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8096, file: !839, line: 2961, column: 4)
!8103 = !DILocation(line: 0, scope: !8092)
!8104 = !DILocation(line: 2964, column: 13, scope: !8096)
!8105 = !DILocation(line: 2966, column: 8, scope: !8096)
!8106 = !DILocation(line: 2970, column: 5, scope: !8094)
!8107 = !DILocation(line: 2972, column: 26, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8094, file: !839, line: 2971, column: 5)
!8109 = !DILocation(line: 0, scope: !8094)
!8110 = !DILocation(line: 2973, column: 39, scope: !8108)
!8111 = !DILocation(line: 2973, column: 15, scope: !8108)
!8112 = !DILocation(line: 2974, column: 6, scope: !8108)
!8113 = !DILocation(line: 2975, column: 6, scope: !8108)
!8114 = !DILocation(line: 2977, column: 5, scope: !8094)
!8115 = !DILocation(line: 2979, column: 5, scope: !8094)
!8116 = !DILocation(line: 2980, column: 4, scope: !8094)
!8117 = distinct !{!8117, !8099, !8118}
!8118 = !DILocation(line: 2985, column: 3, scope: !8092)
!8119 = !DILocation(line: 2988, column: 1, scope: !8089)
!8120 = distinct !DISubprogram(name: "prvDeleteTCB", scope: !839, file: !839, line: 3231, type: !8121, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8123)
!8121 = !DISubroutineType(types: !8122)
!8122 = !{null, !870}
!8123 = !{!8124}
!8124 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !8120, file: !839, line: 3231, type: !870)
!8125 = !DILocation(line: 0, scope: !8120)
!8126 = !DILocation(line: 3257, column: 4, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8120, file: !839, line: 3256, column: 3)
!8128 = !DILocation(line: 3261, column: 14, scope: !8120)
!8129 = !DILocation(line: 3261, column: 3, scope: !8120)
!8130 = !DILocation(line: 3262, column: 2, scope: !8120)
!8131 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !839, file: !839, line: 1617, type: !154, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !2004)
!8132 = !DILocation(line: 215, column: 2, scope: !8048, inlinedAt: !8133)
!8133 = distinct !DILocation(line: 1622, column: 2, scope: !8131)
!8134 = !DILocation(line: 0, scope: !8048, inlinedAt: !8133)
!8135 = !DILocation(line: 1623, column: 20, scope: !8131)
!8136 = !DILocation(line: 1624, column: 2, scope: !8131)
!8137 = !DILocation(line: 1625, column: 1, scope: !8131)
!8138 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !839, file: !839, line: 1759, type: !8139, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!884}
!8141 = !{!8142}
!8142 = !DILocalVariable(name: "xTicks", scope: !8138, file: !839, line: 1761, type: !884)
!8143 = !DILocation(line: 1766, column: 12, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8138, file: !839, line: 1765, column: 2)
!8145 = !DILocation(line: 0, scope: !8138)
!8146 = !DILocation(line: 1770, column: 2, scope: !8138)
!8147 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !839, file: !839, line: 1774, type: !8139, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8148)
!8148 = !{!8149, !8150}
!8149 = !DILocalVariable(name: "xReturn", scope: !8147, file: !839, line: 1776, type: !884)
!8150 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !8147, file: !839, line: 1777, type: !862)
!8151 = !DILocation(line: 1793, column: 2, scope: !8147)
!8152 = !DILocation(line: 0, scope: !8147)
!8153 = !DILocation(line: 1797, column: 13, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8147, file: !839, line: 1796, column: 2)
!8155 = !DILocation(line: 1801, column: 2, scope: !8147)
!8156 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !839, file: !839, line: 1805, type: !8157, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !2004)
!8157 = !DISubroutineType(types: !8158)
!8158 = !{!862}
!8159 = !DILocation(line: 1809, column: 9, scope: !8156)
!8160 = !DILocation(line: 1809, column: 2, scope: !8156)
!8161 = distinct !DISubprogram(name: "pcTaskGetTaskName", scope: !839, file: !839, line: 1815, type: !8162, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8164)
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!201, !868}
!8164 = !{!8165, !8166}
!8165 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !8161, file: !839, line: 1815, type: !868)
!8166 = !DILocalVariable(name: "pxTCB", scope: !8161, file: !839, line: 1817, type: !870)
!8167 = !DILocation(line: 0, scope: !8161)
!8168 = !DILocation(line: 1820, column: 11, scope: !8161)
!8169 = !DILocation(line: 1821, column: 3, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8161, file: !839, line: 1821, column: 3)
!8171 = !DILocation(line: 1821, column: 3, scope: !8161)
!8172 = !DILocation(line: 1821, column: 3, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8170, file: !839, line: 1821, column: 3)
!8174 = !DILocation(line: 1822, column: 13, scope: !8161)
!8175 = !DILocation(line: 1822, column: 3, scope: !8161)
!8176 = distinct !DISubprogram(name: "uxTaskGetSystemState", scope: !839, file: !839, line: 1830, type: !8177, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8194)
!8177 = !DISubroutineType(types: !8178)
!8178 = !{!862, !8179, !8192, !8193}
!8179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8180)
!8180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8181, size: 32)
!8181 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskStatus_t", file: !847, line: 176, baseType: !8182)
!8182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTASK_STATUS", file: !847, line: 166, size: 256, elements: !8183)
!8183 = !{!8184, !8185, !8186, !8187, !8188, !8189, !8190, !8191}
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !8182, file: !847, line: 168, baseType: !868, size: 32)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !8182, file: !847, line: 169, baseType: !331, size: 32, offset: 32)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "xTaskNumber", scope: !8182, file: !847, line: 170, baseType: !862, size: 32, offset: 64)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "eCurrentState", scope: !8182, file: !847, line: 171, baseType: !7644, size: 32, offset: 96)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "uxCurrentPriority", scope: !8182, file: !847, line: 172, baseType: !862, size: 32, offset: 128)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !8182, file: !847, line: 173, baseType: !862, size: 32, offset: 160)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "ulRunTimeCounter", scope: !8182, file: !847, line: 174, baseType: !61, size: 32, offset: 192)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "usStackHighWaterMark", scope: !8182, file: !847, line: 175, baseType: !864, size: 16, offset: 224)
!8192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!8193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2564)
!8194 = !{!8195, !8196, !8197, !8198, !8199}
!8195 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !8176, file: !839, line: 1830, type: !8179)
!8196 = !DILocalVariable(name: "uxArraySize", arg: 2, scope: !8176, file: !839, line: 1830, type: !8192)
!8197 = !DILocalVariable(name: "pulTotalRunTime", arg: 3, scope: !8176, file: !839, line: 1830, type: !8193)
!8198 = !DILocalVariable(name: "uxTask", scope: !8176, file: !839, line: 1832, type: !862)
!8199 = !DILocalVariable(name: "uxQueue", scope: !8176, file: !839, line: 1832, type: !862)
!8200 = !DILocation(line: 0, scope: !8176)
!8201 = !DILocation(line: 1834, column: 3, scope: !8176)
!8202 = !DILocation(line: 1837, column: 23, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !839, line: 1837, column: 8)
!8204 = distinct !DILexicalBlock(scope: !8176, file: !839, line: 1835, column: 3)
!8205 = !DILocation(line: 1837, column: 20, scope: !8203)
!8206 = !DILocation(line: 1837, column: 8, scope: !8204)
!8207 = !DILocation(line: 1843, column: 13, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !839, line: 1842, column: 5)
!8209 = distinct !DILexicalBlock(scope: !8203, file: !839, line: 1838, column: 4)
!8210 = !DILocation(line: 1844, column: 48, scope: !8208)
!8211 = !DILocation(line: 1844, column: 82, scope: !8208)
!8212 = !DILocation(line: 1844, column: 16, scope: !8208)
!8213 = !DILocation(line: 1844, column: 13, scope: !8208)
!8214 = !DILocation(line: 1846, column: 22, scope: !8209)
!8215 = !DILocation(line: 1846, column: 5, scope: !8208)
!8216 = distinct !{!8216, !8217, !8218}
!8217 = !DILocation(line: 1841, column: 5, scope: !8209)
!8218 = !DILocation(line: 1846, column: 57, scope: !8209)
!8219 = !DILocation(line: 1850, column: 47, scope: !8209)
!8220 = !DILocation(line: 1850, column: 91, scope: !8209)
!8221 = !DILocation(line: 1850, column: 15, scope: !8209)
!8222 = !DILocation(line: 1850, column: 12, scope: !8209)
!8223 = !DILocation(line: 1851, column: 47, scope: !8209)
!8224 = !DILocation(line: 1851, column: 91, scope: !8209)
!8225 = !DILocation(line: 1851, column: 15, scope: !8209)
!8226 = !DILocation(line: 1851, column: 12, scope: !8209)
!8227 = !DILocation(line: 1857, column: 48, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8209, file: !839, line: 1854, column: 5)
!8229 = !DILocation(line: 1857, column: 16, scope: !8228)
!8230 = !DILocation(line: 1857, column: 13, scope: !8228)
!8231 = !DILocation(line: 1865, column: 48, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8209, file: !839, line: 1862, column: 5)
!8233 = !DILocation(line: 1865, column: 16, scope: !8232)
!8234 = !DILocation(line: 1865, column: 13, scope: !8232)
!8235 = !DILocation(line: 1882, column: 26, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8237, file: !839, line: 1882, column: 10)
!8237 = distinct !DILexicalBlock(scope: !8209, file: !839, line: 1881, column: 5)
!8238 = !DILocation(line: 1882, column: 10, scope: !8237)
!8239 = !DILocation(line: 1884, column: 24, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8236, file: !839, line: 1883, column: 6)
!8241 = !DILocation(line: 1885, column: 6, scope: !8240)
!8242 = !DILocation(line: 1894, column: 12, scope: !8176)
!8243 = !DILocation(line: 1896, column: 3, scope: !8176)
!8244 = distinct !DISubprogram(name: "prvListTaskWithinSingleList", scope: !839, file: !839, line: 3098, type: !8245, scopeLine: 3099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8247)
!8245 = !DISubroutineType(types: !8246)
!8246 = !{!862, !8180, !905, !7644}
!8247 = !{!8248, !8249, !8250, !8251, !8254, !8255, !8256, !8260}
!8248 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !8244, file: !839, line: 3098, type: !8180)
!8249 = !DILocalVariable(name: "pxList", arg: 2, scope: !8244, file: !839, line: 3098, type: !905)
!8250 = !DILocalVariable(name: "eState", arg: 3, scope: !8244, file: !839, line: 3098, type: !7644)
!8251 = !DILocalVariable(name: "pxNextTCB", scope: !8244, file: !839, line: 3100, type: !8252)
!8252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8253, size: 32)
!8253 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !871)
!8254 = !DILocalVariable(name: "pxFirstTCB", scope: !8244, file: !839, line: 3100, type: !8252)
!8255 = !DILocalVariable(name: "uxTask", scope: !8244, file: !839, line: 3101, type: !862)
!8256 = !DILocalVariable(name: "pxConstList", scope: !8257, file: !839, line: 3105, type: !934)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !839, line: 3105, column: 4)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !839, line: 3104, column: 3)
!8259 = distinct !DILexicalBlock(scope: !8244, file: !839, line: 3103, column: 7)
!8260 = !DILocalVariable(name: "pxConstList", scope: !8261, file: !839, line: 3113, type: !934)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !839, line: 3113, column: 5)
!8262 = distinct !DILexicalBlock(scope: !8258, file: !839, line: 3112, column: 4)
!8263 = !DILocation(line: 0, scope: !8244)
!8264 = !DILocation(line: 3103, column: 7, scope: !8259)
!8265 = !DILocation(line: 3103, column: 41, scope: !8259)
!8266 = !DILocation(line: 3103, column: 7, scope: !8244)
!8267 = !DILocation(line: 0, scope: !8257)
!8268 = !DILocation(line: 3105, column: 4, scope: !8257)
!8269 = !DILocation(line: 3105, column: 4, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8257, file: !839, line: 3105, column: 4)
!8271 = !DILocation(line: 3105, column: 4, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8270, file: !839, line: 3105, column: 4)
!8273 = !DILocation(line: 3111, column: 4, scope: !8258)
!8274 = !DILocation(line: 3113, column: 5, scope: !8261)
!8275 = !DILocation(line: 0, scope: !8261)
!8276 = !DILocation(line: 3113, column: 5, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8261, file: !839, line: 3113, column: 5)
!8278 = !DILocation(line: 3113, column: 5, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8277, file: !839, line: 3113, column: 5)
!8280 = !DILocation(line: 3115, column: 33, scope: !8262)
!8281 = !DILocation(line: 3115, column: 41, scope: !8262)
!8282 = !DILocation(line: 3116, column: 77, scope: !8262)
!8283 = !DILocation(line: 3116, column: 33, scope: !8262)
!8284 = !DILocation(line: 3116, column: 44, scope: !8262)
!8285 = !DILocation(line: 3117, column: 58, scope: !8262)
!8286 = !DILocation(line: 3117, column: 33, scope: !8262)
!8287 = !DILocation(line: 3117, column: 45, scope: !8262)
!8288 = !DILocation(line: 3118, column: 33, scope: !8262)
!8289 = !DILocation(line: 3118, column: 47, scope: !8262)
!8290 = !DILocation(line: 3119, column: 64, scope: !8262)
!8291 = !DILocation(line: 3119, column: 33, scope: !8262)
!8292 = !DILocation(line: 3119, column: 51, scope: !8262)
!8293 = !DILocation(line: 3126, column: 10, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8262, file: !839, line: 3122, column: 5)
!8295 = !DILocation(line: 3128, column: 11, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !839, line: 3128, column: 11)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !839, line: 3127, column: 6)
!8298 = distinct !DILexicalBlock(scope: !8294, file: !839, line: 3126, column: 10)
!8299 = !DILocation(line: 3128, column: 69, scope: !8296)
!8300 = !DILocation(line: 3128, column: 11, scope: !8297)
!8301 = !DILocation(line: 3130, column: 50, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8296, file: !839, line: 3129, column: 7)
!8303 = !DILocation(line: 3131, column: 7, scope: !8302)
!8304 = !DILocation(line: 3138, column: 62, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8262, file: !839, line: 3137, column: 5)
!8306 = !DILocation(line: 3138, column: 34, scope: !8305)
!8307 = !DILocation(line: 3138, column: 49, scope: !8305)
!8308 = !DILocation(line: 3152, column: 34, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8262, file: !839, line: 3151, column: 5)
!8310 = !DILocation(line: 3152, column: 51, scope: !8309)
!8311 = !DILocation(line: 3162, column: 110, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8262, file: !839, line: 3161, column: 5)
!8313 = !DILocation(line: 3162, column: 85, scope: !8312)
!8314 = !DILocation(line: 3162, column: 57, scope: !8312)
!8315 = !DILocation(line: 3162, column: 34, scope: !8312)
!8316 = !DILocation(line: 3162, column: 55, scope: !8312)
!8317 = !DILocation(line: 3166, column: 11, scope: !8262)
!8318 = !DILocation(line: 3168, column: 23, scope: !8258)
!8319 = !DILocation(line: 3168, column: 4, scope: !8262)
!8320 = distinct !{!8320, !8273, !8321}
!8321 = !DILocation(line: 3168, column: 37, scope: !8258)
!8322 = !DILocation(line: 3175, column: 3, scope: !8244)
!8323 = distinct !DISubprogram(name: "prvTaskCheckFreeStackSpace", scope: !839, file: !839, line: 3183, type: !8324, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8326)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{!864, !2146}
!8326 = !{!8327, !8328}
!8327 = !DILocalVariable(name: "pucStackByte", arg: 1, scope: !8323, file: !839, line: 3183, type: !2146)
!8328 = !DILocalVariable(name: "ulCount", scope: !8323, file: !839, line: 3185, type: !61)
!8329 = !DILocation(line: 0, scope: !8323)
!8330 = !DILocation(line: 3187, column: 10, scope: !8323)
!8331 = !DILocation(line: 3187, column: 24, scope: !8323)
!8332 = !DILocation(line: 3187, column: 3, scope: !8323)
!8333 = !DILocation(line: 3189, column: 17, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8323, file: !839, line: 3188, column: 3)
!8335 = !DILocation(line: 3190, column: 11, scope: !8334)
!8336 = distinct !{!8336, !8332, !8337}
!8337 = !DILocation(line: 3191, column: 3, scope: !8323)
!8338 = !DILocation(line: 3193, column: 11, scope: !8323)
!8339 = !DILocation(line: 3195, column: 3, scope: !8323)
!8340 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !839, file: !839, line: 2258, type: !8341, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8343)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{null, !934, !7346}
!8343 = !{!8344, !8345, !8346}
!8344 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8340, file: !839, line: 2258, type: !934)
!8345 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !8340, file: !839, line: 2258, type: !7346)
!8346 = !DILocalVariable(name: "xTimeToWake", scope: !8340, file: !839, line: 2260, type: !884)
!8347 = !DILocation(line: 0, scope: !8340)
!8348 = !DILocation(line: 2262, column: 2, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8340, file: !839, line: 2262, column: 2)
!8350 = !DILocation(line: 2262, column: 2, scope: !8340)
!8351 = !DILocation(line: 2262, column: 2, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8349, file: !839, line: 2262, column: 2)
!8353 = !DILocation(line: 2271, column: 31, scope: !8340)
!8354 = !DILocation(line: 2271, column: 45, scope: !8340)
!8355 = !DILocation(line: 2271, column: 2, scope: !8340)
!8356 = !DILocation(line: 2276, column: 23, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8340, file: !839, line: 2276, column: 6)
!8358 = !DILocation(line: 2276, column: 37, scope: !8357)
!8359 = !DILocation(line: 2276, column: 6, scope: !8357)
!8360 = !DILocation(line: 2276, column: 58, scope: !8357)
!8361 = !DILocation(line: 2276, column: 6, scope: !8340)
!8362 = !DILocation(line: 2280, column: 3, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8357, file: !839, line: 2277, column: 2)
!8364 = !DILocation(line: 2281, column: 2, scope: !8363)
!8365 = !DILocation(line: 2289, column: 20, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !839, line: 2289, column: 7)
!8367 = distinct !DILexicalBlock(scope: !8340, file: !839, line: 2288, column: 2)
!8368 = !DILocation(line: 2289, column: 7, scope: !8367)
!8369 = !DILocation(line: 2294, column: 44, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8366, file: !839, line: 2290, column: 3)
!8371 = !DILocation(line: 2294, column: 58, scope: !8370)
!8372 = !DILocation(line: 2294, column: 4, scope: !8370)
!8373 = !DILocation(line: 2295, column: 3, scope: !8370)
!8374 = !DILocation(line: 2301, column: 18, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8366, file: !839, line: 2297, column: 3)
!8376 = !DILocation(line: 2301, column: 29, scope: !8375)
!8377 = !DILocation(line: 2302, column: 4, scope: !8375)
!8378 = !DILocation(line: 2314, column: 1, scope: !8340)
!8379 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !839, file: !839, line: 2317, type: !8380, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8382)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !905, !7346, !7346}
!8382 = !{!8383, !8384, !8385, !8386}
!8383 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8379, file: !839, line: 2317, type: !905)
!8384 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !8379, file: !839, line: 2317, type: !7346)
!8385 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !8379, file: !839, line: 2317, type: !7346)
!8386 = !DILocalVariable(name: "xTimeToWake", scope: !8379, file: !839, line: 2319, type: !884)
!8387 = !DILocation(line: 0, scope: !8379)
!8388 = !DILocation(line: 2321, column: 2, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8379, file: !839, line: 2321, column: 2)
!8390 = !DILocation(line: 2321, column: 2, scope: !8379)
!8391 = !DILocation(line: 2321, column: 2, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8389, file: !839, line: 2321, column: 2)
!8393 = !DILocation(line: 2325, column: 2, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8379, file: !839, line: 2325, column: 2)
!8395 = !DILocation(line: 2325, column: 2, scope: !8379)
!8396 = !DILocation(line: 2325, column: 2, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8394, file: !839, line: 2325, column: 2)
!8398 = !DILocation(line: 2330, column: 2, scope: !8379)
!8399 = !DILocation(line: 2337, column: 34, scope: !8379)
!8400 = !DILocation(line: 2337, column: 48, scope: !8379)
!8401 = !DILocation(line: 2337, column: 2, scope: !8379)
!8402 = !DILocation(line: 2342, column: 23, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8379, file: !839, line: 2342, column: 6)
!8404 = !DILocation(line: 2342, column: 37, scope: !8403)
!8405 = !DILocation(line: 2342, column: 6, scope: !8403)
!8406 = !DILocation(line: 2342, column: 58, scope: !8403)
!8407 = !DILocation(line: 2342, column: 6, scope: !8379)
!8408 = !DILocation(line: 2346, column: 3, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8403, file: !839, line: 2343, column: 2)
!8410 = !DILocation(line: 2347, column: 2, scope: !8409)
!8411 = !DILocation(line: 2355, column: 20, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !839, line: 2355, column: 7)
!8413 = distinct !DILexicalBlock(scope: !8379, file: !839, line: 2354, column: 2)
!8414 = !DILocation(line: 2355, column: 7, scope: !8413)
!8415 = !DILocation(line: 2360, column: 44, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8412, file: !839, line: 2356, column: 3)
!8417 = !DILocation(line: 2360, column: 58, scope: !8416)
!8418 = !DILocation(line: 2360, column: 4, scope: !8416)
!8419 = !DILocation(line: 2361, column: 3, scope: !8416)
!8420 = !DILocation(line: 2367, column: 18, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8412, file: !839, line: 2363, column: 3)
!8422 = !DILocation(line: 2367, column: 29, scope: !8421)
!8423 = !DILocation(line: 2368, column: 4, scope: !8421)
!8424 = !DILocation(line: 2380, column: 1, scope: !8379)
!8425 = distinct !DISubprogram(name: "vTaskPlaceOnEventListRestricted", scope: !839, file: !839, line: 2385, type: !8341, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8426)
!8426 = !{!8427, !8428, !8429}
!8427 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8425, file: !839, line: 2385, type: !934)
!8428 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !8425, file: !839, line: 2385, type: !7346)
!8429 = !DILocalVariable(name: "xTimeToWake", scope: !8425, file: !839, line: 2387, type: !884)
!8430 = !DILocation(line: 0, scope: !8425)
!8431 = !DILocation(line: 2389, column: 3, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8425, file: !839, line: 2389, column: 3)
!8433 = !DILocation(line: 2389, column: 3, scope: !8425)
!8434 = !DILocation(line: 2389, column: 3, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8432, file: !839, line: 2389, column: 3)
!8436 = !DILocation(line: 2401, column: 35, scope: !8425)
!8437 = !DILocation(line: 2401, column: 49, scope: !8425)
!8438 = !DILocation(line: 2401, column: 3, scope: !8425)
!8439 = !DILocation(line: 2406, column: 24, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8425, file: !839, line: 2406, column: 7)
!8441 = !DILocation(line: 2406, column: 38, scope: !8440)
!8442 = !DILocation(line: 2406, column: 7, scope: !8440)
!8443 = !DILocation(line: 2406, column: 59, scope: !8440)
!8444 = !DILocation(line: 2406, column: 7, scope: !8425)
!8445 = !DILocation(line: 2410, column: 4, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8440, file: !839, line: 2407, column: 3)
!8447 = !DILocation(line: 2411, column: 3, scope: !8446)
!8448 = !DILocation(line: 2419, column: 17, scope: !8425)
!8449 = !DILocation(line: 2419, column: 28, scope: !8425)
!8450 = !DILocation(line: 2422, column: 3, scope: !8425)
!8451 = !DILocation(line: 2423, column: 2, scope: !8425)
!8452 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !839, file: !839, line: 2428, type: !8453, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8458)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!869, !8455}
!8455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8456)
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 32)
!8457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!8458 = !{!8459, !8460, !8461}
!8459 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8452, file: !839, line: 2428, type: !8455)
!8460 = !DILocalVariable(name: "pxUnblockedTCB", scope: !8452, file: !839, line: 2430, type: !870)
!8461 = !DILocalVariable(name: "xReturn", scope: !8452, file: !839, line: 2431, type: !869)
!8462 = !DILocation(line: 0, scope: !8452)
!8463 = !DILocation(line: 2446, column: 31, scope: !8452)
!8464 = !DILocation(line: 2447, column: 2, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8452, file: !839, line: 2447, column: 2)
!8466 = !DILocation(line: 2447, column: 2, scope: !8452)
!8467 = !DILocation(line: 2447, column: 2, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8465, file: !839, line: 2447, column: 2)
!8469 = !DILocation(line: 2448, column: 44, scope: !8452)
!8470 = !DILocation(line: 2448, column: 11, scope: !8452)
!8471 = !DILocation(line: 2450, column: 6, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8452, file: !839, line: 2450, column: 6)
!8473 = !DILocation(line: 2450, column: 27, scope: !8472)
!8474 = !DILocation(line: 2450, column: 6, scope: !8452)
!8475 = !DILocation(line: 2452, column: 45, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8472, file: !839, line: 2451, column: 2)
!8477 = !DILocation(line: 2452, column: 12, scope: !8476)
!8478 = !DILocation(line: 2453, column: 3, scope: !8476)
!8479 = !DILocation(line: 2454, column: 2, scope: !8476)
!8480 = !DILocation(line: 2459, column: 3, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8472, file: !839, line: 2456, column: 2)
!8482 = !DILocation(line: 2462, column: 22, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8452, file: !839, line: 2462, column: 6)
!8484 = !DILocation(line: 2462, column: 35, scope: !8483)
!8485 = !DILocation(line: 2462, column: 49, scope: !8483)
!8486 = !DILocation(line: 2462, column: 33, scope: !8483)
!8487 = !DILocation(line: 2462, column: 6, scope: !8452)
!8488 = !DILocation(line: 2471, column: 17, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8483, file: !839, line: 2463, column: 2)
!8490 = !DILocation(line: 2472, column: 2, scope: !8489)
!8491 = !DILocation(line: 0, scope: !8483)
!8492 = !DILocation(line: 2492, column: 2, scope: !8452)
!8493 = distinct !DISubprogram(name: "xTaskRemoveFromUnorderedEventList", scope: !839, file: !839, line: 2496, type: !8494, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8496)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{!869, !911, !7346}
!8496 = !{!8497, !8498, !8499, !8500}
!8497 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !8493, file: !839, line: 2496, type: !911)
!8498 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !8493, file: !839, line: 2496, type: !7346)
!8499 = !DILocalVariable(name: "pxUnblockedTCB", scope: !8493, file: !839, line: 2498, type: !870)
!8500 = !DILocalVariable(name: "xReturn", scope: !8493, file: !839, line: 2499, type: !869)
!8501 = !DILocation(line: 0, scope: !8493)
!8502 = !DILocation(line: 2503, column: 2, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8493, file: !839, line: 2503, column: 2)
!8504 = !DILocation(line: 2503, column: 2, scope: !8493)
!8505 = !DILocation(line: 2503, column: 2, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8503, file: !839, line: 2503, column: 2)
!8507 = !DILocation(line: 2506, column: 2, scope: !8493)
!8508 = !DILocation(line: 2510, column: 31, scope: !8493)
!8509 = !DILocation(line: 2511, column: 2, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8493, file: !839, line: 2511, column: 2)
!8511 = !DILocation(line: 2511, column: 2, scope: !8493)
!8512 = !DILocation(line: 2511, column: 2, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8510, file: !839, line: 2511, column: 2)
!8514 = !DILocation(line: 2512, column: 11, scope: !8493)
!8515 = !DILocation(line: 2517, column: 44, scope: !8493)
!8516 = !DILocation(line: 2517, column: 11, scope: !8493)
!8517 = !DILocation(line: 2518, column: 2, scope: !8493)
!8518 = !DILocation(line: 2520, column: 22, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8493, file: !839, line: 2520, column: 6)
!8520 = !DILocation(line: 2520, column: 35, scope: !8519)
!8521 = !DILocation(line: 2520, column: 49, scope: !8519)
!8522 = !DILocation(line: 2520, column: 33, scope: !8519)
!8523 = !DILocation(line: 2520, column: 6, scope: !8493)
!8524 = !DILocation(line: 2530, column: 17, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8519, file: !839, line: 2521, column: 2)
!8526 = !DILocation(line: 2531, column: 2, scope: !8525)
!8527 = !DILocation(line: 0, scope: !8519)
!8528 = !DILocation(line: 2537, column: 2, scope: !8493)
!8529 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !839, file: !839, line: 2541, type: !8530, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8539)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{null, !8532}
!8532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8533)
!8533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8534, size: 32)
!8534 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !847, line: 138, baseType: !8535)
!8535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !847, line: 134, size: 64, elements: !8536)
!8536 = !{!8537, !8538}
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !8535, file: !847, line: 136, baseType: !869, size: 32)
!8538 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !8535, file: !847, line: 137, baseType: !884, size: 32, offset: 32)
!8539 = !{!8540}
!8540 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !8529, file: !839, line: 2541, type: !8532)
!8541 = !DILocation(line: 0, scope: !8529)
!8542 = !DILocation(line: 2543, column: 2, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8529, file: !839, line: 2543, column: 2)
!8544 = !DILocation(line: 2543, column: 2, scope: !8529)
!8545 = !DILocation(line: 2543, column: 2, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8543, file: !839, line: 2543, column: 2)
!8547 = !DILocation(line: 2544, column: 30, scope: !8529)
!8548 = !DILocation(line: 2544, column: 13, scope: !8529)
!8549 = !DILocation(line: 2544, column: 28, scope: !8529)
!8550 = !DILocation(line: 2545, column: 31, scope: !8529)
!8551 = !DILocation(line: 2545, column: 13, scope: !8529)
!8552 = !DILocation(line: 2545, column: 29, scope: !8529)
!8553 = !DILocation(line: 2546, column: 1, scope: !8529)
!8554 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !839, file: !839, line: 2549, type: !8555, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8557)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{!869, !8532, !7344}
!8557 = !{!8558, !8559, !8560, !8561}
!8558 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !8554, file: !839, line: 2549, type: !8532)
!8559 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !8554, file: !839, line: 2549, type: !7344)
!8560 = !DILocalVariable(name: "xReturn", scope: !8554, file: !839, line: 2551, type: !869)
!8561 = !DILocalVariable(name: "xConstTickCount", scope: !8562, file: !839, line: 2559, type: !7346)
!8562 = distinct !DILexicalBlock(scope: !8554, file: !839, line: 2557, column: 2)
!8563 = !DILocation(line: 0, scope: !8554)
!8564 = !DILocation(line: 2553, column: 2, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8554, file: !839, line: 2553, column: 2)
!8566 = !DILocation(line: 2553, column: 2, scope: !8554)
!8567 = !DILocation(line: 2553, column: 2, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8565, file: !839, line: 2553, column: 2)
!8569 = !DILocation(line: 2554, column: 2, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8554, file: !839, line: 2554, column: 2)
!8571 = !DILocation(line: 2554, column: 2, scope: !8554)
!8572 = !DILocation(line: 2554, column: 2, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8570, file: !839, line: 2554, column: 2)
!8574 = !DILocation(line: 2556, column: 2, scope: !8554)
!8575 = !DILocation(line: 2559, column: 38, scope: !8562)
!8576 = !DILocation(line: 0, scope: !8562)
!8577 = !DILocation(line: 2565, column: 8, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8562, file: !839, line: 2565, column: 8)
!8579 = !DILocation(line: 2565, column: 23, scope: !8578)
!8580 = !DILocation(line: 2565, column: 8, scope: !8562)
!8581 = !DILocation(line: 2572, column: 9, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8578, file: !839, line: 2572, column: 7)
!8583 = !DILocation(line: 2572, column: 39, scope: !8582)
!8584 = !DILocation(line: 2572, column: 25, scope: !8582)
!8585 = !DILocation(line: 0, scope: !8582)
!8586 = !DILocation(line: 2572, column: 56, scope: !8582)
!8587 = !DILocation(line: 2580, column: 30, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8582, file: !839, line: 2580, column: 12)
!8589 = !DILocation(line: 2580, column: 61, scope: !8588)
!8590 = !DILocation(line: 2580, column: 12, scope: !8582)
!8591 = !DILocation(line: 2583, column: 19, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8588, file: !839, line: 2581, column: 3)
!8593 = !DILocation(line: 2584, column: 4, scope: !8592)
!8594 = !DILocation(line: 2586, column: 3, scope: !8592)
!8595 = !DILocation(line: 0, scope: !8578)
!8596 = !DILocation(line: 2592, column: 2, scope: !8554)
!8597 = !DILocation(line: 2594, column: 2, scope: !8554)
!8598 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !839, file: !839, line: 2598, type: !154, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !2004)
!8599 = !DILocation(line: 2600, column: 16, scope: !8598)
!8600 = !DILocation(line: 2601, column: 1, scope: !8598)
!8601 = distinct !DISubprogram(name: "uxTaskGetTaskNumber", scope: !839, file: !839, line: 2606, type: !7688, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8602)
!8602 = !{!8603, !8604, !8605}
!8603 = !DILocalVariable(name: "xTask", arg: 1, scope: !8601, file: !839, line: 2606, type: !868)
!8604 = !DILocalVariable(name: "uxReturn", scope: !8601, file: !839, line: 2608, type: !862)
!8605 = !DILocalVariable(name: "pxTCB", scope: !8601, file: !839, line: 2609, type: !870)
!8606 = !DILocation(line: 0, scope: !8601)
!8607 = !DILocation(line: 2611, column: 13, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8601, file: !839, line: 2611, column: 7)
!8609 = !DILocation(line: 2611, column: 7, scope: !8601)
!8610 = !DILocation(line: 2614, column: 22, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8608, file: !839, line: 2612, column: 3)
!8612 = !DILocation(line: 2615, column: 3, scope: !8611)
!8613 = !DILocation(line: 0, scope: !8608)
!8614 = !DILocation(line: 2621, column: 3, scope: !8601)
!8615 = distinct !DISubprogram(name: "vTaskSetTaskNumber", scope: !839, file: !839, line: 2629, type: !8616, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8618)
!8616 = !DISubroutineType(types: !8617)
!8617 = !{null, !868, !8192}
!8618 = !{!8619, !8620, !8621}
!8619 = !DILocalVariable(name: "xTask", arg: 1, scope: !8615, file: !839, line: 2629, type: !868)
!8620 = !DILocalVariable(name: "uxHandle", arg: 2, scope: !8615, file: !839, line: 2629, type: !8192)
!8621 = !DILocalVariable(name: "pxTCB", scope: !8615, file: !839, line: 2631, type: !870)
!8622 = !DILocation(line: 0, scope: !8615)
!8623 = !DILocation(line: 2633, column: 13, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8615, file: !839, line: 2633, column: 7)
!8625 = !DILocation(line: 2633, column: 7, scope: !8615)
!8626 = !DILocation(line: 2636, column: 11, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8624, file: !839, line: 2634, column: 3)
!8628 = !DILocation(line: 2636, column: 24, scope: !8627)
!8629 = !DILocation(line: 2637, column: 3, scope: !8627)
!8630 = !DILocation(line: 2638, column: 2, scope: !8615)
!8631 = distinct !DISubprogram(name: "uxTaskGetStackHighWaterMark", scope: !839, file: !839, line: 3203, type: !7688, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8632)
!8632 = !{!8633, !8634, !8635, !8636}
!8633 = !DILocalVariable(name: "xTask", arg: 1, scope: !8631, file: !839, line: 3203, type: !868)
!8634 = !DILocalVariable(name: "pxTCB", scope: !8631, file: !839, line: 3205, type: !870)
!8635 = !DILocalVariable(name: "pucEndOfStack", scope: !8631, file: !839, line: 3206, type: !210)
!8636 = !DILocalVariable(name: "uxReturn", scope: !8631, file: !839, line: 3207, type: !862)
!8637 = !DILocation(line: 0, scope: !8631)
!8638 = !DILocation(line: 3209, column: 11, scope: !8631)
!8639 = !DILocation(line: 3213, column: 41, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8631, file: !839, line: 3212, column: 3)
!8641 = !DILocation(line: 3221, column: 30, scope: !8631)
!8642 = !DILocation(line: 3221, column: 14, scope: !8631)
!8643 = !DILocation(line: 3223, column: 3, scope: !8631)
!8644 = distinct !DISubprogram(name: "xTaskGetCurrentTaskHandle", scope: !839, file: !839, line: 3294, type: !8645, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8647)
!8645 = !DISubroutineType(types: !8646)
!8646 = !{!868}
!8647 = !{!8648}
!8648 = !DILocalVariable(name: "xReturn", scope: !8644, file: !839, line: 3296, type: !868)
!8649 = !DILocation(line: 3301, column: 13, scope: !8644)
!8650 = !DILocation(line: 0, scope: !8644)
!8651 = !DILocation(line: 3303, column: 3, scope: !8644)
!8652 = distinct !DISubprogram(name: "xTaskGetSchedulerState", scope: !839, file: !839, line: 3311, type: !7446, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8653)
!8653 = !{!8654}
!8654 = !DILocalVariable(name: "xReturn", scope: !8652, file: !839, line: 3313, type: !869)
!8655 = !DILocation(line: 3315, column: 7, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8652, file: !839, line: 3315, column: 7)
!8657 = !DILocation(line: 3315, column: 25, scope: !8656)
!8658 = !DILocation(line: 3315, column: 7, scope: !8652)
!8659 = !DILocation(line: 3321, column: 8, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !839, line: 3321, column: 8)
!8661 = distinct !DILexicalBlock(scope: !8656, file: !839, line: 3320, column: 3)
!8662 = !DILocation(line: 3321, column: 29, scope: !8660)
!8663 = !DILocation(line: 0, scope: !8656)
!8664 = !DILocation(line: 0, scope: !8652)
!8665 = !DILocation(line: 3331, column: 3, scope: !8652)
!8666 = distinct !DISubprogram(name: "vTaskPriorityInherit", scope: !839, file: !839, line: 3339, type: !8667, scopeLine: 3340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8669)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{null, !7968}
!8669 = !{!8670, !8671}
!8670 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !8666, file: !839, line: 3339, type: !7968)
!8671 = !DILocalVariable(name: "pxTCB", scope: !8666, file: !839, line: 3341, type: !7201)
!8672 = !DILocation(line: 0, scope: !8666)
!8673 = !DILocation(line: 3345, column: 21, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8666, file: !839, line: 3345, column: 7)
!8675 = !DILocation(line: 3345, column: 7, scope: !8666)
!8676 = !DILocation(line: 3347, column: 15, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !839, line: 3347, column: 8)
!8678 = distinct !DILexicalBlock(scope: !8674, file: !839, line: 3346, column: 3)
!8679 = !DILocation(line: 3347, column: 28, scope: !8677)
!8680 = !DILocation(line: 3347, column: 42, scope: !8677)
!8681 = !DILocation(line: 3347, column: 26, scope: !8677)
!8682 = !DILocation(line: 3347, column: 8, scope: !8678)
!8683 = !DILocation(line: 3352, column: 11, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8685, file: !839, line: 3352, column: 9)
!8685 = distinct !DILexicalBlock(scope: !8677, file: !839, line: 3348, column: 4)
!8686 = !DILocation(line: 3352, column: 102, scope: !8684)
!8687 = !DILocation(line: 3352, column: 9, scope: !8685)
!8688 = !DILocation(line: 3354, column: 6, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8684, file: !839, line: 3353, column: 5)
!8690 = !DILocation(line: 3355, column: 5, scope: !8689)
!8691 = !DILocation(line: 3363, column: 9, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8685, file: !839, line: 3363, column: 9)
!8693 = !DILocation(line: 3363, column: 9, scope: !8685)
!8694 = !DILocation(line: 3365, column: 10, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !839, line: 3365, column: 10)
!8696 = distinct !DILexicalBlock(scope: !8692, file: !839, line: 3364, column: 5)
!8697 = !DILocation(line: 3365, column: 55, scope: !8695)
!8698 = !DILocation(line: 3365, column: 10, scope: !8696)
!8699 = !DILocation(line: 3367, column: 7, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !839, line: 3367, column: 7)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !839, line: 3367, column: 7)
!8702 = distinct !DILexicalBlock(scope: !8695, file: !839, line: 3366, column: 6)
!8703 = !DILocation(line: 3367, column: 7, scope: !8701)
!8704 = !DILocation(line: 3367, column: 7, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8700, file: !839, line: 3367, column: 7)
!8706 = !DILocation(line: 3375, column: 26, scope: !8696)
!8707 = !DILocation(line: 3375, column: 40, scope: !8696)
!8708 = !DILocation(line: 3375, column: 24, scope: !8696)
!8709 = !DILocation(line: 3376, column: 6, scope: !8696)
!8710 = !DILocation(line: 3377, column: 5, scope: !8696)
!8711 = !DILocation(line: 3381, column: 26, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8692, file: !839, line: 3379, column: 5)
!8713 = !DILocation(line: 3381, column: 40, scope: !8712)
!8714 = !DILocation(line: 3381, column: 24, scope: !8712)
!8715 = !DILocation(line: 3395, column: 2, scope: !8666)
!8716 = distinct !DISubprogram(name: "xTaskPriorityDisinherit", scope: !839, file: !839, line: 3402, type: !7966, scopeLine: 3403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8717)
!8717 = !{!8718, !8719, !8720}
!8718 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !8716, file: !839, line: 3402, type: !7968)
!8719 = !DILocalVariable(name: "pxTCB", scope: !8716, file: !839, line: 3404, type: !7201)
!8720 = !DILocalVariable(name: "xReturn", scope: !8716, file: !839, line: 3405, type: !869)
!8721 = !DILocation(line: 0, scope: !8716)
!8722 = !DILocation(line: 3407, column: 21, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8716, file: !839, line: 3407, column: 7)
!8724 = !DILocation(line: 3407, column: 7, scope: !8716)
!8725 = !DILocation(line: 3409, column: 4, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !839, line: 3409, column: 4)
!8727 = distinct !DILexicalBlock(scope: !8723, file: !839, line: 3408, column: 3)
!8728 = !DILocation(line: 3409, column: 4, scope: !8727)
!8729 = !DILocation(line: 3409, column: 4, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8726, file: !839, line: 3409, column: 4)
!8731 = !DILocation(line: 3410, column: 28, scope: !8727)
!8732 = !DILocation(line: 3412, column: 15, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8727, file: !839, line: 3412, column: 8)
!8734 = !DILocation(line: 3412, column: 36, scope: !8733)
!8735 = !DILocation(line: 3412, column: 26, scope: !8733)
!8736 = !DILocation(line: 3412, column: 8, scope: !8727)
!8737 = !DILocation(line: 3422, column: 34, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !839, line: 3422, column: 10)
!8739 = distinct !DILexicalBlock(scope: !8740, file: !839, line: 3416, column: 5)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !839, line: 3415, column: 9)
!8741 = distinct !DILexicalBlock(scope: !8733, file: !839, line: 3413, column: 4)
!8742 = !DILocation(line: 3422, column: 10, scope: !8738)
!8743 = !DILocation(line: 3422, column: 55, scope: !8738)
!8744 = !DILocation(line: 3422, column: 10, scope: !8739)
!8745 = !DILocation(line: 3424, column: 7, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !839, line: 3424, column: 7)
!8747 = distinct !DILexicalBlock(scope: !8748, file: !839, line: 3424, column: 7)
!8748 = distinct !DILexicalBlock(scope: !8738, file: !839, line: 3423, column: 6)
!8749 = !DILocation(line: 3424, column: 7, scope: !8747)
!8750 = !DILocation(line: 3424, column: 7, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8746, file: !839, line: 3424, column: 7)
!8752 = !DILocation(line: 3434, column: 33, scope: !8739)
!8753 = !DILocation(line: 3434, column: 24, scope: !8739)
!8754 = !DILocation(line: 3439, column: 6, scope: !8739)
!8755 = !DILocation(line: 3440, column: 6, scope: !8739)
!8756 = !DILocation(line: 3451, column: 5, scope: !8739)
!8757 = !DILocation(line: 3467, column: 3, scope: !8716)
!8758 = distinct !DISubprogram(name: "vTaskList", scope: !839, file: !839, line: 3565, type: !8759, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8761)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{null, !201}
!8761 = !{!8762, !8763, !8764, !8765, !8766}
!8762 = !DILocalVariable(name: "pcWriteBuffer", arg: 1, scope: !8758, file: !839, line: 3565, type: !201)
!8763 = !DILocalVariable(name: "pxTaskStatusArray", scope: !8758, file: !839, line: 3567, type: !8180)
!8764 = !DILocalVariable(name: "uxArraySize", scope: !8758, file: !839, line: 3568, type: !955)
!8765 = !DILocalVariable(name: "x", scope: !8758, file: !839, line: 3568, type: !955)
!8766 = !DILocalVariable(name: "cStatus", scope: !8758, file: !839, line: 3569, type: !202)
!8767 = !DILocation(line: 0, scope: !8758)
!8768 = !DILocation(line: 3568, column: 2, scope: !8758)
!8769 = !DILocation(line: 3568, column: 23, scope: !8758)
!8770 = !DILocation(line: 3568, column: 36, scope: !8758)
!8771 = !DILocation(line: 3597, column: 18, scope: !8758)
!8772 = !DILocation(line: 3601, column: 17, scope: !8758)
!8773 = !DILocation(line: 3601, column: 15, scope: !8758)
!8774 = !DILocation(line: 3604, column: 37, scope: !8758)
!8775 = !DILocation(line: 3604, column: 60, scope: !8758)
!8776 = !DILocation(line: 3604, column: 23, scope: !8758)
!8777 = !DILocation(line: 3606, column: 25, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8758, file: !839, line: 3606, column: 7)
!8779 = !DILocation(line: 3606, column: 7, scope: !8758)
!8780 = !DILocation(line: 3609, column: 59, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8778, file: !839, line: 3607, column: 3)
!8782 = !DILocation(line: 3609, column: 18, scope: !8781)
!8783 = !DILocation(line: 3609, column: 16, scope: !8781)
!8784 = !DILocation(line: 3612, column: 11, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8781, file: !839, line: 3612, column: 4)
!8786 = !DILocation(line: 3612, column: 16, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8785, file: !839, line: 3612, column: 4)
!8788 = !DILocation(line: 3612, column: 20, scope: !8787)
!8789 = !DILocation(line: 3612, column: 18, scope: !8787)
!8790 = !DILocation(line: 3612, column: 4, scope: !8785)
!8791 = !DILocation(line: 3614, column: 32, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8787, file: !839, line: 3613, column: 4)
!8793 = !DILocation(line: 3614, column: 36, scope: !8792)
!8794 = !DILocation(line: 3614, column: 5, scope: !8792)
!8795 = !DILocation(line: 3636, column: 77, scope: !8792)
!8796 = !DILocation(line: 3636, column: 81, scope: !8792)
!8797 = !DILocation(line: 3636, column: 21, scope: !8792)
!8798 = !DILocation(line: 3639, column: 98, scope: !8792)
!8799 = !DILocation(line: 3639, column: 102, scope: !8792)
!8800 = !DILocation(line: 3639, column: 157, scope: !8792)
!8801 = !DILocation(line: 3639, column: 161, scope: !8792)
!8802 = !DILocation(line: 3639, column: 121, scope: !8792)
!8803 = !DILocation(line: 3639, column: 219, scope: !8792)
!8804 = !DILocation(line: 3639, column: 223, scope: !8792)
!8805 = !DILocation(line: 3639, column: 5, scope: !8792)
!8806 = !DILocation(line: 3640, column: 22, scope: !8792)
!8807 = !DILocation(line: 3640, column: 19, scope: !8792)
!8808 = !DILocation(line: 3612, column: 34, scope: !8787)
!8809 = distinct !{!8809, !8790, !8810}
!8810 = !DILocation(line: 3641, column: 4, scope: !8785)
!8811 = !DILocation(line: 3644, column: 4, scope: !8781)
!8812 = !DILocation(line: 3645, column: 3, scope: !8781)
!8813 = !DILocation(line: 3650, column: 2, scope: !8758)
!8814 = distinct !DISubprogram(name: "prvWriteNameToBuffer", scope: !839, file: !839, line: 3539, type: !8815, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8817)
!8815 = !DISubroutineType(types: !8816)
!8816 = !{!201, !201, !331}
!8817 = !{!8818, !8819, !8820}
!8818 = !DILocalVariable(name: "pcBuffer", arg: 1, scope: !8814, file: !839, line: 3539, type: !201)
!8819 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !8814, file: !839, line: 3539, type: !331)
!8820 = !DILocalVariable(name: "x", scope: !8814, file: !839, line: 3541, type: !869)
!8821 = !DILocation(line: 0, scope: !8814)
!8822 = !DILocation(line: 3544, column: 3, scope: !8814)
!8823 = !DILocation(line: 3548, column: 12, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8814, file: !839, line: 3548, column: 3)
!8825 = !DILocation(line: 3548, column: 34, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8824, file: !839, line: 3548, column: 3)
!8827 = !DILocation(line: 3548, column: 3, scope: !8824)
!8828 = !DILocation(line: 3550, column: 4, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8826, file: !839, line: 3549, column: 3)
!8830 = !DILocation(line: 3550, column: 18, scope: !8829)
!8831 = !DILocation(line: 3548, column: 70, scope: !8826)
!8832 = distinct !{!8832, !8827, !8833}
!8833 = !DILocation(line: 3551, column: 3, scope: !8824)
!8834 = !DILocation(line: 0, scope: !8824)
!8835 = !DILocation(line: 3554, column: 3, scope: !8814)
!8836 = !DILocation(line: 3554, column: 17, scope: !8814)
!8837 = !DILocation(line: 3557, column: 3, scope: !8814)
!8838 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !839, file: !839, line: 3779, type: !8139, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8839)
!8839 = !{!8840}
!8840 = !DILocalVariable(name: "uxReturn", scope: !8838, file: !839, line: 3781, type: !884)
!8841 = !DILocation(line: 3783, column: 13, scope: !8838)
!8842 = !DILocation(line: 0, scope: !8838)
!8843 = !DILocation(line: 3787, column: 2, scope: !8838)
!8844 = !DILocation(line: 3789, column: 2, scope: !8838)
!8845 = distinct !DISubprogram(name: "pvTaskIncrementMutexHeldCount", scope: !839, file: !839, line: 3795, type: !8846, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !2004)
!8846 = !DISubroutineType(types: !1922)
!8847 = !DILocation(line: 3799, column: 7, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8845, file: !839, line: 3799, column: 7)
!8849 = !DILocation(line: 3799, column: 20, scope: !8848)
!8850 = !DILocation(line: 3799, column: 7, scope: !8845)
!8851 = !DILocation(line: 3801, column: 6, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !839, line: 3800, column: 3)
!8853 = !DILocation(line: 3801, column: 20, scope: !8852)
!8854 = !DILocation(line: 3801, column: 35, scope: !8852)
!8855 = !DILocation(line: 3802, column: 3, scope: !8852)
!8856 = !DILocation(line: 3804, column: 10, scope: !8845)
!8857 = !DILocation(line: 3804, column: 3, scope: !8845)
!8858 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !839, file: !839, line: 3812, type: !8859, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8861)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{!61, !869, !884}
!8861 = !{!8862, !8863, !8864, !8865}
!8862 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !8858, file: !839, line: 3812, type: !869)
!8863 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !8858, file: !839, line: 3812, type: !884)
!8864 = !DILocalVariable(name: "xTimeToWake", scope: !8858, file: !839, line: 3814, type: !884)
!8865 = !DILocalVariable(name: "ulReturn", scope: !8858, file: !839, line: 3815, type: !61)
!8866 = !DILocation(line: 0, scope: !8858)
!8867 = !DILocation(line: 3817, column: 3, scope: !8858)
!8868 = !DILocation(line: 3820, column: 8, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !839, line: 3820, column: 8)
!8870 = distinct !DILexicalBlock(scope: !8858, file: !839, line: 3818, column: 3)
!8871 = !DILocation(line: 3820, column: 22, scope: !8869)
!8872 = !DILocation(line: 3820, column: 38, scope: !8869)
!8873 = !DILocation(line: 3820, column: 8, scope: !8870)
!8874 = !DILocation(line: 3823, column: 5, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8869, file: !839, line: 3821, column: 4)
!8876 = !DILocation(line: 3823, column: 19, scope: !8875)
!8877 = !DILocation(line: 3823, column: 32, scope: !8875)
!8878 = !DILocation(line: 3825, column: 22, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8875, file: !839, line: 3825, column: 9)
!8880 = !DILocation(line: 3825, column: 9, scope: !8875)
!8881 = !DILocation(line: 3829, column: 27, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !839, line: 3829, column: 10)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !839, line: 3826, column: 5)
!8884 = !DILocation(line: 3829, column: 41, scope: !8882)
!8885 = !DILocation(line: 3829, column: 10, scope: !8882)
!8886 = !DILocation(line: 3829, column: 62, scope: !8882)
!8887 = !DILocation(line: 3829, column: 10, scope: !8883)
!8888 = !DILocation(line: 3834, column: 7, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8882, file: !839, line: 3830, column: 6)
!8890 = !DILocation(line: 3835, column: 6, scope: !8889)
!8891 = !DILocation(line: 3843, column: 24, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !839, line: 3843, column: 11)
!8893 = distinct !DILexicalBlock(scope: !8883, file: !839, line: 3842, column: 6)
!8894 = !DILocation(line: 3843, column: 11, scope: !8893)
!8895 = !DILocation(line: 3849, column: 48, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8892, file: !839, line: 3844, column: 7)
!8897 = !DILocation(line: 3849, column: 62, scope: !8896)
!8898 = !DILocation(line: 3849, column: 8, scope: !8896)
!8899 = !DILocation(line: 3850, column: 7, scope: !8896)
!8900 = !DILocation(line: 3857, column: 22, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8892, file: !839, line: 3852, column: 7)
!8902 = !DILocation(line: 3857, column: 33, scope: !8901)
!8903 = !DILocation(line: 3858, column: 8, scope: !8901)
!8904 = !DILocation(line: 3876, column: 6, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8883, file: !839, line: 3876, column: 6)
!8906 = !{i64 2148503533}
!8907 = !{i64 2148503573}
!8908 = !DILocation(line: 3877, column: 5, scope: !8883)
!8909 = !DILocation(line: 3888, column: 3, scope: !8858)
!8910 = !DILocation(line: 3890, column: 3, scope: !8858)
!8911 = !DILocation(line: 3892, column: 15, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8858, file: !839, line: 3891, column: 3)
!8913 = !DILocation(line: 3892, column: 29, scope: !8912)
!8914 = !DILocation(line: 3894, column: 17, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8912, file: !839, line: 3894, column: 8)
!8916 = !DILocation(line: 3894, column: 8, scope: !8912)
!8917 = !DILocation(line: 3896, column: 27, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !839, line: 3896, column: 9)
!8919 = distinct !DILexicalBlock(scope: !8915, file: !839, line: 3895, column: 4)
!8920 = !DILocation(line: 0, scope: !8918)
!8921 = !DILocation(line: 3896, column: 9, scope: !8919)
!8922 = !DILocation(line: 3902, column: 39, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !839, line: 3901, column: 5)
!8924 = !DILocation(line: 3910, column: 4, scope: !8912)
!8925 = !DILocation(line: 3910, column: 18, scope: !8912)
!8926 = !DILocation(line: 3910, column: 31, scope: !8912)
!8927 = !DILocation(line: 3912, column: 3, scope: !8858)
!8928 = !DILocation(line: 3914, column: 3, scope: !8858)
!8929 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !839, file: !839, line: 3922, type: !8930, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8932)
!8930 = !DISubroutineType(types: !8931)
!8931 = !{!869, !61, !61, !2564, !884}
!8932 = !{!8933, !8934, !8935, !8936, !8937, !8938}
!8933 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !8929, file: !839, line: 3922, type: !61)
!8934 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !8929, file: !839, line: 3922, type: !61)
!8935 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !8929, file: !839, line: 3922, type: !2564)
!8936 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !8929, file: !839, line: 3922, type: !884)
!8937 = !DILocalVariable(name: "xTimeToWake", scope: !8929, file: !839, line: 3924, type: !884)
!8938 = !DILocalVariable(name: "xReturn", scope: !8929, file: !839, line: 3925, type: !869)
!8939 = !DILocation(line: 0, scope: !8929)
!8940 = !DILocation(line: 3927, column: 3, scope: !8929)
!8941 = !DILocation(line: 3930, column: 8, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !839, line: 3930, column: 8)
!8943 = distinct !DILexicalBlock(scope: !8929, file: !839, line: 3928, column: 3)
!8944 = !DILocation(line: 3930, column: 22, scope: !8942)
!8945 = !DILocation(line: 3930, column: 35, scope: !8942)
!8946 = !DILocation(line: 3930, column: 8, scope: !8943)
!8947 = !DILocation(line: 3935, column: 38, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8942, file: !839, line: 3931, column: 4)
!8949 = !DILocation(line: 3935, column: 5, scope: !8948)
!8950 = !DILocation(line: 3935, column: 19, scope: !8948)
!8951 = !DILocation(line: 3935, column: 35, scope: !8948)
!8952 = !DILocation(line: 3938, column: 5, scope: !8948)
!8953 = !DILocation(line: 3938, column: 19, scope: !8948)
!8954 = !DILocation(line: 3938, column: 32, scope: !8948)
!8955 = !DILocation(line: 3940, column: 22, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8948, file: !839, line: 3940, column: 9)
!8957 = !DILocation(line: 3940, column: 9, scope: !8948)
!8958 = !DILocation(line: 3944, column: 27, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !839, line: 3944, column: 10)
!8960 = distinct !DILexicalBlock(scope: !8956, file: !839, line: 3941, column: 5)
!8961 = !DILocation(line: 3944, column: 41, scope: !8959)
!8962 = !DILocation(line: 3944, column: 10, scope: !8959)
!8963 = !DILocation(line: 3944, column: 62, scope: !8959)
!8964 = !DILocation(line: 3944, column: 10, scope: !8960)
!8965 = !DILocation(line: 3949, column: 7, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8959, file: !839, line: 3945, column: 6)
!8967 = !DILocation(line: 3950, column: 6, scope: !8966)
!8968 = !DILocation(line: 3958, column: 24, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !839, line: 3958, column: 11)
!8970 = distinct !DILexicalBlock(scope: !8960, file: !839, line: 3957, column: 6)
!8971 = !DILocation(line: 3958, column: 11, scope: !8970)
!8972 = !DILocation(line: 3964, column: 48, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8969, file: !839, line: 3959, column: 7)
!8974 = !DILocation(line: 3964, column: 62, scope: !8973)
!8975 = !DILocation(line: 3964, column: 8, scope: !8973)
!8976 = !DILocation(line: 3965, column: 7, scope: !8973)
!8977 = !DILocation(line: 3972, column: 22, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8969, file: !839, line: 3967, column: 7)
!8979 = !DILocation(line: 3972, column: 33, scope: !8978)
!8980 = !DILocation(line: 3973, column: 8, scope: !8978)
!8981 = !DILocation(line: 3991, column: 6, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8960, file: !839, line: 3991, column: 6)
!8983 = !{i64 2148504304}
!8984 = !{i64 2148504344}
!8985 = !DILocation(line: 3992, column: 5, scope: !8960)
!8986 = !DILocation(line: 4003, column: 3, scope: !8929)
!8987 = !DILocation(line: 4005, column: 3, scope: !8929)
!8988 = !DILocation(line: 4007, column: 29, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !839, line: 4007, column: 8)
!8990 = distinct !DILexicalBlock(scope: !8929, file: !839, line: 4006, column: 3)
!8991 = !DILocation(line: 4007, column: 8, scope: !8990)
!8992 = !DILocation(line: 4011, column: 29, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !839, line: 4008, column: 4)
!8994 = !DILocation(line: 4011, column: 43, scope: !8993)
!8995 = !DILocation(line: 4011, column: 27, scope: !8993)
!8996 = !DILocation(line: 4012, column: 4, scope: !8993)
!8997 = !DILocation(line: 4018, column: 8, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8990, file: !839, line: 4018, column: 8)
!8999 = !DILocation(line: 4018, column: 22, scope: !8998)
!9000 = !DILocation(line: 4018, column: 35, scope: !8998)
!9001 = !DILocation(line: 4018, column: 8, scope: !8990)
!9002 = !DILocation(line: 4027, column: 38, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8998, file: !839, line: 4024, column: 4)
!9004 = !DILocation(line: 4027, column: 5, scope: !9003)
!9005 = !DILocation(line: 4027, column: 19, scope: !9003)
!9006 = !DILocation(line: 4027, column: 35, scope: !9003)
!9007 = !DILocation(line: 0, scope: !8998)
!9008 = !DILocation(line: 4031, column: 4, scope: !8990)
!9009 = !DILocation(line: 4031, column: 18, scope: !8990)
!9010 = !DILocation(line: 4031, column: 31, scope: !8990)
!9011 = !DILocation(line: 4033, column: 3, scope: !8929)
!9012 = !DILocation(line: 4035, column: 3, scope: !8929)
!9013 = distinct !DISubprogram(name: "xTaskNotify", scope: !839, file: !839, line: 4043, type: !9014, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9017)
!9014 = !DISubroutineType(types: !9015)
!9015 = !{!869, !868, !61, !9016}
!9016 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !847, line: 129, baseType: !854)
!9017 = !{!9018, !9019, !9020, !9021, !9022, !9023}
!9018 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9013, file: !839, line: 4043, type: !868)
!9019 = !DILocalVariable(name: "ulValue", arg: 2, scope: !9013, file: !839, line: 4043, type: !61)
!9020 = !DILocalVariable(name: "eAction", arg: 3, scope: !9013, file: !839, line: 4043, type: !9016)
!9021 = !DILocalVariable(name: "pxTCB", scope: !9013, file: !839, line: 4045, type: !870)
!9022 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9013, file: !839, line: 4046, type: !904)
!9023 = !DILocalVariable(name: "xReturn", scope: !9013, file: !839, line: 4047, type: !869)
!9024 = !DILocation(line: 0, scope: !9013)
!9025 = !DILocation(line: 4049, column: 3, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9013, file: !839, line: 4049, column: 3)
!9027 = !DILocation(line: 4049, column: 3, scope: !9013)
!9028 = !DILocation(line: 4049, column: 3, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9026, file: !839, line: 4049, column: 3)
!9030 = !DILocation(line: 4052, column: 3, scope: !9013)
!9031 = !DILocation(line: 4054, column: 34, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9013, file: !839, line: 4053, column: 3)
!9033 = !DILocation(line: 4056, column: 24, scope: !9032)
!9034 = !DILocation(line: 4058, column: 4, scope: !9032)
!9035 = !DILocation(line: 4061, column: 13, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9032, file: !839, line: 4059, column: 4)
!9037 = !DILocation(line: 4061, column: 29, scope: !9036)
!9038 = !DILocation(line: 4062, column: 6, scope: !9036)
!9039 = !DILocation(line: 4065, column: 15, scope: !9036)
!9040 = !DILocation(line: 4065, column: 32, scope: !9036)
!9041 = !DILocation(line: 4066, column: 6, scope: !9036)
!9042 = !DILocation(line: 4069, column: 13, scope: !9036)
!9043 = !DILocation(line: 4069, column: 29, scope: !9036)
!9044 = !DILocation(line: 4070, column: 6, scope: !9036)
!9045 = !DILocation(line: 4073, column: 31, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9036, file: !839, line: 4073, column: 10)
!9047 = !DILocation(line: 4073, column: 10, scope: !9036)
!9048 = !DILocation(line: 4075, column: 14, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9046, file: !839, line: 4074, column: 6)
!9050 = !DILocation(line: 4075, column: 30, scope: !9049)
!9051 = !DILocation(line: 4076, column: 6, scope: !9049)
!9052 = !DILocation(line: 4093, column: 29, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9032, file: !839, line: 4093, column: 8)
!9054 = !DILocation(line: 4093, column: 8, scope: !9032)
!9055 = !DILocation(line: 4095, column: 38, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9053, file: !839, line: 4094, column: 4)
!9057 = !DILocation(line: 4095, column: 14, scope: !9056)
!9058 = !DILocation(line: 4096, column: 5, scope: !9056)
!9059 = !DILocation(line: 4099, column: 5, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9056, file: !839, line: 4099, column: 5)
!9061 = !DILocation(line: 4099, column: 5, scope: !9056)
!9062 = !DILocation(line: 4099, column: 5, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9060, file: !839, line: 4099, column: 5)
!9064 = !DILocation(line: 4101, column: 16, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9056, file: !839, line: 4101, column: 9)
!9066 = !DILocation(line: 4101, column: 29, scope: !9065)
!9067 = !DILocation(line: 4101, column: 43, scope: !9065)
!9068 = !DILocation(line: 4101, column: 27, scope: !9065)
!9069 = !DILocation(line: 4101, column: 9, scope: !9056)
!9070 = !DILocation(line: 4105, column: 6, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9072, file: !839, line: 4105, column: 6)
!9072 = distinct !DILexicalBlock(scope: !9065, file: !839, line: 4102, column: 5)
!9073 = !{i64 2148505929}
!9074 = !{i64 2148505969}
!9075 = !DILocation(line: 4106, column: 5, scope: !9072)
!9076 = !DILocation(line: 4117, column: 3, scope: !9013)
!9077 = !DILocation(line: 4119, column: 3, scope: !9013)
!9078 = distinct !DISubprogram(name: "xTaskNotifyFromISR", scope: !839, file: !839, line: 4127, type: !9079, scopeLine: 4128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9081)
!9079 = !DISubroutineType(types: !9080)
!9080 = !{!869, !868, !61, !9016, !1101}
!9081 = !{!9082, !9083, !9084, !9085, !9086, !9087, !9088, !9089}
!9082 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9078, file: !839, line: 4127, type: !868)
!9083 = !DILocalVariable(name: "ulValue", arg: 2, scope: !9078, file: !839, line: 4127, type: !61)
!9084 = !DILocalVariable(name: "eAction", arg: 3, scope: !9078, file: !839, line: 4127, type: !9016)
!9085 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !9078, file: !839, line: 4127, type: !1101)
!9086 = !DILocalVariable(name: "pxTCB", scope: !9078, file: !839, line: 4129, type: !870)
!9087 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9078, file: !839, line: 4130, type: !904)
!9088 = !DILocalVariable(name: "xReturn", scope: !9078, file: !839, line: 4131, type: !869)
!9089 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9078, file: !839, line: 4132, type: !862)
!9090 = !DILocation(line: 0, scope: !9078)
!9091 = !DILocation(line: 4134, column: 3, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9078, file: !839, line: 4134, column: 3)
!9093 = !DILocation(line: 4134, column: 3, scope: !9078)
!9094 = !DILocation(line: 4134, column: 3, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9092, file: !839, line: 4134, column: 3)
!9096 = !DILocation(line: 4152, column: 3, scope: !9078)
!9097 = !DILocation(line: 231, column: 2, scope: !7710, inlinedAt: !9098)
!9098 = distinct !DILocation(line: 4156, column: 28, scope: !9078)
!9099 = !DILocation(line: 0, scope: !7710, inlinedAt: !9098)
!9100 = !DILocation(line: 4158, column: 34, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9078, file: !839, line: 4157, column: 3)
!9102 = !DILocation(line: 4160, column: 24, scope: !9101)
!9103 = !DILocation(line: 4162, column: 4, scope: !9101)
!9104 = !DILocation(line: 4165, column: 13, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9101, file: !839, line: 4163, column: 4)
!9106 = !DILocation(line: 4165, column: 29, scope: !9105)
!9107 = !DILocation(line: 4166, column: 6, scope: !9105)
!9108 = !DILocation(line: 4169, column: 15, scope: !9105)
!9109 = !DILocation(line: 4169, column: 32, scope: !9105)
!9110 = !DILocation(line: 4170, column: 6, scope: !9105)
!9111 = !DILocation(line: 4173, column: 13, scope: !9105)
!9112 = !DILocation(line: 4173, column: 29, scope: !9105)
!9113 = !DILocation(line: 4174, column: 6, scope: !9105)
!9114 = !DILocation(line: 4177, column: 31, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9105, file: !839, line: 4177, column: 10)
!9116 = !DILocation(line: 4177, column: 10, scope: !9105)
!9117 = !DILocation(line: 4179, column: 14, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9115, file: !839, line: 4178, column: 6)
!9119 = !DILocation(line: 4179, column: 30, scope: !9118)
!9120 = !DILocation(line: 4180, column: 6, scope: !9118)
!9121 = !DILocation(line: 4197, column: 29, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9101, file: !839, line: 4197, column: 8)
!9123 = !DILocation(line: 4197, column: 8, scope: !9101)
!9124 = !DILocation(line: 4200, column: 5, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9126, file: !839, line: 4200, column: 5)
!9126 = distinct !DILexicalBlock(scope: !9122, file: !839, line: 4198, column: 4)
!9127 = !DILocation(line: 4200, column: 5, scope: !9126)
!9128 = !DILocation(line: 4200, column: 5, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9125, file: !839, line: 4200, column: 5)
!9130 = !DILocation(line: 4202, column: 9, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9126, file: !839, line: 4202, column: 9)
!9132 = !DILocation(line: 4202, column: 30, scope: !9131)
!9133 = !DILocation(line: 4202, column: 9, scope: !9126)
!9134 = !DILocation(line: 4204, column: 39, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9131, file: !839, line: 4203, column: 5)
!9136 = !DILocation(line: 4204, column: 15, scope: !9135)
!9137 = !DILocation(line: 4205, column: 6, scope: !9135)
!9138 = !DILocation(line: 4206, column: 5, scope: !9135)
!9139 = !DILocation(line: 4211, column: 6, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9131, file: !839, line: 4208, column: 5)
!9141 = !DILocation(line: 4214, column: 16, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9126, file: !839, line: 4214, column: 9)
!9143 = !DILocation(line: 4214, column: 29, scope: !9142)
!9144 = !DILocation(line: 4214, column: 43, scope: !9142)
!9145 = !DILocation(line: 4214, column: 27, scope: !9142)
!9146 = !DILocation(line: 4214, column: 9, scope: !9126)
!9147 = !DILocation(line: 4220, column: 34, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !839, line: 4219, column: 6)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !839, line: 4218, column: 10)
!9150 = distinct !DILexicalBlock(scope: !9142, file: !839, line: 4215, column: 5)
!9151 = !DILocation(line: 4221, column: 6, scope: !9148)
!9152 = !DILocation(line: 0, scope: !7721, inlinedAt: !9153)
!9153 = distinct !DILocation(line: 4229, column: 3, scope: !9078)
!9154 = !DILocation(line: 249, column: 2, scope: !7721, inlinedAt: !9153)
!9155 = !DILocation(line: 4231, column: 3, scope: !9078)
!9156 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !839, file: !839, line: 4239, type: !9157, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9159)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{null, !868, !1101}
!9159 = !{!9160, !9161, !9162, !9163, !9164}
!9160 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9156, file: !839, line: 4239, type: !868)
!9161 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !9156, file: !839, line: 4239, type: !1101)
!9162 = !DILocalVariable(name: "pxTCB", scope: !9156, file: !839, line: 4241, type: !870)
!9163 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9156, file: !839, line: 4242, type: !904)
!9164 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9156, file: !839, line: 4243, type: !862)
!9165 = !DILocation(line: 0, scope: !9156)
!9166 = !DILocation(line: 4245, column: 3, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9156, file: !839, line: 4245, column: 3)
!9168 = !DILocation(line: 4245, column: 3, scope: !9156)
!9169 = !DILocation(line: 4245, column: 3, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9167, file: !839, line: 4245, column: 3)
!9171 = !DILocation(line: 4263, column: 3, scope: !9156)
!9172 = !DILocation(line: 231, column: 2, scope: !7710, inlinedAt: !9173)
!9173 = distinct !DILocation(line: 4267, column: 28, scope: !9156)
!9174 = !DILocation(line: 0, scope: !7710, inlinedAt: !9173)
!9175 = !DILocation(line: 4269, column: 34, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9156, file: !839, line: 4268, column: 3)
!9177 = !DILocation(line: 4270, column: 24, scope: !9176)
!9178 = !DILocation(line: 4274, column: 13, scope: !9176)
!9179 = !DILocation(line: 4274, column: 30, scope: !9176)
!9180 = !DILocation(line: 4278, column: 29, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9176, file: !839, line: 4278, column: 8)
!9182 = !DILocation(line: 4278, column: 8, scope: !9176)
!9183 = !DILocation(line: 4281, column: 5, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !839, line: 4281, column: 5)
!9185 = distinct !DILexicalBlock(scope: !9181, file: !839, line: 4279, column: 4)
!9186 = !DILocation(line: 4281, column: 5, scope: !9185)
!9187 = !DILocation(line: 4281, column: 5, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9184, file: !839, line: 4281, column: 5)
!9189 = !DILocation(line: 4283, column: 9, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9185, file: !839, line: 4283, column: 9)
!9191 = !DILocation(line: 4283, column: 30, scope: !9190)
!9192 = !DILocation(line: 4283, column: 9, scope: !9185)
!9193 = !DILocation(line: 4285, column: 39, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9190, file: !839, line: 4284, column: 5)
!9195 = !DILocation(line: 4285, column: 15, scope: !9194)
!9196 = !DILocation(line: 4286, column: 6, scope: !9194)
!9197 = !DILocation(line: 4287, column: 5, scope: !9194)
!9198 = !DILocation(line: 4292, column: 6, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9190, file: !839, line: 4289, column: 5)
!9200 = !DILocation(line: 4295, column: 16, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9185, file: !839, line: 4295, column: 9)
!9202 = !DILocation(line: 4295, column: 29, scope: !9201)
!9203 = !DILocation(line: 4295, column: 43, scope: !9201)
!9204 = !DILocation(line: 4295, column: 27, scope: !9201)
!9205 = !DILocation(line: 4295, column: 9, scope: !9185)
!9206 = !DILocation(line: 4301, column: 34, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !839, line: 4300, column: 6)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !839, line: 4299, column: 10)
!9209 = distinct !DILexicalBlock(scope: !9201, file: !839, line: 4296, column: 5)
!9210 = !DILocation(line: 4302, column: 6, scope: !9207)
!9211 = !DILocation(line: 0, scope: !7721, inlinedAt: !9212)
!9212 = distinct !DILocation(line: 4310, column: 3, scope: !9156)
!9213 = !DILocation(line: 249, column: 2, scope: !7721, inlinedAt: !9212)
!9214 = !DILocation(line: 4311, column: 2, scope: !9156)
!9215 = distinct !DISubprogram(name: "uxTaskGetBottomOfStack", scope: !839, file: !839, line: 4351, type: !7688, scopeLine: 4352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9216)
!9216 = !{!9217, !9218}
!9217 = !DILocalVariable(name: "TaskHandle_t", arg: 1, scope: !9215, file: !839, line: 4351, type: !868)
!9218 = !DILocalVariable(name: "pxTCB", scope: !9215, file: !839, line: 4353, type: !870)
!9219 = !DILocation(line: 0, scope: !9215)
!9220 = !DILocation(line: 4355, column: 24, scope: !9215)
!9221 = !DILocation(line: 4355, column: 10, scope: !9215)
!9222 = !DILocation(line: 4355, column: 47, scope: !9215)
!9223 = !DILocation(line: 4355, column: 62, scope: !9215)
!9224 = !DILocation(line: 4358, column: 33, scope: !9215)
!9225 = !DILocation(line: 4358, column: 9, scope: !9215)
!9226 = !DILocation(line: 4358, column: 2, scope: !9215)
!9227 = distinct !DISubprogram(name: "vListInitialise", scope: !1927, file: !1927, line: 79, type: !9228, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !9231)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{null, !9230}
!9230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1939)
!9231 = !{!9232}
!9232 = !DILocalVariable(name: "pxList", arg: 1, scope: !9227, file: !1927, line: 79, type: !9230)
!9233 = !DILocation(line: 0, scope: !9227)
!9234 = !DILocation(line: 84, column: 48, scope: !9227)
!9235 = !DILocation(line: 84, column: 10, scope: !9227)
!9236 = !DILocation(line: 84, column: 18, scope: !9227)
!9237 = !DILocation(line: 88, column: 19, scope: !9227)
!9238 = !DILocation(line: 88, column: 30, scope: !9227)
!9239 = !DILocation(line: 92, column: 19, scope: !9227)
!9240 = !DILocation(line: 92, column: 26, scope: !9227)
!9241 = !DILocation(line: 93, column: 19, scope: !9227)
!9242 = !DILocation(line: 93, column: 30, scope: !9227)
!9243 = !DILocation(line: 95, column: 10, scope: !9227)
!9244 = !DILocation(line: 95, column: 26, scope: !9227)
!9245 = !DILocation(line: 101, column: 1, scope: !9227)
!9246 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !1927, file: !1927, line: 104, type: !9247, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !9250)
!9247 = !DISubroutineType(types: !9248)
!9248 = !{null, !9249}
!9249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1929)
!9250 = !{!9251}
!9251 = !DILocalVariable(name: "pxItem", arg: 1, scope: !9246, file: !1927, line: 104, type: !9249)
!9252 = !DILocation(line: 0, scope: !9246)
!9253 = !DILocation(line: 107, column: 10, scope: !9246)
!9254 = !DILocation(line: 107, column: 22, scope: !9246)
!9255 = !DILocation(line: 113, column: 1, scope: !9246)
!9256 = distinct !DISubprogram(name: "vListInsertEnd", scope: !1927, file: !1927, line: 116, type: !9257, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !9259)
!9257 = !DISubroutineType(types: !9258)
!9258 = !{null, !9230, !9249}
!9259 = !{!9260, !9261, !9262}
!9260 = !DILocalVariable(name: "pxList", arg: 1, scope: !9256, file: !1927, line: 116, type: !9230)
!9261 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !9256, file: !1927, line: 116, type: !9249)
!9262 = !DILocalVariable(name: "pxIndex", scope: !9256, file: !1927, line: 118, type: !9249)
!9263 = !DILocation(line: 0, scope: !9256)
!9264 = !DILocation(line: 118, column: 38, scope: !9256)
!9265 = !DILocation(line: 129, column: 17, scope: !9256)
!9266 = !DILocation(line: 129, column: 24, scope: !9256)
!9267 = !DILocation(line: 130, column: 39, scope: !9256)
!9268 = !DILocation(line: 130, column: 17, scope: !9256)
!9269 = !DILocation(line: 130, column: 28, scope: !9256)
!9270 = !DILocation(line: 131, column: 11, scope: !9256)
!9271 = !DILocation(line: 131, column: 23, scope: !9256)
!9272 = !DILocation(line: 131, column: 30, scope: !9256)
!9273 = !DILocation(line: 132, column: 22, scope: !9256)
!9274 = !DILocation(line: 135, column: 17, scope: !9256)
!9275 = !DILocation(line: 135, column: 29, scope: !9256)
!9276 = !DILocation(line: 137, column: 12, scope: !9256)
!9277 = !DILocation(line: 137, column: 29, scope: !9256)
!9278 = !DILocation(line: 138, column: 1, scope: !9256)
!9279 = distinct !DISubprogram(name: "vListInsert", scope: !1927, file: !1927, line: 141, type: !9257, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !9280)
!9280 = !{!9281, !9282, !9283, !9284}
!9281 = !DILocalVariable(name: "pxList", arg: 1, scope: !9279, file: !1927, line: 141, type: !9230)
!9282 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !9279, file: !1927, line: 141, type: !9249)
!9283 = !DILocalVariable(name: "pxIterator", scope: !9279, file: !1927, line: 143, type: !1929)
!9284 = !DILocalVariable(name: "xValueOfInsertion", scope: !9279, file: !1927, line: 144, type: !7346)
!9285 = !DILocation(line: 0, scope: !9279)
!9286 = !DILocation(line: 144, column: 53, scope: !9279)
!9287 = !DILocation(line: 160, column: 24, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9279, file: !1927, line: 160, column: 6)
!9289 = !DILocation(line: 160, column: 6, scope: !9279)
!9290 = !DILocation(line: 162, column: 33, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9288, file: !1927, line: 161, column: 2)
!9292 = !DILocation(line: 195, column: 38, scope: !9279)
!9293 = !DILocation(line: 163, column: 2, scope: !9291)
!9294 = !DILocation(line: 188, column: 49, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !1927, line: 188, column: 3)
!9296 = distinct !DILexicalBlock(scope: !9288, file: !1927, line: 165, column: 2)
!9297 = !DILocation(line: 188, column: 21, scope: !9295)
!9298 = !DILocation(line: 188, column: 8, scope: !9295)
!9299 = !DILocation(line: 0, scope: !9295)
!9300 = !DILocation(line: 188, column: 73, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9295, file: !1927, line: 188, column: 3)
!9302 = !DILocation(line: 188, column: 81, scope: !9301)
!9303 = !DILocation(line: 188, column: 92, scope: !9301)
!9304 = !DILocation(line: 188, column: 3, scope: !9295)
!9305 = distinct !{!9305, !9304, !9306}
!9306 = !DILocation(line: 192, column: 3, scope: !9295)
!9307 = !DILocation(line: 0, scope: !9288)
!9308 = !DILocation(line: 195, column: 17, scope: !9279)
!9309 = !DILocation(line: 195, column: 24, scope: !9279)
!9310 = !DILocation(line: 196, column: 25, scope: !9279)
!9311 = !DILocation(line: 196, column: 36, scope: !9279)
!9312 = !DILocation(line: 197, column: 17, scope: !9279)
!9313 = !DILocation(line: 197, column: 28, scope: !9279)
!9314 = !DILocation(line: 198, column: 21, scope: !9279)
!9315 = !DILocation(line: 202, column: 17, scope: !9279)
!9316 = !DILocation(line: 202, column: 29, scope: !9279)
!9317 = !DILocation(line: 204, column: 12, scope: !9279)
!9318 = !DILocation(line: 204, column: 29, scope: !9279)
!9319 = !DILocation(line: 205, column: 1, scope: !9279)
!9320 = distinct !DISubprogram(name: "uxListRemove", scope: !1927, file: !1927, line: 208, type: !9321, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1926, retainedNodes: !9323)
!9321 = !DISubroutineType(types: !9322)
!9322 = !{!862, !9249}
!9323 = !{!9324, !9325}
!9324 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !9320, file: !1927, line: 208, type: !9249)
!9325 = !DILocalVariable(name: "pxList", scope: !9320, file: !1927, line: 212, type: !9230)
!9326 = !DILocation(line: 0, scope: !9320)
!9327 = !DILocation(line: 212, column: 54, scope: !9320)
!9328 = !DILocation(line: 214, column: 55, scope: !9320)
!9329 = !DILocation(line: 214, column: 18, scope: !9320)
!9330 = !DILocation(line: 214, column: 26, scope: !9320)
!9331 = !DILocation(line: 214, column: 37, scope: !9320)
!9332 = !DILocation(line: 215, column: 55, scope: !9320)
!9333 = !DILocation(line: 215, column: 18, scope: !9320)
!9334 = !DILocation(line: 215, column: 30, scope: !9320)
!9335 = !DILocation(line: 215, column: 37, scope: !9320)
!9336 = !DILocation(line: 218, column: 14, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9320, file: !1927, line: 218, column: 6)
!9338 = !DILocation(line: 218, column: 22, scope: !9337)
!9339 = !DILocation(line: 218, column: 6, scope: !9320)
!9340 = !DILocation(line: 220, column: 37, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9337, file: !1927, line: 219, column: 2)
!9342 = !DILocation(line: 220, column: 19, scope: !9341)
!9343 = !DILocation(line: 221, column: 2, scope: !9341)
!9344 = !DILocation(line: 227, column: 30, scope: !9320)
!9345 = !DILocation(line: 228, column: 12, scope: !9320)
!9346 = !DILocation(line: 228, column: 29, scope: !9320)
!9347 = !DILocation(line: 230, column: 2, scope: !9320)
!9348 = distinct !DISubprogram(name: "xQueueGenericReset", scope: !986, file: !986, line: 260, type: !9349, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9351)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!869, !1044, !869}
!9351 = !{!9352, !9353, !9354}
!9352 = !DILocalVariable(name: "xQueue", arg: 1, scope: !9348, file: !986, line: 260, type: !1044)
!9353 = !DILocalVariable(name: "xNewQueue", arg: 2, scope: !9348, file: !986, line: 260, type: !869)
!9354 = !DILocalVariable(name: "pxQueue", scope: !9348, file: !986, line: 262, type: !9355)
!9355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!9356 = !DILocation(line: 0, scope: !9348)
!9357 = !DILocation(line: 264, column: 2, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9348, file: !986, line: 264, column: 2)
!9359 = !DILocation(line: 264, column: 2, scope: !9348)
!9360 = !DILocation(line: 264, column: 2, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9358, file: !986, line: 264, column: 2)
!9362 = !DILocation(line: 266, column: 2, scope: !9348)
!9363 = !DILocation(line: 268, column: 30, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9348, file: !986, line: 267, column: 2)
!9365 = !DILocation(line: 268, column: 50, scope: !9364)
!9366 = !DILocation(line: 268, column: 70, scope: !9364)
!9367 = !DILocation(line: 268, column: 59, scope: !9364)
!9368 = !DILocation(line: 268, column: 37, scope: !9364)
!9369 = !DILocation(line: 268, column: 12, scope: !9364)
!9370 = !DILocation(line: 268, column: 19, scope: !9364)
!9371 = !DILocation(line: 269, column: 12, scope: !9364)
!9372 = !DILocation(line: 269, column: 30, scope: !9364)
!9373 = !DILocation(line: 270, column: 12, scope: !9364)
!9374 = !DILocation(line: 270, column: 22, scope: !9364)
!9375 = !DILocation(line: 271, column: 67, scope: !9364)
!9376 = !DILocation(line: 271, column: 90, scope: !9364)
!9377 = !DILocation(line: 271, column: 43, scope: !9364)
!9378 = !DILocation(line: 271, column: 12, scope: !9364)
!9379 = !DILocation(line: 271, column: 14, scope: !9364)
!9380 = !DILocation(line: 271, column: 25, scope: !9364)
!9381 = !DILocation(line: 272, column: 12, scope: !9364)
!9382 = !DILocation(line: 272, column: 20, scope: !9364)
!9383 = !DILocation(line: 273, column: 12, scope: !9364)
!9384 = !DILocation(line: 273, column: 20, scope: !9364)
!9385 = !DILocation(line: 275, column: 17, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9364, file: !986, line: 275, column: 7)
!9387 = !DILocation(line: 0, scope: !9386)
!9388 = !DILocation(line: 275, column: 7, scope: !9364)
!9389 = !DILocation(line: 282, column: 8, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9391, file: !986, line: 282, column: 8)
!9391 = distinct !DILexicalBlock(scope: !9386, file: !986, line: 276, column: 3)
!9392 = !DILocation(line: 282, column: 8, scope: !9391)
!9393 = !DILocation(line: 284, column: 9, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9395, file: !986, line: 284, column: 9)
!9395 = distinct !DILexicalBlock(scope: !9390, file: !986, line: 283, column: 4)
!9396 = !DILocation(line: 284, column: 71, scope: !9394)
!9397 = !DILocation(line: 284, column: 9, scope: !9395)
!9398 = !DILocation(line: 286, column: 6, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9400, file: !986, line: 286, column: 6)
!9400 = distinct !DILexicalBlock(scope: !9394, file: !986, line: 285, column: 5)
!9401 = !{i64 2148411822}
!9402 = !{i64 2148411862}
!9403 = !DILocation(line: 287, column: 5, scope: !9400)
!9404 = !DILocation(line: 301, column: 33, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9386, file: !986, line: 299, column: 3)
!9406 = !DILocation(line: 301, column: 4, scope: !9405)
!9407 = !DILocation(line: 302, column: 33, scope: !9405)
!9408 = !DILocation(line: 302, column: 4, scope: !9405)
!9409 = !DILocation(line: 305, column: 2, scope: !9348)
!9410 = !DILocation(line: 309, column: 2, scope: !9348)
!9411 = distinct !DISubprogram(name: "xQueueGenericCreate", scope: !986, file: !986, line: 313, type: !9412, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9414)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{!1044, !8192, !8192, !936}
!9414 = !{!9415, !9416, !9417, !9418, !9419, !9420, !9421}
!9415 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !9411, file: !986, line: 313, type: !8192)
!9416 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !9411, file: !986, line: 313, type: !8192)
!9417 = !DILocalVariable(name: "ucQueueType", arg: 3, scope: !9411, file: !986, line: 313, type: !936)
!9418 = !DILocalVariable(name: "pxNewQueue", scope: !9411, file: !986, line: 315, type: !988)
!9419 = !DILocalVariable(name: "xQueueSizeInBytes", scope: !9411, file: !986, line: 316, type: !919)
!9420 = !DILocalVariable(name: "xReturn", scope: !9411, file: !986, line: 317, type: !1044)
!9421 = !DILocalVariable(name: "pcAllocatedBuffer", scope: !9411, file: !986, line: 318, type: !994)
!9422 = !DILocation(line: 0, scope: !9411)
!9423 = !DILocation(line: 324, column: 2, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9411, file: !986, line: 324, column: 2)
!9425 = !DILocation(line: 324, column: 2, scope: !9411)
!9426 = !DILocation(line: 324, column: 2, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9424, file: !986, line: 324, column: 2)
!9428 = !DILocation(line: 326, column: 17, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9411, file: !986, line: 326, column: 6)
!9430 = !DILocation(line: 326, column: 6, scope: !9411)
!9431 = !DILocation(line: 339, column: 35, scope: !9411)
!9432 = !DILocation(line: 341, column: 24, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9411, file: !986, line: 341, column: 6)
!9434 = !DILocation(line: 341, column: 6, scope: !9411)
!9435 = !DILocation(line: 345, column: 7, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9433, file: !986, line: 342, column: 2)
!9437 = !DILocation(line: 0, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9436, file: !986, line: 345, column: 7)
!9439 = !DILocation(line: 362, column: 15, scope: !9436)
!9440 = !DILocation(line: 362, column: 24, scope: !9436)
!9441 = !DILocation(line: 363, column: 15, scope: !9436)
!9442 = !DILocation(line: 363, column: 26, scope: !9436)
!9443 = !DILocation(line: 364, column: 12, scope: !9436)
!9444 = !DILocation(line: 368, column: 16, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9436, file: !986, line: 367, column: 3)
!9446 = !DILocation(line: 368, column: 28, scope: !9445)
!9447 = !DILocation(line: 386, column: 2, scope: !9411)
!9448 = !DILocation(line: 386, column: 2, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !986, line: 386, column: 2)
!9450 = distinct !DILexicalBlock(scope: !9411, file: !986, line: 386, column: 2)
!9451 = !DILocation(line: 388, column: 2, scope: !9411)
!9452 = distinct !DISubprogram(name: "xQueueCreateMutex", scope: !986, file: !986, line: 394, type: !9453, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9455)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!1044, !936}
!9455 = !{!9456, !9457}
!9456 = !DILocalVariable(name: "ucQueueType", arg: 1, scope: !9452, file: !986, line: 394, type: !936)
!9457 = !DILocalVariable(name: "pxNewQueue", scope: !9452, file: !986, line: 396, type: !988)
!9458 = !DILocation(line: 0, scope: !9452)
!9459 = !DILocation(line: 403, column: 30, scope: !9452)
!9460 = !DILocation(line: 404, column: 7, scope: !9452)
!9461 = !DILocation(line: 407, column: 16, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !986, line: 405, column: 3)
!9463 = distinct !DILexicalBlock(scope: !9452, file: !986, line: 404, column: 7)
!9464 = !DILocation(line: 407, column: 30, scope: !9462)
!9465 = !DILocation(line: 408, column: 16, scope: !9462)
!9466 = !DILocation(line: 408, column: 28, scope: !9462)
!9467 = !DILocation(line: 412, column: 16, scope: !9462)
!9468 = !DILocation(line: 412, column: 26, scope: !9462)
!9469 = !DILocation(line: 413, column: 16, scope: !9462)
!9470 = !DILocation(line: 413, column: 18, scope: !9462)
!9471 = !DILocation(line: 413, column: 29, scope: !9462)
!9472 = !DILocation(line: 418, column: 16, scope: !9462)
!9473 = !DILocation(line: 418, column: 34, scope: !9462)
!9474 = !DILocation(line: 419, column: 16, scope: !9462)
!9475 = !DILocation(line: 419, column: 25, scope: !9462)
!9476 = !DILocation(line: 420, column: 16, scope: !9462)
!9477 = !DILocation(line: 420, column: 27, scope: !9462)
!9478 = !DILocation(line: 421, column: 16, scope: !9462)
!9479 = !DILocation(line: 421, column: 24, scope: !9462)
!9480 = !DILocation(line: 422, column: 16, scope: !9462)
!9481 = !DILocation(line: 422, column: 24, scope: !9462)
!9482 = !DILocation(line: 426, column: 17, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9462, file: !986, line: 425, column: 4)
!9484 = !DILocation(line: 426, column: 29, scope: !9483)
!9485 = !DILocation(line: 437, column: 36, scope: !9462)
!9486 = !DILocation(line: 437, column: 4, scope: !9462)
!9487 = !DILocation(line: 438, column: 36, scope: !9462)
!9488 = !DILocation(line: 438, column: 4, scope: !9462)
!9489 = !DILocation(line: 443, column: 13, scope: !9462)
!9490 = !DILocation(line: 450, column: 3, scope: !9452)
!9491 = !DILocation(line: 450, column: 3, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9493, file: !986, line: 450, column: 3)
!9493 = distinct !DILexicalBlock(scope: !9452, file: !986, line: 450, column: 3)
!9494 = !DILocation(line: 451, column: 3, scope: !9452)
!9495 = distinct !DISubprogram(name: "xQueueGenericSend", scope: !986, file: !986, line: 613, type: !9496, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9500)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{!869, !1044, !9498, !884, !9499}
!9498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!9499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !869)
!9500 = !{!9501, !9502, !9503, !9504, !9505, !9506, !9507, !9513}
!9501 = !DILocalVariable(name: "xQueue", arg: 1, scope: !9495, file: !986, line: 613, type: !1044)
!9502 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !9495, file: !986, line: 613, type: !9498)
!9503 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !9495, file: !986, line: 613, type: !884)
!9504 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !9495, file: !986, line: 613, type: !9499)
!9505 = !DILocalVariable(name: "xEntryTimeSet", scope: !9495, file: !986, line: 615, type: !869)
!9506 = !DILocalVariable(name: "xYieldRequired", scope: !9495, file: !986, line: 615, type: !869)
!9507 = !DILocalVariable(name: "xTimeOut", scope: !9495, file: !986, line: 616, type: !9508)
!9508 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !847, line: 138, baseType: !9509)
!9509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !847, line: 134, size: 64, elements: !9510)
!9510 = !{!9511, !9512}
!9511 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !9509, file: !847, line: 136, baseType: !869, size: 32)
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !9509, file: !847, line: 137, baseType: !884, size: 32, offset: 32)
!9513 = !DILocalVariable(name: "pxQueue", scope: !9495, file: !986, line: 617, type: !9355)
!9514 = !DILocation(line: 0, scope: !9495)
!9515 = !DILocation(line: 616, column: 1, scope: !9495)
!9516 = !DILocation(line: 616, column: 11, scope: !9495)
!9517 = !DILocation(line: 617, column: 27, scope: !9495)
!9518 = !DILocation(line: 619, column: 2, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9495, file: !986, line: 619, column: 2)
!9520 = !DILocation(line: 619, column: 2, scope: !9495)
!9521 = !DILocation(line: 619, column: 2, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9519, file: !986, line: 619, column: 2)
!9523 = !DILocation(line: 620, column: 2, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9495, file: !986, line: 620, column: 2)
!9525 = !DILocation(line: 620, column: 2, scope: !9495)
!9526 = !DILocation(line: 620, column: 2, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9524, file: !986, line: 620, column: 2)
!9528 = !DILocation(line: 621, column: 2, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9495, file: !986, line: 621, column: 2)
!9530 = !DILocation(line: 621, column: 2, scope: !9495)
!9531 = !DILocation(line: 621, column: 2, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9529, file: !986, line: 621, column: 2)
!9533 = !DILocation(line: 624, column: 3, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9535, file: !986, line: 624, column: 3)
!9535 = distinct !DILexicalBlock(scope: !9495, file: !986, line: 623, column: 2)
!9536 = !DILocation(line: 624, column: 3, scope: !9535)
!9537 = !DILocation(line: 624, column: 3, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9534, file: !986, line: 624, column: 3)
!9539 = !DILocation(line: 634, column: 3, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !986, line: 633, column: 2)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !986, line: 632, column: 2)
!9542 = distinct !DILexicalBlock(scope: !9495, file: !986, line: 632, column: 2)
!9543 = !DILocation(line: 640, column: 19, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !986, line: 640, column: 8)
!9545 = distinct !DILexicalBlock(scope: !9540, file: !986, line: 635, column: 3)
!9546 = !DILocation(line: 640, column: 48, scope: !9544)
!9547 = !DILocation(line: 640, column: 37, scope: !9544)
!9548 = !DILocation(line: 640, column: 59, scope: !9544)
!9549 = !DILocation(line: 733, column: 22, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !986, line: 733, column: 9)
!9551 = distinct !DILexicalBlock(scope: !9544, file: !986, line: 732, column: 4)
!9552 = !DILocation(line: 733, column: 9, scope: !9551)
!9553 = !DILocation(line: 643, column: 22, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9544, file: !986, line: 641, column: 4)
!9555 = !DILocation(line: 698, column: 10, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !986, line: 698, column: 10)
!9557 = distinct !DILexicalBlock(scope: !9554, file: !986, line: 695, column: 5)
!9558 = !DILocation(line: 698, column: 10, scope: !9557)
!9559 = !DILocation(line: 700, column: 11, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9561, file: !986, line: 700, column: 11)
!9561 = distinct !DILexicalBlock(scope: !9556, file: !986, line: 699, column: 6)
!9562 = !DILocation(line: 700, column: 76, scope: !9560)
!9563 = !DILocation(line: 700, column: 11, scope: !9561)
!9564 = !DILocation(line: 706, column: 8, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !986, line: 706, column: 8)
!9566 = distinct !DILexicalBlock(scope: !9560, file: !986, line: 701, column: 7)
!9567 = !{i64 2148415363}
!9568 = !{i64 2148415403}
!9569 = !DILocation(line: 707, column: 7, scope: !9566)
!9570 = !DILocation(line: 713, column: 30, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9556, file: !986, line: 713, column: 15)
!9572 = !DILocation(line: 713, column: 15, scope: !9556)
!9573 = !DILocation(line: 719, column: 7, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !986, line: 719, column: 7)
!9575 = distinct !DILexicalBlock(scope: !9571, file: !986, line: 714, column: 6)
!9576 = !{i64 2148415865}
!9577 = !{i64 2148415905}
!9578 = !DILocation(line: 720, column: 6, scope: !9575)
!9579 = !DILocation(line: 728, column: 5, scope: !9554)
!9580 = !DILocation(line: 729, column: 5, scope: !9554)
!9581 = !DILocation(line: 737, column: 6, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9550, file: !986, line: 734, column: 5)
!9583 = !DILocation(line: 742, column: 6, scope: !9582)
!9584 = !DILocation(line: 748, column: 6, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9586, file: !986, line: 745, column: 5)
!9586 = distinct !DILexicalBlock(scope: !9550, file: !986, line: 744, column: 14)
!9587 = !DILocation(line: 750, column: 5, scope: !9585)
!9588 = !DILocation(line: 758, column: 3, scope: !9540)
!9589 = !DILocation(line: 763, column: 3, scope: !9540)
!9590 = !DILocation(line: 764, column: 3, scope: !9540)
!9591 = !DILocation(line: 764, column: 3, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !986, line: 764, column: 3)
!9593 = distinct !DILexicalBlock(scope: !9540, file: !986, line: 764, column: 3)
!9594 = !DILocation(line: 764, column: 3, scope: !9593)
!9595 = !DILocation(line: 764, column: 3, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9592, file: !986, line: 764, column: 3)
!9597 = !DILocation(line: 764, column: 3, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9593, file: !986, line: 764, column: 3)
!9599 = !DILocation(line: 764, column: 3, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9598, file: !986, line: 764, column: 3)
!9601 = !DILocation(line: 767, column: 7, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9540, file: !986, line: 767, column: 7)
!9603 = !DILocation(line: 767, column: 56, scope: !9602)
!9604 = !DILocation(line: 767, column: 7, scope: !9540)
!9605 = !DILocation(line: 769, column: 8, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !986, line: 769, column: 8)
!9607 = distinct !DILexicalBlock(scope: !9602, file: !986, line: 768, column: 3)
!9608 = !DILocation(line: 769, column: 34, scope: !9606)
!9609 = !DILocation(line: 769, column: 8, scope: !9607)
!9610 = !DILocation(line: 772, column: 63, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9606, file: !986, line: 770, column: 4)
!9612 = !DILocation(line: 772, column: 5, scope: !9611)
!9613 = !DILocation(line: 779, column: 5, scope: !9611)
!9614 = !DILocation(line: 786, column: 9, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9611, file: !986, line: 786, column: 9)
!9616 = !DILocation(line: 786, column: 26, scope: !9615)
!9617 = !DILocation(line: 786, column: 9, scope: !9611)
!9618 = !DILocation(line: 788, column: 6, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !986, line: 788, column: 6)
!9620 = distinct !DILexicalBlock(scope: !9615, file: !986, line: 787, column: 5)
!9621 = !{i64 2148417166}
!9622 = !{i64 2148417206}
!9623 = !DILocation(line: 789, column: 5, scope: !9620)
!9624 = !DILocation(line: 794, column: 5, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9606, file: !986, line: 792, column: 4)
!9626 = !DILocation(line: 795, column: 14, scope: !9625)
!9627 = !DILocation(line: 801, column: 4, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9602, file: !986, line: 799, column: 3)
!9629 = !DILocation(line: 802, column: 13, scope: !9628)
!9630 = !DILocation(line: 807, column: 4, scope: !9628)
!9631 = distinct !{!9631, !9632, !9633}
!9632 = !DILocation(line: 632, column: 2, scope: !9542)
!9633 = !DILocation(line: 809, column: 2, scope: !9542)
!9634 = !DILocation(line: 733, column: 9, scope: !9550)
!9635 = !DILocation(line: 0, scope: !9540)
!9636 = !DILocation(line: 810, column: 1, scope: !9495)
!9637 = distinct !DISubprogram(name: "prvCopyDataToQueue", scope: !986, file: !986, line: 1783, type: !9638, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9640)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{!869, !9355, !375, !9499}
!9640 = !{!9641, !9642, !9643, !9644}
!9641 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9637, file: !986, line: 1783, type: !9355)
!9642 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !9637, file: !986, line: 1783, type: !375)
!9643 = !DILocalVariable(name: "xPosition", arg: 3, scope: !9637, file: !986, line: 1783, type: !9499)
!9644 = !DILocalVariable(name: "xReturn", scope: !9637, file: !986, line: 1785, type: !869)
!9645 = !DILocation(line: 0, scope: !9637)
!9646 = !DILocation(line: 1787, column: 15, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9637, file: !986, line: 1787, column: 6)
!9648 = !DILocation(line: 1787, column: 26, scope: !9647)
!9649 = !DILocation(line: 1787, column: 6, scope: !9637)
!9650 = !DILocation(line: 1791, column: 17, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !986, line: 1791, column: 8)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !986, line: 1790, column: 3)
!9653 = distinct !DILexicalBlock(scope: !9647, file: !986, line: 1788, column: 2)
!9654 = !DILocation(line: 1791, column: 29, scope: !9651)
!9655 = !DILocation(line: 1791, column: 8, scope: !9652)
!9656 = !DILocation(line: 1794, column: 60, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9651, file: !986, line: 1792, column: 4)
!9658 = !DILocation(line: 1794, column: 15, scope: !9657)
!9659 = !DILocation(line: 1795, column: 28, scope: !9657)
!9660 = !DILocation(line: 1796, column: 4, scope: !9657)
!9661 = !DILocation(line: 1804, column: 21, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9647, file: !986, line: 1804, column: 11)
!9663 = !DILocation(line: 1804, column: 11, scope: !9647)
!9664 = !DILocation(line: 1806, column: 40, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9662, file: !986, line: 1805, column: 2)
!9666 = !DILocation(line: 1806, column: 12, scope: !9665)
!9667 = !DILocation(line: 1807, column: 34, scope: !9665)
!9668 = !DILocation(line: 1807, column: 22, scope: !9665)
!9669 = !DILocation(line: 1808, column: 38, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9665, file: !986, line: 1808, column: 7)
!9671 = !DILocation(line: 1808, column: 26, scope: !9670)
!9672 = !DILocation(line: 1808, column: 7, scope: !9665)
!9673 = !DILocation(line: 1810, column: 34, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9670, file: !986, line: 1809, column: 3)
!9675 = !DILocation(line: 1810, column: 23, scope: !9674)
!9676 = !DILocation(line: 1811, column: 3, scope: !9674)
!9677 = !DILocation(line: 1819, column: 42, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9662, file: !986, line: 1818, column: 2)
!9679 = !DILocation(line: 1819, column: 12, scope: !9678)
!9680 = !DILocation(line: 1820, column: 37, scope: !9678)
!9681 = !DILocation(line: 1820, column: 25, scope: !9678)
!9682 = !DILocation(line: 1821, column: 40, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9678, file: !986, line: 1821, column: 7)
!9684 = !DILocation(line: 1821, column: 29, scope: !9683)
!9685 = !DILocation(line: 1821, column: 7, scope: !9678)
!9686 = !DILocation(line: 1823, column: 39, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9683, file: !986, line: 1822, column: 3)
!9688 = !DILocation(line: 1823, column: 46, scope: !9687)
!9689 = !DILocation(line: 1823, column: 26, scope: !9687)
!9690 = !DILocation(line: 1824, column: 3, scope: !9687)
!9691 = !DILocation(line: 1830, column: 17, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9678, file: !986, line: 1830, column: 7)
!9693 = !DILocation(line: 1830, column: 7, scope: !9678)
!9694 = !DILocation(line: 1832, column: 17, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !986, line: 1832, column: 8)
!9696 = distinct !DILexicalBlock(scope: !9692, file: !986, line: 1831, column: 3)
!9697 = !DILocation(line: 1832, column: 35, scope: !9695)
!9698 = !DILocation(line: 1832, column: 8, scope: !9696)
!9699 = !DILocation(line: 1838, column: 5, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9695, file: !986, line: 1833, column: 4)
!9701 = !DILocation(line: 1839, column: 4, scope: !9700)
!9702 = !DILocation(line: 1851, column: 15, scope: !9637)
!9703 = !DILocation(line: 1851, column: 2, scope: !9637)
!9704 = !DILocation(line: 1853, column: 2, scope: !9637)
!9705 = distinct !DISubprogram(name: "prvIsQueueFull", scope: !986, file: !986, line: 2029, type: !9706, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9710)
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!869, !9708}
!9708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9709, size: 32)
!9709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!9710 = !{!9711, !9712}
!9711 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9705, file: !986, line: 2029, type: !9708)
!9712 = !DILocalVariable(name: "xReturn", scope: !9705, file: !986, line: 2031, type: !869)
!9713 = !DILocation(line: 0, scope: !9705)
!9714 = !DILocation(line: 2033, column: 2, scope: !9705)
!9715 = !DILocation(line: 2035, column: 16, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !986, line: 2035, column: 7)
!9717 = distinct !DILexicalBlock(scope: !9705, file: !986, line: 2034, column: 2)
!9718 = !DILocation(line: 2035, column: 46, scope: !9716)
!9719 = !DILocation(line: 2035, column: 34, scope: !9716)
!9720 = !DILocation(line: 2044, column: 2, scope: !9705)
!9721 = !DILocation(line: 2046, column: 2, scope: !9705)
!9722 = distinct !DISubprogram(name: "prvUnlockQueue", scope: !986, file: !986, line: 1875, type: !9723, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9725)
!9723 = !DISubroutineType(types: !9724)
!9724 = !{null, !9355}
!9725 = !{!9726}
!9726 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9722, file: !986, line: 1875, type: !9355)
!9727 = !DILocation(line: 0, scope: !9722)
!9728 = !DILocation(line: 1883, column: 2, scope: !9722)
!9729 = !DILocation(line: 1933, column: 9, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9731, file: !986, line: 1933, column: 9)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !986, line: 1930, column: 4)
!9732 = distinct !DILexicalBlock(scope: !9733, file: !986, line: 1887, column: 3)
!9733 = distinct !DILexicalBlock(scope: !9722, file: !986, line: 1884, column: 2)
!9734 = !DILocation(line: 1886, column: 19, scope: !9733)
!9735 = !DILocation(line: 1886, column: 27, scope: !9733)
!9736 = !DILocation(line: 1886, column: 3, scope: !9733)
!9737 = !DILocation(line: 1933, column: 9, scope: !9731)
!9738 = !DILocation(line: 1935, column: 10, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !986, line: 1935, column: 10)
!9740 = distinct !DILexicalBlock(scope: !9730, file: !986, line: 1934, column: 5)
!9741 = !DILocation(line: 1935, column: 75, scope: !9739)
!9742 = !DILocation(line: 1935, column: 10, scope: !9740)
!9743 = !DILocation(line: 1939, column: 7, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !986, line: 1936, column: 6)
!9745 = !DILocation(line: 1940, column: 6, scope: !9744)
!9746 = !DILocation(line: 1953, column: 4, scope: !9732)
!9747 = distinct !{!9747, !9736, !9748}
!9748 = !DILocation(line: 1954, column: 3, scope: !9733)
!9749 = !DILocation(line: 1956, column: 20, scope: !9733)
!9750 = !DILocation(line: 1958, column: 2, scope: !9722)
!9751 = !DILocation(line: 1961, column: 2, scope: !9722)
!9752 = !DILocation(line: 1965, column: 8, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !986, line: 1965, column: 8)
!9754 = distinct !DILexicalBlock(scope: !9755, file: !986, line: 1964, column: 3)
!9755 = distinct !DILexicalBlock(scope: !9722, file: !986, line: 1962, column: 2)
!9756 = !DILocation(line: 1963, column: 19, scope: !9755)
!9757 = !DILocation(line: 1963, column: 27, scope: !9755)
!9758 = !DILocation(line: 1963, column: 3, scope: !9755)
!9759 = !DILocation(line: 1965, column: 8, scope: !9754)
!9760 = !DILocation(line: 1967, column: 9, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9762, file: !986, line: 1967, column: 9)
!9762 = distinct !DILexicalBlock(scope: !9753, file: !986, line: 1966, column: 4)
!9763 = !DILocation(line: 1967, column: 71, scope: !9761)
!9764 = !DILocation(line: 1967, column: 9, scope: !9762)
!9765 = !DILocation(line: 1969, column: 6, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9761, file: !986, line: 1968, column: 5)
!9767 = !DILocation(line: 1970, column: 5, scope: !9766)
!9768 = !DILocation(line: 1976, column: 5, scope: !9762)
!9769 = distinct !{!9769, !9758, !9770}
!9770 = !DILocation(line: 1982, column: 3, scope: !9755)
!9771 = !DILocation(line: 1984, column: 20, scope: !9755)
!9772 = !DILocation(line: 1986, column: 2, scope: !9722)
!9773 = !DILocation(line: 1987, column: 1, scope: !9722)
!9774 = distinct !DISubprogram(name: "xQueueGiveMutexRecursive", scope: !986, file: !986, line: 489, type: !9775, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9777)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!869, !1044}
!9777 = !{!9778, !9779, !9780}
!9778 = !DILocalVariable(name: "xMutex", arg: 1, scope: !9774, file: !986, line: 489, type: !1044)
!9779 = !DILocalVariable(name: "xReturn", scope: !9774, file: !986, line: 491, type: !869)
!9780 = !DILocalVariable(name: "pxMutex", scope: !9774, file: !986, line: 492, type: !9355)
!9781 = !DILocation(line: 0, scope: !9774)
!9782 = !DILocation(line: 494, column: 3, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9774, file: !986, line: 494, column: 3)
!9784 = !DILocation(line: 494, column: 3, scope: !9774)
!9785 = !DILocation(line: 494, column: 3, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9783, file: !986, line: 494, column: 3)
!9787 = !DILocation(line: 502, column: 16, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9774, file: !986, line: 502, column: 7)
!9789 = !DILocation(line: 502, column: 44, scope: !9788)
!9790 = !DILocation(line: 502, column: 30, scope: !9788)
!9791 = !DILocation(line: 502, column: 7, scope: !9774)
!9792 = !DILocation(line: 511, column: 15, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9788, file: !986, line: 503, column: 3)
!9794 = !DILocation(line: 511, column: 17, scope: !9793)
!9795 = !DILocation(line: 511, column: 39, scope: !9793)
!9796 = !DILocation(line: 514, column: 40, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9793, file: !986, line: 514, column: 8)
!9798 = !DILocation(line: 514, column: 8, scope: !9793)
!9799 = !DILocation(line: 518, column: 14, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9797, file: !986, line: 515, column: 4)
!9801 = !DILocation(line: 519, column: 4, scope: !9800)
!9802 = !DILocation(line: 0, scope: !9788)
!9803 = !DILocation(line: 536, column: 3, scope: !9774)
!9804 = distinct !DISubprogram(name: "xQueueTakeMutexRecursive", scope: !986, file: !986, line: 544, type: !9805, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9807)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!869, !1044, !884}
!9807 = !{!9808, !9809, !9810, !9811}
!9808 = !DILocalVariable(name: "xMutex", arg: 1, scope: !9804, file: !986, line: 544, type: !1044)
!9809 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !9804, file: !986, line: 544, type: !884)
!9810 = !DILocalVariable(name: "xReturn", scope: !9804, file: !986, line: 546, type: !869)
!9811 = !DILocalVariable(name: "pxMutex", scope: !9804, file: !986, line: 547, type: !9355)
!9812 = !DILocation(line: 0, scope: !9804)
!9813 = !DILocation(line: 549, column: 3, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9804, file: !986, line: 549, column: 3)
!9815 = !DILocation(line: 549, column: 3, scope: !9804)
!9816 = !DILocation(line: 549, column: 3, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9814, file: !986, line: 549, column: 3)
!9818 = !DILocation(line: 556, column: 16, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9804, file: !986, line: 556, column: 7)
!9820 = !DILocation(line: 556, column: 44, scope: !9819)
!9821 = !DILocation(line: 556, column: 30, scope: !9819)
!9822 = !DILocation(line: 556, column: 7, scope: !9804)
!9823 = !DILocation(line: 563, column: 14, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9819, file: !986, line: 562, column: 3)
!9825 = !DILocation(line: 568, column: 16, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9824, file: !986, line: 568, column: 8)
!9827 = !DILocation(line: 568, column: 8, scope: !9824)
!9828 = !DILocation(line: 0, scope: !9819)
!9829 = !DILocation(line: 578, column: 3, scope: !9804)
!9830 = distinct !DISubprogram(name: "xQueueGenericReceive", scope: !986, file: !986, line: 1361, type: !9831, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9833)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!869, !1044, !7049, !884, !9499}
!9833 = !{!9834, !9835, !9836, !9837, !9838, !9839, !9840, !9841}
!9834 = !DILocalVariable(name: "xQueue", arg: 1, scope: !9830, file: !986, line: 1361, type: !1044)
!9835 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !9830, file: !986, line: 1361, type: !7049)
!9836 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !9830, file: !986, line: 1361, type: !884)
!9837 = !DILocalVariable(name: "xJustPeeking", arg: 4, scope: !9830, file: !986, line: 1361, type: !9499)
!9838 = !DILocalVariable(name: "xEntryTimeSet", scope: !9830, file: !986, line: 1363, type: !869)
!9839 = !DILocalVariable(name: "xTimeOut", scope: !9830, file: !986, line: 1364, type: !9508)
!9840 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !9830, file: !986, line: 1365, type: !994)
!9841 = !DILocalVariable(name: "pxQueue", scope: !9830, file: !986, line: 1366, type: !9355)
!9842 = !DILocation(line: 0, scope: !9830)
!9843 = !DILocation(line: 1364, column: 1, scope: !9830)
!9844 = !DILocation(line: 1364, column: 11, scope: !9830)
!9845 = !DILocation(line: 1366, column: 27, scope: !9830)
!9846 = !DILocation(line: 1368, column: 2, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9830, file: !986, line: 1368, column: 2)
!9848 = !DILocation(line: 1368, column: 2, scope: !9830)
!9849 = !DILocation(line: 1368, column: 2, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9847, file: !986, line: 1368, column: 2)
!9851 = !DILocation(line: 1369, column: 2, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9830, file: !986, line: 1369, column: 2)
!9853 = !DILocation(line: 1369, column: 2, scope: !9830)
!9854 = !DILocation(line: 1369, column: 2, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9852, file: !986, line: 1369, column: 2)
!9856 = !DILocation(line: 1372, column: 3, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9858, file: !986, line: 1372, column: 3)
!9858 = distinct !DILexicalBlock(scope: !9830, file: !986, line: 1371, column: 2)
!9859 = !DILocation(line: 1372, column: 3, scope: !9858)
!9860 = !DILocation(line: 1372, column: 3, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9857, file: !986, line: 1372, column: 3)
!9862 = !DILocation(line: 1382, column: 3, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9864, file: !986, line: 1381, column: 2)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !986, line: 1380, column: 2)
!9865 = distinct !DILexicalBlock(scope: !9830, file: !986, line: 1380, column: 2)
!9866 = !DILocation(line: 1386, column: 17, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !986, line: 1386, column: 8)
!9868 = distinct !DILexicalBlock(scope: !9863, file: !986, line: 1383, column: 3)
!9869 = !DILocation(line: 1386, column: 35, scope: !9867)
!9870 = !DILocation(line: 1386, column: 8, scope: !9868)
!9871 = !DILocation(line: 1467, column: 22, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9873, file: !986, line: 1467, column: 9)
!9873 = distinct !DILexicalBlock(scope: !9867, file: !986, line: 1466, column: 4)
!9874 = !DILocation(line: 1467, column: 9, scope: !9873)
!9875 = !DILocation(line: 1390, column: 39, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9867, file: !986, line: 1387, column: 4)
!9877 = !DILocation(line: 1390, column: 41, scope: !9876)
!9878 = !DILocation(line: 1392, column: 5, scope: !9876)
!9879 = !DILocation(line: 1394, column: 22, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9876, file: !986, line: 1394, column: 9)
!9881 = !DILocation(line: 1394, column: 9, scope: !9876)
!9882 = !DILocation(line: 1399, column: 6, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9880, file: !986, line: 1395, column: 5)
!9884 = !DILocation(line: 1403, column: 20, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9886, file: !986, line: 1403, column: 11)
!9886 = distinct !DILexicalBlock(scope: !9883, file: !986, line: 1402, column: 6)
!9887 = !DILocation(line: 1403, column: 32, scope: !9885)
!9888 = !DILocation(line: 1403, column: 11, scope: !9886)
!9889 = !DILocation(line: 1407, column: 46, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9885, file: !986, line: 1404, column: 7)
!9891 = !DILocation(line: 1407, column: 17, scope: !9890)
!9892 = !DILocation(line: 1407, column: 31, scope: !9890)
!9893 = !DILocation(line: 1408, column: 7, scope: !9890)
!9894 = !DILocation(line: 1416, column: 10, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9883, file: !986, line: 1416, column: 10)
!9896 = !DILocation(line: 1416, column: 10, scope: !9883)
!9897 = !DILocation(line: 1418, column: 11, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !986, line: 1418, column: 11)
!9899 = distinct !DILexicalBlock(scope: !9895, file: !986, line: 1417, column: 6)
!9900 = !DILocation(line: 1418, column: 73, scope: !9898)
!9901 = !DILocation(line: 1418, column: 11, scope: !9899)
!9902 = !DILocation(line: 1420, column: 8, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !986, line: 1420, column: 8)
!9904 = distinct !DILexicalBlock(scope: !9898, file: !986, line: 1419, column: 7)
!9905 = !{i64 2148420434}
!9906 = !{i64 2148420474}
!9907 = !DILocation(line: 1421, column: 7, scope: !9904)
!9908 = !DILocation(line: 1438, column: 28, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9880, file: !986, line: 1433, column: 5)
!9910 = !DILocation(line: 1442, column: 10, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9909, file: !986, line: 1442, column: 10)
!9912 = !DILocation(line: 1442, column: 10, scope: !9909)
!9913 = !DILocation(line: 1446, column: 11, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !986, line: 1446, column: 11)
!9915 = distinct !DILexicalBlock(scope: !9911, file: !986, line: 1443, column: 6)
!9916 = !DILocation(line: 1446, column: 76, scope: !9914)
!9917 = !DILocation(line: 1446, column: 11, scope: !9915)
!9918 = !DILocation(line: 1449, column: 8, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !986, line: 1449, column: 8)
!9920 = distinct !DILexicalBlock(scope: !9914, file: !986, line: 1447, column: 7)
!9921 = !{i64 2148421066}
!9922 = !{i64 2148421106}
!9923 = !DILocation(line: 1450, column: 7, scope: !9920)
!9924 = !DILocation(line: 1462, column: 5, scope: !9876)
!9925 = !DILocation(line: 1463, column: 5, scope: !9876)
!9926 = !DILocation(line: 1471, column: 6, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9872, file: !986, line: 1468, column: 5)
!9928 = !DILocation(line: 1473, column: 6, scope: !9927)
!9929 = !DILocation(line: 1479, column: 6, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9931, file: !986, line: 1476, column: 5)
!9931 = distinct !DILexicalBlock(scope: !9872, file: !986, line: 1475, column: 14)
!9932 = !DILocation(line: 1481, column: 5, scope: !9930)
!9933 = !DILocation(line: 1489, column: 3, scope: !9863)
!9934 = !DILocation(line: 1494, column: 3, scope: !9863)
!9935 = !DILocation(line: 1495, column: 3, scope: !9863)
!9936 = !DILocation(line: 1495, column: 3, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !986, line: 1495, column: 3)
!9938 = distinct !DILexicalBlock(scope: !9863, file: !986, line: 1495, column: 3)
!9939 = !DILocation(line: 1495, column: 3, scope: !9938)
!9940 = !DILocation(line: 1495, column: 3, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9937, file: !986, line: 1495, column: 3)
!9942 = !DILocation(line: 1495, column: 3, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9938, file: !986, line: 1495, column: 3)
!9944 = !DILocation(line: 1495, column: 3, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9943, file: !986, line: 1495, column: 3)
!9946 = !DILocation(line: 1498, column: 7, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9863, file: !986, line: 1498, column: 7)
!9948 = !DILocation(line: 1498, column: 56, scope: !9947)
!9949 = !DILocation(line: 1498, column: 7, scope: !9863)
!9950 = !DILocation(line: 1500, column: 8, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9952, file: !986, line: 1500, column: 8)
!9952 = distinct !DILexicalBlock(scope: !9947, file: !986, line: 1499, column: 3)
!9953 = !DILocation(line: 1500, column: 35, scope: !9951)
!9954 = !DILocation(line: 1500, column: 8, scope: !9952)
!9955 = !DILocation(line: 1506, column: 19, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !986, line: 1506, column: 10)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !986, line: 1505, column: 5)
!9958 = distinct !DILexicalBlock(scope: !9951, file: !986, line: 1501, column: 4)
!9959 = !DILocation(line: 1506, column: 31, scope: !9956)
!9960 = !DILocation(line: 1506, column: 10, scope: !9957)
!9961 = !DILocation(line: 1508, column: 7, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9956, file: !986, line: 1507, column: 6)
!9963 = !DILocation(line: 1510, column: 50, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9962, file: !986, line: 1509, column: 7)
!9965 = !DILocation(line: 1510, column: 8, scope: !9964)
!9966 = !DILocation(line: 1512, column: 7, scope: !9962)
!9967 = !DILocation(line: 1513, column: 6, scope: !9962)
!9968 = !DILocation(line: 1521, column: 66, scope: !9958)
!9969 = !DILocation(line: 1521, column: 5, scope: !9958)
!9970 = !DILocation(line: 1522, column: 5, scope: !9958)
!9971 = !DILocation(line: 1523, column: 9, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9958, file: !986, line: 1523, column: 9)
!9973 = !DILocation(line: 1523, column: 26, scope: !9972)
!9974 = !DILocation(line: 1523, column: 9, scope: !9958)
!9975 = !DILocation(line: 1525, column: 6, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !986, line: 1525, column: 6)
!9977 = distinct !DILexicalBlock(scope: !9972, file: !986, line: 1524, column: 5)
!9978 = !{i64 2148422481}
!9979 = !{i64 2148422521}
!9980 = !DILocation(line: 1526, column: 5, scope: !9977)
!9981 = !DILocation(line: 1535, column: 5, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9951, file: !986, line: 1533, column: 4)
!9983 = !DILocation(line: 1536, column: 14, scope: !9982)
!9984 = !DILocation(line: 1541, column: 4, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9947, file: !986, line: 1540, column: 3)
!9986 = !DILocation(line: 1542, column: 13, scope: !9985)
!9987 = !DILocation(line: 1544, column: 4, scope: !9985)
!9988 = distinct !{!9988, !9989, !9990}
!9989 = !DILocation(line: 1380, column: 2, scope: !9865)
!9990 = !DILocation(line: 1546, column: 2, scope: !9865)
!9991 = !DILocation(line: 1467, column: 9, scope: !9872)
!9992 = !DILocation(line: 0, scope: !9863)
!9993 = !DILocation(line: 1547, column: 1, scope: !9830)
!9994 = distinct !DISubprogram(name: "prvCopyDataFromQueue", scope: !986, file: !986, line: 1857, type: !9995, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9997)
!9995 = !DISubroutineType(types: !9996)
!9996 = !{null, !9355, !7049}
!9997 = !{!9998, !9999}
!9998 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9994, file: !986, line: 1857, type: !9355)
!9999 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !9994, file: !986, line: 1857, type: !7049)
!10000 = !DILocation(line: 0, scope: !9994)
!10001 = !DILocation(line: 1859, column: 15, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9994, file: !986, line: 1859, column: 6)
!10003 = !DILocation(line: 1859, column: 26, scope: !10002)
!10004 = !DILocation(line: 1859, column: 6, scope: !9994)
!10005 = !DILocation(line: 1861, column: 14, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !986, line: 1860, column: 2)
!10007 = !DILocation(line: 1861, column: 25, scope: !10006)
!10008 = !DILocation(line: 1862, column: 41, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10006, file: !986, line: 1862, column: 7)
!10010 = !DILocation(line: 1862, column: 29, scope: !10009)
!10011 = !DILocation(line: 1862, column: 7, scope: !10006)
!10012 = !DILocation(line: 1864, column: 37, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10009, file: !986, line: 1863, column: 3)
!10014 = !DILocation(line: 1864, column: 26, scope: !10013)
!10015 = !DILocation(line: 1865, column: 3, scope: !10013)
!10016 = !DILocation(line: 1870, column: 63, scope: !10006)
!10017 = !DILocation(line: 1870, column: 12, scope: !10006)
!10018 = !DILocation(line: 1871, column: 2, scope: !10006)
!10019 = !DILocation(line: 1872, column: 1, scope: !9994)
!10020 = distinct !DISubprogram(name: "prvIsQueueEmpty", scope: !986, file: !986, line: 1990, type: !9706, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10021)
!10021 = !{!10022, !10023}
!10022 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10020, file: !986, line: 1990, type: !9708)
!10023 = !DILocalVariable(name: "xReturn", scope: !10020, file: !986, line: 1992, type: !869)
!10024 = !DILocation(line: 0, scope: !10020)
!10025 = !DILocation(line: 1994, column: 2, scope: !10020)
!10026 = !DILocation(line: 1996, column: 16, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10028, file: !986, line: 1996, column: 7)
!10028 = distinct !DILexicalBlock(scope: !10020, file: !986, line: 1995, column: 2)
!10029 = !DILocation(line: 1996, column: 34, scope: !10027)
!10030 = !DILocation(line: 2005, column: 2, scope: !10020)
!10031 = !DILocation(line: 2007, column: 2, scope: !10020)
!10032 = distinct !DISubprogram(name: "xQueueCreateCountingSemaphore", scope: !986, file: !986, line: 586, type: !10033, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10035)
!10033 = !DISubroutineType(types: !10034)
!10034 = !{!1044, !8192, !8192}
!10035 = !{!10036, !10037, !10038}
!10036 = !DILocalVariable(name: "uxMaxCount", arg: 1, scope: !10032, file: !986, line: 586, type: !8192)
!10037 = !DILocalVariable(name: "uxInitialCount", arg: 2, scope: !10032, file: !986, line: 586, type: !8192)
!10038 = !DILocalVariable(name: "xHandle", scope: !10032, file: !986, line: 588, type: !1044)
!10039 = !DILocation(line: 0, scope: !10032)
!10040 = !DILocation(line: 590, column: 3, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10032, file: !986, line: 590, column: 3)
!10042 = !DILocation(line: 590, column: 3, scope: !10032)
!10043 = !DILocation(line: 590, column: 3, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10041, file: !986, line: 590, column: 3)
!10045 = !DILocation(line: 591, column: 3, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10032, file: !986, line: 591, column: 3)
!10047 = !DILocation(line: 591, column: 3, scope: !10032)
!10048 = !DILocation(line: 591, column: 3, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10046, file: !986, line: 591, column: 3)
!10050 = !DILocation(line: 593, column: 13, scope: !10032)
!10051 = !DILocation(line: 595, column: 7, scope: !10032)
!10052 = !DILocation(line: 597, column: 31, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !986, line: 596, column: 3)
!10054 = distinct !DILexicalBlock(scope: !10032, file: !986, line: 595, column: 7)
!10055 = !DILocation(line: 597, column: 49, scope: !10053)
!10056 = !DILocation(line: 606, column: 3, scope: !10032)
!10057 = !DILocation(line: 606, column: 3, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !986, line: 606, column: 3)
!10059 = distinct !DILexicalBlock(scope: !10032, file: !986, line: 606, column: 3)
!10060 = !DILocation(line: 607, column: 3, scope: !10032)
!10061 = distinct !DISubprogram(name: "xQueueGenericSendFromISR", scope: !986, file: !986, line: 1058, type: !10062, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10064)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!869, !1044, !9498, !1100, !9499}
!10064 = !{!10065, !10066, !10067, !10068, !10069, !10070, !10071}
!10065 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10061, file: !986, line: 1058, type: !1044)
!10066 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !10061, file: !986, line: 1058, type: !9498)
!10067 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !10061, file: !986, line: 1058, type: !1100)
!10068 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !10061, file: !986, line: 1058, type: !9499)
!10069 = !DILocalVariable(name: "xReturn", scope: !10061, file: !986, line: 1060, type: !869)
!10070 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10061, file: !986, line: 1061, type: !862)
!10071 = !DILocalVariable(name: "pxQueue", scope: !10061, file: !986, line: 1062, type: !9355)
!10072 = !DILocation(line: 0, scope: !10061)
!10073 = !DILocation(line: 1062, column: 27, scope: !10061)
!10074 = !DILocation(line: 1064, column: 2, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10061, file: !986, line: 1064, column: 2)
!10076 = !DILocation(line: 1064, column: 2, scope: !10061)
!10077 = !DILocation(line: 1064, column: 2, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10075, file: !986, line: 1064, column: 2)
!10079 = !DILocation(line: 1065, column: 2, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10061, file: !986, line: 1065, column: 2)
!10081 = !DILocation(line: 1065, column: 2, scope: !10061)
!10082 = !DILocation(line: 1065, column: 2, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10080, file: !986, line: 1065, column: 2)
!10084 = !DILocation(line: 1066, column: 2, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10061, file: !986, line: 1066, column: 2)
!10086 = !DILocation(line: 1066, column: 2, scope: !10061)
!10087 = !DILocation(line: 1066, column: 2, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10085, file: !986, line: 1066, column: 2)
!10089 = !DILocation(line: 1082, column: 2, scope: !10061)
!10090 = !DILocation(line: 231, column: 2, scope: !10091, inlinedAt: !10095)
!10091 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !1985, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10092)
!10092 = !{!10093, !10094}
!10093 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !10091, file: !863, line: 229, type: !61)
!10094 = !DILocalVariable(name: "ulNewBASEPRI", scope: !10091, file: !863, line: 229, type: !61)
!10095 = distinct !DILocation(line: 1089, column: 27, scope: !10061)
!10096 = !{i64 755678, i64 755715, i64 755747, i64 755783, i64 755810}
!10097 = !DILocation(line: 0, scope: !10091, inlinedAt: !10095)
!10098 = !DILocation(line: 1091, column: 18, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10100, file: !986, line: 1091, column: 7)
!10100 = distinct !DILexicalBlock(scope: !10061, file: !986, line: 1090, column: 2)
!10101 = !DILocation(line: 1091, column: 47, scope: !10099)
!10102 = !DILocation(line: 1091, column: 36, scope: !10099)
!10103 = !DILocation(line: 1091, column: 58, scope: !10099)
!10104 = !DILocation(line: 1100, column: 13, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10099, file: !986, line: 1092, column: 3)
!10106 = !DILocation(line: 1104, column: 17, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10105, file: !986, line: 1104, column: 8)
!10108 = !DILocation(line: 1104, column: 25, scope: !10107)
!10109 = !DILocation(line: 1104, column: 8, scope: !10105)
!10110 = !DILocation(line: 1159, column: 10, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !986, line: 1159, column: 10)
!10112 = distinct !DILexicalBlock(scope: !10113, file: !986, line: 1158, column: 5)
!10113 = distinct !DILexicalBlock(scope: !10107, file: !986, line: 1105, column: 4)
!10114 = !DILocation(line: 1159, column: 10, scope: !10112)
!10115 = !DILocation(line: 1161, column: 11, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !986, line: 1161, column: 11)
!10117 = distinct !DILexicalBlock(scope: !10111, file: !986, line: 1160, column: 6)
!10118 = !DILocation(line: 1161, column: 76, scope: !10116)
!10119 = !DILocation(line: 1161, column: 11, scope: !10117)
!10120 = !DILocation(line: 1167, column: 36, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10122, file: !986, line: 1166, column: 8)
!10122 = distinct !DILexicalBlock(scope: !10123, file: !986, line: 1165, column: 12)
!10123 = distinct !DILexicalBlock(scope: !10116, file: !986, line: 1162, column: 7)
!10124 = !DILocation(line: 1168, column: 8, scope: !10121)
!10125 = !DILocation(line: 1190, column: 5, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10107, file: !986, line: 1187, column: 4)
!10127 = !DILocation(line: 0, scope: !10099)
!10128 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !10129, file: !863, line: 247, type: !61)
!10129 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2604, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10130)
!10130 = !{!10128}
!10131 = !DILocation(line: 0, scope: !10129, inlinedAt: !10132)
!10132 = distinct !DILocation(line: 1201, column: 2, scope: !10061)
!10133 = !DILocation(line: 249, column: 2, scope: !10129, inlinedAt: !10132)
!10134 = !{i64 756211}
!10135 = !DILocation(line: 1203, column: 2, scope: !10061)
!10136 = distinct !DISubprogram(name: "xQueueGiveFromISR", scope: !986, file: !986, line: 1207, type: !10137, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10139)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!869, !1044, !1100}
!10139 = !{!10140, !10141, !10142, !10143, !10144}
!10140 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10136, file: !986, line: 1207, type: !1044)
!10141 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !10136, file: !986, line: 1207, type: !1100)
!10142 = !DILocalVariable(name: "xReturn", scope: !10136, file: !986, line: 1209, type: !869)
!10143 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10136, file: !986, line: 1210, type: !862)
!10144 = !DILocalVariable(name: "pxQueue", scope: !10136, file: !986, line: 1211, type: !9355)
!10145 = !DILocation(line: 0, scope: !10136)
!10146 = !DILocation(line: 1213, column: 2, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10136, file: !986, line: 1213, column: 2)
!10148 = !DILocation(line: 1213, column: 2, scope: !10136)
!10149 = !DILocation(line: 1213, column: 2, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10147, file: !986, line: 1213, column: 2)
!10151 = !DILocation(line: 1216, column: 2, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10136, file: !986, line: 1216, column: 2)
!10153 = !DILocation(line: 1216, column: 2, scope: !10136)
!10154 = !DILocation(line: 1216, column: 2, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10152, file: !986, line: 1216, column: 2)
!10156 = !DILocation(line: 1232, column: 2, scope: !10136)
!10157 = !DILocation(line: 231, column: 2, scope: !10091, inlinedAt: !10158)
!10158 = distinct !DILocation(line: 1239, column: 27, scope: !10136)
!10159 = !DILocation(line: 0, scope: !10091, inlinedAt: !10158)
!10160 = !DILocation(line: 1244, column: 16, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !986, line: 1244, column: 7)
!10162 = distinct !DILexicalBlock(scope: !10136, file: !986, line: 1240, column: 2)
!10163 = !DILocation(line: 1244, column: 45, scope: !10161)
!10164 = !DILocation(line: 1244, column: 34, scope: !10161)
!10165 = !DILocation(line: 1244, column: 7, scope: !10162)
!10166 = !DILocation(line: 1254, column: 4, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10161, file: !986, line: 1245, column: 3)
!10168 = !DILocation(line: 1258, column: 17, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10167, file: !986, line: 1258, column: 8)
!10170 = !DILocation(line: 1258, column: 25, scope: !10169)
!10171 = !DILocation(line: 1258, column: 8, scope: !10167)
!10172 = !DILocation(line: 1313, column: 10, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10174, file: !986, line: 1313, column: 10)
!10174 = distinct !DILexicalBlock(scope: !10175, file: !986, line: 1312, column: 5)
!10175 = distinct !DILexicalBlock(scope: !10169, file: !986, line: 1259, column: 4)
!10176 = !DILocation(line: 1313, column: 10, scope: !10174)
!10177 = !DILocation(line: 1315, column: 11, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10179, file: !986, line: 1315, column: 11)
!10179 = distinct !DILexicalBlock(scope: !10173, file: !986, line: 1314, column: 6)
!10180 = !DILocation(line: 1315, column: 76, scope: !10178)
!10181 = !DILocation(line: 1315, column: 11, scope: !10179)
!10182 = !DILocation(line: 1321, column: 36, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !986, line: 1320, column: 8)
!10184 = distinct !DILexicalBlock(scope: !10185, file: !986, line: 1319, column: 12)
!10185 = distinct !DILexicalBlock(scope: !10178, file: !986, line: 1316, column: 7)
!10186 = !DILocation(line: 1322, column: 8, scope: !10183)
!10187 = !DILocation(line: 1344, column: 5, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10169, file: !986, line: 1341, column: 4)
!10189 = !DILocation(line: 0, scope: !10161)
!10190 = !DILocation(line: 0, scope: !10129, inlinedAt: !10191)
!10191 = distinct !DILocation(line: 1355, column: 2, scope: !10136)
!10192 = !DILocation(line: 249, column: 2, scope: !10129, inlinedAt: !10191)
!10193 = !DILocation(line: 1357, column: 2, scope: !10136)
!10194 = distinct !DISubprogram(name: "xQueueReceiveFromISR", scope: !986, file: !986, line: 1550, type: !10195, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10197)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!869, !1044, !7049, !1100}
!10197 = !{!10198, !10199, !10200, !10201, !10202, !10203}
!10198 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10194, file: !986, line: 1550, type: !1044)
!10199 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10194, file: !986, line: 1550, type: !7049)
!10200 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !10194, file: !986, line: 1550, type: !1100)
!10201 = !DILocalVariable(name: "xReturn", scope: !10194, file: !986, line: 1552, type: !869)
!10202 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10194, file: !986, line: 1553, type: !862)
!10203 = !DILocalVariable(name: "pxQueue", scope: !10194, file: !986, line: 1554, type: !9355)
!10204 = !DILocation(line: 0, scope: !10194)
!10205 = !DILocation(line: 1554, column: 27, scope: !10194)
!10206 = !DILocation(line: 1556, column: 2, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10194, file: !986, line: 1556, column: 2)
!10208 = !DILocation(line: 1556, column: 2, scope: !10194)
!10209 = !DILocation(line: 1556, column: 2, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10207, file: !986, line: 1556, column: 2)
!10211 = !DILocation(line: 1557, column: 2, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10194, file: !986, line: 1557, column: 2)
!10213 = !DILocation(line: 1557, column: 2, scope: !10194)
!10214 = !DILocation(line: 1557, column: 2, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10212, file: !986, line: 1557, column: 2)
!10216 = !DILocation(line: 1573, column: 2, scope: !10194)
!10217 = !DILocation(line: 231, column: 2, scope: !10091, inlinedAt: !10218)
!10218 = distinct !DILocation(line: 1575, column: 27, scope: !10194)
!10219 = !DILocation(line: 0, scope: !10091, inlinedAt: !10218)
!10220 = !DILocation(line: 1578, column: 16, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !986, line: 1578, column: 7)
!10222 = distinct !DILexicalBlock(scope: !10194, file: !986, line: 1576, column: 2)
!10223 = !DILocation(line: 1578, column: 34, scope: !10221)
!10224 = !DILocation(line: 1578, column: 7, scope: !10222)
!10225 = !DILocation(line: 1582, column: 4, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10221, file: !986, line: 1579, column: 3)
!10227 = !DILocation(line: 1583, column: 4, scope: !10226)
!10228 = !DILocation(line: 1589, column: 17, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10226, file: !986, line: 1589, column: 8)
!10230 = !DILocation(line: 1589, column: 25, scope: !10229)
!10231 = !DILocation(line: 1589, column: 8, scope: !10226)
!10232 = !DILocation(line: 1591, column: 9, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !986, line: 1591, column: 9)
!10234 = distinct !DILexicalBlock(scope: !10229, file: !986, line: 1590, column: 4)
!10235 = !DILocation(line: 1591, column: 9, scope: !10234)
!10236 = !DILocation(line: 1593, column: 10, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10238, file: !986, line: 1593, column: 10)
!10238 = distinct !DILexicalBlock(scope: !10233, file: !986, line: 1592, column: 5)
!10239 = !DILocation(line: 1593, column: 72, scope: !10237)
!10240 = !DILocation(line: 1593, column: 10, scope: !10238)
!10241 = !DILocation(line: 1599, column: 35, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !986, line: 1598, column: 7)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !986, line: 1597, column: 11)
!10244 = distinct !DILexicalBlock(scope: !10237, file: !986, line: 1594, column: 6)
!10245 = !DILocation(line: 1600, column: 7, scope: !10242)
!10246 = !DILocation(line: 1620, column: 5, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10229, file: !986, line: 1617, column: 4)
!10248 = !DILocation(line: 0, scope: !10221)
!10249 = !DILocation(line: 0, scope: !10129, inlinedAt: !10250)
!10250 = distinct !DILocation(line: 1631, column: 2, scope: !10194)
!10251 = !DILocation(line: 249, column: 2, scope: !10129, inlinedAt: !10250)
!10252 = !DILocation(line: 1633, column: 2, scope: !10194)
!10253 = distinct !DISubprogram(name: "xQueuePeekFromISR", scope: !986, file: !986, line: 1637, type: !10254, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10256)
!10254 = !DISubroutineType(types: !10255)
!10255 = !{!869, !1044, !7049}
!10256 = !{!10257, !10258, !10259, !10260, !10261, !10262}
!10257 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10253, file: !986, line: 1637, type: !1044)
!10258 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10253, file: !986, line: 1637, type: !7049)
!10259 = !DILocalVariable(name: "xReturn", scope: !10253, file: !986, line: 1639, type: !869)
!10260 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10253, file: !986, line: 1640, type: !862)
!10261 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !10253, file: !986, line: 1641, type: !994)
!10262 = !DILocalVariable(name: "pxQueue", scope: !10253, file: !986, line: 1642, type: !9355)
!10263 = !DILocation(line: 0, scope: !10253)
!10264 = !DILocation(line: 1642, column: 27, scope: !10253)
!10265 = !DILocation(line: 1644, column: 2, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10253, file: !986, line: 1644, column: 2)
!10267 = !DILocation(line: 1644, column: 2, scope: !10253)
!10268 = !DILocation(line: 1644, column: 2, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10266, file: !986, line: 1644, column: 2)
!10270 = !DILocation(line: 1645, column: 2, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10253, file: !986, line: 1645, column: 2)
!10272 = !DILocation(line: 1645, column: 2, scope: !10253)
!10273 = !DILocation(line: 1645, column: 2, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10271, file: !986, line: 1645, column: 2)
!10275 = !DILocation(line: 1646, column: 2, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10253, file: !986, line: 1646, column: 2)
!10277 = !DILocation(line: 1646, column: 2, scope: !10253)
!10278 = !DILocation(line: 1646, column: 2, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10276, file: !986, line: 1646, column: 2)
!10280 = !DILocation(line: 1662, column: 2, scope: !10253)
!10281 = !DILocation(line: 231, column: 2, scope: !10091, inlinedAt: !10282)
!10282 = distinct !DILocation(line: 1664, column: 27, scope: !10253)
!10283 = !DILocation(line: 0, scope: !10091, inlinedAt: !10282)
!10284 = !DILocation(line: 1667, column: 16, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !986, line: 1667, column: 7)
!10286 = distinct !DILexicalBlock(scope: !10253, file: !986, line: 1665, column: 2)
!10287 = !DILocation(line: 1667, column: 34, scope: !10285)
!10288 = !DILocation(line: 1667, column: 7, scope: !10286)
!10289 = !DILocation(line: 1673, column: 38, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10285, file: !986, line: 1668, column: 3)
!10291 = !DILocation(line: 1673, column: 40, scope: !10290)
!10292 = !DILocation(line: 1674, column: 4, scope: !10290)
!10293 = !DILocation(line: 1675, column: 26, scope: !10290)
!10294 = !DILocation(line: 1678, column: 3, scope: !10290)
!10295 = !DILocation(line: 0, scope: !10285)
!10296 = !DILocation(line: 0, scope: !10129, inlinedAt: !10297)
!10297 = distinct !DILocation(line: 1685, column: 2, scope: !10253)
!10298 = !DILocation(line: 249, column: 2, scope: !10129, inlinedAt: !10297)
!10299 = !DILocation(line: 1687, column: 2, scope: !10253)
!10300 = distinct !DISubprogram(name: "uxQueueMessagesWaiting", scope: !986, file: !986, line: 1691, type: !10301, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10304)
!10301 = !DISubroutineType(types: !10302)
!10302 = !{!862, !10303}
!10303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!10304 = !{!10305, !10306}
!10305 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10300, file: !986, line: 1691, type: !10303)
!10306 = !DILocalVariable(name: "uxReturn", scope: !10300, file: !986, line: 1693, type: !862)
!10307 = !DILocation(line: 0, scope: !10300)
!10308 = !DILocation(line: 1695, column: 2, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10300, file: !986, line: 1695, column: 2)
!10310 = !DILocation(line: 1695, column: 2, scope: !10300)
!10311 = !DILocation(line: 1695, column: 2, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10309, file: !986, line: 1695, column: 2)
!10313 = !DILocation(line: 1697, column: 2, scope: !10300)
!10314 = !DILocation(line: 1699, column: 40, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10300, file: !986, line: 1698, column: 2)
!10316 = !DILocation(line: 1701, column: 2, scope: !10300)
!10317 = !DILocation(line: 1703, column: 2, scope: !10300)
!10318 = distinct !DISubprogram(name: "uxQueueSpacesAvailable", scope: !986, file: !986, line: 1707, type: !10301, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10319)
!10319 = !{!10320, !10321, !10322}
!10320 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10318, file: !986, line: 1707, type: !10303)
!10321 = !DILocalVariable(name: "uxReturn", scope: !10318, file: !986, line: 1709, type: !862)
!10322 = !DILocalVariable(name: "pxQueue", scope: !10318, file: !986, line: 1710, type: !988)
!10323 = !DILocation(line: 0, scope: !10318)
!10324 = !DILocation(line: 1713, column: 2, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10318, file: !986, line: 1713, column: 2)
!10326 = !DILocation(line: 1713, column: 2, scope: !10318)
!10327 = !DILocation(line: 1713, column: 2, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10325, file: !986, line: 1713, column: 2)
!10329 = !DILocation(line: 1715, column: 2, scope: !10318)
!10330 = !DILocation(line: 1717, column: 23, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10318, file: !986, line: 1716, column: 2)
!10332 = !DILocation(line: 1717, column: 43, scope: !10331)
!10333 = !DILocation(line: 1717, column: 32, scope: !10331)
!10334 = !DILocation(line: 1719, column: 2, scope: !10318)
!10335 = !DILocation(line: 1721, column: 2, scope: !10318)
!10336 = distinct !DISubprogram(name: "uxQueueMessagesWaitingFromISR", scope: !986, file: !986, line: 1725, type: !10301, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10337)
!10337 = !{!10338, !10339}
!10338 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10336, file: !986, line: 1725, type: !10303)
!10339 = !DILocalVariable(name: "uxReturn", scope: !10336, file: !986, line: 1727, type: !862)
!10340 = !DILocation(line: 0, scope: !10336)
!10341 = !DILocation(line: 1729, column: 2, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10336, file: !986, line: 1729, column: 2)
!10343 = !DILocation(line: 1729, column: 2, scope: !10336)
!10344 = !DILocation(line: 1729, column: 2, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10342, file: !986, line: 1729, column: 2)
!10346 = !DILocation(line: 1731, column: 39, scope: !10336)
!10347 = !DILocation(line: 1733, column: 2, scope: !10336)
!10348 = distinct !DISubprogram(name: "vQueueDelete", scope: !986, file: !986, line: 1737, type: !10349, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10351)
!10349 = !DISubroutineType(types: !10350)
!10350 = !{null, !1044}
!10351 = !{!10352, !10353}
!10352 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10348, file: !986, line: 1737, type: !1044)
!10353 = !DILocalVariable(name: "pxQueue", scope: !10348, file: !986, line: 1739, type: !9355)
!10354 = !DILocation(line: 0, scope: !10348)
!10355 = !DILocation(line: 1741, column: 2, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10348, file: !986, line: 1741, column: 2)
!10357 = !DILocation(line: 1741, column: 2, scope: !10348)
!10358 = !DILocation(line: 1741, column: 2, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10356, file: !986, line: 1741, column: 2)
!10360 = !DILocation(line: 1746, column: 3, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10348, file: !986, line: 1745, column: 2)
!10362 = !DILocation(line: 1749, column: 2, scope: !10348)
!10363 = !DILocation(line: 1750, column: 1, scope: !10348)
!10364 = distinct !DISubprogram(name: "vQueueUnregisterQueue", scope: !986, file: !986, line: 2374, type: !10349, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10365)
!10365 = !{!10366, !10367}
!10366 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10364, file: !986, line: 2374, type: !1044)
!10367 = !DILocalVariable(name: "ux", scope: !10364, file: !986, line: 2376, type: !862)
!10368 = !DILocation(line: 0, scope: !10364)
!10369 = !DILocation(line: 2380, column: 3, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10364, file: !986, line: 2380, column: 3)
!10371 = !DILocation(line: 2382, column: 29, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !986, line: 2382, column: 8)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !986, line: 2381, column: 3)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !986, line: 2380, column: 3)
!10375 = !DILocation(line: 2382, column: 37, scope: !10372)
!10376 = !DILocation(line: 2382, column: 8, scope: !10373)
!10377 = !DILocation(line: 2385, column: 26, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10372, file: !986, line: 2383, column: 4)
!10379 = !DILocation(line: 2385, column: 38, scope: !10378)
!10380 = !DILocation(line: 2386, column: 5, scope: !10378)
!10381 = !DILocation(line: 2380, column: 83, scope: !10374)
!10382 = !DILocation(line: 2380, column: 36, scope: !10374)
!10383 = distinct !{!10383, !10369, !10384}
!10384 = !DILocation(line: 2392, column: 3, scope: !10370)
!10385 = !DILocation(line: 2394, column: 2, scope: !10364)
!10386 = distinct !DISubprogram(name: "uxQueueGetQueueNumber", scope: !986, file: !986, line: 1755, type: !10387, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10389)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{!862, !1044}
!10389 = !{!10390}
!10390 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10386, file: !986, line: 1755, type: !1044)
!10391 = !DILocation(line: 0, scope: !10386)
!10392 = !DILocation(line: 1757, column: 36, scope: !10386)
!10393 = !DILocation(line: 1757, column: 3, scope: !10386)
!10394 = distinct !DISubprogram(name: "vQueueSetQueueNumber", scope: !986, file: !986, line: 1765, type: !10395, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10397)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{null, !1044, !862}
!10397 = !{!10398, !10399}
!10398 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10394, file: !986, line: 1765, type: !1044)
!10399 = !DILocalVariable(name: "uxQueueNumber", arg: 2, scope: !10394, file: !986, line: 1765, type: !862)
!10400 = !DILocation(line: 0, scope: !10394)
!10401 = !DILocation(line: 1767, column: 29, scope: !10394)
!10402 = !DILocation(line: 1767, column: 43, scope: !10394)
!10403 = !DILocation(line: 1768, column: 2, scope: !10394)
!10404 = distinct !DISubprogram(name: "ucQueueGetQueueType", scope: !986, file: !986, line: 1775, type: !10405, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10407)
!10405 = !DISubroutineType(types: !10406)
!10406 = !{!54, !1044}
!10407 = !{!10408}
!10408 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10404, file: !986, line: 1775, type: !1044)
!10409 = !DILocation(line: 0, scope: !10404)
!10410 = !DILocation(line: 1777, column: 36, scope: !10404)
!10411 = !DILocation(line: 1777, column: 3, scope: !10404)
!10412 = distinct !DISubprogram(name: "xQueueIsQueueEmptyFromISR", scope: !986, file: !986, line: 2011, type: !10413, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10415)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{!869, !10303}
!10415 = !{!10416, !10417}
!10416 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10412, file: !986, line: 2011, type: !10303)
!10417 = !DILocalVariable(name: "xReturn", scope: !10412, file: !986, line: 2013, type: !869)
!10418 = !DILocation(line: 0, scope: !10412)
!10419 = !DILocation(line: 2015, column: 2, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10412, file: !986, line: 2015, column: 2)
!10421 = !DILocation(line: 2015, column: 2, scope: !10412)
!10422 = !DILocation(line: 2015, column: 2, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10420, file: !986, line: 2015, column: 2)
!10424 = !DILocation(line: 2016, column: 32, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10412, file: !986, line: 2016, column: 6)
!10426 = !DILocation(line: 2016, column: 50, scope: !10425)
!10427 = !DILocation(line: 2025, column: 2, scope: !10412)
!10428 = distinct !DISubprogram(name: "xQueueIsQueueFullFromISR", scope: !986, file: !986, line: 2050, type: !10413, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10429)
!10429 = !{!10430, !10431}
!10430 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10428, file: !986, line: 2050, type: !10303)
!10431 = !DILocalVariable(name: "xReturn", scope: !10428, file: !986, line: 2052, type: !869)
!10432 = !DILocation(line: 0, scope: !10428)
!10433 = !DILocation(line: 2054, column: 2, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10428, file: !986, line: 2054, column: 2)
!10435 = !DILocation(line: 2054, column: 2, scope: !10428)
!10436 = !DILocation(line: 2054, column: 2, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10434, file: !986, line: 2054, column: 2)
!10438 = !DILocation(line: 2055, column: 32, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10428, file: !986, line: 2055, column: 6)
!10440 = !DILocation(line: 2055, column: 79, scope: !10439)
!10441 = !DILocation(line: 2055, column: 50, scope: !10439)
!10442 = !DILocation(line: 2064, column: 2, scope: !10428)
!10443 = distinct !DISubprogram(name: "vQueueAddToRegistry", scope: !986, file: !986, line: 2345, type: !10444, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10446)
!10444 = !DISubroutineType(types: !10445)
!10445 = !{null, !1044, !331}
!10446 = !{!10447, !10448, !10449}
!10447 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10443, file: !986, line: 2345, type: !1044)
!10448 = !DILocalVariable(name: "pcQueueName", arg: 2, scope: !10443, file: !986, line: 2345, type: !331)
!10449 = !DILocalVariable(name: "ux", scope: !10443, file: !986, line: 2347, type: !862)
!10450 = !DILocation(line: 0, scope: !10443)
!10451 = !DILocation(line: 2351, column: 3, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10443, file: !986, line: 2351, column: 3)
!10453 = !DILocation(line: 2353, column: 29, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10455, file: !986, line: 2353, column: 8)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !986, line: 2352, column: 3)
!10456 = distinct !DILexicalBlock(scope: !10452, file: !986, line: 2351, column: 3)
!10457 = !DILocation(line: 2353, column: 41, scope: !10454)
!10458 = !DILocation(line: 2353, column: 8, scope: !10455)
!10459 = !DILocation(line: 2356, column: 38, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10454, file: !986, line: 2354, column: 4)
!10461 = !DILocation(line: 2357, column: 26, scope: !10460)
!10462 = !DILocation(line: 2357, column: 34, scope: !10460)
!10463 = !DILocation(line: 2360, column: 5, scope: !10460)
!10464 = !DILocation(line: 2351, column: 83, scope: !10456)
!10465 = !DILocation(line: 2351, column: 36, scope: !10456)
!10466 = distinct !{!10466, !10451, !10467}
!10467 = !DILocation(line: 2366, column: 3, scope: !10452)
!10468 = !DILocation(line: 2367, column: 2, scope: !10443)
!10469 = distinct !DISubprogram(name: "vQueueWaitForMessageRestricted", scope: !986, file: !986, line: 2401, type: !10470, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10472)
!10470 = !DISubroutineType(types: !10471)
!10471 = !{null, !1044, !884}
!10472 = !{!10473, !10474, !10475}
!10473 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10469, file: !986, line: 2401, type: !1044)
!10474 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !10469, file: !986, line: 2401, type: !884)
!10475 = !DILocalVariable(name: "pxQueue", scope: !10469, file: !986, line: 2403, type: !9355)
!10476 = !DILocation(line: 0, scope: !10469)
!10477 = !DILocation(line: 2419, column: 3, scope: !10469)
!10478 = !DILocation(line: 2419, column: 3, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !986, line: 2419, column: 3)
!10480 = distinct !DILexicalBlock(scope: !10469, file: !986, line: 2419, column: 3)
!10481 = !DILocation(line: 2419, column: 3, scope: !10480)
!10482 = !DILocation(line: 2419, column: 3, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10479, file: !986, line: 2419, column: 3)
!10484 = !DILocation(line: 2419, column: 3, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10480, file: !986, line: 2419, column: 3)
!10486 = !DILocation(line: 2419, column: 3, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10485, file: !986, line: 2419, column: 3)
!10488 = !DILocation(line: 2420, column: 16, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10469, file: !986, line: 2420, column: 7)
!10490 = !DILocation(line: 2420, column: 34, scope: !10489)
!10491 = !DILocation(line: 2420, column: 7, scope: !10469)
!10492 = !DILocation(line: 2423, column: 49, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10489, file: !986, line: 2421, column: 3)
!10494 = !DILocation(line: 2423, column: 4, scope: !10493)
!10495 = !DILocation(line: 2424, column: 3, scope: !10493)
!10496 = !DILocation(line: 2403, column: 28, scope: !10469)
!10497 = !DILocation(line: 2429, column: 3, scope: !10469)
!10498 = !DILocation(line: 2430, column: 2, scope: !10469)
!10499 = distinct !DISubprogram(name: "xTimerCreateTimerTask", scope: !1049, file: !1049, line: 240, type: !7446, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10500)
!10500 = !{!10501}
!10501 = !DILocalVariable(name: "xReturn", scope: !10499, file: !1049, line: 242, type: !869)
!10502 = !DILocation(line: 0, scope: !10499)
!10503 = !DILocation(line: 248, column: 2, scope: !10499)
!10504 = !DILocation(line: 250, column: 6, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10499, file: !1049, line: 250, column: 6)
!10506 = !DILocation(line: 250, column: 18, scope: !10505)
!10507 = !DILocation(line: 250, column: 6, scope: !10499)
!10508 = !DILocation(line: 261, column: 14, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !1049, line: 259, column: 3)
!10510 = distinct !DILexicalBlock(scope: !10505, file: !1049, line: 251, column: 2)
!10511 = !DILocation(line: 270, column: 2, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10499, file: !1049, line: 270, column: 2)
!10513 = !DILocation(line: 270, column: 2, scope: !10499)
!10514 = !DILocation(line: 270, column: 2, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10512, file: !1049, line: 270, column: 2)
!10516 = !DILocation(line: 271, column: 2, scope: !10499)
!10517 = distinct !DISubprogram(name: "prvCheckForValidListAndQueue", scope: !1049, file: !1049, line: 770, type: !154, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !2004)
!10518 = !DILocation(line: 775, column: 2, scope: !10517)
!10519 = !DILocation(line: 777, column: 7, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !1049, line: 777, column: 7)
!10521 = distinct !DILexicalBlock(scope: !10517, file: !1049, line: 776, column: 2)
!10522 = !DILocation(line: 777, column: 19, scope: !10520)
!10523 = !DILocation(line: 777, column: 7, scope: !10521)
!10524 = !DILocation(line: 779, column: 4, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10520, file: !1049, line: 778, column: 3)
!10526 = !DILocation(line: 780, column: 4, scope: !10525)
!10527 = !DILocation(line: 781, column: 23, scope: !10525)
!10528 = !DILocation(line: 782, column: 24, scope: !10525)
!10529 = !DILocation(line: 783, column: 18, scope: !10525)
!10530 = !DILocation(line: 783, column: 16, scope: !10525)
!10531 = !DILocation(line: 784, column: 4, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10525, file: !1049, line: 784, column: 4)
!10533 = !DILocation(line: 784, column: 4, scope: !10525)
!10534 = !DILocation(line: 784, column: 4, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10532, file: !1049, line: 784, column: 4)
!10536 = !DILocation(line: 788, column: 9, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10538, file: !1049, line: 788, column: 9)
!10538 = distinct !DILexicalBlock(scope: !10525, file: !1049, line: 787, column: 4)
!10539 = !DILocation(line: 788, column: 21, scope: !10537)
!10540 = !DILocation(line: 788, column: 9, scope: !10538)
!10541 = !DILocation(line: 790, column: 6, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10537, file: !1049, line: 789, column: 5)
!10543 = !DILocation(line: 791, column: 5, scope: !10542)
!10544 = !DILocation(line: 804, column: 2, scope: !10517)
!10545 = !DILocation(line: 805, column: 1, scope: !10517)
!10546 = distinct !DISubprogram(name: "prvTimerTask", scope: !1049, file: !1049, line: 418, type: !640, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10547)
!10547 = !{!10548, !10549, !10550}
!10548 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !10546, file: !1049, line: 418, type: !51)
!10549 = !DILocalVariable(name: "xNextExpireTime", scope: !10546, file: !1049, line: 420, type: !884)
!10550 = !DILocalVariable(name: "xListWasEmpty", scope: !10546, file: !1049, line: 421, type: !869)
!10551 = !DILocation(line: 0, scope: !10546)
!10552 = !DILocation(line: 421, column: 1, scope: !10546)
!10553 = !DILocation(line: 426, column: 2, scope: !10546)
!10554 = !DILocation(line: 430, column: 21, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !1049, line: 427, column: 2)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !1049, line: 426, column: 2)
!10557 = distinct !DILexicalBlock(scope: !10546, file: !1049, line: 426, column: 2)
!10558 = !DILocation(line: 434, column: 48, scope: !10555)
!10559 = !DILocation(line: 434, column: 3, scope: !10555)
!10560 = !DILocation(line: 437, column: 3, scope: !10555)
!10561 = !DILocation(line: 426, column: 2, scope: !10556)
!10562 = distinct !{!10562, !10563, !10564}
!10563 = !DILocation(line: 426, column: 2, scope: !10557)
!10564 = !DILocation(line: 438, column: 2, scope: !10557)
!10565 = distinct !DISubprogram(name: "prvGetNextExpireTime", scope: !1049, file: !1049, line: 495, type: !1098, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10566)
!10566 = !{!10567, !10568}
!10567 = !DILocalVariable(name: "pxListWasEmpty", arg: 1, scope: !10565, file: !1049, line: 495, type: !1100)
!10568 = !DILocalVariable(name: "xNextExpireTime", scope: !10565, file: !1049, line: 497, type: !884)
!10569 = !DILocation(line: 0, scope: !10565)
!10570 = !DILocation(line: 506, column: 20, scope: !10565)
!10571 = !DILocation(line: 506, column: 18, scope: !10565)
!10572 = !DILocation(line: 507, column: 6, scope: !10565)
!10573 = !DILocation(line: 509, column: 21, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !1049, line: 508, column: 2)
!10575 = distinct !DILexicalBlock(scope: !10565, file: !1049, line: 507, column: 6)
!10576 = !DILocation(line: 510, column: 2, scope: !10574)
!10577 = !DILocation(line: 0, scope: !10575)
!10578 = !DILocation(line: 517, column: 2, scope: !10565)
!10579 = distinct !DISubprogram(name: "prvProcessTimerOrBlockTask", scope: !1049, file: !1049, line: 442, type: !10580, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10582)
!10580 = !DISubroutineType(types: !10581)
!10581 = !{null, !7346, !9499}
!10582 = !{!10583, !10584, !10585, !10586}
!10583 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !10579, file: !1049, line: 442, type: !7346)
!10584 = !DILocalVariable(name: "xListWasEmpty", arg: 2, scope: !10579, file: !1049, line: 442, type: !9499)
!10585 = !DILocalVariable(name: "xTimeNow", scope: !10579, file: !1049, line: 444, type: !884)
!10586 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !10579, file: !1049, line: 445, type: !869)
!10587 = !DILocation(line: 0, scope: !10579)
!10588 = !DILocation(line: 445, column: 1, scope: !10579)
!10589 = !DILocation(line: 447, column: 2, scope: !10579)
!10590 = !DILocation(line: 454, column: 14, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10579, file: !1049, line: 448, column: 2)
!10592 = !DILocation(line: 455, column: 7, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10591, file: !1049, line: 455, column: 7)
!10594 = !DILocation(line: 455, column: 31, scope: !10593)
!10595 = !DILocation(line: 455, column: 7, scope: !10591)
!10596 = !DILocation(line: 458, column: 24, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !1049, line: 458, column: 8)
!10598 = distinct !DILexicalBlock(scope: !10593, file: !1049, line: 456, column: 3)
!10599 = !DILocation(line: 458, column: 37, scope: !10597)
!10600 = !DILocation(line: 460, column: 14, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10597, file: !1049, line: 459, column: 4)
!10602 = !DILocation(line: 461, column: 5, scope: !10601)
!10603 = !DILocation(line: 462, column: 4, scope: !10601)
!10604 = !DILocation(line: 471, column: 37, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10597, file: !1049, line: 464, column: 4)
!10606 = !DILocation(line: 471, column: 68, scope: !10605)
!10607 = !DILocation(line: 471, column: 5, scope: !10605)
!10608 = !DILocation(line: 473, column: 9, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10605, file: !1049, line: 473, column: 9)
!10610 = !DILocation(line: 473, column: 26, scope: !10609)
!10611 = !DILocation(line: 473, column: 9, scope: !10605)
!10612 = !DILocation(line: 479, column: 6, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !1049, line: 479, column: 6)
!10614 = distinct !DILexicalBlock(scope: !10609, file: !1049, line: 474, column: 5)
!10615 = !{i64 2148405867}
!10616 = !{i64 2148405907}
!10617 = !DILocation(line: 480, column: 5, scope: !10614)
!10618 = !DILocation(line: 489, column: 13, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10593, file: !1049, line: 488, column: 3)
!10620 = !DILocation(line: 492, column: 1, scope: !10579)
!10621 = distinct !DISubprogram(name: "prvProcessReceivedCommands", scope: !1049, file: !1049, line: 585, type: !154, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10622)
!10622 = !{!10623, !10637, !10638, !10639, !10640}
!10623 = !DILocalVariable(name: "xMessage", scope: !10621, file: !1049, line: 587, type: !10624)
!10624 = !DIDerivedType(tag: DW_TAG_typedef, name: "DaemonTaskMessage_t", file: !1049, line: 155, baseType: !10625)
!10625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerQueueMessage", file: !1049, line: 142, size: 96, elements: !10626)
!10626 = !{!10627, !10628}
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageID", scope: !10625, file: !1049, line: 144, baseType: !869, size: 32)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !10625, file: !1049, line: 154, baseType: !10629, size: 64, offset: 32)
!10629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10625, file: !1049, line: 145, size: 64, elements: !10630)
!10630 = !{!10631}
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerParameters", scope: !10629, file: !1049, line: 147, baseType: !10632, size: 64)
!10632 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerParameter_t", file: !1049, line: 130, baseType: !10633)
!10633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerParameters", file: !1049, line: 126, size: 64, elements: !10634)
!10634 = !{!10635, !10636}
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageValue", scope: !10633, file: !1049, line: 128, baseType: !884, size: 32)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "pxTimer", scope: !10633, file: !1049, line: 129, baseType: !1051, size: 32, offset: 32)
!10637 = !DILocalVariable(name: "pxTimer", scope: !10621, file: !1049, line: 588, type: !1051)
!10638 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !10621, file: !1049, line: 589, type: !869)
!10639 = !DILocalVariable(name: "xResult", scope: !10621, file: !1049, line: 589, type: !869)
!10640 = !DILocalVariable(name: "xTimeNow", scope: !10621, file: !1049, line: 590, type: !884)
!10641 = !DILocation(line: 587, column: 1, scope: !10621)
!10642 = !DILocation(line: 587, column: 21, scope: !10621)
!10643 = !DILocation(line: 589, column: 1, scope: !10621)
!10644 = !DILocation(line: 592, column: 9, scope: !10621)
!10645 = !DILocation(line: 592, column: 62, scope: !10621)
!10646 = !DILocation(line: 592, column: 2, scope: !10621)
!10647 = !DILocation(line: 618, column: 16, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !1049, line: 618, column: 7)
!10649 = distinct !DILexicalBlock(scope: !10621, file: !1049, line: 593, column: 2)
!10650 = !DILocation(line: 618, column: 27, scope: !10648)
!10651 = !DILocation(line: 618, column: 7, scope: !10649)
!10652 = !DILocation(line: 622, column: 42, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10648, file: !1049, line: 619, column: 3)
!10654 = !DILocation(line: 0, scope: !10621)
!10655 = !DILocation(line: 624, column: 8, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10653, file: !1049, line: 624, column: 8)
!10657 = !DILocation(line: 624, column: 8, scope: !10653)
!10658 = !DILocation(line: 627, column: 14, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10656, file: !1049, line: 625, column: 4)
!10660 = !DILocation(line: 628, column: 4, scope: !10659)
!10661 = !DILocation(line: 642, column: 15, scope: !10653)
!10662 = !DILocation(line: 644, column: 21, scope: !10653)
!10663 = !DILocation(line: 644, column: 4, scope: !10653)
!10664 = !DILocation(line: 652, column: 76, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10666, file: !1049, line: 652, column: 10)
!10666 = distinct !DILexicalBlock(scope: !10653, file: !1049, line: 645, column: 4)
!10667 = !DILocation(line: 652, column: 101, scope: !10665)
!10668 = !DILocation(line: 652, column: 90, scope: !10665)
!10669 = !DILocation(line: 652, column: 10, scope: !10665)
!10670 = !DILocation(line: 652, column: 176, scope: !10665)
!10671 = !DILocation(line: 652, column: 10, scope: !10666)
!10672 = !DILocation(line: 656, column: 16, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10665, file: !1049, line: 653, column: 6)
!10674 = !DILocation(line: 656, column: 36, scope: !10673)
!10675 = !DILocation(line: 656, column: 7, scope: !10673)
!10676 = !DILocation(line: 659, column: 20, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10673, file: !1049, line: 659, column: 11)
!10678 = !DILocation(line: 659, column: 33, scope: !10677)
!10679 = !DILocation(line: 659, column: 11, scope: !10673)
!10680 = !DILocation(line: 661, column: 106, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !1049, line: 660, column: 7)
!10682 = !DILocation(line: 661, column: 131, scope: !10681)
!10683 = !DILocation(line: 661, column: 120, scope: !10681)
!10684 = !DILocation(line: 661, column: 18, scope: !10681)
!10685 = !DILocation(line: 662, column: 8, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10681, file: !1049, line: 662, column: 8)
!10687 = !DILocation(line: 662, column: 8, scope: !10681)
!10688 = !DILocation(line: 662, column: 8, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10686, file: !1049, line: 662, column: 8)
!10690 = !DILocation(line: 684, column: 65, scope: !10666)
!10691 = !DILocation(line: 684, column: 15, scope: !10666)
!10692 = !DILocation(line: 684, column: 35, scope: !10666)
!10693 = !DILocation(line: 685, column: 6, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10666, file: !1049, line: 685, column: 6)
!10695 = !DILocation(line: 685, column: 6, scope: !10666)
!10696 = !DILocation(line: 685, column: 6, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10694, file: !1049, line: 685, column: 6)
!10698 = !DILocation(line: 693, column: 74, scope: !10666)
!10699 = !DILocation(line: 693, column: 63, scope: !10666)
!10700 = !DILocation(line: 693, column: 15, scope: !10666)
!10701 = !DILocation(line: 694, column: 6, scope: !10666)
!10702 = !DILocation(line: 699, column: 17, scope: !10666)
!10703 = !DILocation(line: 699, column: 6, scope: !10666)
!10704 = !DILocation(line: 700, column: 6, scope: !10666)
!10705 = distinct !{!10705, !10646, !10706}
!10706 = !DILocation(line: 707, column: 2, scope: !10621)
!10707 = !DILocation(line: 708, column: 1, scope: !10621)
!10708 = !DILocation(line: 0, scope: !1097)
!10709 = !DILocation(line: 526, column: 13, scope: !1097)
!10710 = !DILocation(line: 528, column: 17, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !1097, file: !1049, line: 528, column: 6)
!10712 = !DILocation(line: 528, column: 15, scope: !10711)
!10713 = !DILocation(line: 528, column: 6, scope: !1097)
!10714 = !DILocation(line: 530, column: 3, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10711, file: !1049, line: 529, column: 2)
!10716 = !DILocation(line: 532, column: 2, scope: !10715)
!10717 = !DILocation(line: 0, scope: !10711)
!10718 = !DILocation(line: 538, column: 12, scope: !1097)
!10719 = !DILocation(line: 540, column: 2, scope: !1097)
!10720 = distinct !DISubprogram(name: "prvInsertTimerInActiveList", scope: !1049, file: !1049, line: 544, type: !10721, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10724)
!10721 = !DISubroutineType(types: !10722)
!10722 = !{!869, !10723, !7346, !7346, !7346}
!10723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!10724 = !{!10725, !10726, !10727, !10728, !10729}
!10725 = !DILocalVariable(name: "pxTimer", arg: 1, scope: !10720, file: !1049, line: 544, type: !10723)
!10726 = !DILocalVariable(name: "xNextExpiryTime", arg: 2, scope: !10720, file: !1049, line: 544, type: !7346)
!10727 = !DILocalVariable(name: "xTimeNow", arg: 3, scope: !10720, file: !1049, line: 544, type: !7346)
!10728 = !DILocalVariable(name: "xCommandTime", arg: 4, scope: !10720, file: !1049, line: 544, type: !7346)
!10729 = !DILocalVariable(name: "xProcessTimerNow", scope: !10720, file: !1049, line: 546, type: !869)
!10730 = !DILocation(line: 0, scope: !10720)
!10731 = !DILocation(line: 548, column: 2, scope: !10720)
!10732 = !DILocation(line: 549, column: 2, scope: !10720)
!10733 = !DILocation(line: 551, column: 22, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10720, file: !1049, line: 551, column: 6)
!10735 = !DILocation(line: 551, column: 6, scope: !10720)
!10736 = !DILocation(line: 555, column: 18, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !1049, line: 555, column: 7)
!10738 = distinct !DILexicalBlock(scope: !10734, file: !1049, line: 552, column: 2)
!10739 = !DILocation(line: 555, column: 47, scope: !10737)
!10740 = !DILocation(line: 555, column: 35, scope: !10737)
!10741 = !DILocation(line: 555, column: 7, scope: !10738)
!10742 = !DILocation(line: 568, column: 18, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !1049, line: 568, column: 7)
!10744 = distinct !DILexicalBlock(scope: !10734, file: !1049, line: 567, column: 2)
!10745 = !DILocation(line: 568, column: 35, scope: !10743)
!10746 = !DILocation(line: 0, scope: !10734)
!10747 = !DILocation(line: 581, column: 2, scope: !10720)
!10748 = distinct !DISubprogram(name: "xTimerGenericCommand", scope: !1049, file: !1049, line: 316, type: !10749, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10751)
!10749 = !DISubroutineType(types: !10750)
!10750 = !{!869, !1076, !9499, !7346, !1100, !7346}
!10751 = !{!10752, !10753, !10754, !10755, !10756, !10757, !10758}
!10752 = !DILocalVariable(name: "xTimer", arg: 1, scope: !10748, file: !1049, line: 316, type: !1076)
!10753 = !DILocalVariable(name: "xCommandID", arg: 2, scope: !10748, file: !1049, line: 316, type: !9499)
!10754 = !DILocalVariable(name: "xOptionalValue", arg: 3, scope: !10748, file: !1049, line: 316, type: !7346)
!10755 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !10748, file: !1049, line: 316, type: !1100)
!10756 = !DILocalVariable(name: "xTicksToWait", arg: 5, scope: !10748, file: !1049, line: 316, type: !7346)
!10757 = !DILocalVariable(name: "xReturn", scope: !10748, file: !1049, line: 318, type: !869)
!10758 = !DILocalVariable(name: "xMessage", scope: !10748, file: !1049, line: 319, type: !10624)
!10759 = !DILocation(line: 0, scope: !10748)
!10760 = !DILocation(line: 319, column: 1, scope: !10748)
!10761 = !DILocation(line: 319, column: 21, scope: !10748)
!10762 = !DILocation(line: 323, column: 6, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10748, file: !1049, line: 323, column: 6)
!10764 = !DILocation(line: 323, column: 18, scope: !10763)
!10765 = !DILocation(line: 323, column: 6, scope: !10748)
!10766 = !DILocation(line: 326, column: 12, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10763, file: !1049, line: 324, column: 2)
!10768 = !DILocation(line: 326, column: 23, scope: !10767)
!10769 = !DILocation(line: 327, column: 31, scope: !10767)
!10770 = !DILocation(line: 327, column: 45, scope: !10767)
!10771 = !DILocation(line: 328, column: 31, scope: !10767)
!10772 = !DILocation(line: 328, column: 39, scope: !10767)
!10773 = !DILocation(line: 330, column: 18, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10767, file: !1049, line: 330, column: 7)
!10775 = !DILocation(line: 330, column: 7, scope: !10767)
!10776 = !DILocation(line: 332, column: 8, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10778, file: !1049, line: 332, column: 8)
!10778 = distinct !DILexicalBlock(scope: !10774, file: !1049, line: 331, column: 3)
!10779 = !DILocation(line: 332, column: 33, scope: !10777)
!10780 = !DILocation(line: 0, scope: !10777)
!10781 = !DILocation(line: 332, column: 8, scope: !10778)
!10782 = !DILocation(line: 334, column: 15, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10777, file: !1049, line: 333, column: 4)
!10784 = !DILocation(line: 335, column: 4, scope: !10783)
!10785 = !DILocation(line: 338, column: 15, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10777, file: !1049, line: 337, column: 4)
!10787 = !DILocation(line: 343, column: 14, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10774, file: !1049, line: 342, column: 3)
!10789 = !DILocation(line: 354, column: 1, scope: !10748)
!10790 = !DILocation(line: 353, column: 2, scope: !10748)
!10791 = distinct !DISubprogram(name: "prvSwitchTimerLists", scope: !1049, file: !1049, line: 711, type: !154, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10792)
!10792 = !{!10793, !10794, !10795, !10796, !10797}
!10793 = !DILocalVariable(name: "xNextExpireTime", scope: !10791, file: !1049, line: 713, type: !884)
!10794 = !DILocalVariable(name: "xReloadTime", scope: !10791, file: !1049, line: 713, type: !884)
!10795 = !DILocalVariable(name: "pxTemp", scope: !10791, file: !1049, line: 714, type: !1081)
!10796 = !DILocalVariable(name: "pxTimer", scope: !10791, file: !1049, line: 715, type: !1051)
!10797 = !DILocalVariable(name: "xResult", scope: !10791, file: !1049, line: 716, type: !869)
!10798 = !DILocation(line: 722, column: 9, scope: !10791)
!10799 = !DILocation(line: 722, column: 2, scope: !10791)
!10800 = !DILocation(line: 724, column: 21, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10791, file: !1049, line: 723, column: 2)
!10802 = !DILocation(line: 0, scope: !10791)
!10803 = !DILocation(line: 727, column: 27, scope: !10801)
!10804 = !DILocation(line: 728, column: 38, scope: !10801)
!10805 = !DILocation(line: 728, column: 12, scope: !10801)
!10806 = !DILocation(line: 734, column: 12, scope: !10801)
!10807 = !DILocation(line: 734, column: 3, scope: !10801)
!10808 = !DILocation(line: 736, column: 16, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10801, file: !1049, line: 736, column: 7)
!10810 = !DILocation(line: 736, column: 29, scope: !10809)
!10811 = !DILocation(line: 736, column: 7, scope: !10801)
!10812 = !DILocation(line: 744, column: 47, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10809, file: !1049, line: 737, column: 3)
!10814 = !DILocation(line: 744, column: 36, scope: !10813)
!10815 = !DILocation(line: 745, column: 20, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10813, file: !1049, line: 745, column: 8)
!10817 = !DILocation(line: 745, column: 8, scope: !10813)
!10818 = !DILocation(line: 747, column: 5, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10816, file: !1049, line: 746, column: 4)
!10820 = !DILocation(line: 748, column: 5, scope: !10819)
!10821 = !DILocation(line: 749, column: 18, scope: !10819)
!10822 = !DILocation(line: 749, column: 5, scope: !10819)
!10823 = !DILocation(line: 750, column: 4, scope: !10819)
!10824 = !DILocation(line: 753, column: 15, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10816, file: !1049, line: 752, column: 4)
!10826 = !DILocation(line: 754, column: 5, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10825, file: !1049, line: 754, column: 5)
!10828 = !DILocation(line: 754, column: 5, scope: !10825)
!10829 = !DILocation(line: 754, column: 5, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10827, file: !1049, line: 754, column: 5)
!10831 = distinct !{!10831, !10799, !10832}
!10832 = !DILocation(line: 762, column: 2, scope: !10791)
!10833 = !DILocation(line: 765, column: 23, scope: !10791)
!10834 = !DILocation(line: 765, column: 21, scope: !10791)
!10835 = !DILocation(line: 766, column: 22, scope: !10791)
!10836 = !DILocation(line: 767, column: 1, scope: !10791)
!10837 = distinct !DISubprogram(name: "prvProcessExpiredTimer", scope: !1049, file: !1049, line: 378, type: !10838, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10840)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{null, !7346, !7346}
!10840 = !{!10841, !10842, !10843, !10844}
!10841 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !10837, file: !1049, line: 378, type: !7346)
!10842 = !DILocalVariable(name: "xTimeNow", arg: 2, scope: !10837, file: !1049, line: 378, type: !7346)
!10843 = !DILocalVariable(name: "xResult", scope: !10837, file: !1049, line: 380, type: !869)
!10844 = !DILocalVariable(name: "pxTimer", scope: !10837, file: !1049, line: 381, type: !10723)
!10845 = !DILocation(line: 0, scope: !10837)
!10846 = !DILocation(line: 381, column: 41, scope: !10837)
!10847 = !DILocation(line: 385, column: 37, scope: !10837)
!10848 = !DILocation(line: 385, column: 11, scope: !10837)
!10849 = !DILocation(line: 390, column: 15, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10837, file: !1049, line: 390, column: 6)
!10851 = !DILocation(line: 390, column: 28, scope: !10850)
!10852 = !DILocation(line: 390, column: 6, scope: !10837)
!10853 = !DILocation(line: 381, column: 27, scope: !10837)
!10854 = !DILocation(line: 395, column: 73, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !1049, line: 395, column: 7)
!10856 = distinct !DILexicalBlock(scope: !10850, file: !1049, line: 391, column: 2)
!10857 = !DILocation(line: 395, column: 62, scope: !10855)
!10858 = !DILocation(line: 395, column: 7, scope: !10855)
!10859 = !DILocation(line: 395, column: 124, scope: !10855)
!10860 = !DILocation(line: 395, column: 7, scope: !10856)
!10861 = !DILocation(line: 399, column: 14, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10855, file: !1049, line: 396, column: 3)
!10863 = !DILocation(line: 400, column: 4, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10862, file: !1049, line: 400, column: 4)
!10865 = !DILocation(line: 400, column: 4, scope: !10862)
!10866 = !DILocation(line: 400, column: 4, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10864, file: !1049, line: 400, column: 4)
!10868 = !DILocation(line: 414, column: 11, scope: !10837)
!10869 = !DILocation(line: 414, column: 2, scope: !10837)
!10870 = !DILocation(line: 415, column: 1, scope: !10837)
!10871 = distinct !DISubprogram(name: "xTimerCreate", scope: !1049, file: !1049, line: 275, type: !10872, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10874)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{!1076, !330, !7346, !8192, !7049, !1071}
!10874 = !{!10875, !10876, !10877, !10878, !10879, !10880}
!10875 = !DILocalVariable(name: "pcTimerName", arg: 1, scope: !10871, file: !1049, line: 275, type: !330)
!10876 = !DILocalVariable(name: "xTimerPeriodInTicks", arg: 2, scope: !10871, file: !1049, line: 275, type: !7346)
!10877 = !DILocalVariable(name: "uxAutoReload", arg: 3, scope: !10871, file: !1049, line: 275, type: !8192)
!10878 = !DILocalVariable(name: "pvTimerID", arg: 4, scope: !10871, file: !1049, line: 275, type: !7049)
!10879 = !DILocalVariable(name: "pxCallbackFunction", arg: 5, scope: !10871, file: !1049, line: 275, type: !1071)
!10880 = !DILocalVariable(name: "pxNewTimer", scope: !10871, file: !1049, line: 277, type: !1051)
!10881 = !DILocation(line: 0, scope: !10871)
!10882 = !DILocation(line: 280, column: 26, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10871, file: !1049, line: 280, column: 6)
!10884 = !DILocation(line: 280, column: 6, scope: !10871)
!10885 = !DILocation(line: 286, column: 30, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10883, file: !1049, line: 285, column: 2)
!10887 = !DILocation(line: 287, column: 18, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10886, file: !1049, line: 287, column: 7)
!10889 = !DILocation(line: 287, column: 7, scope: !10886)
!10890 = !DILocation(line: 291, column: 4, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10888, file: !1049, line: 288, column: 3)
!10892 = !DILocation(line: 294, column: 16, scope: !10891)
!10893 = !DILocation(line: 294, column: 28, scope: !10891)
!10894 = !DILocation(line: 295, column: 16, scope: !10891)
!10895 = !DILocation(line: 295, column: 36, scope: !10891)
!10896 = !DILocation(line: 296, column: 16, scope: !10891)
!10897 = !DILocation(line: 296, column: 29, scope: !10891)
!10898 = !DILocation(line: 297, column: 16, scope: !10891)
!10899 = !DILocation(line: 297, column: 26, scope: !10891)
!10900 = !DILocation(line: 298, column: 16, scope: !10891)
!10901 = !DILocation(line: 298, column: 35, scope: !10891)
!10902 = !DILocation(line: 299, column: 40, scope: !10891)
!10903 = !DILocation(line: 299, column: 4, scope: !10891)
!10904 = !DILocation(line: 302, column: 3, scope: !10891)
!10905 = !DILocation(line: 310, column: 2, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10907, file: !1049, line: 310, column: 2)
!10907 = distinct !DILexicalBlock(scope: !10871, file: !1049, line: 310, column: 2)
!10908 = !DILocation(line: 312, column: 2, scope: !10871)
!10909 = distinct !DISubprogram(name: "pcTimerGetTimerName", scope: !1049, file: !1049, line: 370, type: !10910, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10912)
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!331, !1076}
!10912 = !{!10913, !10914}
!10913 = !DILocalVariable(name: "xTimer", arg: 1, scope: !10909, file: !1049, line: 370, type: !1076)
!10914 = !DILocalVariable(name: "pxTimer", scope: !10909, file: !1049, line: 372, type: !1051)
!10915 = !DILocation(line: 0, scope: !10909)
!10916 = !DILocation(line: 374, column: 18, scope: !10909)
!10917 = !DILocation(line: 374, column: 2, scope: !10909)
!10918 = distinct !DISubprogram(name: "xTimerIsTimerActive", scope: !1049, file: !1049, line: 808, type: !10919, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10921)
!10919 = !DISubroutineType(types: !10920)
!10920 = !{!869, !1076}
!10921 = !{!10922, !10923, !10924}
!10922 = !DILocalVariable(name: "xTimer", arg: 1, scope: !10918, file: !1049, line: 808, type: !1076)
!10923 = !DILocalVariable(name: "xTimerIsInActiveList", scope: !10918, file: !1049, line: 810, type: !869)
!10924 = !DILocalVariable(name: "pxTimer", scope: !10918, file: !1049, line: 811, type: !1051)
!10925 = !DILocation(line: 0, scope: !10918)
!10926 = !DILocation(line: 814, column: 2, scope: !10918)
!10927 = !DILocation(line: 819, column: 44, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10918, file: !1049, line: 815, column: 2)
!10929 = !DILocation(line: 819, column: 41, scope: !10928)
!10930 = !DILocation(line: 821, column: 2, scope: !10918)
!10931 = !DILocation(line: 823, column: 2, scope: !10918)
!10932 = distinct !DISubprogram(name: "pvTimerGetTimerID", scope: !1049, file: !1049, line: 827, type: !10933, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10936)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{!51, !10935}
!10935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!10936 = !{!10937, !10938}
!10937 = !DILocalVariable(name: "xTimer", arg: 1, scope: !10932, file: !1049, line: 827, type: !10935)
!10938 = !DILocalVariable(name: "pxTimer", scope: !10932, file: !1049, line: 829, type: !10723)
!10939 = !DILocation(line: 0, scope: !10932)
!10940 = !DILocation(line: 831, column: 18, scope: !10932)
!10941 = !DILocation(line: 831, column: 2, scope: !10932)
!10942 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !1114, file: !1114, line: 222, type: !10943, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10945)
!10943 = !DISubroutineType(types: !10944)
!10944 = !{!866, !866, !7046, !51}
!10945 = !{!10946, !10947, !10948}
!10946 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !10942, file: !1114, line: 222, type: !866)
!10947 = !DILocalVariable(name: "pxCode", arg: 2, scope: !10942, file: !1114, line: 222, type: !7046)
!10948 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !10942, file: !1114, line: 222, type: !51)
!10949 = !DILocation(line: 0, scope: !10942)
!10950 = !DILocation(line: 229, column: 14, scope: !10942)
!10951 = !DILocation(line: 231, column: 16, scope: !10942)
!10952 = !DILocation(line: 232, column: 14, scope: !10942)
!10953 = !DILocation(line: 233, column: 18, scope: !10942)
!10954 = !DILocation(line: 233, column: 16, scope: !10942)
!10955 = !DILocation(line: 234, column: 14, scope: !10942)
!10956 = !DILocation(line: 235, column: 16, scope: !10942)
!10957 = !DILocation(line: 238, column: 15, scope: !10942)
!10958 = !DILocation(line: 239, column: 18, scope: !10942)
!10959 = !DILocation(line: 239, column: 16, scope: !10942)
!10960 = !DILocation(line: 243, column: 14, scope: !10942)
!10961 = !DILocation(line: 244, column: 16, scope: !10942)
!10962 = !DILocation(line: 246, column: 15, scope: !10942)
!10963 = !DILocation(line: 248, column: 2, scope: !10942)
!10964 = distinct !DISubprogram(name: "prvTaskExitError", scope: !1114, file: !1114, line: 252, type: !154, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!10965 = !DILocation(line: 260, column: 2, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10964, file: !1114, line: 260, column: 2)
!10967 = !DILocation(line: 260, column: 2, scope: !10964)
!10968 = !DILocation(line: 260, column: 2, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10966, file: !1114, line: 260, column: 2)
!10970 = !DILocation(line: 215, column: 2, scope: !10971, inlinedAt: !10974)
!10971 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !863, file: !863, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10972)
!10972 = !{!10973}
!10973 = !DILocalVariable(name: "ulNewBASEPRI", scope: !10971, file: !863, line: 213, type: !61)
!10974 = distinct !DILocation(line: 261, column: 2, scope: !10964)
!10975 = !{i64 666031, i64 666064, i64 666100, i64 666127}
!10976 = !DILocation(line: 0, scope: !10971, inlinedAt: !10974)
!10977 = !DILocation(line: 262, column: 2, scope: !10964)
!10978 = !DILocation(line: 262, column: 2, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !1114, line: 262, column: 2)
!10980 = distinct !DILexicalBlock(scope: !10964, file: !1114, line: 262, column: 2)
!10981 = distinct !{!10981, !10982, !10983}
!10982 = !DILocation(line: 262, column: 2, scope: !10980)
!10983 = !DILocation(line: 262, column: 11, scope: !10980)
!10984 = distinct !DISubprogram(name: "vPortCurrentTaskStackOverflowCheck", scope: !1114, file: !1114, line: 268, type: !154, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10985)
!10985 = !{!10986, !10987}
!10986 = !DILocalVariable(name: "stack_start_address", scope: !10984, file: !1114, line: 270, type: !61)
!10987 = !DILocalVariable(name: "ret", scope: !10984, file: !1114, line: 271, type: !527)
!10988 = !DILocation(line: 273, column: 24, scope: !10984)
!10989 = !DILocation(line: 0, scope: !10984)
!10990 = !DILocation(line: 276, column: 8, scope: !10984)
!10991 = !DILocation(line: 281, column: 1, scope: !10984)
!10992 = distinct !DISubprogram(name: "SVC_Handler", scope: !1114, file: !1114, line: 287, type: !154, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!10993 = !DILocation(line: 289, column: 2, scope: !10992)
!10994 = !{i64 11674, i64 11700, i64 11789, i64 11939, i64 11982, i64 12128, i64 12194, i64 12283, i64 12374, i64 12519, i64 12585, i64 12607, i64 12635, i64 12666, i64 12690, i64 12709, i64 12734}
!10995 = !DILocation(line: 312, column: 1, scope: !10992)
!10996 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !1114, file: !1114, line: 335, type: !7446, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !10997)
!10997 = !{!10998, !11000, !11002}
!10998 = !DILocalVariable(name: "ulOriginalPriority", scope: !10999, file: !1114, line: 343, type: !60)
!10999 = distinct !DILexicalBlock(scope: !10996, file: !1114, line: 342, column: 2)
!11000 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !10999, file: !1114, line: 344, type: !11001)
!11001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!11002 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !10999, file: !1114, line: 345, type: !53)
!11003 = !DILocation(line: 343, column: 3, scope: !10999)
!11004 = !DILocation(line: 343, column: 21, scope: !10999)
!11005 = !DILocation(line: 0, scope: !10999)
!11006 = !DILocation(line: 345, column: 3, scope: !10999)
!11007 = !DILocation(line: 345, column: 20, scope: !10999)
!11008 = !DILocation(line: 353, column: 24, scope: !10999)
!11009 = !DILocation(line: 353, column: 22, scope: !10999)
!11010 = !DILocation(line: 357, column: 33, scope: !10999)
!11011 = !DILocation(line: 360, column: 24, scope: !10999)
!11012 = !DILocation(line: 360, column: 22, scope: !10999)
!11013 = !DILocation(line: 363, column: 65, scope: !10999)
!11014 = !DILocation(line: 363, column: 63, scope: !10999)
!11015 = !DILocation(line: 363, column: 24, scope: !10999)
!11016 = !DILocation(line: 368, column: 12, scope: !10999)
!11017 = !DILocation(line: 368, column: 55, scope: !10999)
!11018 = !DILocation(line: 368, column: 3, scope: !10999)
!11019 = !DILocation(line: 370, column: 22, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !10999, file: !1114, line: 369, column: 3)
!11021 = !DILocation(line: 371, column: 23, scope: !11020)
!11022 = distinct !{!11022, !11018, !11023}
!11023 = !DILocation(line: 372, column: 3, scope: !10999)
!11024 = !DILocation(line: 376, column: 22, scope: !10999)
!11025 = !DILocation(line: 377, column: 22, scope: !10999)
!11026 = !DILocation(line: 381, column: 35, scope: !10999)
!11027 = !DILocation(line: 381, column: 33, scope: !10999)
!11028 = !DILocation(line: 382, column: 2, scope: !10996)
!11029 = !DILocation(line: 386, column: 23, scope: !10996)
!11030 = !DILocation(line: 388, column: 23, scope: !10996)
!11031 = !DILocation(line: 392, column: 2, scope: !10996)
!11032 = !DILocation(line: 395, column: 20, scope: !10996)
!11033 = !DILocation(line: 398, column: 2, scope: !10996)
!11034 = !DILocation(line: 401, column: 17, scope: !10996)
!11035 = !DILocation(line: 404, column: 2, scope: !10996)
!11036 = !DILocation(line: 410, column: 2, scope: !10996)
!11037 = !DILocation(line: 413, column: 2, scope: !10996)
!11038 = distinct !DISubprogram(name: "vPortEnableVFP", scope: !1114, file: !1114, line: 741, type: !154, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!11039 = !DILocation(line: 743, column: 2, scope: !11038)
!11040 = !{i64 28402, i64 28478, i64 28502, i64 28517, i64 28609, i64 28633}
!11041 = !DILocation(line: 752, column: 1, scope: !11038)
!11042 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !1114, file: !1114, line: 315, type: !154, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!11043 = !DILocation(line: 317, column: 2, scope: !11042)
!11044 = !{i64 12920, i64 13009, i64 13036, i64 13063, i64 13138, i64 13194, i64 13216, i64 13235, i64 13254, i64 13314}
!11045 = !DILocation(line: 329, column: 1, scope: !11042)
!11046 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !1114, file: !1114, line: 417, type: !154, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!11047 = !DILocation(line: 421, column: 2, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11046, file: !1114, line: 421, column: 2)
!11049 = !DILocation(line: 421, column: 2, scope: !11046)
!11050 = !DILocation(line: 421, column: 2, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11048, file: !1114, line: 421, column: 2)
!11052 = !DILocation(line: 422, column: 1, scope: !11046)
!11053 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !1114, file: !1114, line: 425, type: !154, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!11054 = !DILocation(line: 215, column: 2, scope: !10971, inlinedAt: !11055)
!11055 = distinct !DILocation(line: 427, column: 2, scope: !11053)
!11056 = !DILocation(line: 0, scope: !10971, inlinedAt: !11055)
!11057 = !DILocation(line: 428, column: 19, scope: !11053)
!11058 = !DILocation(line: 435, column: 24, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11053, file: !1114, line: 435, column: 6)
!11060 = !DILocation(line: 435, column: 6, scope: !11053)
!11061 = !DILocation(line: 437, column: 3, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !1114, line: 437, column: 3)
!11063 = distinct !DILexicalBlock(scope: !11059, file: !1114, line: 436, column: 2)
!11064 = !DILocation(line: 437, column: 3, scope: !11063)
!11065 = !DILocation(line: 437, column: 3, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11062, file: !1114, line: 437, column: 3)
!11067 = !DILocation(line: 439, column: 1, scope: !11053)
!11068 = distinct !DISubprogram(name: "vPortExitCritical", scope: !1114, file: !1114, line: 442, type: !154, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!11069 = !DILocation(line: 444, column: 2, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11068, file: !1114, line: 444, column: 2)
!11071 = !DILocation(line: 444, column: 2, scope: !11068)
!11072 = !DILocation(line: 444, column: 2, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11070, file: !1114, line: 444, column: 2)
!11074 = !DILocation(line: 445, column: 19, scope: !11068)
!11075 = !DILocation(line: 446, column: 24, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11068, file: !1114, line: 446, column: 6)
!11077 = !DILocation(line: 446, column: 6, scope: !11068)
!11078 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !11079, file: !863, line: 247, type: !61)
!11079 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2604, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11080)
!11080 = !{!11078}
!11081 = !DILocation(line: 0, scope: !11079, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 448, column: 3, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11076, file: !1114, line: 447, column: 2)
!11084 = !DILocation(line: 249, column: 2, scope: !11079, inlinedAt: !11082)
!11085 = !{i64 666952}
!11086 = !DILocation(line: 449, column: 2, scope: !11083)
!11087 = !DILocation(line: 450, column: 1, scope: !11068)
!11088 = distinct !DISubprogram(name: "PendSV_Handler", scope: !1114, file: !1114, line: 469, type: !154, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !2004)
!11089 = !DILocation(line: 473, column: 2, scope: !11088)
!11090 = !{i64 18243, i64 18266, i64 18289, i64 18376, i64 18399, i64 18421, i64 18446, i64 18465, i64 18481, i64 18559, i64 18584, i64 18600, i64 18701, i64 18721, i64 18755, i64 18771, i64 18836, i64 18852, i64 18943, i64 18959, i64 18987, i64 19012, i64 19040, i64 19059, i64 19080, i64 19258, i64 19436, i64 19460, i64 19488, i64 19516, i64 19532, i64 19620, i64 19645, i64 19661, i64 19725, i64 19741, i64 19849, i64 19869, i64 19903, i64 19919, i64 19944, i64 19963, i64 20148, i64 20164, i64 20185, i64 20201, i64 20223}
!11091 = !DILocation(line: 537, column: 1, scope: !11088)
!11092 = distinct !DISubprogram(name: "SysTick_Handler", scope: !1114, file: !1114, line: 540, type: !154, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11093)
!11093 = !{!11094}
!11094 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !11092, file: !1114, line: 547, type: !862)
!11095 = !DILocation(line: 231, column: 2, scope: !11096, inlinedAt: !11100)
!11096 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !1985, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11097)
!11097 = !{!11098, !11099}
!11098 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !11096, file: !863, line: 229, type: !61)
!11099 = !DILocalVariable(name: "ulNewBASEPRI", scope: !11096, file: !863, line: 229, type: !61)
!11100 = distinct !DILocation(line: 548, column: 27, scope: !11092)
!11101 = !{i64 666419, i64 666456, i64 666488, i64 666524, i64 666551}
!11102 = !DILocation(line: 0, scope: !11096, inlinedAt: !11100)
!11103 = !DILocation(line: 0, scope: !11092)
!11104 = !DILocation(line: 552, column: 3, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11092, file: !1114, line: 549, column: 2)
!11106 = !DILocation(line: 555, column: 7, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11105, file: !1114, line: 555, column: 7)
!11108 = !DILocation(line: 555, column: 28, scope: !11107)
!11109 = !DILocation(line: 555, column: 7, scope: !11105)
!11110 = !DILocation(line: 559, column: 26, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11107, file: !1114, line: 556, column: 3)
!11112 = !DILocation(line: 560, column: 3, scope: !11111)
!11113 = !DILocation(line: 0, scope: !11079, inlinedAt: !11114)
!11114 = distinct !DILocation(line: 562, column: 2, scope: !11092)
!11115 = !DILocation(line: 249, column: 2, scope: !11079, inlinedAt: !11114)
!11116 = !DILocation(line: 564, column: 1, scope: !11092)
!11117 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !1114, file: !1114, line: 757, type: !154, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11118)
!11118 = !{!11119, !11120}
!11119 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !11117, file: !1114, line: 759, type: !61)
!11120 = !DILocalVariable(name: "ucCurrentPriority", scope: !11117, file: !1114, line: 760, type: !54)
!11121 = !DILocation(line: 763, column: 3, scope: !11117)
!11122 = !{i64 28942}
!11123 = !DILocation(line: 0, scope: !11117)
!11124 = !DILocation(line: 766, column: 26, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11117, file: !1114, line: 766, column: 7)
!11126 = !DILocation(line: 766, column: 7, scope: !11117)
!11127 = !DILocation(line: 769, column: 24, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11125, file: !1114, line: 767, column: 3)
!11129 = !DILocation(line: 794, column: 4, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11128, file: !1114, line: 794, column: 4)
!11131 = !DILocation(line: 794, column: 4, scope: !11128)
!11132 = !DILocation(line: 794, column: 4, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11130, file: !1114, line: 794, column: 4)
!11134 = !DILocation(line: 810, column: 3, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11117, file: !1114, line: 810, column: 3)
!11136 = !DILocation(line: 810, column: 3, scope: !11117)
!11137 = !DILocation(line: 810, column: 3, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11135, file: !1114, line: 810, column: 3)
!11139 = !DILocation(line: 811, column: 2, scope: !11117)
!11140 = distinct !DISubprogram(name: "pvPortMalloc", scope: !1137, file: !1137, line: 162, type: !11141, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11143)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!51, !919}
!11143 = !{!11144, !11145, !11146, !11147, !11148}
!11144 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !11140, file: !1137, line: 162, type: !919)
!11145 = !DILocalVariable(name: "pxBlock", scope: !11140, file: !1137, line: 164, type: !1139)
!11146 = !DILocalVariable(name: "pxPreviousBlock", scope: !11140, file: !1137, line: 164, type: !1139)
!11147 = !DILocalVariable(name: "pxNewBlockLink", scope: !11140, file: !1137, line: 164, type: !1139)
!11148 = !DILocalVariable(name: "pvReturn", scope: !11140, file: !1137, line: 165, type: !51)
!11149 = !DILocation(line: 0, scope: !11140)
!11150 = !DILocation(line: 178, column: 2, scope: !11140)
!11151 = !DILocation(line: 182, column: 7, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !1137, line: 182, column: 7)
!11153 = distinct !DILexicalBlock(scope: !11140, file: !1137, line: 179, column: 2)
!11154 = !DILocation(line: 182, column: 13, scope: !11152)
!11155 = !DILocation(line: 182, column: 7, scope: !11153)
!11156 = !DILocation(line: 184, column: 4, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11152, file: !1137, line: 183, column: 3)
!11158 = !DILocation(line: 185, column: 3, scope: !11157)
!11159 = !DILocation(line: 195, column: 23, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11153, file: !1137, line: 195, column: 7)
!11161 = !DILocation(line: 195, column: 21, scope: !11160)
!11162 = !DILocation(line: 195, column: 44, scope: !11160)
!11163 = !DILocation(line: 195, column: 7, scope: !11153)
!11164 = !DILocation(line: 201, column: 17, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !1137, line: 200, column: 4)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !1137, line: 199, column: 8)
!11167 = distinct !DILexicalBlock(scope: !11160, file: !1137, line: 196, column: 3)
!11168 = !DILocation(line: 205, column: 23, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11165, file: !1137, line: 205, column: 9)
!11170 = !DILocation(line: 205, column: 51, scope: !11169)
!11171 = !DILocation(line: 205, column: 9, scope: !11165)
!11172 = !DILocation(line: 221, column: 22, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11167, file: !1137, line: 221, column: 8)
!11174 = !DILocation(line: 221, column: 28, scope: !11173)
!11175 = !DILocation(line: 226, column: 22, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11173, file: !1137, line: 222, column: 4)
!11177 = !DILocation(line: 227, column: 23, scope: !11176)
!11178 = !DILocation(line: 227, column: 34, scope: !11176)
!11179 = !DILocation(line: 227, column: 50, scope: !11176)
!11180 = !DILocation(line: 227, column: 64, scope: !11176)
!11181 = !DILocation(line: 227, column: 80, scope: !11176)
!11182 = !DILocation(line: 227, column: 5, scope: !11176)
!11183 = distinct !{!11183, !11182, !11184}
!11184 = !DILocation(line: 231, column: 5, scope: !11176)
!11185 = !DILocation(line: 0, scope: !11176)
!11186 = !DILocation(line: 235, column: 20, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11176, file: !1137, line: 235, column: 9)
!11188 = !DILocation(line: 235, column: 17, scope: !11187)
!11189 = !DILocation(line: 235, column: 9, scope: !11176)
!11190 = !DILocation(line: 239, column: 63, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11187, file: !1137, line: 236, column: 5)
!11192 = !DILocation(line: 239, column: 81, scope: !11191)
!11193 = !DILocation(line: 246, column: 50, scope: !11191)
!11194 = !DILocation(line: 246, column: 39, scope: !11191)
!11195 = !DILocation(line: 250, column: 21, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11191, file: !1137, line: 250, column: 10)
!11197 = !DILocation(line: 250, column: 32, scope: !11196)
!11198 = !DILocation(line: 250, column: 48, scope: !11196)
!11199 = !DILocation(line: 250, column: 10, scope: !11191)
!11200 = !DILocation(line: 256, column: 39, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11196, file: !1137, line: 251, column: 6)
!11202 = !DILocation(line: 256, column: 63, scope: !11201)
!11203 = !DILocation(line: 256, column: 24, scope: !11201)
!11204 = !DILocation(line: 257, column: 7, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11201, file: !1137, line: 257, column: 7)
!11206 = !DILocation(line: 257, column: 7, scope: !11201)
!11207 = !DILocation(line: 257, column: 7, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11205, file: !1137, line: 257, column: 7)
!11209 = !DILocation(line: 261, column: 45, scope: !11201)
!11210 = !DILocation(line: 261, column: 56, scope: !11201)
!11211 = !DILocation(line: 261, column: 23, scope: !11201)
!11212 = !DILocation(line: 261, column: 34, scope: !11201)
!11213 = !DILocation(line: 262, column: 27, scope: !11201)
!11214 = !DILocation(line: 265, column: 7, scope: !11201)
!11215 = !DILocation(line: 272, column: 38, scope: !11191)
!11216 = !DILocation(line: 266, column: 6, scope: !11201)
!11217 = !DILocation(line: 272, column: 26, scope: !11191)
!11218 = !DILocation(line: 274, column: 32, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11191, file: !1137, line: 274, column: 10)
!11220 = !DILocation(line: 274, column: 30, scope: !11219)
!11221 = !DILocation(line: 274, column: 10, scope: !11191)
!11222 = !DILocation(line: 276, column: 38, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11219, file: !1137, line: 275, column: 6)
!11224 = !DILocation(line: 277, column: 6, scope: !11223)
!11225 = !DILocation(line: 285, column: 29, scope: !11191)
!11226 = !DILocation(line: 285, column: 26, scope: !11191)
!11227 = !DILocation(line: 286, column: 31, scope: !11191)
!11228 = !DILocation(line: 287, column: 5, scope: !11191)
!11229 = !DILocation(line: 305, column: 11, scope: !11140)
!11230 = !DILocation(line: 321, column: 2, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11140, file: !1137, line: 321, column: 2)
!11232 = !DILocation(line: 321, column: 2, scope: !11140)
!11233 = !DILocation(line: 321, column: 2, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11231, file: !1137, line: 321, column: 2)
!11235 = !DILocation(line: 322, column: 2, scope: !11140)
!11236 = distinct !DISubprogram(name: "prvHeapInit", scope: !1137, file: !1137, line: 392, type: !154, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11237)
!11237 = !{!11238, !11239, !11240, !11241}
!11238 = !DILocalVariable(name: "pxFirstFreeBlock", scope: !11236, file: !1137, line: 394, type: !1139)
!11239 = !DILocalVariable(name: "pucAlignedHeap", scope: !11236, file: !1137, line: 395, type: !210)
!11240 = !DILocalVariable(name: "ulAddress", scope: !11236, file: !1137, line: 396, type: !61)
!11241 = !DILocalVariable(name: "xTotalHeapSize", scope: !11236, file: !1137, line: 397, type: !919)
!11242 = !DILocation(line: 0, scope: !11236)
!11243 = !DILocation(line: 412, column: 25, scope: !11236)
!11244 = !DILocation(line: 413, column: 20, scope: !11236)
!11245 = !DILocation(line: 420, column: 8, scope: !11236)
!11246 = !DILocation(line: 421, column: 20, scope: !11236)
!11247 = !DILocation(line: 422, column: 25, scope: !11236)
!11248 = !DILocation(line: 427, column: 31, scope: !11236)
!11249 = !DILocation(line: 428, column: 38, scope: !11236)
!11250 = !DILocation(line: 428, column: 36, scope: !11236)
!11251 = !DILocation(line: 434, column: 33, scope: !11236)
!11252 = !DILocation(line: 435, column: 22, scope: !11236)
!11253 = !DILocation(line: 438, column: 21, scope: !11236)
!11254 = !DILocation(line: 439, column: 1, scope: !11236)
!11255 = distinct !DISubprogram(name: "prvInsertBlockIntoFreeList", scope: !1137, file: !1137, line: 442, type: !11256, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11258)
!11256 = !DISubroutineType(types: !11257)
!11257 = !{null, !1139}
!11258 = !{!11259, !11260, !11261}
!11259 = !DILocalVariable(name: "pxBlockToInsert", arg: 1, scope: !11255, file: !1137, line: 442, type: !1139)
!11260 = !DILocalVariable(name: "pxIterator", scope: !11255, file: !1137, line: 444, type: !1139)
!11261 = !DILocalVariable(name: "puc", scope: !11255, file: !1137, line: 445, type: !210)
!11262 = !DILocation(line: 0, scope: !11255)
!11263 = !DILocation(line: 449, column: 7, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11255, file: !1137, line: 449, column: 2)
!11265 = !DILocation(line: 0, scope: !11264)
!11266 = !DILocation(line: 449, column: 41, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11264, file: !1137, line: 449, column: 2)
!11268 = !DILocation(line: 449, column: 57, scope: !11267)
!11269 = !DILocation(line: 449, column: 2, scope: !11264)
!11270 = distinct !{!11270, !11269, !11271}
!11271 = !DILocation(line: 452, column: 2, scope: !11264)
!11272 = !DILocation(line: 456, column: 8, scope: !11255)
!11273 = !DILocation(line: 457, column: 26, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11255, file: !1137, line: 457, column: 6)
!11275 = !DILocation(line: 457, column: 12, scope: !11274)
!11276 = !DILocation(line: 457, column: 42, scope: !11274)
!11277 = !DILocation(line: 457, column: 39, scope: !11274)
!11278 = !DILocation(line: 457, column: 6, scope: !11255)
!11279 = !DILocation(line: 459, column: 26, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11274, file: !1137, line: 458, column: 2)
!11281 = !DILocation(line: 461, column: 2, scope: !11280)
!11282 = !DILocation(line: 469, column: 8, scope: !11255)
!11283 = !DILocation(line: 470, column: 31, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11255, file: !1137, line: 470, column: 6)
!11285 = !DILocation(line: 470, column: 12, scope: !11284)
!11286 = !DILocation(line: 470, column: 47, scope: !11284)
!11287 = !DILocation(line: 470, column: 44, scope: !11284)
!11288 = !DILocation(line: 470, column: 6, scope: !11255)
!11289 = !DILocation(line: 475, column: 64, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !1137, line: 473, column: 3)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !1137, line: 472, column: 7)
!11292 = distinct !DILexicalBlock(scope: !11284, file: !1137, line: 471, column: 2)
!11293 = !DILocation(line: 475, column: 32, scope: !11290)
!11294 = !DILocation(line: 476, column: 51, scope: !11290)
!11295 = !DILocation(line: 476, column: 68, scope: !11290)
!11296 = !DILocation(line: 477, column: 3, scope: !11290)
!11297 = !DILocation(line: 0, scope: !11284)
!11298 = !DILocation(line: 492, column: 17, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11255, file: !1137, line: 492, column: 6)
!11300 = !DILocation(line: 492, column: 6, scope: !11255)
!11301 = !DILocation(line: 494, column: 31, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11299, file: !1137, line: 493, column: 2)
!11303 = !DILocation(line: 495, column: 2, scope: !11302)
!11304 = !DILocation(line: 500, column: 1, scope: !11255)
!11305 = distinct !DISubprogram(name: "vPortFree", scope: !1137, file: !1137, line: 326, type: !640, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11306)
!11306 = !{!11307, !11308, !11309}
!11307 = !DILocalVariable(name: "pv", arg: 1, scope: !11305, file: !1137, line: 326, type: !51)
!11308 = !DILocalVariable(name: "puc", scope: !11305, file: !1137, line: 328, type: !210)
!11309 = !DILocalVariable(name: "pxLink", scope: !11305, file: !1137, line: 329, type: !1139)
!11310 = !DILocation(line: 0, scope: !11305)
!11311 = !DILocation(line: 331, column: 9, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11305, file: !1137, line: 331, column: 6)
!11313 = !DILocation(line: 331, column: 6, scope: !11305)
!11314 = !DILocation(line: 335, column: 7, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11312, file: !1137, line: 332, column: 2)
!11316 = !DILocation(line: 338, column: 12, scope: !11315)
!11317 = !DILocation(line: 341, column: 3, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11315, file: !1137, line: 341, column: 3)
!11319 = !DILocation(line: 341, column: 3, scope: !11315)
!11320 = !DILocation(line: 341, column: 3, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11318, file: !1137, line: 341, column: 3)
!11322 = !DILocation(line: 342, column: 3, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11315, file: !1137, line: 342, column: 3)
!11324 = !DILocation(line: 342, column: 3, scope: !11315)
!11325 = !DILocation(line: 342, column: 3, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11323, file: !1137, line: 342, column: 3)
!11327 = !DILocation(line: 344, column: 17, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11315, file: !1137, line: 344, column: 7)
!11329 = !DILocation(line: 344, column: 30, scope: !11328)
!11330 = !DILocation(line: 344, column: 28, scope: !11328)
!11331 = !DILocation(line: 344, column: 51, scope: !11328)
!11332 = !DILocation(line: 344, column: 7, scope: !11315)
!11333 = !DILocation(line: 346, column: 16, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1137, line: 346, column: 8)
!11335 = distinct !DILexicalBlock(scope: !11328, file: !1137, line: 345, column: 3)
!11336 = !DILocation(line: 346, column: 32, scope: !11334)
!11337 = !DILocation(line: 346, column: 8, scope: !11335)
!11338 = !DILocation(line: 350, column: 27, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11334, file: !1137, line: 347, column: 4)
!11340 = !DILocation(line: 350, column: 24, scope: !11339)
!11341 = !DILocation(line: 352, column: 5, scope: !11339)
!11342 = !DILocation(line: 355, column: 37, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11339, file: !1137, line: 353, column: 5)
!11344 = !DILocation(line: 355, column: 26, scope: !11343)
!11345 = !DILocation(line: 357, column: 6, scope: !11343)
!11346 = !DILocation(line: 359, column: 14, scope: !11339)
!11347 = !DILocation(line: 360, column: 4, scope: !11339)
!11348 = !DILocation(line: 371, column: 1, scope: !11305)
!11349 = distinct !DISubprogram(name: "xPortGetFreeHeapSize", scope: !1137, file: !1137, line: 374, type: !11350, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !2004)
!11350 = !DISubroutineType(types: !11351)
!11351 = !{!919}
!11352 = !DILocation(line: 376, column: 9, scope: !11349)
!11353 = !DILocation(line: 376, column: 2, scope: !11349)
!11354 = distinct !DISubprogram(name: "xPortGetMinimumEverFreeHeapSize", scope: !1137, file: !1137, line: 380, type: !11350, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !2004)
!11355 = !DILocation(line: 382, column: 9, scope: !11354)
!11356 = !DILocation(line: 382, column: 2, scope: !11354)
!11357 = distinct !DISubprogram(name: "vPortInitialiseBlocks", scope: !1137, file: !1137, line: 386, type: !154, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !2004)
!11358 = !DILocation(line: 389, column: 1, scope: !11357)
!11359 = distinct !DISubprogram(name: "pvPortCalloc", scope: !1137, file: !1137, line: 505, type: !11360, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11362)
!11360 = !DISubroutineType(types: !11361)
!11361 = !{!51, !919, !919}
!11362 = !{!11363, !11364, !11365}
!11363 = !DILocalVariable(name: "nmemb", arg: 1, scope: !11359, file: !1137, line: 505, type: !919)
!11364 = !DILocalVariable(name: "size", arg: 2, scope: !11359, file: !1137, line: 505, type: !919)
!11365 = !DILocalVariable(name: "pvReturn", scope: !11359, file: !1137, line: 507, type: !51)
!11366 = !DILocation(line: 0, scope: !11359)
!11367 = !DILocation(line: 516, column: 35, scope: !11359)
!11368 = !DILocation(line: 516, column: 16, scope: !11359)
!11369 = !DILocation(line: 518, column: 9, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11359, file: !1137, line: 518, column: 9)
!11371 = !DILocation(line: 518, column: 9, scope: !11359)
!11372 = !DILocation(line: 520, column: 9, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11370, file: !1137, line: 519, column: 5)
!11374 = !DILocation(line: 521, column: 5, scope: !11373)
!11375 = !DILocation(line: 523, column: 5, scope: !11359)
!11376 = distinct !DISubprogram(name: "pvPortRealloc", scope: !1137, file: !1137, line: 528, type: !11377, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11379)
!11377 = !DISubroutineType(types: !11378)
!11378 = !{!51, !51, !919}
!11379 = !{!11380, !11381, !11382, !11383, !11384, !11385}
!11380 = !DILocalVariable(name: "pv", arg: 1, scope: !11376, file: !1137, line: 528, type: !51)
!11381 = !DILocalVariable(name: "size", arg: 2, scope: !11376, file: !1137, line: 528, type: !919)
!11382 = !DILocalVariable(name: "pvReturn", scope: !11376, file: !1137, line: 530, type: !51)
!11383 = !DILocalVariable(name: "xBlockSize", scope: !11376, file: !1137, line: 531, type: !919)
!11384 = !DILocalVariable(name: "puc", scope: !11376, file: !1137, line: 532, type: !210)
!11385 = !DILocalVariable(name: "pxLink", scope: !11376, file: !1137, line: 533, type: !1139)
!11386 = !DILocation(line: 0, scope: !11376)
!11387 = !DILocation(line: 535, column: 16, scope: !11376)
!11388 = !DILocation(line: 537, column: 12, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11376, file: !1137, line: 537, column: 9)
!11390 = !DILocation(line: 537, column: 9, scope: !11376)
!11391 = !DILocation(line: 540, column: 13, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11389, file: !1137, line: 538, column: 5)
!11393 = !DILocation(line: 546, column: 9, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11392, file: !1137, line: 546, column: 9)
!11395 = !DILocation(line: 546, column: 9, scope: !11392)
!11396 = !DILocation(line: 546, column: 9, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11394, file: !1137, line: 546, column: 9)
!11398 = !DILocation(line: 547, column: 9, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11392, file: !1137, line: 547, column: 9)
!11400 = !DILocation(line: 547, column: 9, scope: !11392)
!11401 = !DILocation(line: 547, column: 9, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11399, file: !1137, line: 547, column: 9)
!11403 = !DILocation(line: 550, column: 31, scope: !11392)
!11404 = !DILocation(line: 550, column: 45, scope: !11392)
!11405 = !DILocation(line: 550, column: 44, scope: !11392)
!11406 = !DILocation(line: 550, column: 42, scope: !11392)
!11407 = !DILocation(line: 553, column: 34, scope: !11392)
!11408 = !DILocation(line: 555, column: 23, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11392, file: !1137, line: 555, column: 12)
!11410 = !DILocation(line: 0, scope: !11409)
!11411 = !DILocation(line: 561, column: 9, scope: !11392)
!11412 = !DILocation(line: 562, column: 5, scope: !11392)
!11413 = !DILocation(line: 564, column: 5, scope: !11376)
!11414 = distinct !DISubprogram(name: "pvPortMallocNC", scope: !1137, file: !1137, line: 570, type: !11141, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11415)
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !11414, file: !1137, line: 570, type: !919)
!11417 = !DILocation(line: 0, scope: !11414)
!11418 = !DILocation(line: 649, column: 12, scope: !11414)
!11419 = !DILocation(line: 649, column: 5, scope: !11414)
!11420 = distinct !DISubprogram(name: "vPortFreeNC", scope: !1137, file: !1137, line: 652, type: !640, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11421)
!11421 = !{!11422}
!11422 = !DILocalVariable(name: "pv", arg: 1, scope: !11420, file: !1137, line: 652, type: !51)
!11423 = !DILocation(line: 0, scope: !11420)
!11424 = !DILocation(line: 680, column: 5, scope: !11420)
!11425 = !DILocation(line: 682, column: 1, scope: !11420)
!11426 = distinct !DISubprogram(name: "__wrap_malloc", scope: !1137, file: !1137, line: 686, type: !11141, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11427)
!11427 = !{!11428}
!11428 = !DILocalVariable(name: "size", arg: 1, scope: !11426, file: !1137, line: 686, type: !919)
!11429 = !DILocation(line: 0, scope: !11426)
!11430 = !DILocation(line: 688, column: 12, scope: !11426)
!11431 = !DILocation(line: 688, column: 5, scope: !11426)
!11432 = distinct !DISubprogram(name: "__wrap_calloc", scope: !1137, file: !1137, line: 690, type: !11360, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11433)
!11433 = !{!11434, !11435}
!11434 = !DILocalVariable(name: "nmemb", arg: 1, scope: !11432, file: !1137, line: 690, type: !919)
!11435 = !DILocalVariable(name: "size", arg: 2, scope: !11432, file: !1137, line: 690, type: !919)
!11436 = !DILocation(line: 0, scope: !11432)
!11437 = !DILocation(line: 692, column: 12, scope: !11432)
!11438 = !DILocation(line: 692, column: 5, scope: !11432)
!11439 = distinct !DISubprogram(name: "__wrap_realloc", scope: !1137, file: !1137, line: 694, type: !11377, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11440)
!11440 = !{!11441, !11442}
!11441 = !DILocalVariable(name: "pv", arg: 1, scope: !11439, file: !1137, line: 694, type: !51)
!11442 = !DILocalVariable(name: "size", arg: 2, scope: !11439, file: !1137, line: 694, type: !919)
!11443 = !DILocation(line: 0, scope: !11439)
!11444 = !DILocation(line: 696, column: 12, scope: !11439)
!11445 = !DILocation(line: 696, column: 5, scope: !11439)
!11446 = distinct !DISubprogram(name: "__wrap_free", scope: !1137, file: !1137, line: 698, type: !640, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11447)
!11447 = !{!11448}
!11448 = !DILocalVariable(name: "pv", arg: 1, scope: !11446, file: !1137, line: 698, type: !51)
!11449 = !DILocation(line: 0, scope: !11446)
!11450 = !DILocation(line: 700, column: 6, scope: !11446)
!11451 = !DILocation(line: 701, column: 1, scope: !11446)
!11452 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !1953, file: !1953, line: 769, type: !154, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !2004)
!11453 = !DILocation(line: 781, column: 22, scope: !11452)
!11454 = !DILocation(line: 781, column: 45, scope: !11452)
!11455 = !DILocation(line: 781, column: 67, scope: !11452)
!11456 = !DILocation(line: 781, column: 19, scope: !11452)
!11457 = !DILocation(line: 782, column: 19, scope: !11452)
!11458 = !DILocation(line: 783, column: 1, scope: !11452)
!11459 = distinct !DISubprogram(name: "cJSON_GetErrorPtr", scope: !1167, file: !1167, line: 64, type: !11460, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !2004)
!11460 = !DISubroutineType(types: !11461)
!11461 = !{!331}
!11462 = !DILocation(line: 64, column: 45, scope: !11459)
!11463 = !DILocation(line: 64, column: 38, scope: !11459)
!11464 = distinct !DISubprogram(name: "cJSON_malloc", scope: !1167, file: !1167, line: 81, type: !11141, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11465)
!11465 = !{!11466}
!11466 = !DILocalVariable(name: "sz", arg: 1, scope: !11464, file: !1167, line: 81, type: !919)
!11467 = !DILocation(line: 0, scope: !11464)
!11468 = !DILocation(line: 87, column: 12, scope: !11464)
!11469 = !DILocation(line: 87, column: 5, scope: !11464)
!11470 = distinct !DISubprogram(name: "cJSON_free", scope: !1167, file: !1167, line: 89, type: !640, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11471)
!11471 = !{!11472}
!11472 = !DILocalVariable(name: "ptr", arg: 1, scope: !11470, file: !1167, line: 89, type: !51)
!11473 = !DILocation(line: 0, scope: !11470)
!11474 = !DILocation(line: 92, column: 5, scope: !11470)
!11475 = !DILocation(line: 96, column: 1, scope: !11470)
!11476 = distinct !DISubprogram(name: "cJSON_Delete", scope: !1167, file: !1167, line: 132, type: !11477, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11479)
!11477 = !DISubroutineType(types: !11478)
!11478 = !{null, !1169}
!11479 = !{!11480, !11481}
!11480 = !DILocalVariable(name: "c", arg: 1, scope: !11476, file: !1167, line: 132, type: !1169)
!11481 = !DILocalVariable(name: "next", scope: !11476, file: !1167, line: 134, type: !1169)
!11482 = !DILocation(line: 0, scope: !11476)
!11483 = !DILocation(line: 135, column: 2, scope: !11476)
!11484 = !DILocation(line: 137, column: 11, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11476, file: !1167, line: 136, column: 2)
!11486 = !DILocation(line: 138, column: 12, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11485, file: !1167, line: 138, column: 7)
!11488 = !DILocation(line: 138, column: 16, scope: !11487)
!11489 = !DILocation(line: 138, column: 36, scope: !11487)
!11490 = !DILocation(line: 138, column: 42, scope: !11487)
!11491 = !DILocation(line: 138, column: 39, scope: !11487)
!11492 = !DILocation(line: 138, column: 7, scope: !11485)
!11493 = !DILocation(line: 138, column: 49, scope: !11487)
!11494 = !DILocation(line: 139, column: 12, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11485, file: !1167, line: 139, column: 7)
!11496 = !DILocation(line: 139, column: 16, scope: !11495)
!11497 = !DILocation(line: 139, column: 36, scope: !11495)
!11498 = !DILocation(line: 139, column: 42, scope: !11495)
!11499 = !DILocation(line: 139, column: 39, scope: !11495)
!11500 = !DILocation(line: 139, column: 7, scope: !11485)
!11501 = !DILocation(line: 139, column: 55, scope: !11495)
!11502 = !DILocation(line: 140, column: 10, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11485, file: !1167, line: 140, column: 7)
!11504 = !DILocation(line: 140, column: 7, scope: !11503)
!11505 = !DILocation(line: 140, column: 7, scope: !11485)
!11506 = !DILocation(line: 140, column: 18, scope: !11503)
!11507 = !DILocation(line: 141, column: 14, scope: !11485)
!11508 = !DILocation(line: 141, column: 3, scope: !11485)
!11509 = distinct !{!11509, !11483, !11510}
!11510 = !DILocation(line: 143, column: 2, scope: !11476)
!11511 = !DILocation(line: 144, column: 1, scope: !11476)
!11512 = distinct !DISubprogram(name: "cJSON_ParseWithOpts", scope: !1167, file: !1167, line: 319, type: !11513, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11516)
!11513 = !DISubroutineType(types: !11514)
!11514 = !{!1169, !331, !11515, !7}
!11515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!11516 = !{!11517, !11518, !11519, !11520, !11521}
!11517 = !DILocalVariable(name: "value", arg: 1, scope: !11512, file: !1167, line: 319, type: !331)
!11518 = !DILocalVariable(name: "return_parse_end", arg: 2, scope: !11512, file: !1167, line: 319, type: !11515)
!11519 = !DILocalVariable(name: "require_null_terminated", arg: 3, scope: !11512, file: !1167, line: 319, type: !7)
!11520 = !DILocalVariable(name: "end", scope: !11512, file: !1167, line: 321, type: !331)
!11521 = !DILocalVariable(name: "c", scope: !11512, file: !1167, line: 322, type: !1169)
!11522 = !DILocation(line: 0, scope: !11512)
!11523 = !DILocation(line: 322, column: 11, scope: !11512)
!11524 = !DILocation(line: 323, column: 4, scope: !11512)
!11525 = !DILocation(line: 324, column: 7, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11512, file: !1167, line: 324, column: 6)
!11527 = !DILocation(line: 324, column: 6, scope: !11512)
!11528 = !DILocation(line: 326, column: 20, scope: !11512)
!11529 = !DILocation(line: 326, column: 6, scope: !11512)
!11530 = !DILocation(line: 327, column: 7, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11512, file: !1167, line: 327, column: 6)
!11532 = !DILocation(line: 327, column: 6, scope: !11512)
!11533 = !DILocation(line: 327, column: 13, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11531, file: !1167, line: 327, column: 12)
!11535 = !DILocation(line: 327, column: 29, scope: !11534)
!11536 = !DILocation(line: 330, column: 6, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11512, file: !1167, line: 330, column: 6)
!11538 = !DILocation(line: 330, column: 6, scope: !11512)
!11539 = !DILocation(line: 330, column: 36, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11537, file: !1167, line: 330, column: 31)
!11541 = !DILocation(line: 330, column: 50, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11540, file: !1167, line: 330, column: 50)
!11543 = !DILocation(line: 330, column: 50, scope: !11540)
!11544 = !DILocation(line: 330, column: 57, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11542, file: !1167, line: 330, column: 56)
!11546 = !DILocation(line: 330, column: 75, scope: !11545)
!11547 = !DILocation(line: 330, column: 80, scope: !11545)
!11548 = !DILocation(line: 331, column: 6, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11512, file: !1167, line: 331, column: 6)
!11550 = !DILocation(line: 331, column: 6, scope: !11512)
!11551 = !DILocation(line: 331, column: 41, scope: !11549)
!11552 = !DILocation(line: 331, column: 24, scope: !11549)
!11553 = !DILocation(line: 333, column: 1, scope: !11512)
!11554 = distinct !DISubprogram(name: "cJSON_New_Item", scope: !1167, file: !1167, line: 124, type: !11555, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11557)
!11555 = !DISubroutineType(types: !11556)
!11556 = !{!1169}
!11557 = !{!11558}
!11558 = !DILocalVariable(name: "node", scope: !11554, file: !1167, line: 126, type: !1169)
!11559 = !DILocation(line: 126, column: 24, scope: !11554)
!11560 = !DILocation(line: 0, scope: !11554)
!11561 = !DILocation(line: 127, column: 6, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11554, file: !1167, line: 127, column: 6)
!11563 = !DILocation(line: 127, column: 6, scope: !11554)
!11564 = !DILocation(line: 127, column: 12, scope: !11562)
!11565 = !DILocation(line: 126, column: 16, scope: !11554)
!11566 = !DILocation(line: 128, column: 2, scope: !11554)
!11567 = distinct !DISubprogram(name: "skip", scope: !1167, file: !1167, line: 316, type: !11568, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11570)
!11568 = !DISubroutineType(types: !11569)
!11569 = !{!331, !331}
!11570 = !{!11571}
!11571 = !DILocalVariable(name: "in", arg: 1, scope: !11567, file: !1167, line: 316, type: !331)
!11572 = !DILocation(line: 0, scope: !11567)
!11573 = !DILocation(line: 316, column: 49, scope: !11567)
!11574 = !DILocation(line: 316, column: 52, scope: !11567)
!11575 = !DILocation(line: 316, column: 55, scope: !11567)
!11576 = !DILocation(line: 316, column: 59, scope: !11567)
!11577 = !DILocation(line: 316, column: 88, scope: !11567)
!11578 = distinct !{!11578, !11579, !11577}
!11579 = !DILocation(line: 316, column: 42, scope: !11567)
!11580 = !DILocation(line: 316, column: 92, scope: !11567)
!11581 = distinct !DISubprogram(name: "parse_value", scope: !1167, file: !1167, line: 342, type: !11582, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11584)
!11582 = !DISubroutineType(types: !11583)
!11583 = !{!331, !1169, !331}
!11584 = !{!11585, !11586}
!11585 = !DILocalVariable(name: "item", arg: 1, scope: !11581, file: !1167, line: 342, type: !1169)
!11586 = !DILocalVariable(name: "value", arg: 2, scope: !11581, file: !1167, line: 342, type: !331)
!11587 = !DILocation(line: 0, scope: !11581)
!11588 = !DILocation(line: 344, column: 7, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 344, column: 6)
!11590 = !DILocation(line: 344, column: 6, scope: !11581)
!11591 = !DILocation(line: 345, column: 7, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 345, column: 6)
!11593 = !DILocation(line: 345, column: 6, scope: !11581)
!11594 = !DILocation(line: 345, column: 40, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11592, file: !1167, line: 345, column: 32)
!11596 = !DILocation(line: 345, column: 44, scope: !11595)
!11597 = !DILocation(line: 345, column: 70, scope: !11595)
!11598 = !DILocation(line: 345, column: 58, scope: !11595)
!11599 = !DILocation(line: 346, column: 7, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 346, column: 6)
!11601 = !DILocation(line: 346, column: 6, scope: !11581)
!11602 = !DILocation(line: 346, column: 41, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11600, file: !1167, line: 346, column: 33)
!11604 = !DILocation(line: 346, column: 45, scope: !11603)
!11605 = !DILocation(line: 346, column: 71, scope: !11603)
!11606 = !DILocation(line: 346, column: 59, scope: !11603)
!11607 = !DILocation(line: 347, column: 7, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 347, column: 6)
!11609 = !DILocation(line: 347, column: 6, scope: !11581)
!11610 = !DILocation(line: 347, column: 40, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11608, file: !1167, line: 347, column: 32)
!11612 = !DILocation(line: 347, column: 44, scope: !11611)
!11613 = !DILocation(line: 347, column: 63, scope: !11611)
!11614 = !DILocation(line: 347, column: 71, scope: !11611)
!11615 = !DILocation(line: 347, column: 87, scope: !11611)
!11616 = !DILocation(line: 347, column: 75, scope: !11611)
!11617 = !DILocation(line: 348, column: 6, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 348, column: 6)
!11619 = !DILocation(line: 348, column: 6, scope: !11581)
!11620 = !DILocation(line: 348, column: 32, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11618, file: !1167, line: 348, column: 23)
!11622 = !DILocation(line: 348, column: 25, scope: !11621)
!11623 = !DILocation(line: 349, column: 34, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 349, column: 6)
!11625 = !DILocation(line: 349, column: 60, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11624, file: !1167, line: 349, column: 51)
!11627 = !DILocation(line: 349, column: 53, scope: !11626)
!11628 = !DILocation(line: 350, column: 6, scope: !11581)
!11629 = !DILocation(line: 350, column: 31, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11631, file: !1167, line: 350, column: 22)
!11631 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 350, column: 6)
!11632 = !DILocation(line: 350, column: 24, scope: !11630)
!11633 = !DILocation(line: 351, column: 31, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !1167, line: 351, column: 22)
!11635 = distinct !DILexicalBlock(scope: !11581, file: !1167, line: 351, column: 6)
!11636 = !DILocation(line: 351, column: 24, scope: !11634)
!11637 = !DILocation(line: 353, column: 4, scope: !11581)
!11638 = !DILocation(line: 353, column: 11, scope: !11581)
!11639 = !DILocation(line: 354, column: 1, scope: !11581)
!11640 = distinct !DISubprogram(name: "parse_string", scope: !1167, file: !1167, line: 210, type: !11582, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11641)
!11641 = !{!11642, !11643, !11644, !11645, !11646, !11647, !11648, !11649}
!11642 = !DILocalVariable(name: "item", arg: 1, scope: !11640, file: !1167, line: 210, type: !1169)
!11643 = !DILocalVariable(name: "str", arg: 2, scope: !11640, file: !1167, line: 210, type: !331)
!11644 = !DILocalVariable(name: "ptr", scope: !11640, file: !1167, line: 212, type: !331)
!11645 = !DILocalVariable(name: "ptr2", scope: !11640, file: !1167, line: 212, type: !201)
!11646 = !DILocalVariable(name: "out", scope: !11640, file: !1167, line: 212, type: !201)
!11647 = !DILocalVariable(name: "len", scope: !11640, file: !1167, line: 212, type: !7)
!11648 = !DILocalVariable(name: "uc", scope: !11640, file: !1167, line: 212, type: !30)
!11649 = !DILocalVariable(name: "uc2", scope: !11640, file: !1167, line: 212, type: !30)
!11650 = !DILocation(line: 0, scope: !11640)
!11651 = !DILocation(line: 212, column: 21, scope: !11640)
!11652 = !DILocation(line: 213, column: 6, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11640, file: !1167, line: 213, column: 6)
!11654 = !DILocation(line: 213, column: 10, scope: !11653)
!11655 = !DILocation(line: 213, column: 6, scope: !11640)
!11656 = !DILocation(line: 213, column: 21, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11653, file: !1167, line: 213, column: 18)
!11658 = !DILocation(line: 213, column: 26, scope: !11657)
!11659 = !DILocation(line: 215, column: 9, scope: !11640)
!11660 = !DILocation(line: 215, column: 20, scope: !11640)
!11661 = !DILocation(line: 215, column: 49, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11640, file: !1167, line: 215, column: 42)
!11663 = !DILocation(line: 215, column: 42, scope: !11640)
!11664 = !DILocation(line: 215, column: 2, scope: !11640)
!11665 = distinct !{!11665, !11664, !11666}
!11666 = !DILocation(line: 215, column: 61, scope: !11640)
!11667 = !DILocation(line: 217, column: 13, scope: !11640)
!11668 = !DILocation(line: 218, column: 7, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11640, file: !1167, line: 218, column: 6)
!11670 = !DILocation(line: 218, column: 6, scope: !11640)
!11671 = !DILocation(line: 221, column: 9, scope: !11640)
!11672 = !DILocation(line: 221, column: 20, scope: !11640)
!11673 = !DILocation(line: 223, column: 24, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !1167, line: 223, column: 7)
!11675 = distinct !DILexicalBlock(scope: !11640, file: !1167, line: 222, column: 2)
!11676 = !DILocation(line: 223, column: 26, scope: !11674)
!11677 = !DILocation(line: 223, column: 19, scope: !11674)
!11678 = !DILocation(line: 226, column: 7, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11674, file: !1167, line: 225, column: 3)
!11680 = !DILocation(line: 227, column: 12, scope: !11679)
!11681 = !DILocation(line: 227, column: 4, scope: !11679)
!11682 = !DILocation(line: 229, column: 20, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11679, file: !1167, line: 228, column: 4)
!11684 = !DILocation(line: 229, column: 22, scope: !11683)
!11685 = !DILocation(line: 229, column: 29, scope: !11683)
!11686 = !DILocation(line: 230, column: 20, scope: !11683)
!11687 = !DILocation(line: 230, column: 22, scope: !11683)
!11688 = !DILocation(line: 230, column: 29, scope: !11683)
!11689 = !DILocation(line: 231, column: 20, scope: !11683)
!11690 = !DILocation(line: 231, column: 22, scope: !11683)
!11691 = !DILocation(line: 231, column: 29, scope: !11683)
!11692 = !DILocation(line: 232, column: 20, scope: !11683)
!11693 = !DILocation(line: 232, column: 22, scope: !11683)
!11694 = !DILocation(line: 232, column: 29, scope: !11683)
!11695 = !DILocation(line: 233, column: 20, scope: !11683)
!11696 = !DILocation(line: 233, column: 22, scope: !11683)
!11697 = !DILocation(line: 233, column: 29, scope: !11683)
!11698 = !DILocation(line: 235, column: 23, scope: !11683)
!11699 = !DILocation(line: 235, column: 9, scope: !11683)
!11700 = !DILocation(line: 235, column: 30, scope: !11683)
!11701 = !DILocation(line: 237, column: 22, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11683, file: !1167, line: 237, column: 10)
!11703 = !DILocation(line: 239, column: 21, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11683, file: !1167, line: 239, column: 10)
!11705 = !DILocation(line: 241, column: 11, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !1167, line: 241, column: 11)
!11707 = distinct !DILexicalBlock(scope: !11704, file: !1167, line: 240, column: 6)
!11708 = !DILocation(line: 241, column: 17, scope: !11706)
!11709 = !DILocation(line: 241, column: 24, scope: !11706)
!11710 = !DILocation(line: 241, column: 27, scope: !11706)
!11711 = !DILocation(line: 241, column: 33, scope: !11706)
!11712 = !DILocation(line: 241, column: 11, scope: !11707)
!11713 = !DILocation(line: 242, column: 25, scope: !11707)
!11714 = !DILocation(line: 242, column: 11, scope: !11707)
!11715 = !DILocation(line: 242, column: 32, scope: !11707)
!11716 = !DILocation(line: 243, column: 22, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11707, file: !1167, line: 243, column: 11)
!11718 = !DILocation(line: 244, column: 32, scope: !11707)
!11719 = !DILocation(line: 244, column: 44, scope: !11707)
!11720 = !DILocation(line: 244, column: 38, scope: !11707)
!11721 = !DILocation(line: 244, column: 18, scope: !11707)
!11722 = !DILocation(line: 247, column: 65, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !1167, line: 247, column: 40)
!11724 = distinct !DILexicalBlock(scope: !11683, file: !1167, line: 247, column: 16)
!11725 = !DILocation(line: 247, column: 18, scope: !11724)
!11726 = !DILocation(line: 247, column: 16, scope: !11683)
!11727 = !DILocation(line: 247, column: 42, scope: !11723)
!11728 = !DILocation(line: 247, column: 40, scope: !11724)
!11729 = !DILocation(line: 247, column: 67, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11723, file: !1167, line: 247, column: 65)
!11731 = !DILocation(line: 250, column: 24, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11683, file: !1167, line: 249, column: 19)
!11733 = !DILocation(line: 250, column: 16, scope: !11732)
!11734 = !DILocation(line: 250, column: 23, scope: !11732)
!11735 = !DILocation(line: 250, column: 49, scope: !11732)
!11736 = !DILocation(line: 250, column: 46, scope: !11732)
!11737 = !DILocation(line: 0, scope: !11683)
!11738 = !DILocation(line: 251, column: 24, scope: !11732)
!11739 = !DILocation(line: 251, column: 16, scope: !11732)
!11740 = !DILocation(line: 251, column: 23, scope: !11732)
!11741 = !DILocation(line: 251, column: 49, scope: !11732)
!11742 = !DILocation(line: 251, column: 46, scope: !11732)
!11743 = !DILocation(line: 252, column: 24, scope: !11732)
!11744 = !DILocation(line: 252, column: 16, scope: !11732)
!11745 = !DILocation(line: 252, column: 23, scope: !11732)
!11746 = !DILocation(line: 252, column: 49, scope: !11732)
!11747 = !DILocation(line: 252, column: 46, scope: !11732)
!11748 = !DILocation(line: 253, column: 30, scope: !11732)
!11749 = !DILocation(line: 253, column: 24, scope: !11732)
!11750 = !DILocation(line: 253, column: 23, scope: !11732)
!11751 = !DILocation(line: 255, column: 10, scope: !11683)
!11752 = !DILocation(line: 256, column: 6, scope: !11683)
!11753 = !DILocation(line: 257, column: 20, scope: !11683)
!11754 = !DILocation(line: 257, column: 22, scope: !11683)
!11755 = !DILocation(line: 257, column: 29, scope: !11683)
!11756 = !DILocation(line: 0, scope: !11674)
!11757 = !DILocation(line: 221, column: 2, scope: !11640)
!11758 = distinct !{!11758, !11757, !11759}
!11759 = !DILocation(line: 261, column: 2, scope: !11640)
!11760 = !DILocation(line: 262, column: 7, scope: !11640)
!11761 = !DILocation(line: 263, column: 6, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11640, file: !1167, line: 263, column: 6)
!11763 = !DILocation(line: 263, column: 10, scope: !11762)
!11764 = !DILocation(line: 263, column: 6, scope: !11640)
!11765 = !DILocation(line: 264, column: 8, scope: !11640)
!11766 = !DILocation(line: 264, column: 19, scope: !11640)
!11767 = !DILocation(line: 265, column: 8, scope: !11640)
!11768 = !DILocation(line: 265, column: 12, scope: !11640)
!11769 = !DILocation(line: 266, column: 2, scope: !11640)
!11770 = !DILocation(line: 267, column: 1, scope: !11640)
!11771 = distinct !DISubprogram(name: "parse_number", scope: !1167, file: !1167, line: 147, type: !11582, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11772)
!11772 = !{!11773, !11774, !11775, !11776, !11777, !11778, !11779}
!11773 = !DILocalVariable(name: "item", arg: 1, scope: !11771, file: !1167, line: 147, type: !1169)
!11774 = !DILocalVariable(name: "num", arg: 2, scope: !11771, file: !1167, line: 147, type: !331)
!11775 = !DILocalVariable(name: "n", scope: !11771, file: !1167, line: 149, type: !1182)
!11776 = !DILocalVariable(name: "sign", scope: !11771, file: !1167, line: 149, type: !1182)
!11777 = !DILocalVariable(name: "scale", scope: !11771, file: !1167, line: 149, type: !1182)
!11778 = !DILocalVariable(name: "subscale", scope: !11771, file: !1167, line: 149, type: !7)
!11779 = !DILocalVariable(name: "signsubscale", scope: !11771, file: !1167, line: 149, type: !7)
!11780 = !DILocation(line: 0, scope: !11771)
!11781 = !DILocation(line: 151, column: 6, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11771, file: !1167, line: 151, column: 6)
!11783 = !DILocation(line: 151, column: 10, scope: !11782)
!11784 = !DILocation(line: 151, column: 6, scope: !11771)
!11785 = !DILocation(line: 152, column: 6, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11771, file: !1167, line: 152, column: 6)
!11787 = !DILocation(line: 152, column: 10, scope: !11786)
!11788 = !DILocation(line: 152, column: 6, scope: !11771)
!11789 = !DILocation(line: 153, column: 6, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11771, file: !1167, line: 153, column: 6)
!11791 = !DILocation(line: 153, column: 16, scope: !11790)
!11792 = !DILocation(line: 153, column: 53, scope: !11790)
!11793 = !DILocation(line: 153, column: 57, scope: !11790)
!11794 = !DILocation(line: 153, column: 60, scope: !11790)
!11795 = !DILocation(line: 153, column: 52, scope: !11790)
!11796 = !DILocation(line: 153, column: 51, scope: !11790)
!11797 = !DILocation(line: 153, column: 74, scope: !11790)
!11798 = !DILocation(line: 153, column: 84, scope: !11790)
!11799 = distinct !{!11799, !11800, !11801}
!11800 = !DILocation(line: 153, column: 30, scope: !11790)
!11801 = !DILocation(line: 153, column: 96, scope: !11790)
!11802 = !DILocation(line: 154, column: 6, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11771, file: !1167, line: 154, column: 6)
!11804 = !DILocation(line: 154, column: 10, scope: !11803)
!11805 = !DILocation(line: 154, column: 16, scope: !11803)
!11806 = !DILocation(line: 154, column: 19, scope: !11803)
!11807 = !DILocation(line: 154, column: 31, scope: !11803)
!11808 = !DILocation(line: 154, column: 79, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11803, file: !1167, line: 154, column: 47)
!11810 = !DILocation(line: 0, scope: !11809)
!11811 = !DILocation(line: 154, column: 83, scope: !11809)
!11812 = !DILocation(line: 154, column: 86, scope: !11809)
!11813 = !DILocation(line: 154, column: 78, scope: !11809)
!11814 = !DILocation(line: 154, column: 77, scope: !11809)
!11815 = !DILocation(line: 154, column: 97, scope: !11809)
!11816 = !DILocation(line: 154, column: 108, scope: !11809)
!11817 = !DILocation(line: 154, column: 118, scope: !11809)
!11818 = distinct !{!11818, !11819, !11820}
!11819 = !DILocation(line: 154, column: 56, scope: !11809)
!11820 = !DILocation(line: 154, column: 130, scope: !11809)
!11821 = !DILocation(line: 155, column: 6, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11771, file: !1167, line: 155, column: 6)
!11823 = !DILocation(line: 155, column: 16, scope: !11822)
!11824 = !DILocation(line: 156, column: 7, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11822, file: !1167, line: 156, column: 2)
!11826 = !DILocation(line: 156, column: 14, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11825, file: !1167, line: 156, column: 14)
!11828 = !DILocation(line: 156, column: 14, scope: !11825)
!11829 = !DILocation(line: 156, column: 28, scope: !11827)
!11830 = !DILocation(line: 156, column: 25, scope: !11827)
!11831 = !DILocation(line: 156, column: 71, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11827, file: !1167, line: 156, column: 41)
!11833 = !DILocation(line: 156, column: 52, scope: !11832)
!11834 = !DILocation(line: 0, scope: !11825)
!11835 = !DILocation(line: 157, column: 10, scope: !11825)
!11836 = !DILocation(line: 157, column: 20, scope: !11825)
!11837 = !DILocation(line: 157, column: 52, scope: !11825)
!11838 = !DILocation(line: 157, column: 62, scope: !11825)
!11839 = !DILocation(line: 157, column: 65, scope: !11825)
!11840 = !DILocation(line: 157, column: 56, scope: !11825)
!11841 = distinct !{!11841, !11842, !11843}
!11842 = !DILocation(line: 157, column: 3, scope: !11825)
!11843 = !DILocation(line: 157, column: 70, scope: !11825)
!11844 = !DILocation(line: 149, column: 32, scope: !11771)
!11845 = !DILocation(line: 149, column: 43, scope: !11771)
!11846 = !DILocation(line: 160, column: 8, scope: !11771)
!11847 = !DILocation(line: 160, column: 43, scope: !11771)
!11848 = !DILocation(line: 160, column: 35, scope: !11771)
!11849 = !DILocation(line: 160, column: 34, scope: !11771)
!11850 = !DILocation(line: 160, column: 27, scope: !11771)
!11851 = !DILocation(line: 160, column: 11, scope: !11771)
!11852 = !DILocation(line: 160, column: 10, scope: !11771)
!11853 = !DILocation(line: 162, column: 8, scope: !11771)
!11854 = !DILocation(line: 162, column: 19, scope: !11771)
!11855 = !DILocation(line: 163, column: 17, scope: !11771)
!11856 = !DILocation(line: 163, column: 8, scope: !11771)
!11857 = !DILocation(line: 163, column: 16, scope: !11771)
!11858 = !DILocation(line: 164, column: 8, scope: !11771)
!11859 = !DILocation(line: 164, column: 12, scope: !11771)
!11860 = !DILocation(line: 165, column: 2, scope: !11771)
!11861 = distinct !DISubprogram(name: "parse_array", scope: !1167, file: !1167, line: 375, type: !11582, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11862)
!11862 = !{!11863, !11864, !11865, !11866}
!11863 = !DILocalVariable(name: "item", arg: 1, scope: !11861, file: !1167, line: 375, type: !1169)
!11864 = !DILocalVariable(name: "value", arg: 2, scope: !11861, file: !1167, line: 375, type: !331)
!11865 = !DILocalVariable(name: "child", scope: !11861, file: !1167, line: 377, type: !1169)
!11866 = !DILocalVariable(name: "new_item", scope: !11867, file: !1167, line: 391, type: !1169)
!11867 = distinct !DILexicalBlock(scope: !11861, file: !1167, line: 390, column: 2)
!11868 = !DILocation(line: 0, scope: !11861)
!11869 = !DILocation(line: 378, column: 6, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11861, file: !1167, line: 378, column: 6)
!11871 = !DILocation(line: 378, column: 12, scope: !11870)
!11872 = !DILocation(line: 378, column: 6, scope: !11861)
!11873 = !DILocation(line: 378, column: 22, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11870, file: !1167, line: 378, column: 19)
!11875 = !DILocation(line: 378, column: 29, scope: !11874)
!11876 = !DILocation(line: 380, column: 8, scope: !11861)
!11877 = !DILocation(line: 380, column: 12, scope: !11861)
!11878 = !DILocation(line: 381, column: 18, scope: !11861)
!11879 = !DILocation(line: 381, column: 8, scope: !11861)
!11880 = !DILocation(line: 382, column: 6, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11861, file: !1167, line: 382, column: 6)
!11882 = !DILocation(line: 382, column: 12, scope: !11881)
!11883 = !DILocation(line: 382, column: 6, scope: !11861)
!11884 = !DILocation(line: 382, column: 31, scope: !11881)
!11885 = !DILocation(line: 382, column: 19, scope: !11881)
!11886 = !DILocation(line: 384, column: 20, scope: !11861)
!11887 = !DILocation(line: 384, column: 8, scope: !11861)
!11888 = !DILocation(line: 384, column: 13, scope: !11861)
!11889 = !DILocation(line: 385, column: 7, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11861, file: !1167, line: 385, column: 6)
!11891 = !DILocation(line: 385, column: 6, scope: !11861)
!11892 = !DILocation(line: 386, column: 31, scope: !11861)
!11893 = !DILocation(line: 386, column: 13, scope: !11861)
!11894 = !DILocation(line: 386, column: 8, scope: !11861)
!11895 = !DILocation(line: 387, column: 7, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11861, file: !1167, line: 387, column: 6)
!11897 = !DILocation(line: 387, column: 6, scope: !11861)
!11898 = !DILocation(line: 389, column: 9, scope: !11861)
!11899 = !DILocation(line: 389, column: 2, scope: !11861)
!11900 = !DILocation(line: 392, column: 18, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11867, file: !1167, line: 392, column: 7)
!11902 = !DILocation(line: 0, scope: !11867)
!11903 = !DILocation(line: 392, column: 17, scope: !11901)
!11904 = !DILocation(line: 392, column: 7, scope: !11867)
!11905 = !DILocation(line: 393, column: 10, scope: !11867)
!11906 = !DILocation(line: 393, column: 14, scope: !11867)
!11907 = !DILocation(line: 393, column: 34, scope: !11867)
!11908 = !DILocation(line: 393, column: 38, scope: !11867)
!11909 = !DILocation(line: 394, column: 42, scope: !11867)
!11910 = !DILocation(line: 394, column: 32, scope: !11867)
!11911 = !DILocation(line: 394, column: 14, scope: !11867)
!11912 = !DILocation(line: 394, column: 9, scope: !11867)
!11913 = !DILocation(line: 395, column: 8, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11867, file: !1167, line: 395, column: 7)
!11915 = distinct !{!11915, !11899, !11916}
!11916 = !DILocation(line: 396, column: 2, scope: !11861)
!11917 = !DILocation(line: 398, column: 31, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11861, file: !1167, line: 398, column: 6)
!11919 = !DILocation(line: 398, column: 19, scope: !11918)
!11920 = !DILocation(line: 399, column: 4, scope: !11861)
!11921 = !DILocation(line: 399, column: 11, scope: !11861)
!11922 = !DILocation(line: 400, column: 1, scope: !11861)
!11923 = distinct !DISubprogram(name: "parse_object", scope: !1167, file: !1167, line: 461, type: !11582, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !11924)
!11924 = !{!11925, !11926, !11927, !11928}
!11925 = !DILocalVariable(name: "item", arg: 1, scope: !11923, file: !1167, line: 461, type: !1169)
!11926 = !DILocalVariable(name: "value", arg: 2, scope: !11923, file: !1167, line: 461, type: !331)
!11927 = !DILocalVariable(name: "child", scope: !11923, file: !1167, line: 463, type: !1169)
!11928 = !DILocalVariable(name: "new_item", scope: !11929, file: !1167, line: 481, type: !1169)
!11929 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 480, column: 2)
!11930 = !DILocation(line: 0, scope: !11923)
!11931 = !DILocation(line: 464, column: 6, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 464, column: 6)
!11933 = !DILocation(line: 464, column: 12, scope: !11932)
!11934 = !DILocation(line: 464, column: 6, scope: !11923)
!11935 = !DILocation(line: 464, column: 22, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11932, file: !1167, line: 464, column: 19)
!11937 = !DILocation(line: 464, column: 29, scope: !11936)
!11938 = !DILocation(line: 466, column: 8, scope: !11923)
!11939 = !DILocation(line: 466, column: 12, scope: !11923)
!11940 = !DILocation(line: 467, column: 18, scope: !11923)
!11941 = !DILocation(line: 467, column: 8, scope: !11923)
!11942 = !DILocation(line: 468, column: 6, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 468, column: 6)
!11944 = !DILocation(line: 468, column: 12, scope: !11943)
!11945 = !DILocation(line: 468, column: 6, scope: !11923)
!11946 = !DILocation(line: 468, column: 31, scope: !11943)
!11947 = !DILocation(line: 468, column: 19, scope: !11943)
!11948 = !DILocation(line: 470, column: 20, scope: !11923)
!11949 = !DILocation(line: 470, column: 8, scope: !11923)
!11950 = !DILocation(line: 470, column: 13, scope: !11923)
!11951 = !DILocation(line: 471, column: 7, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 471, column: 6)
!11953 = !DILocation(line: 471, column: 6, scope: !11923)
!11954 = !DILocation(line: 472, column: 32, scope: !11923)
!11955 = !DILocation(line: 472, column: 13, scope: !11923)
!11956 = !DILocation(line: 472, column: 8, scope: !11923)
!11957 = !DILocation(line: 473, column: 7, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 473, column: 6)
!11959 = !DILocation(line: 473, column: 6, scope: !11923)
!11960 = !DILocation(line: 474, column: 23, scope: !11923)
!11961 = !DILocation(line: 474, column: 9, scope: !11923)
!11962 = !DILocation(line: 474, column: 15, scope: !11923)
!11963 = !DILocation(line: 474, column: 53, scope: !11923)
!11964 = !DILocation(line: 475, column: 6, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 475, column: 6)
!11966 = !DILocation(line: 475, column: 12, scope: !11965)
!11967 = !DILocation(line: 475, column: 6, scope: !11923)
!11968 = !DILocation(line: 475, column: 22, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11965, file: !1167, line: 475, column: 19)
!11970 = !DILocation(line: 475, column: 29, scope: !11969)
!11971 = !DILocation(line: 476, column: 41, scope: !11923)
!11972 = !DILocation(line: 476, column: 31, scope: !11923)
!11973 = !DILocation(line: 476, column: 13, scope: !11923)
!11974 = !DILocation(line: 476, column: 8, scope: !11923)
!11975 = !DILocation(line: 477, column: 7, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 477, column: 6)
!11977 = !DILocation(line: 477, column: 6, scope: !11923)
!11978 = !DILocation(line: 479, column: 9, scope: !11923)
!11979 = !DILocation(line: 479, column: 2, scope: !11923)
!11980 = !DILocation(line: 482, column: 18, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11929, file: !1167, line: 482, column: 7)
!11982 = !DILocation(line: 0, scope: !11929)
!11983 = !DILocation(line: 482, column: 17, scope: !11981)
!11984 = !DILocation(line: 482, column: 7, scope: !11929)
!11985 = !DILocation(line: 483, column: 10, scope: !11929)
!11986 = !DILocation(line: 483, column: 14, scope: !11929)
!11987 = !DILocation(line: 483, column: 34, scope: !11929)
!11988 = !DILocation(line: 483, column: 38, scope: !11929)
!11989 = !DILocation(line: 484, column: 43, scope: !11929)
!11990 = !DILocation(line: 484, column: 33, scope: !11929)
!11991 = !DILocation(line: 484, column: 14, scope: !11929)
!11992 = !DILocation(line: 484, column: 9, scope: !11929)
!11993 = !DILocation(line: 485, column: 8, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11929, file: !1167, line: 485, column: 7)
!11995 = !DILocation(line: 485, column: 7, scope: !11929)
!11996 = !DILocation(line: 486, column: 24, scope: !11929)
!11997 = !DILocation(line: 486, column: 10, scope: !11929)
!11998 = !DILocation(line: 486, column: 16, scope: !11929)
!11999 = !DILocation(line: 486, column: 54, scope: !11929)
!12000 = !DILocation(line: 487, column: 7, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11929, file: !1167, line: 487, column: 7)
!12002 = !DILocation(line: 487, column: 13, scope: !12001)
!12003 = !DILocation(line: 487, column: 7, scope: !11929)
!12004 = !DILocation(line: 487, column: 23, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12001, file: !1167, line: 487, column: 20)
!12006 = !DILocation(line: 487, column: 30, scope: !12005)
!12007 = !DILocation(line: 488, column: 42, scope: !11929)
!12008 = !DILocation(line: 488, column: 32, scope: !11929)
!12009 = !DILocation(line: 488, column: 14, scope: !11929)
!12010 = !DILocation(line: 488, column: 9, scope: !11929)
!12011 = !DILocation(line: 489, column: 8, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !11929, file: !1167, line: 489, column: 7)
!12013 = distinct !{!12013, !11979, !12014}
!12014 = !DILocation(line: 490, column: 2, scope: !11923)
!12015 = !DILocation(line: 492, column: 31, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11923, file: !1167, line: 492, column: 6)
!12017 = !DILocation(line: 492, column: 19, scope: !12016)
!12018 = !DILocation(line: 493, column: 4, scope: !11923)
!12019 = !DILocation(line: 493, column: 11, scope: !11923)
!12020 = !DILocation(line: 494, column: 1, scope: !11923)
!12021 = distinct !DISubprogram(name: "parse_hex4", scope: !1167, file: !1167, line: 195, type: !12022, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12024)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{!30, !331}
!12024 = !{!12025, !12026}
!12025 = !DILocalVariable(name: "str", arg: 1, scope: !12021, file: !1167, line: 195, type: !331)
!12026 = !DILocalVariable(name: "h", scope: !12021, file: !1167, line: 197, type: !30)
!12027 = !DILocation(line: 0, scope: !12021)
!12028 = !DILocation(line: 198, column: 6, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12021, file: !1167, line: 198, column: 6)
!12030 = !DILocation(line: 198, column: 16, scope: !12029)
!12031 = !DILocation(line: 198, column: 64, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12029, file: !1167, line: 198, column: 54)
!12033 = !DILocation(line: 198, column: 115, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12032, file: !1167, line: 198, column: 105)
!12035 = !DILocation(line: 0, scope: !12029)
!12036 = !DILocation(line: 199, column: 5, scope: !12021)
!12037 = !DILocation(line: 199, column: 12, scope: !12021)
!12038 = !DILocation(line: 200, column: 6, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12021, file: !1167, line: 200, column: 6)
!12040 = !DILocation(line: 200, column: 16, scope: !12039)
!12041 = !DILocation(line: 200, column: 64, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12039, file: !1167, line: 200, column: 54)
!12043 = !DILocation(line: 200, column: 115, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12042, file: !1167, line: 200, column: 105)
!12045 = !DILocation(line: 0, scope: !12039)
!12046 = !DILocation(line: 201, column: 5, scope: !12021)
!12047 = !DILocation(line: 201, column: 12, scope: !12021)
!12048 = !DILocation(line: 202, column: 6, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12021, file: !1167, line: 202, column: 6)
!12050 = !DILocation(line: 202, column: 16, scope: !12049)
!12051 = !DILocation(line: 202, column: 64, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12049, file: !1167, line: 202, column: 54)
!12053 = !DILocation(line: 202, column: 115, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12052, file: !1167, line: 202, column: 105)
!12055 = !DILocation(line: 0, scope: !12049)
!12056 = !DILocation(line: 203, column: 5, scope: !12021)
!12057 = !DILocation(line: 203, column: 12, scope: !12021)
!12058 = !DILocation(line: 204, column: 6, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12021, file: !1167, line: 204, column: 6)
!12060 = !DILocation(line: 204, column: 16, scope: !12059)
!12061 = !DILocation(line: 204, column: 64, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12059, file: !1167, line: 204, column: 54)
!12063 = !DILocation(line: 204, column: 115, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12062, file: !1167, line: 204, column: 105)
!12065 = !DILocation(line: 0, scope: !12059)
!12066 = !DILocation(line: 205, column: 2, scope: !12021)
!12067 = !DILocation(line: 206, column: 1, scope: !12021)
!12068 = distinct !DISubprogram(name: "cJSON_Parse", scope: !1167, file: !1167, line: 335, type: !12069, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12071)
!12069 = !DISubroutineType(types: !12070)
!12070 = !{!1169, !331}
!12071 = !{!12072}
!12072 = !DILocalVariable(name: "value", arg: 1, scope: !12068, file: !1167, line: 335, type: !331)
!12073 = !DILocation(line: 0, scope: !12068)
!12074 = !DILocation(line: 335, column: 47, scope: !12068)
!12075 = !DILocation(line: 335, column: 40, scope: !12068)
!12076 = distinct !DISubprogram(name: "cJSON_Print", scope: !1167, file: !1167, line: 338, type: !12077, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12079)
!12077 = !DISubroutineType(types: !12078)
!12078 = !{!201, !1169}
!12079 = !{!12080}
!12080 = !DILocalVariable(name: "item", arg: 1, scope: !12076, file: !1167, line: 338, type: !1169)
!12081 = !DILocation(line: 0, scope: !12076)
!12082 = !DILocation(line: 338, column: 43, scope: !12076)
!12083 = !DILocation(line: 338, column: 36, scope: !12076)
!12084 = distinct !DISubprogram(name: "print_value", scope: !1167, file: !1167, line: 357, type: !12085, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12087)
!12085 = !DISubroutineType(types: !12086)
!12086 = !{!201, !1169, !7, !7}
!12087 = !{!12088, !12089, !12090, !12091}
!12088 = !DILocalVariable(name: "item", arg: 1, scope: !12084, file: !1167, line: 357, type: !1169)
!12089 = !DILocalVariable(name: "depth", arg: 2, scope: !12084, file: !1167, line: 357, type: !7)
!12090 = !DILocalVariable(name: "fmt", arg: 3, scope: !12084, file: !1167, line: 357, type: !7)
!12091 = !DILocalVariable(name: "out", scope: !12084, file: !1167, line: 359, type: !201)
!12092 = !DILocation(line: 0, scope: !12084)
!12093 = !DILocation(line: 360, column: 7, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12084, file: !1167, line: 360, column: 6)
!12095 = !DILocation(line: 360, column: 6, scope: !12084)
!12096 = !DILocation(line: 361, column: 17, scope: !12084)
!12097 = !DILocation(line: 361, column: 2, scope: !12084)
!12098 = !DILocation(line: 363, column: 24, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12084, file: !1167, line: 362, column: 2)
!12100 = !DILocation(line: 363, column: 46, scope: !12099)
!12101 = !DILocation(line: 364, column: 25, scope: !12099)
!12102 = !DILocation(line: 364, column: 47, scope: !12099)
!12103 = !DILocation(line: 365, column: 24, scope: !12099)
!12104 = !DILocation(line: 365, column: 46, scope: !12099)
!12105 = !DILocation(line: 366, column: 26, scope: !12099)
!12106 = !DILocation(line: 366, column: 45, scope: !12099)
!12107 = !DILocation(line: 367, column: 26, scope: !12099)
!12108 = !DILocation(line: 367, column: 45, scope: !12099)
!12109 = !DILocation(line: 368, column: 25, scope: !12099)
!12110 = !DILocation(line: 368, column: 53, scope: !12099)
!12111 = !DILocation(line: 369, column: 26, scope: !12099)
!12112 = !DILocation(line: 369, column: 55, scope: !12099)
!12113 = !DILocation(line: 372, column: 1, scope: !12084)
!12114 = distinct !DISubprogram(name: "cJSON_strdup", scope: !1167, file: !1167, line: 98, type: !12115, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12117)
!12115 = !DISubroutineType(types: !12116)
!12116 = !{!201, !331}
!12117 = !{!12118, !12119, !12120}
!12118 = !DILocalVariable(name: "str", arg: 1, scope: !12114, file: !1167, line: 98, type: !331)
!12119 = !DILocalVariable(name: "len", scope: !12114, file: !1167, line: 100, type: !919)
!12120 = !DILocalVariable(name: "copy", scope: !12114, file: !1167, line: 101, type: !201)
!12121 = !DILocation(line: 0, scope: !12114)
!12122 = !DILocation(line: 103, column: 13, scope: !12114)
!12123 = !DILocation(line: 103, column: 25, scope: !12114)
!12124 = !DILocation(line: 104, column: 27, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12114, file: !1167, line: 104, column: 11)
!12126 = !DILocation(line: 104, column: 18, scope: !12125)
!12127 = !DILocation(line: 104, column: 11, scope: !12114)
!12128 = !DILocation(line: 105, column: 7, scope: !12114)
!12129 = !DILocation(line: 106, column: 7, scope: !12114)
!12130 = !DILocation(line: 107, column: 1, scope: !12114)
!12131 = distinct !DISubprogram(name: "print_number", scope: !1167, file: !1167, line: 169, type: !12077, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12132)
!12132 = !{!12133, !12134, !12135}
!12133 = !DILocalVariable(name: "item", arg: 1, scope: !12131, file: !1167, line: 169, type: !1169)
!12134 = !DILocalVariable(name: "str", scope: !12131, file: !1167, line: 171, type: !201)
!12135 = !DILocalVariable(name: "d", scope: !12131, file: !1167, line: 172, type: !1182)
!12136 = !DILocation(line: 0, scope: !12131)
!12137 = !DILocation(line: 172, column: 17, scope: !12131)
!12138 = !DILocation(line: 173, column: 26, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12131, file: !1167, line: 173, column: 6)
!12140 = !DILocation(line: 173, column: 12, scope: !12139)
!12141 = !DILocation(line: 173, column: 35, scope: !12139)
!12142 = !DILocation(line: 173, column: 6, scope: !12139)
!12143 = !DILocation(line: 173, column: 38, scope: !12139)
!12144 = !DILocation(line: 173, column: 52, scope: !12139)
!12145 = !DILocation(line: 175, column: 14, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12139, file: !1167, line: 174, column: 2)
!12147 = !DILocation(line: 176, column: 7, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12146, file: !1167, line: 176, column: 7)
!12149 = !DILocation(line: 176, column: 7, scope: !12146)
!12150 = !DILocation(line: 176, column: 35, scope: !12148)
!12151 = !DILocation(line: 176, column: 12, scope: !12148)
!12152 = !DILocation(line: 180, column: 14, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12139, file: !1167, line: 179, column: 2)
!12154 = !DILocation(line: 181, column: 7, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12153, file: !1167, line: 181, column: 7)
!12156 = !DILocation(line: 181, column: 7, scope: !12153)
!12157 = !DILocation(line: 189, column: 25, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12155, file: !1167, line: 182, column: 3)
!12159 = !DILocation(line: 190, column: 3, scope: !12158)
!12160 = !DILocation(line: 0, scope: !12139)
!12161 = !DILocation(line: 192, column: 2, scope: !12131)
!12162 = distinct !DISubprogram(name: "print_string", scope: !1167, file: !1167, line: 305, type: !12077, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12163)
!12163 = !{!12164}
!12164 = !DILocalVariable(name: "item", arg: 1, scope: !12162, file: !1167, line: 305, type: !1169)
!12165 = !DILocation(line: 0, scope: !12162)
!12166 = !DILocation(line: 305, column: 71, scope: !12162)
!12167 = !DILocation(line: 305, column: 48, scope: !12162)
!12168 = !DILocation(line: 305, column: 41, scope: !12162)
!12169 = distinct !DISubprogram(name: "print_array", scope: !1167, file: !1167, line: 403, type: !12085, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12170)
!12170 = !{!12171, !12172, !12173, !12174, !12175, !12176, !12177, !12178, !12179, !12180, !12181, !12182}
!12171 = !DILocalVariable(name: "item", arg: 1, scope: !12169, file: !1167, line: 403, type: !1169)
!12172 = !DILocalVariable(name: "depth", arg: 2, scope: !12169, file: !1167, line: 403, type: !7)
!12173 = !DILocalVariable(name: "fmt", arg: 3, scope: !12169, file: !1167, line: 403, type: !7)
!12174 = !DILocalVariable(name: "entries", scope: !12169, file: !1167, line: 405, type: !1184)
!12175 = !DILocalVariable(name: "out", scope: !12169, file: !1167, line: 406, type: !201)
!12176 = !DILocalVariable(name: "ptr", scope: !12169, file: !1167, line: 406, type: !201)
!12177 = !DILocalVariable(name: "ret", scope: !12169, file: !1167, line: 406, type: !201)
!12178 = !DILocalVariable(name: "len", scope: !12169, file: !1167, line: 406, type: !7)
!12179 = !DILocalVariable(name: "child", scope: !12169, file: !1167, line: 407, type: !1169)
!12180 = !DILocalVariable(name: "numentries", scope: !12169, file: !1167, line: 408, type: !7)
!12181 = !DILocalVariable(name: "i", scope: !12169, file: !1167, line: 408, type: !7)
!12182 = !DILocalVariable(name: "fail", scope: !12169, file: !1167, line: 408, type: !7)
!12183 = !DILocation(line: 0, scope: !12169)
!12184 = !DILocation(line: 407, column: 21, scope: !12169)
!12185 = !DILocation(line: 411, column: 2, scope: !12169)
!12186 = !DILocation(line: 411, column: 26, scope: !12169)
!12187 = !DILocation(line: 411, column: 42, scope: !12169)
!12188 = distinct !{!12188, !12185, !12187}
!12189 = !DILocation(line: 415, column: 14, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12191, file: !1167, line: 414, column: 2)
!12191 = distinct !DILexicalBlock(scope: !12169, file: !1167, line: 413, column: 6)
!12192 = !DILocation(line: 416, column: 7, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12190, file: !1167, line: 416, column: 7)
!12194 = !DILocation(line: 416, column: 7, scope: !12190)
!12195 = !DILocation(line: 416, column: 12, scope: !12193)
!12196 = !DILocation(line: 420, column: 41, scope: !12169)
!12197 = !DILocation(line: 420, column: 18, scope: !12169)
!12198 = !DILocation(line: 420, column: 10, scope: !12169)
!12199 = !DILocation(line: 421, column: 7, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12169, file: !1167, line: 421, column: 6)
!12201 = !DILocation(line: 421, column: 6, scope: !12169)
!12202 = !DILocation(line: 422, column: 2, scope: !12169)
!12203 = !DILocation(line: 425, column: 9, scope: !12169)
!12204 = !DILocation(line: 425, column: 2, scope: !12169)
!12205 = !DILocation(line: 427, column: 7, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12169, file: !1167, line: 426, column: 2)
!12207 = !DILocation(line: 428, column: 3, scope: !12206)
!12208 = !DILocation(line: 428, column: 15, scope: !12206)
!12209 = !DILocation(line: 429, column: 7, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12206, file: !1167, line: 429, column: 7)
!12211 = !DILocation(line: 429, column: 7, scope: !12206)
!12212 = !DILocation(line: 428, column: 12, scope: !12206)
!12213 = !DILocation(line: 429, column: 17, scope: !12210)
!12214 = !DILocation(line: 429, column: 30, scope: !12210)
!12215 = !DILocation(line: 429, column: 15, scope: !12210)
!12216 = !DILocation(line: 430, column: 16, scope: !12206)
!12217 = !DILocation(line: 425, column: 15, scope: !12169)
!12218 = distinct !{!12218, !12204, !12219}
!12219 = !DILocation(line: 431, column: 2, scope: !12169)
!12220 = !DILocation(line: 434, column: 24, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12169, file: !1167, line: 434, column: 6)
!12222 = !DILocation(line: 436, column: 7, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12169, file: !1167, line: 436, column: 6)
!12224 = !DILocation(line: 439, column: 6, scope: !12169)
!12225 = !DILocation(line: 441, column: 3, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12227, file: !1167, line: 441, column: 3)
!12227 = distinct !DILexicalBlock(scope: !12228, file: !1167, line: 440, column: 2)
!12228 = distinct !DILexicalBlock(scope: !12169, file: !1167, line: 439, column: 6)
!12229 = !DILocation(line: 441, column: 34, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12231, file: !1167, line: 441, column: 34)
!12231 = distinct !DILexicalBlock(scope: !12226, file: !1167, line: 441, column: 3)
!12232 = !DILocation(line: 441, column: 34, scope: !12231)
!12233 = !DILocation(line: 441, column: 46, scope: !12230)
!12234 = !DILocation(line: 441, column: 26, scope: !12231)
!12235 = !DILocation(line: 441, column: 13, scope: !12231)
!12236 = distinct !{!12236, !12225, !12237}
!12237 = !DILocation(line: 441, column: 67, scope: !12226)
!12238 = !DILocation(line: 442, column: 3, scope: !12227)
!12239 = !DILocation(line: 443, column: 3, scope: !12227)
!12240 = !DILocation(line: 447, column: 6, scope: !12169)
!12241 = !DILocation(line: 448, column: 9, scope: !12169)
!12242 = !DILocation(line: 448, column: 16, scope: !12169)
!12243 = !DILocation(line: 449, column: 2, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12169, file: !1167, line: 449, column: 2)
!12245 = !DILocation(line: 451, column: 14, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !1167, line: 450, column: 2)
!12247 = distinct !DILexicalBlock(scope: !12244, file: !1167, line: 449, column: 2)
!12248 = !DILocation(line: 451, column: 3, scope: !12246)
!12249 = !DILocation(line: 451, column: 38, scope: !12246)
!12250 = !DILocation(line: 451, column: 31, scope: !12246)
!12251 = !DILocation(line: 451, column: 29, scope: !12246)
!12252 = !DILocation(line: 452, column: 8, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12246, file: !1167, line: 452, column: 7)
!12254 = !DILocation(line: 452, column: 7, scope: !12246)
!12255 = !DILocation(line: 452, column: 29, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12253, file: !1167, line: 452, column: 24)
!12257 = !DILocation(line: 452, column: 31, scope: !12256)
!12258 = !DILocation(line: 452, column: 39, scope: !12256)
!12259 = !DILocation(line: 452, column: 47, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12256, file: !1167, line: 452, column: 39)
!12261 = !DILocation(line: 452, column: 49, scope: !12260)
!12262 = !DILocation(line: 452, column: 43, scope: !12260)
!12263 = !DILocation(line: 0, scope: !12256)
!12264 = !DILocation(line: 452, column: 58, scope: !12256)
!12265 = !DILocation(line: 452, column: 61, scope: !12256)
!12266 = !DILocation(line: 0, scope: !12246)
!12267 = !DILocation(line: 453, column: 14, scope: !12246)
!12268 = !DILocation(line: 453, column: 3, scope: !12246)
!12269 = !DILocation(line: 449, column: 25, scope: !12247)
!12270 = !DILocation(line: 449, column: 12, scope: !12247)
!12271 = distinct !{!12271, !12243, !12272}
!12272 = !DILocation(line: 454, column: 2, scope: !12244)
!12273 = !DILocation(line: 455, column: 2, scope: !12169)
!12274 = !DILocation(line: 456, column: 6, scope: !12169)
!12275 = !DILocation(line: 456, column: 8, scope: !12169)
!12276 = !DILocation(line: 456, column: 19, scope: !12169)
!12277 = !DILocation(line: 457, column: 2, scope: !12169)
!12278 = !DILocation(line: 458, column: 1, scope: !12169)
!12279 = distinct !DISubprogram(name: "print_object", scope: !1167, file: !1167, line: 497, type: !12085, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12280)
!12280 = !{!12281, !12282, !12283, !12284, !12285, !12286, !12287, !12288, !12289, !12290, !12291, !12292, !12293, !12294, !12295}
!12281 = !DILocalVariable(name: "item", arg: 1, scope: !12279, file: !1167, line: 497, type: !1169)
!12282 = !DILocalVariable(name: "depth", arg: 2, scope: !12279, file: !1167, line: 497, type: !7)
!12283 = !DILocalVariable(name: "fmt", arg: 3, scope: !12279, file: !1167, line: 497, type: !7)
!12284 = !DILocalVariable(name: "entries", scope: !12279, file: !1167, line: 499, type: !1184)
!12285 = !DILocalVariable(name: "names", scope: !12279, file: !1167, line: 499, type: !1184)
!12286 = !DILocalVariable(name: "out", scope: !12279, file: !1167, line: 500, type: !201)
!12287 = !DILocalVariable(name: "ptr", scope: !12279, file: !1167, line: 500, type: !201)
!12288 = !DILocalVariable(name: "ret", scope: !12279, file: !1167, line: 500, type: !201)
!12289 = !DILocalVariable(name: "str", scope: !12279, file: !1167, line: 500, type: !201)
!12290 = !DILocalVariable(name: "len", scope: !12279, file: !1167, line: 500, type: !7)
!12291 = !DILocalVariable(name: "i", scope: !12279, file: !1167, line: 500, type: !7)
!12292 = !DILocalVariable(name: "j", scope: !12279, file: !1167, line: 500, type: !7)
!12293 = !DILocalVariable(name: "child", scope: !12279, file: !1167, line: 501, type: !1169)
!12294 = !DILocalVariable(name: "numentries", scope: !12279, file: !1167, line: 502, type: !7)
!12295 = !DILocalVariable(name: "fail", scope: !12279, file: !1167, line: 502, type: !7)
!12296 = !DILocation(line: 0, scope: !12279)
!12297 = !DILocation(line: 501, column: 21, scope: !12279)
!12298 = !DILocation(line: 504, column: 2, scope: !12279)
!12299 = !DILocation(line: 504, column: 26, scope: !12279)
!12300 = !DILocation(line: 504, column: 42, scope: !12279)
!12301 = distinct !{!12301, !12298, !12300}
!12302 = !DILocation(line: 508, column: 27, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12304, file: !1167, line: 507, column: 2)
!12304 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 506, column: 6)
!12305 = !DILocation(line: 508, column: 14, scope: !12303)
!12306 = !DILocation(line: 509, column: 8, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12303, file: !1167, line: 509, column: 7)
!12308 = !DILocation(line: 509, column: 7, scope: !12303)
!12309 = !DILocation(line: 510, column: 15, scope: !12303)
!12310 = !DILocation(line: 510, column: 17, scope: !12303)
!12311 = !DILocation(line: 511, column: 7, scope: !12303)
!12312 = !DILocation(line: 511, column: 17, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12314, file: !1167, line: 511, column: 12)
!12314 = distinct !DILexicalBlock(scope: !12303, file: !1167, line: 511, column: 7)
!12315 = !DILocation(line: 511, column: 19, scope: !12313)
!12316 = !DILocation(line: 511, column: 35, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12318, file: !1167, line: 511, column: 25)
!12318 = distinct !DILexicalBlock(scope: !12313, file: !1167, line: 511, column: 25)
!12319 = !DILocation(line: 511, column: 25, scope: !12318)
!12320 = !DILocation(line: 511, column: 53, scope: !12317)
!12321 = !DILocation(line: 511, column: 55, scope: !12317)
!12322 = !DILocation(line: 511, column: 45, scope: !12317)
!12323 = distinct !{!12323, !12319, !12324}
!12324 = !DILocation(line: 511, column: 56, scope: !12318)
!12325 = !DILocation(line: 0, scope: !12303)
!12326 = !DILocation(line: 512, column: 7, scope: !12303)
!12327 = !DILocation(line: 512, column: 9, scope: !12303)
!12328 = !DILocation(line: 512, column: 20, scope: !12303)
!12329 = !DILocation(line: 513, column: 3, scope: !12303)
!12330 = !DILocation(line: 516, column: 41, scope: !12279)
!12331 = !DILocation(line: 516, column: 18, scope: !12279)
!12332 = !DILocation(line: 516, column: 10, scope: !12279)
!12333 = !DILocation(line: 517, column: 7, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 517, column: 6)
!12335 = !DILocation(line: 517, column: 6, scope: !12279)
!12336 = !DILocation(line: 518, column: 16, scope: !12279)
!12337 = !DILocation(line: 518, column: 8, scope: !12279)
!12338 = !DILocation(line: 519, column: 7, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 519, column: 6)
!12340 = !DILocation(line: 519, column: 6, scope: !12279)
!12341 = !DILocation(line: 519, column: 15, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12339, file: !1167, line: 519, column: 14)
!12343 = !DILocation(line: 519, column: 35, scope: !12342)
!12344 = !DILocation(line: 520, column: 2, scope: !12279)
!12345 = !DILocation(line: 521, column: 2, scope: !12279)
!12346 = !DILocation(line: 524, column: 25, scope: !12279)
!12347 = !DILocation(line: 524, column: 32, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 524, column: 32)
!12349 = !DILocation(line: 524, column: 32, scope: !12279)
!12350 = !DILocation(line: 525, column: 9, scope: !12279)
!12351 = !DILocation(line: 525, column: 2, scope: !12279)
!12352 = !DILocation(line: 527, column: 40, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 526, column: 2)
!12354 = !DILocation(line: 527, column: 16, scope: !12353)
!12355 = !DILocation(line: 527, column: 3, scope: !12353)
!12356 = !DILocation(line: 527, column: 11, scope: !12353)
!12357 = !DILocation(line: 528, column: 20, scope: !12353)
!12358 = !DILocation(line: 528, column: 3, scope: !12353)
!12359 = !DILocation(line: 528, column: 15, scope: !12353)
!12360 = !DILocation(line: 529, column: 7, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12353, file: !1167, line: 529, column: 7)
!12362 = !DILocation(line: 529, column: 11, scope: !12361)
!12363 = !DILocation(line: 528, column: 12, scope: !12353)
!12364 = !DILocation(line: 529, column: 24, scope: !12361)
!12365 = !DILocation(line: 529, column: 36, scope: !12361)
!12366 = !DILocation(line: 529, column: 47, scope: !12361)
!12367 = !DILocation(line: 529, column: 49, scope: !12361)
!12368 = !DILocation(line: 529, column: 22, scope: !12361)
!12369 = !DILocation(line: 530, column: 16, scope: !12353)
!12370 = !DILocation(line: 525, column: 14, scope: !12279)
!12371 = distinct !{!12371, !12351, !12372}
!12372 = !DILocation(line: 531, column: 2, scope: !12279)
!12373 = !DILocation(line: 534, column: 24, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 534, column: 6)
!12375 = !DILocation(line: 535, column: 7, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 535, column: 6)
!12377 = !DILocation(line: 538, column: 6, scope: !12279)
!12378 = !DILocation(line: 540, column: 3, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12380, file: !1167, line: 540, column: 3)
!12380 = distinct !DILexicalBlock(scope: !12381, file: !1167, line: 539, column: 2)
!12381 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 538, column: 6)
!12382 = !DILocation(line: 540, column: 35, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12384, file: !1167, line: 540, column: 35)
!12384 = distinct !DILexicalBlock(scope: !12385, file: !1167, line: 540, column: 30)
!12385 = distinct !DILexicalBlock(scope: !12379, file: !1167, line: 540, column: 3)
!12386 = !DILocation(line: 540, column: 35, scope: !12384)
!12387 = !DILocation(line: 540, column: 45, scope: !12383)
!12388 = !DILocation(line: 540, column: 70, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12384, file: !1167, line: 540, column: 70)
!12390 = !DILocation(line: 540, column: 70, scope: !12384)
!12391 = !DILocation(line: 540, column: 82, scope: !12389)
!12392 = !DILocation(line: 540, column: 26, scope: !12385)
!12393 = !DILocation(line: 540, column: 13, scope: !12385)
!12394 = distinct !{!12394, !12378, !12395}
!12395 = !DILocation(line: 540, column: 105, scope: !12379)
!12396 = !DILocation(line: 541, column: 3, scope: !12380)
!12397 = !DILocation(line: 541, column: 21, scope: !12380)
!12398 = !DILocation(line: 542, column: 3, scope: !12380)
!12399 = !DILocation(line: 546, column: 6, scope: !12279)
!12400 = !DILocation(line: 546, column: 18, scope: !12279)
!12401 = !DILocation(line: 546, column: 25, scope: !12279)
!12402 = !DILocation(line: 546, column: 33, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 546, column: 25)
!12404 = !DILocation(line: 546, column: 35, scope: !12403)
!12405 = !DILocation(line: 546, column: 29, scope: !12403)
!12406 = !DILocation(line: 546, column: 45, scope: !12279)
!12407 = !DILocation(line: 547, column: 2, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 547, column: 2)
!12409 = !DILocation(line: 549, column: 7, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12411, file: !1167, line: 548, column: 2)
!12411 = distinct !DILexicalBlock(scope: !12408, file: !1167, line: 547, column: 2)
!12412 = !DILocation(line: 549, column: 38, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12414, file: !1167, line: 549, column: 12)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !1167, line: 549, column: 12)
!12415 = distinct !DILexicalBlock(scope: !12410, file: !1167, line: 549, column: 7)
!12416 = !DILocation(line: 549, column: 40, scope: !12413)
!12417 = !DILocation(line: 549, column: 30, scope: !12413)
!12418 = !DILocation(line: 549, column: 22, scope: !12413)
!12419 = !DILocation(line: 549, column: 12, scope: !12414)
!12420 = distinct !{!12420, !12419, !12421}
!12421 = !DILocation(line: 549, column: 41, scope: !12414)
!12422 = !DILocation(line: 550, column: 14, scope: !12410)
!12423 = !DILocation(line: 550, column: 3, scope: !12410)
!12424 = !DILocation(line: 550, column: 36, scope: !12410)
!12425 = !DILocation(line: 550, column: 29, scope: !12410)
!12426 = !DILocation(line: 550, column: 27, scope: !12410)
!12427 = !DILocation(line: 551, column: 7, scope: !12410)
!12428 = !DILocation(line: 551, column: 9, scope: !12410)
!12429 = !DILocation(line: 551, column: 18, scope: !12410)
!12430 = !DILocation(line: 551, column: 27, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12410, file: !1167, line: 551, column: 18)
!12432 = !DILocation(line: 551, column: 29, scope: !12431)
!12433 = !DILocation(line: 551, column: 23, scope: !12431)
!12434 = !DILocation(line: 0, scope: !12410)
!12435 = !DILocation(line: 552, column: 14, scope: !12410)
!12436 = !DILocation(line: 552, column: 3, scope: !12410)
!12437 = !DILocation(line: 552, column: 38, scope: !12410)
!12438 = !DILocation(line: 552, column: 31, scope: !12410)
!12439 = !DILocation(line: 552, column: 29, scope: !12410)
!12440 = !DILocation(line: 553, column: 8, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12410, file: !1167, line: 553, column: 7)
!12442 = !DILocation(line: 553, column: 7, scope: !12410)
!12443 = !DILocation(line: 553, column: 28, scope: !12441)
!12444 = !DILocation(line: 553, column: 30, scope: !12441)
!12445 = !DILocation(line: 553, column: 24, scope: !12441)
!12446 = !DILocation(line: 554, column: 7, scope: !12410)
!12447 = !DILocation(line: 554, column: 16, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12410, file: !1167, line: 554, column: 7)
!12449 = !DILocation(line: 554, column: 18, scope: !12448)
!12450 = !DILocation(line: 554, column: 12, scope: !12448)
!12451 = !DILocation(line: 554, column: 28, scope: !12410)
!12452 = !DILocation(line: 555, column: 14, scope: !12410)
!12453 = !DILocation(line: 555, column: 3, scope: !12410)
!12454 = !DILocation(line: 555, column: 35, scope: !12410)
!12455 = !DILocation(line: 555, column: 24, scope: !12410)
!12456 = !DILocation(line: 547, column: 25, scope: !12411)
!12457 = !DILocation(line: 547, column: 12, scope: !12411)
!12458 = distinct !{!12458, !12407, !12459}
!12459 = !DILocation(line: 556, column: 2, scope: !12408)
!12460 = !DILocation(line: 558, column: 2, scope: !12279)
!12461 = !DILocation(line: 558, column: 20, scope: !12279)
!12462 = !DILocation(line: 559, column: 6, scope: !12279)
!12463 = !DILocation(line: 559, column: 39, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !1167, line: 559, column: 11)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !1167, line: 559, column: 11)
!12466 = distinct !DILexicalBlock(scope: !12279, file: !1167, line: 559, column: 6)
!12467 = !DILocation(line: 559, column: 41, scope: !12464)
!12468 = !DILocation(line: 559, column: 31, scope: !12464)
!12469 = !DILocation(line: 559, column: 21, scope: !12464)
!12470 = !DILocation(line: 559, column: 11, scope: !12465)
!12471 = distinct !{!12471, !12470, !12472}
!12472 = !DILocation(line: 559, column: 42, scope: !12465)
!12473 = !DILocation(line: 560, column: 6, scope: !12279)
!12474 = !DILocation(line: 560, column: 8, scope: !12279)
!12475 = !DILocation(line: 560, column: 19, scope: !12279)
!12476 = !DILocation(line: 561, column: 2, scope: !12279)
!12477 = !DILocation(line: 562, column: 1, scope: !12279)
!12478 = distinct !DISubprogram(name: "print_string_ptr", scope: !1167, file: !1167, line: 270, type: !12115, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12479)
!12479 = !{!12480, !12481, !12482, !12483, !12484, !12485}
!12480 = !DILocalVariable(name: "str", arg: 1, scope: !12478, file: !1167, line: 270, type: !331)
!12481 = !DILocalVariable(name: "ptr", scope: !12478, file: !1167, line: 272, type: !331)
!12482 = !DILocalVariable(name: "ptr2", scope: !12478, file: !1167, line: 272, type: !201)
!12483 = !DILocalVariable(name: "out", scope: !12478, file: !1167, line: 272, type: !201)
!12484 = !DILocalVariable(name: "len", scope: !12478, file: !1167, line: 272, type: !7)
!12485 = !DILocalVariable(name: "token", scope: !12478, file: !1167, line: 272, type: !58)
!12486 = !DILocation(line: 0, scope: !12478)
!12487 = !DILocation(line: 274, column: 7, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12478, file: !1167, line: 274, column: 6)
!12489 = !DILocation(line: 274, column: 6, scope: !12478)
!12490 = !DILocation(line: 275, column: 24, scope: !12478)
!12491 = !DILocation(line: 275, column: 17, scope: !12478)
!12492 = !DILocation(line: 275, column: 30, scope: !12478)
!12493 = !DILocation(line: 274, column: 19, scope: !12488)
!12494 = !DILocation(line: 274, column: 12, scope: !12488)
!12495 = !DILocation(line: 275, column: 33, scope: !12478)
!12496 = !DILocation(line: 275, column: 10, scope: !12478)
!12497 = !DILocation(line: 275, column: 45, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !1167, line: 275, column: 45)
!12499 = distinct !DILexicalBlock(scope: !12478, file: !1167, line: 275, column: 40)
!12500 = !DILocation(line: 275, column: 45, scope: !12499)
!12501 = !DILocation(line: 275, column: 113, scope: !12499)
!12502 = distinct !{!12502, !12496, !12503}
!12503 = !DILocation(line: 275, column: 116, scope: !12478)
!12504 = !DILocation(line: 277, column: 29, scope: !12478)
!12505 = !DILocation(line: 277, column: 13, scope: !12478)
!12506 = !DILocation(line: 278, column: 7, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12478, file: !1167, line: 278, column: 6)
!12508 = !DILocation(line: 278, column: 6, scope: !12478)
!12509 = !DILocation(line: 281, column: 7, scope: !12478)
!12510 = !DILocation(line: 281, column: 9, scope: !12478)
!12511 = !DILocation(line: 282, column: 9, scope: !12478)
!12512 = !DILocation(line: 282, column: 2, scope: !12478)
!12513 = !DILocation(line: 284, column: 26, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !1167, line: 284, column: 7)
!12515 = distinct !DILexicalBlock(scope: !12478, file: !1167, line: 283, column: 2)
!12516 = !DILocation(line: 284, column: 30, scope: !12514)
!12517 = !DILocation(line: 284, column: 64, scope: !12514)
!12518 = !DILocation(line: 284, column: 66, scope: !12514)
!12519 = !DILocation(line: 284, column: 59, scope: !12514)
!12520 = !DILocation(line: 287, column: 9, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12514, file: !1167, line: 286, column: 3)
!12522 = !DILocation(line: 287, column: 11, scope: !12521)
!12523 = !DILocation(line: 288, column: 18, scope: !12521)
!12524 = !DILocation(line: 288, column: 4, scope: !12521)
!12525 = !DILocation(line: 290, column: 21, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12521, file: !1167, line: 289, column: 4)
!12527 = !DILocation(line: 290, column: 23, scope: !12526)
!12528 = !DILocation(line: 290, column: 30, scope: !12526)
!12529 = !DILocation(line: 291, column: 21, scope: !12526)
!12530 = !DILocation(line: 291, column: 23, scope: !12526)
!12531 = !DILocation(line: 291, column: 30, scope: !12526)
!12532 = !DILocation(line: 292, column: 21, scope: !12526)
!12533 = !DILocation(line: 292, column: 23, scope: !12526)
!12534 = !DILocation(line: 292, column: 29, scope: !12526)
!12535 = !DILocation(line: 293, column: 21, scope: !12526)
!12536 = !DILocation(line: 293, column: 23, scope: !12526)
!12537 = !DILocation(line: 293, column: 29, scope: !12526)
!12538 = !DILocation(line: 294, column: 21, scope: !12526)
!12539 = !DILocation(line: 294, column: 23, scope: !12526)
!12540 = !DILocation(line: 294, column: 29, scope: !12526)
!12541 = !DILocation(line: 295, column: 21, scope: !12526)
!12542 = !DILocation(line: 295, column: 23, scope: !12526)
!12543 = !DILocation(line: 295, column: 29, scope: !12526)
!12544 = !DILocation(line: 296, column: 21, scope: !12526)
!12545 = !DILocation(line: 296, column: 23, scope: !12526)
!12546 = !DILocation(line: 296, column: 29, scope: !12526)
!12547 = !DILocation(line: 288, column: 12, scope: !12521)
!12548 = !DILocation(line: 297, column: 14, scope: !12526)
!12549 = !DILocation(line: 297, column: 46, scope: !12526)
!12550 = !DILocation(line: 297, column: 51, scope: !12526)
!12551 = !DILocation(line: 0, scope: !12514)
!12552 = distinct !{!12552, !12512, !12553}
!12553 = !DILocation(line: 300, column: 2, scope: !12478)
!12554 = !DILocation(line: 301, column: 7, scope: !12478)
!12555 = !DILocation(line: 301, column: 9, scope: !12478)
!12556 = !DILocation(line: 301, column: 22, scope: !12478)
!12557 = !DILocation(line: 302, column: 2, scope: !12478)
!12558 = !DILocation(line: 303, column: 1, scope: !12478)
!12559 = distinct !DISubprogram(name: "cJSON_PrintUnformatted", scope: !1167, file: !1167, line: 339, type: !12077, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12560)
!12560 = !{!12561}
!12561 = !DILocalVariable(name: "item", arg: 1, scope: !12559, file: !1167, line: 339, type: !1169)
!12562 = !DILocation(line: 0, scope: !12559)
!12563 = !DILocation(line: 339, column: 51, scope: !12559)
!12564 = !DILocation(line: 339, column: 44, scope: !12559)
!12565 = distinct !DISubprogram(name: "cJSON_GetArraySize", scope: !1167, file: !1167, line: 565, type: !12566, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12568)
!12566 = !DISubroutineType(types: !12567)
!12567 = !{!7, !1169}
!12568 = !{!12569, !12570, !12571}
!12569 = !DILocalVariable(name: "array", arg: 1, scope: !12565, file: !1167, line: 565, type: !1169)
!12570 = !DILocalVariable(name: "c", scope: !12565, file: !1167, line: 565, type: !1169)
!12571 = !DILocalVariable(name: "i", scope: !12565, file: !1167, line: 565, type: !7)
!12572 = !DILocation(line: 0, scope: !12565)
!12573 = !DILocation(line: 565, column: 64, scope: !12565)
!12574 = !DILocation(line: 565, column: 78, scope: !12565)
!12575 = !DILocation(line: 565, column: 87, scope: !12565)
!12576 = !DILocation(line: 565, column: 95, scope: !12565)
!12577 = distinct !{!12577, !12574, !12576}
!12578 = !DILocation(line: 565, column: 100, scope: !12565)
!12579 = distinct !DISubprogram(name: "cJSON_GetArrayItem", scope: !1167, file: !1167, line: 566, type: !12580, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12582)
!12580 = !DISubroutineType(types: !12581)
!12581 = !{!1169, !1169, !7}
!12582 = !{!12583, !12584, !12585}
!12583 = !DILocalVariable(name: "array", arg: 1, scope: !12579, file: !1167, line: 566, type: !1169)
!12584 = !DILocalVariable(name: "item", arg: 2, scope: !12579, file: !1167, line: 566, type: !7)
!12585 = !DILocalVariable(name: "c", scope: !12579, file: !1167, line: 566, type: !1169)
!12586 = !DILocation(line: 0, scope: !12579)
!12587 = !DILocation(line: 566, column: 70, scope: !12579)
!12588 = !DILocation(line: 566, column: 85, scope: !12579)
!12589 = !DILocation(line: 566, column: 87, scope: !12579)
!12590 = !DILocation(line: 566, column: 78, scope: !12579)
!12591 = !DILocation(line: 566, column: 102, scope: !12579)
!12592 = !DILocation(line: 566, column: 110, scope: !12579)
!12593 = distinct !{!12593, !12590, !12592}
!12594 = !DILocation(line: 566, column: 116, scope: !12579)
!12595 = distinct !DISubprogram(name: "cJSON_GetObjectItem", scope: !1167, file: !1167, line: 567, type: !12596, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12598)
!12596 = !DISubroutineType(types: !12597)
!12597 = !{!1169, !1169, !331}
!12598 = !{!12599, !12600, !12601}
!12599 = !DILocalVariable(name: "object", arg: 1, scope: !12595, file: !1167, line: 567, type: !1169)
!12600 = !DILocalVariable(name: "string", arg: 2, scope: !12595, file: !1167, line: 567, type: !331)
!12601 = !DILocalVariable(name: "c", scope: !12595, file: !1167, line: 567, type: !1169)
!12602 = !DILocation(line: 0, scope: !12595)
!12603 = !DILocation(line: 567, column: 80, scope: !12595)
!12604 = !DILocation(line: 567, column: 94, scope: !12595)
!12605 = !DILocation(line: 567, column: 96, scope: !12595)
!12606 = !DILocation(line: 567, column: 119, scope: !12595)
!12607 = !DILocation(line: 567, column: 99, scope: !12595)
!12608 = !DILocation(line: 567, column: 87, scope: !12595)
!12609 = !DILocation(line: 567, column: 140, scope: !12595)
!12610 = distinct !{!12610, !12608, !12609}
!12611 = !DILocation(line: 567, column: 146, scope: !12595)
!12612 = distinct !DISubprogram(name: "cJSON_strcasecmp", scope: !1167, file: !1167, line: 66, type: !12613, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12615)
!12613 = !DISubroutineType(types: !12614)
!12614 = !{!7, !331, !331}
!12615 = !{!12616, !12617, !12618, !12622, !12624, !12626}
!12616 = !DILocalVariable(name: "s1", arg: 1, scope: !12612, file: !1167, line: 66, type: !331)
!12617 = !DILocalVariable(name: "s2", arg: 2, scope: !12612, file: !1167, line: 66, type: !331)
!12618 = !DILocalVariable(name: "__x", scope: !12619, file: !1167, line: 69, type: !194)
!12619 = distinct !DILexicalBlock(scope: !12620, file: !1167, line: 69, column: 8)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !1167, line: 69, column: 2)
!12621 = distinct !DILexicalBlock(scope: !12612, file: !1167, line: 69, column: 2)
!12622 = !DILocalVariable(name: "__x", scope: !12623, file: !1167, line: 69, type: !194)
!12623 = distinct !DILexicalBlock(scope: !12620, file: !1167, line: 69, column: 47)
!12624 = !DILocalVariable(name: "__x", scope: !12625, file: !1167, line: 70, type: !194)
!12625 = distinct !DILexicalBlock(scope: !12612, file: !1167, line: 70, column: 9)
!12626 = !DILocalVariable(name: "__x", scope: !12627, file: !1167, line: 70, type: !194)
!12627 = distinct !DILexicalBlock(scope: !12612, file: !1167, line: 70, column: 47)
!12628 = !DILocation(line: 0, scope: !12612)
!12629 = !DILocation(line: 68, column: 7, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12612, file: !1167, line: 68, column: 6)
!12631 = !DILocation(line: 68, column: 6, scope: !12612)
!12632 = !DILocation(line: 68, column: 21, scope: !12630)
!12633 = !DILocation(line: 68, column: 18, scope: !12630)
!12634 = !DILocation(line: 68, column: 11, scope: !12630)
!12635 = !DILocation(line: 68, column: 36, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12612, file: !1167, line: 68, column: 35)
!12637 = !DILocation(line: 68, column: 35, scope: !12612)
!12638 = !DILocation(line: 69, column: 8, scope: !12619)
!12639 = !DILocation(line: 0, scope: !12619)
!12640 = !DILocation(line: 69, column: 47, scope: !12623)
!12641 = !DILocation(line: 0, scope: !12623)
!12642 = !DILocation(line: 69, column: 44, scope: !12620)
!12643 = !DILocation(line: 69, column: 2, scope: !12621)
!12644 = !DILocation(line: 69, column: 103, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12620, file: !1167, line: 69, column: 99)
!12646 = !DILocation(line: 69, column: 99, scope: !12620)
!12647 = !DILocation(line: 69, column: 84, scope: !12620)
!12648 = !DILocation(line: 69, column: 90, scope: !12620)
!12649 = distinct !{!12649, !12643, !12650}
!12650 = !DILocation(line: 69, column: 116, scope: !12621)
!12651 = !DILocation(line: 70, column: 45, scope: !12612)
!12652 = !DILocation(line: 70, column: 2, scope: !12612)
!12653 = !DILocation(line: 71, column: 1, scope: !12612)
!12654 = distinct !DISubprogram(name: "cJSON_AddItemToArray", scope: !1167, file: !1167, line: 575, type: !12655, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12657)
!12655 = !DISubroutineType(types: !12656)
!12656 = !{null, !1169, !1169}
!12657 = !{!12658, !12659, !12660}
!12658 = !DILocalVariable(name: "array", arg: 1, scope: !12654, file: !1167, line: 575, type: !1169)
!12659 = !DILocalVariable(name: "item", arg: 2, scope: !12654, file: !1167, line: 575, type: !1169)
!12660 = !DILocalVariable(name: "c", scope: !12654, file: !1167, line: 575, type: !1169)
!12661 = !DILocation(line: 0, scope: !12654)
!12662 = !DILocation(line: 575, column: 78, scope: !12654)
!12663 = !DILocation(line: 575, column: 89, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12654, file: !1167, line: 575, column: 88)
!12665 = !DILocation(line: 575, column: 88, scope: !12654)
!12666 = !DILocation(line: 575, column: 108, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12654, file: !1167, line: 575, column: 107)
!12668 = !DILocation(line: 575, column: 107, scope: !12654)
!12669 = !DILocation(line: 575, column: 124, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12667, file: !1167, line: 575, column: 111)
!12671 = !DILocation(line: 575, column: 130, scope: !12670)
!12672 = !DILocation(line: 575, column: 153, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12667, file: !1167, line: 575, column: 137)
!12674 = !DILocation(line: 575, column: 147, scope: !12673)
!12675 = !DILocation(line: 575, column: 138, scope: !12673)
!12676 = distinct !{!12676, !12675, !12677}
!12677 = !DILocation(line: 575, column: 164, scope: !12673)
!12678 = !DILocation(line: 575, column: 170, scope: !12673)
!12679 = !DILocation(line: 575, column: 193, scope: !12654)
!12680 = distinct !DISubprogram(name: "suffix_object", scope: !1167, file: !1167, line: 570, type: !12655, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12681)
!12681 = !{!12682, !12683}
!12682 = !DILocalVariable(name: "prev", arg: 1, scope: !12680, file: !1167, line: 570, type: !1169)
!12683 = !DILocalVariable(name: "item", arg: 2, scope: !12680, file: !1167, line: 570, type: !1169)
!12684 = !DILocation(line: 0, scope: !12680)
!12685 = !DILocation(line: 570, column: 59, scope: !12680)
!12686 = !DILocation(line: 570, column: 63, scope: !12680)
!12687 = !DILocation(line: 570, column: 75, scope: !12680)
!12688 = !DILocation(line: 570, column: 79, scope: !12680)
!12689 = !DILocation(line: 570, column: 85, scope: !12680)
!12690 = distinct !DISubprogram(name: "cJSON_AddItemToObject", scope: !1167, file: !1167, line: 576, type: !12691, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12693)
!12691 = !DISubroutineType(types: !12692)
!12692 = !{null, !1169, !331, !1169}
!12693 = !{!12694, !12695, !12696}
!12694 = !DILocalVariable(name: "object", arg: 1, scope: !12690, file: !1167, line: 576, type: !1169)
!12695 = !DILocalVariable(name: "string", arg: 2, scope: !12690, file: !1167, line: 576, type: !331)
!12696 = !DILocalVariable(name: "item", arg: 3, scope: !12690, file: !1167, line: 576, type: !1169)
!12697 = !DILocation(line: 0, scope: !12690)
!12698 = !DILocation(line: 576, column: 82, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12690, file: !1167, line: 576, column: 81)
!12700 = !DILocation(line: 576, column: 81, scope: !12690)
!12701 = !DILocation(line: 576, column: 106, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12690, file: !1167, line: 576, column: 100)
!12703 = !DILocation(line: 576, column: 100, scope: !12702)
!12704 = !DILocation(line: 576, column: 100, scope: !12690)
!12705 = !DILocation(line: 576, column: 114, scope: !12702)
!12706 = !DILocation(line: 576, column: 152, scope: !12690)
!12707 = !DILocation(line: 576, column: 151, scope: !12690)
!12708 = !DILocation(line: 576, column: 173, scope: !12690)
!12709 = !DILocation(line: 576, column: 207, scope: !12690)
!12710 = distinct !DISubprogram(name: "cJSON_AddItemReferenceToArray", scope: !1167, file: !1167, line: 577, type: !12655, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12711)
!12711 = !{!12712, !12713}
!12712 = !DILocalVariable(name: "array", arg: 1, scope: !12710, file: !1167, line: 577, type: !1169)
!12713 = !DILocalVariable(name: "item", arg: 2, scope: !12710, file: !1167, line: 577, type: !1169)
!12714 = !DILocation(line: 0, scope: !12710)
!12715 = !DILocation(line: 577, column: 96, scope: !12710)
!12716 = !DILocation(line: 577, column: 69, scope: !12710)
!12717 = !DILocation(line: 577, column: 120, scope: !12710)
!12718 = distinct !DISubprogram(name: "create_reference", scope: !1167, file: !1167, line: 572, type: !12719, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12721)
!12719 = !DISubroutineType(types: !12720)
!12720 = !{!1169, !1169}
!12721 = !{!12722, !12723}
!12722 = !DILocalVariable(name: "item", arg: 1, scope: !12718, file: !1167, line: 572, type: !1169)
!12723 = !DILocalVariable(name: "ref", scope: !12718, file: !1167, line: 572, type: !1169)
!12724 = !DILocation(line: 0, scope: !12718)
!12725 = !DILocation(line: 572, column: 57, scope: !12718)
!12726 = !DILocation(line: 572, column: 79, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12718, file: !1167, line: 572, column: 78)
!12728 = !DILocation(line: 572, column: 78, scope: !12718)
!12729 = !DILocation(line: 572, column: 100, scope: !12718)
!12730 = !DILocation(line: 572, column: 104, scope: !12718)
!12731 = !DILocation(line: 572, column: 93, scope: !12718)
!12732 = !DILocation(line: 572, column: 129, scope: !12718)
!12733 = !DILocation(line: 572, column: 135, scope: !12718)
!12734 = !DILocation(line: 572, column: 143, scope: !12718)
!12735 = !DILocation(line: 572, column: 147, scope: !12718)
!12736 = !DILocation(line: 572, column: 182, scope: !12718)
!12737 = !DILocation(line: 572, column: 186, scope: !12718)
!12738 = !DILocation(line: 572, column: 172, scope: !12718)
!12739 = !DILocation(line: 572, column: 176, scope: !12718)
!12740 = !DILocation(line: 572, column: 189, scope: !12718)
!12741 = !DILocation(line: 572, column: 200, scope: !12718)
!12742 = distinct !DISubprogram(name: "cJSON_AddItemReferenceToObject", scope: !1167, file: !1167, line: 578, type: !12691, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12743)
!12743 = !{!12744, !12745, !12746}
!12744 = !DILocalVariable(name: "object", arg: 1, scope: !12742, file: !1167, line: 578, type: !1169)
!12745 = !DILocalVariable(name: "string", arg: 2, scope: !12742, file: !1167, line: 578, type: !331)
!12746 = !DILocalVariable(name: "item", arg: 3, scope: !12742, file: !1167, line: 578, type: !1169)
!12747 = !DILocation(line: 0, scope: !12742)
!12748 = !DILocation(line: 578, column: 120, scope: !12742)
!12749 = !DILocation(line: 578, column: 84, scope: !12742)
!12750 = !DILocation(line: 578, column: 144, scope: !12742)
!12751 = distinct !DISubprogram(name: "cJSON_DetachItemFromArray", scope: !1167, file: !1167, line: 580, type: !12580, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12752)
!12752 = !{!12753, !12754, !12755}
!12753 = !DILocalVariable(name: "array", arg: 1, scope: !12751, file: !1167, line: 580, type: !1169)
!12754 = !DILocalVariable(name: "which", arg: 2, scope: !12751, file: !1167, line: 580, type: !7)
!12755 = !DILocalVariable(name: "c", scope: !12751, file: !1167, line: 580, type: !1169)
!12756 = !DILocation(line: 0, scope: !12751)
!12757 = !DILocation(line: 580, column: 77, scope: !12751)
!12758 = !DILocation(line: 580, column: 90, scope: !12751)
!12759 = !DILocation(line: 580, column: 92, scope: !12751)
!12760 = !DILocation(line: 580, column: 83, scope: !12751)
!12761 = !DILocation(line: 580, column: 109, scope: !12751)
!12762 = !DILocation(line: 580, column: 119, scope: !12751)
!12763 = distinct !{!12763, !12760, !12762}
!12764 = !DILocation(line: 580, column: 126, scope: !12751)
!12765 = !DILocation(line: 581, column: 9, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12751, file: !1167, line: 581, column: 6)
!12767 = !DILocation(line: 581, column: 6, scope: !12766)
!12768 = !DILocation(line: 581, column: 6, scope: !12751)
!12769 = !DILocation(line: 581, column: 32, scope: !12766)
!12770 = !DILocation(line: 581, column: 24, scope: !12766)
!12771 = !DILocation(line: 581, column: 28, scope: !12766)
!12772 = !DILocation(line: 581, column: 15, scope: !12766)
!12773 = !DILocation(line: 581, column: 44, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12751, file: !1167, line: 581, column: 41)
!12775 = !DILocation(line: 581, column: 41, scope: !12774)
!12776 = !DILocation(line: 581, column: 41, scope: !12751)
!12777 = !DILocation(line: 581, column: 67, scope: !12774)
!12778 = !DILocation(line: 581, column: 59, scope: !12774)
!12779 = !DILocation(line: 581, column: 63, scope: !12774)
!12780 = !DILocation(line: 581, column: 50, scope: !12774)
!12781 = !DILocation(line: 581, column: 86, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12751, file: !1167, line: 581, column: 76)
!12783 = !DILocation(line: 581, column: 77, scope: !12782)
!12784 = !DILocation(line: 581, column: 76, scope: !12751)
!12785 = !DILocation(line: 581, column: 109, scope: !12782)
!12786 = !DILocation(line: 581, column: 105, scope: !12782)
!12787 = !DILocation(line: 581, column: 93, scope: !12782)
!12788 = !DILocation(line: 581, column: 129, scope: !12751)
!12789 = !DILocation(line: 581, column: 121, scope: !12751)
!12790 = !DILocation(line: 581, column: 132, scope: !12751)
!12791 = !DILocation(line: 581, column: 141, scope: !12751)
!12792 = distinct !DISubprogram(name: "cJSON_DeleteItemFromArray", scope: !1167, file: !1167, line: 582, type: !12793, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12795)
!12793 = !DISubroutineType(types: !12794)
!12794 = !{null, !1169, !7}
!12795 = !{!12796, !12797}
!12796 = !DILocalVariable(name: "array", arg: 1, scope: !12792, file: !1167, line: 582, type: !1169)
!12797 = !DILocalVariable(name: "which", arg: 2, scope: !12792, file: !1167, line: 582, type: !7)
!12798 = !DILocation(line: 0, scope: !12792)
!12799 = !DILocation(line: 582, column: 74, scope: !12792)
!12800 = !DILocation(line: 582, column: 61, scope: !12792)
!12801 = !DILocation(line: 582, column: 114, scope: !12792)
!12802 = distinct !DISubprogram(name: "cJSON_DetachItemFromObject", scope: !1167, file: !1167, line: 583, type: !12596, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12803)
!12803 = !{!12804, !12805, !12806, !12807}
!12804 = !DILocalVariable(name: "object", arg: 1, scope: !12802, file: !1167, line: 583, type: !1169)
!12805 = !DILocalVariable(name: "string", arg: 2, scope: !12802, file: !1167, line: 583, type: !331)
!12806 = !DILocalVariable(name: "i", scope: !12802, file: !1167, line: 583, type: !7)
!12807 = !DILocalVariable(name: "c", scope: !12802, file: !1167, line: 583, type: !1169)
!12808 = !DILocation(line: 0, scope: !12802)
!12809 = !DILocation(line: 583, column: 95, scope: !12802)
!12810 = !DILocation(line: 583, column: 108, scope: !12802)
!12811 = !DILocation(line: 583, column: 110, scope: !12802)
!12812 = !DILocation(line: 583, column: 133, scope: !12802)
!12813 = !DILocation(line: 583, column: 113, scope: !12802)
!12814 = !DILocation(line: 583, column: 101, scope: !12802)
!12815 = !DILocation(line: 583, column: 150, scope: !12802)
!12816 = !DILocation(line: 583, column: 158, scope: !12802)
!12817 = distinct !{!12817, !12814, !12816}
!12818 = !DILocation(line: 583, column: 177, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12802, file: !1167, line: 583, column: 167)
!12820 = !DILocation(line: 583, column: 170, scope: !12819)
!12821 = !DILocation(line: 583, column: 222, scope: !12802)
!12822 = distinct !DISubprogram(name: "cJSON_DeleteItemFromObject", scope: !1167, file: !1167, line: 584, type: !12823, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12825)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{null, !1169, !331}
!12825 = !{!12826, !12827}
!12826 = !DILocalVariable(name: "object", arg: 1, scope: !12822, file: !1167, line: 584, type: !1169)
!12827 = !DILocalVariable(name: "string", arg: 2, scope: !12822, file: !1167, line: 584, type: !331)
!12828 = !DILocation(line: 0, scope: !12822)
!12829 = !DILocation(line: 584, column: 83, scope: !12822)
!12830 = !DILocation(line: 584, column: 70, scope: !12822)
!12831 = !DILocation(line: 584, column: 126, scope: !12822)
!12832 = distinct !DISubprogram(name: "cJSON_ReplaceItemInArray", scope: !1167, file: !1167, line: 587, type: !12833, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12835)
!12833 = !DISubroutineType(types: !12834)
!12834 = !{null, !1169, !7, !1169}
!12835 = !{!12836, !12837, !12838, !12839}
!12836 = !DILocalVariable(name: "array", arg: 1, scope: !12832, file: !1167, line: 587, type: !1169)
!12837 = !DILocalVariable(name: "which", arg: 2, scope: !12832, file: !1167, line: 587, type: !7)
!12838 = !DILocalVariable(name: "newitem", arg: 3, scope: !12832, file: !1167, line: 587, type: !1169)
!12839 = !DILocalVariable(name: "c", scope: !12832, file: !1167, line: 587, type: !1169)
!12840 = !DILocation(line: 0, scope: !12832)
!12841 = !DILocation(line: 587, column: 90, scope: !12832)
!12842 = !DILocation(line: 587, column: 103, scope: !12832)
!12843 = !DILocation(line: 587, column: 105, scope: !12832)
!12844 = !DILocation(line: 587, column: 96, scope: !12832)
!12845 = !DILocation(line: 587, column: 122, scope: !12832)
!12846 = !DILocation(line: 587, column: 132, scope: !12832)
!12847 = distinct !{!12847, !12844, !12846}
!12848 = !DILocation(line: 587, column: 139, scope: !12832)
!12849 = !DILocation(line: 588, column: 19, scope: !12832)
!12850 = !DILocation(line: 588, column: 11, scope: !12832)
!12851 = !DILocation(line: 588, column: 15, scope: !12832)
!12852 = !DILocation(line: 588, column: 41, scope: !12832)
!12853 = !DILocation(line: 588, column: 33, scope: !12832)
!12854 = !DILocation(line: 588, column: 37, scope: !12832)
!12855 = !DILocation(line: 588, column: 50, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12832, file: !1167, line: 588, column: 50)
!12857 = !DILocation(line: 588, column: 50, scope: !12832)
!12858 = !DILocation(line: 588, column: 80, scope: !12856)
!12859 = !DILocation(line: 588, column: 84, scope: !12856)
!12860 = !DILocation(line: 588, column: 65, scope: !12856)
!12861 = !DILocation(line: 589, column: 16, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12832, file: !1167, line: 589, column: 6)
!12863 = !DILocation(line: 589, column: 7, scope: !12862)
!12864 = !DILocation(line: 589, column: 6, scope: !12832)
!12865 = !DILocation(line: 589, column: 59, scope: !12862)
!12866 = !DILocation(line: 589, column: 65, scope: !12862)
!12867 = !DILocation(line: 0, scope: !12862)
!12868 = !DILocation(line: 589, column: 93, scope: !12832)
!12869 = !DILocation(line: 589, column: 85, scope: !12832)
!12870 = !DILocation(line: 589, column: 96, scope: !12832)
!12871 = !DILocation(line: 589, column: 112, scope: !12832)
!12872 = distinct !DISubprogram(name: "cJSON_ReplaceItemInObject", scope: !1167, file: !1167, line: 590, type: !12691, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12873)
!12873 = !{!12874, !12875, !12876, !12877, !12878}
!12874 = !DILocalVariable(name: "object", arg: 1, scope: !12872, file: !1167, line: 590, type: !1169)
!12875 = !DILocalVariable(name: "string", arg: 2, scope: !12872, file: !1167, line: 590, type: !331)
!12876 = !DILocalVariable(name: "newitem", arg: 3, scope: !12872, file: !1167, line: 590, type: !1169)
!12877 = !DILocalVariable(name: "i", scope: !12872, file: !1167, line: 590, type: !7)
!12878 = !DILocalVariable(name: "c", scope: !12872, file: !1167, line: 590, type: !1169)
!12879 = !DILocation(line: 0, scope: !12872)
!12880 = !DILocation(line: 590, column: 108, scope: !12872)
!12881 = !DILocation(line: 590, column: 120, scope: !12872)
!12882 = !DILocation(line: 590, column: 122, scope: !12872)
!12883 = !DILocation(line: 590, column: 145, scope: !12872)
!12884 = !DILocation(line: 590, column: 125, scope: !12872)
!12885 = !DILocation(line: 590, column: 114, scope: !12872)
!12886 = !DILocation(line: 590, column: 161, scope: !12872)
!12887 = !DILocation(line: 590, column: 169, scope: !12872)
!12888 = distinct !{!12888, !12885, !12887}
!12889 = !DILocation(line: 590, column: 196, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12891, file: !1167, line: 590, column: 179)
!12891 = distinct !DILexicalBlock(scope: !12872, file: !1167, line: 590, column: 177)
!12892 = !DILocation(line: 590, column: 189, scope: !12890)
!12893 = !DILocation(line: 590, column: 195, scope: !12890)
!12894 = !DILocation(line: 590, column: 217, scope: !12890)
!12895 = !DILocation(line: 590, column: 260, scope: !12890)
!12896 = !DILocation(line: 590, column: 261, scope: !12872)
!12897 = distinct !DISubprogram(name: "cJSON_CreateNull", scope: !1167, file: !1167, line: 593, type: !11555, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12898)
!12898 = !{!12899}
!12899 = !DILocalVariable(name: "item", scope: !12897, file: !1167, line: 593, type: !1169)
!12900 = !DILocation(line: 593, column: 48, scope: !12897)
!12901 = !DILocation(line: 0, scope: !12897)
!12902 = !DILocation(line: 593, column: 68, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12897, file: !1167, line: 593, column: 68)
!12904 = !DILocation(line: 593, column: 68, scope: !12897)
!12905 = !DILocation(line: 593, column: 79, scope: !12903)
!12906 = !DILocation(line: 593, column: 83, scope: !12903)
!12907 = !DILocation(line: 593, column: 73, scope: !12903)
!12908 = !DILocation(line: 593, column: 95, scope: !12897)
!12909 = distinct !DISubprogram(name: "cJSON_CreateTrue", scope: !1167, file: !1167, line: 594, type: !11555, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12910)
!12910 = !{!12911}
!12911 = !DILocalVariable(name: "item", scope: !12909, file: !1167, line: 594, type: !1169)
!12912 = !DILocation(line: 594, column: 48, scope: !12909)
!12913 = !DILocation(line: 0, scope: !12909)
!12914 = !DILocation(line: 594, column: 68, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12909, file: !1167, line: 594, column: 68)
!12916 = !DILocation(line: 594, column: 68, scope: !12909)
!12917 = !DILocation(line: 594, column: 79, scope: !12915)
!12918 = !DILocation(line: 594, column: 83, scope: !12915)
!12919 = !DILocation(line: 594, column: 73, scope: !12915)
!12920 = !DILocation(line: 594, column: 95, scope: !12909)
!12921 = distinct !DISubprogram(name: "cJSON_CreateFalse", scope: !1167, file: !1167, line: 595, type: !11555, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12922)
!12922 = !{!12923}
!12923 = !DILocalVariable(name: "item", scope: !12921, file: !1167, line: 595, type: !1169)
!12924 = !DILocation(line: 595, column: 49, scope: !12921)
!12925 = !DILocation(line: 0, scope: !12921)
!12926 = !DILocation(line: 595, column: 69, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12921, file: !1167, line: 595, column: 69)
!12928 = !DILocation(line: 595, column: 69, scope: !12921)
!12929 = !DILocation(line: 595, column: 80, scope: !12927)
!12930 = !DILocation(line: 595, column: 84, scope: !12927)
!12931 = !DILocation(line: 595, column: 74, scope: !12927)
!12932 = !DILocation(line: 595, column: 97, scope: !12921)
!12933 = distinct !DISubprogram(name: "cJSON_CreateBool", scope: !1167, file: !1167, line: 596, type: !12934, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12936)
!12934 = !DISubroutineType(types: !12935)
!12935 = !{!1169, !7}
!12936 = !{!12937, !12938}
!12937 = !DILocalVariable(name: "b", arg: 1, scope: !12933, file: !1167, line: 596, type: !7)
!12938 = !DILocalVariable(name: "item", scope: !12933, file: !1167, line: 596, type: !1169)
!12939 = !DILocation(line: 0, scope: !12933)
!12940 = !DILocation(line: 596, column: 49, scope: !12933)
!12941 = !DILocation(line: 596, column: 69, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12933, file: !1167, line: 596, column: 69)
!12943 = !DILocation(line: 596, column: 69, scope: !12933)
!12944 = !DILocation(line: 596, column: 85, scope: !12942)
!12945 = !DILocation(line: 596, column: 80, scope: !12942)
!12946 = !DILocation(line: 596, column: 84, scope: !12942)
!12947 = !DILocation(line: 596, column: 74, scope: !12942)
!12948 = !DILocation(line: 596, column: 110, scope: !12933)
!12949 = distinct !DISubprogram(name: "cJSON_CreateNumber", scope: !1167, file: !1167, line: 597, type: !12950, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12952)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!1169, !1182}
!12952 = !{!12953, !12954}
!12953 = !DILocalVariable(name: "num", arg: 1, scope: !12949, file: !1167, line: 597, type: !1182)
!12954 = !DILocalVariable(name: "item", scope: !12949, file: !1167, line: 597, type: !1169)
!12955 = !DILocation(line: 0, scope: !12949)
!12956 = !DILocation(line: 597, column: 54, scope: !12949)
!12957 = !DILocation(line: 597, column: 74, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12949, file: !1167, line: 597, column: 74)
!12959 = !DILocation(line: 597, column: 74, scope: !12949)
!12960 = !DILocation(line: 597, column: 86, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12958, file: !1167, line: 597, column: 79)
!12962 = !DILocation(line: 597, column: 90, scope: !12961)
!12963 = !DILocation(line: 597, column: 110, scope: !12961)
!12964 = !DILocation(line: 597, column: 121, scope: !12961)
!12965 = !DILocation(line: 597, column: 141, scope: !12961)
!12966 = !DILocation(line: 597, column: 132, scope: !12961)
!12967 = !DILocation(line: 597, column: 140, scope: !12961)
!12968 = !DILocation(line: 597, column: 150, scope: !12961)
!12969 = !DILocation(line: 597, column: 151, scope: !12949)
!12970 = distinct !DISubprogram(name: "cJSON_CreateString", scope: !1167, file: !1167, line: 598, type: !12069, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12971)
!12971 = !{!12972, !12973}
!12972 = !DILocalVariable(name: "string", arg: 1, scope: !12970, file: !1167, line: 598, type: !331)
!12973 = !DILocalVariable(name: "item", scope: !12970, file: !1167, line: 598, type: !1169)
!12974 = !DILocation(line: 0, scope: !12970)
!12975 = !DILocation(line: 598, column: 60, scope: !12970)
!12976 = !DILocation(line: 598, column: 80, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12970, file: !1167, line: 598, column: 80)
!12978 = !DILocation(line: 598, column: 80, scope: !12970)
!12979 = !DILocation(line: 598, column: 92, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12977, file: !1167, line: 598, column: 85)
!12981 = !DILocation(line: 598, column: 96, scope: !12980)
!12982 = !DILocation(line: 598, column: 128, scope: !12980)
!12983 = !DILocation(line: 598, column: 116, scope: !12980)
!12984 = !DILocation(line: 598, column: 127, scope: !12980)
!12985 = !DILocation(line: 598, column: 149, scope: !12980)
!12986 = !DILocation(line: 598, column: 150, scope: !12970)
!12987 = distinct !DISubprogram(name: "cJSON_CreateArray", scope: !1167, file: !1167, line: 599, type: !11555, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !12988)
!12988 = !{!12989}
!12989 = !DILocalVariable(name: "item", scope: !12987, file: !1167, line: 599, type: !1169)
!12990 = !DILocation(line: 599, column: 49, scope: !12987)
!12991 = !DILocation(line: 0, scope: !12987)
!12992 = !DILocation(line: 599, column: 69, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12987, file: !1167, line: 599, column: 69)
!12994 = !DILocation(line: 599, column: 69, scope: !12987)
!12995 = !DILocation(line: 599, column: 80, scope: !12993)
!12996 = !DILocation(line: 599, column: 84, scope: !12993)
!12997 = !DILocation(line: 599, column: 74, scope: !12993)
!12998 = !DILocation(line: 599, column: 97, scope: !12987)
!12999 = distinct !DISubprogram(name: "cJSON_CreateObject", scope: !1167, file: !1167, line: 600, type: !11555, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !13000)
!13000 = !{!13001}
!13001 = !DILocalVariable(name: "item", scope: !12999, file: !1167, line: 600, type: !1169)
!13002 = !DILocation(line: 600, column: 50, scope: !12999)
!13003 = !DILocation(line: 0, scope: !12999)
!13004 = !DILocation(line: 600, column: 70, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12999, file: !1167, line: 600, column: 70)
!13006 = !DILocation(line: 600, column: 70, scope: !12999)
!13007 = !DILocation(line: 600, column: 81, scope: !13005)
!13008 = !DILocation(line: 600, column: 85, scope: !13005)
!13009 = !DILocation(line: 600, column: 75, scope: !13005)
!13010 = !DILocation(line: 600, column: 99, scope: !12999)
!13011 = distinct !DISubprogram(name: "cJSON_CreateIntArray", scope: !1167, file: !1167, line: 603, type: !13012, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !13016)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{!1169, !13014, !7}
!13014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13015, size: 32)
!13015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!13016 = !{!13017, !13018, !13019, !13020, !13021, !13022}
!13017 = !DILocalVariable(name: "numbers", arg: 1, scope: !13011, file: !1167, line: 603, type: !13014)
!13018 = !DILocalVariable(name: "count", arg: 2, scope: !13011, file: !1167, line: 603, type: !7)
!13019 = !DILocalVariable(name: "i", scope: !13011, file: !1167, line: 603, type: !7)
!13020 = !DILocalVariable(name: "n", scope: !13011, file: !1167, line: 603, type: !1169)
!13021 = !DILocalVariable(name: "p", scope: !13011, file: !1167, line: 603, type: !1169)
!13022 = !DILocalVariable(name: "a", scope: !13011, file: !1167, line: 603, type: !1169)
!13023 = !DILocation(line: 0, scope: !13011)
!13024 = !DILocation(line: 603, column: 86, scope: !13011)
!13025 = !DILocation(line: 603, column: 116, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !1167, line: 603, column: 106)
!13027 = distinct !DILexicalBlock(scope: !13011, file: !1167, line: 603, column: 106)
!13028 = !DILocation(line: 603, column: 106, scope: !13027)
!13029 = !DILocation(line: 603, column: 153, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13026, file: !1167, line: 603, column: 131)
!13031 = !DILocation(line: 603, column: 134, scope: !13030)
!13032 = !DILocation(line: 603, column: 169, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13030, file: !1167, line: 603, column: 168)
!13034 = !DILocation(line: 603, column: 168, scope: !13030)
!13035 = !DILocation(line: 603, column: 179, scope: !13033)
!13036 = !DILocation(line: 603, column: 171, scope: !13033)
!13037 = !DILocation(line: 603, column: 187, scope: !13033)
!13038 = !DILocation(line: 603, column: 128, scope: !13026)
!13039 = distinct !{!13039, !13028, !13040}
!13040 = !DILocation(line: 603, column: 210, scope: !13027)
!13041 = !DILocation(line: 603, column: 211, scope: !13011)
!13042 = distinct !DISubprogram(name: "cJSON_CreateFloatArray", scope: !1167, file: !1167, line: 604, type: !13043, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !13048)
!13043 = !DISubroutineType(types: !13044)
!13044 = !{!1169, !13045, !7}
!13045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13046, size: 32)
!13046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13047)
!13047 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!13048 = !{!13049, !13050, !13051, !13052, !13053, !13054}
!13049 = !DILocalVariable(name: "numbers", arg: 1, scope: !13042, file: !1167, line: 604, type: !13045)
!13050 = !DILocalVariable(name: "count", arg: 2, scope: !13042, file: !1167, line: 604, type: !7)
!13051 = !DILocalVariable(name: "i", scope: !13042, file: !1167, line: 604, type: !7)
!13052 = !DILocalVariable(name: "n", scope: !13042, file: !1167, line: 604, type: !1169)
!13053 = !DILocalVariable(name: "p", scope: !13042, file: !1167, line: 604, type: !1169)
!13054 = !DILocalVariable(name: "a", scope: !13042, file: !1167, line: 604, type: !1169)
!13055 = !DILocation(line: 0, scope: !13042)
!13056 = !DILocation(line: 604, column: 89, scope: !13042)
!13057 = !DILocation(line: 604, column: 119, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13059, file: !1167, line: 604, column: 109)
!13059 = distinct !DILexicalBlock(scope: !13042, file: !1167, line: 604, column: 109)
!13060 = !DILocation(line: 604, column: 109, scope: !13059)
!13061 = !DILocation(line: 604, column: 156, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13058, file: !1167, line: 604, column: 134)
!13063 = !DILocation(line: 604, column: 137, scope: !13062)
!13064 = !DILocation(line: 604, column: 172, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13062, file: !1167, line: 604, column: 171)
!13066 = !DILocation(line: 604, column: 171, scope: !13062)
!13067 = !DILocation(line: 604, column: 182, scope: !13065)
!13068 = !DILocation(line: 604, column: 174, scope: !13065)
!13069 = !DILocation(line: 604, column: 190, scope: !13065)
!13070 = !DILocation(line: 604, column: 131, scope: !13058)
!13071 = distinct !{!13071, !13060, !13072}
!13072 = !DILocation(line: 604, column: 213, scope: !13059)
!13073 = !DILocation(line: 604, column: 214, scope: !13042)
!13074 = distinct !DISubprogram(name: "cJSON_CreateDoubleArray", scope: !1167, file: !1167, line: 605, type: !13075, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !13079)
!13075 = !DISubroutineType(types: !13076)
!13076 = !{!1169, !13077, !7}
!13077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13078, size: 32)
!13078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!13079 = !{!13080, !13081, !13082, !13083, !13084, !13085}
!13080 = !DILocalVariable(name: "numbers", arg: 1, scope: !13074, file: !1167, line: 605, type: !13077)
!13081 = !DILocalVariable(name: "count", arg: 2, scope: !13074, file: !1167, line: 605, type: !7)
!13082 = !DILocalVariable(name: "i", scope: !13074, file: !1167, line: 605, type: !7)
!13083 = !DILocalVariable(name: "n", scope: !13074, file: !1167, line: 605, type: !1169)
!13084 = !DILocalVariable(name: "p", scope: !13074, file: !1167, line: 605, type: !1169)
!13085 = !DILocalVariable(name: "a", scope: !13074, file: !1167, line: 605, type: !1169)
!13086 = !DILocation(line: 0, scope: !13074)
!13087 = !DILocation(line: 605, column: 91, scope: !13074)
!13088 = !DILocation(line: 605, column: 121, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13090, file: !1167, line: 605, column: 111)
!13090 = distinct !DILexicalBlock(scope: !13074, file: !1167, line: 605, column: 111)
!13091 = !DILocation(line: 605, column: 111, scope: !13090)
!13092 = !DILocation(line: 605, column: 158, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13089, file: !1167, line: 605, column: 136)
!13094 = !DILocation(line: 605, column: 139, scope: !13093)
!13095 = !DILocation(line: 605, column: 174, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13093, file: !1167, line: 605, column: 173)
!13097 = !DILocation(line: 605, column: 173, scope: !13093)
!13098 = !DILocation(line: 605, column: 184, scope: !13096)
!13099 = !DILocation(line: 605, column: 176, scope: !13096)
!13100 = !DILocation(line: 605, column: 192, scope: !13096)
!13101 = !DILocation(line: 605, column: 133, scope: !13089)
!13102 = distinct !{!13102, !13091, !13103}
!13103 = !DILocation(line: 605, column: 215, scope: !13090)
!13104 = !DILocation(line: 605, column: 216, scope: !13074)
!13105 = distinct !DISubprogram(name: "cJSON_CreateStringArray", scope: !1167, file: !1167, line: 606, type: !13106, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !13108)
!13106 = !DISubroutineType(types: !13107)
!13107 = !{!1169, !11515, !7}
!13108 = !{!13109, !13110, !13111, !13112, !13113, !13114}
!13109 = !DILocalVariable(name: "strings", arg: 1, scope: !13105, file: !1167, line: 606, type: !11515)
!13110 = !DILocalVariable(name: "count", arg: 2, scope: !13105, file: !1167, line: 606, type: !7)
!13111 = !DILocalVariable(name: "i", scope: !13105, file: !1167, line: 606, type: !7)
!13112 = !DILocalVariable(name: "n", scope: !13105, file: !1167, line: 606, type: !1169)
!13113 = !DILocalVariable(name: "p", scope: !13105, file: !1167, line: 606, type: !1169)
!13114 = !DILocalVariable(name: "a", scope: !13105, file: !1167, line: 606, type: !1169)
!13115 = !DILocation(line: 0, scope: !13105)
!13116 = !DILocation(line: 606, column: 90, scope: !13105)
!13117 = !DILocation(line: 606, column: 120, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13119, file: !1167, line: 606, column: 110)
!13119 = distinct !DILexicalBlock(scope: !13105, file: !1167, line: 606, column: 110)
!13120 = !DILocation(line: 606, column: 110, scope: !13119)
!13121 = !DILocation(line: 606, column: 157, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13118, file: !1167, line: 606, column: 135)
!13123 = !DILocation(line: 606, column: 138, scope: !13122)
!13124 = !DILocation(line: 606, column: 173, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13122, file: !1167, line: 606, column: 172)
!13126 = !DILocation(line: 606, column: 172, scope: !13122)
!13127 = !DILocation(line: 606, column: 183, scope: !13125)
!13128 = !DILocation(line: 606, column: 175, scope: !13125)
!13129 = !DILocation(line: 606, column: 191, scope: !13125)
!13130 = !DILocation(line: 606, column: 132, scope: !13118)
!13131 = distinct !{!13131, !13120, !13132}
!13132 = !DILocation(line: 606, column: 214, scope: !13119)
!13133 = !DILocation(line: 606, column: 215, scope: !13105)
!13134 = distinct !DISubprogram(name: "cJSON_Duplicate", scope: !1167, file: !1167, line: 609, type: !12580, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !13135)
!13135 = !{!13136, !13137, !13138, !13139, !13140, !13141}
!13136 = !DILocalVariable(name: "item", arg: 1, scope: !13134, file: !1167, line: 609, type: !1169)
!13137 = !DILocalVariable(name: "recurse", arg: 2, scope: !13134, file: !1167, line: 609, type: !7)
!13138 = !DILocalVariable(name: "newitem", scope: !13134, file: !1167, line: 611, type: !1169)
!13139 = !DILocalVariable(name: "cptr", scope: !13134, file: !1167, line: 611, type: !1169)
!13140 = !DILocalVariable(name: "nptr", scope: !13134, file: !1167, line: 611, type: !1169)
!13141 = !DILocalVariable(name: "newchild", scope: !13134, file: !1167, line: 611, type: !1169)
!13142 = !DILocation(line: 0, scope: !13134)
!13143 = !DILocation(line: 613, column: 7, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13134, file: !1167, line: 613, column: 6)
!13145 = !DILocation(line: 613, column: 6, scope: !13134)
!13146 = !DILocation(line: 615, column: 10, scope: !13134)
!13147 = !DILocation(line: 616, column: 7, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13134, file: !1167, line: 616, column: 6)
!13149 = !DILocation(line: 616, column: 6, scope: !13134)
!13150 = !DILocation(line: 618, column: 22, scope: !13134)
!13151 = !DILocation(line: 618, column: 26, scope: !13134)
!13152 = !DILocation(line: 618, column: 11, scope: !13134)
!13153 = !DILocation(line: 618, column: 15, scope: !13134)
!13154 = !DILocation(line: 618, column: 72, scope: !13134)
!13155 = !DILocation(line: 618, column: 57, scope: !13134)
!13156 = !DILocation(line: 618, column: 65, scope: !13134)
!13157 = !DILocation(line: 618, column: 108, scope: !13134)
!13158 = !DILocation(line: 618, column: 90, scope: !13134)
!13159 = !DILocation(line: 618, column: 101, scope: !13134)
!13160 = !DILocation(line: 619, column: 12, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13134, file: !1167, line: 619, column: 6)
!13162 = !DILocation(line: 619, column: 6, scope: !13161)
!13163 = !DILocation(line: 619, column: 6, scope: !13134)
!13164 = !DILocation(line: 619, column: 47, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13161, file: !1167, line: 619, column: 25)
!13166 = !DILocation(line: 619, column: 35, scope: !13165)
!13167 = !DILocation(line: 619, column: 46, scope: !13165)
!13168 = !DILocation(line: 619, column: 85, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13165, file: !1167, line: 619, column: 84)
!13170 = !DILocation(line: 619, column: 84, scope: !13165)
!13171 = !DILocation(line: 620, column: 12, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13134, file: !1167, line: 620, column: 6)
!13173 = !DILocation(line: 620, column: 6, scope: !13172)
!13174 = !DILocation(line: 620, column: 6, scope: !13134)
!13175 = !DILocation(line: 620, column: 38, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13172, file: !1167, line: 620, column: 21)
!13177 = !DILocation(line: 620, column: 31, scope: !13176)
!13178 = !DILocation(line: 620, column: 37, scope: !13176)
!13179 = !DILocation(line: 620, column: 73, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13176, file: !1167, line: 620, column: 72)
!13181 = !DILocation(line: 620, column: 72, scope: !13176)
!13182 = !DILocation(line: 622, column: 7, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13134, file: !1167, line: 622, column: 6)
!13184 = !DILocation(line: 622, column: 6, scope: !13134)
!13185 = !DILocation(line: 624, column: 13, scope: !13134)
!13186 = !DILocation(line: 625, column: 2, scope: !13134)
!13187 = !DILocation(line: 627, column: 12, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13134, file: !1167, line: 626, column: 2)
!13189 = !DILocation(line: 628, column: 8, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13188, file: !1167, line: 628, column: 7)
!13191 = !DILocation(line: 628, column: 7, scope: !13188)
!13192 = !DILocation(line: 629, column: 7, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13188, file: !1167, line: 629, column: 7)
!13194 = !DILocation(line: 629, column: 7, scope: !13188)
!13195 = !DILocation(line: 629, column: 20, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13193, file: !1167, line: 629, column: 13)
!13197 = !DILocation(line: 629, column: 24, scope: !13196)
!13198 = !DILocation(line: 629, column: 44, scope: !13196)
!13199 = !DILocation(line: 629, column: 48, scope: !13196)
!13200 = !DILocation(line: 629, column: 68, scope: !13196)
!13201 = !DILocation(line: 630, column: 24, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13193, file: !1167, line: 630, column: 9)
!13203 = !DILocation(line: 631, column: 14, scope: !13188)
!13204 = distinct !{!13204, !13186, !13205}
!13205 = !DILocation(line: 632, column: 2, scope: !13134)
!13206 = !DILocation(line: 634, column: 1, scope: !13134)
!13207 = distinct !DISubprogram(name: "cJSON_Minify", scope: !1167, file: !1167, line: 636, type: !8759, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !13208)
!13208 = !{!13209, !13210}
!13209 = !DILocalVariable(name: "json", arg: 1, scope: !13207, file: !1167, line: 636, type: !201)
!13210 = !DILocalVariable(name: "into", scope: !13207, file: !1167, line: 638, type: !201)
!13211 = !DILocation(line: 0, scope: !13207)
!13212 = !DILocation(line: 639, column: 2, scope: !13207)
!13213 = !DILocation(line: 638, column: 8, scope: !13207)
!13214 = !DILocation(line: 639, column: 9, scope: !13207)
!13215 = !DILocation(line: 641, column: 23, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13217, file: !1167, line: 641, column: 7)
!13217 = distinct !DILexicalBlock(scope: !13207, file: !1167, line: 640, column: 2)
!13218 = !DILocation(line: 641, column: 19, scope: !13216)
!13219 = !DILocation(line: 642, column: 29, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13216, file: !1167, line: 642, column: 12)
!13221 = !DILocation(line: 642, column: 25, scope: !13220)
!13222 = distinct !{!13222, !13212, !13223}
!13223 = !DILocation(line: 649, column: 2, scope: !13207)
!13224 = !DILocation(line: 643, column: 29, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13220, file: !1167, line: 643, column: 12)
!13226 = !DILocation(line: 643, column: 25, scope: !13225)
!13227 = !DILocation(line: 644, column: 29, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13225, file: !1167, line: 644, column: 12)
!13229 = !DILocation(line: 644, column: 25, scope: !13228)
!13230 = !DILocation(line: 645, column: 26, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13228, file: !1167, line: 645, column: 12)
!13232 = !DILocation(line: 645, column: 12, scope: !13228)
!13233 = !DILocation(line: 645, column: 48, scope: !13231)
!13234 = !DILocation(line: 645, column: 54, scope: !13231)
!13235 = !DILocation(line: 645, column: 74, scope: !13231)
!13236 = !DILocation(line: 645, column: 41, scope: !13231)
!13237 = distinct !{!13237, !13236, !13235}
!13238 = !DILocation(line: 646, column: 48, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !1167, line: 646, column: 40)
!13240 = distinct !DILexicalBlock(scope: !13231, file: !1167, line: 646, column: 12)
!13241 = !DILocation(line: 646, column: 54, scope: !13239)
!13242 = !DILocation(line: 646, column: 73, scope: !13239)
!13243 = !DILocation(line: 646, column: 80, scope: !13239)
!13244 = !DILocation(line: 646, column: 41, scope: !13239)
!13245 = !DILocation(line: 646, column: 92, scope: !13239)
!13246 = distinct !{!13246, !13244, !13245}
!13247 = !DILocation(line: 646, column: 99, scope: !13239)
!13248 = !DILocation(line: 646, column: 103, scope: !13239)
!13249 = !DILocation(line: 647, column: 32, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13251, file: !1167, line: 647, column: 24)
!13251 = distinct !DILexicalBlock(scope: !13240, file: !1167, line: 647, column: 12)
!13252 = !DILocation(line: 647, column: 41, scope: !13250)
!13253 = !DILocation(line: 0, scope: !13250)
!13254 = !DILocation(line: 647, column: 48, scope: !13250)
!13255 = !DILocation(line: 647, column: 54, scope: !13250)
!13256 = !DILocation(line: 647, column: 100, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13258, file: !1167, line: 647, column: 74)
!13258 = distinct !DILexicalBlock(scope: !13250, file: !1167, line: 647, column: 69)
!13259 = !DILocation(line: 647, column: 92, scope: !13257)
!13260 = !DILocation(line: 647, column: 94, scope: !13257)
!13261 = !DILocation(line: 647, column: 111, scope: !13258)
!13262 = !DILocation(line: 647, column: 87, scope: !13257)
!13263 = !DILocation(line: 647, column: 110, scope: !13258)
!13264 = distinct !{!13264, !13252, !13265}
!13265 = !DILocation(line: 647, column: 119, scope: !13250)
!13266 = !DILocation(line: 647, column: 133, scope: !13250)
!13267 = !DILocation(line: 647, column: 125, scope: !13250)
!13268 = !DILocation(line: 647, column: 127, scope: !13250)
!13269 = !DILocation(line: 647, column: 136, scope: !13250)
!13270 = !DILocation(line: 648, column: 21, scope: !13251)
!13271 = !DILocation(line: 648, column: 13, scope: !13251)
!13272 = !DILocation(line: 648, column: 15, scope: !13251)
!13273 = !DILocation(line: 650, column: 7, scope: !13207)
!13274 = !DILocation(line: 651, column: 1, scope: !13207)
!13275 = distinct !DISubprogram(name: "ftoa", scope: !1964, file: !1964, line: 50, type: !13276, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1963, retainedNodes: !13278)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{!201, !1182, !201, !7}
!13278 = !{!13279, !13280, !13281, !13282, !13283, !13284, !13285, !13286, !13287}
!13279 = !DILocalVariable(name: "f", arg: 1, scope: !13275, file: !1964, line: 50, type: !1182)
!13280 = !DILocalVariable(name: "buf", arg: 2, scope: !13275, file: !1964, line: 50, type: !201)
!13281 = !DILocalVariable(name: "precision", arg: 3, scope: !13275, file: !1964, line: 50, type: !7)
!13282 = !DILocalVariable(name: "ptr", scope: !13275, file: !1964, line: 52, type: !201)
!13283 = !DILocalVariable(name: "p", scope: !13275, file: !1964, line: 53, type: !201)
!13284 = !DILocalVariable(name: "p1", scope: !13275, file: !1964, line: 54, type: !201)
!13285 = !DILocalVariable(name: "c", scope: !13275, file: !1964, line: 55, type: !202)
!13286 = !DILocalVariable(name: "intPart", scope: !13275, file: !1964, line: 56, type: !174)
!13287 = !DILocalVariable(name: "temp_str", scope: !13275, file: !1964, line: 57, type: !201)
!13288 = !DILocation(line: 0, scope: !13275)
!13289 = !DILocation(line: 60, column: 9, scope: !13275)
!13290 = !DILocation(line: 64, column: 11, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13275, file: !1964, line: 64, column: 9)
!13292 = !DILocation(line: 64, column: 9, scope: !13275)
!13293 = !DILocation(line: 66, column: 13, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13291, file: !1964, line: 65, column: 5)
!13295 = !DILocation(line: 67, column: 13, scope: !13294)
!13296 = !DILocation(line: 67, column: 16, scope: !13294)
!13297 = !DILocation(line: 68, column: 5, scope: !13294)
!13298 = !DILocation(line: 70, column: 19, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13275, file: !1964, line: 70, column: 9)
!13300 = !DILocation(line: 70, column: 9, scope: !13275)
!13301 = !DILocation(line: 72, column: 15, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13303, file: !1964, line: 72, column: 13)
!13303 = distinct !DILexicalBlock(scope: !13299, file: !1964, line: 71, column: 5)
!13304 = !DILocation(line: 72, column: 13, scope: !13303)
!13305 = !DILocation(line: 73, column: 20, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13302, file: !1964, line: 73, column: 18)
!13307 = !DILocation(line: 73, column: 18, scope: !13302)
!13308 = !DILocation(line: 74, column: 20, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !1964, line: 74, column: 18)
!13310 = !DILocation(line: 74, column: 18, scope: !13306)
!13311 = !DILocation(line: 75, column: 20, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13309, file: !1964, line: 75, column: 18)
!13313 = !DILocation(line: 75, column: 18, scope: !13309)
!13314 = !DILocation(line: 76, column: 20, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13312, file: !1964, line: 76, column: 18)
!13316 = !DILocation(line: 76, column: 18, scope: !13312)
!13317 = !DILocation(line: 77, column: 20, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13315, file: !1964, line: 77, column: 18)
!13319 = !DILocation(line: 86, column: 15, scope: !13275)
!13320 = !DILocation(line: 87, column: 10, scope: !13275)
!13321 = !DILocation(line: 87, column: 7, scope: !13275)
!13322 = !DILocation(line: 89, column: 10, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13275, file: !1964, line: 89, column: 9)
!13324 = !DILocation(line: 89, column: 9, scope: !13275)
!13325 = !DILocation(line: 90, column: 13, scope: !13323)
!13326 = !DILocation(line: 90, column: 16, scope: !13323)
!13327 = !DILocation(line: 90, column: 9, scope: !13323)
!13328 = !DILocation(line: 107, column: 18, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13323, file: !1964, line: 92, column: 5)
!13330 = !DILocation(line: 107, column: 9, scope: !13329)
!13331 = !DILocation(line: 100, column: 21, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13329, file: !1964, line: 98, column: 9)
!13333 = !DILocation(line: 99, column: 20, scope: !13332)
!13334 = !DILocation(line: 99, column: 15, scope: !13332)
!13335 = !DILocation(line: 99, column: 18, scope: !13332)
!13336 = !DILocation(line: 97, column: 9, scope: !13329)
!13337 = distinct !{!13337, !13336, !13338}
!13338 = !DILocation(line: 101, column: 9, scope: !13329)
!13339 = !DILocation(line: 109, column: 18, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13329, file: !1964, line: 108, column: 9)
!13341 = !DILocation(line: 109, column: 17, scope: !13340)
!13342 = !DILocation(line: 110, column: 18, scope: !13340)
!13343 = !DILocation(line: 110, column: 16, scope: !13340)
!13344 = !DILocation(line: 111, column: 17, scope: !13340)
!13345 = !DILocation(line: 111, column: 20, scope: !13340)
!13346 = distinct !{!13346, !13330, !13347}
!13347 = !DILocation(line: 112, column: 9, scope: !13329)
!13348 = !DILocation(line: 0, scope: !13323)
!13349 = !DILocation(line: 119, column: 9, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13275, file: !1964, line: 119, column: 9)
!13351 = !DILocation(line: 119, column: 9, scope: !13275)
!13352 = !DILocation(line: 122, column: 16, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13350, file: !1964, line: 120, column: 5)
!13354 = !DILocation(line: 0, scope: !13353)
!13355 = !DILocation(line: 125, column: 9, scope: !13353)
!13356 = !DILocation(line: 125, column: 25, scope: !13353)
!13357 = !DILocation(line: 127, column: 15, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13353, file: !1964, line: 126, column: 9)
!13359 = !DILocation(line: 128, column: 17, scope: !13358)
!13360 = !DILocation(line: 129, column: 26, scope: !13358)
!13361 = !DILocation(line: 129, column: 20, scope: !13358)
!13362 = !DILocation(line: 130, column: 18, scope: !13358)
!13363 = !DILocation(line: 130, column: 15, scope: !13358)
!13364 = distinct !{!13364, !13355, !13365}
!13365 = !DILocation(line: 131, column: 9, scope: !13353)
!13366 = !DILocation(line: 135, column: 10, scope: !13275)
!13367 = !DILocation(line: 138, column: 11, scope: !13275)
!13368 = !DILocation(line: 138, column: 5, scope: !13275)
!13369 = !DILocation(line: 142, column: 23, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13371, file: !1964, line: 141, column: 9)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !1964, line: 140, column: 12)
!13372 = distinct !DILexicalBlock(scope: !13275, file: !1964, line: 139, column: 5)
!13373 = distinct !{!13373, !13368, !13374}
!13374 = !DILocation(line: 149, column: 5, scope: !13275)
!13375 = !DILocation(line: 151, column: 32, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13275, file: !1964, line: 151, column: 8)
!13377 = !DILocation(line: 153, column: 23, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13376, file: !1964, line: 152, column: 5)
!13379 = !DILocation(line: 154, column: 5, scope: !13378)
!13380 = !DILocation(line: 156, column: 5, scope: !13275)
!13381 = distinct !DISubprogram(name: "abort", scope: !1191, file: !1191, line: 108, type: !154, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!13382 = !DILocation(line: 110, column: 5, scope: !13381)
!13383 = !{i64 4281}
!13384 = !DILocation(line: 111, column: 14, scope: !13381)
!13385 = !DILocation(line: 112, column: 45, scope: !13381)
!13386 = !DILocation(line: 113, column: 5, scope: !13381)
!13387 = !DILocation(line: 113, column: 5, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !1191, line: 113, column: 5)
!13389 = distinct !DILexicalBlock(scope: !13381, file: !1191, line: 113, column: 5)
!13390 = distinct !{!13390, !13391, !13392}
!13391 = !DILocation(line: 113, column: 5, scope: !13389)
!13392 = !DILocation(line: 113, column: 13, scope: !13389)
!13393 = distinct !DISubprogram(name: "platform_assert", scope: !1191, file: !1191, line: 116, type: !13394, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13396)
!13394 = !DISubroutineType(types: !13395)
!13395 = !{null, !331, !331, !7}
!13396 = !{!13397, !13398, !13399}
!13397 = !DILocalVariable(name: "expr", arg: 1, scope: !13393, file: !1191, line: 116, type: !331)
!13398 = !DILocalVariable(name: "file", arg: 2, scope: !13393, file: !1191, line: 116, type: !331)
!13399 = !DILocalVariable(name: "line", arg: 3, scope: !13393, file: !1191, line: 116, type: !7)
!13400 = !DILocation(line: 0, scope: !13393)
!13401 = !DILocation(line: 118, column: 5, scope: !13393)
!13402 = !{i64 4480}
!13403 = !DILocation(line: 119, column: 14, scope: !13393)
!13404 = !DILocation(line: 120, column: 26, scope: !13393)
!13405 = !DILocation(line: 121, column: 22, scope: !13393)
!13406 = !DILocation(line: 122, column: 22, scope: !13393)
!13407 = !DILocation(line: 123, column: 22, scope: !13393)
!13408 = !DILocation(line: 124, column: 45, scope: !13393)
!13409 = !DILocation(line: 125, column: 5, scope: !13393)
!13410 = !DILocation(line: 125, column: 5, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !1191, line: 125, column: 5)
!13412 = distinct !DILexicalBlock(scope: !13393, file: !1191, line: 125, column: 5)
!13413 = distinct !{!13413, !13414, !13415}
!13414 = !DILocation(line: 125, column: 5, scope: !13412)
!13415 = !DILocation(line: 125, column: 13, scope: !13412)
!13416 = distinct !DISubprogram(name: "exception_dump_config", scope: !1191, file: !1191, line: 128, type: !1743, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13417)
!13417 = !{!13418}
!13418 = !DILocalVariable(name: "flag", arg: 1, scope: !13416, file: !1191, line: 128, type: !7)
!13419 = !DILocation(line: 0, scope: !13416)
!13420 = !DILocation(line: 130, column: 17, scope: !13416)
!13421 = !DILocation(line: 131, column: 1, scope: !13416)
!13422 = distinct !DISubprogram(name: "exception_register_callbacks", scope: !1191, file: !1191, line: 142, type: !13423, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13426)
!13423 = !DISubroutineType(types: !13424)
!13424 = !{!69, !13425}
!13425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!13426 = !{!13427, !13428}
!13427 = !DILocalVariable(name: "cb", arg: 1, scope: !13422, file: !1191, line: 142, type: !13425)
!13428 = !DILocalVariable(name: "i", scope: !13422, file: !1191, line: 144, type: !7)
!13429 = !DILocation(line: 0, scope: !13422)
!13430 = !DILocation(line: 146, column: 26, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13422, file: !1191, line: 146, column: 9)
!13432 = !DILocation(line: 146, column: 32, scope: !13431)
!13433 = !DILocation(line: 146, column: 9, scope: !13422)
!13434 = !DILocation(line: 150, column: 22, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !1191, line: 150, column: 8)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !1191, line: 150, column: 8)
!13437 = distinct !DILexicalBlock(scope: !13431, file: !1191, line: 148, column: 12)
!13438 = !DILocation(line: 150, column: 8, scope: !13436)
!13439 = !DILocation(line: 151, column: 45, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13441, file: !1191, line: 151, column: 17)
!13441 = distinct !DILexicalBlock(scope: !13435, file: !1191, line: 150, column: 53)
!13442 = !DILocation(line: 151, column: 53, scope: !13440)
!13443 = !DILocation(line: 152, column: 14, scope: !13440)
!13444 = !DILocation(line: 152, column: 45, scope: !13440)
!13445 = !DILocation(line: 152, column: 60, scope: !13440)
!13446 = !DILocation(line: 152, column: 53, scope: !13440)
!13447 = !DILocation(line: 151, column: 17, scope: !13441)
!13448 = !DILocation(line: 150, column: 49, scope: !13435)
!13449 = distinct !{!13449, !13438, !13450}
!13450 = !DILocation(line: 155, column: 8, scope: !13436)
!13451 = !DILocation(line: 156, column: 57, scope: !13437)
!13452 = !DILocation(line: 156, column: 65, scope: !13437)
!13453 = !DILocation(line: 157, column: 71, scope: !13437)
!13454 = !DILocation(line: 157, column: 57, scope: !13437)
!13455 = !DILocation(line: 157, column: 65, scope: !13437)
!13456 = !DILocation(line: 158, column: 30, scope: !13437)
!13457 = !DILocation(line: 159, column: 8, scope: !13437)
!13458 = !DILocation(line: 0, scope: !13431)
!13459 = !DILocation(line: 161, column: 1, scope: !13422)
!13460 = distinct !DISubprogram(name: "exception_init", scope: !1191, file: !1191, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13461)
!13461 = !{!13462}
!13462 = !DILocalVariable(name: "i", scope: !13460, file: !1191, line: 165, type: !7)
!13463 = !DILocation(line: 167, column: 14, scope: !13460)
!13464 = !DILocation(line: 170, column: 5, scope: !13460)
!13465 = !DILocation(line: 0, scope: !13460)
!13466 = !DILocation(line: 177, column: 38, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !1191, line: 177, column: 5)
!13468 = distinct !DILexicalBlock(scope: !13460, file: !1191, line: 177, column: 5)
!13469 = !DILocation(line: 177, column: 19, scope: !13467)
!13470 = !DILocation(line: 177, column: 5, scope: !13468)
!13471 = !DILocation(line: 178, column: 41, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !1191, line: 178, column: 13)
!13473 = distinct !DILexicalBlock(scope: !13467, file: !1191, line: 177, column: 50)
!13474 = !DILocation(line: 178, column: 13, scope: !13472)
!13475 = !DILocation(line: 178, column: 13, scope: !13473)
!13476 = !DILocation(line: 179, column: 13, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13472, file: !1191, line: 178, column: 50)
!13478 = !DILocation(line: 180, column: 9, scope: !13477)
!13479 = !DILocation(line: 177, column: 46, scope: !13467)
!13480 = distinct !{!13480, !13470, !13481}
!13481 = !DILocation(line: 181, column: 5, scope: !13468)
!13482 = !DILocation(line: 183, column: 21, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13460, file: !1191, line: 183, column: 9)
!13484 = !DILocation(line: 183, column: 9, scope: !13460)
!13485 = !DILocation(line: 185, column: 28, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13483, file: !1191, line: 183, column: 31)
!13487 = !DILocation(line: 186, column: 28, scope: !13486)
!13488 = !DILocation(line: 187, column: 28, scope: !13486)
!13489 = !DILocation(line: 184, column: 9, scope: !13486)
!13490 = !DILocation(line: 188, column: 5, scope: !13486)
!13491 = !DILocation(line: 189, column: 1, scope: !13460)
!13492 = distinct !DISubprogram(name: "NMI_Handler", scope: !1191, file: !1191, line: 196, type: !154, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!13493 = !DILocation(line: 198, column: 1, scope: !13492)
!13494 = distinct !DISubprogram(name: "printUsageErrorMsg", scope: !1191, file: !1191, line: 200, type: !2604, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13495)
!13495 = !{!13496}
!13496 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !13494, file: !1191, line: 200, type: !61)
!13497 = !DILocation(line: 0, scope: !13494)
!13498 = !DILocation(line: 202, column: 5, scope: !13494)
!13499 = !DILocation(line: 204, column: 32, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13494, file: !1191, line: 204, column: 9)
!13501 = !DILocation(line: 204, column: 9, scope: !13494)
!13502 = !DILocation(line: 205, column: 9, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13500, file: !1191, line: 204, column: 38)
!13504 = !DILocation(line: 206, column: 5, scope: !13503)
!13505 = !DILocation(line: 207, column: 32, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13494, file: !1191, line: 207, column: 9)
!13507 = !DILocation(line: 207, column: 9, scope: !13494)
!13508 = !DILocation(line: 208, column: 9, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13506, file: !1191, line: 207, column: 38)
!13510 = !DILocation(line: 209, column: 5, scope: !13509)
!13511 = !DILocation(line: 210, column: 32, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13494, file: !1191, line: 210, column: 9)
!13513 = !DILocation(line: 210, column: 9, scope: !13494)
!13514 = !DILocation(line: 211, column: 9, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13512, file: !1191, line: 210, column: 38)
!13516 = !DILocation(line: 212, column: 5, scope: !13515)
!13517 = !DILocation(line: 213, column: 32, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13494, file: !1191, line: 213, column: 9)
!13519 = !DILocation(line: 213, column: 9, scope: !13494)
!13520 = !DILocation(line: 214, column: 9, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13518, file: !1191, line: 213, column: 38)
!13522 = !DILocation(line: 215, column: 5, scope: !13521)
!13523 = !DILocation(line: 216, column: 32, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13494, file: !1191, line: 216, column: 9)
!13525 = !DILocation(line: 216, column: 9, scope: !13494)
!13526 = !DILocation(line: 217, column: 9, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13524, file: !1191, line: 216, column: 38)
!13528 = !DILocation(line: 218, column: 5, scope: !13527)
!13529 = !DILocation(line: 219, column: 32, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13494, file: !1191, line: 219, column: 9)
!13531 = !DILocation(line: 219, column: 9, scope: !13494)
!13532 = !DILocation(line: 220, column: 9, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13530, file: !1191, line: 219, column: 38)
!13534 = !DILocation(line: 221, column: 5, scope: !13533)
!13535 = !DILocation(line: 222, column: 1, scope: !13494)
!13536 = distinct !DISubprogram(name: "printMemoryManagementErrorMsg", scope: !1191, file: !1191, line: 224, type: !2604, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13537)
!13537 = !{!13538}
!13538 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !13536, file: !1191, line: 224, type: !61)
!13539 = !DILocation(line: 0, scope: !13536)
!13540 = !DILocation(line: 226, column: 5, scope: !13536)
!13541 = !DILocation(line: 228, column: 20, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13536, file: !1191, line: 228, column: 9)
!13543 = !DILocation(line: 228, column: 32, scope: !13542)
!13544 = !DILocation(line: 228, column: 9, scope: !13536)
!13545 = !DILocation(line: 229, column: 9, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13542, file: !1191, line: 228, column: 38)
!13547 = !DILocation(line: 230, column: 5, scope: !13546)
!13548 = !DILocation(line: 231, column: 20, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13536, file: !1191, line: 231, column: 9)
!13550 = !DILocation(line: 231, column: 32, scope: !13549)
!13551 = !DILocation(line: 231, column: 9, scope: !13536)
!13552 = !DILocation(line: 232, column: 9, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13549, file: !1191, line: 231, column: 38)
!13554 = !DILocation(line: 233, column: 5, scope: !13553)
!13555 = !DILocation(line: 234, column: 20, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13536, file: !1191, line: 234, column: 9)
!13557 = !DILocation(line: 234, column: 32, scope: !13556)
!13558 = !DILocation(line: 234, column: 9, scope: !13536)
!13559 = !DILocation(line: 235, column: 9, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13556, file: !1191, line: 234, column: 38)
!13561 = !DILocation(line: 236, column: 5, scope: !13560)
!13562 = !DILocation(line: 237, column: 20, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13536, file: !1191, line: 237, column: 9)
!13564 = !DILocation(line: 237, column: 32, scope: !13563)
!13565 = !DILocation(line: 237, column: 9, scope: !13536)
!13566 = !DILocation(line: 238, column: 72, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13563, file: !1191, line: 237, column: 38)
!13568 = !DILocation(line: 238, column: 9, scope: !13567)
!13569 = !DILocation(line: 239, column: 5, scope: !13567)
!13570 = !DILocation(line: 240, column: 20, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13536, file: !1191, line: 240, column: 9)
!13572 = !DILocation(line: 240, column: 32, scope: !13571)
!13573 = !DILocation(line: 240, column: 9, scope: !13536)
!13574 = !DILocation(line: 241, column: 9, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13571, file: !1191, line: 240, column: 38)
!13576 = !DILocation(line: 242, column: 5, scope: !13575)
!13577 = !DILocation(line: 243, column: 20, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13536, file: !1191, line: 243, column: 9)
!13579 = !DILocation(line: 243, column: 32, scope: !13578)
!13580 = !DILocation(line: 243, column: 9, scope: !13536)
!13581 = !DILocation(line: 244, column: 62, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13578, file: !1191, line: 243, column: 38)
!13583 = !DILocation(line: 244, column: 9, scope: !13582)
!13584 = !DILocation(line: 245, column: 5, scope: !13582)
!13585 = !DILocation(line: 246, column: 1, scope: !13536)
!13586 = distinct !DISubprogram(name: "printBusFaultErrorMsg", scope: !1191, file: !1191, line: 248, type: !2604, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13587)
!13587 = !{!13588}
!13588 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !13586, file: !1191, line: 248, type: !61)
!13589 = !DILocation(line: 0, scope: !13586)
!13590 = !DILocation(line: 250, column: 5, scope: !13586)
!13591 = !DILocation(line: 253, column: 32, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13586, file: !1191, line: 253, column: 9)
!13593 = !DILocation(line: 253, column: 9, scope: !13586)
!13594 = !DILocation(line: 254, column: 9, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13592, file: !1191, line: 253, column: 38)
!13596 = !DILocation(line: 255, column: 5, scope: !13595)
!13597 = !DILocation(line: 256, column: 32, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13586, file: !1191, line: 256, column: 9)
!13599 = !DILocation(line: 256, column: 9, scope: !13586)
!13600 = !DILocation(line: 257, column: 9, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13598, file: !1191, line: 256, column: 38)
!13602 = !DILocation(line: 258, column: 5, scope: !13601)
!13603 = !DILocation(line: 259, column: 32, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13586, file: !1191, line: 259, column: 9)
!13605 = !DILocation(line: 259, column: 9, scope: !13586)
!13606 = !DILocation(line: 260, column: 9, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13604, file: !1191, line: 259, column: 38)
!13608 = !DILocation(line: 261, column: 5, scope: !13607)
!13609 = !DILocation(line: 262, column: 32, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13586, file: !1191, line: 262, column: 9)
!13611 = !DILocation(line: 262, column: 9, scope: !13586)
!13612 = !DILocation(line: 263, column: 9, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13610, file: !1191, line: 262, column: 38)
!13614 = !DILocation(line: 264, column: 5, scope: !13613)
!13615 = !DILocation(line: 265, column: 32, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13586, file: !1191, line: 265, column: 9)
!13617 = !DILocation(line: 265, column: 9, scope: !13586)
!13618 = !DILocation(line: 266, column: 90, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13616, file: !1191, line: 265, column: 38)
!13620 = !DILocation(line: 266, column: 9, scope: !13619)
!13621 = !DILocation(line: 267, column: 5, scope: !13619)
!13622 = !DILocation(line: 268, column: 32, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13586, file: !1191, line: 268, column: 9)
!13624 = !DILocation(line: 268, column: 9, scope: !13586)
!13625 = !DILocation(line: 269, column: 9, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13623, file: !1191, line: 268, column: 38)
!13627 = !DILocation(line: 270, column: 5, scope: !13626)
!13628 = !DILocation(line: 271, column: 32, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13586, file: !1191, line: 271, column: 9)
!13630 = !DILocation(line: 271, column: 9, scope: !13586)
!13631 = !DILocation(line: 272, column: 61, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13629, file: !1191, line: 271, column: 38)
!13633 = !DILocation(line: 272, column: 9, scope: !13632)
!13634 = !DILocation(line: 273, column: 5, scope: !13632)
!13635 = !DILocation(line: 274, column: 1, scope: !13586)
!13636 = distinct !DISubprogram(name: "exception_reboot", scope: !1191, file: !1191, line: 799, type: !154, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!13637 = !DILocation(line: 805, column: 5, scope: !13636)
!13638 = distinct !DISubprogram(name: "stackDump", scope: !1191, file: !1191, line: 823, type: !13639, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13641)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{null, !2564}
!13641 = !{!13642}
!13642 = !DILocalVariable(name: "stack", arg: 1, scope: !13638, file: !1191, line: 823, type: !2564)
!13643 = !DILocation(line: 0, scope: !13638)
!13644 = !DILocation(line: 825, column: 24, scope: !13638)
!13645 = !DILocation(line: 825, column: 22, scope: !13638)
!13646 = !DILocation(line: 826, column: 24, scope: !13638)
!13647 = !DILocation(line: 826, column: 22, scope: !13638)
!13648 = !DILocation(line: 827, column: 24, scope: !13638)
!13649 = !DILocation(line: 827, column: 22, scope: !13638)
!13650 = !DILocation(line: 828, column: 24, scope: !13638)
!13651 = !DILocation(line: 828, column: 22, scope: !13638)
!13652 = !DILocation(line: 829, column: 24, scope: !13638)
!13653 = !DILocation(line: 829, column: 22, scope: !13638)
!13654 = !DILocation(line: 830, column: 25, scope: !13638)
!13655 = !DILocation(line: 830, column: 42, scope: !13638)
!13656 = !DILocation(line: 830, column: 22, scope: !13638)
!13657 = !DILocation(line: 831, column: 24, scope: !13638)
!13658 = !DILocation(line: 831, column: 22, scope: !13638)
!13659 = !DILocation(line: 832, column: 24, scope: !13638)
!13660 = !DILocation(line: 832, column: 22, scope: !13638)
!13661 = !DILocation(line: 833, column: 24, scope: !13638)
!13662 = !DILocation(line: 833, column: 22, scope: !13638)
!13663 = !DILocation(line: 836, column: 23, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13638, file: !1191, line: 836, column: 10)
!13665 = !DILocation(line: 836, column: 34, scope: !13664)
!13666 = !DILocation(line: 836, column: 42, scope: !13664)
!13667 = !DILocation(line: 836, column: 10, scope: !13638)
!13668 = !DILocation(line: 837, column: 26, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13664, file: !1191, line: 836, column: 49)
!13670 = !DILocation(line: 837, column: 24, scope: !13669)
!13671 = !DILocation(line: 838, column: 26, scope: !13669)
!13672 = !DILocation(line: 838, column: 24, scope: !13669)
!13673 = !DILocation(line: 839, column: 26, scope: !13669)
!13674 = !DILocation(line: 839, column: 24, scope: !13669)
!13675 = !DILocation(line: 840, column: 26, scope: !13669)
!13676 = !DILocation(line: 840, column: 24, scope: !13669)
!13677 = !DILocation(line: 841, column: 26, scope: !13669)
!13678 = !DILocation(line: 841, column: 24, scope: !13669)
!13679 = !DILocation(line: 842, column: 26, scope: !13669)
!13680 = !DILocation(line: 842, column: 24, scope: !13669)
!13681 = !DILocation(line: 843, column: 26, scope: !13669)
!13682 = !DILocation(line: 843, column: 24, scope: !13669)
!13683 = !DILocation(line: 844, column: 26, scope: !13669)
!13684 = !DILocation(line: 844, column: 24, scope: !13669)
!13685 = !DILocation(line: 845, column: 26, scope: !13669)
!13686 = !DILocation(line: 845, column: 24, scope: !13669)
!13687 = !DILocation(line: 846, column: 26, scope: !13669)
!13688 = !DILocation(line: 846, column: 24, scope: !13669)
!13689 = !DILocation(line: 847, column: 27, scope: !13669)
!13690 = !DILocation(line: 847, column: 25, scope: !13669)
!13691 = !DILocation(line: 848, column: 27, scope: !13669)
!13692 = !DILocation(line: 848, column: 25, scope: !13669)
!13693 = !DILocation(line: 849, column: 27, scope: !13669)
!13694 = !DILocation(line: 849, column: 25, scope: !13669)
!13695 = !DILocation(line: 850, column: 27, scope: !13669)
!13696 = !DILocation(line: 850, column: 25, scope: !13669)
!13697 = !DILocation(line: 851, column: 27, scope: !13669)
!13698 = !DILocation(line: 851, column: 25, scope: !13669)
!13699 = !DILocation(line: 852, column: 27, scope: !13669)
!13700 = !DILocation(line: 852, column: 25, scope: !13669)
!13701 = !DILocation(line: 853, column: 29, scope: !13669)
!13702 = !DILocation(line: 853, column: 27, scope: !13669)
!13703 = !DILocation(line: 854, column: 24, scope: !13669)
!13704 = !DILocation(line: 855, column: 5, scope: !13669)
!13705 = !DILocation(line: 858, column: 16, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13638, file: !1191, line: 858, column: 10)
!13707 = !DILocation(line: 858, column: 20, scope: !13706)
!13708 = !DILocation(line: 858, column: 44, scope: !13706)
!13709 = !DILocation(line: 859, column: 24, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13706, file: !1191, line: 858, column: 74)
!13711 = !DILocation(line: 860, column: 5, scope: !13710)
!13712 = !DILocation(line: 862, column: 5, scope: !13638)
!13713 = !DILocation(line: 863, column: 44, scope: !13638)
!13714 = !DILocation(line: 863, column: 5, scope: !13638)
!13715 = !DILocation(line: 864, column: 44, scope: !13638)
!13716 = !DILocation(line: 864, column: 5, scope: !13638)
!13717 = !DILocation(line: 865, column: 44, scope: !13638)
!13718 = !DILocation(line: 865, column: 5, scope: !13638)
!13719 = !DILocation(line: 866, column: 44, scope: !13638)
!13720 = !DILocation(line: 866, column: 5, scope: !13638)
!13721 = !DILocation(line: 867, column: 44, scope: !13638)
!13722 = !DILocation(line: 867, column: 5, scope: !13638)
!13723 = !DILocation(line: 868, column: 44, scope: !13638)
!13724 = !DILocation(line: 868, column: 5, scope: !13638)
!13725 = !DILocation(line: 869, column: 44, scope: !13638)
!13726 = !DILocation(line: 869, column: 5, scope: !13638)
!13727 = !DILocation(line: 870, column: 44, scope: !13638)
!13728 = !DILocation(line: 870, column: 5, scope: !13638)
!13729 = !DILocation(line: 871, column: 44, scope: !13638)
!13730 = !DILocation(line: 871, column: 5, scope: !13638)
!13731 = !DILocation(line: 872, column: 44, scope: !13638)
!13732 = !DILocation(line: 872, column: 5, scope: !13638)
!13733 = !DILocation(line: 873, column: 44, scope: !13638)
!13734 = !DILocation(line: 873, column: 5, scope: !13638)
!13735 = !DILocation(line: 874, column: 44, scope: !13638)
!13736 = !DILocation(line: 874, column: 5, scope: !13638)
!13737 = !DILocation(line: 875, column: 44, scope: !13638)
!13738 = !DILocation(line: 875, column: 5, scope: !13638)
!13739 = !DILocation(line: 876, column: 44, scope: !13638)
!13740 = !DILocation(line: 876, column: 5, scope: !13638)
!13741 = !DILocation(line: 877, column: 44, scope: !13638)
!13742 = !DILocation(line: 877, column: 5, scope: !13638)
!13743 = !DILocation(line: 878, column: 48, scope: !13638)
!13744 = !DILocation(line: 878, column: 5, scope: !13638)
!13745 = !DILocation(line: 881, column: 21, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13638, file: !1191, line: 881, column: 9)
!13747 = !DILocation(line: 881, column: 32, scope: !13746)
!13748 = !DILocation(line: 881, column: 9, scope: !13638)
!13749 = !DILocation(line: 882, column: 29, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13746, file: !1191, line: 881, column: 39)
!13751 = !DILocation(line: 884, column: 5, scope: !13750)
!13752 = !DILocation(line: 0, scope: !13746)
!13753 = !DILocation(line: 889, column: 34, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13638, file: !1191, line: 889, column: 10)
!13755 = !DILocation(line: 889, column: 42, scope: !13754)
!13756 = !DILocation(line: 889, column: 10, scope: !13638)
!13757 = !DILocation(line: 890, column: 29, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13754, file: !1191, line: 889, column: 49)
!13759 = !DILocation(line: 891, column: 48, scope: !13758)
!13760 = !DILocation(line: 891, column: 9, scope: !13758)
!13761 = !DILocation(line: 892, column: 48, scope: !13758)
!13762 = !DILocation(line: 892, column: 9, scope: !13758)
!13763 = !DILocation(line: 893, column: 48, scope: !13758)
!13764 = !DILocation(line: 893, column: 9, scope: !13758)
!13765 = !DILocation(line: 894, column: 48, scope: !13758)
!13766 = !DILocation(line: 894, column: 9, scope: !13758)
!13767 = !DILocation(line: 895, column: 48, scope: !13758)
!13768 = !DILocation(line: 895, column: 9, scope: !13758)
!13769 = !DILocation(line: 896, column: 48, scope: !13758)
!13770 = !DILocation(line: 896, column: 9, scope: !13758)
!13771 = !DILocation(line: 897, column: 48, scope: !13758)
!13772 = !DILocation(line: 897, column: 9, scope: !13758)
!13773 = !DILocation(line: 898, column: 48, scope: !13758)
!13774 = !DILocation(line: 898, column: 9, scope: !13758)
!13775 = !DILocation(line: 899, column: 48, scope: !13758)
!13776 = !DILocation(line: 899, column: 9, scope: !13758)
!13777 = !DILocation(line: 900, column: 48, scope: !13758)
!13778 = !DILocation(line: 900, column: 9, scope: !13758)
!13779 = !DILocation(line: 901, column: 48, scope: !13758)
!13780 = !DILocation(line: 901, column: 9, scope: !13758)
!13781 = !DILocation(line: 902, column: 48, scope: !13758)
!13782 = !DILocation(line: 902, column: 9, scope: !13758)
!13783 = !DILocation(line: 903, column: 48, scope: !13758)
!13784 = !DILocation(line: 903, column: 9, scope: !13758)
!13785 = !DILocation(line: 904, column: 48, scope: !13758)
!13786 = !DILocation(line: 904, column: 9, scope: !13758)
!13787 = !DILocation(line: 905, column: 48, scope: !13758)
!13788 = !DILocation(line: 905, column: 9, scope: !13758)
!13789 = !DILocation(line: 906, column: 48, scope: !13758)
!13790 = !DILocation(line: 906, column: 9, scope: !13758)
!13791 = !DILocation(line: 907, column: 48, scope: !13758)
!13792 = !DILocation(line: 907, column: 9, scope: !13758)
!13793 = !DILocation(line: 908, column: 48, scope: !13758)
!13794 = !DILocation(line: 908, column: 9, scope: !13758)
!13795 = !DILocation(line: 909, column: 48, scope: !13758)
!13796 = !DILocation(line: 909, column: 9, scope: !13758)
!13797 = !DILocation(line: 910, column: 48, scope: !13758)
!13798 = !DILocation(line: 910, column: 9, scope: !13758)
!13799 = !DILocation(line: 911, column: 48, scope: !13758)
!13800 = !DILocation(line: 911, column: 9, scope: !13758)
!13801 = !DILocation(line: 912, column: 48, scope: !13758)
!13802 = !DILocation(line: 912, column: 9, scope: !13758)
!13803 = !DILocation(line: 913, column: 48, scope: !13758)
!13804 = !DILocation(line: 913, column: 9, scope: !13758)
!13805 = !DILocation(line: 914, column: 48, scope: !13758)
!13806 = !DILocation(line: 914, column: 9, scope: !13758)
!13807 = !DILocation(line: 915, column: 48, scope: !13758)
!13808 = !DILocation(line: 915, column: 9, scope: !13758)
!13809 = !DILocation(line: 916, column: 48, scope: !13758)
!13810 = !DILocation(line: 916, column: 9, scope: !13758)
!13811 = !DILocation(line: 917, column: 48, scope: !13758)
!13812 = !DILocation(line: 917, column: 9, scope: !13758)
!13813 = !DILocation(line: 918, column: 48, scope: !13758)
!13814 = !DILocation(line: 918, column: 9, scope: !13758)
!13815 = !DILocation(line: 919, column: 48, scope: !13758)
!13816 = !DILocation(line: 919, column: 9, scope: !13758)
!13817 = !DILocation(line: 920, column: 48, scope: !13758)
!13818 = !DILocation(line: 920, column: 9, scope: !13758)
!13819 = !DILocation(line: 921, column: 48, scope: !13758)
!13820 = !DILocation(line: 921, column: 9, scope: !13758)
!13821 = !DILocation(line: 922, column: 48, scope: !13758)
!13822 = !DILocation(line: 922, column: 9, scope: !13758)
!13823 = !DILocation(line: 923, column: 50, scope: !13758)
!13824 = !DILocation(line: 923, column: 9, scope: !13758)
!13825 = !DILocation(line: 924, column: 5, scope: !13758)
!13826 = !DILocation(line: 926, column: 48, scope: !13638)
!13827 = !DILocation(line: 926, column: 5, scope: !13638)
!13828 = !DILocation(line: 927, column: 48, scope: !13638)
!13829 = !DILocation(line: 927, column: 5, scope: !13638)
!13830 = !DILocation(line: 928, column: 48, scope: !13638)
!13831 = !DILocation(line: 928, column: 5, scope: !13638)
!13832 = !DILocation(line: 929, column: 48, scope: !13638)
!13833 = !DILocation(line: 929, column: 5, scope: !13638)
!13834 = !DILocation(line: 959, column: 9, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13638, file: !1191, line: 959, column: 9)
!13836 = !DILocation(line: 959, column: 9, scope: !13638)
!13837 = !DILocation(line: 960, column: 9, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13835, file: !1191, line: 959, column: 33)
!13839 = !DILocation(line: 961, column: 5, scope: !13838)
!13840 = !DILocation(line: 962, column: 1, scope: !13638)
!13841 = distinct !DISubprogram(name: "reboot_check", scope: !1191, file: !1191, line: 808, type: !13842, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!13842 = !DISubroutineType(types: !13843)
!13843 = !{!69}
!13844 = !DILocation(line: 810, column: 13, scope: !13841)
!13845 = !DILocation(line: 810, column: 25, scope: !13841)
!13846 = !DILocation(line: 810, column: 5, scope: !13841)
!13847 = distinct !DISubprogram(name: "memoryDumpAll", scope: !1191, file: !1191, line: 964, type: !154, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13848)
!13848 = !{!13849, !13850, !13851}
!13849 = !DILocalVariable(name: "current", scope: !13847, file: !1191, line: 966, type: !1276)
!13850 = !DILocalVariable(name: "end", scope: !13847, file: !1191, line: 966, type: !1276)
!13851 = !DILocalVariable(name: "i", scope: !13847, file: !1191, line: 967, type: !30)
!13852 = !DILocation(line: 0, scope: !13847)
!13853 = !DILocation(line: 971, column: 33, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13855, file: !1191, line: 971, column: 14)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !1191, line: 969, column: 24)
!13856 = distinct !DILexicalBlock(scope: !13857, file: !1191, line: 969, column: 5)
!13857 = distinct !DILexicalBlock(scope: !13847, file: !1191, line: 969, column: 5)
!13858 = !DILocation(line: 971, column: 15, scope: !13854)
!13859 = !DILocation(line: 971, column: 14, scope: !13855)
!13860 = !DILocation(line: 1000, column: 38, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13862, file: !1191, line: 1000, column: 5)
!13862 = distinct !DILexicalBlock(scope: !13847, file: !1191, line: 1000, column: 5)
!13863 = !DILocation(line: 1000, column: 19, scope: !13861)
!13864 = !DILocation(line: 1000, column: 5, scope: !13862)
!13865 = !DILocation(line: 975, column: 33, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13855, file: !1191, line: 975, column: 14)
!13867 = !DILocation(line: 975, column: 15, scope: !13866)
!13868 = !DILocation(line: 975, column: 14, scope: !13855)
!13869 = !DILocation(line: 979, column: 37, scope: !13855)
!13870 = !DILocation(line: 980, column: 37, scope: !13855)
!13871 = !DILocation(line: 982, column: 24, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !1191, line: 982, column: 9)
!13873 = distinct !DILexicalBlock(scope: !13855, file: !1191, line: 982, column: 9)
!13874 = !DILocation(line: 982, column: 9, scope: !13873)
!13875 = !DILocation(line: 984, column: 17, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !1191, line: 984, column: 17)
!13877 = distinct !DILexicalBlock(scope: !13872, file: !1191, line: 982, column: 45)
!13878 = !DILocation(line: 984, column: 32, scope: !13876)
!13879 = !DILocation(line: 0, scope: !13877)
!13880 = !DILocation(line: 984, column: 37, scope: !13876)
!13881 = !DILocation(line: 986, column: 27, scope: !13876)
!13882 = !DILocation(line: 986, column: 17, scope: !13876)
!13883 = !DILocation(line: 986, column: 32, scope: !13876)
!13884 = !DILocation(line: 986, column: 37, scope: !13876)
!13885 = !DILocation(line: 987, column: 27, scope: !13876)
!13886 = !DILocation(line: 987, column: 17, scope: !13876)
!13887 = !DILocation(line: 987, column: 32, scope: !13876)
!13888 = !DILocation(line: 984, column: 17, scope: !13877)
!13889 = !DILocation(line: 994, column: 20, scope: !13877)
!13890 = !DILocation(line: 992, column: 20, scope: !13877)
!13891 = !DILocation(line: 995, column: 30, scope: !13877)
!13892 = !DILocation(line: 995, column: 20, scope: !13877)
!13893 = !DILocation(line: 996, column: 30, scope: !13877)
!13894 = !DILocation(line: 996, column: 20, scope: !13877)
!13895 = !DILocation(line: 991, column: 13, scope: !13877)
!13896 = !DILocation(line: 997, column: 10, scope: !13877)
!13897 = !DILocation(line: 982, column: 39, scope: !13872)
!13898 = distinct !{!13898, !13874, !13899}
!13899 = !DILocation(line: 997, column: 10, scope: !13873)
!13900 = !DILocation(line: 969, column: 20, scope: !13856)
!13901 = distinct !{!13901, !13902, !13903}
!13902 = !DILocation(line: 969, column: 5, scope: !13857)
!13903 = !DILocation(line: 998, column: 5, scope: !13857)
!13904 = !DILocation(line: 1001, column: 41, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13906, file: !1191, line: 1001, column: 13)
!13906 = distinct !DILexicalBlock(scope: !13861, file: !1191, line: 1000, column: 50)
!13907 = !DILocation(line: 1001, column: 13, scope: !13905)
!13908 = !DILocation(line: 1001, column: 13, scope: !13906)
!13909 = !DILocation(line: 1002, column: 13, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13905, file: !1191, line: 1001, column: 50)
!13911 = !DILocation(line: 1003, column: 9, scope: !13910)
!13912 = !DILocation(line: 1000, column: 46, scope: !13861)
!13913 = distinct !{!13913, !13864, !13914}
!13914 = !DILocation(line: 1004, column: 5, scope: !13862)
!13915 = !DILocation(line: 1006, column: 5, scope: !13847)
!13916 = !DILocation(line: 1017, column: 1, scope: !13847)
!13917 = distinct !DISubprogram(name: "Hard_Fault_Handler", scope: !1191, file: !1191, line: 1040, type: !13639, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13918)
!13918 = !{!13919}
!13919 = !DILocalVariable(name: "stack", arg: 1, scope: !13917, file: !1191, line: 1040, type: !2564)
!13920 = !DILocation(line: 0, scope: !13917)
!13921 = !DILocation(line: 1042, column: 5, scope: !13917)
!13922 = !DILocation(line: 1043, column: 57, scope: !13917)
!13923 = !DILocation(line: 1043, column: 5, scope: !13917)
!13924 = !DILocation(line: 1044, column: 15, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13917, file: !1191, line: 1044, column: 9)
!13926 = !DILocation(line: 1044, column: 20, scope: !13925)
!13927 = !DILocation(line: 1044, column: 33, scope: !13925)
!13928 = !DILocation(line: 1044, column: 9, scope: !13917)
!13929 = !DILocation(line: 1045, column: 9, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13925, file: !1191, line: 1044, column: 39)
!13931 = !DILocation(line: 1046, column: 61, scope: !13930)
!13932 = !DILocation(line: 1046, column: 9, scope: !13930)
!13933 = !DILocation(line: 1047, column: 19, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13930, file: !1191, line: 1047, column: 13)
!13935 = !DILocation(line: 1047, column: 38, scope: !13934)
!13936 = !DILocation(line: 1047, column: 13, scope: !13930)
!13937 = !DILocation(line: 1048, column: 37, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13934, file: !1191, line: 1047, column: 44)
!13939 = !DILocation(line: 1048, column: 13, scope: !13938)
!13940 = !DILocation(line: 1049, column: 9, scope: !13938)
!13941 = !DILocation(line: 1050, column: 19, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13930, file: !1191, line: 1050, column: 13)
!13943 = !DILocation(line: 1050, column: 24, scope: !13942)
!13944 = !DILocation(line: 1050, column: 38, scope: !13942)
!13945 = !DILocation(line: 1050, column: 13, scope: !13930)
!13946 = !DILocation(line: 1051, column: 40, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13942, file: !1191, line: 1050, column: 45)
!13948 = !DILocation(line: 1051, column: 13, scope: !13947)
!13949 = !DILocation(line: 1052, column: 9, scope: !13947)
!13950 = !DILocation(line: 1053, column: 19, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13930, file: !1191, line: 1053, column: 13)
!13952 = !DILocation(line: 1053, column: 24, scope: !13951)
!13953 = !DILocation(line: 1053, column: 38, scope: !13951)
!13954 = !DILocation(line: 1053, column: 13, scope: !13930)
!13955 = !DILocation(line: 1054, column: 48, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13951, file: !1191, line: 1053, column: 45)
!13957 = !DILocation(line: 1054, column: 13, scope: !13956)
!13958 = !DILocation(line: 1055, column: 9, scope: !13956)
!13959 = !DILocation(line: 1058, column: 5, scope: !13917)
!13960 = !DILocation(line: 1060, column: 5, scope: !13917)
!13961 = !DILocation(line: 1065, column: 5, scope: !13917)
!13962 = distinct !{!13962, !13961, !13963}
!13963 = !DILocation(line: 1065, column: 14, scope: !13917)
!13964 = distinct !DISubprogram(name: "MemManage_Fault_Handler", scope: !1191, file: !1191, line: 1069, type: !13639, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13965)
!13965 = !{!13966}
!13966 = !DILocalVariable(name: "stack", arg: 1, scope: !13964, file: !1191, line: 1069, type: !2564)
!13967 = !DILocation(line: 0, scope: !13964)
!13968 = !DILocation(line: 1071, column: 5, scope: !13964)
!13969 = !DILocation(line: 1072, column: 57, scope: !13964)
!13970 = !DILocation(line: 1072, column: 5, scope: !13964)
!13971 = !DILocation(line: 1073, column: 15, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13964, file: !1191, line: 1073, column: 9)
!13973 = !DILocation(line: 1073, column: 20, scope: !13972)
!13974 = !DILocation(line: 1073, column: 28, scope: !13972)
!13975 = !DILocation(line: 1073, column: 9, scope: !13964)
!13976 = !DILocation(line: 1074, column: 44, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13972, file: !1191, line: 1073, column: 34)
!13978 = !DILocation(line: 1074, column: 9, scope: !13977)
!13979 = !DILocation(line: 1075, column: 5, scope: !13977)
!13980 = !DILocation(line: 1077, column: 5, scope: !13964)
!13981 = !DILocation(line: 1079, column: 5, scope: !13964)
!13982 = !DILocation(line: 1084, column: 5, scope: !13964)
!13983 = distinct !{!13983, !13982, !13984}
!13984 = !DILocation(line: 1084, column: 14, scope: !13964)
!13985 = distinct !DISubprogram(name: "Bus_Fault_Handler", scope: !1191, file: !1191, line: 1088, type: !13639, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !13986)
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "stack", arg: 1, scope: !13985, file: !1191, line: 1088, type: !2564)
!13988 = !DILocation(line: 0, scope: !13985)
!13989 = !DILocation(line: 1090, column: 5, scope: !13985)
!13990 = !DILocation(line: 1091, column: 57, scope: !13985)
!13991 = !DILocation(line: 1091, column: 5, scope: !13985)
!13992 = !DILocation(line: 1092, column: 15, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13985, file: !1191, line: 1092, column: 9)
!13994 = !DILocation(line: 1092, column: 20, scope: !13993)
!13995 = !DILocation(line: 1092, column: 30, scope: !13993)
!13996 = !DILocation(line: 1092, column: 9, scope: !13985)
!13997 = !DILocation(line: 1093, column: 36, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13993, file: !1191, line: 1092, column: 36)
!13999 = !DILocation(line: 1093, column: 9, scope: !13998)
!14000 = !DILocation(line: 1094, column: 5, scope: !13998)
!14001 = !DILocation(line: 1096, column: 5, scope: !13985)
!14002 = !DILocation(line: 1098, column: 5, scope: !13985)
!14003 = !DILocation(line: 1103, column: 5, scope: !13985)
!14004 = distinct !{!14004, !14003, !14005}
!14005 = !DILocation(line: 1103, column: 14, scope: !13985)
!14006 = distinct !DISubprogram(name: "Usage_Fault_Handler", scope: !1191, file: !1191, line: 1107, type: !13639, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !14007)
!14007 = !{!14008}
!14008 = !DILocalVariable(name: "stack", arg: 1, scope: !14006, file: !1191, line: 1107, type: !2564)
!14009 = !DILocation(line: 0, scope: !14006)
!14010 = !DILocation(line: 1109, column: 5, scope: !14006)
!14011 = !DILocation(line: 1110, column: 57, scope: !14006)
!14012 = !DILocation(line: 1110, column: 5, scope: !14006)
!14013 = !DILocation(line: 1111, column: 15, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14006, file: !1191, line: 1111, column: 9)
!14015 = !DILocation(line: 1111, column: 34, scope: !14014)
!14016 = !DILocation(line: 1111, column: 9, scope: !14006)
!14017 = !DILocation(line: 1112, column: 33, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14014, file: !1191, line: 1111, column: 40)
!14019 = !DILocation(line: 1112, column: 9, scope: !14018)
!14020 = !DILocation(line: 1113, column: 5, scope: !14018)
!14021 = !DILocation(line: 1115, column: 5, scope: !14006)
!14022 = !DILocation(line: 1117, column: 5, scope: !14006)
!14023 = !DILocation(line: 1122, column: 5, scope: !14006)
!14024 = distinct !{!14024, !14023, !14025}
!14025 = !DILocation(line: 1122, column: 14, scope: !14006)
!14026 = distinct !DISubprogram(name: "Debug_Monitor_Handler", scope: !1191, file: !1191, line: 1127, type: !13639, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !14027)
!14027 = !{!14028, !14029, !14030, !14031}
!14028 = !DILocalVariable(name: "stack", arg: 1, scope: !14026, file: !1191, line: 1127, type: !2564)
!14029 = !DILocalVariable(name: "offset", scope: !14026, file: !1191, line: 1129, type: !61)
!14030 = !DILocalVariable(name: "stack_end", scope: !14026, file: !1191, line: 1129, type: !61)
!14031 = !DILocalVariable(name: "is_match", scope: !14026, file: !1191, line: 1129, type: !61)
!14032 = !DILocation(line: 0, scope: !14026)
!14033 = !DILocation(line: 1131, column: 5, scope: !14026)
!14034 = !DILocation(line: 1136, column: 22, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14026, file: !1191, line: 1134, column: 5)
!14036 = !DILocation(line: 1137, column: 21, scope: !14035)
!14037 = !DILocation(line: 1138, column: 63, scope: !14035)
!14038 = !DILocation(line: 1138, column: 9, scope: !14035)
!14039 = !DILocation(line: 1141, column: 5, scope: !14026)
!14040 = !DILocation(line: 1143, column: 5, scope: !14026)
!14041 = !DILocation(line: 1148, column: 5, scope: !14026)
!14042 = distinct !{!14042, !14041, !14043}
!14043 = !DILocation(line: 1148, column: 14, scope: !14026)
!14044 = distinct !DISubprogram(name: "CommonFault_Handler", scope: !1191, file: !1191, line: 1165, type: !154, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!14045 = !DILocation(line: 1167, column: 5, scope: !14044)
!14046 = !{i64 35854, i64 35936, i64 35979, i64 36060, i64 36103, i64 36184, i64 36265, i64 36346, i64 36427, i64 36508, i64 36589, i64 36670, i64 36751, i64 36832, i64 36913, i64 36994, i64 37075, i64 37156, i64 37199, i64 37280, i64 37361, i64 37442, i64 37485, i64 37566, i64 37609, i64 37652, i64 37695, i64 37776, i64 37819, i64 37862, i64 37905}
!14047 = !DILocation(line: 1201, column: 1, scope: !14044)
!14048 = distinct !DISubprogram(name: "HardFault_Handler", scope: !1191, file: !1191, line: 1208, type: !154, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!14049 = !DILocation(line: 1210, column: 5, scope: !14048)
!14050 = !{i64 38128, i64 38172, i64 38215}
!14051 = !DILocation(line: 1216, column: 1, scope: !14048)
!14052 = distinct !DISubprogram(name: "MemManage_Handler", scope: !1191, file: !1191, line: 1223, type: !154, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!14053 = !DILocation(line: 1225, column: 5, scope: !14052)
!14054 = !{i64 38441, i64 38485, i64 38528}
!14055 = !DILocation(line: 1231, column: 1, scope: !14052)
!14056 = distinct !DISubprogram(name: "BusFault_Handler", scope: !1191, file: !1191, line: 1238, type: !154, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!14057 = !DILocation(line: 1240, column: 5, scope: !14056)
!14058 = !{i64 38749, i64 38793, i64 38836}
!14059 = !DILocation(line: 1246, column: 1, scope: !14056)
!14060 = distinct !DISubprogram(name: "UsageFault_Handler", scope: !1191, file: !1191, line: 1253, type: !154, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!14061 = !DILocation(line: 1255, column: 5, scope: !14060)
!14062 = !{i64 39061, i64 39105, i64 39148}
!14063 = !DILocation(line: 1261, column: 1, scope: !14060)
!14064 = distinct !DISubprogram(name: "DebugMon_Handler", scope: !1191, file: !1191, line: 1264, type: !154, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1190, retainedNodes: !2004)
!14065 = !DILocation(line: 1266, column: 5, scope: !14064)
!14066 = !{i64 39302, i64 39346, i64 39389}
!14067 = !DILocation(line: 1272, column: 1, scope: !14064)
!14068 = distinct !DISubprogram(name: "vApplicationStackOverflowHook", scope: !1967, file: !1967, line: 100, type: !14069, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !14071)
!14069 = !DISubroutineType(types: !14070)
!14070 = !{null, !868, !201}
!14071 = !{!14072, !14073}
!14072 = !DILocalVariable(name: "xTask", arg: 1, scope: !14068, file: !1967, line: 100, type: !868)
!14073 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !14068, file: !1967, line: 100, type: !201)
!14074 = !DILocation(line: 0, scope: !14068)
!14075 = !DILocation(line: 102, column: 40, scope: !14068)
!14076 = !DILocation(line: 102, column: 5, scope: !14068)
!14077 = !DILocation(line: 103, column: 5, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14079, file: !1967, line: 103, column: 5)
!14079 = distinct !DILexicalBlock(scope: !14068, file: !1967, line: 103, column: 5)
!14080 = !DILocation(line: 104, column: 1, scope: !14068)
!14081 = distinct !DISubprogram(name: "print_module_log", scope: !1375, file: !1375, line: 1102, type: !368, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14082)
!14082 = !{!14083, !14084, !14085, !14086, !14087, !14088}
!14083 = !DILocalVariable(name: "handle", arg: 1, scope: !14081, file: !1375, line: 1102, type: !51)
!14084 = !DILocalVariable(name: "func", arg: 2, scope: !14081, file: !1375, line: 1103, type: !331)
!14085 = !DILocalVariable(name: "line", arg: 3, scope: !14081, file: !1375, line: 1104, type: !7)
!14086 = !DILocalVariable(name: "level", arg: 4, scope: !14081, file: !1375, line: 1105, type: !364)
!14087 = !DILocalVariable(name: "message", arg: 5, scope: !14081, file: !1375, line: 1106, type: !331)
!14088 = !DILocalVariable(name: "ap", scope: !14081, file: !1375, line: 1108, type: !14089)
!14089 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5086, line: 46, baseType: !14090)
!14090 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5088, line: 32, baseType: !14091)
!14091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1375, baseType: !14092)
!14092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !14093)
!14093 = !{!14094}
!14094 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !14092, file: !1375, line: 1044, baseType: !51, size: 32)
!14095 = !DILocation(line: 0, scope: !14081)
!14096 = !DILocation(line: 1108, column: 5, scope: !14081)
!14097 = !DILocation(line: 1108, column: 13, scope: !14081)
!14098 = !DILocation(line: 1109, column: 5, scope: !14081)
!14099 = !DILocation(line: 1110, column: 5, scope: !14081)
!14100 = !DILocation(line: 1111, column: 5, scope: !14081)
!14101 = !DILocation(line: 1112, column: 1, scope: !14081)
!14102 = distinct !DISubprogram(name: "dump_module_buffer", scope: !1375, file: !1375, line: 1200, type: !373, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14103)
!14103 = !{!14104, !14105, !14106, !14107, !14108, !14109, !14110, !14111}
!14104 = !DILocalVariable(name: "handle", arg: 1, scope: !14102, file: !1375, line: 1200, type: !51)
!14105 = !DILocalVariable(name: "func", arg: 2, scope: !14102, file: !1375, line: 1201, type: !331)
!14106 = !DILocalVariable(name: "line", arg: 3, scope: !14102, file: !1375, line: 1202, type: !7)
!14107 = !DILocalVariable(name: "level", arg: 4, scope: !14102, file: !1375, line: 1203, type: !364)
!14108 = !DILocalVariable(name: "data", arg: 5, scope: !14102, file: !1375, line: 1204, type: !375)
!14109 = !DILocalVariable(name: "length", arg: 6, scope: !14102, file: !1375, line: 1205, type: !7)
!14110 = !DILocalVariable(name: "message", arg: 7, scope: !14102, file: !1375, line: 1206, type: !331)
!14111 = !DILocalVariable(name: "ap", scope: !14102, file: !1375, line: 1208, type: !14089)
!14112 = !DILocation(line: 0, scope: !14102)
!14113 = !DILocation(line: 1208, column: 5, scope: !14102)
!14114 = !DILocation(line: 1208, column: 13, scope: !14102)
!14115 = !DILocation(line: 1209, column: 5, scope: !14102)
!14116 = !DILocation(line: 1210, column: 5, scope: !14102)
!14117 = !DILocation(line: 1211, column: 5, scope: !14102)
!14118 = !DILocation(line: 1212, column: 1, scope: !14102)
!14119 = distinct !DISubprogram(name: "vdump_module_buffer", scope: !1375, file: !1375, line: 1114, type: !14120, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14122)
!14120 = !DISubroutineType(types: !14121)
!14121 = !{null, !51, !331, !7, !364, !375, !7, !331, !14089}
!14122 = !{!14123, !14124, !14125, !14126, !14127, !14128, !14129, !14130, !14131, !14132, !14133, !14140, !14142, !14143}
!14123 = !DILocalVariable(name: "handle", arg: 1, scope: !14119, file: !1375, line: 1114, type: !51)
!14124 = !DILocalVariable(name: "func", arg: 2, scope: !14119, file: !1375, line: 1115, type: !331)
!14125 = !DILocalVariable(name: "line", arg: 3, scope: !14119, file: !1375, line: 1116, type: !7)
!14126 = !DILocalVariable(name: "level", arg: 4, scope: !14119, file: !1375, line: 1117, type: !364)
!14127 = !DILocalVariable(name: "data", arg: 5, scope: !14119, file: !1375, line: 1118, type: !375)
!14128 = !DILocalVariable(name: "length", arg: 6, scope: !14119, file: !1375, line: 1119, type: !7)
!14129 = !DILocalVariable(name: "message", arg: 7, scope: !14119, file: !1375, line: 1120, type: !331)
!14130 = !DILocalVariable(name: "list", arg: 8, scope: !14119, file: !1375, line: 1121, type: !14089)
!14131 = !DILocalVariable(name: "context", scope: !14119, file: !1375, line: 1123, type: !1444)
!14132 = !DILocalVariable(name: "additional_length", scope: !14119, file: !1375, line: 1124, type: !7)
!14133 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !14134, file: !1375, line: 1133, type: !862)
!14134 = distinct !DILexicalBlock(scope: !14135, file: !1375, line: 1132, column: 39)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !1375, line: 1132, column: 17)
!14136 = distinct !DILexicalBlock(scope: !14137, file: !1375, line: 1131, column: 62)
!14137 = distinct !DILexicalBlock(scope: !14138, file: !1375, line: 1129, column: 13)
!14138 = distinct !DILexicalBlock(scope: !14139, file: !1375, line: 1127, column: 49)
!14139 = distinct !DILexicalBlock(scope: !14119, file: !1375, line: 1126, column: 9)
!14140 = !DILocalVariable(name: "syslog_buffer", scope: !14141, file: !1375, line: 1151, type: !1453)
!14141 = distinct !DILexicalBlock(scope: !14137, file: !1375, line: 1149, column: 16)
!14142 = !DILocalVariable(name: "log_message", scope: !14141, file: !1375, line: 1152, type: !1403)
!14143 = !DILocalVariable(name: "hex_dump_message", scope: !14141, file: !1375, line: 1153, type: !14144)
!14144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!14145 = !DILocation(line: 0, scope: !14119)
!14146 = !DILocation(line: 1126, column: 19, scope: !14139)
!14147 = !DILocation(line: 1126, column: 30, scope: !14139)
!14148 = !DILocation(line: 1127, column: 13, scope: !14139)
!14149 = !DILocation(line: 1127, column: 26, scope: !14139)
!14150 = !DILocation(line: 1127, column: 38, scope: !14139)
!14151 = !DILocation(line: 1126, column: 9, scope: !14119)
!14152 = !DILocation(line: 1129, column: 14, scope: !14137)
!14153 = !DILocation(line: 1130, column: 17, scope: !14137)
!14154 = !DILocation(line: 1130, column: 21, scope: !14137)
!14155 = !DILocation(line: 1130, column: 46, scope: !14137)
!14156 = !DILocation(line: 1131, column: 21, scope: !14137)
!14157 = !DILocation(line: 1131, column: 25, scope: !14137)
!14158 = !DILocation(line: 1131, column: 47, scope: !14137)
!14159 = !DILocation(line: 1131, column: 55, scope: !14137)
!14160 = !DILocation(line: 1129, column: 13, scope: !14138)
!14161 = !DILocation(line: 1132, column: 17, scope: !14135)
!14162 = !DILocation(line: 1132, column: 34, scope: !14135)
!14163 = !DILocation(line: 1132, column: 17, scope: !14136)
!14164 = !DILocation(line: 231, column: 2, scope: !14165, inlinedAt: !14169)
!14165 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !1985, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14166)
!14166 = !{!14167, !14168}
!14167 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !14165, file: !863, line: 229, type: !61)
!14168 = !DILocalVariable(name: "ulNewBASEPRI", scope: !14165, file: !863, line: 229, type: !61)
!14169 = distinct !DILocation(line: 1134, column: 42, scope: !14134)
!14170 = !{i64 698884, i64 698921, i64 698953, i64 698989, i64 699016}
!14171 = !DILocation(line: 0, scope: !14165, inlinedAt: !14169)
!14172 = !DILocation(line: 0, scope: !14134)
!14173 = !DILocation(line: 1135, column: 21, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14134, file: !1375, line: 1135, column: 21)
!14175 = !DILocation(line: 1135, column: 38, scope: !14174)
!14176 = !DILocation(line: 1135, column: 21, scope: !14134)
!14177 = !DILocation(line: 1138, column: 28, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14174, file: !1375, line: 1135, column: 63)
!14179 = !DILocation(line: 1139, column: 37, scope: !14178)
!14180 = !DILocation(line: 1140, column: 28, scope: !14178)
!14181 = !DILocation(line: 1137, column: 21, scope: !14178)
!14182 = !DILocation(line: 1143, column: 17, scope: !14178)
!14183 = !DILocation(line: 1144, column: 17, scope: !14134)
!14184 = !DILocation(line: 1145, column: 17, scope: !14134)
!14185 = !DILocation(line: 1146, column: 17, scope: !14134)
!14186 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !14187, file: !863, line: 247, type: !61)
!14187 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2604, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14188)
!14188 = !{!14186}
!14189 = !DILocation(line: 0, scope: !14187, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 1147, column: 17, scope: !14134)
!14191 = !DILocation(line: 249, column: 2, scope: !14187, inlinedAt: !14190)
!14192 = !{i64 699417}
!14193 = !DILocation(line: 1148, column: 13, scope: !14134)
!14194 = !DILocation(line: 1151, column: 13, scope: !14141)
!14195 = !DILocation(line: 1151, column: 46, scope: !14141)
!14196 = !DILocation(line: 0, scope: !14141)
!14197 = !DILocation(line: 1151, column: 30, scope: !14141)
!14198 = !DILocation(line: 1155, column: 22, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14141, file: !1375, line: 1155, column: 17)
!14200 = !DILocation(line: 1155, column: 17, scope: !14141)
!14201 = !DILocation(line: 1159, column: 44, scope: !14141)
!14202 = !DILocation(line: 1160, column: 26, scope: !14141)
!14203 = !DILocation(line: 1160, column: 39, scope: !14141)
!14204 = !DILocation(line: 1161, column: 46, scope: !14141)
!14205 = !DILocation(line: 1162, column: 54, scope: !14141)
!14206 = !DILocation(line: 1162, column: 31, scope: !14141)
!14207 = !DILocation(line: 1162, column: 43, scope: !14141)
!14208 = !DILocation(line: 1163, column: 31, scope: !14141)
!14209 = !DILocation(line: 1163, column: 43, scope: !14141)
!14210 = !DILocation(line: 1164, column: 31, scope: !14141)
!14211 = !DILocation(line: 1164, column: 41, scope: !14141)
!14212 = !DILocation(line: 1165, column: 31, scope: !14141)
!14213 = !DILocation(line: 1165, column: 43, scope: !14141)
!14214 = !DILocation(line: 1166, column: 43, scope: !14141)
!14215 = !DILocation(line: 1166, column: 31, scope: !14141)
!14216 = !DILocation(line: 1166, column: 41, scope: !14141)
!14217 = !DILocation(line: 1170, column: 47, scope: !14141)
!14218 = !DILocation(line: 1170, column: 19, scope: !14141)
!14219 = !DILocation(line: 1172, column: 17, scope: !14141)
!14220 = !DILocation(line: 1177, column: 24, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14141, file: !1375, line: 1177, column: 17)
!14222 = !DILocation(line: 1177, column: 17, scope: !14141)
!14223 = !DILocation(line: 1178, column: 23, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14225, file: !1375, line: 1178, column: 22)
!14225 = distinct !DILexicalBlock(scope: !14221, file: !1375, line: 1177, column: 46)
!14226 = !DILocation(line: 1178, column: 45, scope: !14224)
!14227 = !DILocation(line: 1178, column: 53, scope: !14224)
!14228 = !DILocation(line: 0, scope: !14225)
!14229 = !DILocation(line: 1184, column: 38, scope: !14141)
!14230 = !DILocation(line: 1184, column: 13, scope: !14141)
!14231 = !DILocation(line: 1185, column: 31, scope: !14141)
!14232 = !DILocation(line: 1185, column: 43, scope: !14141)
!14233 = !DILocation(line: 1187, column: 31, scope: !14141)
!14234 = !DILocation(line: 1187, column: 47, scope: !14141)
!14235 = !DILocation(line: 1188, column: 17, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14141, file: !1375, line: 1188, column: 17)
!14237 = !DILocation(line: 1188, column: 17, scope: !14141)
!14238 = !DILocation(line: 1189, column: 67, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !1375, line: 1189, column: 21)
!14240 = distinct !DILexicalBlock(scope: !14236, file: !1375, line: 1188, column: 36)
!14241 = !DILocation(line: 1189, column: 56, scope: !14239)
!14242 = !DILocation(line: 1189, column: 100, scope: !14239)
!14243 = !DILocation(line: 1189, column: 21, scope: !14240)
!14244 = !DILocation(line: 1190, column: 76, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14239, file: !1375, line: 1189, column: 109)
!14246 = !DILocation(line: 1190, column: 21, scope: !14245)
!14247 = !DILocation(line: 1191, column: 51, scope: !14245)
!14248 = !DILocation(line: 1192, column: 17, scope: !14245)
!14249 = !DILocation(line: 1195, column: 13, scope: !14141)
!14250 = !DILocation(line: 1196, column: 9, scope: !14137)
!14251 = !DILocation(line: 1198, column: 1, scope: !14119)
!14252 = distinct !DISubprogram(name: "get_current_time_in_ms", scope: !1375, file: !1375, line: 601, type: !14253, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14255)
!14253 = !DISubroutineType(types: !14254)
!14254 = !{!30}
!14255 = !{!14256, !14257}
!14256 = !DILocalVariable(name: "count", scope: !14252, file: !1375, line: 603, type: !61)
!14257 = !DILocalVariable(name: "count64", scope: !14252, file: !1375, line: 604, type: !1462)
!14258 = !DILocation(line: 603, column: 5, scope: !14252)
!14259 = !DILocation(line: 0, scope: !14252)
!14260 = !DILocation(line: 603, column: 14, scope: !14252)
!14261 = !DILocation(line: 605, column: 5, scope: !14252)
!14262 = !DILocation(line: 606, column: 26, scope: !14252)
!14263 = !DILocation(line: 606, column: 16, scope: !14252)
!14264 = !DILocation(line: 606, column: 32, scope: !14252)
!14265 = !DILocation(line: 606, column: 37, scope: !14252)
!14266 = !DILocation(line: 607, column: 12, scope: !14252)
!14267 = !DILocation(line: 608, column: 1, scope: !14252)
!14268 = !DILocation(line: 607, column: 5, scope: !14252)
!14269 = distinct !DISubprogram(name: "hex_dump_data", scope: !1375, file: !1375, line: 865, type: !14270, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14272)
!14270 = !DISubroutineType(types: !14271)
!14271 = !{null, !331, !7}
!14272 = !{!14273, !14274, !14275}
!14273 = !DILocalVariable(name: "data", arg: 1, scope: !14269, file: !1375, line: 865, type: !331)
!14274 = !DILocalVariable(name: "length", arg: 2, scope: !14269, file: !1375, line: 865, type: !7)
!14275 = !DILocalVariable(name: "index", scope: !14269, file: !1375, line: 867, type: !7)
!14276 = !DILocation(line: 0, scope: !14269)
!14277 = !DILocation(line: 868, column: 27, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14279, file: !1375, line: 868, column: 5)
!14279 = distinct !DILexicalBlock(scope: !14269, file: !1375, line: 868, column: 5)
!14280 = !DILocation(line: 868, column: 5, scope: !14279)
!14281 = !DILocation(line: 869, column: 30, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14278, file: !1375, line: 868, column: 46)
!14283 = !DILocation(line: 869, column: 24, scope: !14282)
!14284 = !DILocation(line: 869, column: 9, scope: !14282)
!14285 = !DILocation(line: 870, column: 20, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14282, file: !1375, line: 870, column: 13)
!14287 = !DILocation(line: 870, column: 25, scope: !14286)
!14288 = !DILocation(line: 870, column: 30, scope: !14286)
!14289 = !DILocation(line: 870, column: 13, scope: !14282)
!14290 = !DILocation(line: 874, column: 23, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14282, file: !1375, line: 874, column: 13)
!14292 = !DILocation(line: 874, column: 13, scope: !14282)
!14293 = !DILocation(line: 0, scope: !14282)
!14294 = distinct !{!14294, !14280, !14295}
!14295 = !DILocation(line: 877, column: 5, scope: !14279)
!14296 = !DILocation(line: 878, column: 20, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14269, file: !1375, line: 878, column: 9)
!14298 = !DILocation(line: 879, column: 9, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14297, file: !1375, line: 878, column: 40)
!14300 = !DILocation(line: 880, column: 5, scope: !14299)
!14301 = !DILocation(line: 881, column: 1, scope: !14269)
!14302 = distinct !DISubprogram(name: "buffer_pool_alloc", scope: !1375, file: !1375, line: 562, type: !14303, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14305)
!14303 = !DISubroutineType(types: !14304)
!14304 = !{!1453}
!14305 = !{!14306, !14307}
!14306 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !14302, file: !1375, line: 564, type: !862)
!14307 = !DILocalVariable(name: "index", scope: !14302, file: !1375, line: 565, type: !61)
!14308 = !DILocation(line: 231, column: 2, scope: !14165, inlinedAt: !14309)
!14309 = distinct !DILocation(line: 567, column: 30, scope: !14302)
!14310 = !DILocation(line: 0, scope: !14165, inlinedAt: !14309)
!14311 = !DILocation(line: 0, scope: !14302)
!14312 = !DILocation(line: 568, column: 5, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14302, file: !1375, line: 568, column: 5)
!14314 = !DILocation(line: 568, column: 50, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14313, file: !1375, line: 568, column: 5)
!14316 = !DILocation(line: 568, column: 27, scope: !14315)
!14317 = distinct !{!14317, !14312, !14318}
!14318 = !DILocation(line: 574, column: 5, scope: !14313)
!14319 = !DILocation(line: 569, column: 14, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14321, file: !1375, line: 569, column: 13)
!14321 = distinct !DILexicalBlock(scope: !14315, file: !1375, line: 568, column: 54)
!14322 = !DILocation(line: 569, column: 40, scope: !14320)
!14323 = !DILocation(line: 569, column: 13, scope: !14321)
!14324 = !DILocation(line: 570, column: 48, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14320, file: !1375, line: 569, column: 50)
!14326 = !DILocation(line: 0, scope: !14187, inlinedAt: !14327)
!14327 = distinct !DILocation(line: 571, column: 13, scope: !14325)
!14328 = !DILocation(line: 249, column: 2, scope: !14187, inlinedAt: !14327)
!14329 = !DILocation(line: 572, column: 13, scope: !14325)
!14330 = !DILocation(line: 575, column: 22, scope: !14302)
!14331 = !DILocation(line: 0, scope: !14187, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 576, column: 5, scope: !14302)
!14333 = !DILocation(line: 249, column: 2, scope: !14187, inlinedAt: !14332)
!14334 = !DILocation(line: 582, column: 5, scope: !14302)
!14335 = !DILocation(line: 583, column: 1, scope: !14302)
!14336 = distinct !DISubprogram(name: "log_queue_send", scope: !1375, file: !1375, line: 621, type: !14337, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14340)
!14337 = !DISubroutineType(types: !14338)
!14338 = !{null, !14339}
!14339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!14340 = !{!14341, !14342}
!14341 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !14336, file: !1375, line: 621, type: !14339)
!14342 = !DILocalVariable(name: "xTaskWokenByPost", scope: !14343, file: !1375, line: 624, type: !869)
!14343 = distinct !DILexicalBlock(scope: !14344, file: !1375, line: 623, column: 39)
!14344 = distinct !DILexicalBlock(scope: !14336, file: !1375, line: 623, column: 9)
!14345 = !DILocation(line: 0, scope: !14336)
!14346 = !DILocation(line: 623, column: 9, scope: !14344)
!14347 = !DILocation(line: 623, column: 31, scope: !14344)
!14348 = !DILocation(line: 623, column: 9, scope: !14336)
!14349 = !DILocation(line: 624, column: 9, scope: !14343)
!14350 = !DILocation(line: 0, scope: !14343)
!14351 = !DILocation(line: 624, column: 20, scope: !14343)
!14352 = !DILocation(line: 625, column: 13, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14343, file: !1375, line: 625, column: 13)
!14354 = !DILocation(line: 625, column: 75, scope: !14353)
!14355 = !DILocation(line: 625, column: 13, scope: !14343)
!14356 = !DILocation(line: 626, column: 33, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14353, file: !1375, line: 625, column: 95)
!14358 = !DILocation(line: 626, column: 13, scope: !14357)
!14359 = !DILocation(line: 627, column: 9, scope: !14357)
!14360 = !DILocation(line: 628, column: 13, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !1375, line: 628, column: 13)
!14362 = distinct !DILexicalBlock(scope: !14353, file: !1375, line: 627, column: 16)
!14363 = !DILocation(line: 628, column: 13, scope: !14362)
!14364 = !DILocation(line: 628, column: 13, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14361, file: !1375, line: 628, column: 13)
!14366 = !{i64 2148494253}
!14367 = !{i64 2148494293}
!14368 = !DILocation(line: 630, column: 5, scope: !14344)
!14369 = !DILocation(line: 630, column: 5, scope: !14343)
!14370 = !DILocation(line: 631, column: 9, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14344, file: !1375, line: 630, column: 12)
!14372 = !DILocation(line: 633, column: 1, scope: !14336)
!14373 = distinct !DISubprogram(name: "buffer_pool_release", scope: !1375, file: !1375, line: 587, type: !14374, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14376)
!14374 = !DISubroutineType(types: !14375)
!14375 = !{null, !1453}
!14376 = !{!14377, !14378, !14379}
!14377 = !DILocalVariable(name: "syslog_buffer", arg: 1, scope: !14373, file: !1375, line: 587, type: !1453)
!14378 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !14373, file: !1375, line: 589, type: !862)
!14379 = !DILocalVariable(name: "log_message", scope: !14373, file: !1375, line: 590, type: !1403)
!14380 = !DILocation(line: 0, scope: !14373)
!14381 = !DILocation(line: 590, column: 51, scope: !14373)
!14382 = !DILocation(line: 231, column: 2, scope: !14165, inlinedAt: !14383)
!14383 = distinct !DILocation(line: 592, column: 30, scope: !14373)
!14384 = !DILocation(line: 0, scope: !14165, inlinedAt: !14383)
!14385 = !DILocation(line: 593, column: 20, scope: !14373)
!14386 = !DILocation(line: 593, column: 29, scope: !14373)
!14387 = !DILocation(line: 594, column: 23, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14373, file: !1375, line: 594, column: 9)
!14389 = !DILocation(line: 594, column: 36, scope: !14388)
!14390 = !DILocation(line: 595, column: 13, scope: !14388)
!14391 = !DILocation(line: 595, column: 49, scope: !14388)
!14392 = !DILocation(line: 595, column: 16, scope: !14388)
!14393 = !DILocation(line: 594, column: 9, scope: !14373)
!14394 = !DILocation(line: 596, column: 9, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14388, file: !1375, line: 595, column: 68)
!14396 = !DILocation(line: 597, column: 5, scope: !14395)
!14397 = !DILocation(line: 0, scope: !14187, inlinedAt: !14398)
!14398 = distinct !DILocation(line: 598, column: 5, scope: !14373)
!14399 = !DILocation(line: 249, column: 2, scope: !14187, inlinedAt: !14398)
!14400 = !DILocation(line: 599, column: 1, scope: !14373)
!14401 = distinct !DISubprogram(name: "vprint_module_log", scope: !1375, file: !1375, line: 1046, type: !14402, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14404)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{null, !51, !331, !7, !364, !331, !14089}
!14404 = !{!14405, !14406, !14407, !14408, !14409, !14410, !14411, !14412, !14419, !14421, !14422}
!14405 = !DILocalVariable(name: "handle", arg: 1, scope: !14401, file: !1375, line: 1046, type: !51)
!14406 = !DILocalVariable(name: "func", arg: 2, scope: !14401, file: !1375, line: 1047, type: !331)
!14407 = !DILocalVariable(name: "line", arg: 3, scope: !14401, file: !1375, line: 1048, type: !7)
!14408 = !DILocalVariable(name: "level", arg: 4, scope: !14401, file: !1375, line: 1049, type: !364)
!14409 = !DILocalVariable(name: "message", arg: 5, scope: !14401, file: !1375, line: 1050, type: !331)
!14410 = !DILocalVariable(name: "list", arg: 6, scope: !14401, file: !1375, line: 1051, type: !14089)
!14411 = !DILocalVariable(name: "context", scope: !14401, file: !1375, line: 1053, type: !1444)
!14412 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !14413, file: !1375, line: 1061, type: !862)
!14413 = distinct !DILexicalBlock(scope: !14414, file: !1375, line: 1060, column: 39)
!14414 = distinct !DILexicalBlock(scope: !14415, file: !1375, line: 1060, column: 17)
!14415 = distinct !DILexicalBlock(scope: !14416, file: !1375, line: 1059, column: 62)
!14416 = distinct !DILexicalBlock(scope: !14417, file: !1375, line: 1057, column: 13)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !1375, line: 1055, column: 49)
!14418 = distinct !DILexicalBlock(scope: !14401, file: !1375, line: 1054, column: 9)
!14419 = !DILocalVariable(name: "syslog_buffer", scope: !14420, file: !1375, line: 1078, type: !1453)
!14420 = distinct !DILexicalBlock(scope: !14416, file: !1375, line: 1076, column: 16)
!14421 = !DILocalVariable(name: "log_message", scope: !14420, file: !1375, line: 1079, type: !1403)
!14422 = !DILocalVariable(name: "normal_log_message", scope: !14420, file: !1375, line: 1080, type: !14423)
!14423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32)
!14424 = !DILocation(line: 0, scope: !14401)
!14425 = !DILocation(line: 1054, column: 19, scope: !14418)
!14426 = !DILocation(line: 1054, column: 30, scope: !14418)
!14427 = !DILocation(line: 1055, column: 13, scope: !14418)
!14428 = !DILocation(line: 1055, column: 26, scope: !14418)
!14429 = !DILocation(line: 1055, column: 38, scope: !14418)
!14430 = !DILocation(line: 1054, column: 9, scope: !14401)
!14431 = !DILocation(line: 1057, column: 14, scope: !14416)
!14432 = !DILocation(line: 1058, column: 17, scope: !14416)
!14433 = !DILocation(line: 1058, column: 21, scope: !14416)
!14434 = !DILocation(line: 1058, column: 46, scope: !14416)
!14435 = !DILocation(line: 1059, column: 21, scope: !14416)
!14436 = !DILocation(line: 1059, column: 25, scope: !14416)
!14437 = !DILocation(line: 1059, column: 47, scope: !14416)
!14438 = !DILocation(line: 1059, column: 55, scope: !14416)
!14439 = !DILocation(line: 1057, column: 13, scope: !14417)
!14440 = !DILocation(line: 1060, column: 17, scope: !14414)
!14441 = !DILocation(line: 1060, column: 34, scope: !14414)
!14442 = !DILocation(line: 1060, column: 17, scope: !14415)
!14443 = !DILocation(line: 231, column: 2, scope: !14165, inlinedAt: !14444)
!14444 = distinct !DILocation(line: 1062, column: 42, scope: !14413)
!14445 = !DILocation(line: 0, scope: !14165, inlinedAt: !14444)
!14446 = !DILocation(line: 0, scope: !14413)
!14447 = !DILocation(line: 1063, column: 21, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14413, file: !1375, line: 1063, column: 21)
!14449 = !DILocation(line: 1063, column: 38, scope: !14448)
!14450 = !DILocation(line: 1063, column: 21, scope: !14413)
!14451 = !DILocation(line: 1066, column: 28, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14448, file: !1375, line: 1063, column: 63)
!14453 = !DILocation(line: 1067, column: 37, scope: !14452)
!14454 = !DILocation(line: 1068, column: 28, scope: !14452)
!14455 = !DILocation(line: 1065, column: 21, scope: !14452)
!14456 = !DILocation(line: 1071, column: 17, scope: !14452)
!14457 = !DILocation(line: 1072, column: 17, scope: !14413)
!14458 = !DILocation(line: 1073, column: 17, scope: !14413)
!14459 = !DILocation(line: 0, scope: !14187, inlinedAt: !14460)
!14460 = distinct !DILocation(line: 1074, column: 17, scope: !14413)
!14461 = !DILocation(line: 249, column: 2, scope: !14187, inlinedAt: !14460)
!14462 = !DILocation(line: 1075, column: 13, scope: !14413)
!14463 = !DILocation(line: 1078, column: 13, scope: !14420)
!14464 = !DILocation(line: 1078, column: 46, scope: !14420)
!14465 = !DILocation(line: 0, scope: !14420)
!14466 = !DILocation(line: 1078, column: 30, scope: !14420)
!14467 = !DILocation(line: 1082, column: 22, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14420, file: !1375, line: 1082, column: 17)
!14469 = !DILocation(line: 1082, column: 17, scope: !14420)
!14470 = !DILocation(line: 1085, column: 44, scope: !14420)
!14471 = !DILocation(line: 1086, column: 26, scope: !14420)
!14472 = !DILocation(line: 1086, column: 39, scope: !14420)
!14473 = !DILocation(line: 1087, column: 48, scope: !14420)
!14474 = !DILocation(line: 1088, column: 56, scope: !14420)
!14475 = !DILocation(line: 1088, column: 33, scope: !14420)
!14476 = !DILocation(line: 1088, column: 45, scope: !14420)
!14477 = !DILocation(line: 1089, column: 33, scope: !14420)
!14478 = !DILocation(line: 1089, column: 45, scope: !14420)
!14479 = !DILocation(line: 1090, column: 33, scope: !14420)
!14480 = !DILocation(line: 1090, column: 43, scope: !14420)
!14481 = !DILocation(line: 1091, column: 33, scope: !14420)
!14482 = !DILocation(line: 1091, column: 45, scope: !14420)
!14483 = !DILocation(line: 1092, column: 45, scope: !14420)
!14484 = !DILocation(line: 1092, column: 33, scope: !14420)
!14485 = !DILocation(line: 1092, column: 43, scope: !14420)
!14486 = !DILocation(line: 1096, column: 49, scope: !14420)
!14487 = !DILocation(line: 1096, column: 19, scope: !14420)
!14488 = !DILocation(line: 1097, column: 13, scope: !14420)
!14489 = !DILocation(line: 1098, column: 9, scope: !14416)
!14490 = !DILocation(line: 1100, column: 1, scope: !14401)
!14491 = distinct !DISubprogram(name: "log_uart_init", scope: !1375, file: !1375, line: 185, type: !6287, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14492)
!14492 = !{!14493, !14494, !14502}
!14493 = !DILocalVariable(name: "port", arg: 1, scope: !14491, file: !1375, line: 185, type: !755)
!14494 = !DILocalVariable(name: "uart_config", scope: !14491, file: !1375, line: 187, type: !14495)
!14495 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !650, line: 378, baseType: !14496)
!14496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 373, size: 128, elements: !14497)
!14497 = !{!14498, !14499, !14500, !14501}
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !14496, file: !650, line: 374, baseType: !712, size: 32)
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !14496, file: !650, line: 375, baseType: !714, size: 32, offset: 32)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !14496, file: !650, line: 376, baseType: !716, size: 32, offset: 64)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !14496, file: !650, line: 377, baseType: !718, size: 32, offset: 96)
!14502 = !DILocalVariable(name: "ret", scope: !14491, file: !1375, line: 188, type: !6136)
!14503 = !DILocation(line: 0, scope: !14491)
!14504 = !DILocation(line: 187, column: 5, scope: !14491)
!14505 = !DILocation(line: 187, column: 23, scope: !14491)
!14506 = !DILocation(line: 191, column: 17, scope: !14491)
!14507 = !DILocation(line: 191, column: 26, scope: !14491)
!14508 = !DILocation(line: 192, column: 17, scope: !14491)
!14509 = !DILocation(line: 192, column: 24, scope: !14491)
!14510 = !DILocation(line: 193, column: 17, scope: !14491)
!14511 = !DILocation(line: 193, column: 26, scope: !14491)
!14512 = !DILocation(line: 194, column: 17, scope: !14491)
!14513 = !DILocation(line: 194, column: 29, scope: !14491)
!14514 = !DILocation(line: 196, column: 21, scope: !14491)
!14515 = !DILocation(line: 197, column: 11, scope: !14491)
!14516 = !DILocation(line: 199, column: 22, scope: !14491)
!14517 = !DILocation(line: 202, column: 1, scope: !14491)
!14518 = !DILocation(line: 201, column: 5, scope: !14491)
!14519 = distinct !DISubprogram(name: "log_putchar", scope: !1375, file: !1375, line: 204, type: !14520, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{null, !202}
!14522 = !{!14523}
!14523 = !DILocalVariable(name: "byte", arg: 1, scope: !14519, file: !1375, line: 204, type: !202)
!14524 = !DILocation(line: 0, scope: !14519)
!14525 = !DILocation(line: 206, column: 23, scope: !14519)
!14526 = !DILocation(line: 206, column: 5, scope: !14519)
!14527 = !DILocation(line: 207, column: 1, scope: !14519)
!14528 = distinct !DISubprogram(name: "buffer_pool_init", scope: !1375, file: !1375, line: 524, type: !154, scopeLine: 525, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !2004)
!14529 = !DILocation(line: 526, column: 5, scope: !14528)
!14530 = !DILocation(line: 527, column: 1, scope: !14528)
!14531 = distinct !DISubprogram(name: "log_queue_create", scope: !1375, file: !1375, line: 613, type: !154, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !2004)
!14532 = !DILocation(line: 615, column: 19, scope: !14531)
!14533 = !DILocation(line: 615, column: 17, scope: !14531)
!14534 = !DILocation(line: 616, column: 14, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14531, file: !1375, line: 616, column: 9)
!14536 = !DILocation(line: 616, column: 9, scope: !14531)
!14537 = !DILocation(line: 617, column: 9, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14535, file: !1375, line: 616, column: 30)
!14539 = !DILocation(line: 618, column: 5, scope: !14538)
!14540 = !DILocation(line: 619, column: 1, scope: !14531)
!14541 = distinct !DISubprogram(name: "log_queue_receive", scope: !1375, file: !1375, line: 635, type: !14542, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14544)
!14542 = !DISubroutineType(types: !14543)
!14543 = !{!7, !14339}
!14544 = !{!14545, !14546}
!14545 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !14541, file: !1375, line: 635, type: !14339)
!14546 = !DILocalVariable(name: "ret_val", scope: !14541, file: !1375, line: 637, type: !869)
!14547 = !DILocation(line: 0, scope: !14541)
!14548 = !DILocation(line: 637, column: 26, scope: !14541)
!14549 = !DILocation(line: 638, column: 20, scope: !14541)
!14550 = !DILocation(line: 638, column: 12, scope: !14541)
!14551 = !DILocation(line: 638, column: 5, scope: !14541)
!14552 = distinct !DISubprogram(name: "print_normal_log", scope: !1375, file: !1375, line: 854, type: !14553, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14557)
!14553 = !DISubroutineType(types: !14554)
!14554 = !{null, !14555}
!14555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14556, size: 32)
!14556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1413)
!14557 = !{!14558}
!14558 = !DILocalVariable(name: "normal_log_message", arg: 1, scope: !14552, file: !1375, line: 854, type: !14555)
!14559 = !DILocation(line: 0, scope: !14552)
!14560 = !DILocation(line: 857, column: 46, scope: !14552)
!14561 = !DILocation(line: 858, column: 32, scope: !14552)
!14562 = !DILocation(line: 859, column: 12, scope: !14552)
!14563 = !DILocation(line: 860, column: 32, scope: !14552)
!14564 = !DILocation(line: 861, column: 32, scope: !14552)
!14565 = !DILocation(line: 856, column: 5, scope: !14552)
!14566 = !DILocation(line: 862, column: 30, scope: !14552)
!14567 = !DILocation(line: 862, column: 5, scope: !14552)
!14568 = !DILocation(line: 863, column: 1, scope: !14552)
!14569 = distinct !DISubprogram(name: "print_hex_dump", scope: !1375, file: !1375, line: 883, type: !14570, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14574)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{null, !14572}
!14572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14573, size: 32)
!14573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1426)
!14574 = !{!14575}
!14575 = !DILocalVariable(name: "hex_dump_message", arg: 1, scope: !14569, file: !1375, line: 883, type: !14572)
!14576 = !DILocation(line: 0, scope: !14569)
!14577 = !DILocation(line: 886, column: 44, scope: !14569)
!14578 = !DILocation(line: 887, column: 30, scope: !14569)
!14579 = !DILocation(line: 888, column: 12, scope: !14569)
!14580 = !DILocation(line: 889, column: 30, scope: !14569)
!14581 = !DILocation(line: 890, column: 30, scope: !14569)
!14582 = !DILocation(line: 885, column: 5, scope: !14569)
!14583 = !DILocation(line: 891, column: 30, scope: !14569)
!14584 = !DILocation(line: 891, column: 5, scope: !14569)
!14585 = !DILocation(line: 892, column: 27, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14569, file: !1375, line: 892, column: 9)
!14587 = !DILocation(line: 892, column: 39, scope: !14586)
!14588 = !DILocation(line: 0, scope: !14586)
!14589 = !DILocation(line: 892, column: 9, scope: !14569)
!14590 = !DILocation(line: 893, column: 9, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14586, file: !1375, line: 892, column: 61)
!14592 = !DILocation(line: 894, column: 41, scope: !14591)
!14593 = !DILocation(line: 894, column: 76, scope: !14591)
!14594 = !DILocation(line: 894, column: 88, scope: !14591)
!14595 = !DILocation(line: 894, column: 9, scope: !14591)
!14596 = !DILocation(line: 895, column: 5, scope: !14591)
!14597 = !DILocation(line: 896, column: 9, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14586, file: !1375, line: 895, column: 12)
!14599 = !DILocation(line: 898, column: 1, scope: !14569)
!14600 = distinct !DISubprogram(name: "process_log_message", scope: !1375, file: !1375, line: 900, type: !14601, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14605)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{null, !14603}
!14603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14604, size: 32)
!14604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!14605 = !{!14606, !14607}
!14606 = !DILocalVariable(name: "log_message", arg: 1, scope: !14600, file: !1375, line: 900, type: !14603)
!14607 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !14608, file: !1375, line: 903, type: !862)
!14608 = distinct !DILexicalBlock(scope: !14609, file: !1375, line: 902, column: 28)
!14609 = distinct !DILexicalBlock(scope: !14600, file: !1375, line: 902, column: 9)
!14610 = !DILocation(line: 0, scope: !14600)
!14611 = !DILocation(line: 902, column: 9, scope: !14609)
!14612 = !DILocation(line: 902, column: 9, scope: !14600)
!14613 = !DILocation(line: 231, column: 2, scope: !14165, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 903, column: 46, scope: !14608)
!14615 = !DILocation(line: 0, scope: !14165, inlinedAt: !14614)
!14616 = !DILocation(line: 0, scope: !14608)
!14617 = !DILocation(line: 904, column: 67, scope: !14608)
!14618 = !DILocation(line: 904, column: 9, scope: !14608)
!14619 = !DILocation(line: 905, column: 27, scope: !14608)
!14620 = !DILocation(line: 0, scope: !14187, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 906, column: 9, scope: !14608)
!14622 = !DILocation(line: 249, column: 2, scope: !14187, inlinedAt: !14621)
!14623 = !DILocation(line: 907, column: 5, scope: !14608)
!14624 = !DILocation(line: 909, column: 49, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14600, file: !1375, line: 909, column: 9)
!14626 = !DILocation(line: 909, column: 33, scope: !14625)
!14627 = !DILocation(line: 909, column: 9, scope: !14600)
!14628 = !DILocation(line: 910, column: 40, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14625, file: !1375, line: 909, column: 63)
!14630 = !DILocation(line: 910, column: 42, scope: !14629)
!14631 = !DILocation(line: 910, column: 9, scope: !14629)
!14632 = !DILocation(line: 911, column: 5, scope: !14629)
!14633 = !DILocation(line: 912, column: 40, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14625, file: !1375, line: 911, column: 12)
!14635 = !DILocation(line: 912, column: 9, scope: !14634)
!14636 = !DILocation(line: 914, column: 1, scope: !14600)
!14637 = distinct !DISubprogram(name: "syslog_task_entry", scope: !1375, file: !1375, line: 966, type: !640, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14638)
!14638 = !{!14639, !14640}
!14639 = !DILocalVariable(name: "args", arg: 1, scope: !14637, file: !1375, line: 966, type: !51)
!14640 = !DILocalVariable(name: "log_buffer", scope: !14641, file: !1375, line: 983, type: !1453)
!14641 = distinct !DILexicalBlock(scope: !14642, file: !1375, line: 982, column: 14)
!14642 = distinct !DILexicalBlock(scope: !14643, file: !1375, line: 982, column: 5)
!14643 = distinct !DILexicalBlock(scope: !14637, file: !1375, line: 982, column: 5)
!14644 = !DILocation(line: 0, scope: !14637)
!14645 = !DILocation(line: 979, column: 23, scope: !14637)
!14646 = !DILocation(line: 980, column: 5, scope: !14637)
!14647 = !DILocation(line: 982, column: 5, scope: !14637)
!14648 = !DILocation(line: 983, column: 9, scope: !14641)
!14649 = !DILocation(line: 0, scope: !14641)
!14650 = !DILocation(line: 983, column: 26, scope: !14641)
!14651 = !DILocation(line: 984, column: 18, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14641, file: !1375, line: 984, column: 13)
!14653 = !DILocation(line: 984, column: 15, scope: !14652)
!14654 = !DILocation(line: 984, column: 13, scope: !14641)
!14655 = !DILocation(line: 993, column: 42, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14652, file: !1375, line: 984, column: 50)
!14657 = !DILocation(line: 993, column: 41, scope: !14656)
!14658 = !DILocation(line: 993, column: 24, scope: !14656)
!14659 = !DILocation(line: 993, column: 4, scope: !14656)
!14660 = !DILocation(line: 995, column: 33, scope: !14656)
!14661 = !DILocation(line: 995, column: 13, scope: !14656)
!14662 = !DILocation(line: 996, column: 9, scope: !14656)
!14663 = !DILocation(line: 997, column: 5, scope: !14642)
!14664 = !DILocation(line: 982, column: 5, scope: !14642)
!14665 = distinct !{!14665, !14666, !14667}
!14666 = !DILocation(line: 982, column: 5, scope: !14643)
!14667 = !DILocation(line: 997, column: 5, scope: !14643)
!14668 = distinct !DISubprogram(name: "log_init", scope: !1375, file: !1375, line: 1000, type: !14669, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14676)
!14669 = !DISubroutineType(types: !14670)
!14670 = !{null, !1479, !14671, !1486}
!14671 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_load_fn", file: !346, line: 117, baseType: !14672)
!14672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14673, size: 32)
!14673 = !DISubroutineType(types: !14674)
!14674 = !{!61, !14675}
!14675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!14676 = !{!14677, !14678, !14679, !14680}
!14677 = !DILocalVariable(name: "save", arg: 1, scope: !14668, file: !1375, line: 1000, type: !1479)
!14678 = !DILocalVariable(name: "load", arg: 2, scope: !14668, file: !1375, line: 1001, type: !14671)
!14679 = !DILocalVariable(name: "entries", arg: 3, scope: !14668, file: !1375, line: 1002, type: !1486)
!14680 = !DILocalVariable(name: "exception_config", scope: !14668, file: !1375, line: 1004, type: !14681)
!14681 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1357, line: 99, baseType: !14682)
!14682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1357, line: 95, size: 64, elements: !14683)
!14683 = !{!14684, !14685}
!14684 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !14682, file: !1357, line: 97, baseType: !1361, size: 32)
!14685 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !14682, file: !1357, line: 98, baseType: !1361, size: 32, offset: 32)
!14686 = !DILocation(line: 0, scope: !14668)
!14687 = !DILocation(line: 1004, column: 5, scope: !14668)
!14688 = !DILocation(line: 1004, column: 27, scope: !14668)
!14689 = !DILocation(line: 1006, column: 9, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14668, file: !1375, line: 1006, column: 9)
!14691 = !DILocation(line: 1006, column: 26, scope: !14690)
!14692 = !DILocation(line: 1006, column: 9, scope: !14668)
!14693 = !DILocation(line: 1011, column: 22, scope: !14668)
!14694 = !DILocation(line: 1012, column: 5, scope: !14668)
!14695 = !DILocation(line: 1013, column: 5, scope: !14668)
!14696 = !DILocation(line: 1014, column: 23, scope: !14668)
!14697 = !DILocation(line: 1016, column: 22, scope: !14668)
!14698 = !DILocation(line: 1016, column: 30, scope: !14668)
!14699 = !DILocation(line: 1017, column: 22, scope: !14668)
!14700 = !DILocation(line: 1017, column: 30, scope: !14668)
!14701 = !DILocation(line: 1018, column: 5, scope: !14668)
!14702 = !DILocation(line: 1021, column: 19, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14668, file: !1375, line: 1021, column: 9)
!14704 = !DILocation(line: 1021, column: 16, scope: !14703)
!14705 = !DILocation(line: 1021, column: 9, scope: !14668)
!14706 = !DILocation(line: 1027, column: 9, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14703, file: !1375, line: 1026, column: 53)
!14708 = !DILocation(line: 1028, column: 5, scope: !14707)
!14709 = !DILocation(line: 1030, column: 24, scope: !14668)
!14710 = !DILocation(line: 1031, column: 22, scope: !14668)
!14711 = !DILocation(line: 1034, column: 27, scope: !14668)
!14712 = !DILocation(line: 1035, column: 27, scope: !14668)
!14713 = !DILocation(line: 1037, column: 9, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14668, file: !1375, line: 1037, column: 9)
!14715 = !DILocation(line: 1037, column: 9, scope: !14668)
!14716 = !DILocation(line: 1039, column: 13, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14718, file: !1375, line: 1039, column: 13)
!14718 = distinct !DILexicalBlock(scope: !14714, file: !1375, line: 1037, column: 15)
!14719 = !DILocation(line: 1039, column: 34, scope: !14717)
!14720 = !DILocation(line: 1039, column: 13, scope: !14718)
!14721 = !DILocation(line: 1040, column: 13, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14723, file: !1375, line: 1040, column: 13)
!14723 = distinct !DILexicalBlock(scope: !14717, file: !1375, line: 1039, column: 40)
!14724 = !DILocation(line: 1041, column: 9, scope: !14723)
!14725 = !DILocation(line: 1043, column: 22, scope: !14668)
!14726 = !DILocation(line: 1044, column: 1, scope: !14668)
!14727 = distinct !DISubprogram(name: "syslog_exception_cb", scope: !1375, file: !1375, line: 513, type: !154, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !2004)
!14728 = !DILocation(line: 518, column: 5, scope: !14727)
!14729 = !DILocation(line: 519, column: 1, scope: !14727)
!14730 = distinct !DISubprogram(name: "syslog_buffer_dump", scope: !1375, file: !1375, line: 483, type: !154, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14731)
!14731 = !{!14732, !14733, !14734}
!14732 = !DILocalVariable(name: "index", scope: !14730, file: !1375, line: 485, type: !61)
!14733 = !DILocalVariable(name: "pHead", scope: !14730, file: !1375, line: 486, type: !1453)
!14734 = !DILocalVariable(name: "pCurr", scope: !14730, file: !1375, line: 486, type: !1453)
!14735 = !DILocation(line: 0, scope: !14730)
!14736 = !DILocation(line: 489, column: 5, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14730, file: !1375, line: 489, column: 5)
!14738 = !DILocation(line: 491, column: 13, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14740, file: !1375, line: 491, column: 13)
!14740 = distinct !DILexicalBlock(scope: !14741, file: !1375, line: 489, column: 54)
!14741 = distinct !DILexicalBlock(scope: !14737, file: !1375, line: 489, column: 5)
!14742 = !DILocation(line: 491, column: 39, scope: !14739)
!14743 = !DILocation(line: 491, column: 13, scope: !14740)
!14744 = !DILocation(line: 492, column: 50, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14739, file: !1375, line: 491, column: 49)
!14746 = !DILocation(line: 492, column: 48, scope: !14745)
!14747 = !DILocation(line: 494, column: 9, scope: !14745)
!14748 = !DILocation(line: 489, column: 50, scope: !14741)
!14749 = !DILocation(line: 489, column: 27, scope: !14741)
!14750 = distinct !{!14750, !14736, !14751}
!14751 = !DILocation(line: 495, column: 5, scope: !14737)
!14752 = !DILocation(line: 498, column: 13, scope: !14730)
!14753 = !DILocation(line: 500, column: 5, scope: !14730)
!14754 = !DILocation(line: 503, column: 5, scope: !14730)
!14755 = !DILocation(line: 505, column: 43, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14730, file: !1375, line: 503, column: 19)
!14757 = !DILocation(line: 505, column: 17, scope: !14756)
!14758 = !DILocation(line: 506, column: 25, scope: !14756)
!14759 = !DILocation(line: 507, column: 46, scope: !14756)
!14760 = !DILocation(line: 507, column: 29, scope: !14756)
!14761 = !DILocation(line: 507, column: 9, scope: !14756)
!14762 = distinct !{!14762, !14754, !14763}
!14763 = !DILocation(line: 508, column: 5, scope: !14730)
!14764 = !DILocation(line: 509, column: 1, scope: !14730)
!14765 = distinct !DISubprogram(name: "sort_syslog_buffer", scope: !1375, file: !1375, line: 338, type: !14766, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14768)
!14766 = !DISubroutineType(types: !14767)
!14767 = !{!1453, !1453}
!14768 = !{!14769, !14770, !14771, !14772}
!14769 = !DILocalVariable(name: "pList", arg: 1, scope: !14765, file: !1375, line: 338, type: !1453)
!14770 = !DILocalVariable(name: "pHead", scope: !14765, file: !1375, line: 340, type: !1453)
!14771 = !DILocalVariable(name: "pCurr", scope: !14765, file: !1375, line: 340, type: !1453)
!14772 = !DILocalVariable(name: "p", scope: !14765, file: !1375, line: 340, type: !1453)
!14773 = !DILocation(line: 0, scope: !14765)
!14774 = !DILocation(line: 342, column: 15, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14765, file: !1375, line: 342, column: 9)
!14776 = !DILocation(line: 342, column: 23, scope: !14775)
!14777 = !DILocation(line: 342, column: 33, scope: !14775)
!14778 = !DILocation(line: 342, column: 42, scope: !14775)
!14779 = !DILocation(line: 342, column: 9, scope: !14765)
!14780 = !DILocation(line: 348, column: 43, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14765, file: !1375, line: 346, column: 27)
!14782 = !DILocation(line: 348, column: 17, scope: !14781)
!14783 = !DILocation(line: 349, column: 20, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14781, file: !1375, line: 349, column: 13)
!14785 = !DILocation(line: 349, column: 29, scope: !14784)
!14786 = !DILocation(line: 349, column: 32, scope: !14784)
!14787 = !DILocation(line: 349, column: 48, scope: !14784)
!14788 = !DILocation(line: 349, column: 46, scope: !14784)
!14789 = !DILocation(line: 349, column: 13, scope: !14781)
!14790 = !DILocation(line: 0, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14784, file: !1375, line: 353, column: 14)
!14792 = !DILocation(line: 356, column: 23, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14794, file: !1375, line: 356, column: 19)
!14794 = distinct !DILexicalBlock(scope: !14791, file: !1375, line: 355, column: 30)
!14795 = !DILocation(line: 356, column: 32, scope: !14793)
!14796 = !DILocation(line: 356, column: 38, scope: !14793)
!14797 = !DILocation(line: 357, column: 35, scope: !14793)
!14798 = !DILocation(line: 357, column: 33, scope: !14793)
!14799 = !DILocation(line: 356, column: 19, scope: !14794)
!14800 = distinct !{!14800, !14801, !14802}
!14801 = !DILocation(line: 355, column: 12, scope: !14791)
!14802 = !DILocation(line: 363, column: 12, scope: !14791)
!14803 = !DILocation(line: 358, column: 35, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14793, file: !1375, line: 357, column: 76)
!14805 = !DILocation(line: 360, column: 19, scope: !14804)
!14806 = !DILocation(line: 0, scope: !14784)
!14807 = !DILocation(line: 346, column: 18, scope: !14765)
!14808 = !DILocation(line: 346, column: 5, scope: !14765)
!14809 = distinct !{!14809, !14808, !14810}
!14810 = !DILocation(line: 365, column: 5, scope: !14765)
!14811 = !DILocation(line: 367, column: 1, scope: !14765)
!14812 = distinct !DISubprogram(name: "syslog_get_config", scope: !1375, file: !1375, line: 1215, type: !14813, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14815)
!14813 = !DISubroutineType(types: !14814)
!14814 = !{null, !14675}
!14815 = !{!14816}
!14816 = !DILocalVariable(name: "config", arg: 1, scope: !14812, file: !1375, line: 1215, type: !14675)
!14817 = !DILocation(line: 0, scope: !14812)
!14818 = !DILocation(line: 1217, column: 15, scope: !14812)
!14819 = !DILocation(line: 1218, column: 1, scope: !14812)
!14820 = distinct !DISubprogram(name: "syslog_set_filter", scope: !1375, file: !1375, line: 1271, type: !14821, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14823)
!14821 = !DISubroutineType(types: !14822)
!14822 = !{!7, !201, !201, !201, !7}
!14823 = !{!14824, !14825, !14826, !14827, !14828, !14829, !14830}
!14824 = !DILocalVariable(name: "module_name", arg: 1, scope: !14820, file: !1375, line: 1271, type: !201)
!14825 = !DILocalVariable(name: "log_switch_str", arg: 2, scope: !14820, file: !1375, line: 1271, type: !201)
!14826 = !DILocalVariable(name: "print_level_str", arg: 3, scope: !14820, file: !1375, line: 1271, type: !201)
!14827 = !DILocalVariable(name: "save", arg: 4, scope: !14820, file: !1375, line: 1271, type: !7)
!14828 = !DILocalVariable(name: "i", scope: !14820, file: !1375, line: 1273, type: !7)
!14829 = !DILocalVariable(name: "log_switch", scope: !14820, file: !1375, line: 1274, type: !7)
!14830 = !DILocalVariable(name: "print_level", scope: !14820, file: !1375, line: 1275, type: !7)
!14831 = !DILocation(line: 0, scope: !14820)
!14832 = !DILocation(line: 1277, column: 18, scope: !14820)
!14833 = !DILocation(line: 1278, column: 20, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14820, file: !1375, line: 1278, column: 9)
!14835 = !DILocation(line: 1278, column: 9, scope: !14820)
!14836 = !DILocation(line: 1282, column: 19, scope: !14820)
!14837 = !DILocation(line: 1283, column: 21, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14820, file: !1375, line: 1283, column: 9)
!14839 = !DILocation(line: 1283, column: 9, scope: !14820)
!14840 = !DILocation(line: 1287, column: 9, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14820, file: !1375, line: 1287, column: 9)
!14842 = !DILocation(line: 1287, column: 34, scope: !14841)
!14843 = !DILocation(line: 0, scope: !14841)
!14844 = !DILocation(line: 1287, column: 9, scope: !14820)
!14845 = !DILocation(line: 1289, column: 35, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !1375, line: 1289, column: 13)
!14847 = distinct !DILexicalBlock(scope: !14841, file: !1375, line: 1287, column: 40)
!14848 = !DILocation(line: 1289, column: 13, scope: !14847)
!14849 = !DILocation(line: 1294, column: 16, scope: !14847)
!14850 = !DILocation(line: 1294, column: 9, scope: !14847)
!14851 = !DILocation(line: 1295, column: 39, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14847, file: !1375, line: 1294, column: 42)
!14853 = !DILocation(line: 1295, column: 50, scope: !14852)
!14854 = !DILocation(line: 1296, column: 27, scope: !14852)
!14855 = !DILocation(line: 1296, column: 13, scope: !14852)
!14856 = !DILocation(line: 1296, column: 39, scope: !14852)
!14857 = !DILocation(line: 1296, column: 51, scope: !14852)
!14858 = !DILocation(line: 1297, column: 14, scope: !14852)
!14859 = distinct !{!14859, !14850, !14860}
!14860 = !DILocation(line: 1298, column: 9, scope: !14847)
!14861 = !DILocation(line: 1302, column: 13, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14841, file: !1375, line: 1300, column: 12)
!14863 = !DILocation(line: 1304, column: 15, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14862, file: !1375, line: 1304, column: 13)
!14865 = !DILocation(line: 1304, column: 13, scope: !14862)
!14866 = !DILocation(line: 1307, column: 23, scope: !14862)
!14867 = !DILocation(line: 1307, column: 9, scope: !14862)
!14868 = !DILocation(line: 1307, column: 35, scope: !14862)
!14869 = !DILocation(line: 1307, column: 46, scope: !14862)
!14870 = !DILocation(line: 1308, column: 23, scope: !14862)
!14871 = !DILocation(line: 1308, column: 9, scope: !14862)
!14872 = !DILocation(line: 1308, column: 35, scope: !14862)
!14873 = !DILocation(line: 1308, column: 47, scope: !14862)
!14874 = !DILocation(line: 1312, column: 9, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14820, file: !1375, line: 1312, column: 9)
!14876 = !DILocation(line: 1312, column: 9, scope: !14820)
!14877 = !DILocation(line: 1313, column: 23, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14875, file: !1375, line: 1312, column: 15)
!14879 = !DILocation(line: 1313, column: 9, scope: !14878)
!14880 = !DILocation(line: 1314, column: 5, scope: !14878)
!14881 = !DILocation(line: 1317, column: 1, scope: !14820)
!14882 = distinct !DISubprogram(name: "str_to_log_switch", scope: !1375, file: !1375, line: 1484, type: !14883, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14885)
!14883 = !DISubroutineType(types: !14884)
!14884 = !{!7, !331}
!14885 = !{!14886, !14887}
!14886 = !DILocalVariable(name: "log_switch_str", arg: 1, scope: !14882, file: !1375, line: 1484, type: !331)
!14887 = !DILocalVariable(name: "i", scope: !14882, file: !1375, line: 1486, type: !7)
!14888 = !DILocation(line: 0, scope: !14882)
!14889 = !DILocation(line: 1488, column: 5, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14882, file: !1375, line: 1488, column: 5)
!14891 = !DILocation(line: 1489, column: 37, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14893, file: !1375, line: 1489, column: 13)
!14893 = distinct !DILexicalBlock(scope: !14894, file: !1375, line: 1488, column: 69)
!14894 = distinct !DILexicalBlock(scope: !14890, file: !1375, line: 1488, column: 5)
!14895 = !DILocation(line: 1489, column: 14, scope: !14892)
!14896 = !DILocation(line: 1489, column: 13, scope: !14893)
!14897 = !DILocation(line: 1494, column: 1, scope: !14882)
!14898 = distinct !DISubprogram(name: "str_to_print_level", scope: !1375, file: !1375, line: 1496, type: !14883, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14899)
!14899 = !{!14900, !14901}
!14900 = !DILocalVariable(name: "print_level_str", arg: 1, scope: !14898, file: !1375, line: 1496, type: !331)
!14901 = !DILocalVariable(name: "i", scope: !14898, file: !1375, line: 1498, type: !7)
!14902 = !DILocation(line: 0, scope: !14898)
!14903 = !DILocation(line: 1500, column: 5, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14898, file: !1375, line: 1500, column: 5)
!14905 = !DILocation(line: 1501, column: 38, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14907, file: !1375, line: 1501, column: 13)
!14907 = distinct !DILexicalBlock(scope: !14908, file: !1375, line: 1500, column: 70)
!14908 = distinct !DILexicalBlock(scope: !14904, file: !1375, line: 1500, column: 5)
!14909 = !DILocation(line: 1501, column: 14, scope: !14906)
!14910 = !DILocation(line: 1501, column: 13, scope: !14907)
!14911 = !DILocation(line: 1500, column: 66, scope: !14908)
!14912 = !DILocation(line: 1500, column: 19, scope: !14908)
!14913 = distinct !{!14913, !14903, !14914}
!14914 = !DILocation(line: 1504, column: 5, scope: !14904)
!14915 = !DILocation(line: 1506, column: 1, scope: !14898)
!14916 = distinct !DISubprogram(name: "syslog_get_index_from_module_name", scope: !1375, file: !1375, line: 1252, type: !14917, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14919)
!14917 = !DISubroutineType(types: !14918)
!14918 = !{!7, !1486, !331}
!14919 = !{!14920, !14921, !14922}
!14920 = !DILocalVariable(name: "filters", arg: 1, scope: !14916, file: !1375, line: 1252, type: !1486)
!14921 = !DILocalVariable(name: "module_name", arg: 2, scope: !14916, file: !1375, line: 1252, type: !331)
!14922 = !DILocalVariable(name: "i", scope: !14916, file: !1375, line: 1254, type: !7)
!14923 = !DILocation(line: 0, scope: !14916)
!14924 = !DILocation(line: 1256, column: 17, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14916, file: !1375, line: 1256, column: 9)
!14926 = !DILocation(line: 1256, column: 9, scope: !14916)
!14927 = !DILocation(line: 1260, column: 12, scope: !14916)
!14928 = !DILocation(line: 1260, column: 5, scope: !14916)
!14929 = !DILocation(line: 1261, column: 33, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14931, file: !1375, line: 1261, column: 13)
!14931 = distinct !DILexicalBlock(scope: !14916, file: !1375, line: 1260, column: 24)
!14932 = !DILocation(line: 1261, column: 14, scope: !14930)
!14933 = !DILocation(line: 1261, column: 13, scope: !14931)
!14934 = !DILocation(line: 1264, column: 10, scope: !14931)
!14935 = distinct !{!14935, !14928, !14936}
!14936 = !DILocation(line: 1265, column: 5, scope: !14916)
!14937 = !DILocation(line: 1269, column: 1, scope: !14916)
!14938 = distinct !DISubprogram(name: "syslog_at_set_filter", scope: !1375, file: !1375, line: 1319, type: !14939, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14941)
!14939 = !DISubroutineType(types: !14940)
!14940 = !{!7, !201, !7, !7, !7}
!14941 = !{!14942, !14943, !14944, !14945, !14946}
!14942 = !DILocalVariable(name: "module_name", arg: 1, scope: !14938, file: !1375, line: 1319, type: !201)
!14943 = !DILocalVariable(name: "log_switch", arg: 2, scope: !14938, file: !1375, line: 1319, type: !7)
!14944 = !DILocalVariable(name: "print_level", arg: 3, scope: !14938, file: !1375, line: 1319, type: !7)
!14945 = !DILocalVariable(name: "save", arg: 4, scope: !14938, file: !1375, line: 1319, type: !7)
!14946 = !DILocalVariable(name: "i", scope: !14938, file: !1375, line: 1321, type: !7)
!14947 = !DILocation(line: 0, scope: !14938)
!14948 = !DILocation(line: 1323, column: 9, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14938, file: !1375, line: 1323, column: 9)
!14950 = !DILocation(line: 1323, column: 34, scope: !14949)
!14951 = !DILocation(line: 0, scope: !14949)
!14952 = !DILocation(line: 1323, column: 9, scope: !14938)
!14953 = !DILocation(line: 1325, column: 35, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14955, file: !1375, line: 1325, column: 13)
!14955 = distinct !DILexicalBlock(scope: !14949, file: !1375, line: 1323, column: 40)
!14956 = !DILocation(line: 1325, column: 13, scope: !14955)
!14957 = !DILocation(line: 1330, column: 16, scope: !14955)
!14958 = !DILocation(line: 1330, column: 9, scope: !14955)
!14959 = !DILocation(line: 1331, column: 39, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14955, file: !1375, line: 1330, column: 42)
!14961 = !DILocation(line: 1331, column: 50, scope: !14960)
!14962 = !DILocation(line: 1332, column: 27, scope: !14960)
!14963 = !DILocation(line: 1332, column: 13, scope: !14960)
!14964 = !DILocation(line: 1332, column: 39, scope: !14960)
!14965 = !DILocation(line: 1332, column: 51, scope: !14960)
!14966 = !DILocation(line: 1333, column: 14, scope: !14960)
!14967 = distinct !{!14967, !14958, !14968}
!14968 = !DILocation(line: 1334, column: 9, scope: !14955)
!14969 = !DILocation(line: 1338, column: 13, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14949, file: !1375, line: 1336, column: 12)
!14971 = !DILocation(line: 1340, column: 15, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14970, file: !1375, line: 1340, column: 13)
!14973 = !DILocation(line: 1340, column: 13, scope: !14970)
!14974 = !DILocation(line: 1343, column: 23, scope: !14970)
!14975 = !DILocation(line: 1343, column: 9, scope: !14970)
!14976 = !DILocation(line: 1343, column: 35, scope: !14970)
!14977 = !DILocation(line: 1343, column: 46, scope: !14970)
!14978 = !DILocation(line: 1344, column: 23, scope: !14970)
!14979 = !DILocation(line: 1344, column: 9, scope: !14970)
!14980 = !DILocation(line: 1344, column: 35, scope: !14970)
!14981 = !DILocation(line: 1344, column: 47, scope: !14970)
!14982 = !DILocation(line: 1348, column: 9, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14938, file: !1375, line: 1348, column: 9)
!14984 = !DILocation(line: 1348, column: 9, scope: !14938)
!14985 = !DILocation(line: 1349, column: 23, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14983, file: !1375, line: 1348, column: 15)
!14987 = !DILocation(line: 1349, column: 9, scope: !14986)
!14988 = !DILocation(line: 1350, column: 5, scope: !14986)
!14989 = !DILocation(line: 1353, column: 1, scope: !14938)
!14990 = distinct !DISubprogram(name: "syslog_convert_filter_str2val", scope: !1375, file: !1375, line: 1358, type: !14991, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !14993)
!14991 = !DISubroutineType(types: !14992)
!14992 = !{!7, !1486, !201}
!14993 = !{!14994, !14995, !14996, !14997, !14998, !14999, !15000, !15001, !15002, !15003, !15004}
!14994 = !DILocalVariable(name: "filters", arg: 1, scope: !14990, file: !1375, line: 1358, type: !1486)
!14995 = !DILocalVariable(name: "buff", arg: 2, scope: !14990, file: !1375, line: 1358, type: !201)
!14996 = !DILocalVariable(name: "pos", scope: !14990, file: !1375, line: 1360, type: !7)
!14997 = !DILocalVariable(name: "i", scope: !14990, file: !1375, line: 1361, type: !7)
!14998 = !DILocalVariable(name: "module_name", scope: !14990, file: !1375, line: 1362, type: !201)
!14999 = !DILocalVariable(name: "log_switch_str", scope: !14990, file: !1375, line: 1363, type: !201)
!15000 = !DILocalVariable(name: "print_level_str", scope: !14990, file: !1375, line: 1364, type: !201)
!15001 = !DILocalVariable(name: "done", scope: !14990, file: !1375, line: 1365, type: !69)
!15002 = !DILocalVariable(name: "log_switch", scope: !14990, file: !1375, line: 1366, type: !61)
!15003 = !DILocalVariable(name: "print_level", scope: !14990, file: !1375, line: 1367, type: !61)
!15004 = !DILocalVariable(name: "type", scope: !14990, file: !1375, line: 1368, type: !54)
!15005 = !DILocation(line: 0, scope: !14990)
!15006 = !DILocation(line: 1362, column: 5, scope: !14990)
!15007 = !DILocation(line: 1363, column: 5, scope: !14990)
!15008 = !DILocation(line: 1364, column: 5, scope: !14990)
!15009 = !DILocation(line: 1368, column: 5, scope: !14990)
!15010 = !DILocation(line: 1370, column: 5, scope: !14990)
!15011 = !DILocation(line: 1376, column: 34, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !14990, file: !1375, line: 1370, column: 19)
!15013 = !DILocation(line: 1376, column: 13, scope: !15012)
!15014 = !DILocation(line: 1377, column: 15, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15012, file: !1375, line: 1377, column: 13)
!15016 = !DILocation(line: 1377, column: 20, scope: !15015)
!15017 = !DILocation(line: 1377, column: 32, scope: !15015)
!15018 = !DILocation(line: 1377, column: 23, scope: !15015)
!15019 = !DILocation(line: 1377, column: 37, scope: !15015)
!15020 = !DILocation(line: 1377, column: 13, scope: !15012)
!15021 = !DILocation(line: 1382, column: 24, scope: !15012)
!15022 = !DILocation(line: 1383, column: 23, scope: !15012)
!15023 = !DILocation(line: 1389, column: 34, scope: !15012)
!15024 = !DILocation(line: 1389, column: 13, scope: !15012)
!15025 = !DILocation(line: 1390, column: 15, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15012, file: !1375, line: 1390, column: 13)
!15027 = !DILocation(line: 1390, column: 13, scope: !15012)
!15028 = !DILocation(line: 1395, column: 24, scope: !15012)
!15029 = !DILocation(line: 1395, column: 17, scope: !15012)
!15030 = !DILocation(line: 1397, column: 24, scope: !15012)
!15031 = !DILocation(line: 1398, column: 23, scope: !15012)
!15032 = !DILocation(line: 1404, column: 34, scope: !15012)
!15033 = !DILocation(line: 1404, column: 13, scope: !15012)
!15034 = !DILocation(line: 1405, column: 15, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15012, file: !1375, line: 1405, column: 13)
!15036 = !DILocation(line: 1405, column: 13, scope: !15012)
!15037 = !DILocation(line: 1410, column: 24, scope: !15012)
!15038 = !DILocation(line: 1410, column: 17, scope: !15012)
!15039 = !DILocation(line: 1410, column: 31, scope: !15012)
!15040 = !DILocation(line: 1412, column: 24, scope: !15012)
!15041 = !DILocation(line: 1413, column: 23, scope: !15012)
!15042 = !DILocation(line: 1417, column: 56, scope: !15012)
!15043 = !DILocation(line: 1417, column: 13, scope: !15012)
!15044 = !DILocation(line: 1420, column: 15, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15012, file: !1375, line: 1420, column: 13)
!15046 = !DILocation(line: 1420, column: 13, scope: !15012)
!15047 = !DILocation(line: 1424, column: 26, scope: !15012)
!15048 = !DILocation(line: 1424, column: 22, scope: !15012)
!15049 = !DILocation(line: 1427, column: 13, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15012, file: !1375, line: 1427, column: 13)
!15051 = !DILocation(line: 1427, column: 18, scope: !15050)
!15052 = !DILocation(line: 1427, column: 13, scope: !15012)
!15053 = !DILocation(line: 1434, column: 27, scope: !15012)
!15054 = !DILocation(line: 1434, column: 23, scope: !15012)
!15055 = !DILocation(line: 1437, column: 13, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15012, file: !1375, line: 1437, column: 13)
!15057 = !DILocation(line: 1437, column: 18, scope: !15056)
!15058 = !DILocation(line: 1437, column: 13, scope: !15012)
!15059 = !DILocation(line: 1432, column: 22, scope: !15012)
!15060 = !DILocation(line: 1442, column: 23, scope: !15012)
!15061 = !DILocation(line: 1444, column: 9, scope: !15012)
!15062 = !DILocation(line: 1444, column: 21, scope: !15012)
!15063 = !DILocation(line: 1444, column: 32, scope: !15012)
!15064 = !DILocation(line: 1445, column: 9, scope: !15012)
!15065 = !DILocation(line: 1445, column: 21, scope: !15012)
!15066 = !DILocation(line: 1445, column: 33, scope: !15012)
!15067 = distinct !{!15067, !15010, !15068}
!15068 = !DILocation(line: 1446, column: 5, scope: !14990)
!15069 = !DILocation(line: 1449, column: 1, scope: !14990)
!15070 = distinct !DISubprogram(name: "syslog_get_a_string", scope: !1375, file: !1375, line: 1227, type: !15071, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !15073)
!15071 = !DISubroutineType(types: !15072)
!15072 = !{!7, !331, !1184}
!15073 = !{!15074, !15075, !15076}
!15074 = !DILocalVariable(name: "p", arg: 1, scope: !15070, file: !1375, line: 1227, type: !331)
!15075 = !DILocalVariable(name: "pp", arg: 2, scope: !15070, file: !1375, line: 1227, type: !1184)
!15076 = !DILocalVariable(name: "start", scope: !15070, file: !1375, line: 1229, type: !331)
!15077 = !DILocation(line: 0, scope: !15070)
!15078 = !DILocation(line: 1231, column: 5, scope: !15070)
!15079 = !DILocation(line: 1231, column: 12, scope: !15070)
!15080 = !DILocation(line: 1232, column: 10, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15070, file: !1375, line: 1231, column: 23)
!15082 = distinct !{!15082, !15078, !15083}
!15083 = !DILocation(line: 1233, column: 5, scope: !15070)
!15084 = !DILocation(line: 1239, column: 13, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15086, file: !1375, line: 1238, column: 21)
!15086 = distinct !DILexicalBlock(scope: !15070, file: !1375, line: 1238, column: 9)
!15087 = !DILocation(line: 1240, column: 9, scope: !15085)
!15088 = !DILocation(line: 1243, column: 9, scope: !15070)
!15089 = !DILocation(line: 1245, column: 5, scope: !15070)
!15090 = !DILocation(line: 1245, column: 12, scope: !15070)
!15091 = !DILocation(line: 1245, column: 22, scope: !15070)
!15092 = !DILocation(line: 1246, column: 10, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15070, file: !1375, line: 1245, column: 37)
!15094 = distinct !{!15094, !15089, !15095}
!15095 = !DILocation(line: 1247, column: 5, scope: !15070)
!15096 = !DILocation(line: 1249, column: 15, scope: !15070)
!15097 = !DILocation(line: 1249, column: 5, scope: !15070)
!15098 = !DILocation(line: 1250, column: 1, scope: !15070)
!15099 = distinct !DISubprogram(name: "syslog_convert_filter_val2str", scope: !1375, file: !1375, line: 1451, type: !15100, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !15105)
!15100 = !DISubroutineType(types: !15101)
!15101 = !{!7, !15102, !201}
!15102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15103, size: 32)
!15103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15104, size: 32)
!15104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!15105 = !{!15106, !15107, !15108, !15109, !15110}
!15106 = !DILocalVariable(name: "filters", arg: 1, scope: !15099, file: !1375, line: 1451, type: !15102)
!15107 = !DILocalVariable(name: "buff", arg: 2, scope: !15099, file: !1375, line: 1451, type: !201)
!15108 = !DILocalVariable(name: "i", scope: !15099, file: !1375, line: 1453, type: !7)
!15109 = !DILocalVariable(name: "pos", scope: !15099, file: !1375, line: 1454, type: !7)
!15110 = !DILocalVariable(name: "n", scope: !15099, file: !1375, line: 1455, type: !7)
!15111 = !DILocation(line: 0, scope: !15099)
!15112 = !DILocation(line: 1457, column: 20, scope: !15099)
!15113 = !DILocation(line: 1457, column: 23, scope: !15099)
!15114 = !DILocation(line: 1457, column: 5, scope: !15099)
!15115 = !DILocation(line: 1458, column: 23, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15099, file: !1375, line: 1457, column: 35)
!15117 = !DILocation(line: 1458, column: 52, scope: !15116)
!15118 = !DILocation(line: 1459, column: 24, scope: !15116)
!15119 = !DILocation(line: 1459, column: 21, scope: !15116)
!15120 = !DILocation(line: 1460, column: 33, scope: !15116)
!15121 = !DILocation(line: 1461, column: 33, scope: !15116)
!15122 = !DILocation(line: 1462, column: 33, scope: !15116)
!15123 = !DILocation(line: 1458, column: 13, scope: !15116)
!15124 = !DILocation(line: 1463, column: 13, scope: !15116)
!15125 = !DILocation(line: 1464, column: 10, scope: !15116)
!15126 = distinct !{!15126, !15114, !15127}
!15127 = !DILocation(line: 1465, column: 5, scope: !15099)
!15128 = !DILocation(line: 1467, column: 5, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15099, file: !1375, line: 1467, column: 5)
!15130 = !DILocation(line: 1467, column: 5, scope: !15099)
!15131 = !DILocation(line: 1467, column: 5, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15129, file: !1375, line: 1467, column: 5)
!15133 = !DILocation(line: 1469, column: 5, scope: !15099)
!15134 = distinct !DISubprogram(name: "log_switch_to_str", scope: !1375, file: !1375, line: 1472, type: !15135, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !15137)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{!331, !362}
!15137 = !{!15138}
!15138 = !DILocalVariable(name: "log_switch", arg: 1, scope: !15134, file: !1375, line: 1472, type: !362)
!15139 = !DILocation(line: 0, scope: !15134)
!15140 = !DILocation(line: 1474, column: 5, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15134, file: !1375, line: 1474, column: 5)
!15142 = !DILocation(line: 1474, column: 5, scope: !15134)
!15143 = !DILocation(line: 1474, column: 5, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15141, file: !1375, line: 1474, column: 5)
!15145 = !DILocation(line: 1475, column: 13, scope: !15134)
!15146 = !DILocation(line: 1475, column: 5, scope: !15134)
!15147 = distinct !DISubprogram(name: "print_level_to_str", scope: !1375, file: !1375, line: 1478, type: !15148, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !15150)
!15148 = !DISubroutineType(types: !15149)
!15149 = !{!331, !364}
!15150 = !{!15151}
!15151 = !DILocalVariable(name: "print_level", arg: 1, scope: !15147, file: !1375, line: 1478, type: !364)
!15152 = !DILocation(line: 0, scope: !15147)
!15153 = !DILocation(line: 1480, column: 5, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15147, file: !1375, line: 1480, column: 5)
!15155 = !DILocation(line: 1480, column: 5, scope: !15147)
!15156 = !DILocation(line: 1480, column: 5, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15154, file: !1375, line: 1480, column: 5)
!15158 = !DILocation(line: 1481, column: 13, scope: !15147)
!15159 = !DILocation(line: 1481, column: 5, scope: !15147)
!15160 = distinct !DISubprogram(name: "__wrap_printf", scope: !1375, file: !1375, line: 1508, type: !15161, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1374, retainedNodes: !15163)
!15161 = !DISubroutineType(types: !15162)
!15162 = !{!7, !331, null}
!15163 = !{!15164, !15165, !15166, !15167}
!15164 = !DILocalVariable(name: "format", arg: 1, scope: !15160, file: !1375, line: 1508, type: !331)
!15165 = !DILocalVariable(name: "ap", scope: !15160, file: !1375, line: 1510, type: !14089)
!15166 = !DILocalVariable(name: "ret", scope: !15160, file: !1375, line: 1511, type: !7)
!15167 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !15160, file: !1375, line: 1512, type: !862)
!15168 = !DILocation(line: 0, scope: !15160)
!15169 = !DILocation(line: 1510, column: 5, scope: !15160)
!15170 = !DILocation(line: 1510, column: 13, scope: !15160)
!15171 = !DILocation(line: 1514, column: 11, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15160, file: !1375, line: 1514, column: 10)
!15173 = !DILocation(line: 1514, column: 10, scope: !15160)
!15174 = !DILocation(line: 231, column: 2, scope: !14165, inlinedAt: !15175)
!15175 = distinct !DILocation(line: 1518, column: 30, scope: !15160)
!15176 = !DILocation(line: 0, scope: !14165, inlinedAt: !15175)
!15177 = !DILocation(line: 1520, column: 5, scope: !15160)
!15178 = !DILocation(line: 1521, column: 11, scope: !15160)
!15179 = !DILocation(line: 1522, column: 5, scope: !15160)
!15180 = !DILocation(line: 0, scope: !14187, inlinedAt: !15181)
!15181 = distinct !DILocation(line: 1524, column: 5, scope: !15160)
!15182 = !DILocation(line: 249, column: 2, scope: !14187, inlinedAt: !15181)
!15183 = !DILocation(line: 1526, column: 5, scope: !15160)
!15184 = !DILocation(line: 1527, column: 1, scope: !15160)
!15185 = distinct !DISubprogram(name: "nvdm_port_log_notice", scope: !1507, file: !1507, line: 43, type: !15186, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15188)
!15186 = !DISubroutineType(types: !15187)
!15187 = !{null, !331, null}
!15188 = !{!15189, !15190}
!15189 = !DILocalVariable(name: "message", arg: 1, scope: !15185, file: !1507, line: 43, type: !331)
!15190 = !DILocalVariable(name: "ap", scope: !15185, file: !1507, line: 45, type: !15191)
!15191 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5088, line: 14, baseType: !15192)
!15192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1507, baseType: !15193)
!15193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !15194)
!15194 = !{!15195}
!15195 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !15193, file: !1507, line: 45, baseType: !51, size: 32)
!15196 = !DILocation(line: 0, scope: !15185)
!15197 = !DILocation(line: 45, column: 5, scope: !15185)
!15198 = !DILocation(line: 45, column: 13, scope: !15185)
!15199 = !DILocation(line: 47, column: 5, scope: !15185)
!15200 = !DILocation(line: 48, column: 5, scope: !15185)
!15201 = !DILocation(line: 49, column: 5, scope: !15185)
!15202 = !DILocation(line: 50, column: 1, scope: !15185)
!15203 = distinct !DISubprogram(name: "nvdm_port_log_info", scope: !1507, file: !1507, line: 52, type: !15186, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15204)
!15204 = !{!15205, !15206}
!15205 = !DILocalVariable(name: "message", arg: 1, scope: !15203, file: !1507, line: 52, type: !331)
!15206 = !DILocalVariable(name: "ap", scope: !15203, file: !1507, line: 54, type: !15191)
!15207 = !DILocation(line: 0, scope: !15203)
!15208 = !DILocation(line: 54, column: 13, scope: !15203)
!15209 = !DILocation(line: 59, column: 1, scope: !15203)
!15210 = distinct !DISubprogram(name: "nvdm_port_log_error", scope: !1507, file: !1507, line: 61, type: !15186, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15211)
!15211 = !{!15212, !15213}
!15212 = !DILocalVariable(name: "message", arg: 1, scope: !15210, file: !1507, line: 61, type: !331)
!15213 = !DILocalVariable(name: "ap", scope: !15210, file: !1507, line: 63, type: !15191)
!15214 = !DILocation(line: 0, scope: !15210)
!15215 = !DILocation(line: 63, column: 5, scope: !15210)
!15216 = !DILocation(line: 63, column: 13, scope: !15210)
!15217 = !DILocation(line: 65, column: 5, scope: !15210)
!15218 = !DILocation(line: 66, column: 5, scope: !15210)
!15219 = !DILocation(line: 67, column: 5, scope: !15210)
!15220 = !DILocation(line: 69, column: 5, scope: !15210)
!15221 = distinct !DISubprogram(name: "nvdm_port_flash_read", scope: !1507, file: !1507, line: 82, type: !15222, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15224)
!15222 = !DISubroutineType(types: !15223)
!15223 = !{null, !61, !210, !61}
!15224 = !{!15225, !15226, !15227, !15228}
!15225 = !DILocalVariable(name: "address", arg: 1, scope: !15221, file: !1507, line: 82, type: !61)
!15226 = !DILocalVariable(name: "buffer", arg: 2, scope: !15221, file: !1507, line: 82, type: !210)
!15227 = !DILocalVariable(name: "length", arg: 3, scope: !15221, file: !1507, line: 82, type: !61)
!15228 = !DILocalVariable(name: "status", scope: !15221, file: !1507, line: 84, type: !5745)
!15229 = !DILocation(line: 0, scope: !15221)
!15230 = !DILocation(line: 86, column: 14, scope: !15221)
!15231 = !DILocation(line: 87, column: 16, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15221, file: !1507, line: 87, column: 9)
!15233 = !DILocation(line: 87, column: 9, scope: !15221)
!15234 = !DILocation(line: 88, column: 117, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15232, file: !1507, line: 87, column: 40)
!15236 = !DILocation(line: 88, column: 9, scope: !15235)
!15237 = !DILocation(line: 89, column: 5, scope: !15235)
!15238 = !DILocation(line: 90, column: 1, scope: !15221)
!15239 = distinct !DISubprogram(name: "nvdm_port_flash_write", scope: !1507, file: !1507, line: 92, type: !15240, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15242)
!15240 = !DISubroutineType(types: !15241)
!15241 = !{null, !61, !2146, !61}
!15242 = !{!15243, !15244, !15245, !15246}
!15243 = !DILocalVariable(name: "address", arg: 1, scope: !15239, file: !1507, line: 92, type: !61)
!15244 = !DILocalVariable(name: "buffer", arg: 2, scope: !15239, file: !1507, line: 92, type: !2146)
!15245 = !DILocalVariable(name: "length", arg: 3, scope: !15239, file: !1507, line: 92, type: !61)
!15246 = !DILocalVariable(name: "status", scope: !15239, file: !1507, line: 94, type: !5745)
!15247 = !DILocation(line: 0, scope: !15239)
!15248 = !DILocation(line: 96, column: 14, scope: !15239)
!15249 = !DILocation(line: 97, column: 16, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15239, file: !1507, line: 97, column: 9)
!15251 = !DILocation(line: 97, column: 9, scope: !15239)
!15252 = !DILocation(line: 98, column: 118, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15250, file: !1507, line: 97, column: 40)
!15254 = !DILocation(line: 98, column: 9, scope: !15253)
!15255 = !DILocation(line: 99, column: 5, scope: !15253)
!15256 = !DILocation(line: 100, column: 1, scope: !15239)
!15257 = distinct !DISubprogram(name: "nvdm_port_flash_erase", scope: !1507, file: !1507, line: 103, type: !2604, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15258)
!15258 = !{!15259, !15260}
!15259 = !DILocalVariable(name: "address", arg: 1, scope: !15257, file: !1507, line: 103, type: !61)
!15260 = !DILocalVariable(name: "status", scope: !15257, file: !1507, line: 105, type: !5745)
!15261 = !DILocation(line: 0, scope: !15257)
!15262 = !DILocation(line: 107, column: 14, scope: !15257)
!15263 = !DILocation(line: 108, column: 16, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15257, file: !1507, line: 108, column: 9)
!15265 = !DILocation(line: 108, column: 9, scope: !15257)
!15266 = !DILocation(line: 109, column: 9, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15264, file: !1507, line: 108, column: 40)
!15268 = !DILocation(line: 110, column: 5, scope: !15267)
!15269 = !DILocation(line: 111, column: 1, scope: !15257)
!15270 = distinct !DISubprogram(name: "nvdm_port_mutex_creat", scope: !1507, file: !1507, line: 125, type: !154, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !2004)
!15271 = !DILocation(line: 127, column: 20, scope: !15270)
!15272 = !DILocation(line: 127, column: 18, scope: !15270)
!15273 = !DILocation(line: 129, column: 22, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15270, file: !1507, line: 129, column: 9)
!15275 = !DILocation(line: 129, column: 9, scope: !15270)
!15276 = !DILocation(line: 130, column: 9, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15274, file: !1507, line: 129, column: 31)
!15278 = !DILocation(line: 131, column: 5, scope: !15277)
!15279 = !DILocation(line: 133, column: 1, scope: !15270)
!15280 = distinct !DISubprogram(name: "nvdm_port_mutex_take", scope: !1507, file: !1507, line: 135, type: !154, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !2004)
!15281 = !DILocation(line: 137, column: 9, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15280, file: !1507, line: 137, column: 9)
!15283 = !DILocation(line: 137, column: 34, scope: !15282)
!15284 = !DILocation(line: 137, column: 9, scope: !15280)
!15285 = !DILocation(line: 138, column: 13, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15287, file: !1507, line: 138, column: 13)
!15287 = distinct !DILexicalBlock(scope: !15282, file: !1507, line: 137, column: 64)
!15288 = !DILocation(line: 138, column: 57, scope: !15286)
!15289 = !DILocation(line: 138, column: 13, scope: !15287)
!15290 = !DILocation(line: 139, column: 13, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15286, file: !1507, line: 138, column: 69)
!15292 = !DILocation(line: 140, column: 9, scope: !15291)
!15293 = !DILocation(line: 143, column: 1, scope: !15280)
!15294 = distinct !DISubprogram(name: "nvdm_port_mutex_give", scope: !1507, file: !1507, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !2004)
!15295 = !DILocation(line: 147, column: 9, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15294, file: !1507, line: 147, column: 9)
!15297 = !DILocation(line: 147, column: 34, scope: !15296)
!15298 = !DILocation(line: 147, column: 9, scope: !15294)
!15299 = !DILocation(line: 148, column: 13, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15301, file: !1507, line: 148, column: 13)
!15301 = distinct !DILexicalBlock(scope: !15296, file: !1507, line: 147, column: 64)
!15302 = !DILocation(line: 148, column: 42, scope: !15300)
!15303 = !DILocation(line: 148, column: 13, scope: !15301)
!15304 = !DILocation(line: 149, column: 13, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15300, file: !1507, line: 148, column: 54)
!15306 = !DILocation(line: 150, column: 9, scope: !15305)
!15307 = !DILocation(line: 153, column: 1, scope: !15294)
!15308 = distinct !DISubprogram(name: "nvdm_port_malloc", scope: !1507, file: !1507, line: 155, type: !15309, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15310)
!15309 = !DISubroutineType(types: !625)
!15310 = !{!15311}
!15311 = !DILocalVariable(name: "size", arg: 1, scope: !15308, file: !1507, line: 155, type: !61)
!15312 = !DILocation(line: 0, scope: !15308)
!15313 = !DILocation(line: 157, column: 12, scope: !15308)
!15314 = !DILocation(line: 157, column: 5, scope: !15308)
!15315 = distinct !DISubprogram(name: "nvdm_port_free", scope: !1507, file: !1507, line: 160, type: !640, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15316)
!15316 = !{!15317}
!15317 = !DILocalVariable(name: "pdata", arg: 1, scope: !15315, file: !1507, line: 160, type: !51)
!15318 = !DILocation(line: 0, scope: !15315)
!15319 = !DILocation(line: 162, column: 5, scope: !15315)
!15320 = !DILocation(line: 163, column: 1, scope: !15315)
!15321 = distinct !DISubprogram(name: "nvdm_port_get_task_handler", scope: !1507, file: !1507, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !2004)
!15322 = !DILocation(line: 167, column: 22, scope: !15321)
!15323 = !DILocation(line: 167, column: 20, scope: !15321)
!15324 = !DILocation(line: 168, column: 1, scope: !15321)
!15325 = distinct !DISubprogram(name: "nvdm_port_query_task_handler", scope: !1507, file: !1507, line: 170, type: !13842, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !2004)
!15326 = !DILocation(line: 172, column: 9, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15325, file: !1507, line: 172, column: 9)
!15328 = !DILocation(line: 172, column: 40, scope: !15327)
!15329 = !DILocation(line: 172, column: 37, scope: !15327)
!15330 = !DILocation(line: 177, column: 1, scope: !15325)
!15331 = distinct !DISubprogram(name: "nvdm_port_get_data_item_config", scope: !1507, file: !1507, line: 241, type: !15332, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15334)
!15332 = !DISubroutineType(types: !15333)
!15333 = !{!61, !2564, !2564, !2564}
!15334 = !{!15335, !15336, !15337}
!15335 = !DILocalVariable(name: "max_data_item_size", arg: 1, scope: !15331, file: !1507, line: 241, type: !2564)
!15336 = !DILocalVariable(name: "max_group_name_size", arg: 2, scope: !15331, file: !1507, line: 242, type: !2564)
!15337 = !DILocalVariable(name: "max_data_item_name_size", arg: 3, scope: !15331, file: !1507, line: 243, type: !2564)
!15338 = !DILocation(line: 0, scope: !15331)
!15339 = !DILocation(line: 245, column: 25, scope: !15331)
!15340 = !DILocation(line: 246, column: 26, scope: !15331)
!15341 = !DILocation(line: 247, column: 30, scope: !15331)
!15342 = !DILocation(line: 249, column: 5, scope: !15331)
!15343 = distinct !DISubprogram(name: "nvdm_port_get_peb_config", scope: !1507, file: !1507, line: 252, type: !15344, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15346)
!15344 = !DISubroutineType(types: !15345)
!15345 = !{!61, !2564}
!15346 = !{!15347}
!15347 = !DILocalVariable(name: "peb_count", arg: 1, scope: !15343, file: !1507, line: 252, type: !2564)
!15348 = !DILocation(line: 0, scope: !15343)
!15349 = !DILocation(line: 254, column: 16, scope: !15343)
!15350 = !DILocation(line: 256, column: 5, scope: !15343)
!15351 = distinct !DISubprogram(name: "nvdm_port_get_peb_address", scope: !1507, file: !1507, line: 259, type: !15352, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15354)
!15352 = !DISubroutineType(types: !15353)
!15353 = !{!61, !527, !527}
!15354 = !{!15355, !15356}
!15355 = !DILocalVariable(name: "pnum", arg: 1, scope: !15351, file: !1507, line: 259, type: !527)
!15356 = !DILocalVariable(name: "offset", arg: 2, scope: !15351, file: !1507, line: 259, type: !527)
!15357 = !DILocation(line: 0, scope: !15351)
!15358 = !DILocation(line: 261, column: 12, scope: !15351)
!15359 = !DILocation(line: 261, column: 5, scope: !15351)
!15360 = distinct !DISubprogram(name: "nvdm_port_poweroff_time_set", scope: !1507, file: !1507, line: 264, type: !154, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !2004)
!15361 = !DILocation(line: 265, column: 2, scope: !15360)
!15362 = distinct !DISubprogram(name: "nvdm_port_poweroff", scope: !1507, file: !1507, line: 266, type: !2604, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1506, retainedNodes: !15363)
!15363 = !{!15364}
!15364 = !DILocalVariable(name: "poweroff_time", arg: 1, scope: !15362, file: !1507, line: 266, type: !61)
!15365 = !DILocation(line: 0, scope: !15362)
!15366 = !DILocation(line: 267, column: 2, scope: !15362)
!15367 = distinct !DISubprogram(name: "__io_putchar", scope: !1970, file: !1970, line: 72, type: !3385, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1969, retainedNodes: !15368)
!15368 = !{!15369}
!15369 = !DILocalVariable(name: "ch", arg: 1, scope: !15367, file: !1970, line: 72, type: !7)
!15370 = !DILocation(line: 0, scope: !15367)
!15371 = !DILocation(line: 77, column: 35, scope: !15367)
!15372 = !DILocation(line: 77, column: 5, scope: !15367)
!15373 = !DILocation(line: 78, column: 12, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15367, file: !1970, line: 78, column: 9)
!15375 = !DILocation(line: 78, column: 9, scope: !15367)
!15376 = !DILocation(line: 79, column: 9, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15374, file: !1970, line: 78, column: 21)
!15378 = !DILocation(line: 80, column: 5, scope: !15377)
!15379 = !DILocation(line: 81, column: 5, scope: !15367)
!15380 = distinct !DISubprogram(name: "system_init", scope: !1970, file: !1970, line: 213, type: !154, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1969, retainedNodes: !2004)
!15381 = !DILocation(line: 216, column: 5, scope: !15380)
!15382 = !DILocation(line: 219, column: 5, scope: !15380)
!15383 = !DILocation(line: 223, column: 5, scope: !15380)
!15384 = !DILocation(line: 227, column: 5, scope: !15380)
!15385 = !DILocation(line: 228, column: 1, scope: !15380)
!15386 = distinct !DISubprogram(name: "SystemClock_Config", scope: !1970, file: !1970, line: 90, type: !154, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1969, retainedNodes: !2004)
!15387 = !DILocation(line: 93, column: 5, scope: !15386)
!15388 = !DILocation(line: 96, column: 5, scope: !15386)
!15389 = !DILocation(line: 99, column: 5, scope: !15386)
!15390 = !DILocation(line: 100, column: 1, scope: !15386)
!15391 = distinct !DISubprogram(name: "prvSetupHardware", scope: !1970, file: !1970, line: 149, type: !154, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1969, retainedNodes: !2004)
!15392 = !DILocation(line: 152, column: 9, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15391, file: !1970, line: 152, column: 9)
!15394 = !DILocation(line: 160, column: 5, scope: !15391)
!15395 = !DILocation(line: 174, column: 5, scope: !15391)
!15396 = !DILocation(line: 177, column: 5, scope: !15391)
!15397 = !DILocation(line: 178, column: 1, scope: !15391)
!15398 = distinct !DISubprogram(name: "_main_sys_random_init", scope: !1970, file: !1970, line: 185, type: !154, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1969, retainedNodes: !15399)
!15399 = !{!15400, !15401}
!15400 = !DILocalVariable(name: "seed", scope: !15398, file: !1970, line: 189, type: !61)
!15401 = !DILocalVariable(name: "s", scope: !15398, file: !1970, line: 190, type: !2557)
!15402 = !DILocation(line: 189, column: 5, scope: !15398)
!15403 = !DILocation(line: 192, column: 9, scope: !15398)
!15404 = !DILocation(line: 0, scope: !15398)
!15405 = !DILocation(line: 194, column: 11, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15398, file: !1970, line: 194, column: 9)
!15407 = !DILocation(line: 194, column: 9, scope: !15398)
!15408 = !DILocation(line: 195, column: 13, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15406, file: !1970, line: 194, column: 34)
!15410 = !DILocation(line: 198, column: 9, scope: !15398)
!15411 = !DILocation(line: 199, column: 29, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15413, file: !1970, line: 198, column: 34)
!15413 = distinct !DILexicalBlock(scope: !15398, file: !1970, line: 198, column: 9)
!15414 = !DILocation(line: 199, column: 9, scope: !15412)
!15415 = !DILocation(line: 202, column: 9, scope: !15398)
!15416 = !DILocation(line: 203, column: 9, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15418, file: !1970, line: 203, column: 9)
!15418 = distinct !DILexicalBlock(scope: !15419, file: !1970, line: 202, column: 34)
!15419 = distinct !DILexicalBlock(scope: !15398, file: !1970, line: 202, column: 9)
!15420 = !DILocation(line: 204, column: 5, scope: !15418)
!15421 = !DILocation(line: 206, column: 1, scope: !15398)
!15422 = distinct !DISubprogram(name: "cache_enable", scope: !1970, file: !1970, line: 111, type: !15423, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1969, retainedNodes: !15425)
!15423 = !DISubroutineType(types: !15424)
!15424 = !{!527, !5308}
!15425 = !{!15426, !15427, !15428, !15429}
!15426 = !DILocalVariable(name: "cache_size", arg: 1, scope: !15422, file: !1970, line: 111, type: !5308)
!15427 = !DILocalVariable(name: "region", scope: !15422, file: !1970, line: 113, type: !1973)
!15428 = !DILocalVariable(name: "region_number", scope: !15422, file: !1970, line: 113, type: !1973)
!15429 = !DILocalVariable(name: "region_cfg_tbl", scope: !15422, file: !1970, line: 115, type: !15430)
!15430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15431, size: 64, elements: !446)
!15431 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !383, line: 222, baseType: !15432)
!15432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !383, line: 219, size: 64, elements: !15433)
!15433 = !{!15434, !15435}
!15434 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !15432, file: !383, line: 220, baseType: !61, size: 32)
!15435 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !15432, file: !383, line: 221, baseType: !61, size: 32, offset: 32)
!15436 = !DILocation(line: 0, scope: !15422)
!15437 = !DILocation(line: 115, column: 5, scope: !15422)
!15438 = !DILocation(line: 115, column: 31, scope: !15422)
!15439 = !DILocation(line: 129, column: 5, scope: !15422)
!15440 = !DILocation(line: 132, column: 5, scope: !15422)
!15441 = !DILocation(line: 134, column: 42, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15443, file: !1970, line: 133, column: 73)
!15443 = distinct !DILexicalBlock(scope: !15444, file: !1970, line: 133, column: 5)
!15444 = distinct !DILexicalBlock(scope: !15422, file: !1970, line: 133, column: 5)
!15445 = !DILocation(line: 134, column: 9, scope: !15442)
!15446 = !DILocation(line: 135, column: 9, scope: !15442)
!15447 = !DILocation(line: 137, column: 5, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15422, file: !1970, line: 137, column: 5)
!15449 = !DILocation(line: 138, column: 9, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15451, file: !1970, line: 137, column: 53)
!15451 = distinct !DILexicalBlock(scope: !15448, file: !1970, line: 137, column: 5)
!15452 = !DILocation(line: 137, column: 49, scope: !15451)
!15453 = !DILocation(line: 137, column: 19, scope: !15451)
!15454 = distinct !{!15454, !15447, !15455}
!15455 = !DILocation(line: 139, column: 5, scope: !15448)
!15456 = !DILocation(line: 140, column: 5, scope: !15422)
!15457 = !DILocation(line: 142, column: 1, scope: !15422)
!15458 = distinct !DISubprogram(name: "SysTick_Set", scope: !1543, file: !1543, line: 70, type: !5992, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !15459)
!15459 = !{!15460, !15461}
!15460 = !DILocalVariable(name: "ticks", arg: 1, scope: !15458, file: !1543, line: 70, type: !61)
!15461 = !DILocalVariable(name: "val", scope: !15458, file: !1543, line: 72, type: !61)
!15462 = !DILocation(line: 0, scope: !15458)
!15463 = !DILocation(line: 74, column: 16, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15458, file: !1543, line: 74, column: 9)
!15465 = !DILocation(line: 74, column: 21, scope: !15464)
!15466 = !DILocation(line: 74, column: 9, scope: !15458)
!15467 = !DILocation(line: 78, column: 20, scope: !15458)
!15468 = !DILocation(line: 80, column: 19, scope: !15458)
!15469 = !DILocation(line: 83, column: 20, scope: !15458)
!15470 = !DILocation(line: 84, column: 20, scope: !15458)
!15471 = !DILocation(line: 86, column: 19, scope: !15458)
!15472 = !DILocation(line: 88, column: 5, scope: !15458)
!15473 = !DILocation(line: 89, column: 1, scope: !15458)
!15474 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !1543, file: !1543, line: 98, type: !154, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !2004)
!15475 = !DILocation(line: 100, column: 28, scope: !15474)
!15476 = !DILocation(line: 101, column: 1, scope: !15474)
!15477 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !1543, file: !1543, line: 110, type: !1985, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !2004)
!15478 = !DILocation(line: 112, column: 12, scope: !15477)
!15479 = !DILocation(line: 112, column: 5, scope: !15477)
!15480 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1543, file: !1543, line: 122, type: !154, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !2004)
!15481 = !DILocation(line: 124, column: 23, scope: !15480)
!15482 = !DILocation(line: 124, column: 21, scope: !15480)
!15483 = !DILocation(line: 125, column: 1, scope: !15480)
!15484 = distinct !DISubprogram(name: "SystemInit", scope: !1543, file: !1543, line: 136, type: !154, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !2004)
!15485 = !DILocation(line: 140, column: 16, scope: !15484)
!15486 = !DILocation(line: 144, column: 16, scope: !15484)
!15487 = !DILocation(line: 147, column: 16, scope: !15484)
!15488 = !DILocation(line: 150, column: 1, scope: !15484)
!15489 = distinct !DISubprogram(name: "CachePreInit", scope: !1543, file: !1543, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1542, retainedNodes: !2004)
!15490 = !DILocation(line: 161, column: 22, scope: !15489)
!15491 = !DILocation(line: 164, column: 21, scope: !15489)
!15492 = !DILocation(line: 167, column: 21, scope: !15489)
!15493 = !DILocation(line: 170, column: 29, scope: !15489)
!15494 = !DILocation(line: 171, column: 33, scope: !15489)
!15495 = !DILocation(line: 173, column: 28, scope: !15489)
!15496 = !DILocation(line: 178, column: 30, scope: !15489)
!15497 = !DILocation(line: 192, column: 1, scope: !15489)
!15498 = distinct !DISubprogram(name: "_close", scope: !1603, file: !1603, line: 45, type: !3385, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15499)
!15499 = !{!15500}
!15500 = !DILocalVariable(name: "file", arg: 1, scope: !15498, file: !1603, line: 45, type: !7)
!15501 = !DILocation(line: 0, scope: !15498)
!15502 = !DILocation(line: 47, column: 5, scope: !15498)
!15503 = distinct !DISubprogram(name: "_fstat", scope: !1603, file: !1603, line: 50, type: !15504, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15552)
!15504 = !DISubroutineType(types: !15505)
!15505 = !{!7, !7, !15506}
!15506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15507, size: 32)
!15507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !15508, line: 27, size: 704, elements: !15509)
!15508 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!15509 = !{!15510, !15513, !15516, !15519, !15522, !15525, !15528, !15529, !15532, !15542, !15543, !15544, !15547, !15550}
!15510 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15507, file: !15508, line: 29, baseType: !15511, size: 16)
!15511 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !1607, line: 161, baseType: !15512)
!15512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !922, line: 56, baseType: !1622)
!15513 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15507, file: !15508, line: 30, baseType: !15514, size: 16, offset: 16)
!15514 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !1607, line: 139, baseType: !15515)
!15515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !922, line: 75, baseType: !322)
!15516 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15507, file: !15508, line: 31, baseType: !15517, size: 32, offset: 32)
!15517 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !1607, line: 189, baseType: !15518)
!15518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !922, line: 90, baseType: !62)
!15519 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15507, file: !15508, line: 32, baseType: !15520, size: 16, offset: 64)
!15520 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !1607, line: 194, baseType: !15521)
!15521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !922, line: 209, baseType: !322)
!15522 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15507, file: !15508, line: 33, baseType: !15523, size: 16, offset: 80)
!15523 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !1607, line: 165, baseType: !15524)
!15524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !922, line: 60, baseType: !322)
!15525 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15507, file: !15508, line: 34, baseType: !15526, size: 16, offset: 96)
!15526 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !1607, line: 169, baseType: !15527)
!15527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !922, line: 63, baseType: !322)
!15528 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15507, file: !15508, line: 35, baseType: !15511, size: 16, offset: 112)
!15529 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15507, file: !15508, line: 36, baseType: !15530, size: 32, offset: 128)
!15530 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1607, line: 157, baseType: !15531)
!15531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !922, line: 102, baseType: !1661)
!15532 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15507, file: !15508, line: 42, baseType: !15533, size: 128, offset: 192)
!15533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !15534, line: 47, size: 128, elements: !15535)
!15534 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!15535 = !{!15536, !15541}
!15536 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15533, file: !15534, line: 48, baseType: !15537, size: 64)
!15537 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !15538, line: 42, baseType: !15539)
!15538 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!15539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !57, line: 200, baseType: !15540)
!15540 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!15541 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15533, file: !15534, line: 49, baseType: !174, size: 32, offset: 64)
!15542 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15507, file: !15508, line: 43, baseType: !15533, size: 128, offset: 320)
!15543 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15507, file: !15508, line: 44, baseType: !15533, size: 128, offset: 448)
!15544 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15507, file: !15508, line: 45, baseType: !15545, size: 32, offset: 576)
!15545 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !1607, line: 102, baseType: !15546)
!15546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !922, line: 34, baseType: !174)
!15547 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15507, file: !15508, line: 46, baseType: !15548, size: 32, offset: 608)
!15548 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !1607, line: 97, baseType: !15549)
!15549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !922, line: 30, baseType: !174)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !15507, file: !15508, line: 48, baseType: !15551, size: 64, offset: 640)
!15551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !333)
!15552 = !{!15553, !15554}
!15553 = !DILocalVariable(name: "file", arg: 1, scope: !15503, file: !1603, line: 50, type: !7)
!15554 = !DILocalVariable(name: "st", arg: 2, scope: !15503, file: !1603, line: 50, type: !15506)
!15555 = !DILocation(line: 0, scope: !15503)
!15556 = !DILocation(line: 52, column: 5, scope: !15503)
!15557 = distinct !DISubprogram(name: "_isatty", scope: !1603, file: !1603, line: 56, type: !3385, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15558)
!15558 = !{!15559}
!15559 = !DILocalVariable(name: "file", arg: 1, scope: !15557, file: !1603, line: 56, type: !7)
!15560 = !DILocation(line: 0, scope: !15557)
!15561 = !DILocation(line: 58, column: 5, scope: !15557)
!15562 = distinct !DISubprogram(name: "_lseek", scope: !1603, file: !1603, line: 61, type: !15563, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15565)
!15563 = !DISubroutineType(types: !15564)
!15564 = !{!7, !7, !7, !7}
!15565 = !{!15566, !15567, !15568}
!15566 = !DILocalVariable(name: "file", arg: 1, scope: !15562, file: !1603, line: 61, type: !7)
!15567 = !DILocalVariable(name: "ptr", arg: 2, scope: !15562, file: !1603, line: 61, type: !7)
!15568 = !DILocalVariable(name: "dir", arg: 3, scope: !15562, file: !1603, line: 61, type: !7)
!15569 = !DILocation(line: 0, scope: !15562)
!15570 = !DILocation(line: 63, column: 5, scope: !15562)
!15571 = distinct !DISubprogram(name: "_open", scope: !1603, file: !1603, line: 66, type: !15572, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15574)
!15572 = !DISubroutineType(types: !15573)
!15573 = !{!7, !331, !7, !7}
!15574 = !{!15575, !15576, !15577}
!15575 = !DILocalVariable(name: "name", arg: 1, scope: !15571, file: !1603, line: 66, type: !331)
!15576 = !DILocalVariable(name: "flags", arg: 2, scope: !15571, file: !1603, line: 66, type: !7)
!15577 = !DILocalVariable(name: "mode", arg: 3, scope: !15571, file: !1603, line: 66, type: !7)
!15578 = !DILocation(line: 0, scope: !15571)
!15579 = !DILocation(line: 68, column: 5, scope: !15571)
!15580 = distinct !DISubprogram(name: "_read", scope: !1603, file: !1603, line: 71, type: !15581, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15583)
!15581 = !DISubroutineType(types: !15582)
!15582 = !{!7, !7, !201, !7}
!15583 = !{!15584, !15585, !15586}
!15584 = !DILocalVariable(name: "file", arg: 1, scope: !15580, file: !1603, line: 71, type: !7)
!15585 = !DILocalVariable(name: "ptr", arg: 2, scope: !15580, file: !1603, line: 71, type: !201)
!15586 = !DILocalVariable(name: "len", arg: 3, scope: !15580, file: !1603, line: 71, type: !7)
!15587 = !DILocation(line: 0, scope: !15580)
!15588 = !DILocation(line: 73, column: 5, scope: !15580)
!15589 = distinct !DISubprogram(name: "_write", scope: !1603, file: !1603, line: 86, type: !15581, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15590)
!15590 = !{!15591, !15592, !15593, !15594}
!15591 = !DILocalVariable(name: "file", arg: 1, scope: !15589, file: !1603, line: 86, type: !7)
!15592 = !DILocalVariable(name: "ptr", arg: 2, scope: !15589, file: !1603, line: 86, type: !201)
!15593 = !DILocalVariable(name: "len", arg: 3, scope: !15589, file: !1603, line: 86, type: !7)
!15594 = !DILocalVariable(name: "i", scope: !15589, file: !1603, line: 88, type: !7)
!15595 = !DILocation(line: 0, scope: !15589)
!15596 = !DILocation(line: 90, column: 19, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15598, file: !1603, line: 90, column: 5)
!15598 = distinct !DILexicalBlock(scope: !15589, file: !1603, line: 90, column: 5)
!15599 = !DILocation(line: 90, column: 5, scope: !15598)
!15600 = !DILocation(line: 91, column: 26, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15597, file: !1603, line: 90, column: 31)
!15602 = !DILocation(line: 91, column: 22, scope: !15601)
!15603 = !DILocation(line: 91, column: 9, scope: !15601)
!15604 = !DILocation(line: 90, column: 27, scope: !15597)
!15605 = distinct !{!15605, !15599, !15606}
!15606 = !DILocation(line: 92, column: 5, scope: !15598)
!15607 = !DILocation(line: 94, column: 5, scope: !15589)
!15608 = !DILocation(line: 0, scope: !1602)
!15609 = !DILocation(line: 105, column: 5, scope: !1602)
!15610 = !{i64 3455}
!15611 = !DILocation(line: 107, column: 14, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !1602, file: !1603, line: 107, column: 9)
!15613 = !DILocation(line: 107, column: 11, scope: !15612)
!15614 = !DILocation(line: 107, column: 9, scope: !1602)
!15615 = !DILocation(line: 113, column: 32, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !1602, file: !1603, line: 113, column: 9)
!15617 = !DILocation(line: 113, column: 15, scope: !15616)
!15618 = !DILocation(line: 124, column: 1, scope: !1602)
!15619 = !DILocation(line: 113, column: 9, scope: !1602)
!15620 = distinct !DISubprogram(name: "_exit", scope: !1603, file: !1603, line: 126, type: !1743, scopeLine: 127, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15621)
!15621 = !{!15622}
!15622 = !DILocalVariable(name: "__status", arg: 1, scope: !15620, file: !1603, line: 126, type: !7)
!15623 = !DILocation(line: 0, scope: !15620)
!15624 = !DILocation(line: 128, column: 5, scope: !15620)
!15625 = !DILocation(line: 129, column: 5, scope: !15620)
!15626 = distinct !{!15626, !15625, !15627}
!15627 = !DILocation(line: 131, column: 5, scope: !15620)
!15628 = distinct !DISubprogram(name: "_kill", scope: !1603, file: !1603, line: 135, type: !15629, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !15631)
!15629 = !DISubroutineType(types: !15630)
!15630 = !{!7, !7, !7}
!15631 = !{!15632, !15633}
!15632 = !DILocalVariable(name: "pid", arg: 1, scope: !15628, file: !1603, line: 135, type: !7)
!15633 = !DILocalVariable(name: "sig", arg: 2, scope: !15628, file: !1603, line: 135, type: !7)
!15634 = !DILocation(line: 0, scope: !15628)
!15635 = !DILocation(line: 137, column: 5, scope: !15628)
!15636 = !DILocation(line: 138, column: 5, scope: !15628)
!15637 = distinct !DISubprogram(name: "_getpid", scope: !1603, file: !1603, line: 142, type: !15638, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !2004)
!15638 = !DISubroutineType(types: !15639)
!15639 = !{!15640}
!15640 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !1607, line: 174, baseType: !15641)
!15641 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !922, line: 52, baseType: !7)
!15642 = !DILocation(line: 144, column: 5, scope: !15637)
!15643 = !DILocation(line: 145, column: 5, scope: !15637)
!15644 = distinct !DISubprogram(name: "main", scope: !1833, file: !1833, line: 85, type: !2690, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1832, retainedNodes: !2004)
!15645 = !DILocation(line: 88, column: 5, scope: !15644)
!15646 = !DILocation(line: 96, column: 5, scope: !15644)
!15647 = !DILocation(line: 98, column: 5, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15644, file: !1833, line: 98, column: 5)
!15649 = !DILocation(line: 108, column: 19, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15644, file: !1833, line: 108, column: 9)
!15651 = !DILocation(line: 108, column: 16, scope: !15650)
!15652 = !DILocation(line: 108, column: 9, scope: !15644)
!15653 = !DILocation(line: 114, column: 9, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15655, file: !1833, line: 114, column: 9)
!15655 = distinct !DILexicalBlock(scope: !15650, file: !1833, line: 113, column: 38)
!15656 = !DILocation(line: 115, column: 9, scope: !15655)
!15657 = !DILocation(line: 120, column: 5, scope: !15644)
!15658 = !DILocation(line: 123, column: 5, scope: !15644)
!15659 = !DILocation(line: 131, column: 5, scope: !15644)
!15660 = !DILocation(line: 131, column: 5, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15662, file: !1833, line: 131, column: 5)
!15662 = distinct !DILexicalBlock(scope: !15644, file: !1833, line: 131, column: 5)
!15663 = distinct !{!15663, !15664, !15665}
!15664 = !DILocation(line: 131, column: 5, scope: !15662)
!15665 = !DILocation(line: 131, column: 15, scope: !15662)
!15666 = distinct !DISubprogram(name: "cjson_test_proc", scope: !1833, file: !1833, line: 65, type: !640, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1832, retainedNodes: !15667)
!15667 = !{!15668, !15669}
!15668 = !DILocalVariable(name: "args", arg: 1, scope: !15666, file: !1833, line: 65, type: !51)
!15669 = !DILocalVariable(name: "ret", scope: !15666, file: !1833, line: 67, type: !7)
!15670 = !DILocation(line: 0, scope: !15666)
!15671 = !DILocation(line: 68, column: 5, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15666, file: !1833, line: 68, column: 5)
!15673 = !DILocation(line: 69, column: 11, scope: !15666)
!15674 = !DILocation(line: 70, column: 5, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15666, file: !1833, line: 70, column: 5)
!15676 = !DILocation(line: 71, column: 13, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15666, file: !1833, line: 71, column: 9)
!15678 = !DILocation(line: 71, column: 9, scope: !15666)
!15679 = !DILocation(line: 72, column: 9, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15681, file: !1833, line: 72, column: 9)
!15681 = distinct !DILexicalBlock(scope: !15677, file: !1833, line: 71, column: 19)
!15682 = !DILocation(line: 73, column: 5, scope: !15681)
!15683 = !DILocation(line: 75, column: 5, scope: !15666)
!15684 = !DILocation(line: 76, column: 9, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15666, file: !1833, line: 75, column: 15)
!15686 = distinct !{!15686, !15683, !15687}
!15687 = !DILocation(line: 77, column: 5, scope: !15666)
!15688 = distinct !DISubprogram(name: "doit", scope: !1803, file: !1803, line: 48, type: !15689, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1802, retainedNodes: !15691)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!7, !201}
!15691 = !{!15692, !15693, !15694}
!15692 = !DILocalVariable(name: "text", arg: 1, scope: !15688, file: !1803, line: 48, type: !201)
!15693 = !DILocalVariable(name: "out", scope: !15688, file: !1803, line: 50, type: !201)
!15694 = !DILocalVariable(name: "json", scope: !15688, file: !1803, line: 51, type: !15695)
!15695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15696, size: 32)
!15696 = !DIDerivedType(tag: DW_TAG_typedef, name: "cJSON", file: !1171, line: 54, baseType: !15697)
!15697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cJSON", file: !1171, line: 43, size: 320, elements: !15698)
!15698 = !{!15699, !15701, !15702, !15703, !15704, !15705, !15706, !15707}
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15697, file: !1171, line: 44, baseType: !15700, size: 32)
!15700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15697, size: 32)
!15701 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15697, file: !1171, line: 44, baseType: !15700, size: 32, offset: 32)
!15702 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !15697, file: !1171, line: 45, baseType: !15700, size: 32, offset: 64)
!15703 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15697, file: !1171, line: 47, baseType: !7, size: 32, offset: 96)
!15704 = !DIDerivedType(tag: DW_TAG_member, name: "valuestring", scope: !15697, file: !1171, line: 49, baseType: !201, size: 32, offset: 128)
!15705 = !DIDerivedType(tag: DW_TAG_member, name: "valueint", scope: !15697, file: !1171, line: 50, baseType: !7, size: 32, offset: 160)
!15706 = !DIDerivedType(tag: DW_TAG_member, name: "valuedouble", scope: !15697, file: !1171, line: 51, baseType: !1182, size: 64, offset: 192)
!15707 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !15697, file: !1171, line: 53, baseType: !201, size: 32, offset: 256)
!15708 = !DILocation(line: 0, scope: !15688)
!15709 = !DILocation(line: 53, column: 12, scope: !15688)
!15710 = !DILocation(line: 54, column: 10, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15688, file: !1803, line: 54, column: 9)
!15712 = !DILocation(line: 54, column: 9, scope: !15688)
!15713 = !DILocation(line: 55, column: 9, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15715, file: !1803, line: 55, column: 9)
!15715 = distinct !DILexicalBlock(scope: !15711, file: !1803, line: 54, column: 16)
!15716 = !DILocation(line: 56, column: 9, scope: !15715)
!15717 = !DILocation(line: 58, column: 15, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15711, file: !1803, line: 57, column: 12)
!15719 = !DILocation(line: 59, column: 9, scope: !15718)
!15720 = !DILocation(line: 60, column: 9, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15718, file: !1803, line: 60, column: 9)
!15722 = !DILocation(line: 61, column: 9, scope: !15718)
!15723 = !DILocation(line: 62, column: 9, scope: !15718)
!15724 = !DILocation(line: 0, scope: !15711)
!15725 = !DILocation(line: 64, column: 1, scope: !15688)
!15726 = distinct !DISubprogram(name: "create_objects", scope: !1803, file: !1803, line: 72, type: !2690, scopeLine: 73, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1802, retainedNodes: !15727)
!15727 = !{!15728, !15729, !15730, !15731, !15732, !15733, !15734, !15735, !15736, !15738, !15741, !15743}
!15728 = !DILocalVariable(name: "root", scope: !15726, file: !1803, line: 74, type: !15695)
!15729 = !DILocalVariable(name: "fmt", scope: !15726, file: !1803, line: 74, type: !15695)
!15730 = !DILocalVariable(name: "img", scope: !15726, file: !1803, line: 74, type: !15695)
!15731 = !DILocalVariable(name: "thm", scope: !15726, file: !1803, line: 74, type: !15695)
!15732 = !DILocalVariable(name: "fld", scope: !15726, file: !1803, line: 74, type: !15695)
!15733 = !DILocalVariable(name: "out", scope: !15726, file: !1803, line: 75, type: !201)
!15734 = !DILocalVariable(name: "i", scope: !15726, file: !1803, line: 76, type: !7)
!15735 = !DILocalVariable(name: "ret", scope: !15726, file: !1803, line: 77, type: !7)
!15736 = !DILocalVariable(name: "strings", scope: !15726, file: !1803, line: 97, type: !15737)
!15737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 224, elements: !262)
!15738 = !DILocalVariable(name: "numbers", scope: !15726, file: !1803, line: 106, type: !15739)
!15739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 288, elements: !15740)
!15740 = !{!1655, !1655}
!15741 = !DILocalVariable(name: "ids", scope: !15726, file: !1803, line: 119, type: !15742)
!15742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !220)
!15743 = !DILocalVariable(name: "fields", scope: !15726, file: !1803, line: 137, type: !15744)
!15744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15745, size: 768, elements: !333)
!15745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "record", file: !1803, line: 30, size: 384, elements: !15746)
!15746 = !{!15747, !15748, !15749, !15750, !15751, !15752, !15753, !15754}
!15747 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !15745, file: !1803, line: 31, baseType: !331, size: 32)
!15748 = !DIDerivedType(tag: DW_TAG_member, name: "lat", scope: !15745, file: !1803, line: 32, baseType: !1182, size: 64, offset: 64)
!15749 = !DIDerivedType(tag: DW_TAG_member, name: "lon", scope: !15745, file: !1803, line: 32, baseType: !1182, size: 64, offset: 128)
!15750 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !15745, file: !1803, line: 33, baseType: !331, size: 32, offset: 192)
!15751 = !DIDerivedType(tag: DW_TAG_member, name: "city", scope: !15745, file: !1803, line: 33, baseType: !331, size: 32, offset: 224)
!15752 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15745, file: !1803, line: 33, baseType: !331, size: 32, offset: 256)
!15753 = !DIDerivedType(tag: DW_TAG_member, name: "zip", scope: !15745, file: !1803, line: 33, baseType: !331, size: 32, offset: 288)
!15754 = !DIDerivedType(tag: DW_TAG_member, name: "country", scope: !15745, file: !1803, line: 33, baseType: !331, size: 32, offset: 320)
!15755 = !DILocation(line: 0, scope: !15726)
!15756 = !DILocation(line: 82, column: 12, scope: !15726)
!15757 = !DILocation(line: 83, column: 41, scope: !15726)
!15758 = !DILocation(line: 83, column: 5, scope: !15726)
!15759 = !DILocation(line: 84, column: 49, scope: !15726)
!15760 = !DILocation(line: 84, column: 5, scope: !15726)
!15761 = !DILocation(line: 85, column: 5, scope: !15726)
!15762 = !DILocation(line: 86, column: 5, scope: !15726)
!15763 = !DILocation(line: 87, column: 5, scope: !15726)
!15764 = !DILocation(line: 88, column: 5, scope: !15726)
!15765 = !DILocation(line: 89, column: 5, scope: !15726)
!15766 = !DILocation(line: 91, column: 11, scope: !15726)
!15767 = !DILocation(line: 92, column: 5, scope: !15726)
!15768 = !DILocation(line: 93, column: 5, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15726, file: !1803, line: 93, column: 5)
!15770 = !DILocation(line: 94, column: 5, scope: !15726)
!15771 = !DILocation(line: 97, column: 5, scope: !15726)
!15772 = !DILocation(line: 97, column: 17, scope: !15726)
!15773 = !DILocation(line: 98, column: 36, scope: !15726)
!15774 = !DILocation(line: 98, column: 12, scope: !15726)
!15775 = !DILocation(line: 100, column: 11, scope: !15726)
!15776 = !DILocation(line: 101, column: 5, scope: !15726)
!15777 = !DILocation(line: 102, column: 5, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15726, file: !1803, line: 102, column: 5)
!15779 = !DILocation(line: 103, column: 5, scope: !15726)
!15780 = !DILocation(line: 106, column: 5, scope: !15726)
!15781 = !DILocation(line: 106, column: 9, scope: !15726)
!15782 = !DILocation(line: 107, column: 12, scope: !15726)
!15783 = !DILocation(line: 108, column: 5, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15726, file: !1803, line: 108, column: 5)
!15785 = !DILocation(line: 109, column: 57, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15787, file: !1803, line: 108, column: 29)
!15787 = distinct !DILexicalBlock(scope: !15784, file: !1803, line: 108, column: 5)
!15788 = !DILocation(line: 109, column: 36, scope: !15786)
!15789 = !DILocation(line: 109, column: 9, scope: !15786)
!15790 = !DILocation(line: 108, column: 25, scope: !15787)
!15791 = !DILocation(line: 108, column: 19, scope: !15787)
!15792 = distinct !{!15792, !15783, !15793}
!15793 = !DILocation(line: 110, column: 5, scope: !15784)
!15794 = !DILocation(line: 113, column: 11, scope: !15726)
!15795 = !DILocation(line: 114, column: 5, scope: !15726)
!15796 = !DILocation(line: 115, column: 5, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15726, file: !1803, line: 115, column: 5)
!15798 = !DILocation(line: 116, column: 5, scope: !15726)
!15799 = !DILocation(line: 119, column: 5, scope: !15726)
!15800 = !DILocation(line: 119, column: 9, scope: !15726)
!15801 = !DILocation(line: 120, column: 12, scope: !15726)
!15802 = !DILocation(line: 121, column: 48, scope: !15726)
!15803 = !DILocation(line: 121, column: 5, scope: !15726)
!15804 = !DILocation(line: 122, column: 5, scope: !15726)
!15805 = !DILocation(line: 123, column: 5, scope: !15726)
!15806 = !DILocation(line: 124, column: 5, scope: !15726)
!15807 = !DILocation(line: 125, column: 51, scope: !15726)
!15808 = !DILocation(line: 125, column: 5, scope: !15726)
!15809 = !DILocation(line: 126, column: 5, scope: !15726)
!15810 = !DILocation(line: 127, column: 5, scope: !15726)
!15811 = !DILocation(line: 128, column: 5, scope: !15726)
!15812 = !DILocation(line: 129, column: 60, scope: !15726)
!15813 = !DILocation(line: 129, column: 39, scope: !15726)
!15814 = !DILocation(line: 129, column: 5, scope: !15726)
!15815 = !DILocation(line: 131, column: 11, scope: !15726)
!15816 = !DILocation(line: 132, column: 5, scope: !15726)
!15817 = !DILocation(line: 133, column: 5, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15726, file: !1803, line: 133, column: 5)
!15819 = !DILocation(line: 134, column: 5, scope: !15726)
!15820 = !DILocation(line: 137, column: 19, scope: !15726)
!15821 = !DILocation(line: 142, column: 12, scope: !15726)
!15822 = !DILocation(line: 143, column: 5, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15726, file: !1803, line: 143, column: 5)
!15824 = !DILocation(line: 144, column: 42, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15826, file: !1803, line: 143, column: 29)
!15826 = distinct !DILexicalBlock(scope: !15823, file: !1803, line: 143, column: 5)
!15827 = !DILocation(line: 144, column: 9, scope: !15825)
!15828 = !DILocation(line: 145, column: 9, scope: !15825)
!15829 = !DILocation(line: 146, column: 9, scope: !15825)
!15830 = !DILocation(line: 147, column: 9, scope: !15825)
!15831 = !DILocation(line: 148, column: 9, scope: !15825)
!15832 = !DILocation(line: 149, column: 9, scope: !15825)
!15833 = !DILocation(line: 150, column: 9, scope: !15825)
!15834 = !DILocation(line: 151, column: 9, scope: !15825)
!15835 = !DILocation(line: 152, column: 9, scope: !15825)
!15836 = distinct !{!15836, !15822, !15837}
!15837 = !DILocation(line: 153, column: 5, scope: !15823)
!15838 = !DILocation(line: 156, column: 11, scope: !15726)
!15839 = !DILocation(line: 157, column: 5, scope: !15726)
!15840 = !DILocation(line: 158, column: 5, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15726, file: !1803, line: 158, column: 5)
!15842 = !DILocation(line: 159, column: 5, scope: !15726)
!15843 = !DILocation(line: 161, column: 1, scope: !15726)
!15844 = !DILocation(line: 160, column: 5, scope: !15726)
!15845 = distinct !DISubprogram(name: "cjson_test", scope: !1803, file: !1803, line: 169, type: !2690, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1802, retainedNodes: !15846)
!15846 = !{!15847}
!15847 = !DILocalVariable(name: "ret", scope: !15845, file: !1803, line: 171, type: !7)
!15848 = !DILocation(line: 0, scope: !15845)
!15849 = !DILocation(line: 173, column: 12, scope: !15845)
!15850 = !DILocation(line: 174, column: 12, scope: !15845)
!15851 = !DILocation(line: 174, column: 9, scope: !15845)
!15852 = !DILocation(line: 175, column: 12, scope: !15845)
!15853 = !DILocation(line: 175, column: 9, scope: !15845)
!15854 = !DILocation(line: 176, column: 12, scope: !15845)
!15855 = !DILocation(line: 176, column: 9, scope: !15845)
!15856 = !DILocation(line: 177, column: 12, scope: !15845)
!15857 = !DILocation(line: 177, column: 9, scope: !15845)
!15858 = !DILocation(line: 179, column: 12, scope: !15845)
!15859 = !DILocation(line: 180, column: 5, scope: !15845)
