; ModuleID = './Build/fatfs_read_write_file.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.hal_eint_gpio_map_t = type { i32, i32, i32, i32 }
%struct.gpio_backup_restore_t = type { i32, i32 }
%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%struct.log_control_block_t = type { i8*, i32, i32, void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.hal_spi_master_config_t = type { i32, i32, i32, i32, i32 }
%struct.uart_context_t = type { i8, %struct.hal_eint_gpio_map_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.FATFS = type { i8, i8, i8, i8, i8, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [512 x i8] }
%struct.FIL = type { %struct._FDID, i8, i8, i32, i32, i32, i32, i8*, i32*, [512 x i8] }
%struct._FDID = type { %struct.FATFS*, i16, i8, i8, i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [6 x i8], i32, i32, i32, i32, i32, i32 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.QUEUE_REGISTRY_ITEM = type { i8*, i8* }
%struct.A_BLOCK_LINK = type { %struct.A_BLOCK_LINK*, i32 }
%struct.exception_config_t = type { i32, [6 x %struct.exception_config_type] }
%struct.exception_config_type = type { void ()*, void ()* }
%struct.TaskContextType = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.memory_region_type = type { i8*, i32*, i32*, i32 }
%struct.syslog_buffer_t = type { i32, [292 x i8] }
%struct.syslog_config_s = type { {}*, %struct.log_control_block_t** }
%struct.gpio_status = type { i32, i8, i8, i8 }
%struct.__va_list = type { i8* }
%struct.hal_spi_master_send_and_receive_config_t = type { i8*, i32, i8*, i32 }
%struct.DIR = type { %struct._FDID, i32, i32, i32, i8*, [12 x i8], i8* }
%struct.FILINFO = type { i32, i16, i16, i8, [13 x i8] }
%struct.putbuff = type { %struct.FIL*, i32, i32, [64 x i8] }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%struct.xTASK_STATUS = type { i8*, i8*, i32, i32, i32, i32, i32, i16 }
%struct.QueueDefinition = type { i8*, i8*, i8*, %struct.__va_list, %struct.xLIST, %struct.xLIST, i32, i32, i32, i32, i32, i32, i8 }
%struct.normal_log_message_t = type { i8*, i32, i8*, i32, i32, [257 x i8] }
%struct.hex_dump_message_t = type { i8*, i32, i8*, i32, i32, [129 x i8], i32, [128 x i8], i8* }
%struct.log_message_t = type { i32, %union.anon }
%union.anon = type { %struct.hex_dump_message_t }

@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !0
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !67
@.str = private unnamed_addr constant [58 x i8] c"../../../../..//driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !80
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !72
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !74
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !76
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !81
@.str.3 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.4 = private unnamed_addr constant [52 x i8] c"../../../../..//driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !160
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !161
@hal_eint_count_max = external dso_local local_unnamed_addr constant i32, align 4
@eint_gpio_table = external dso_local local_unnamed_addr constant [0 x %struct.hal_eint_gpio_map_t], align 4
@__FUNCTION__.drvGPIO_IDX_EINT_WIC_LISR = private unnamed_addr constant [26 x i8] c"drvGPIO_IDX_EINT_WIC_LISR\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"[Eint]drvGPIO_IDX_EINT_WIC_LISR error, the irq_number=%d\0D\0A\00", align 1
@.str.1.6 = private unnamed_addr constant [62 x i8] c"../../../../..//driver/chip/mt7687/src/common/hal_gpio_7687.c\00", align 1
@.str.2.7 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@LISR.0 = internal unnamed_addr global void (i32)* null, align 4, !dbg !162
@__FUNCTION__.halRegGPInterrupt = private unnamed_addr constant [18 x i8] c"halRegGPInterrupt\00", align 1
@.str.3.8 = private unnamed_addr constant [48 x i8] c"[Eint]halRegGPInterrupt error, the padname=%d\0D\0A\00", align 1
@__FUNCTION__.halRegGPInterrupt_set_triggermode = private unnamed_addr constant [34 x i8] c"halRegGPInterrupt_set_triggermode\00", align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"[Eint]halRegGPInterrupt_set_triggermode error, the padname=%d\0D\0A\00", align 1
@__FUNCTION__.halRegGPInterrupt_set_debounce = private unnamed_addr constant [31 x i8] c"halRegGPInterrupt_set_debounce\00", align 1
@.str.5.9 = private unnamed_addr constant [61 x i8] c"[Eint]halRegGPInterrupt_set_debounce error, the padname=%d\0D\0A\00", align 1
@__FUNCTION__.halRegGPInterrupt_mask = private unnamed_addr constant [23 x i8] c"halRegGPInterrupt_mask\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"[Eint]halRegGPInterrupt_mask error, the padname=%d\0D\0A\00", align 1
@__FUNCTION__.halRegGPInterrupt_unmask = private unnamed_addr constant [25 x i8] c"halRegGPInterrupt_unmask\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"[Eint]halRegGPInterrupt_unmask error, the padname=%d\0D\0A\00", align 1
@__FUNCTION__.halRegGP_set_software_trigger = private unnamed_addr constant [30 x i8] c"halRegGP_set_software_trigger\00", align 1
@.str.8 = private unnamed_addr constant [60 x i8] c"[Eint]halRegGP_set_software_trigger error, the padname=%d\0D\0A\00", align 1
@__FUNCTION__.halRegGP_clear_software_trigger = private unnamed_addr constant [32 x i8] c"halRegGP_clear_software_trigger\00", align 1
@.str.9 = private unnamed_addr constant [62 x i8] c"[Eint]halRegGP_clear_software_trigger error, the padname=%d\0D\0A\00", align 1
@halspim_isr = dso_local local_unnamed_addr global void ()* null, align 4, !dbg !392
@gpio_bakup_table = internal unnamed_addr global [22 x %struct.gpio_backup_restore_t] [%struct.gpio_backup_restore_t { i32 0, i32 -2097106944 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106928 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106912 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106896 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106880 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106864 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106848 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106832 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106816 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106800 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106784 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106768 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106736 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106732 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106728 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106724 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106720 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106704 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106700 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106688 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106684 }, %struct.gpio_backup_restore_t { i32 0, i32 -2097106680 }], align 4, !dbg !407
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !453
@.str.16 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.17 = private unnamed_addr constant [52 x i8] c"../../../../..//driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !472
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !502
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !505
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !508
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !513
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !516
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !518
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !521
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !523
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !525
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !527
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !529
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !531
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !533
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !535
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !537
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !539
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !541
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !543
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !548
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !550
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !552
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !554
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !70
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.30, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16.31, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !557
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !64
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.29 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.32 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.33 = private unnamed_addr constant [58 x i8] c"../../../../..//driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4.34 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5.35 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6.36 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7.41 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8.48 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9.30 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16.31 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@spi_ok_cnt = internal global i32 0, align 4, !dbg !562
@quotient = internal unnamed_addr global i32 0, align 4, !dbg !608
@spim_write.remainder = internal unnamed_addr global i32 0, align 4, !dbg !578
@spim_write.regVal = internal unnamed_addr global i32 0, align 4, !dbg !592
@spim_read.remainder = internal unnamed_addr global i32 0, align 4, !dbg !594
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !611
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !620
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@.str.70 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.71 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !622
@.str.72 = private unnamed_addr constant [4 x i8] c"hal\00", align 1
@log_control_block_hal = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !669
@g_cache_status = dso_local global i8 0, align 1, !dbg !706
@.str.81 = private unnamed_addr constant [51 x i8] c"../../../../..//driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !789
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !794
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !797
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !842
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !910
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.104 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.105 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.108 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.109 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.110 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@spim_sleep_handler = dso_local local_unnamed_addr global [1 x i8] zeroinitializer, align 1, !dbg !949
@g_spi_master_status = internal global i8 0, align 1, !dbg !1034
@g_spi_master_context = internal global %struct.hal_spi_master_config_t zeroinitializer, align 4, !dbg !1020
@g_spi_master_cs_n = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1036
@__FUNCTION__.hal_spi_master_map_cs_pin = private unnamed_addr constant [26 x i8] c"hal_spi_master_map_cs_pin\00", align 1
@.str.116 = private unnamed_addr constant [33 x i8] c"[SPIM]: g_spi_master_cs_n: %d.\0D\0A\00", align 1
@.str.1.117 = private unnamed_addr constant [43 x i8] c"[SPIM]: cannot decide the GPIO for CS_N.\0D\0A\00", align 1
@.str.2.115 = private unnamed_addr constant [6 x i8] c"SPIM0\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !1050
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !1106
@g_uart_send_lock_status = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !1152
@g_uart_sleep_handler = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !1149
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.71, i32 0, i32 0)], align 4, !dbg !658
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [2 x i32] [i32 0, i32 5], align 4, !dbg !664
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !1155
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@DWT_NUMCOMP = internal unnamed_addr global i32 0, align 4, !dbg !1166
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !1216
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !1236
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !1238
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !1240
@__const.gpio_mode_init.mode_temp = private unnamed_addr constant [10 x i32] [i32 1753773960, i32 -2004318072, i32 -2004318072, i32 1145325158, i32 -2005444476, i32 -2004318072, i32 -2004318072, i32 -2004457336, i32 -2004318072, i32 8], align 4
@FatFs = internal unnamed_addr global [1 x %struct.FATFS*] zeroinitializer, align 4, !dbg !1242
@f_setlabel.badchr = internal constant [16 x i8] c"\22*+,.:;<=>?[]|\7F\00", align 1, !dbg !1294
@ExCvt = internal unnamed_addr constant [128 x i8] c"\80\9AEA\8EA\8F\80EEEIII\8E\8F\90\92\92O\99OUUY\99\9A\9B\9C\9D\9E\9FAIOU\A5\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 1, !dbg !1419
@f_mkfs.cst = internal unnamed_addr constant [7 x i16] [i16 1, i16 4, i16 16, i16 64, i16 256, i16 512, i16 0], align 2, !dbg !1358
@f_mkfs.cst32 = internal unnamed_addr constant [7 x i16] [i16 1, i16 2, i16 4, i16 8, i16 16, i16 32, i16 0], align 2, !dbg !1400
@.str.132 = private unnamed_addr constant [12 x i8] c"\EB\FE\90MSDOS5.0\00", align 1
@.str.1.134 = private unnamed_addr constant [20 x i8] c"NO NAME    FAT32   \00", align 1
@.str.2.133 = private unnamed_addr constant [20 x i8] c"NO NAME    FAT     \00", align 1
@.str.3.130 = private unnamed_addr constant [3 x i8] c"SD\00", align 1
@Fsid = internal unnamed_addr global i16 0, align 2, !dbg !1417
@.str.4.131 = private unnamed_addr constant [15 x i8] c"\22*+,:;<=>?[]|\7F\00", align 1
@switch.table.dir_next = private unnamed_addr constant [3 x i32] [i32 1, i32 7, i32 2], align 4
@Drive1_Stat = dso_local local_unnamed_addr global i8 1, align 1, !dbg !1425
@spi_mosi_pin = internal unnamed_addr global i32 0, align 4, !dbg !1433
@spi_mosi_pin_func_mosi = internal unnamed_addr global i8 0, align 1, !dbg !1444
@spi_mosi_pin_func_gpio = internal unnamed_addr global i1 false, align 1, !dbg !1448
@__FUNCTION__.wait_ready = private unnamed_addr constant [11 x i8] c"wait_ready\00", align 1
@.str.145 = private unnamed_addr constant [30 x i8] c"wait bus not busy timeout. \0D\0A\00", align 1
@__FUNCTION__.power_on = private unnamed_addr constant [9 x i8] c"power_on\00", align 1
@.str.1.147 = private unnamed_addr constant [39 x i8] c"hal_spi_master_init fail, status = %d\0A\00", align 1
@__FUNCTION__.set_frequency = private unnamed_addr constant [14 x i8] c"set_frequency\00", align 1
@.str.2.148 = private unnamed_addr constant [40 x i8] c"hal_spi_master_init fail, status = %d.\0A\00", align 1
@Drive0_Stat = dso_local local_unnamed_addr global i8 1, align 1, !dbg !1431
@CardType = internal unnamed_addr global i8 0, align 1, !dbg !1442
@__FUNCTION__.rcvr_spi = private unnamed_addr constant [9 x i8] c"rcvr_spi\00", align 1
@.str.3.146 = private unnamed_addr constant [60 x i8] c"rcvr_spi,SPI master send and receive failed, status = %d \0D\0A\00", align 1
@__FUNCTION__.rcvr_spi_m = private unnamed_addr constant [11 x i8] c"rcvr_spi_m\00", align 1
@.str.4.153 = private unnamed_addr constant [59 x i8] c"rcvr_spi,SPI master send and receive failed,status = %d \0D\0A\00", align 1
@__FUNCTION__.send_cmd = private unnamed_addr constant [9 x i8] c"send_cmd\00", align 1
@.str.5.151 = private unnamed_addr constant [47 x i8] c"xmit_spi,SPI master send failed,status = %d \0D\0A\00", align 1
@.str.6.152 = private unnamed_addr constant [30 x i8] c"wait cmd response timeout. \0D\0A\00", align 1
@__FUNCTION__.rcvr_datablock = private unnamed_addr constant [15 x i8] c"rcvr_datablock\00", align 1
@.str.7.156 = private unnamed_addr constant [35 x i8] c"wait recive data token timeout. \0D\0A\00", align 1
@.str.8.157 = private unnamed_addr constant [38 x i8] c"recive data token error.token = %x \0D\0A\00", align 1
@__FUNCTION__.xmit_spi = private unnamed_addr constant [9 x i8] c"xmit_spi\00", align 1
@__FUNCTION__.xmit_spi_m = private unnamed_addr constant [11 x i8] c"xmit_spi_m\00", align 1
@.str.9.160 = private unnamed_addr constant [49 x i8] c"xmit_spi_m,SPI master send failed,status = %d \0D\0A\00", align 1
@.str.163 = private unnamed_addr constant [6 x i8] c"fatfs\00", align 1
@log_control_block_fatfs = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.163, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1449
@fdst = dso_local global %struct.FIL zeroinitializer, align 4, !dbg !1455
@fatfs = dso_local global %struct.FATFS zeroinitializer, align 4, !dbg !1502
@.str.1.164 = private unnamed_addr constant [3 x i8] c"0:\00", align 1
@__FUNCTION__.fatfs_read_write_file = private unnamed_addr constant [22 x i8] c"fatfs_read_write_file\00", align 1
@.str.2.165 = private unnamed_addr constant [33 x i8] c"Failed to mount the partition!\0A\0D\00", align 1
@.str.3.166 = private unnamed_addr constant [15 x i8] c"SD:/Test_W.txt\00", align 1
@.str.4.167 = private unnamed_addr constant [29 x i8] c"Failed to create the file!\0A\0D\00", align 1
@.str.5.168 = private unnamed_addr constant [27 x i8] c"Failed to open the file!\0A\0D\00", align 1
@.str.6.169 = private unnamed_addr constant [28 x i8] c"Failed to write the file!\0A\0D\00", align 1
@.str.7.170 = private unnamed_addr constant [28 x i8] c"Failed to close the file!\0A\0D\00", align 1
@.str.8.171 = private unnamed_addr constant [27 x i8] c"Failed to read the file!\0A\0D\00", align 1
@.str.9.172 = private unnamed_addr constant [56 x i8] c"Failed: data read is different from the data written!\0A\0D\00", align 1
@.str.10.173 = private unnamed_addr constant [45 x i8] c"The file is written and read successfully!\0A\0D\00", align 1
@.str.174 = private unnamed_addr constant [6 x i8] c"flash\00", align 1
@__FLASH_segment_start__ = external dso_local global [0 x i32], align 4
@__FLASH_segment_end__ = external dso_local global [0 x i32], align 4
@.str.1.175 = private unnamed_addr constant [5 x i8] c"sram\00", align 1
@__SRAM_segment_start__ = external dso_local global [0 x i32], align 4
@__SRAM_segment_end__ = external dso_local global [0 x i32], align 4
@.str.2.176 = private unnamed_addr constant [8 x i8] c"ramtext\00", align 1
@__ramtext_start__ = external dso_local global [0 x i32], align 4
@__ramtext_end__ = external dso_local global [0 x i32], align 4
@.str.3.177 = private unnamed_addr constant [7 x i8] c"tcmbss\00", align 1
@__tcmbss_start__ = external dso_local global [0 x i32], align 4
@__tcmbss_end__ = external dso_local global [0 x i32], align 4
@.str.4.178 = private unnamed_addr constant [4 x i8] c"scs\00", align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !1512
@__FUNCTION__._main_sys_random_init = private unnamed_addr constant [22 x i8] c"_main_sys_random_init\00", align 1
@.str.1.187 = private unnamed_addr constant [18 x i8] c"trng init failed\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !1572
@end = external dso_local global i8, align 1
@.str.188 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.189 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.190 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !1774
@.str.191 = private unnamed_addr constant [11 x i8] c"pxTaskCode\00", align 1
@.str.1.192 = private unnamed_addr constant [52 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/tasks.c\00", align 1
@.str.2.193 = private unnamed_addr constant [67 x i8] c"( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES )\00", align 1
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !1890
@xSchedulerRunning = internal global i32 0, align 4, !dbg !1893
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !1896
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !1898
@pxReadyTasksLists = internal global [20 x %struct.xLIST] zeroinitializer, align 4, !dbg !1876
@xTasksWaitingTermination = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1886
@uxTasksDeleted = internal global i32 0, align 4, !dbg !1900
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !1902
@.str.4.194 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended == 0\00", align 1
@.str.5.195 = private unnamed_addr constant [19 x i8] c"pxPreviousWakeTime\00", align 1
@.str.6.196 = private unnamed_addr constant [24 x i8] c"( xTimeIncrement > 0U )\00", align 1
@xTickCount = internal global i32 0, align 4, !dbg !1904
@.str.7.199 = private unnamed_addr constant [41 x i8] c"( uxNewPriority < configMAX_PRIORITIES )\00", align 1
@xSuspendedTaskList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1888
@.str.8.201 = private unnamed_addr constant [14 x i8] c"xTaskToResume\00", align 1
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1884
@.str.9.202 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.10.203 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.11.197 = private unnamed_addr constant [21 x i8] c"uxSchedulerSuspended\00", align 1
@xYieldPending = internal global i32 0, align 4, !dbg !1907
@uxPendedTicks = internal global i32 0, align 4, !dbg !1909
@.str.12.204 = private unnamed_addr constant [6 x i8] c"pxTCB\00", align 1
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !1879
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !1882
@.str.13.198 = private unnamed_addr constant [43 x i8] c"( listLIST_IS_EMPTY( pxDelayedTaskList ) )\00", align 1
@xNumOfOverflows = internal global i32 0, align 4, !dbg !1911
@xNextTaskUnblockTime = internal global i32 -1, align 4, !dbg !1913
@vTaskSwitchContext.ucExpectedStackBytes = internal constant [20 x i8] c"\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5", align 1, !dbg !1861
@.str.14.200 = private unnamed_addr constant [71 x i8] c"listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0\00", align 1
@.str.15.205 = private unnamed_addr constant [12 x i8] c"pxEventList\00", align 1
@.str.16.206 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended != 0\00", align 1
@.str.17.207 = private unnamed_addr constant [15 x i8] c"pxUnblockedTCB\00", align 1
@.str.18.208 = private unnamed_addr constant [32 x i8] c"uxSchedulerSuspended != pdFALSE\00", align 1
@.str.19.209 = private unnamed_addr constant [10 x i8] c"pxTimeOut\00", align 1
@.str.20.210 = private unnamed_addr constant [14 x i8] c"pxTicksToWait\00", align 1
@.str.21.211 = private unnamed_addr constant [21 x i8] c"pxTCB->uxMutexesHeld\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"\09%c\09%u\09%u\09%u\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"xTaskToNotify\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"xTask\00", align 1
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1915
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1917
@switch.table.vTaskList = private unnamed_addr constant [4 x i32] [i32 82, i32 66, i32 83, i32 68], align 4
@.str.222 = private unnamed_addr constant [8 x i8] c"pxQueue\00", align 1
@.str.1.223 = private unnamed_addr constant [52 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/queue.c\00", align 1
@.str.2.224 = private unnamed_addr constant [34 x i8] c"uxQueueLength > ( UBaseType_t ) 0\00", align 1
@.str.3.225 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.4.226 = private unnamed_addr constant [11 x i8] c"pxNewQueue\00", align 1
@.str.5.230 = private unnamed_addr constant [8 x i8] c"pxMutex\00", align 1
@.str.6.232 = private unnamed_addr constant [16 x i8] c"uxMaxCount != 0\00", align 1
@.str.7.233 = private unnamed_addr constant [29 x i8] c"uxInitialCount <= uxMaxCount\00", align 1
@.str.8.234 = private unnamed_addr constant [8 x i8] c"xHandle\00", align 1
@.str.9.227 = private unnamed_addr constant [80 x i8] c"!( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.10.228 = private unnamed_addr constant [71 x i8] c"!( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) )\00", align 1
@.str.11.229 = private unnamed_addr constant [86 x i8] c"!( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) )\00", align 1
@.str.12.235 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize == 0\00", align 1
@.str.13.231 = private unnamed_addr constant [75 x i8] c"!( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.14.236 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize != 0\00", align 1
@.str.15.237 = private unnamed_addr constant [7 x i8] c"xQueue\00", align 1
@xQueueRegistry = dso_local local_unnamed_addr global [8 x %struct.QUEUE_REGISTRY_ITEM] zeroinitializer, align 4, !dbg !1920
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !1983
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !2002
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !2004
@.str.246 = private unnamed_addr constant [28 x i8] c"uxCriticalNesting == 1000UL\00", align 1
@.str.1.241 = private unnamed_addr constant [73 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c\00", align 1
@.str.2.249 = private unnamed_addr constant [53 x i8] c"( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0\00", align 1
@.str.3.252 = private unnamed_addr constant [18 x i8] c"uxCriticalNesting\00", align 1
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !1570
@.str.4.255 = private unnamed_addr constant [42 x i8] c"ucCurrentPriority >= ucMaxSysCallPriority\00", align 1
@.str.5.256 = private unnamed_addr constant [66 x i8] c"( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue\00", align 1
@.str.6.240 = private unnamed_addr constant [26 x i8] c"uxCriticalNesting == ~0UL\00", align 1
@pxEnd = internal unnamed_addr global %struct.A_BLOCK_LINK* null, align 4, !dbg !2006
@xBlockAllocatedBit = internal unnamed_addr global i1 false, align 4, !dbg !2035
@.str.1.260 = private unnamed_addr constant [70 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c\00", align 1
@xFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !2026
@xStart = internal global %struct.A_BLOCK_LINK zeroinitializer, align 4, !dbg !2022
@.str.2.259 = private unnamed_addr constant [67 x i8] c"( ( ( uint32_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@xMinimumEverFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !2028
@.str.3.261 = private unnamed_addr constant [61 x i8] c"( ( ( uint32_t ) pvReturn ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@.str.4.264 = private unnamed_addr constant [49 x i8] c"( pxLink->xBlockSize & xBlockAllocatedBit ) != 0\00", align 1
@.str.5.265 = private unnamed_addr constant [32 x i8] c"pxLink->pxNextFreeBlock == NULL\00", align 1
@ucHeap = internal global [65536 x i8] zeroinitializer, align 1, !dbg !2030
@xExceptionStack = internal global [192 x i32] zeroinitializer, align 4, !dbg !2036
@pxExceptionStack = dso_local local_unnamed_addr global i32* getelementptr inbounds ([192 x i32], [192 x i32]* @xExceptionStack, i32 0, i32 191), align 4, !dbg !2122
@assert_expr.0 = internal unnamed_addr global i1 false, align 4, !dbg !2216
@assert_expr.1 = internal unnamed_addr global i8* null, align 4, !dbg !2217
@assert_expr.2 = internal unnamed_addr global i8* null, align 4, !dbg !2218
@assert_expr.3 = internal unnamed_addr global i32 0, align 4, !dbg !2219
@reboot_flag = internal unnamed_addr global i32 0, align 4, !dbg !2194
@exception_config = internal unnamed_addr global %struct.exception_config_t zeroinitializer, align 4, !dbg !2196
@.str.268 = private unnamed_addr constant [40 x i8] c"assert failed: %s, file: %s, line: %d\0A\0D\00", align 1
@.str.1.269 = private unnamed_addr constant [14 x i8] c"Usage fault: \00", align 1
@.str.2.270 = private unnamed_addr constant [17 x i8] c"Divide by zero\0A\0D\00", align 1
@.str.3.271 = private unnamed_addr constant [19 x i8] c"Unaligned access\0A\0D\00", align 1
@.str.4.272 = private unnamed_addr constant [20 x i8] c"Coprocessor error\0A\0D\00", align 1
@.str.5.273 = private unnamed_addr constant [21 x i8] c"Invalid EXC_RETURN\0A\0D\00", align 1
@.str.6.274 = private unnamed_addr constant [16 x i8] c"Invalid state\0A\0D\00", align 1
@.str.7.275 = private unnamed_addr constant [24 x i8] c"Undefined instruction\0A\0D\00", align 1
@.str.8.276 = private unnamed_addr constant [26 x i8] c"Memory Management fault: \00", align 1
@.str.9.277 = private unnamed_addr constant [63 x i8] c"A MemManage fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.10.278 = private unnamed_addr constant [56 x i8] c"A derived MemManage fault occurred on exception entry\0A\0D\00", align 1
@.str.11.279 = private unnamed_addr constant [57 x i8] c"A derived MemManage fault occurred on exception return\0A\0D\00", align 1
@.str.12.280 = private unnamed_addr constant [32 x i8] c"Data access violation @0x%08x\0A\0D\00", align 1
@.str.13.281 = private unnamed_addr constant [64 x i8] c"MPU or Execute Never (XN) default memory map access violation\0A\0D\00", align 1
@.str.14.282 = private unnamed_addr constant [22 x i8] c"SCB->MMFAR = 0x%08x\0A\0D\00", align 1
@.str.15.283 = private unnamed_addr constant [12 x i8] c"Bus fault: \00", align 1
@.str.16.284 = private unnamed_addr constant [57 x i8] c"A bus fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.17.285 = private unnamed_addr constant [54 x i8] c"A derived bus fault has occurred on exception entry\0A\0D\00", align 1
@.str.18.286 = private unnamed_addr constant [55 x i8] c"A derived bus fault has occurred on exception return\0A\0D\00", align 1
@.str.19.287 = private unnamed_addr constant [43 x i8] c"Imprecise data access error has occurred\0A\0D\00", align 1
@.str.20.288 = private unnamed_addr constant [50 x i8] c"A precise data access error has occurred @x%08x\0A\0D\00", align 1
@.str.21.289 = private unnamed_addr constant [54 x i8] c"A bus fault on an instruction prefetch has occurred\0A\0D\00", align 1
@.str.22.290 = private unnamed_addr constant [21 x i8] c"SCB->BFAR = 0x%08x\0A\0D\00", align 1
@taskContext = internal global %struct.TaskContextType zeroinitializer, align 4, !dbg !2211
@pTaskContext = dso_local local_unnamed_addr global %struct.TaskContextType* @taskContext, align 4, !dbg !2125
@.str.23.291 = private unnamed_addr constant [15 x i8] c"r0  = 0x%08x\0A\0D\00", align 1
@.str.24.292 = private unnamed_addr constant [15 x i8] c"r1  = 0x%08x\0A\0D\00", align 1
@.str.25.293 = private unnamed_addr constant [15 x i8] c"r2  = 0x%08x\0A\0D\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"r3  = 0x%08x\0A\0D\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"r4  = 0x%08x\0A\0D\00", align 1
@.str.28.294 = private unnamed_addr constant [15 x i8] c"r5  = 0x%08x\0A\0D\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"r6  = 0x%08x\0A\0D\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"r7  = 0x%08x\0A\0D\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"r8  = 0x%08x\0A\0D\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"r9  = 0x%08x\0A\0D\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"r10 = 0x%08x\0A\0D\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"r11 = 0x%08x\0A\0D\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"r12 = 0x%08x\0A\0D\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"lr  = 0x%08x\0A\0D\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"pc  = 0x%08x\0A\0D\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"psr = 0x%08x\0A\0D\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"EXC_RET = 0x%08x\0A\0D\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"s0  = 0x%08x\0A\0D\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"s1  = 0x%08x\0A\0D\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"s2  = 0x%08x\0A\0D\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"s3  = 0x%08x\0A\0D\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"s4  = 0x%08x\0A\0D\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"s5  = 0x%08x\0A\0D\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"s6  = 0x%08x\0A\0D\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"s7  = 0x%08x\0A\0D\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"s8  = 0x%08x\0A\0D\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"s9  = 0x%08x\0A\0D\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"s10 = 0x%08x\0A\0D\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"s11 = 0x%08x\0A\0D\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"s12 = 0x%08x\0A\0D\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"s13 = 0x%08x\0A\0D\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"s14 = 0x%08x\0A\0D\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"s15 = 0x%08x\0A\0D\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"s16 = 0x%08x\0A\0D\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"s17 = 0x%08x\0A\0D\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"s18 = 0x%08x\0A\0D\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"s19 = 0x%08x\0A\0D\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"s20 = 0x%08x\0A\0D\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"s21 = 0x%08x\0A\0D\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"s22 = 0x%08x\0A\0D\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"s23 = 0x%08x\0A\0D\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"s24 = 0x%08x\0A\0D\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"s25 = 0x%08x\0A\0D\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"s26 = 0x%08x\0A\0D\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"s27 = 0x%08x\0A\0D\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"s28 = 0x%08x\0A\0D\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"s29 = 0x%08x\0A\0D\00", align 1
@.str.70.295 = private unnamed_addr constant [15 x i8] c"s30 = 0x%08x\0A\0D\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"s31 = 0x%08x\0A\0D\00", align 1
@.str.72.296 = private unnamed_addr constant [17 x i8] c"fpscr = 0x%08x\0A\0D\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c"CONTROL = 0x%08x\0A\0D\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"MSP     = 0x%08x\0A\0D\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"PSP     = 0x%08x\0A\0D\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"sp      = 0x%08x\0A\0D\00", align 1
@memory_regions = dso_local local_unnamed_addr constant [6 x %struct.memory_region_type] [%struct.memory_region_type { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.174, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_end__, i32 0, i32 0), i32 0 }, %struct.memory_region_type { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.175, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.176, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.177, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.178, i32 0, i32 0), i32* inttoptr (i32 -536813568 to i32*), i32* inttoptr (i32 -536809472 to i32*), i32 1 }, %struct.memory_region_type zeroinitializer], align 4, !dbg !2220
@.str.77 = private unnamed_addr constant [30 x i8] c"0x%08x: %08x %08x %08x %08x\0A\0D\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"\0A\0Dmemory dump completed.\0A\0D\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"\0A\0DIn Hard Fault Handler\0A\0D\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"SCB->HFSR = 0x%08x\0A\0D\00", align 1
@.str.81.297 = private unnamed_addr constant [20 x i8] c"Forced Hard Fault\0A\0D\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"SCB->CFSR = 0x%08x\0A\0D\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"\0A\0DIn MemManage Fault Handler\0A\0D\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"\0A\0DIn Bus Fault Handler\0A\0D\00", align 1
@.str.85 = private unnamed_addr constant [27 x i8] c"\0A\0DIn Usage Fault Handler\0A\0D\00", align 1
@.str.86 = private unnamed_addr constant [35 x i8] c"\0A\0DIn Debug Monitor Fault Handler\0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [42 x i8] c"Task stack overflow:%c, stack end:0x%x \0D\0A\00", align 1
@.str.300 = private unnamed_addr constant [24 x i8] c"stack overflow: %x %s\0D\0A\00", align 1
@.str.1.301 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.302 = private unnamed_addr constant [54 x i8] c"../../../../..//kernel/service/src/os_port_callback.c\00", align 1
@.str.305 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@log_control_block_common = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.305, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !2234
@g_log_uart_port = internal unnamed_addr global i32 0, align 4, !dbg !2344
@syslog_init_done = internal unnamed_addr global i32 0, align 4, !dbg !2346
@syslog_buffer_pool = internal global [16 x %struct.syslog_buffer_t] zeroinitializer, align 4, !dbg !2327
@syslog_drop_count = internal unnamed_addr global i32 0, align 4, !dbg !2348
@g_log_queue = internal unnamed_addr global i8* null, align 4, !dbg !2350
@.str.1.324 = private unnamed_addr constant [45 x i8] c"log_queue_create: create log queue failed.\0D\0A\00", align 1
@.str.2.313 = private unnamed_addr constant [34 x i8] c"[T: %u M: %s C: %s F: %s L: %d]: \00", align 1
@print_level_table = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.312, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.318, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.319, i32 0, i32 0)], align 4, !dbg !2352
@.str.3.312 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4.325 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.5.315 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.6.314 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7.316 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8.326 = private unnamed_addr constant [29 x i8] c"\09\09>>> log drop count = %u\0D\0A\0A\00", align 1
@syslog_task_ready = internal unnamed_addr global i1 false, align 4, !dbg !2362
@.str.9.329 = private unnamed_addr constant [7 x i8] c"SYSLOG\00", align 1
@syslog_task_handle = internal global i8* null, align 4, !dbg !2325
@.str.10.330 = private unnamed_addr constant [39 x i8] c"log_init: create syslog task failed.\0D\0A\00", align 1
@syslog_config = internal global %struct.syslog_config_s zeroinitializer, align 8, !dbg !2330
@__FUNCTION__.log_init = private unnamed_addr constant [9 x i8] c"log_init\00", align 1
@.str.11.331 = private unnamed_addr constant [27 x i8] c"load syslog config failed\0A\00", align 1
@.str.12.333 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.13.337 = private unnamed_addr constant [19 x i8] c"%s%s 0x%01x 0x%01x\00", align 1
@.str.14.336 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15.338 = private unnamed_addr constant [24 x i8] c"pos < SYSLOG_FILTER_LEN\00", align 1
@.str.16.339 = private unnamed_addr constant [44 x i8] c"../../../../..//kernel/service/src/syslog.c\00", align 1
@.str.17.340 = private unnamed_addr constant [43 x i8] c"log_switch - DEBUG_LOG_ON <= DEBUG_LOG_OFF\00", align 1
@log_switch_table = internal unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.334, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.335, i32 0, i32 0)], align 4, !dbg !2359
@.str.18.341 = private unnamed_addr constant [53 x i8] c"print_level - PRINT_LEVEL_DEBUG <= PRINT_LEVEL_ERROR\00", align 1
@.str.19.317 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.20.318 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.21.319 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.22.332 = private unnamed_addr constant [29 x i8] c"\0A\0D>>> dump syslog buffer\0A\0D\0A\0D\00", align 1
@.str.23.334 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.24.335 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:55:58 GMT +00:00\00", align 1, !dbg !2363
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2368
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt7687_hdk\00", align 1, !dbg !2374

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #0 section ".ramTEXT" !dbg !2530 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !2537
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !2537
  call void @llvm.dbg.value(metadata i32 0, metadata !2534, metadata !DIExpression()), !dbg !2538
  store i32 0, i32* %1, align 4, !dbg !2539
  call void @llvm.dbg.value(metadata i32* %1, metadata !2534, metadata !DIExpression(DW_OP_deref)), !dbg !2538
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #20, !dbg !2540
  call void @llvm.dbg.value(metadata i32 %3, metadata !2535, metadata !DIExpression()), !dbg !2538
  %4 = icmp eq i32 %3, 0, !dbg !2541
  br i1 %4, label %6, label %5, !dbg !2543

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2544
  unreachable, !dbg !2544

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !2546
  call void @llvm.dbg.value(metadata i32 %7, metadata !2534, metadata !DIExpression()), !dbg !2538
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !2547
  ret i32 %7, !dbg !2548
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !2549 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !2551
  ret void, !dbg !2552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !2553 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !2554
  ret void, !dbg !2555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !2556 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2557
  ret void, !dbg !2558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !2559 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2560
  ret void, !dbg !2561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #0 !dbg !2562 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2567
  call void @llvm.dbg.value(metadata i32 %1, metadata !2566, metadata !DIExpression()), !dbg !2568
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !2569
  br i1 %2, label %4, label %3, !dbg !2571

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !2572
  br label %4, !dbg !2574

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !2575
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2575
  ret i32 %5, !dbg !2576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #0 !dbg !2577 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2580
  call void @llvm.dbg.value(metadata i32 %1, metadata !2579, metadata !DIExpression()), !dbg !2581
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !2582
  br i1 %2, label %3, label %4, !dbg !2584

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !2585
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2587
  ret void, !dbg !2588

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2589
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2591
  unreachable, !dbg !2591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #0 !dbg !2592 {
  br label %1, !dbg !2595

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #22, !dbg !2596
  call void @llvm.dbg.value(metadata i32 %2, metadata !2594, metadata !DIExpression()), !dbg !2598
  %3 = icmp eq i32 %2, 0, !dbg !2599
  br i1 %3, label %4, label %1, !dbg !2600, !llvm.loop !2601

4:                                                ; preds = %1
  ret void, !dbg !2603
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #0 !dbg !2604 {
  tail call void @free_sf_lock() #22, !dbg !2605
  ret void, !dbg !2606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2607 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2611, metadata !DIExpression()), !dbg !2613
  call void @llvm.dbg.value(metadata i32 0, metadata !2612, metadata !DIExpression()), !dbg !2613
  tail call fastcc void @sfc_pad_config() #22, !dbg !2614
  %2 = tail call i32 @gpt_get_current_time() #22, !dbg !2615
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #20, !dbg !2616
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !2618
  br i1 %4, label %6, label %5, !dbg !2619

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !2620
  br label %6, !dbg !2622

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #20, !dbg !2623
  ret i32 0, !dbg !2624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #5 !dbg !2625 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2627, metadata !DIExpression()), !dbg !2628
  %1 = load volatile i32, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2629
  call void @llvm.dbg.value(metadata i32 %1, metadata !2627, metadata !DIExpression()), !dbg !2628
  %2 = or i32 %1, 32256, !dbg !2630
  call void @llvm.dbg.value(metadata i32 %2, metadata !2627, metadata !DIExpression()), !dbg !2628
  store volatile i32 %2, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2631
  ret void, !dbg !2632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2633 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2637, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.value(metadata i8* %1, metadata !2638, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.value(metadata i32 %2, metadata !2639, metadata !DIExpression()), !dbg !2640
  tail call void @retrieve_sf_lock() #22, !dbg !2641
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #20, !dbg !2642
  tail call void @release_sf_lock() #22, !dbg !2643
  ret void, !dbg !2644
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2649, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 %1, metadata !2650, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i8* %2, metadata !2651, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 0, metadata !2652, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 %1, metadata !2653, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 0, metadata !2654, metadata !DIExpression()), !dbg !2655
  tail call void @retrieve_sf_lock() #22, !dbg !2656
  call void @llvm.dbg.value(metadata i32 %1, metadata !2653, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 %0, metadata !2649, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i8* %2, metadata !2651, metadata !DIExpression()), !dbg !2655
  %4 = icmp ugt i32 %1, 127, !dbg !2657
  br i1 %4, label %5, label %19, !dbg !2658

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2653, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 %7, metadata !2649, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i8* %8, metadata !2651, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 128, metadata !2654, metadata !DIExpression()), !dbg !2655
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2659
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !2662

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #20, !dbg !2663
  br label %14, !dbg !2665

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #20, !dbg !2666
  br label %14, !dbg !2669

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !2670
  call void @llvm.dbg.value(metadata i8* %15, metadata !2651, metadata !DIExpression()), !dbg !2655
  %16 = add i32 %7, 128, !dbg !2671
  call void @llvm.dbg.value(metadata i32 %16, metadata !2649, metadata !DIExpression()), !dbg !2655
  %17 = add i32 %6, -128, !dbg !2672
  call void @llvm.dbg.value(metadata i32 %17, metadata !2653, metadata !DIExpression()), !dbg !2655
  %18 = icmp ugt i32 %17, 127, !dbg !2657
  br i1 %18, label %5, label %19, !dbg !2658, !llvm.loop !2673

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !2655
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2675
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !2677

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #20, !dbg !2678
  br label %28, !dbg !2680

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #20, !dbg !2681
  br label %28, !dbg !2684

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2685
  tail call void @release_sf_lock() #22, !dbg !2686
  ret i32 0, !dbg !2687
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !2688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2693, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.value(metadata i32 %1, metadata !2694, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.value(metadata i8* %2, metadata !2695, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.value(metadata i32 0, metadata !2696, metadata !DIExpression()), !dbg !2697
  tail call void @retrieve_sf_lock() #22, !dbg !2698
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !2699
  %5 = tail call i32 @hal_cache_disable() #20, !dbg !2700
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #20, !dbg !2701
  call void @llvm.dbg.value(metadata i32 %6, metadata !2696, metadata !DIExpression()), !dbg !2697
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2702
  %7 = tail call i32 @hal_cache_enable() #20, !dbg !2703
  tail call void @release_sf_lock() #22, !dbg !2704
  ret i32 %6, !dbg !2705
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2710, metadata !DIExpression()), !dbg !2713
  call void @llvm.dbg.value(metadata i32 %1, metadata !2711, metadata !DIExpression()), !dbg !2713
  call void @llvm.dbg.value(metadata i32 0, metadata !2712, metadata !DIExpression()), !dbg !2713
  tail call void @retrieve_sf_lock() #22, !dbg !2714
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !2715
  %4 = tail call i32 @hal_cache_disable() #20, !dbg !2716
  %5 = tail call i32 @flash_write_enable() #20, !dbg !2717
  %6 = tail call i32 @flash_unprotect() #20, !dbg !2718
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !2719

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !2720
  %9 = icmp eq i32 %8, 0, !dbg !2724
  br i1 %9, label %10, label %22, !dbg !2725

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #20, !dbg !2726
  call void @llvm.dbg.value(metadata i32 %11, metadata !2712, metadata !DIExpression()), !dbg !2713
  br label %22, !dbg !2727

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !2728
  %14 = icmp eq i32 %13, 0, !dbg !2732
  br i1 %14, label %15, label %22, !dbg !2733

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #20, !dbg !2734
  call void @llvm.dbg.value(metadata i32 %16, metadata !2712, metadata !DIExpression()), !dbg !2713
  br label %22, !dbg !2735

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !2736
  %19 = icmp eq i32 %18, 0, !dbg !2740
  br i1 %19, label %20, label %22, !dbg !2741

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #20, !dbg !2742
  call void @llvm.dbg.value(metadata i32 %21, metadata !2712, metadata !DIExpression()), !dbg !2713
  br label %22, !dbg !2743

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !2713
  %24 = tail call i32 @hal_cache_enable() #20, !dbg !2713
  tail call void @release_sf_lock() #22, !dbg !2713
  ret i32 %23, !dbg !2744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ramTEXT" !dbg !2745 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !2749
  call void @llvm.dbg.value(metadata i8 0, metadata !2747, metadata !DIExpression()), !dbg !2750
  store i8 0, i8* %1, align 1, !dbg !2751
  call void @llvm.dbg.value(metadata i32 0, metadata !2748, metadata !DIExpression()), !dbg !2750
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2752
  call void @llvm.dbg.value(metadata i32 %2, metadata !2748, metadata !DIExpression()), !dbg !2750
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2753, !range !2755
  %4 = icmp ne i8 %3, 0, !dbg !2753
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !2756
  br i1 %7, label %27, label %8, !dbg !2756

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !2747, metadata !DIExpression(DW_OP_deref)), !dbg !2750
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !2757
  %10 = icmp slt i32 %9, 0, !dbg !2760
  br i1 %10, label %11, label %12, !dbg !2761

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2762
  unreachable, !dbg !2762

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !2764
  call void @llvm.dbg.value(metadata i8 %13, metadata !2747, metadata !DIExpression()), !dbg !2750
  %14 = and i8 %13, 1, !dbg !2766
  %15 = icmp eq i8 %14, 0, !dbg !2767
  br i1 %15, label %26, label %16, !dbg !2768

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #20, !dbg !2769
  br label %17, !dbg !2771

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !2747, metadata !DIExpression(DW_OP_deref)), !dbg !2750
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !2772
  %19 = icmp slt i32 %18, 0, !dbg !2775
  br i1 %19, label %20, label %21, !dbg !2776

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2777
  unreachable, !dbg !2777

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !2779
  call void @llvm.dbg.value(metadata i8 %22, metadata !2747, metadata !DIExpression()), !dbg !2750
  %23 = and i8 %22, 1, !dbg !2781
  %24 = icmp eq i8 %23, 0, !dbg !2782
  br i1 %24, label %25, label %17, !dbg !2783, !llvm.loop !2784

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !2786
  br label %27, !dbg !2787

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !2788
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #20, !dbg !2790
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !2791
  ret void, !dbg !2791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2792 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2796, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 %1, metadata !2797, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i32 0, metadata !2799, metadata !DIExpression()), !dbg !2807
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !2808
  call void @llvm.dbg.value(metadata i8 0, metadata !2802, metadata !DIExpression()), !dbg !2807
  store i8 0, i8* %3, align 1, !dbg !2809
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2810
  call void @llvm.dbg.value(metadata i8 0, metadata !2803, metadata !DIExpression()), !dbg !2807
  store i8 0, i8* %4, align 1, !dbg !2811
  call void @llvm.dbg.value(metadata i8* %3, metadata !2802, metadata !DIExpression(DW_OP_deref)), !dbg !2807
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #20, !dbg !2812
  %6 = icmp slt i32 %5, 0, !dbg !2814
  br i1 %6, label %7, label %8, !dbg !2815

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2816
  unreachable, !dbg !2816

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !2818
  call void @llvm.dbg.value(metadata i8 %9, metadata !2802, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i8 %9, metadata !2800, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i8* %4, metadata !2803, metadata !DIExpression(DW_OP_deref)), !dbg !2807
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #20, !dbg !2820
  %11 = icmp slt i32 %10, 0, !dbg !2822
  br i1 %11, label %12, label %13, !dbg !2823

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2824
  unreachable, !dbg !2824

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !2826
  call void @llvm.dbg.value(metadata i8 %14, metadata !2803, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i8 %14, metadata !2801, metadata !DIExpression()), !dbg !2807
  %15 = call i32 @save_and_set_interrupt_mask() #20, !dbg !2828
  call void @llvm.dbg.value(metadata i32 %15, metadata !2799, metadata !DIExpression()), !dbg !2807
  %16 = and i8 %9, 1, !dbg !2829
  %17 = icmp eq i8 %16, 0, !dbg !2830
  br i1 %17, label %18, label %46, !dbg !2831

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !2804, metadata !DIExpression()), !dbg !2832
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !2833
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !2835

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !2804, metadata !DIExpression()), !dbg !2832
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !2836
  %22 = icmp eq i32 %21, 49, !dbg !2839
  %23 = select i1 %22, i32 132, i32 128, !dbg !2840
  br label %28, !dbg !2840

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !2804, metadata !DIExpression()), !dbg !2832
  br label %28, !dbg !2841

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #20, !dbg !2845
  call void @llvm.dbg.value(metadata i8 %26, metadata !2804, metadata !DIExpression()), !dbg !2832
  %27 = zext i8 %26 to i32, !dbg !2848
  br label %28, !dbg !2848

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !2804, metadata !DIExpression()), !dbg !2832
  %30 = zext i8 %14 to i32, !dbg !2849
  %31 = and i32 %29, %30, !dbg !2851
  %32 = icmp eq i32 %31, 0, !dbg !2852
  br i1 %32, label %33, label %38, !dbg !2853

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !2854
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !2855
  br i1 %37, label %43, label %38, !dbg !2855

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2856, !range !2755
  %40 = icmp eq i8 %39, 0, !dbg !2856
  br i1 %40, label %41, label %42, !dbg !2856

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !2856
  unreachable, !dbg !2856

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #20, !dbg !2858
  call void @llvm.dbg.value(metadata i32 -121, metadata !2798, metadata !DIExpression()), !dbg !2807
  br label %44, !dbg !2859

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !2860
  call void @llvm.dbg.value(metadata i32 0, metadata !2798, metadata !DIExpression()), !dbg !2807
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !2862
  br label %46, !dbg !2863

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !2864
  call void @llvm.dbg.value(metadata i32 %47, metadata !2798, metadata !DIExpression()), !dbg !2807
  call void @restore_interrupt_mask(i32 noundef %15) #20, !dbg !2863
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2865
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !2865
  ret i32 %47, !dbg !2866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2867 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2871, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.value(metadata i32 %1, metadata !2872, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.value(metadata i8 %2, metadata !2873, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.value(metadata i32 0, metadata !2875, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.value(metadata i16 0, metadata !2877, metadata !DIExpression()), !dbg !2879
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2880
  call void @llvm.dbg.value(metadata i8 0, metadata !2878, metadata !DIExpression()), !dbg !2879
  store i8 0, i8* %4, align 1, !dbg !2881
  call void @llvm.dbg.value(metadata i8* %4, metadata !2878, metadata !DIExpression(DW_OP_deref)), !dbg !2879
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #20, !dbg !2882
  %6 = icmp slt i32 %5, 0, !dbg !2884
  br i1 %6, label %7, label %8, !dbg !2885

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !2886
  unreachable, !dbg !2886

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !2888
  call void @llvm.dbg.value(metadata i8 %9, metadata !2878, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.value(metadata i8 %9, metadata !2877, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2879
  %10 = call i32 @save_and_set_interrupt_mask() #20, !dbg !2890
  call void @llvm.dbg.value(metadata i32 %10, metadata !2874, metadata !DIExpression()), !dbg !2879
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2891, !range !2755
  %12 = icmp eq i8 %11, 0, !dbg !2891
  br i1 %12, label %18, label %13, !dbg !2893

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2894, !range !2755
  %15 = icmp eq i8 %14, 0, !dbg !2894
  br i1 %15, label %16, label %17, !dbg !2894

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !2894
  unreachable, !dbg !2894

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #20, !dbg !2896
  call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !2897
  call void @restore_interrupt_mask(i32 noundef %10) #20, !dbg !2898
  br label %26, !dbg !2899

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !2877, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2879
  %19 = and i8 %9, 1, !dbg !2900
  %20 = icmp eq i8 %19, 0, !dbg !2902
  br i1 %20, label %21, label %26, !dbg !2903

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !2904
  %22 = inttoptr i32 %1 to i8*, !dbg !2906
  %23 = load volatile i8, i8* %22, align 1, !dbg !2907
  call void @llvm.dbg.value(metadata i8 %23, metadata !2876, metadata !DIExpression()), !dbg !2879
  %24 = icmp eq i8 %23, %2, !dbg !2908
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !2879
  call void @llvm.dbg.value(metadata i32 %27, metadata !2875, metadata !DIExpression()), !dbg !2879
  call void @restore_interrupt_mask(i32 noundef %10) #20, !dbg !2910
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #19, !dbg !2911
  ret i32 %27, !dbg !2912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 !dbg !2913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2917, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.value(metadata i32 %1, metadata !2918, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.value(metadata i1 %2, metadata !2919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2920
  %4 = icmp ugt i32 %0, 1, !dbg !2921
  br i1 %4, label %5, label %8, !dbg !2923

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 75) #20, !dbg !2924
  br label %7, !dbg !2924

7:                                                ; preds = %5, %7
  br label %7, !dbg !2924, !llvm.loop !2926

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !2927

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !2928
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2931
  br i1 %2, label %11, label %13, !dbg !2933

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !2934
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2934
  br label %21, !dbg !2936

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !2937
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2937
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !2939
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2942
  br i1 %2, label %17, label %19, !dbg !2944

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !2945
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2945
  br label %21, !dbg !2947

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !2948
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2948
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !2950
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !2951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2955, metadata !DIExpression()), !dbg !2956
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !2957

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 96) #20, !dbg !2958
  br label %4, !dbg !2958

4:                                                ; preds = %2, %4
  br label %4, !dbg !2958, !llvm.loop !2961

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2962
  %7 = or i32 %6, 1, !dbg !2962
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2962
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #20, !dbg !2965
  br label %16, !dbg !2966

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2967
  %11 = or i32 %10, 1, !dbg !2967
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2967
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #20, !dbg !2970
  br label %16, !dbg !2971

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2972
  %15 = or i32 %14, 1, !dbg !2972
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2972
  br label %16, !dbg !2975

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !2976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #5 !dbg !2977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2979, metadata !DIExpression()), !dbg !2980
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !2981

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2982
  %4 = and i32 %3, -2, !dbg !2982
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2982
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2985
  %6 = and i32 %5, -2, !dbg !2985
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2985
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2986
  br label %18, !dbg !2987

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2988
  %9 = and i32 %8, -3, !dbg !2988
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2988
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2991
  %11 = and i32 %10, -2, !dbg !2991
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2991
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2992
  br label %18, !dbg !2993

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2994
  %14 = and i32 %13, -2, !dbg !2994
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2994
  br label %18, !dbg !2997

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2998
  %17 = and i32 %16, -2, !dbg !2998
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2998
  br label %18, !dbg !3001

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !3002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #0 !dbg !3003 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3005, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.value(metadata i32 undef, metadata !3005, metadata !DIExpression()), !dbg !3007
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !3008
  %3 = and i32 %2, 65535, !dbg !3009
  call void @llvm.dbg.value(metadata i32 %2, metadata !3006, metadata !DIExpression()), !dbg !3007
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !3010
  %4 = and i32 %2, 1, !dbg !3011
  %5 = icmp eq i32 %4, 0, !dbg !3011
  br i1 %5, label %6, label %9, !dbg !3013

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !3014
  %8 = icmp eq i32 %7, 0, !dbg !3014
  br i1 %8, label %13, label %9, !dbg !3016

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #20, !dbg !3017
  %12 = load void ()*, void ()** %11, align 4, !dbg !3017
  tail call void %12() #20, !dbg !3017
  br label %13, !dbg !3018

13:                                               ; preds = %9, %6
  ret void, !dbg !3018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #0 !dbg !3019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3023, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.value(metadata i32 %1, metadata !3024, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.value(metadata void ()* %2, metadata !3025, metadata !DIExpression()), !dbg !3026
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !3027

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 149) #20, !dbg !3028
  br label %6, !dbg !3028

6:                                                ; preds = %4, %6
  br label %6, !dbg !3028, !llvm.loop !3031

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !3032
  br i1 %8, label %9, label %13, !dbg !3033

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #20, !dbg !3035
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #20, !dbg !3037
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #20, !dbg !3038
  br label %13, !dbg !3039

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !3040

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !3041
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3044
  %16 = or i32 %15, 1, !dbg !3044
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3044
  %17 = shl i32 %1, 2, !dbg !3045
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3046
  %19 = or i32 %18, %17, !dbg !3046
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3046
  br label %36, !dbg !3047

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !3048
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3051
  %22 = or i32 %21, 2, !dbg !3051
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3051
  %23 = shl i32 %1, 2, !dbg !3052
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3053
  %25 = or i32 %24, %23, !dbg !3053
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3053
  br label %36, !dbg !3054

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !3055
  %28 = or i32 %27, 1, !dbg !3058
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !3059
  %30 = or i32 %29, %28, !dbg !3059
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !3059
  br label %36, !dbg !3060

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !3061
  %33 = or i32 %32, 1, !dbg !3064
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3065
  %35 = or i32 %34, %33, !dbg !3065
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3065
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !3066
  br label %36, !dbg !3067

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !3068
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #0 !dbg !3069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3073, metadata !DIExpression()), !dbg !3075
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !3076

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 177) #20, !dbg !3077
  br label %4, !dbg !3077

4:                                                ; preds = %4, %2
  br label %4, !dbg !3077, !llvm.loop !3080

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !3074, metadata !DIExpression()), !dbg !3075
  br label %8, !dbg !3081

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !3074, metadata !DIExpression()), !dbg !3075
  br label %8, !dbg !3085

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !3074, metadata !DIExpression()), !dbg !3075
  br label %8, !dbg !3088

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !3091
  call void @llvm.dbg.value(metadata i32 %10, metadata !3074, metadata !DIExpression()), !dbg !3075
  ret i32 %10, !dbg !3092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #0 !dbg !3093 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #22, !dbg !3094
  ret void, !dbg !3095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #0 !dbg !3096 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #22, !dbg !3097
  ret void, !dbg !3098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_ConfDirection(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !3099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3103, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.value(metadata i8 %1, metadata !3104, metadata !DIExpression()), !dbg !3108
  %3 = lshr i32 %0, 5, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %3, metadata !3105, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3108
  %4 = trunc i32 %0 to i16, !dbg !3110
  %5 = and i16 %4, 31, !dbg !3110
  call void @llvm.dbg.value(metadata i16 %4, metadata !3107, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3108
  %6 = trunc i32 %3 to i16, !dbg !3111
  switch i16 %6, label %97 [
    i16 0, label %7
    i16 1, label %70
  ], !dbg !3111

7:                                                ; preds = %2
  %8 = icmp eq i8 %1, 1, !dbg !3112
  %9 = zext i16 %5 to i32, !dbg !3115
  %10 = icmp ult i16 %5, 27, !dbg !3115
  br i1 %8, label %11, label %46, !dbg !3116

11:                                               ; preds = %7
  br i1 %10, label %12, label %17, !dbg !3117

12:                                               ; preds = %11
  %13 = shl nuw i32 1, %9, !dbg !3119
  %14 = xor i32 %13, -1, !dbg !3122
  %15 = load volatile i32, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !3123
  %16 = and i32 %15, %14, !dbg !3123
  store volatile i32 %16, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !3123
  br label %44, !dbg !3124

17:                                               ; preds = %11
  %18 = trunc i32 %0 to i5, !dbg !3125
  switch i5 %18, label %39 [
    i5 -5, label %19
    i5 -4, label %24
    i5 -3, label %29
    i5 -2, label %34
  ], !dbg !3125

19:                                               ; preds = %17
  %20 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3126
  %21 = and i32 %20, -3, !dbg !3126
  store volatile i32 %21, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3126
  %22 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3129
  %23 = or i32 %22, 2048, !dbg !3129
  store volatile i32 %23, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3129
  br label %44, !dbg !3130

24:                                               ; preds = %17
  %25 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3131
  %26 = and i32 %25, -3, !dbg !3131
  store volatile i32 %26, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3131
  %27 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3134
  %28 = or i32 %27, 2048, !dbg !3134
  store volatile i32 %28, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3134
  br label %44, !dbg !3135

29:                                               ; preds = %17
  %30 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3136
  %31 = and i32 %30, -3, !dbg !3136
  store volatile i32 %31, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3136
  %32 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3139
  %33 = or i32 %32, 2048, !dbg !3139
  store volatile i32 %33, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3139
  br label %44, !dbg !3140

34:                                               ; preds = %17
  %35 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3141
  %36 = and i32 %35, -3, !dbg !3141
  store volatile i32 %36, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3141
  %37 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3144
  %38 = or i32 %37, 2048, !dbg !3144
  store volatile i32 %38, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3144
  br label %44, !dbg !3145

39:                                               ; preds = %17
  %40 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3146
  %41 = and i32 %40, -3, !dbg !3146
  store volatile i32 %41, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3146
  %42 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3149
  %43 = or i32 %42, 2048, !dbg !3149
  store volatile i32 %43, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3149
  br label %44, !dbg !3150

44:                                               ; preds = %19, %29, %39, %34, %24, %12
  %45 = shl nuw i32 1, %9, !dbg !3151
  store volatile i32 %45, i32* inttoptr (i32 -2097106796 to i32*), align 4, !dbg !3151
  br label %97, !dbg !3152

46:                                               ; preds = %7
  br i1 %10, label %47, label %51, !dbg !3153

47:                                               ; preds = %46
  %48 = shl nuw i32 1, %9, !dbg !3155
  %49 = load volatile i32, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !3158
  %50 = or i32 %49, %48, !dbg !3158
  store volatile i32 %50, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !3158
  br label %68, !dbg !3159

51:                                               ; preds = %46
  %52 = trunc i32 %0 to i5, !dbg !3160
  switch i5 %52, label %65 [
    i5 -5, label %53
    i5 -4, label %56
    i5 -3, label %59
    i5 -2, label %62
  ], !dbg !3160

53:                                               ; preds = %51
  %54 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3161
  %55 = or i32 %54, 2050, !dbg !3161
  store volatile i32 %55, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3161
  br label %68, !dbg !3164

56:                                               ; preds = %51
  %57 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3165
  %58 = or i32 %57, 2050, !dbg !3165
  store volatile i32 %58, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3165
  br label %68, !dbg !3168

59:                                               ; preds = %51
  %60 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3169
  %61 = or i32 %60, 2050, !dbg !3169
  store volatile i32 %61, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3169
  br label %68, !dbg !3172

62:                                               ; preds = %51
  %63 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3173
  %64 = or i32 %63, 2050, !dbg !3173
  store volatile i32 %64, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3173
  br label %68, !dbg !3176

65:                                               ; preds = %51
  %66 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3177
  %67 = or i32 %66, 2050, !dbg !3177
  store volatile i32 %67, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3177
  br label %68, !dbg !3180

68:                                               ; preds = %53, %59, %65, %62, %56, %47
  %69 = shl nuw i32 1, %9, !dbg !3181
  store volatile i32 %69, i32* inttoptr (i32 -2097106792 to i32*), align 8, !dbg !3181
  br label %97

70:                                               ; preds = %2
  %71 = icmp eq i8 %1, 1, !dbg !3182
  %72 = zext i16 %5 to i32, !dbg !3184
  %73 = icmp eq i16 %5, 0, !dbg !3184
  br i1 %71, label %74, label %87, !dbg !3185

74:                                               ; preds = %70
  br i1 %73, label %80, label %75, !dbg !3186

75:                                               ; preds = %74
  %76 = shl nuw i32 1, %72, !dbg !3188
  %77 = xor i32 %76, -1, !dbg !3191
  %78 = load volatile i32, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !3192
  %79 = and i32 %78, %77, !dbg !3192
  store volatile i32 %79, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !3192
  br label %85, !dbg !3193

80:                                               ; preds = %74
  %81 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3194
  %82 = and i32 %81, -3, !dbg !3194
  store volatile i32 %82, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3194
  %83 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3196
  %84 = or i32 %83, 2048, !dbg !3196
  store volatile i32 %84, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3196
  br label %85

85:                                               ; preds = %80, %75
  %86 = phi i32 [ 1, %80 ], [ %76, %75 ], !dbg !3197
  store volatile i32 %86, i32* inttoptr (i32 -2097106780 to i32*), align 4, !dbg !3197
  br label %97, !dbg !3198

87:                                               ; preds = %70
  br i1 %73, label %92, label %88, !dbg !3199

88:                                               ; preds = %87
  %89 = shl nuw i32 1, %72, !dbg !3201
  %90 = load volatile i32, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !3204
  %91 = or i32 %90, %89, !dbg !3204
  store volatile i32 %91, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !3204
  br label %95, !dbg !3205

92:                                               ; preds = %87
  %93 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3206
  %94 = or i32 %93, 2050, !dbg !3206
  store volatile i32 %94, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3206
  br label %95

95:                                               ; preds = %92, %88
  %96 = phi i32 [ 1, %92 ], [ %89, %88 ], !dbg !3208
  store volatile i32 %96, i32* inttoptr (i32 -2097106776 to i32*), align 8, !dbg !3208
  br label %97

97:                                               ; preds = %68, %44, %95, %85, %2
  %98 = phi i32 [ -1, %2 ], [ 0, %85 ], [ 0, %95 ], [ 0, %44 ], [ 0, %68 ], !dbg !3108
  ret i32 %98, !dbg !3209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPO_Write(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !3210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3212, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata i8 %1, metadata !3213, metadata !DIExpression()), !dbg !3216
  %3 = lshr i32 %0, 5, !dbg !3217
  call void @llvm.dbg.value(metadata i32 %3, metadata !3214, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3216
  %4 = trunc i32 %0 to i16, !dbg !3218
  %5 = and i16 %4, 31, !dbg !3218
  call void @llvm.dbg.value(metadata i16 %5, metadata !3215, metadata !DIExpression()), !dbg !3216
  %6 = trunc i32 %3 to i16, !dbg !3219
  switch i16 %6, label %19 [
    i16 0, label %7
    i16 1, label %13
  ], !dbg !3219

7:                                                ; preds = %2
  %8 = icmp eq i8 %1, 0, !dbg !3220
  %9 = zext i16 %5 to i32, !dbg !3223
  %10 = shl nuw i32 1, %9, !dbg !3223
  br i1 %8, label %12, label %11, !dbg !3224

11:                                               ; preds = %7
  store volatile i32 %10, i32* inttoptr (i32 -2097106844 to i32*), align 4, !dbg !3225
  br label %19, !dbg !3227

12:                                               ; preds = %7
  store volatile i32 %10, i32* inttoptr (i32 -2097106840 to i32*), align 8, !dbg !3228
  br label %19

13:                                               ; preds = %2
  %14 = icmp eq i8 %1, 0, !dbg !3230
  %15 = zext i16 %5 to i32, !dbg !3232
  %16 = shl nuw i32 1, %15, !dbg !3232
  br i1 %14, label %18, label %17, !dbg !3233

17:                                               ; preds = %13
  store volatile i32 %16, i32* inttoptr (i32 -2097106828 to i32*), align 4, !dbg !3234
  br label %19, !dbg !3236

18:                                               ; preds = %13
  store volatile i32 %16, i32* inttoptr (i32 -2097106824 to i32*), align 8, !dbg !3237
  br label %19

19:                                               ; preds = %12, %11, %18, %17, %2
  %20 = phi i32 [ -1, %2 ], [ 0, %17 ], [ 0, %18 ], [ 0, %11 ], [ 0, %12 ], !dbg !3216
  ret i32 %20, !dbg !3239
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_DOUT(i32 noundef %0) local_unnamed_addr #7 !dbg !3240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3244, metadata !DIExpression()), !dbg !3248
  %2 = lshr i32 %0, 5, !dbg !3249
  call void @llvm.dbg.value(metadata i32 %2, metadata !3245, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3248
  %3 = and i32 %0, 31, !dbg !3250
  call void @llvm.dbg.value(metadata i32 %0, metadata !3246, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3248
  call void @llvm.dbg.value(metadata i8 0, metadata !3247, metadata !DIExpression()), !dbg !3248
  %4 = trunc i32 %2 to i16, !dbg !3251
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !3251

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !3247, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !3248
  br label %6, !dbg !3252

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106832 to i32*), %5 ], [ inttoptr (i32 -2097106848 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 16, !dbg !3254
  %9 = lshr i32 %8, %3, !dbg !3254
  %10 = trunc i32 %9 to i8, !dbg !3254
  %11 = and i8 %10, 1, !dbg !3254
  call void @llvm.dbg.value(metadata i8 %11, metadata !3247, metadata !DIExpression()), !dbg !3248
  br label %12, !dbg !3255

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !3248
  ret i8 %13, !dbg !3256
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_DIN(i32 noundef %0) local_unnamed_addr #7 !dbg !3257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3259, metadata !DIExpression()), !dbg !3263
  %2 = lshr i32 %0, 5, !dbg !3264
  call void @llvm.dbg.value(metadata i32 %2, metadata !3260, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3263
  %3 = and i32 %0, 31, !dbg !3265
  call void @llvm.dbg.value(metadata i32 %0, metadata !3261, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3263
  call void @llvm.dbg.value(metadata i8 0, metadata !3262, metadata !DIExpression()), !dbg !3263
  %4 = trunc i32 %2 to i16, !dbg !3266
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !3266

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !3262, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !3263
  br label %6, !dbg !3267

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106748 to i32*), %5 ], [ inttoptr (i32 -2097106752 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 4, !dbg !3269
  %9 = lshr i32 %8, %3, !dbg !3269
  %10 = trunc i32 %9 to i8, !dbg !3269
  %11 = and i8 %10, 1, !dbg !3269
  call void @llvm.dbg.value(metadata i8 %11, metadata !3262, metadata !DIExpression()), !dbg !3263
  br label %12, !dbg !3270

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !3263
  ret i8 %13, !dbg !3271
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_OutEnable(i32 noundef %0) local_unnamed_addr #7 !dbg !3272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3274, metadata !DIExpression()), !dbg !3278
  %2 = lshr i32 %0, 5, !dbg !3279
  call void @llvm.dbg.value(metadata i32 %2, metadata !3275, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3278
  %3 = and i32 %0, 31, !dbg !3280
  call void @llvm.dbg.value(metadata i32 %0, metadata !3276, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3278
  call void @llvm.dbg.value(metadata i8 0, metadata !3277, metadata !DIExpression()), !dbg !3278
  %4 = trunc i32 %2 to i16, !dbg !3281
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !3281

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !3277, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !3278
  br label %6, !dbg !3282

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106784 to i32*), %5 ], [ inttoptr (i32 -2097106800 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 16, !dbg !3284
  %9 = lshr i32 %8, %3, !dbg !3284
  %10 = trunc i32 %9 to i8, !dbg !3284
  %11 = and i8 %10, 1, !dbg !3284
  call void @llvm.dbg.value(metadata i8 %11, metadata !3277, metadata !DIExpression()), !dbg !3278
  br label %12, !dbg !3285

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !3278
  ret i8 %13, !dbg !3286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullUp_SET(i32 noundef %0) local_unnamed_addr #5 !dbg !3287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3291, metadata !DIExpression()), !dbg !3294
  %2 = lshr i32 %0, 5, !dbg !3295
  call void @llvm.dbg.value(metadata i32 %2, metadata !3292, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3294
  %3 = trunc i32 %0 to i16, !dbg !3296
  %4 = and i16 %3, 31, !dbg !3296
  call void @llvm.dbg.value(metadata i16 %3, metadata !3293, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3294
  %5 = tail call i32 @halGPIO_PullDown_RESET(i32 noundef %0) #22, !dbg !3297
  %6 = trunc i32 %2 to i16, !dbg !3298
  switch i16 %6, label %49 [
    i16 0, label %7
    i16 1, label %39
  ], !dbg !3298

7:                                                ; preds = %1
  %8 = icmp ult i16 %4, 27, !dbg !3299
  br i1 %8, label %9, label %12, !dbg !3302

9:                                                ; preds = %7
  %10 = zext i16 %4 to i32, !dbg !3303
  %11 = shl nuw nsw i32 1, %10, !dbg !3304
  store volatile i32 %11, i32* inttoptr (i32 -2097106940 to i32*), align 4, !dbg !3304
  br label %49, !dbg !3306

12:                                               ; preds = %7
  %13 = trunc i32 %0 to i5, !dbg !3307
  switch i5 %13, label %34 [
    i5 -5, label %14
    i5 -4, label %19
    i5 -3, label %24
    i5 -2, label %29
  ], !dbg !3307

14:                                               ; preds = %12
  %15 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3308
  %16 = and i32 %15, -29, !dbg !3308
  store volatile i32 %16, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3308
  %17 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3311
  %18 = or i32 %17, 2052, !dbg !3311
  store volatile i32 %18, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3311
  br label %49, !dbg !3312

19:                                               ; preds = %12
  %20 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3313
  %21 = and i32 %20, -29, !dbg !3313
  store volatile i32 %21, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3313
  %22 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3316
  %23 = or i32 %22, 2052, !dbg !3316
  store volatile i32 %23, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3316
  br label %49, !dbg !3317

24:                                               ; preds = %12
  %25 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3318
  %26 = and i32 %25, -29, !dbg !3318
  store volatile i32 %26, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3318
  %27 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3321
  %28 = or i32 %27, 2052, !dbg !3321
  store volatile i32 %28, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3321
  br label %49, !dbg !3322

29:                                               ; preds = %12
  %30 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3323
  %31 = and i32 %30, -29, !dbg !3323
  store volatile i32 %31, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3323
  %32 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3326
  %33 = or i32 %32, 2052, !dbg !3326
  store volatile i32 %33, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3326
  br label %49, !dbg !3327

34:                                               ; preds = %12
  %35 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3328
  %36 = and i32 %35, -29, !dbg !3328
  store volatile i32 %36, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3328
  %37 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3331
  %38 = or i32 %37, 2052, !dbg !3331
  store volatile i32 %38, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3331
  br label %49, !dbg !3332

39:                                               ; preds = %1
  %40 = icmp eq i16 %4, 0, !dbg !3333
  br i1 %40, label %41, label %46, !dbg !3335

41:                                               ; preds = %39
  %42 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3336
  %43 = and i32 %42, -29, !dbg !3336
  store volatile i32 %43, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3336
  %44 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3338
  %45 = or i32 %44, 2052, !dbg !3338
  store volatile i32 %45, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3338
  br label %49, !dbg !3339

46:                                               ; preds = %39
  %47 = zext i16 %4 to i32, !dbg !3340
  %48 = shl nuw i32 1, %47, !dbg !3340
  store volatile i32 %48, i32* inttoptr (i32 -2097106924 to i32*), align 4, !dbg !3340
  br label %49

49:                                               ; preds = %14, %24, %34, %29, %19, %9, %46, %41, %1
  %50 = phi i32 [ -1, %1 ], [ 0, %41 ], [ 0, %46 ], [ 0, %9 ], [ 0, %19 ], [ 0, %29 ], [ 0, %34 ], [ 0, %24 ], [ 0, %14 ], !dbg !3294
  ret i32 %50, !dbg !3342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullDown_RESET(i32 noundef %0) local_unnamed_addr #5 !dbg !3343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3345, metadata !DIExpression()), !dbg !3348
  %2 = lshr i32 %0, 5, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %2, metadata !3346, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3348
  %3 = trunc i32 %0 to i16, !dbg !3350
  %4 = and i16 %3, 31, !dbg !3350
  call void @llvm.dbg.value(metadata i16 %3, metadata !3347, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3348
  %5 = trunc i32 %2 to i16, !dbg !3351
  switch i16 %5, label %48 [
    i16 0, label %6
    i16 1, label %38
  ], !dbg !3351

6:                                                ; preds = %1
  %7 = icmp ult i16 %4, 27, !dbg !3352
  br i1 %7, label %8, label %11, !dbg !3355

8:                                                ; preds = %6
  %9 = zext i16 %4 to i32, !dbg !3356
  %10 = shl nuw nsw i32 1, %9, !dbg !3357
  store volatile i32 %10, i32* inttoptr (i32 -2097106888 to i32*), align 8, !dbg !3357
  br label %48, !dbg !3359

11:                                               ; preds = %6
  %12 = trunc i32 %0 to i5, !dbg !3360
  switch i5 %12, label %33 [
    i5 -5, label %13
    i5 -4, label %18
    i5 -3, label %23
    i5 -2, label %28
  ], !dbg !3360

13:                                               ; preds = %11
  %14 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3361
  %15 = and i32 %14, -29, !dbg !3361
  store volatile i32 %15, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3361
  %16 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3364
  %17 = or i32 %16, 2048, !dbg !3364
  store volatile i32 %17, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3364
  br label %48, !dbg !3365

18:                                               ; preds = %11
  %19 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3366
  %20 = and i32 %19, -29, !dbg !3366
  store volatile i32 %20, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3366
  %21 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3369
  %22 = or i32 %21, 2048, !dbg !3369
  store volatile i32 %22, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3369
  br label %48, !dbg !3370

23:                                               ; preds = %11
  %24 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3371
  %25 = and i32 %24, -29, !dbg !3371
  store volatile i32 %25, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3371
  %26 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3374
  %27 = or i32 %26, 2048, !dbg !3374
  store volatile i32 %27, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3374
  br label %48, !dbg !3375

28:                                               ; preds = %11
  %29 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3376
  %30 = and i32 %29, -29, !dbg !3376
  store volatile i32 %30, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3376
  %31 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3379
  %32 = or i32 %31, 2048, !dbg !3379
  store volatile i32 %32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3379
  br label %48, !dbg !3380

33:                                               ; preds = %11
  %34 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3381
  %35 = and i32 %34, -29, !dbg !3381
  store volatile i32 %35, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3381
  %36 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3384
  %37 = or i32 %36, 2048, !dbg !3384
  store volatile i32 %37, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3384
  br label %48, !dbg !3385

38:                                               ; preds = %1
  %39 = icmp eq i16 %4, 0, !dbg !3386
  br i1 %39, label %40, label %45, !dbg !3388

40:                                               ; preds = %38
  %41 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3389
  %42 = and i32 %41, -29, !dbg !3389
  store volatile i32 %42, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3389
  %43 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3391
  %44 = or i32 %43, 2048, !dbg !3391
  store volatile i32 %44, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3391
  br label %48, !dbg !3392

45:                                               ; preds = %38
  %46 = zext i16 %4 to i32, !dbg !3393
  %47 = shl nuw i32 1, %46, !dbg !3393
  store volatile i32 %47, i32* inttoptr (i32 -2097106872 to i32*), align 8, !dbg !3393
  br label %48

48:                                               ; preds = %13, %23, %33, %28, %18, %8, %45, %40, %1
  %49 = phi i32 [ -1, %1 ], [ 0, %40 ], [ 0, %45 ], [ 0, %8 ], [ 0, %18 ], [ 0, %28 ], [ 0, %33 ], [ 0, %23 ], [ 0, %13 ], !dbg !3348
  ret i32 %49, !dbg !3395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullUp_RESET(i32 noundef %0) local_unnamed_addr #5 !dbg !3396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3398, metadata !DIExpression()), !dbg !3401
  %2 = lshr i32 %0, 5, !dbg !3402
  call void @llvm.dbg.value(metadata i32 %2, metadata !3399, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3401
  %3 = trunc i32 %0 to i16, !dbg !3403
  %4 = and i16 %3, 31, !dbg !3403
  call void @llvm.dbg.value(metadata i16 %3, metadata !3400, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3401
  %5 = trunc i32 %2 to i16, !dbg !3404
  switch i16 %5, label %48 [
    i16 0, label %6
    i16 1, label %38
  ], !dbg !3404

6:                                                ; preds = %1
  %7 = icmp ult i16 %4, 27, !dbg !3405
  br i1 %7, label %8, label %11, !dbg !3408

8:                                                ; preds = %6
  %9 = zext i16 %4 to i32, !dbg !3409
  %10 = shl nuw nsw i32 1, %9, !dbg !3410
  store volatile i32 %10, i32* inttoptr (i32 -2097106936 to i32*), align 8, !dbg !3410
  br label %48, !dbg !3412

11:                                               ; preds = %6
  %12 = trunc i32 %0 to i5, !dbg !3413
  switch i5 %12, label %33 [
    i5 -5, label %13
    i5 -4, label %18
    i5 -3, label %23
    i5 -2, label %28
  ], !dbg !3413

13:                                               ; preds = %11
  %14 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3414
  %15 = and i32 %14, -29, !dbg !3414
  store volatile i32 %15, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3414
  %16 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3417
  %17 = or i32 %16, 2048, !dbg !3417
  store volatile i32 %17, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3417
  br label %48, !dbg !3418

18:                                               ; preds = %11
  %19 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3419
  %20 = and i32 %19, -29, !dbg !3419
  store volatile i32 %20, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3419
  %21 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3422
  %22 = or i32 %21, 2048, !dbg !3422
  store volatile i32 %22, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3422
  br label %48, !dbg !3423

23:                                               ; preds = %11
  %24 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3424
  %25 = and i32 %24, -29, !dbg !3424
  store volatile i32 %25, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3424
  %26 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3427
  %27 = or i32 %26, 2048, !dbg !3427
  store volatile i32 %27, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3427
  br label %48, !dbg !3428

28:                                               ; preds = %11
  %29 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3429
  %30 = and i32 %29, -29, !dbg !3429
  store volatile i32 %30, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3429
  %31 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3432
  %32 = or i32 %31, 2048, !dbg !3432
  store volatile i32 %32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3432
  br label %48, !dbg !3433

33:                                               ; preds = %11
  %34 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3434
  %35 = and i32 %34, -29, !dbg !3434
  store volatile i32 %35, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3434
  %36 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3437
  %37 = or i32 %36, 2048, !dbg !3437
  store volatile i32 %37, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3437
  br label %48, !dbg !3438

38:                                               ; preds = %1
  %39 = icmp eq i16 %4, 0, !dbg !3439
  br i1 %39, label %40, label %45, !dbg !3441

40:                                               ; preds = %38
  %41 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3442
  %42 = and i32 %41, -29, !dbg !3442
  store volatile i32 %42, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3442
  %43 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3444
  %44 = or i32 %43, 2048, !dbg !3444
  store volatile i32 %44, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3444
  br label %48, !dbg !3445

45:                                               ; preds = %38
  %46 = zext i16 %4 to i32, !dbg !3446
  %47 = shl nuw i32 1, %46, !dbg !3446
  store volatile i32 %47, i32* inttoptr (i32 -2097106920 to i32*), align 8, !dbg !3446
  br label %48

48:                                               ; preds = %13, %23, %33, %28, %18, %8, %45, %40, %1
  %49 = phi i32 [ -1, %1 ], [ 0, %40 ], [ 0, %45 ], [ 0, %8 ], [ 0, %18 ], [ 0, %28 ], [ 0, %33 ], [ 0, %23 ], [ 0, %13 ], !dbg !3401
  ret i32 %49, !dbg !3448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullDown_SET(i32 noundef %0) local_unnamed_addr #5 !dbg !3449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3451, metadata !DIExpression()), !dbg !3454
  %2 = lshr i32 %0, 5, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %2, metadata !3452, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3454
  %3 = trunc i32 %0 to i16, !dbg !3456
  %4 = and i16 %3, 31, !dbg !3456
  call void @llvm.dbg.value(metadata i16 %3, metadata !3453, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !3454
  %5 = tail call i32 @halGPIO_PullUp_RESET(i32 noundef %0) #22, !dbg !3457
  %6 = trunc i32 %2 to i16, !dbg !3458
  switch i16 %6, label %49 [
    i16 0, label %7
    i16 1, label %39
  ], !dbg !3458

7:                                                ; preds = %1
  %8 = icmp ult i16 %4, 27, !dbg !3459
  br i1 %8, label %9, label %12, !dbg !3462

9:                                                ; preds = %7
  %10 = zext i16 %4 to i32, !dbg !3463
  %11 = shl nuw nsw i32 1, %10, !dbg !3464
  store volatile i32 %11, i32* inttoptr (i32 -2097106892 to i32*), align 4, !dbg !3464
  br label %49, !dbg !3466

12:                                               ; preds = %7
  %13 = trunc i32 %0 to i5, !dbg !3467
  switch i5 %13, label %34 [
    i5 -5, label %14
    i5 -4, label %19
    i5 -3, label %24
    i5 -2, label %29
  ], !dbg !3467

14:                                               ; preds = %12
  %15 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3468
  %16 = and i32 %15, -29, !dbg !3468
  store volatile i32 %16, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3468
  %17 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3471
  %18 = or i32 %17, 2068, !dbg !3471
  store volatile i32 %18, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3471
  br label %49, !dbg !3472

19:                                               ; preds = %12
  %20 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3473
  %21 = and i32 %20, -29, !dbg !3473
  store volatile i32 %21, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3473
  %22 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3476
  %23 = or i32 %22, 2068, !dbg !3476
  store volatile i32 %23, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3476
  br label %49, !dbg !3477

24:                                               ; preds = %12
  %25 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3478
  %26 = and i32 %25, -29, !dbg !3478
  store volatile i32 %26, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3478
  %27 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3481
  %28 = or i32 %27, 2068, !dbg !3481
  store volatile i32 %28, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3481
  br label %49, !dbg !3482

29:                                               ; preds = %12
  %30 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3483
  %31 = and i32 %30, -29, !dbg !3483
  store volatile i32 %31, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3483
  %32 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3486
  %33 = or i32 %32, 2068, !dbg !3486
  store volatile i32 %33, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3486
  br label %49, !dbg !3487

34:                                               ; preds = %12
  %35 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3488
  %36 = and i32 %35, -29, !dbg !3488
  store volatile i32 %36, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3488
  %37 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3491
  %38 = or i32 %37, 2068, !dbg !3491
  store volatile i32 %38, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3491
  br label %49, !dbg !3492

39:                                               ; preds = %1
  %40 = icmp eq i16 %4, 0, !dbg !3493
  br i1 %40, label %41, label %46, !dbg !3495

41:                                               ; preds = %39
  %42 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3496
  %43 = and i32 %42, -29, !dbg !3496
  store volatile i32 %43, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3496
  %44 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3498
  %45 = or i32 %44, 2068, !dbg !3498
  store volatile i32 %45, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3498
  br label %49, !dbg !3499

46:                                               ; preds = %39
  %47 = zext i16 %4 to i32, !dbg !3500
  %48 = shl nuw i32 1, %47, !dbg !3500
  store volatile i32 %48, i32* inttoptr (i32 -2097106876 to i32*), align 4, !dbg !3500
  br label %49

49:                                               ; preds = %14, %24, %34, %29, %19, %9, %46, %41, %1
  %50 = phi i32 [ -1, %1 ], [ 0, %41 ], [ 0, %46 ], [ 0, %9 ], [ 0, %19 ], [ 0, %29 ], [ 0, %34 ], [ 0, %24 ], [ 0, %14 ], !dbg !3454
  ret i32 %50, !dbg !3502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_SetDriving(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !3503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3505, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8 %1, metadata !3506, metadata !DIExpression()), !dbg !3509
  %3 = lshr i32 %0, 4, !dbg !3510
  call void @llvm.dbg.value(metadata i32 %3, metadata !3507, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3509
  %4 = trunc i32 %0 to i16, !dbg !3511
  %5 = and i16 %4, 15, !dbg !3511
  call void @llvm.dbg.value(metadata i16 %4, metadata !3508, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3509
  %6 = trunc i32 %3 to i16, !dbg !3512
  switch i16 %6, label %131 [
    i16 0, label %7
    i16 1, label %20
    i16 2, label %92
    i16 3, label %118
  ], !dbg !3512

7:                                                ; preds = %2
  %8 = shl nuw nsw i16 %5, 1, !dbg !3513
  %9 = zext i16 %8 to i32, !dbg !3513
  %10 = shl nuw i32 3, %9, !dbg !3515
  %11 = xor i32 %10, -1, !dbg !3516
  %12 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !3517
  %13 = and i32 %12, %11, !dbg !3517
  store volatile i32 %13, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !3517
  %14 = lshr i8 %1, 2, !dbg !3518
  %15 = zext i8 %14 to i32, !dbg !3518
  %16 = add nsw i32 %15, -1, !dbg !3519
  %17 = shl i32 %16, %9, !dbg !3520
  %18 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !3521
  %19 = or i32 %18, %17, !dbg !3521
  store volatile i32 %19, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !3521
  br label %131, !dbg !3522

20:                                               ; preds = %2
  %21 = icmp ult i16 %5, 11, !dbg !3523
  br i1 %21, label %22, label %35, !dbg !3525

22:                                               ; preds = %20
  %23 = shl nuw nsw i16 %5, 1, !dbg !3526
  %24 = zext i16 %23 to i32, !dbg !3526
  %25 = shl nuw nsw i32 3, %24, !dbg !3528
  %26 = xor i32 %25, -1, !dbg !3529
  %27 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !3530
  %28 = and i32 %27, %26, !dbg !3530
  store volatile i32 %28, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !3530
  %29 = lshr i8 %1, 2, !dbg !3531
  %30 = zext i8 %29 to i32, !dbg !3531
  %31 = add nsw i32 %30, -1, !dbg !3532
  %32 = shl nsw i32 %31, %24, !dbg !3533
  %33 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !3534
  %34 = or i32 %33, %32, !dbg !3534
  store volatile i32 %34, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !3534
  br label %131, !dbg !3535

35:                                               ; preds = %20
  %36 = trunc i32 %0 to i4, !dbg !3536
  switch i4 %36, label %81 [
    i4 -5, label %37
    i4 -4, label %48
    i4 -3, label %59
    i4 -2, label %70
  ], !dbg !3536

37:                                               ; preds = %35
  %38 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3537
  %39 = and i32 %38, -449, !dbg !3537
  store volatile i32 %39, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3537
  %40 = lshr i8 %1, 1, !dbg !3540
  %41 = zext i8 %40 to i32, !dbg !3540
  %42 = shl nuw nsw i32 %41, 6, !dbg !3541
  %43 = add nsw i32 %42, -64, !dbg !3541
  %44 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3542
  %45 = or i32 %44, %43, !dbg !3542
  store volatile i32 %45, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3542
  %46 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3543
  %47 = or i32 %46, 2048, !dbg !3543
  store volatile i32 %47, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3543
  br label %131, !dbg !3544

48:                                               ; preds = %35
  %49 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3545
  %50 = and i32 %49, -449, !dbg !3545
  store volatile i32 %50, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3545
  %51 = lshr i8 %1, 1, !dbg !3548
  %52 = zext i8 %51 to i32, !dbg !3548
  %53 = shl nuw nsw i32 %52, 6, !dbg !3549
  %54 = add nsw i32 %53, -64, !dbg !3549
  %55 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3550
  %56 = or i32 %55, %54, !dbg !3550
  store volatile i32 %56, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3550
  %57 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3551
  %58 = or i32 %57, 2048, !dbg !3551
  store volatile i32 %58, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3551
  br label %131, !dbg !3552

59:                                               ; preds = %35
  %60 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3553
  %61 = and i32 %60, -449, !dbg !3553
  store volatile i32 %61, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3553
  %62 = lshr i8 %1, 1, !dbg !3556
  %63 = zext i8 %62 to i32, !dbg !3556
  %64 = shl nuw nsw i32 %63, 6, !dbg !3557
  %65 = add nsw i32 %64, -64, !dbg !3557
  %66 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3558
  %67 = or i32 %66, %65, !dbg !3558
  store volatile i32 %67, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3558
  %68 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3559
  %69 = or i32 %68, 2048, !dbg !3559
  store volatile i32 %69, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3559
  br label %131, !dbg !3560

70:                                               ; preds = %35
  %71 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3561
  %72 = and i32 %71, -449, !dbg !3561
  store volatile i32 %72, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3561
  %73 = lshr i8 %1, 1, !dbg !3564
  %74 = zext i8 %73 to i32, !dbg !3564
  %75 = shl nuw nsw i32 %74, 6, !dbg !3565
  %76 = add nsw i32 %75, -64, !dbg !3565
  %77 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3566
  %78 = or i32 %77, %76, !dbg !3566
  store volatile i32 %78, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3566
  %79 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3567
  %80 = or i32 %79, 2048, !dbg !3567
  store volatile i32 %80, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3567
  br label %131, !dbg !3568

81:                                               ; preds = %35
  %82 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3569
  %83 = and i32 %82, -449, !dbg !3569
  store volatile i32 %83, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3569
  %84 = lshr i8 %1, 1, !dbg !3572
  %85 = zext i8 %84 to i32, !dbg !3572
  %86 = shl nuw nsw i32 %85, 6, !dbg !3573
  %87 = add nsw i32 %86, -64, !dbg !3573
  %88 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3574
  %89 = or i32 %88, %87, !dbg !3574
  store volatile i32 %89, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3574
  %90 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3575
  %91 = or i32 %90, 2048, !dbg !3575
  store volatile i32 %91, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3575
  br label %131, !dbg !3576

92:                                               ; preds = %2
  %93 = icmp eq i16 %5, 0, !dbg !3577
  br i1 %93, label %94, label %105, !dbg !3579

94:                                               ; preds = %92
  %95 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3580
  %96 = and i32 %95, -449, !dbg !3580
  store volatile i32 %96, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3580
  %97 = lshr i8 %1, 1, !dbg !3582
  %98 = zext i8 %97 to i32, !dbg !3582
  %99 = shl nuw nsw i32 %98, 6, !dbg !3583
  %100 = add nsw i32 %99, -64, !dbg !3583
  %101 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3584
  %102 = or i32 %101, %100, !dbg !3584
  store volatile i32 %102, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3584
  %103 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3585
  %104 = or i32 %103, 2048, !dbg !3585
  store volatile i32 %104, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3585
  br label %131, !dbg !3586

105:                                              ; preds = %92
  %106 = shl nuw nsw i16 %5, 1, !dbg !3587
  %107 = zext i16 %106 to i32, !dbg !3587
  %108 = shl nuw i32 3, %107, !dbg !3589
  %109 = xor i32 %108, -1, !dbg !3590
  %110 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !3591
  %111 = and i32 %110, %109, !dbg !3591
  store volatile i32 %111, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !3591
  %112 = lshr i8 %1, 2, !dbg !3592
  %113 = zext i8 %112 to i32, !dbg !3592
  %114 = add nsw i32 %113, -1, !dbg !3593
  %115 = shl i32 %114, %107, !dbg !3594
  %116 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !3595
  %117 = or i32 %116, %115, !dbg !3595
  store volatile i32 %117, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !3595
  br label %131

118:                                              ; preds = %2
  %119 = shl nuw nsw i16 %5, 1, !dbg !3596
  %120 = zext i16 %119 to i32, !dbg !3596
  %121 = shl nuw i32 3, %120, !dbg !3597
  %122 = xor i32 %121, -1, !dbg !3598
  %123 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !3599
  %124 = and i32 %123, %122, !dbg !3599
  store volatile i32 %124, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !3599
  %125 = lshr i8 %1, 2, !dbg !3600
  %126 = zext i8 %125 to i32, !dbg !3600
  %127 = add nsw i32 %126, -1, !dbg !3601
  %128 = shl i32 %127, %120, !dbg !3602
  %129 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !3603
  %130 = or i32 %129, %128, !dbg !3603
  store volatile i32 %130, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !3603
  br label %131, !dbg !3604

131:                                              ; preds = %7, %118, %37, %59, %81, %70, %48, %22, %105, %94, %2
  %132 = phi i32 [ -1, %2 ], [ 0, %94 ], [ 0, %105 ], [ 0, %22 ], [ 0, %48 ], [ 0, %70 ], [ 0, %81 ], [ 0, %59 ], [ 0, %37 ], [ 0, %118 ], [ 0, %7 ], !dbg !3509
  ret i32 %132, !dbg !3605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @halGPIO_GetDriving(i32 noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3611, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i8* %1, metadata !3612, metadata !DIExpression()), !dbg !3616
  %3 = lshr i32 %0, 4, !dbg !3617
  call void @llvm.dbg.value(metadata i32 %3, metadata !3613, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3616
  %4 = trunc i32 %0 to i16, !dbg !3618
  %5 = and i16 %4, 15, !dbg !3618
  call void @llvm.dbg.value(metadata i16 %4, metadata !3614, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3616
  %6 = trunc i32 %3 to i16, !dbg !3619
  switch i16 %6, label %91 [
    i16 0, label %7
    i16 1, label %17
    i16 2, label %61
    i16 3, label %79
  ], !dbg !3619

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !3620
  call void @llvm.dbg.value(metadata i32 %8, metadata !3615, metadata !DIExpression()), !dbg !3616
  %9 = shl nuw nsw i16 %5, 1, !dbg !3622
  %10 = zext i16 %9 to i32, !dbg !3622
  %11 = shl nuw i32 3, %10, !dbg !3623
  %12 = and i32 %8, %11, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %12, metadata !3615, metadata !DIExpression()), !dbg !3616
  %13 = lshr i32 %12, %10, !dbg !3625
  %14 = trunc i32 %13 to i8, !dbg !3626
  %15 = shl i8 %14, 2, !dbg !3626
  %16 = add i8 %15, 4, !dbg !3626
  br label %89, !dbg !3627

17:                                               ; preds = %2
  %18 = icmp ult i16 %5, 11, !dbg !3628
  br i1 %18, label %19, label %29, !dbg !3630

19:                                               ; preds = %17
  %20 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %20, metadata !3615, metadata !DIExpression()), !dbg !3616
  %21 = shl nuw nsw i16 %5, 1, !dbg !3633
  %22 = zext i16 %21 to i32, !dbg !3633
  %23 = shl nuw nsw i32 3, %22, !dbg !3634
  %24 = and i32 %20, %23, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %24, metadata !3615, metadata !DIExpression()), !dbg !3616
  %25 = lshr i32 %24, %22, !dbg !3636
  %26 = trunc i32 %25 to i8, !dbg !3637
  %27 = shl i8 %26, 2, !dbg !3637
  %28 = add i8 %27, 4, !dbg !3637
  br label %89, !dbg !3638

29:                                               ; preds = %17
  %30 = trunc i32 %0 to i4, !dbg !3639
  switch i4 %30, label %55 [
    i4 -5, label %31
    i4 -4, label %37
    i4 -3, label %43
    i4 -2, label %49
  ], !dbg !3639

31:                                               ; preds = %29
  %32 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %32, metadata !3615, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i32 %32, metadata !3615, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !3616
  %33 = lshr i32 %32, 5, !dbg !3643
  %34 = trunc i32 %33 to i8, !dbg !3644
  %35 = and i8 %34, 14, !dbg !3644
  %36 = add nuw nsw i8 %35, 2, !dbg !3644
  br label %89, !dbg !3645

37:                                               ; preds = %29
  %38 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %38, metadata !3615, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i32 %38, metadata !3615, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !3616
  %39 = lshr i32 %38, 5, !dbg !3649
  %40 = trunc i32 %39 to i8, !dbg !3650
  %41 = and i8 %40, 14, !dbg !3650
  %42 = add nuw nsw i8 %41, 2, !dbg !3650
  br label %89, !dbg !3651

43:                                               ; preds = %29
  %44 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %44, metadata !3615, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i32 %44, metadata !3615, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !3616
  %45 = lshr i32 %44, 5, !dbg !3655
  %46 = trunc i32 %45 to i8, !dbg !3656
  %47 = and i8 %46, 14, !dbg !3656
  %48 = add nuw nsw i8 %47, 2, !dbg !3656
  br label %89, !dbg !3657

49:                                               ; preds = %29
  %50 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !3658
  call void @llvm.dbg.value(metadata i32 %50, metadata !3615, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i32 %50, metadata !3615, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !3616
  %51 = lshr i32 %50, 5, !dbg !3661
  %52 = trunc i32 %51 to i8, !dbg !3662
  %53 = and i8 %52, 14, !dbg !3662
  %54 = add nuw nsw i8 %53, 2, !dbg !3662
  br label %89, !dbg !3663

55:                                               ; preds = %29
  %56 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %56, metadata !3615, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i32 %56, metadata !3615, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !3616
  %57 = lshr i32 %56, 5, !dbg !3667
  %58 = trunc i32 %57 to i8, !dbg !3668
  %59 = and i8 %58, 14, !dbg !3668
  %60 = add nuw nsw i8 %59, 2, !dbg !3668
  br label %89, !dbg !3669

61:                                               ; preds = %2
  %62 = icmp eq i16 %5, 0, !dbg !3670
  br i1 %62, label %63, label %69, !dbg !3672

63:                                               ; preds = %61
  %64 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %64, metadata !3615, metadata !DIExpression()), !dbg !3616
  call void @llvm.dbg.value(metadata i32 %64, metadata !3615, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !3616
  %65 = lshr i32 %64, 5, !dbg !3675
  %66 = trunc i32 %65 to i8, !dbg !3676
  %67 = and i8 %66, 14, !dbg !3676
  %68 = add nuw nsw i8 %67, 2, !dbg !3676
  br label %89, !dbg !3677

69:                                               ; preds = %61
  %70 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !3678
  call void @llvm.dbg.value(metadata i32 %70, metadata !3615, metadata !DIExpression()), !dbg !3616
  %71 = shl nuw nsw i16 %5, 1, !dbg !3680
  %72 = zext i16 %71 to i32, !dbg !3680
  %73 = shl nuw i32 3, %72, !dbg !3681
  %74 = and i32 %70, %73, !dbg !3682
  call void @llvm.dbg.value(metadata i32 %74, metadata !3615, metadata !DIExpression()), !dbg !3616
  %75 = lshr i32 %74, %72, !dbg !3683
  %76 = trunc i32 %75 to i8, !dbg !3684
  %77 = shl i8 %76, 2, !dbg !3684
  %78 = add i8 %77, 4, !dbg !3684
  br label %89

79:                                               ; preds = %2
  %80 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %80, metadata !3615, metadata !DIExpression()), !dbg !3616
  %81 = shl nuw nsw i16 %5, 1, !dbg !3686
  %82 = zext i16 %81 to i32, !dbg !3686
  %83 = shl nuw i32 3, %82, !dbg !3687
  %84 = and i32 %80, %83, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %84, metadata !3615, metadata !DIExpression()), !dbg !3616
  %85 = lshr i32 %84, %82, !dbg !3689
  %86 = trunc i32 %85 to i8, !dbg !3690
  %87 = shl i8 %86, 2, !dbg !3690
  %88 = add i8 %87, 4, !dbg !3690
  br label %89, !dbg !3691

89:                                               ; preds = %63, %69, %19, %37, %49, %55, %43, %31, %79, %7
  %90 = phi i8 [ %16, %7 ], [ %88, %79 ], [ %36, %31 ], [ %48, %43 ], [ %60, %55 ], [ %54, %49 ], [ %42, %37 ], [ %28, %19 ], [ %78, %69 ], [ %68, %63 ]
  store i8 %90, i8* %1, align 1, !dbg !3692
  br label %91, !dbg !3693

91:                                               ; preds = %89, %2
  %92 = phi i32 [ -1, %2 ], [ 0, %89 ], !dbg !3616
  ret i32 %92, !dbg !3693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @topPAD_Control_GPIO(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !3694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3699, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32 %1, metadata !3700, metadata !DIExpression()), !dbg !3703
  %3 = lshr i32 %0, 5, !dbg !3704
  call void @llvm.dbg.value(metadata i32 %3, metadata !3701, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3703
  %4 = trunc i32 %0 to i16, !dbg !3705
  %5 = and i16 %4, 31, !dbg !3705
  call void @llvm.dbg.value(metadata i16 %5, metadata !3702, metadata !DIExpression()), !dbg !3703
  switch i32 %1, label %32 [
    i32 1, label %6
    i32 0, label %18
  ], !dbg !3706

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !3701, metadata !DIExpression()), !dbg !3703
  %7 = trunc i32 %3 to i16, !dbg !3707
  switch i16 %7, label %32 [
    i16 0, label %8
    i16 1, label %13
  ], !dbg !3707

8:                                                ; preds = %6
  %9 = zext i16 %5 to i32, !dbg !3710
  %10 = shl nuw i32 1, %9, !dbg !3712
  %11 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !3713
  %12 = or i32 %11, %10, !dbg !3713
  store volatile i32 %12, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !3713
  br label %32, !dbg !3714

13:                                               ; preds = %6
  %14 = zext i16 %5 to i32, !dbg !3715
  %15 = shl nuw i32 1, %14, !dbg !3716
  %16 = load volatile i32, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !3717
  %17 = or i32 %16, %15, !dbg !3717
  store volatile i32 %17, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !3717
  br label %32, !dbg !3718

18:                                               ; preds = %2
  %19 = trunc i32 %3 to i16, !dbg !3719
  switch i16 %19, label %32 [
    i16 0, label %20
    i16 1, label %26
  ], !dbg !3719

20:                                               ; preds = %18
  %21 = zext i16 %5 to i32, !dbg !3722
  %22 = shl nuw i32 1, %21, !dbg !3724
  %23 = xor i32 %22, -1, !dbg !3725
  %24 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !3726
  %25 = and i32 %24, %23, !dbg !3726
  store volatile i32 %25, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !3726
  br label %32, !dbg !3727

26:                                               ; preds = %18
  %27 = zext i16 %5 to i32, !dbg !3728
  %28 = shl nuw i32 1, %27, !dbg !3729
  %29 = xor i32 %28, -1, !dbg !3730
  %30 = load volatile i32, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !3731
  %31 = and i32 %30, %29, !dbg !3731
  store volatile i32 %31, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !3731
  br label %32, !dbg !3732

32:                                               ; preds = %2, %18, %26, %20, %8, %13, %6
  ret void, !dbg !3733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPIO_IDX_EINT_WIC_LISR(i32 noundef %0) #0 !dbg !3734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3736, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata i32 255, metadata !3738, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata i32 0, metadata !3737, metadata !DIExpression()), !dbg !3739
  %2 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !3737, metadata !DIExpression()), !dbg !3739
  %3 = icmp eq i32 %2, 0, !dbg !3740
  br i1 %3, label %21, label %4, !dbg !3743

4:                                                ; preds = %1
  %5 = add i32 %2, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !3737, metadata !DIExpression()), !dbg !3739
  %6 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 2), align 4, !dbg !3744
  %7 = icmp eq i32 %6, %0, !dbg !3747
  br i1 %7, label %8, label %12, !dbg !3748

8:                                                ; preds = %16, %4
  %9 = phi i32 [ 0, %4 ], [ %17, %16 ]
  %10 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %9, i32 1, !dbg !3749
  %11 = load i32, i32* %10, align 4, !dbg !3749
  call void @llvm.dbg.value(metadata i32 %11, metadata !3738, metadata !DIExpression()), !dbg !3739
  br label %21, !dbg !3751

12:                                               ; preds = %4, %16
  %13 = phi i32 [ %17, %16 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !3737, metadata !DIExpression()), !dbg !3739
  %14 = icmp eq i32 %5, %13, !dbg !3752
  br i1 %14, label %15, label %16, !dbg !3754

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.drvGPIO_IDX_EINT_WIC_LISR, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !3755
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1.6, i32 0, i32 0), i32 noundef 579, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.drvGPIO_IDX_EINT_WIC_LISR, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.7, i32 0, i32 0)) #21, !dbg !3757
  unreachable, !dbg !3757

16:                                               ; preds = %12
  %17 = add nuw i32 %13, 1, !dbg !3758
  call void @llvm.dbg.value(metadata i32 %17, metadata !3737, metadata !DIExpression()), !dbg !3739
  %18 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %17, i32 2, !dbg !3744
  %19 = load i32, i32* %18, align 4, !dbg !3744
  %20 = icmp eq i32 %19, %0, !dbg !3747
  br i1 %20, label %8, label %12, !dbg !3748, !llvm.loop !3759

21:                                               ; preds = %1, %8
  %22 = phi i32 [ %11, %8 ], [ 255, %1 ], !dbg !3739
  call void @llvm.dbg.value(metadata i32 %22, metadata !3738, metadata !DIExpression()), !dbg !3739
  %23 = load void (i32)*, void (i32)** @LISR.0, align 4, !dbg !3761
  tail call void %23(i32 noundef %22) #20, !dbg !3762
  ret void, !dbg !3763
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halRegGPInterrupt(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3, i8 noundef zeroext %4, i8 noundef zeroext %5, i8 noundef zeroext %6, void (i32)* noundef %7) local_unnamed_addr #0 !dbg !3764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3768, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %1, metadata !3769, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %2, metadata !3770, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %3, metadata !3771, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %4, metadata !3772, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %5, metadata !3773, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8 %6, metadata !3774, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata void (i32)* %7, metadata !3775, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 255, metadata !3777, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 255, metadata !3778, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 0, metadata !3780, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 0, metadata !3781, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3784
  %9 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3784
  %10 = icmp eq i32 %9, 0, !dbg !3785
  br i1 %10, label %30, label %11, !dbg !3788

11:                                               ; preds = %8
  %12 = add i32 %9, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3784
  %13 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 1), align 4, !dbg !3789
  %14 = icmp eq i32 %13, %0, !dbg !3792
  br i1 %14, label %15, label %21, !dbg !3793

15:                                               ; preds = %25, %11
  %16 = phi i32 [ 0, %11 ], [ %26, %25 ]
  %17 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %16, i32 2, !dbg !3794
  %18 = load i32, i32* %17, align 4, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %18, metadata !3777, metadata !DIExpression()), !dbg !3784
  %19 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %16, i32 3, !dbg !3796
  %20 = load i32, i32* %19, align 4, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %20, metadata !3778, metadata !DIExpression()), !dbg !3784
  br label %30, !dbg !3797

21:                                               ; preds = %11, %25
  %22 = phi i32 [ %26, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !3776, metadata !DIExpression()), !dbg !3784
  %23 = icmp eq i32 %12, %22, !dbg !3798
  br i1 %23, label %24, label %25, !dbg !3800

24:                                               ; preds = %21
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.halRegGPInterrupt, i32 0, i32 0), i32 noundef 612, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3.8, i32 0, i32 0), i32 noundef %0) #20, !dbg !3801
  br label %60, !dbg !3803

25:                                               ; preds = %21
  %26 = add nuw i32 %22, 1, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %26, metadata !3776, metadata !DIExpression()), !dbg !3784
  %27 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %26, i32 1, !dbg !3789
  %28 = load i32, i32* %27, align 4, !dbg !3789
  %29 = icmp eq i32 %28, %0, !dbg !3792
  br i1 %29, label %15, label %21, !dbg !3793, !llvm.loop !3805

30:                                               ; preds = %8, %15
  %31 = phi i32 [ %20, %15 ], [ 255, %8 ], !dbg !3784
  %32 = phi i32 [ %18, %15 ], [ 255, %8 ], !dbg !3784
  call void @llvm.dbg.value(metadata i32 %32, metadata !3777, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 %31, metadata !3778, metadata !DIExpression()), !dbg !3784
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %32) #22, !dbg !3807
  tail call void @halPinmuxTopOnPadFunc(i32 noundef %0, i8 noundef zeroext 3) #20, !dbg !3808
  %33 = lshr i32 %32, 5, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %33, metadata !3782, metadata !DIExpression()), !dbg !3784
  %34 = and i32 %32, 31, !dbg !3810
  call void @llvm.dbg.value(metadata i32 %34, metadata !3783, metadata !DIExpression()), !dbg !3784
  %35 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 -2097102336 to [4 x i32]*), i32 0, i32 %33, !dbg !3811
  %36 = load volatile i32, i32* %35, align 4, !dbg !3811
  call void @llvm.dbg.value(metadata i32 %36, metadata !3781, metadata !DIExpression()), !dbg !3784
  %37 = shl nuw i32 1, %34, !dbg !3812
  %38 = xor i32 %37, -1, !dbg !3813
  %39 = and i32 %36, %38, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %39, metadata !3781, metadata !DIExpression()), !dbg !3784
  %40 = zext i8 %1 to i32, !dbg !3815
  %41 = shl i32 %40, %34, !dbg !3816
  %42 = or i32 %39, %41, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %42, metadata !3781, metadata !DIExpression()), !dbg !3784
  store volatile i32 %42, i32* %35, align 4, !dbg !3818
  %43 = add i32 %32, -30, !dbg !3819
  call void @llvm.dbg.value(metadata i32 %43, metadata !3779, metadata !DIExpression()), !dbg !3784
  %44 = zext i8 %6 to i32, !dbg !3820
  %45 = zext i8 %5 to i32, !dbg !3821
  %46 = shl nuw nsw i32 %45, 4, !dbg !3822
  %47 = zext i8 %4 to i32, !dbg !3823
  %48 = shl nuw nsw i32 %47, 7, !dbg !3824
  %49 = zext i8 %3 to i32, !dbg !3825
  %50 = shl nuw nsw i32 %49, 8, !dbg !3826
  %51 = zext i8 %2 to i32, !dbg !3827
  %52 = shl nuw nsw i32 %51, 9, !dbg !3828
  %53 = add nuw nsw i32 %50, %52, !dbg !3829
  %54 = add nuw nsw i32 %53, %48, !dbg !3830
  %55 = add nuw nsw i32 %54, %44, !dbg !3831
  %56 = add nuw nsw i32 %55, %46, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %56, metadata !3780, metadata !DIExpression()), !dbg !3784
  %57 = getelementptr inbounds [66 x i32], [66 x i32]* inttoptr (i32 -2097102848 to [66 x i32]*), i32 0, i32 %43, !dbg !3833
  store volatile i32 %56, i32* %57, align 4, !dbg !3834
  %58 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !3835
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %32) #22, !dbg !3836
  store void (i32)* %7, void (i32)** @LISR.0, align 4, !dbg !3837
  %59 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @drvGPIO_IDX_EINT_WIC_LISR) #20, !dbg !3838
  tail call fastcc void @NVIC_SetPriority(i32 noundef %32, i32 noundef %31) #22, !dbg !3839
  br label %60, !dbg !3840

60:                                               ; preds = %30, %24
  %61 = phi i32 [ 0, %30 ], [ -1, %24 ], !dbg !3784
  ret i32 %61, !dbg !3841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !3842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3846, metadata !DIExpression()), !dbg !3847
  %2 = and i32 %0, 31, !dbg !3848
  %3 = shl nuw i32 1, %2, !dbg !3849
  %4 = lshr i32 %0, 5, !dbg !3850
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !3851
  store volatile i32 %3, i32* %5, align 4, !dbg !3852
  ret void, !dbg !3853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !3854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3856, metadata !DIExpression()), !dbg !3857
  %2 = and i32 %0, 31, !dbg !3858
  %3 = shl nuw i32 1, %2, !dbg !3859
  %4 = lshr i32 %0, 5, !dbg !3860
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !3861
  store volatile i32 %3, i32* %5, align 4, !dbg !3862
  ret void, !dbg !3863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3868, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.value(metadata i32 %1, metadata !3869, metadata !DIExpression()), !dbg !3870
  %3 = icmp slt i32 %0, 0, !dbg !3871
  %4 = trunc i32 %1 to i8, !dbg !3873
  %5 = shl i8 %4, 5, !dbg !3873
  %6 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !3874
  %7 = and i32 %0, 15, !dbg !3874
  %8 = add nsw i32 %7, -4, !dbg !3874
  %9 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %8, !dbg !3874
  %10 = select i1 %3, i8* %9, i8* %6, !dbg !3874
  store volatile i8 %5, i8* %10, align 1, !dbg !3873
  ret void, !dbg !3875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halRegGPInterrupt_set_triggermode(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !3876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3880, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i8 %1, metadata !3881, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i8 %2, metadata !3882, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i8 %3, metadata !3883, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i32 255, metadata !3885, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.value(metadata i32 0, metadata !3884, metadata !DIExpression()), !dbg !3891
  %5 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !3884, metadata !DIExpression()), !dbg !3891
  %6 = icmp eq i32 %5, 0, !dbg !3892
  br i1 %6, label %24, label %7, !dbg !3895

7:                                                ; preds = %4
  %8 = add i32 %5, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !3884, metadata !DIExpression()), !dbg !3891
  %9 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 1), align 4, !dbg !3896
  %10 = icmp eq i32 %9, %0, !dbg !3899
  br i1 %10, label %11, label %15, !dbg !3900

11:                                               ; preds = %19, %7
  %12 = phi i32 [ 0, %7 ], [ %20, %19 ]
  %13 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %12, i32 2, !dbg !3901
  %14 = load i32, i32* %13, align 4, !dbg !3901
  call void @llvm.dbg.value(metadata i32 %14, metadata !3885, metadata !DIExpression()), !dbg !3891
  br label %24, !dbg !3903

15:                                               ; preds = %7, %19
  %16 = phi i32 [ %20, %19 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3884, metadata !DIExpression()), !dbg !3891
  %17 = icmp eq i32 %8, %16, !dbg !3904
  br i1 %17, label %18, label %19, !dbg !3906

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__FUNCTION__.halRegGPInterrupt_set_triggermode, i32 0, i32 0), i32 noundef 668, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i32 0, i32 0), i32 noundef %0) #20, !dbg !3907
  br label %44, !dbg !3909

19:                                               ; preds = %15
  %20 = add nuw i32 %16, 1, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %20, metadata !3884, metadata !DIExpression()), !dbg !3891
  %21 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %20, i32 1, !dbg !3896
  %22 = load i32, i32* %21, align 4, !dbg !3896
  %23 = icmp eq i32 %22, %0, !dbg !3899
  br i1 %23, label %11, label %15, !dbg !3900, !llvm.loop !3911

24:                                               ; preds = %4, %11
  %25 = phi i32 [ %14, %11 ], [ 255, %4 ], !dbg !3891
  call void @llvm.dbg.value(metadata i32 %25, metadata !3885, metadata !DIExpression()), !dbg !3891
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %25) #22, !dbg !3913
  %26 = lshr i32 %25, 5, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %26, metadata !3889, metadata !DIExpression()), !dbg !3891
  %27 = and i32 %25, 31, !dbg !3915
  call void @llvm.dbg.value(metadata i32 %27, metadata !3890, metadata !DIExpression()), !dbg !3891
  %28 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 -2097102336 to [4 x i32]*), i32 0, i32 %26, !dbg !3916
  %29 = load volatile i32, i32* %28, align 4, !dbg !3916
  call void @llvm.dbg.value(metadata i32 %29, metadata !3888, metadata !DIExpression()), !dbg !3891
  %30 = shl nuw i32 1, %27, !dbg !3917
  %31 = xor i32 %30, -1, !dbg !3918
  %32 = and i32 %29, %31, !dbg !3919
  call void @llvm.dbg.value(metadata i32 %32, metadata !3888, metadata !DIExpression()), !dbg !3891
  %33 = zext i8 %1 to i32, !dbg !3920
  %34 = shl i32 %33, %27, !dbg !3921
  %35 = or i32 %32, %34, !dbg !3922
  call void @llvm.dbg.value(metadata i32 %35, metadata !3888, metadata !DIExpression()), !dbg !3891
  store volatile i32 %35, i32* %28, align 4, !dbg !3923
  %36 = zext i8 %3 to i32, !dbg !3924
  %37 = shl nuw nsw i32 %36, 7, !dbg !3925
  %38 = zext i8 %2 to i32, !dbg !3926
  %39 = shl nuw nsw i32 %38, 8, !dbg !3927
  %40 = add nuw nsw i32 %37, %39, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %40, metadata !3887, metadata !DIExpression()), !dbg !3891
  %41 = add i32 %25, -30, !dbg !3929
  call void @llvm.dbg.value(metadata i32 %41, metadata !3886, metadata !DIExpression()), !dbg !3891
  %42 = getelementptr inbounds [66 x i32], [66 x i32]* inttoptr (i32 -2097102848 to [66 x i32]*), i32 0, i32 %41, !dbg !3930
  store volatile i32 %40, i32* %42, align 4, !dbg !3931
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %25) #22, !dbg !3932
  %43 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !3933
  br label %44, !dbg !3934

44:                                               ; preds = %24, %18
  %45 = phi i32 [ 0, %24 ], [ -1, %18 ], !dbg !3891
  ret i32 %45, !dbg !3935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !3936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3938, metadata !DIExpression()), !dbg !3939
  %2 = and i32 %0, 31, !dbg !3940
  %3 = shl nuw i32 1, %2, !dbg !3941
  %4 = lshr i32 %0, 5, !dbg !3942
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !3943
  store volatile i32 %3, i32* %5, align 4, !dbg !3944
  ret void, !dbg !3945
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halRegGPInterrupt_set_debounce(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !3946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3950, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i8 %1, metadata !3951, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i8 %2, metadata !3952, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i8 %3, metadata !3953, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i32 255, metadata !3955, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i32 0, metadata !3954, metadata !DIExpression()), !dbg !3958
  %5 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !3954, metadata !DIExpression()), !dbg !3958
  %6 = icmp eq i32 %5, 0, !dbg !3959
  br i1 %6, label %24, label %7, !dbg !3962

7:                                                ; preds = %4
  %8 = add i32 %5, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !3954, metadata !DIExpression()), !dbg !3958
  %9 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 1), align 4, !dbg !3963
  %10 = icmp eq i32 %9, %0, !dbg !3966
  br i1 %10, label %11, label %15, !dbg !3967

11:                                               ; preds = %19, %7
  %12 = phi i32 [ 0, %7 ], [ %20, %19 ]
  %13 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %12, i32 2, !dbg !3968
  %14 = load i32, i32* %13, align 4, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %14, metadata !3955, metadata !DIExpression()), !dbg !3958
  br label %24, !dbg !3970

15:                                               ; preds = %7, %19
  %16 = phi i32 [ %20, %19 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3954, metadata !DIExpression()), !dbg !3958
  %17 = icmp eq i32 %8, %16, !dbg !3971
  br i1 %17, label %18, label %19, !dbg !3973

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.halRegGPInterrupt_set_debounce, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.5.9, i32 0, i32 0), i32 noundef %0) #20, !dbg !3974
  br label %36, !dbg !3976

19:                                               ; preds = %15
  %20 = add nuw i32 %16, 1, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %20, metadata !3954, metadata !DIExpression()), !dbg !3958
  %21 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %20, i32 1, !dbg !3963
  %22 = load i32, i32* %21, align 4, !dbg !3963
  %23 = icmp eq i32 %22, %0, !dbg !3966
  br i1 %23, label %11, label %15, !dbg !3967, !llvm.loop !3978

24:                                               ; preds = %4, %11
  %25 = phi i32 [ %14, %11 ], [ 255, %4 ], !dbg !3958
  call void @llvm.dbg.value(metadata i32 %25, metadata !3955, metadata !DIExpression()), !dbg !3958
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %25) #22, !dbg !3980
  %26 = zext i8 %3 to i32, !dbg !3981
  %27 = zext i8 %2 to i32, !dbg !3982
  %28 = shl nuw nsw i32 %27, 4, !dbg !3983
  %29 = zext i8 %1 to i32, !dbg !3984
  %30 = shl nuw nsw i32 %29, 9, !dbg !3985
  %31 = or i32 %30, %26, !dbg !3986
  %32 = add nuw nsw i32 %31, %28, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %32, metadata !3957, metadata !DIExpression()), !dbg !3958
  %33 = add i32 %25, -30, !dbg !3988
  call void @llvm.dbg.value(metadata i32 %33, metadata !3956, metadata !DIExpression()), !dbg !3958
  %34 = getelementptr inbounds [66 x i32], [66 x i32]* inttoptr (i32 -2097102848 to [66 x i32]*), i32 0, i32 %33, !dbg !3989
  store volatile i32 %32, i32* %34, align 4, !dbg !3990
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %25) #22, !dbg !3991
  %35 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !3992
  br label %36, !dbg !3993

36:                                               ; preds = %24, %18
  %37 = phi i32 [ 0, %24 ], [ -1, %18 ], !dbg !3958
  ret i32 %37, !dbg !3994
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halRegGPInterrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !3995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3997, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i32 255, metadata !3999, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4000
  %2 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4000
  %3 = icmp eq i32 %2, 0, !dbg !4001
  br i1 %3, label %21, label %4, !dbg !4004

4:                                                ; preds = %1
  %5 = add i32 %2, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4000
  %6 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 1), align 4, !dbg !4005
  %7 = icmp eq i32 %6, %0, !dbg !4008
  br i1 %7, label %8, label %12, !dbg !4009

8:                                                ; preds = %16, %4
  %9 = phi i32 [ 0, %4 ], [ %17, %16 ]
  %10 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %9, i32 2, !dbg !4010
  %11 = load i32, i32* %10, align 4, !dbg !4010
  call void @llvm.dbg.value(metadata i32 %11, metadata !3999, metadata !DIExpression()), !dbg !4000
  br label %21, !dbg !4012

12:                                               ; preds = %4, %16
  %13 = phi i32 [ %17, %16 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !3998, metadata !DIExpression()), !dbg !4000
  %14 = icmp eq i32 %5, %13, !dbg !4013
  br i1 %14, label %15, label %16, !dbg !4015

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.halRegGPInterrupt_mask, i32 0, i32 0), i32 noundef 737, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i32 0, i32 0), i32 noundef %0) #20, !dbg !4016
  br label %23, !dbg !4018

16:                                               ; preds = %12
  %17 = add nuw i32 %13, 1, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %17, metadata !3998, metadata !DIExpression()), !dbg !4000
  %18 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %17, i32 1, !dbg !4005
  %19 = load i32, i32* %18, align 4, !dbg !4005
  %20 = icmp eq i32 %19, %0, !dbg !4008
  br i1 %20, label %8, label %12, !dbg !4009, !llvm.loop !4020

21:                                               ; preds = %1, %8
  %22 = phi i32 [ %11, %8 ], [ 255, %1 ], !dbg !4000
  call void @llvm.dbg.value(metadata i32 %22, metadata !3999, metadata !DIExpression()), !dbg !4000
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %22) #22, !dbg !4022
  br label %23, !dbg !4023

23:                                               ; preds = %21, %15
  %24 = phi i32 [ 0, %21 ], [ -1, %15 ], !dbg !4000
  ret i32 %24, !dbg !4024
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halRegGPInterrupt_unmask(i32 noundef %0) local_unnamed_addr #0 !dbg !4025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4027, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i32 255, metadata !4029, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i32 0, metadata !4028, metadata !DIExpression()), !dbg !4030
  %2 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !4028, metadata !DIExpression()), !dbg !4030
  %3 = icmp eq i32 %2, 0, !dbg !4031
  br i1 %3, label %21, label %4, !dbg !4034

4:                                                ; preds = %1
  %5 = add i32 %2, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !4028, metadata !DIExpression()), !dbg !4030
  %6 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 1), align 4, !dbg !4035
  %7 = icmp eq i32 %6, %0, !dbg !4038
  br i1 %7, label %8, label %12, !dbg !4039

8:                                                ; preds = %16, %4
  %9 = phi i32 [ 0, %4 ], [ %17, %16 ]
  %10 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %9, i32 2, !dbg !4040
  %11 = load i32, i32* %10, align 4, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %11, metadata !4029, metadata !DIExpression()), !dbg !4030
  br label %21, !dbg !4042

12:                                               ; preds = %4, %16
  %13 = phi i32 [ %17, %16 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !4028, metadata !DIExpression()), !dbg !4030
  %14 = icmp eq i32 %5, %13, !dbg !4043
  br i1 %14, label %15, label %16, !dbg !4045

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.halRegGPInterrupt_unmask, i32 0, i32 0), i32 noundef 758, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i32 0, i32 0), i32 noundef %0) #20, !dbg !4046
  br label %23, !dbg !4048

16:                                               ; preds = %12
  %17 = add nuw i32 %13, 1, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %17, metadata !4028, metadata !DIExpression()), !dbg !4030
  %18 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %17, i32 1, !dbg !4035
  %19 = load i32, i32* %18, align 4, !dbg !4035
  %20 = icmp eq i32 %19, %0, !dbg !4038
  br i1 %20, label %8, label %12, !dbg !4039, !llvm.loop !4050

21:                                               ; preds = %1, %8
  %22 = phi i32 [ %11, %8 ], [ 255, %1 ], !dbg !4030
  call void @llvm.dbg.value(metadata i32 %22, metadata !4029, metadata !DIExpression()), !dbg !4030
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %22) #22, !dbg !4052
  br label %23, !dbg !4053

23:                                               ; preds = %21, %15
  %24 = phi i32 [ 0, %21 ], [ -1, %15 ], !dbg !4030
  ret i32 %24, !dbg !4054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halRegGP_set_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !4055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4057, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.value(metadata i32 255, metadata !4059, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.value(metadata i32 0, metadata !4058, metadata !DIExpression()), !dbg !4060
  %2 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !4058, metadata !DIExpression()), !dbg !4060
  %3 = icmp eq i32 %2, 0, !dbg !4061
  br i1 %3, label %21, label %4, !dbg !4064

4:                                                ; preds = %1
  %5 = add i32 %2, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !4058, metadata !DIExpression()), !dbg !4060
  %6 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 1), align 4, !dbg !4065
  %7 = icmp eq i32 %6, %0, !dbg !4068
  br i1 %7, label %8, label %12, !dbg !4069

8:                                                ; preds = %16, %4
  %9 = phi i32 [ 0, %4 ], [ %17, %16 ]
  %10 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %9, i32 2, !dbg !4070
  %11 = load i32, i32* %10, align 4, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %11, metadata !4059, metadata !DIExpression()), !dbg !4060
  br label %21, !dbg !4072

12:                                               ; preds = %4, %16
  %13 = phi i32 [ %17, %16 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !4058, metadata !DIExpression()), !dbg !4060
  %14 = icmp eq i32 %5, %13, !dbg !4073
  br i1 %14, label %15, label %16, !dbg !4075

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @__FUNCTION__.halRegGP_set_software_trigger, i32 0, i32 0), i32 noundef 785, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8, i32 0, i32 0), i32 noundef %0) #20, !dbg !4076
  br label %23, !dbg !4078

16:                                               ; preds = %12
  %17 = add nuw i32 %13, 1, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %17, metadata !4058, metadata !DIExpression()), !dbg !4060
  %18 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %17, i32 1, !dbg !4065
  %19 = load i32, i32* %18, align 4, !dbg !4065
  %20 = icmp eq i32 %19, %0, !dbg !4068
  br i1 %20, label %8, label %12, !dbg !4069, !llvm.loop !4080

21:                                               ; preds = %1, %8
  %22 = phi i32 [ %11, %8 ], [ 255, %1 ], !dbg !4060
  call void @llvm.dbg.value(metadata i32 %22, metadata !4059, metadata !DIExpression()), !dbg !4060
  tail call fastcc void @software_trigger_irq(i32 noundef %22) #22, !dbg !4082
  br label %23, !dbg !4083

23:                                               ; preds = %21, %15
  %24 = phi i32 [ 0, %21 ], [ -1, %15 ], !dbg !4060
  ret i32 %24, !dbg !4084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #5 !dbg !4085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4089, metadata !DIExpression()), !dbg !4090
  %2 = and i32 %0, 511, !dbg !4091
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !4092
  ret void, !dbg !4093
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halRegGP_clear_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !4094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4096, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 255, metadata !4098, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 0, metadata !4097, metadata !DIExpression()), !dbg !4099
  %2 = load i32, i32* @hal_eint_count_max, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !4097, metadata !DIExpression()), !dbg !4099
  %3 = icmp eq i32 %2, 0, !dbg !4100
  br i1 %3, label %21, label %4, !dbg !4103

4:                                                ; preds = %1
  %5 = add i32 %2, -1
  call void @llvm.dbg.value(metadata i32 0, metadata !4097, metadata !DIExpression()), !dbg !4099
  %6 = load i32, i32* getelementptr inbounds ([0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 0, i32 1), align 4, !dbg !4104
  %7 = icmp eq i32 %6, %0, !dbg !4107
  br i1 %7, label %8, label %12, !dbg !4108

8:                                                ; preds = %16, %4
  %9 = phi i32 [ 0, %4 ], [ %17, %16 ]
  %10 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %9, i32 2, !dbg !4109
  %11 = load i32, i32* %10, align 4, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %11, metadata !4098, metadata !DIExpression()), !dbg !4099
  br label %21, !dbg !4111

12:                                               ; preds = %4, %16
  %13 = phi i32 [ %17, %16 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !4097, metadata !DIExpression()), !dbg !4099
  %14 = icmp eq i32 %5, %13, !dbg !4112
  br i1 %14, label %15, label %16, !dbg !4114

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @__FUNCTION__.halRegGP_clear_software_trigger, i32 0, i32 0), i32 noundef 808, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.9, i32 0, i32 0), i32 noundef %0) #20, !dbg !4115
  br label %23, !dbg !4117

16:                                               ; preds = %12
  %17 = add nuw i32 %13, 1, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %17, metadata !4097, metadata !DIExpression()), !dbg !4099
  %18 = getelementptr inbounds [0 x %struct.hal_eint_gpio_map_t], [0 x %struct.hal_eint_gpio_map_t]* @eint_gpio_table, i32 0, i32 %17, i32 1, !dbg !4104
  %19 = load i32, i32* %18, align 4, !dbg !4104
  %20 = icmp eq i32 %19, %0, !dbg !4107
  br i1 %20, label %8, label %12, !dbg !4108, !llvm.loop !4119

21:                                               ; preds = %1, %8
  %22 = phi i32 [ %11, %8 ], [ 255, %1 ], !dbg !4099
  call void @llvm.dbg.value(metadata i32 %22, metadata !4098, metadata !DIExpression()), !dbg !4099
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %22) #22, !dbg !4121
  br label %23, !dbg !4122

23:                                               ; preds = %21, %15
  %24 = phi i32 [ 0, %21 ], [ -1, %15 ], !dbg !4099
  ret i32 %24, !dbg !4123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halPinmuxTopOnPadFunc(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4129, metadata !DIExpression()), !dbg !4132
  call void @llvm.dbg.value(metadata i8 %1, metadata !4130, metadata !DIExpression()), !dbg !4132
  switch i32 %0, label %187 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %14
    i32 3, label %20
    i32 4, label %26
    i32 5, label %32
    i32 6, label %38
    i32 7, label %44
    i32 24, label %50
    i32 25, label %55
    i32 26, label %61
    i32 27, label %67
    i32 28, label %75
    i32 29, label %85
    i32 30, label %94
    i32 31, label %102
    i32 32, label %112
    i32 33, label %121
    i32 34, label %127
    i32 35, label %133
    i32 36, label %139
    i32 37, label %145
    i32 38, label %151
    i32 39, label %157
    i32 57, label %163
    i32 58, label %169
    i32 59, label %175
    i32 60, label %181
  ], !dbg !4133

3:                                                ; preds = %2
  %4 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %4, metadata !4131, metadata !DIExpression()), !dbg !4132
  %5 = and i32 %4, -16, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %5, metadata !4131, metadata !DIExpression()), !dbg !4132
  %6 = zext i8 %1 to i32, !dbg !4137
  %7 = or i32 %5, %6, !dbg !4138
  store volatile i32 %7, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4139
  br label %187, !dbg !4140

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %9, metadata !4131, metadata !DIExpression()), !dbg !4132
  %10 = and i32 %9, -241, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %10, metadata !4131, metadata !DIExpression()), !dbg !4132
  %11 = zext i8 %1 to i32, !dbg !4143
  %12 = shl nuw nsw i32 %11, 4, !dbg !4144
  %13 = or i32 %10, %12, !dbg !4145
  store volatile i32 %13, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4146
  br label %187, !dbg !4147

14:                                               ; preds = %2
  %15 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %15, metadata !4131, metadata !DIExpression()), !dbg !4132
  %16 = and i32 %15, -3841, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %16, metadata !4131, metadata !DIExpression()), !dbg !4132
  %17 = zext i8 %1 to i32, !dbg !4150
  %18 = shl nuw nsw i32 %17, 8, !dbg !4151
  %19 = or i32 %16, %18, !dbg !4152
  store volatile i32 %19, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4153
  br label %187, !dbg !4154

20:                                               ; preds = %2
  %21 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %21, metadata !4131, metadata !DIExpression()), !dbg !4132
  %22 = and i32 %21, -61441, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %22, metadata !4131, metadata !DIExpression()), !dbg !4132
  %23 = zext i8 %1 to i32, !dbg !4157
  %24 = shl nuw nsw i32 %23, 12, !dbg !4158
  %25 = or i32 %22, %24, !dbg !4159
  store volatile i32 %25, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4160
  br label %187, !dbg !4161

26:                                               ; preds = %2
  %27 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4162
  call void @llvm.dbg.value(metadata i32 %27, metadata !4131, metadata !DIExpression()), !dbg !4132
  %28 = and i32 %27, -983041, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %28, metadata !4131, metadata !DIExpression()), !dbg !4132
  %29 = zext i8 %1 to i32, !dbg !4164
  %30 = shl nuw nsw i32 %29, 16, !dbg !4165
  %31 = or i32 %28, %30, !dbg !4166
  store volatile i32 %31, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4167
  br label %187, !dbg !4168

32:                                               ; preds = %2
  %33 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %33, metadata !4131, metadata !DIExpression()), !dbg !4132
  %34 = and i32 %33, -15728641, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %34, metadata !4131, metadata !DIExpression()), !dbg !4132
  %35 = zext i8 %1 to i32, !dbg !4171
  %36 = shl nuw nsw i32 %35, 20, !dbg !4172
  %37 = or i32 %34, %36, !dbg !4173
  store volatile i32 %37, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4174
  br label %187, !dbg !4175

38:                                               ; preds = %2
  %39 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %39, metadata !4131, metadata !DIExpression()), !dbg !4132
  %40 = and i32 %39, -251658241, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %40, metadata !4131, metadata !DIExpression()), !dbg !4132
  %41 = zext i8 %1 to i32, !dbg !4178
  %42 = shl nuw i32 %41, 24, !dbg !4179
  %43 = or i32 %40, %42, !dbg !4180
  store volatile i32 %43, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4181
  br label %187, !dbg !4182

44:                                               ; preds = %2
  %45 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %45, metadata !4131, metadata !DIExpression()), !dbg !4132
  %46 = and i32 %45, 268435455, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %46, metadata !4131, metadata !DIExpression()), !dbg !4132
  %47 = zext i8 %1 to i32, !dbg !4185
  %48 = shl i32 %47, 28, !dbg !4186
  %49 = or i32 %46, %48, !dbg !4187
  store volatile i32 %49, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !4188
  br label %187, !dbg !4189

50:                                               ; preds = %2
  %51 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %51, metadata !4131, metadata !DIExpression()), !dbg !4132
  %52 = and i32 %51, -16, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %52, metadata !4131, metadata !DIExpression()), !dbg !4132
  %53 = zext i8 %1 to i32, !dbg !4192
  %54 = or i32 %52, %53, !dbg !4193
  store volatile i32 %54, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4194
  br label %187, !dbg !4195

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %56, metadata !4131, metadata !DIExpression()), !dbg !4132
  %57 = and i32 %56, -241, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %57, metadata !4131, metadata !DIExpression()), !dbg !4132
  %58 = zext i8 %1 to i32, !dbg !4198
  %59 = shl nuw nsw i32 %58, 4, !dbg !4199
  %60 = or i32 %57, %59, !dbg !4200
  store volatile i32 %60, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4201
  br label %187, !dbg !4202

61:                                               ; preds = %2
  %62 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %62, metadata !4131, metadata !DIExpression()), !dbg !4132
  %63 = and i32 %62, -3841, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %63, metadata !4131, metadata !DIExpression()), !dbg !4132
  %64 = zext i8 %1 to i32, !dbg !4205
  %65 = shl nuw nsw i32 %64, 8, !dbg !4206
  %66 = or i32 %63, %65, !dbg !4207
  store volatile i32 %66, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4208
  br label %187, !dbg !4209

67:                                               ; preds = %2
  %68 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4210
  call void @llvm.dbg.value(metadata i32 %68, metadata !4131, metadata !DIExpression()), !dbg !4132
  %69 = and i32 %68, -61441, !dbg !4211
  call void @llvm.dbg.value(metadata i32 %69, metadata !4131, metadata !DIExpression()), !dbg !4132
  %70 = zext i8 %1 to i32, !dbg !4212
  %71 = shl nuw nsw i32 %70, 12, !dbg !4213
  %72 = or i32 %69, %71, !dbg !4214
  store volatile i32 %72, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4215
  switch i8 %1, label %187 [
    i8 5, label %73
    i8 4, label %73
    i8 2, label %73
  ], !dbg !4216

73:                                               ; preds = %67, %67, %67
  %74 = tail call i32 @halGPIO_ConfDirection(i32 noundef 27, i8 noundef zeroext 0) #20, !dbg !4218
  br label %187, !dbg !4220

75:                                               ; preds = %2
  %76 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %76, metadata !4131, metadata !DIExpression()), !dbg !4132
  %77 = and i32 %76, -983041, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %77, metadata !4131, metadata !DIExpression()), !dbg !4132
  %78 = zext i8 %1 to i32, !dbg !4223
  %79 = shl nuw nsw i32 %78, 16, !dbg !4224
  %80 = or i32 %77, %79, !dbg !4225
  store volatile i32 %80, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4226
  %81 = and i8 %1, -2, !dbg !4227
  %82 = icmp eq i8 %81, 4, !dbg !4227
  br i1 %82, label %83, label %187, !dbg !4227

83:                                               ; preds = %75
  %84 = tail call i32 @halGPIO_ConfDirection(i32 noundef 28, i8 noundef zeroext 0) #20, !dbg !4229
  br label %187, !dbg !4231

85:                                               ; preds = %2
  %86 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4232
  call void @llvm.dbg.value(metadata i32 %86, metadata !4131, metadata !DIExpression()), !dbg !4132
  %87 = and i32 %86, -15728641, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %87, metadata !4131, metadata !DIExpression()), !dbg !4132
  %88 = zext i8 %1 to i32, !dbg !4234
  %89 = shl nuw nsw i32 %88, 20, !dbg !4235
  %90 = or i32 %87, %89, !dbg !4236
  store volatile i32 %90, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4237
  %91 = icmp eq i8 %1, 6, !dbg !4238
  br i1 %91, label %92, label %187, !dbg !4240

92:                                               ; preds = %85
  %93 = tail call i32 @halGPIO_ConfDirection(i32 noundef 29, i8 noundef zeroext 0) #20, !dbg !4241
  br label %187, !dbg !4243

94:                                               ; preds = %2
  %95 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %95, metadata !4131, metadata !DIExpression()), !dbg !4132
  %96 = and i32 %95, -251658241, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %96, metadata !4131, metadata !DIExpression()), !dbg !4132
  %97 = zext i8 %1 to i32, !dbg !4246
  %98 = shl nuw i32 %97, 24, !dbg !4247
  %99 = or i32 %96, %98, !dbg !4248
  store volatile i32 %99, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4249
  switch i8 %1, label %187 [
    i8 7, label %100
    i8 4, label %100
  ], !dbg !4250

100:                                              ; preds = %94, %94
  %101 = tail call i32 @halGPIO_ConfDirection(i32 noundef 30, i8 noundef zeroext 0) #20, !dbg !4252
  br label %187, !dbg !4254

102:                                              ; preds = %2
  %103 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4255
  call void @llvm.dbg.value(metadata i32 %103, metadata !4131, metadata !DIExpression()), !dbg !4132
  %104 = and i32 %103, 268435455, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %104, metadata !4131, metadata !DIExpression()), !dbg !4132
  %105 = zext i8 %1 to i32, !dbg !4257
  %106 = shl i32 %105, 28, !dbg !4258
  %107 = or i32 %104, %106, !dbg !4259
  store volatile i32 %107, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !4260
  %108 = and i8 %1, -3, !dbg !4261
  %109 = icmp eq i8 %108, 4, !dbg !4261
  br i1 %109, label %110, label %187, !dbg !4261

110:                                              ; preds = %102
  %111 = tail call i32 @halGPIO_ConfDirection(i32 noundef 31, i8 noundef zeroext 0) #20, !dbg !4263
  br label %187, !dbg !4265

112:                                              ; preds = %2
  %113 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4266
  call void @llvm.dbg.value(metadata i32 %113, metadata !4131, metadata !DIExpression()), !dbg !4132
  %114 = and i32 %113, -16, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %114, metadata !4131, metadata !DIExpression()), !dbg !4132
  %115 = zext i8 %1 to i32, !dbg !4268
  %116 = or i32 %114, %115, !dbg !4269
  store volatile i32 %116, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4270
  %117 = and i8 %1, -3, !dbg !4271
  %118 = icmp eq i8 %117, 4, !dbg !4271
  br i1 %118, label %119, label %187, !dbg !4271

119:                                              ; preds = %112
  %120 = tail call i32 @halGPIO_ConfDirection(i32 noundef 32, i8 noundef zeroext 0) #20, !dbg !4273
  br label %187, !dbg !4275

121:                                              ; preds = %2
  %122 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %122, metadata !4131, metadata !DIExpression()), !dbg !4132
  %123 = and i32 %122, -241, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %123, metadata !4131, metadata !DIExpression()), !dbg !4132
  %124 = zext i8 %1 to i32, !dbg !4278
  %125 = shl nuw nsw i32 %124, 4, !dbg !4279
  %126 = or i32 %123, %125, !dbg !4280
  store volatile i32 %126, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4281
  br label %187, !dbg !4282

127:                                              ; preds = %2
  %128 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4283
  call void @llvm.dbg.value(metadata i32 %128, metadata !4131, metadata !DIExpression()), !dbg !4132
  %129 = and i32 %128, -3841, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %129, metadata !4131, metadata !DIExpression()), !dbg !4132
  %130 = zext i8 %1 to i32, !dbg !4285
  %131 = shl nuw nsw i32 %130, 8, !dbg !4286
  %132 = or i32 %129, %131, !dbg !4287
  store volatile i32 %132, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4288
  br label %187, !dbg !4289

133:                                              ; preds = %2
  %134 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %134, metadata !4131, metadata !DIExpression()), !dbg !4132
  %135 = and i32 %134, -61441, !dbg !4291
  call void @llvm.dbg.value(metadata i32 %135, metadata !4131, metadata !DIExpression()), !dbg !4132
  %136 = zext i8 %1 to i32, !dbg !4292
  %137 = shl nuw nsw i32 %136, 12, !dbg !4293
  %138 = or i32 %135, %137, !dbg !4294
  store volatile i32 %138, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4295
  br label %187, !dbg !4296

139:                                              ; preds = %2
  %140 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %140, metadata !4131, metadata !DIExpression()), !dbg !4132
  %141 = and i32 %140, -983041, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %141, metadata !4131, metadata !DIExpression()), !dbg !4132
  %142 = zext i8 %1 to i32, !dbg !4299
  %143 = shl nuw nsw i32 %142, 16, !dbg !4300
  %144 = or i32 %141, %143, !dbg !4301
  store volatile i32 %144, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4302
  br label %187, !dbg !4303

145:                                              ; preds = %2
  %146 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %146, metadata !4131, metadata !DIExpression()), !dbg !4132
  %147 = and i32 %146, -15728641, !dbg !4305
  call void @llvm.dbg.value(metadata i32 %147, metadata !4131, metadata !DIExpression()), !dbg !4132
  %148 = zext i8 %1 to i32, !dbg !4306
  %149 = shl nuw nsw i32 %148, 20, !dbg !4307
  %150 = or i32 %147, %149, !dbg !4308
  store volatile i32 %150, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4309
  br label %187, !dbg !4310

151:                                              ; preds = %2
  %152 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4311
  call void @llvm.dbg.value(metadata i32 %152, metadata !4131, metadata !DIExpression()), !dbg !4132
  %153 = and i32 %152, -251658241, !dbg !4312
  call void @llvm.dbg.value(metadata i32 %153, metadata !4131, metadata !DIExpression()), !dbg !4132
  %154 = zext i8 %1 to i32, !dbg !4313
  %155 = shl nuw i32 %154, 24, !dbg !4314
  %156 = or i32 %153, %155, !dbg !4315
  store volatile i32 %156, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4316
  br label %187, !dbg !4317

157:                                              ; preds = %2
  %158 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4318
  call void @llvm.dbg.value(metadata i32 %158, metadata !4131, metadata !DIExpression()), !dbg !4132
  %159 = and i32 %158, 268435455, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %159, metadata !4131, metadata !DIExpression()), !dbg !4132
  %160 = zext i8 %1 to i32, !dbg !4320
  %161 = shl i32 %160, 28, !dbg !4321
  %162 = or i32 %159, %161, !dbg !4322
  store volatile i32 %162, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !4323
  br label %187, !dbg !4324

163:                                              ; preds = %2
  %164 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %164, metadata !4131, metadata !DIExpression()), !dbg !4132
  %165 = and i32 %164, -241, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %165, metadata !4131, metadata !DIExpression()), !dbg !4132
  %166 = zext i8 %1 to i32, !dbg !4327
  %167 = shl nuw nsw i32 %166, 4, !dbg !4328
  %168 = or i32 %165, %167, !dbg !4329
  store volatile i32 %168, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4330
  br label %187, !dbg !4331

169:                                              ; preds = %2
  %170 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %170, metadata !4131, metadata !DIExpression()), !dbg !4132
  %171 = and i32 %170, -3841, !dbg !4333
  call void @llvm.dbg.value(metadata i32 %171, metadata !4131, metadata !DIExpression()), !dbg !4132
  %172 = zext i8 %1 to i32, !dbg !4334
  %173 = shl nuw nsw i32 %172, 8, !dbg !4335
  %174 = or i32 %171, %173, !dbg !4336
  store volatile i32 %174, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4337
  br label %187, !dbg !4338

175:                                              ; preds = %2
  %176 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %176, metadata !4131, metadata !DIExpression()), !dbg !4132
  %177 = and i32 %176, -61441, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %177, metadata !4131, metadata !DIExpression()), !dbg !4132
  %178 = zext i8 %1 to i32, !dbg !4341
  %179 = shl nuw nsw i32 %178, 12, !dbg !4342
  %180 = or i32 %177, %179, !dbg !4343
  store volatile i32 %180, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4344
  br label %187, !dbg !4345

181:                                              ; preds = %2
  %182 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %182, metadata !4131, metadata !DIExpression()), !dbg !4132
  %183 = and i32 %182, -983041, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %183, metadata !4131, metadata !DIExpression()), !dbg !4132
  %184 = zext i8 %1 to i32, !dbg !4348
  %185 = shl nuw nsw i32 %184, 16, !dbg !4349
  %186 = or i32 %183, %185, !dbg !4350
  store volatile i32 %186, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !4351
  br label %187, !dbg !4352

187:                                              ; preds = %94, %67, %2, %119, %112, %110, %102, %100, %85, %92, %83, %75, %73, %181, %175, %169, %163, %157, %151, %145, %139, %133, %127, %121, %61, %55, %50, %44, %38, %32, %26, %20, %14, %8, %3
  ret void, !dbg !4353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @spim_irqhandler(i32 %0) #0 !dbg !4354 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4356, metadata !DIExpression()), !dbg !4358
  %3 = bitcast i32* %2 to i8*, !dbg !4359
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4359
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4357, metadata !DIExpression()), !dbg !4360
  %4 = load void ()*, void ()** @halspim_isr, align 4, !dbg !4361
  tail call void %4() #20, !dbg !4361
  %5 = load volatile i32, i32* inttoptr (i32 603979828 to i32*), align 4, !dbg !4362
  store volatile i32 %5, i32* %2, align 4, !dbg !4363
  %6 = load volatile i32, i32* %2, align 4, !dbg !4364
  store volatile i32 %6, i32* %2, align 4, !dbg !4365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4366
  ret void, !dbg !4366
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @spim_isr_Register(void ()* noundef %0) local_unnamed_addr #4 !dbg !4367 {
  call void @llvm.dbg.value(metadata void ()* %0, metadata !4371, metadata !DIExpression()), !dbg !4372
  store void ()* %0, void ()** @halspim_isr, align 4, !dbg !4373
  ret void, !dbg !4374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @halSpim_init(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4375 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4379, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i32 %1, metadata !4380, metadata !DIExpression()), !dbg !4383
  %4 = bitcast i32* %3 to i8*, !dbg !4384
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4384
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4381, metadata !DIExpression()), !dbg !4385
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4382, metadata !DIExpression()), !dbg !4383
  %5 = tail call fastcc i32 @cmnReadRegister32() #22, !dbg !4386
  store volatile i32 %5, i32* %3, align 4, !dbg !4387
  %6 = load volatile i32, i32* %3, align 4, !dbg !4388
  %7 = lshr i32 %6, 28, !dbg !4389
  %8 = and i32 %7, 3, !dbg !4390
  store volatile i32 %8, i32* %3, align 4, !dbg !4391
  %9 = load volatile i32, i32* %3, align 4, !dbg !4392
  %10 = icmp eq i32 %9, 3, !dbg !4394
  br i1 %10, label %12, label %11, !dbg !4395

11:                                               ; preds = %2
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #20, !dbg !4396
  br label %12, !dbg !4398

12:                                               ; preds = %11, %2
  %13 = load volatile i32, i32* inttoptr (i32 -2097118796 to i32*), align 4, !dbg !4399
  %14 = and i32 %13, -131073, !dbg !4399
  store volatile i32 %14, i32* inttoptr (i32 -2097118796 to i32*), align 4, !dbg !4399
  %15 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 27, void (i32)* noundef nonnull @spim_irqhandler) #20, !dbg !4400
  %16 = tail call i32 @hal_nvic_set_priority(i32 noundef 27, i32 noundef 5) #20, !dbg !4401
  %17 = tail call i32 @hal_nvic_enable_irq(i32 noundef 27) #20, !dbg !4402
  %18 = load volatile i32, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4403
  %19 = and i32 %18, 268499332, !dbg !4403
  store volatile i32 %19, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4403
  %20 = load volatile i32, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4404
  %21 = shl i32 %1, 16, !dbg !4404
  %22 = or i32 %21, %0, !dbg !4404
  %23 = or i32 %22, %20, !dbg !4404
  store volatile i32 %23, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4405
  ret i32 0, !dbg !4406
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32() unnamed_addr #7 !dbg !4407 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2097118792 to i8*), metadata !4414, metadata !DIExpression()), !dbg !4415
  %1 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4416
  ret i32 %1, !dbg !4417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @spim_busy_wait() local_unnamed_addr #5 !dbg !4418 {
  call void @llvm.dbg.value(metadata i32 60000, metadata !4422, metadata !DIExpression()), !dbg !4423
  br label %1, !dbg !4424

1:                                                ; preds = %6, %0
  %2 = phi i32 [ 60000, %0 ], [ %7, %6 ], !dbg !4423
  call void @llvm.dbg.value(metadata i32 %2, metadata !4422, metadata !DIExpression()), !dbg !4423
  %3 = load volatile i32, i32* inttoptr (i32 603979776 to i32*), align 67108864, !dbg !4425
  %4 = and i32 %3, 65536, !dbg !4428
  %5 = icmp eq i32 %4, 0, !dbg !4429
  br i1 %5, label %9, label %6, !dbg !4430

6:                                                ; preds = %1
  %7 = add nsw i32 %2, -1, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %7, metadata !4422, metadata !DIExpression()), !dbg !4423
  %8 = icmp ugt i32 %2, 1, !dbg !4432
  br i1 %8, label %1, label %9, !dbg !4433, !llvm.loop !4434

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ -1, %6 ], !dbg !4423
  ret i32 %10, !dbg !4436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @spim_more_buf_trans_gpio(i32 noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #5 !dbg !4437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4445, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %1, metadata !4446, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i8* %2, metadata !4447, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %3, metadata !4448, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %4, metadata !4449, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 -1, metadata !4454, metadata !DIExpression()), !dbg !4456
  %6 = load volatile i32, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4457
  %7 = or i32 %6, 4, !dbg !4457
  store volatile i32 %7, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4457
  store volatile i32 %0, i32* inttoptr (i32 603979780 to i32*), align 4, !dbg !4458
  %8 = shl i32 %1, 27, !dbg !4459
  store volatile i32 %8, i32* inttoptr (i32 603979820 to i32*), align 4, !dbg !4459
  call void @llvm.dbg.value(metadata i32 0, metadata !4451, metadata !DIExpression()), !dbg !4456
  br label %9, !dbg !4460

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !4451, metadata !DIExpression()), !dbg !4456
  %11 = shl nuw nsw i32 %10, 2, !dbg !4462
  %12 = add nuw nsw i32 %11, 603979784, !dbg !4462
  %13 = inttoptr i32 %12 to i32*, !dbg !4462
  store volatile i32 0, i32* %13, align 4, !dbg !4462
  %14 = add nuw nsw i32 %10, 1, !dbg !4465
  call void @llvm.dbg.value(metadata i32 %14, metadata !4451, metadata !DIExpression()), !dbg !4456
  %15 = icmp eq i32 %14, 8, !dbg !4466
  br i1 %15, label %16, label %9, !dbg !4460, !llvm.loop !4467

16:                                               ; preds = %9
  %17 = and i32 %4, 2, !dbg !4469
  %18 = icmp eq i32 %17, 0, !dbg !4469
  br i1 %18, label %41, label %19, !dbg !4471

19:                                               ; preds = %16
  %20 = icmp eq i8* %2, null, !dbg !4472
  br i1 %20, label %70, label %21, !dbg !4475

21:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !4451, metadata !DIExpression()), !dbg !4456
  %22 = icmp eq i32 %3, 0, !dbg !4476
  br i1 %22, label %41, label %23, !dbg !4479

23:                                               ; preds = %21, %31
  %24 = phi i32 [ %39, %31 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !4451, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %24, metadata !4452, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !4456
  %25 = and i32 %24, 3, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %25, metadata !4453, metadata !DIExpression()), !dbg !4456
  %26 = icmp eq i32 %25, 0, !dbg !4482
  %27 = and i32 %24, 2147483644, !dbg !4484
  %28 = add nuw nsw i32 %27, 603979784, !dbg !4484
  %29 = inttoptr i32 %28 to i32*, !dbg !4484
  br i1 %26, label %30, label %31, !dbg !4485

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 %24, metadata !4452, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !4456
  store volatile i32 0, i32* %29, align 4, !dbg !4486
  br label %31, !dbg !4488

31:                                               ; preds = %23, %30
  %32 = load volatile i32, i32* %29, align 4, !dbg !4489
  %33 = getelementptr inbounds i8, i8* %2, i32 %24, !dbg !4489
  %34 = load i8, i8* %33, align 1, !dbg !4489
  %35 = zext i8 %34 to i32, !dbg !4489
  %36 = shl nuw nsw i32 %25, 3, !dbg !4489
  %37 = shl nuw i32 %35, %36, !dbg !4489
  %38 = or i32 %37, %32, !dbg !4489
  store volatile i32 %38, i32* %29, align 4, !dbg !4489
  %39 = add nuw i32 %24, 1, !dbg !4490
  call void @llvm.dbg.value(metadata i32 %39, metadata !4451, metadata !DIExpression()), !dbg !4456
  %40 = icmp eq i32 %39, %3, !dbg !4476
  br i1 %40, label %41, label %23, !dbg !4479, !llvm.loop !4491

41:                                               ; preds = %31, %16, %21
  %42 = phi i32 [ 3, %21 ], [ 15, %16 ], [ 3, %31 ]
  %43 = load volatile i32, i32* inttoptr (i32 603979820 to i32*), align 4, !dbg !4493
  %44 = and i32 %43, -2093568, !dbg !4493
  store volatile i32 %44, i32* inttoptr (i32 603979820 to i32*), align 4, !dbg !4493
  %45 = load volatile i32, i32* inttoptr (i32 603979820 to i32*), align 4, !dbg !4494
  %46 = shl i32 %3, %42, !dbg !4494
  %47 = or i32 %45, %46, !dbg !4494
  store volatile i32 %47, i32* inttoptr (i32 603979820 to i32*), align 4, !dbg !4494
  %48 = load volatile i32, i32* inttoptr (i32 603979776 to i32*), align 67108864, !dbg !4496
  %49 = or i32 %48, 256, !dbg !4496
  store volatile i32 %49, i32* inttoptr (i32 603979776 to i32*), align 67108864, !dbg !4496
  %50 = tail call i32 @spim_busy_wait() #22, !dbg !4497
  %51 = and i32 %4, 3, !dbg !4498
  %52 = icmp eq i32 %51, 1, !dbg !4498
  br i1 %52, label %53, label %70, !dbg !4498

53:                                               ; preds = %41
  %54 = icmp eq i8* %2, null, !dbg !4499
  br i1 %54, label %74, label %55, !dbg !4503

55:                                               ; preds = %53
  call void @llvm.dbg.value(metadata i32 0, metadata !4451, metadata !DIExpression()), !dbg !4456
  %56 = icmp eq i32 %3, 0, !dbg !4504
  br i1 %56, label %70, label %57, !dbg !4507

57:                                               ; preds = %55, %57
  %58 = phi i32 [ %68, %57 ], [ 0, %55 ]
  call void @llvm.dbg.value(metadata i32 %58, metadata !4451, metadata !DIExpression()), !dbg !4456
  %59 = and i32 %58, 2147483644, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %58, metadata !4452, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %58, metadata !4453, metadata !DIExpression(DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !4456
  %60 = add nuw nsw i32 %59, 603979784, !dbg !4508
  %61 = inttoptr i32 %60 to i32*, !dbg !4508
  %62 = load volatile i32, i32* %61, align 4, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %62, metadata !4450, metadata !DIExpression()), !dbg !4456
  %63 = shl i32 %58, 3, !dbg !4510
  %64 = and i32 %63, 24, !dbg !4510
  %65 = lshr i32 %62, %64, !dbg !4511
  %66 = trunc i32 %65 to i8, !dbg !4512
  %67 = getelementptr inbounds i8, i8* %2, i32 %58, !dbg !4513
  store i8 %66, i8* %67, align 1, !dbg !4514
  %68 = add nuw nsw i32 %58, 1, !dbg !4515
  call void @llvm.dbg.value(metadata i32 %68, metadata !4451, metadata !DIExpression()), !dbg !4456
  %69 = icmp eq i32 %68, %3, !dbg !4504
  br i1 %69, label %70, label %57, !dbg !4507, !llvm.loop !4516

70:                                               ; preds = %57, %55, %41, %19
  %71 = phi i32 [ -1, %19 ], [ 0, %41 ], [ 0, %55 ], [ 0, %57 ], !dbg !4456
  call void @llvm.dbg.value(metadata i32 %71, metadata !4454, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.label(metadata !4455), !dbg !4518
  %72 = load volatile i32, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4519
  %73 = and i32 %72, -5, !dbg !4519
  store volatile i32 %73, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !4519
  br label %74, !dbg !4520

74:                                               ; preds = %53, %70
  %75 = phi i32 [ %71, %70 ], [ -1, %53 ], !dbg !4456
  ret i32 %75, !dbg !4521
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_init() local_unnamed_addr #8 !dbg !4522 {
  ret i32 0, !dbg !4526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_deinit() local_unnamed_addr #8 !dbg !4527 {
  ret i32 0, !dbg !4528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_get_generated_random_number(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !4529 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4534, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i16 0, metadata !4535, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !4536, metadata !DIExpression()), !dbg !4543
  %2 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !4544
  %3 = or i32 %2, 1, !dbg !4544
  store volatile i32 %3, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !4544
  call void @llvm.dbg.value(metadata i16 0, metadata !4535, metadata !DIExpression()), !dbg !4542
  br label %4, !dbg !4545

4:                                                ; preds = %1, %9
  %5 = phi i16 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i16 %5, metadata !4535, metadata !DIExpression()), !dbg !4542
  %6 = load volatile i32, i32* inttoptr (i32 -2096107504 to i32*), align 16, !dbg !4546
  %7 = and i32 %6, 1, !dbg !4546
  %8 = icmp eq i32 %7, 0, !dbg !4549
  br i1 %8, label %9, label %12, !dbg !4550

9:                                                ; preds = %4
  tail call void @delay_time(i32 noundef 32) #20, !dbg !4551
  %10 = add nuw nsw i16 %5, 1, !dbg !4552
  call void @llvm.dbg.value(metadata i16 %10, metadata !4535, metadata !DIExpression()), !dbg !4542
  %11 = icmp ult i16 %5, 99, !dbg !4553
  br i1 %11, label %4, label %12, !dbg !4545, !llvm.loop !4554

12:                                               ; preds = %4, %9
  %13 = phi i16 [ %5, %4 ], [ 100, %9 ], !dbg !4542
  %14 = load volatile i32, i32* inttoptr (i32 -2096107512 to i32*), align 8, !dbg !4556
  store i32 %14, i32* %0, align 4, !dbg !4557
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107500 to i32*), metadata !4538, metadata !DIExpression()), !dbg !4558
  %15 = load volatile i32, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !4559
  store volatile i32 1, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !4559
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !4540, metadata !DIExpression()), !dbg !4560
  %16 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !4561
  %17 = and i32 %16, -2, !dbg !4561
  store volatile i32 %17, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !4561
  %18 = icmp ugt i16 %13, 99, !dbg !4562
  br i1 %18, label %19, label %20, !dbg !4564

19:                                               ; preds = %12
  store i32 0, i32* %0, align 4, !dbg !4565
  br label %20, !dbg !4567

20:                                               ; preds = %12, %19
  %21 = phi i32 [ -2, %19 ], [ 0, %12 ], !dbg !4568
  ret i32 %21, !dbg !4569
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4574, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %1, metadata !4575, metadata !DIExpression()), !dbg !4576
  %3 = trunc i32 %1 to i8, !dbg !4577
  %4 = tail call i32 @halGPIO_ConfDirection(i32 noundef %0, i8 noundef zeroext %3) #20, !dbg !4578
  ret i32 %4, !dbg !4579
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_write(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4584, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8 %1, metadata !4585, metadata !DIExpression()), !dbg !4586
  %3 = tail call i32 @halGPO_Write(i32 noundef %0, i8 noundef zeroext %1) #20, !dbg !4587
  ret i32 %3, !dbg !4588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_int(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i8 noundef zeroext %6, void (i32)* noundef %7) local_unnamed_addr #0 !dbg !4589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4598, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata i32 %1, metadata !4599, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata i32 %2, metadata !4600, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata i32 %3, metadata !4601, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata i32 %4, metadata !4602, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata i32 %5, metadata !4603, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata i8 %6, metadata !4604, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.value(metadata void (i32)* %7, metadata !4605, metadata !DIExpression()), !dbg !4606
  %9 = trunc i32 %1 to i8, !dbg !4607
  %10 = trunc i32 %2 to i8, !dbg !4608
  %11 = trunc i32 %3 to i8, !dbg !4609
  %12 = trunc i32 %4 to i8, !dbg !4610
  %13 = trunc i32 %5 to i8, !dbg !4611
  %14 = tail call i32 @halRegGPInterrupt(i32 noundef %0, i8 noundef zeroext %9, i8 noundef zeroext %10, i8 noundef zeroext %11, i8 noundef zeroext %12, i8 noundef zeroext %13, i8 noundef zeroext %6, void (i32)* noundef %7) #20, !dbg !4612
  ret i32 %14, !dbg !4613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_set_trigger_mode(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !4614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4618, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %1, metadata !4619, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %2, metadata !4620, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %3, metadata !4621, metadata !DIExpression()), !dbg !4622
  %5 = trunc i32 %1 to i8, !dbg !4623
  %6 = trunc i32 %2 to i8, !dbg !4624
  %7 = trunc i32 %3 to i8, !dbg !4625
  %8 = tail call i32 @halRegGPInterrupt_set_triggermode(i32 noundef %0, i8 noundef zeroext %5, i8 noundef zeroext %6, i8 noundef zeroext %7) #20, !dbg !4626
  ret i32 %8, !dbg !4627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_set_debounce(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !4628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4632, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %1, metadata !4633, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %2, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8 %3, metadata !4635, metadata !DIExpression()), !dbg !4636
  %5 = trunc i32 %1 to i8, !dbg !4637
  %6 = trunc i32 %2 to i8, !dbg !4638
  %7 = tail call i32 @halRegGPInterrupt_set_debounce(i32 noundef %0, i8 noundef zeroext %5, i8 noundef zeroext %6, i8 noundef zeroext %3) #20, !dbg !4639
  ret i32 %7, !dbg !4640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_set_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !4641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4645, metadata !DIExpression()), !dbg !4646
  %2 = tail call i32 @halRegGPInterrupt_mask(i32 noundef %0) #20, !dbg !4647
  ret i32 %2, !dbg !4648
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_set_unmask(i32 noundef %0) local_unnamed_addr #0 !dbg !4649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4651, metadata !DIExpression()), !dbg !4652
  %2 = tail call i32 @halRegGPInterrupt_unmask(i32 noundef %0) #20, !dbg !4653
  ret i32 %2, !dbg !4654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_set_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !4655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4657, metadata !DIExpression()), !dbg !4658
  %2 = tail call i32 @halRegGP_set_software_trigger(i32 noundef %0) #20, !dbg !4659
  ret i32 %2, !dbg !4660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_clear_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !4661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4663, metadata !DIExpression()), !dbg !4664
  %2 = tail call i32 @halRegGP_clear_software_trigger(i32 noundef %0) #20, !dbg !4665
  ret i32 %2, !dbg !4666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpio_get_status(%struct.gpio_status* noalias nocapture writeonly sret(%struct.gpio_status) align 4 %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4667 {
  call void @llvm.dbg.value(metadata i32 %1, metadata !4678, metadata !DIExpression()), !dbg !4680
  call void @llvm.dbg.declare(metadata %struct.gpio_status* %0, metadata !4679, metadata !DIExpression()), !dbg !4681
  %3 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %0, i32 0, i32 0, !dbg !4682
  store i32 %1, i32* %3, align 4, !dbg !4683
  %4 = tail call zeroext i8 @halgetGPIO_OutEnable(i32 noundef %1) #20, !dbg !4684
  %5 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %0, i32 0, i32 1, !dbg !4685
  store i8 %4, i8* %5, align 4, !dbg !4686
  %6 = tail call zeroext i8 @halgetGPIO_DIN(i32 noundef %1) #20, !dbg !4687
  %7 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %0, i32 0, i32 2, !dbg !4688
  store i8 %6, i8* %7, align 1, !dbg !4689
  %8 = tail call zeroext i8 @halgetGPIO_DOUT(i32 noundef %1) #20, !dbg !4690
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %0, i32 0, i32 3, !dbg !4691
  store i8 %8, i8* %9, align 2, !dbg !4692
  ret void, !dbg !4693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_PullUp(i32 noundef %0) local_unnamed_addr #0 !dbg !4694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4696, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.value(metadata i32 0, metadata !4697, metadata !DIExpression()), !dbg !4698
  tail call void @topPAD_Control_GPIO(i32 noundef %0, i32 noundef 1) #20, !dbg !4699
  %2 = tail call i32 @halGPIO_PullUp_SET(i32 noundef %0) #20, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %2, metadata !4697, metadata !DIExpression()), !dbg !4698
  ret i32 %2, !dbg !4701
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_PullDown(i32 noundef %0) local_unnamed_addr #0 !dbg !4702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4704, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 0, metadata !4705, metadata !DIExpression()), !dbg !4706
  tail call void @topPAD_Control_GPIO(i32 noundef %0, i32 noundef 1) #20, !dbg !4707
  %2 = tail call i32 @halGPIO_PullDown_SET(i32 noundef %0) #20, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %2, metadata !4705, metadata !DIExpression()), !dbg !4706
  ret i32 %2, !dbg !4709
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_PullDisable(i32 noundef %0) local_unnamed_addr #0 !dbg !4710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4712, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 0, metadata !4713, metadata !DIExpression()), !dbg !4714
  tail call void @topPAD_Control_GPIO(i32 noundef %0, i32 noundef 1) #20, !dbg !4715
  %2 = tail call i32 @halGPIO_PullDown_RESET(i32 noundef %0) #20, !dbg !4716
  call void @llvm.dbg.value(metadata i32 %2, metadata !4713, metadata !DIExpression()), !dbg !4714
  %3 = tail call i32 @halGPIO_PullUp_RESET(i32 noundef %0) #20, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %3, metadata !4713, metadata !DIExpression()), !dbg !4714
  ret i32 %3, !dbg !4718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_SetDriving(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4721, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i8 %1, metadata !4722, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i32 0, metadata !4723, metadata !DIExpression()), !dbg !4724
  %3 = tail call i32 @halGPIO_SetDriving(i32 noundef %0, i8 noundef zeroext %1) #20, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %3, metadata !4723, metadata !DIExpression()), !dbg !4724
  ret i32 %3, !dbg !4726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_GetDriving(i32 noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !4727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4731, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i8* %1, metadata !4732, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i32 0, metadata !4733, metadata !DIExpression()), !dbg !4734
  %3 = tail call i32 @halGPIO_GetDriving(i32 noundef %0, i8* noundef %1) #20, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %3, metadata !4733, metadata !DIExpression()), !dbg !4734
  ret i32 %3, !dbg !4736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_backup_all_registers() local_unnamed_addr #5 !dbg !4737 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4739, metadata !DIExpression()), !dbg !4740
  br label %1, !dbg !4741

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4739, metadata !DIExpression()), !dbg !4740
  %3 = getelementptr inbounds [22 x %struct.gpio_backup_restore_t], [22 x %struct.gpio_backup_restore_t]* @gpio_bakup_table, i32 0, i32 %2, i32 1, !dbg !4743
  %4 = load i32, i32* %3, align 4, !dbg !4743
  %5 = inttoptr i32 %4 to i32*, !dbg !4743
  %6 = load volatile i32, i32* %5, align 4, !dbg !4743
  %7 = getelementptr inbounds [22 x %struct.gpio_backup_restore_t], [22 x %struct.gpio_backup_restore_t]* @gpio_bakup_table, i32 0, i32 %2, i32 0, !dbg !4746
  store i32 %6, i32* %7, align 4, !dbg !4747
  %8 = add nuw nsw i32 %2, 1, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %8, metadata !4739, metadata !DIExpression()), !dbg !4740
  %9 = icmp eq i32 %8, 22, !dbg !4749
  br i1 %9, label %10, label %1, !dbg !4741, !llvm.loop !4750

10:                                               ; preds = %1
  ret void, !dbg !4752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_restore_all_registers() local_unnamed_addr #5 !dbg !4753 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4755, metadata !DIExpression()), !dbg !4756
  br label %1, !dbg !4757

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4755, metadata !DIExpression()), !dbg !4756
  %3 = getelementptr inbounds [22 x %struct.gpio_backup_restore_t], [22 x %struct.gpio_backup_restore_t]* @gpio_bakup_table, i32 0, i32 %2, i32 0, !dbg !4759
  %4 = load i32, i32* %3, align 4, !dbg !4759
  %5 = getelementptr inbounds [22 x %struct.gpio_backup_restore_t], [22 x %struct.gpio_backup_restore_t]* @gpio_bakup_table, i32 0, i32 %2, i32 1, !dbg !4762
  %6 = load i32, i32* %5, align 4, !dbg !4762
  %7 = inttoptr i32 %6 to i32*, !dbg !4762
  store volatile i32 %4, i32* %7, align 4, !dbg !4763
  %8 = add nuw nsw i32 %2, 1, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %8, metadata !4755, metadata !DIExpression()), !dbg !4756
  %9 = icmp eq i32 %8, 22, !dbg !4765
  br i1 %9, label %10, label %1, !dbg !4757, !llvm.loop !4766

10:                                               ; preds = %1
  ret void, !dbg !4768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #0 !dbg !4769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4773, metadata !DIExpression()), !dbg !4774
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4775
  tail call void asm sideeffect "dsb", ""() #19, !dbg !4776, !srcloc !4777
  tail call void asm sideeffect "isb", ""() #19, !dbg !4778, !srcloc !4779
  ret void, !dbg !4780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #5 !dbg !4781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4785, metadata !DIExpression()), !dbg !4786
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !4787
  ret void, !dbg !4788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".ramTEXT" !dbg !4789 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #19, !dbg !4792, !srcloc !4799
  call void @llvm.dbg.value(metadata i32 %1, metadata !4796, metadata !DIExpression()) #19, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %1, metadata !4791, metadata !DIExpression()), !dbg !4801
  tail call void asm sideeffect "cpsid i", "~{memory}"() #19, !dbg !4802, !srcloc !4805
  ret i32 %1, !dbg !4806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4809, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.value(metadata i32 %0, metadata !4811, metadata !DIExpression()) #19, !dbg !4814
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #19, !dbg !4817, !srcloc !4818
  ret void, !dbg !4819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinmux_config(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4824, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i32 %1, metadata !4825, metadata !DIExpression()), !dbg !4827
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %3
    i32 2, label %3
    i32 3, label %3
    i32 4, label %3
    i32 5, label %3
    i32 6, label %3
    i32 7, label %3
    i32 24, label %3
    i32 25, label %3
    i32 26, label %3
    i32 27, label %3
    i32 28, label %3
    i32 29, label %3
    i32 30, label %3
    i32 31, label %3
    i32 32, label %3
    i32 33, label %3
    i32 34, label %3
    i32 35, label %3
    i32 36, label %3
    i32 37, label %3
    i32 38, label %3
    i32 39, label %3
    i32 57, label %3
    i32 58, label %3
    i32 59, label %3
    i32 60, label %3
  ], !dbg !4828

3:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  call void @llvm.dbg.value(metadata i32 %0, metadata !4826, metadata !DIExpression()), !dbg !4827
  %4 = trunc i32 %1 to i8, !dbg !4829
  tail call void @halPinmuxTopOnPadFunc(i32 noundef %0, i8 noundef zeroext %4) #20, !dbg !4830
  br label %5, !dbg !4831

5:                                                ; preds = %2, %3
  %6 = phi i32 [ 0, %3 ], [ -1, %2 ], !dbg !4827
  ret i32 %6, !dbg !4832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #7 section ".ramTEXT" !dbg !4833 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %1, metadata !4837, metadata !DIExpression()), !dbg !4839
  ret i32 %1, !dbg !4840
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #7 section ".ramTEXT" !dbg !4841 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #22, !dbg !4842
  ret i32 %1, !dbg !4843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !4844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4846, metadata !DIExpression()), !dbg !4849
  %2 = tail call i32 @sfc_get_systime() #22, !dbg !4850
  %3 = add i32 %2, %0, !dbg !4851
  %4 = xor i32 %3, -1, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %3, metadata !4847, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4849
  %5 = tail call i32 @sfc_get_systime() #22, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %5, metadata !4848, metadata !DIExpression()), !dbg !4849
  %6 = add i32 %5, %4, !dbg !4854
  %7 = icmp slt i32 %6, 0, !dbg !4854
  br i1 %7, label %8, label %12, !dbg !4855

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #22, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %9, metadata !4848, metadata !DIExpression()), !dbg !4849
  %10 = add i32 %9, %4, !dbg !4854
  %11 = icmp slt i32 %10, 0, !dbg !4854
  br i1 %11, label %8, label %12, !dbg !4855, !llvm.loop !4858

12:                                               ; preds = %8, %1
  ret void, !dbg !4860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !4861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4863, metadata !DIExpression()), !dbg !4864
  %2 = shl i32 %0, 5, !dbg !4865
  tail call void @sfc_delay_time(i32 noundef %2) #22, !dbg !4866
  ret void, !dbg !4867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #8 section ".ramTEXT" !dbg !4868 {
  ret i32 128, !dbg !4871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !4872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4874, metadata !DIExpression()), !dbg !4876
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !4877
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !4878
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !4879
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4880
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !4881
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !4882
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !4883
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %2, metadata !4875, metadata !DIExpression()), !dbg !4876
  %3 = and i32 %2, -4194305, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %3, metadata !4875, metadata !DIExpression()), !dbg !4876
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4886
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !4887
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %4, metadata !4875, metadata !DIExpression()), !dbg !4876
  %5 = or i32 %4, 4194304, !dbg !4889
  call void @llvm.dbg.value(metadata i32 %5, metadata !4875, metadata !DIExpression()), !dbg !4876
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4890
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !4891
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %6, metadata !4875, metadata !DIExpression()), !dbg !4876
  %7 = and i32 %6, -4194305, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %7, metadata !4875, metadata !DIExpression()), !dbg !4876
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4894
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !4895
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %8, metadata !4875, metadata !DIExpression()), !dbg !4876
  %9 = or i32 %8, 4194304, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %9, metadata !4875, metadata !DIExpression()), !dbg !4876
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4898
  tail call void @sfc_delay_ms(i32 noundef 1) #22, !dbg !4899
  %10 = icmp eq i32 %0, 0, !dbg !4900
  br i1 %10, label %12, label %11, !dbg !4902

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !4903
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !4905
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !4906
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !4907
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !4908
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !4909
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !4910
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !4911
  br label %12, !dbg !4912

12:                                               ; preds = %11, %1
  ret void, !dbg !4913
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #7 section ".ramTEXT" !dbg !4914 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %1, metadata !4916, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !4919
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !4920
  %3 = lshr i32 %2, 4, !dbg !4921
  %4 = and i32 %3, 7, !dbg !4921
  call void @llvm.dbg.value(metadata i32 %4, metadata !4917, metadata !DIExpression()), !dbg !4919
  %5 = icmp ne i32 %4, 7, !dbg !4922
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %6, metadata !4916, metadata !DIExpression()), !dbg !4919
  %9 = icmp ult i32 %4, 2, !dbg !4924
  %10 = zext i1 %9 to i32, !dbg !4924
  %11 = select i1 %8, i32 %10, i32 3, !dbg !4924
  ret i32 %11, !dbg !4925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 section ".ramTEXT" !dbg !4926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4930, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i32 %1, metadata !4931, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i32 0, metadata !4932, metadata !DIExpression()), !dbg !4933
  %3 = add i32 %1, -1, !dbg !4934
  %4 = icmp ult i32 %3, 3, !dbg !4934
  br i1 %4, label %5, label %8, !dbg !4934

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !4934
  %7 = load i32, i32* %6, align 4, !dbg !4934
  br label %8, !dbg !4934

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !4933
  call void @llvm.dbg.value(metadata i32 %9, metadata !4932, metadata !DIExpression()), !dbg !4933
  %10 = or i32 %9, %0, !dbg !4935
  call void @llvm.dbg.value(metadata i32 %10, metadata !4932, metadata !DIExpression()), !dbg !4933
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !4936
  ret void, !dbg !4937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4938 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4942, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.value(metadata i32 0, metadata !4943, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.value(metadata i32 0, metadata !4945, metadata !DIExpression()), !dbg !4946
  %2 = icmp eq i8* %0, null, !dbg !4947
  br i1 %2, label %25, label %3, !dbg !4949

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %4, metadata !4944, metadata !DIExpression()), !dbg !4946
  br label %5, !dbg !4951

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !4946
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !4946
  call void @llvm.dbg.value(metadata i32 %7, metadata !4945, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.value(metadata i32 %6, metadata !4943, metadata !DIExpression()), !dbg !4946
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !4952
  %9 = load i8, i8* %8, align 1, !dbg !4952
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !4954

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !4945, metadata !DIExpression()), !dbg !4946
  br label %12, !dbg !4955

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !4957
  br label %25, !dbg !4958

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !4946
  call void @llvm.dbg.value(metadata i32 %13, metadata !4945, metadata !DIExpression()), !dbg !4946
  %14 = add i32 %6, 2, !dbg !4959
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !4960
  %16 = add i32 %6, 1, !dbg !4961
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !4962
  %18 = load i8, i8* %17, align 1, !dbg !4962
  %19 = zext i8 %18 to i32, !dbg !4962
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #22, !dbg !4963
  %21 = load i8, i8* %17, align 1, !dbg !4964
  %22 = zext i8 %21 to i32, !dbg !4964
  %23 = add i32 %14, %22, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %23, metadata !4943, metadata !DIExpression()), !dbg !4946
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #20, !dbg !4966
  br label %5, !dbg !4951, !llvm.loop !4967

25:                                               ; preds = %1, %11
  ret void, !dbg !4969
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !4970 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4975, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %1, metadata !4976, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %2, metadata !4977, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %3, metadata !4978, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %4, metadata !4979, metadata !DIExpression()), !dbg !4986
  %7 = bitcast i32* %6 to i8*, !dbg !4987
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !4987
  %8 = add i32 %3, %1, !dbg !4988
  %9 = icmp ugt i32 %8, 160, !dbg !4990
  br i1 %9, label %59, label %10, !dbg !4991

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !4983, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 0, metadata !4981, metadata !DIExpression()), !dbg !4986
  %11 = icmp eq i32 %1, 0, !dbg !4992
  br i1 %11, label %41, label %12, !dbg !4995

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !4983, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %14, metadata !4981, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 0, metadata !4980, metadata !DIExpression()), !dbg !4986
  store i32 0, i32* %6, align 4, !dbg !4996
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %14, metadata !4981, metadata !DIExpression()), !dbg !4986
  %15 = icmp ult i32 %14, %1, !dbg !4999
  br i1 %15, label %16, label %29, !dbg !5001

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !4982, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %18, metadata !4981, metadata !DIExpression()), !dbg !4986
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !5002
  %20 = load i8, i8* %19, align 1, !dbg !5002
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !5004
  store i8 %20, i8* %21, align 1, !dbg !5005
  %22 = add nuw i32 %18, 1, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %22, metadata !4981, metadata !DIExpression()), !dbg !4986
  %23 = add nuw nsw i32 %17, 1, !dbg !5007
  call void @llvm.dbg.value(metadata i32 %23, metadata !4982, metadata !DIExpression()), !dbg !4986
  %24 = icmp ult i32 %22, %1, !dbg !4999
  %25 = icmp ult i32 %17, 3, !dbg !5008
  %26 = select i1 %24, i1 %25, i1 false, !dbg !5008
  br i1 %26, label %16, label %27, !dbg !5001, !llvm.loop !5009

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !5011
  br label %29, !dbg !5011

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !5011
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !5012
  call void @llvm.dbg.value(metadata i32 %30, metadata !4980, metadata !DIExpression()), !dbg !4986
  %32 = bitcast i8* %13 to i32*, !dbg !5011
  store volatile i32 %30, i32* %32, align 4, !dbg !5011
  %33 = icmp eq i32 %31, 4, !dbg !5013
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !5015
  br i1 %36, label %37, label %38, !dbg !5015

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !5016
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !5018
  br label %38, !dbg !5019

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !5020
  call void @llvm.dbg.value(metadata i8* %39, metadata !4983, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %31, metadata !4981, metadata !DIExpression()), !dbg !4986
  %40 = icmp ult i32 %31, %1, !dbg !4992
  br i1 %40, label %12, label %41, !dbg !4995, !llvm.loop !5021

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %42, metadata !4985, metadata !DIExpression()), !dbg !4986
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !5024
  %44 = icmp eq i32 %43, 0, !dbg !5024
  br i1 %44, label %46, label %45, !dbg !5026

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !5027
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !5029
  br label %46, !dbg !5030

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !5031
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !5032
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #22, !dbg !5033
  tail call fastcc void @sfc_MacWaitReady() #22, !dbg !5034
  tail call void @restore_interrupt_mask(i32 noundef %42) #20, !dbg !5035
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !4983, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %2, metadata !4977, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 0, metadata !4981, metadata !DIExpression()), !dbg !4986
  %47 = icmp eq i32 %3, 0, !dbg !5036
  br i1 %47, label %59, label %48, !dbg !5039

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %49, metadata !4983, metadata !DIExpression()), !dbg !4986
  br label %50, !dbg !5039

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !4977, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %52, metadata !4983, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %53, metadata !4981, metadata !DIExpression()), !dbg !4986
  %54 = load volatile i8, i8* %52, align 1, !dbg !5041
  store i8 %54, i8* %51, align 1, !dbg !5043
  %55 = add nuw i32 %53, 1, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %55, metadata !4981, metadata !DIExpression()), !dbg !4986
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !5045
  call void @llvm.dbg.value(metadata i8* %56, metadata !4977, metadata !DIExpression()), !dbg !4986
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %57, metadata !4983, metadata !DIExpression()), !dbg !4986
  %58 = icmp eq i32 %55, %3, !dbg !5036
  br i1 %58, label %59, label %50, !dbg !5039, !llvm.loop !5047

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !4986
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !5049
  ret i32 %60, !dbg !5049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #5 section ".ramTEXT" !dbg !5050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5052, metadata !DIExpression()), !dbg !5054
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %2, metadata !5053, metadata !DIExpression()), !dbg !5054
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !5056
  %4 = and i32 %3, 1, !dbg !5056
  %5 = or i32 %4, %0, !dbg !5058
  %6 = icmp eq i32 %5, 0, !dbg !5058
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !5058
  call void @llvm.dbg.value(metadata i32 %8, metadata !5053, metadata !DIExpression()), !dbg !5054
  %9 = or i32 %8, 8, !dbg !5059
  call void @llvm.dbg.value(metadata i32 %9, metadata !5053, metadata !DIExpression()), !dbg !5054
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5060
  ret void, !dbg !5061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #5 section ".ramTEXT" !dbg !5062 {
  tail call fastcc void @sfc_MacTrigger() #22, !dbg !5063
  tail call fastcc void @sfc_MacLeave() #22, !dbg !5064
  ret void, !dbg !5065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #5 section ".ramTEXT" !dbg !5066 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5070, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i32 0, metadata !5071, metadata !DIExpression()), !dbg !5072
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5073
  call void @llvm.dbg.value(metadata i32 %1, metadata !5070, metadata !DIExpression()), !dbg !5072
  %2 = or i32 %1, 12, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %2, metadata !5070, metadata !DIExpression()), !dbg !5072
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5075
  br label %3, !dbg !5076

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5077
  %5 = and i32 %4, 2, !dbg !5078
  %6 = icmp eq i32 %5, 0, !dbg !5079
  br i1 %6, label %3, label %7, !dbg !5076, !llvm.loop !5080

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5082
  %9 = and i32 %8, 1, !dbg !5083
  %10 = icmp eq i32 %9, 0, !dbg !5084
  br i1 %10, label %11, label %7, !dbg !5084, !llvm.loop !5085

11:                                               ; preds = %7
  ret void, !dbg !5087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #5 section ".ramTEXT" !dbg !5088 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %1, metadata !5090, metadata !DIExpression()), !dbg !5092
  %2 = and i32 %1, -268435477, !dbg !5093
  call void @llvm.dbg.value(metadata i32 %2, metadata !5090, metadata !DIExpression()), !dbg !5092
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5094
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5095
  call void @llvm.dbg.value(metadata i32 %3, metadata !5090, metadata !DIExpression()), !dbg !5092
  %4 = and i32 %3, -9, !dbg !5096
  call void @llvm.dbg.value(metadata i32 %4, metadata !5090, metadata !DIExpression()), !dbg !5092
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !5097
  ret void, !dbg !5098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #5 section ".ramTEXT" !dbg !5099 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !5102, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i32 0, metadata !5101, metadata !DIExpression()), !dbg !5103
  br label %1, !dbg !5104

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !5102, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i32 %3, metadata !5101, metadata !DIExpression()), !dbg !5103
  %4 = bitcast i8* %2 to i32*, !dbg !5106
  store volatile i32 0, i32* %4, align 4, !dbg !5106
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !5109
  call void @llvm.dbg.value(metadata i8* %5, metadata !5102, metadata !DIExpression()), !dbg !5103
  %6 = add nuw nsw i32 %3, 1, !dbg !5110
  call void @llvm.dbg.value(metadata i32 %6, metadata !5101, metadata !DIExpression()), !dbg !5103
  %7 = icmp eq i32 %6, 40, !dbg !5111
  br i1 %7, label %8, label %1, !dbg !5104, !llvm.loop !5112

8:                                                ; preds = %1
  ret void, !dbg !5114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !5115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5119, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 %1, metadata !5120, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %2, metadata !5121, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 %3, metadata !5122, metadata !DIExpression()), !dbg !5123
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #22, !dbg !5124
  ret i32 %5, !dbg !5125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !5126 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5130, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i32 %1, metadata !5131, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i8* %2, metadata !5132, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata i32 %3, metadata !5133, metadata !DIExpression()), !dbg !5139
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !5140
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #19, !dbg !5140
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !5134, metadata !DIExpression()), !dbg !5141
  %7 = add i32 %3, %1, !dbg !5142
  call void @llvm.dbg.value(metadata i32 %7, metadata !5138, metadata !DIExpression()), !dbg !5139
  %8 = icmp ugt i32 %7, 159, !dbg !5143
  br i1 %8, label %9, label %12, !dbg !5145

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.17, i32 0, i32 0), i32 noundef 496) #20, !dbg !5146
  br label %11, !dbg !5146

11:                                               ; preds = %11, %9
  br label %11, !dbg !5146, !llvm.loop !5150

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #20, !dbg !5151
  %14 = icmp ne i8* %2, null, !dbg !5152
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !5154
  br i1 %16, label %17, label %20, !dbg !5154

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !5155
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !5157
  br label %20, !dbg !5158

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !5159
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #19, !dbg !5160
  ret i32 %21, !dbg !5161
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5162 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5166, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 %1, metadata !5167, metadata !DIExpression()), !dbg !5171
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !5172
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #19, !dbg !5172
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !5168, metadata !DIExpression()), !dbg !5173
  %6 = bitcast i32* %4 to i8*, !dbg !5174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !5174
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !5175
  call void @llvm.dbg.value(metadata i32 %7, metadata !5169, metadata !DIExpression()), !dbg !5171
  store i32 %7, i32* %4, align 4, !dbg !5176
  %8 = add i32 %1, 4, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %8, metadata !5170, metadata !DIExpression()), !dbg !5171
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #20, !dbg !5178
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !5179
  call void @llvm.dbg.value(metadata i32* %4, metadata !5169, metadata !DIExpression(DW_OP_deref)), !dbg !5171
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #20, !dbg !5180
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !5181
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !5182
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #19, !dbg !5182
  ret i32 %12, !dbg !5183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !5184 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5186, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %1, metadata !5187, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i8* %2, metadata !5188, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %3, metadata !5189, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %4, metadata !5190, metadata !DIExpression()), !dbg !5193
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !5194
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #19, !dbg !5194
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !5191, metadata !DIExpression()), !dbg !5195
  %8 = add i32 %3, %1, !dbg !5196
  call void @llvm.dbg.value(metadata i32 %8, metadata !5192, metadata !DIExpression()), !dbg !5193
  %9 = icmp ugt i32 %8, 160, !dbg !5197
  br i1 %9, label %10, label %13, !dbg !5199

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.17, i32 0, i32 0), i32 noundef 544) #20, !dbg !5200
  br label %12, !dbg !5200

12:                                               ; preds = %12, %10
  br label %12, !dbg !5200, !llvm.loop !5204

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #20, !dbg !5205
  %15 = icmp ne i8* %2, null, !dbg !5206
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !5208
  br i1 %17, label %18, label %21, !dbg !5208

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !5209
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #20, !dbg !5211
  br label %21, !dbg !5212

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !5213
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #19, !dbg !5214
  ret i32 %22, !dbg !5215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !5216 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #20, !dbg !5217
  ret void, !dbg !5218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !5219 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #20, !dbg !5220
  ret void, !dbg !5221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #0 section ".ramTEXT" !dbg !5222 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !5229
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !5229
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !5226, metadata !DIExpression()), !dbg !5230
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #22, !dbg !5231
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !5232
  %5 = load i8, i8* %4, align 1, !dbg !5232
  %6 = zext i8 %5 to i32, !dbg !5233
  %7 = shl nuw i32 %6, 24, !dbg !5234
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !5235
  %9 = load i8, i8* %8, align 1, !dbg !5235
  %10 = zext i8 %9 to i32, !dbg !5236
  %11 = shl nuw nsw i32 %10, 16, !dbg !5237
  %12 = or i32 %11, %7, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %12, metadata !5225, metadata !DIExpression()), !dbg !5239
  %13 = call i32 @sfc_GetDirectMode() #20, !dbg !5240
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !5241
  call void @llvm.dbg.value(metadata i32 1, metadata !5224, metadata !DIExpression()), !dbg !5239
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !5224, metadata !DIExpression()), !dbg !5239
  br label %15, !dbg !5242

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5224, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !5228, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5239
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !5244
  %18 = load i8, i8* %17, align 4, !dbg !5244
  %19 = icmp eq i8 %18, %14, !dbg !5248
  br i1 %19, label %20, label %44, !dbg !5249

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !5250
  %22 = load i32, i32* %21, align 4, !dbg !5250
  %23 = icmp eq i32 %22, %12, !dbg !5251
  br i1 %23, label %24, label %44, !dbg !5252

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !5253
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5254
  %26 = add nsw i32 %16, -4, !dbg !5256
  %27 = icmp ult i32 %26, 5, !dbg !5256
  br i1 %27, label %42, label %28, !dbg !5258

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !5259
  %30 = icmp ult i32 %29, 3, !dbg !5259
  br i1 %30, label %42, label %31, !dbg !5261

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !5262
  %33 = icmp ult i32 %32, 3, !dbg !5262
  br i1 %33, label %34, label %40, !dbg !5264

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !5265
  %36 = icmp eq i32 %35, 1, !dbg !5265
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !5268
  %39 = select i1 %38, i32 49, i32 1, !dbg !5268
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !5269
  br label %42, !dbg !5270

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !5271
  br i1 %41, label %42, label %67, !dbg !5273

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !5274
  br label %67, !dbg !5275

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %45, metadata !5224, metadata !DIExpression()), !dbg !5239
  %46 = icmp eq i32 %45, 13, !dbg !5277
  br i1 %46, label %47, label %15, !dbg !5242, !llvm.loop !5278

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5280
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !5281
  %49 = icmp eq i32 %48, 255, !dbg !5283
  br i1 %49, label %50, label %67, !dbg !5284

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #20, !dbg !5285
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5287
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !5228, metadata !DIExpression()), !dbg !5239
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !5288
  %53 = load i8, i8* %52, align 4, !dbg !5288
  %54 = load i8, i8* %2, align 1, !dbg !5290
  %55 = icmp eq i8 %53, %54, !dbg !5291
  br i1 %55, label %56, label %60, !dbg !5292

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !5228, metadata !DIExpression()), !dbg !5239
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !5293
  %58 = load i32, i32* %57, align 4, !dbg !5293
  %59 = icmp eq i32 %58, %12, !dbg !5294
  br i1 %59, label %67, label %60, !dbg !5295

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i32 0, i32 0)) #20, !dbg !5296
  %61 = load i8, i8* %2, align 1, !dbg !5298
  %62 = zext i8 %61 to i32, !dbg !5298
  %63 = load i8, i8* %4, align 1, !dbg !5298
  %64 = zext i8 %63 to i32, !dbg !5298
  %65 = load i8, i8* %8, align 1, !dbg !5298
  %66 = zext i8 %65 to i32, !dbg !5298
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #20, !dbg !5298
  br label %67, !dbg !5299

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !5239
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !5239
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !5300
  ret i32 %69, !dbg !5300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5301 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5305, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i32 %1, metadata !5306, metadata !DIExpression()), !dbg !5309
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !5310
  call void @llvm.dbg.value(metadata i8 -97, metadata !5307, metadata !DIExpression()), !dbg !5309
  store i8 -97, i8* %3, align 1, !dbg !5311
  call void @llvm.dbg.value(metadata i8* %3, metadata !5307, metadata !DIExpression(DW_OP_deref)), !dbg !5309
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #20, !dbg !5312
  call void @llvm.dbg.value(metadata i32 %4, metadata !5308, metadata !DIExpression()), !dbg !5309
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !5313
  ret i32 %4, !dbg !5314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5319, metadata !DIExpression()), !dbg !5320
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #20, !dbg !5321
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !5323
  br i1 %3, label %5, label %4, !dbg !5324

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !5325
  br label %5, !dbg !5327

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #22, !dbg !5328
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #22, !dbg !5329
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !5330

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #20, !dbg !5331
  br label %17, !dbg !5334

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !5335
  %10 = icmp eq i32 %9, 32, !dbg !5339
  br i1 %10, label %11, label %12, !dbg !5340

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #20, !dbg !5341
  br label %17, !dbg !5343

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #20, !dbg !5344
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #20, !dbg !5346
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.33, i32 0, i32 0), i32 noundef 352) #20, !dbg !5349
  br label %16, !dbg !5349

16:                                               ; preds = %14, %16
  br label %16, !dbg !5349, !llvm.loop !5353

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !5354
  ret void, !dbg !5355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !5356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5358, metadata !DIExpression()), !dbg !5360
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !5361

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !5362
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !5365

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !5366
  %6 = icmp eq i32 %5, 49, !dbg !5370
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !5371
  call void @llvm.dbg.value(metadata i8* %7, metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5372

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5373

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #20, !dbg !5376
  call void @llvm.dbg.value(metadata i8* %10, metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5379

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !5380
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !5382

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !5383
  %15 = icmp eq i32 %14, 49, !dbg !5387
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !5388
  call void @llvm.dbg.value(metadata i8* %16, metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5389

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5390

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #20, !dbg !5393
  call void @llvm.dbg.value(metadata i8* %19, metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5396

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !5397
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !5399

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !5400
  %24 = icmp eq i32 %23, 49, !dbg !5404
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !5405
  call void @llvm.dbg.value(metadata i8* %25, metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5406

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5407

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #20, !dbg !5410
  call void @llvm.dbg.value(metadata i8* %28, metadata !5359, metadata !DIExpression()), !dbg !5360
  br label %35, !dbg !5413

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.33, i32 0, i32 0), i32 noundef 268) #20, !dbg !5414
  br label %31, !dbg !5414

31:                                               ; preds = %31, %29
  br label %31, !dbg !5414, !llvm.loop !5417

32:                                               ; preds = %2
  br label %35, !dbg !5418

33:                                               ; preds = %11
  br label %35, !dbg !5418

34:                                               ; preds = %20
  br label %35, !dbg !5418

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !5419
  call void @llvm.dbg.value(metadata i8* %36, metadata !5359, metadata !DIExpression()), !dbg !5360
  tail call void @sfc_Command_List(i8* noundef %36) #20, !dbg !5418
  ret void, !dbg !5420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #0 section ".ramTEXT" !dbg !5421 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !5427
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !5427
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !5425, metadata !DIExpression()), !dbg !5428
  %3 = tail call i32 @sfc_getMaxGPRamSize() #20, !dbg !5429
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !5430
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5431
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #22, !dbg !5432
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !5433
  %6 = load i8, i8* %5, align 1, !dbg !5433
  %7 = zext i8 %6 to i32, !dbg !5434
  %8 = shl nuw i32 %7, 24, !dbg !5435
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !5436
  %10 = load i8, i8* %9, align 1, !dbg !5436
  %11 = zext i8 %10 to i32, !dbg !5437
  %12 = shl nuw nsw i32 %11, 16, !dbg !5438
  %13 = or i32 %12, %8, !dbg !5439
  call void @llvm.dbg.value(metadata i32 %13, metadata !5424, metadata !DIExpression()), !dbg !5440
  %14 = load i8, i8* %2, align 1, !dbg !5441
  %15 = zext i8 %14 to i32, !dbg !5441
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.34, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #20, !dbg !5441
  call void @llvm.dbg.value(metadata i32 1, metadata !5423, metadata !DIExpression()), !dbg !5440
  br label %16, !dbg !5442

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5423, metadata !DIExpression()), !dbg !5440
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !5444
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !5426, metadata !DIExpression()), !dbg !5440
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !5447
  %20 = load i8, i8* %19, align 4, !dbg !5447
  %21 = load i8, i8* %2, align 1, !dbg !5449
  %22 = icmp eq i8 %20, %21, !dbg !5450
  br i1 %22, label %23, label %43, !dbg !5451

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !5452
  %25 = load i32, i32* %24, align 4, !dbg !5452
  %26 = icmp eq i32 %25, %13, !dbg !5453
  br i1 %26, label %27, label %43, !dbg !5454

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !5455
  %29 = load i8*, i8** %28, align 4, !dbg !5455
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.35, i32 0, i32 0), i8* noundef %29) #20, !dbg !5455
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5457
  %30 = add nsw i32 %17, -4, !dbg !5458
  %31 = icmp ult i32 %30, 5, !dbg !5458
  br i1 %31, label %41, label %32, !dbg !5460

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !5461
  %34 = icmp ult i32 %33, 3, !dbg !5461
  br i1 %34, label %41, label %35, !dbg !5463

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !5464
  %37 = icmp ult i32 %36, 3, !dbg !5464
  br i1 %37, label %41, label %38, !dbg !5466

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !5467
  br i1 %39, label %40, label %43, !dbg !5469

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %44, metadata !5423, metadata !DIExpression()), !dbg !5440
  br label %66, !dbg !5472

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !5473
  br label %43, !dbg !5474

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !5474
  call void @llvm.dbg.value(metadata i32 %44, metadata !5423, metadata !DIExpression()), !dbg !5440
  %45 = icmp eq i32 %44, 13, !dbg !5475
  br i1 %45, label %46, label %16, !dbg !5442, !llvm.loop !5476

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !5478
  %48 = icmp eq i32 %47, 255, !dbg !5480
  br i1 %48, label %49, label %66, !dbg !5472

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #20, !dbg !5481
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5483
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !5426, metadata !DIExpression()), !dbg !5440
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !5484
  %52 = load i8, i8* %51, align 4, !dbg !5484
  %53 = load i8, i8* %2, align 1, !dbg !5486
  %54 = icmp eq i8 %52, %53, !dbg !5487
  br i1 %54, label %55, label %59, !dbg !5488

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !5426, metadata !DIExpression()), !dbg !5440
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !5489
  %57 = load i32, i32* %56, align 4, !dbg !5489
  %58 = icmp eq i32 %57, %13, !dbg !5490
  br i1 %58, label %71, label %59, !dbg !5491

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i32 0, i32 0)) #20, !dbg !5492
  %60 = load i8, i8* %2, align 1, !dbg !5494
  %61 = zext i8 %60 to i32, !dbg !5494
  %62 = load i8, i8* %5, align 1, !dbg !5494
  %63 = zext i8 %62 to i32, !dbg !5494
  %64 = load i8, i8* %9, align 1, !dbg !5494
  %65 = zext i8 %64 to i32, !dbg !5494
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #20, !dbg !5494
  br label %66, !dbg !5495

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5496
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !5496
  br i1 %68, label %69, label %71, !dbg !5498

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !5499
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.36, i32 0, i32 0), i8* noundef %70) #20, !dbg !5499
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5501
  br label %71, !dbg !5502

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !5440
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !5503
  ret void, !dbg !5503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5504 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !5506, metadata !DIExpression()), !dbg !5511
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !5512
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5512
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !5509, metadata !DIExpression()), !dbg !5513
  tail call void @sfc_Init(i32 noundef %0) #20, !dbg !5514
  %4 = tail call i32 @sfc_getMaxGPRamSize() #20, !dbg !5515
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !5516
  tail call fastcc void @flash_reset() #22, !dbg !5517
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5518
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #22, !dbg !5519
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !5520
  %7 = load i8, i8* %6, align 1, !dbg !5520
  %8 = zext i8 %7 to i32, !dbg !5521
  %9 = shl nuw i32 %8, 24, !dbg !5522
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !5523
  %11 = load i8, i8* %10, align 1, !dbg !5523
  %12 = zext i8 %11 to i32, !dbg !5524
  %13 = shl nuw nsw i32 %12, 16, !dbg !5525
  %14 = or i32 %13, %9, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %14, metadata !5508, metadata !DIExpression()), !dbg !5511
  %15 = load i8, i8* %3, align 1, !dbg !5527
  %16 = zext i8 %15 to i32, !dbg !5527
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.34, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #20, !dbg !5527
  call void @llvm.dbg.value(metadata i32 1, metadata !5507, metadata !DIExpression()), !dbg !5511
  br label %17, !dbg !5528

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !5507, metadata !DIExpression()), !dbg !5511
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !5530
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !5510, metadata !DIExpression()), !dbg !5511
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !5533
  %21 = load i8, i8* %20, align 4, !dbg !5533
  %22 = load i8, i8* %3, align 1, !dbg !5535
  %23 = icmp eq i8 %21, %22, !dbg !5536
  br i1 %23, label %24, label %31, !dbg !5537

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !5538
  %26 = load i32, i32* %25, align 4, !dbg !5538
  %27 = icmp eq i32 %26, %14, !dbg !5539
  br i1 %27, label %28, label %31, !dbg !5540

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !5541
  %30 = load i8*, i8** %29, align 4, !dbg !5541
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.35, i32 0, i32 0), i8* noundef %30) #20, !dbg !5541
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5543
  br label %31, !dbg !5544

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !5545
  call void @llvm.dbg.value(metadata i32 %32, metadata !5507, metadata !DIExpression()), !dbg !5511
  %33 = icmp eq i32 %32, 13, !dbg !5546
  br i1 %33, label %34, label %17, !dbg !5528, !llvm.loop !5547

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5549
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !5549
  br i1 %36, label %37, label %39, !dbg !5551

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !5552
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.36, i32 0, i32 0), i8* noundef %38) #20, !dbg !5552
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5554
  br label %39, !dbg !5555

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5556
  ret void, !dbg !5556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #0 section ".ramTEXT" !dbg !5557 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #20, !dbg !5558
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !5559
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #20, !dbg !5560
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !5561
  ret void, !dbg !5562
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5563 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !5567, metadata !DIExpression()), !dbg !5570
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5571
  call void @llvm.dbg.value(metadata i8 0, metadata !5569, metadata !DIExpression()), !dbg !5570
  store i8 0, i8* %2, align 1, !dbg !5572
  call void @llvm.dbg.value(metadata i32 0, metadata !5568, metadata !DIExpression()), !dbg !5570
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !5568, metadata !DIExpression()), !dbg !5570
  %5 = icmp sgt i32 %4, 0, !dbg !5573
  br i1 %5, label %6, label %18, !dbg !5576

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !5568, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i8* %2, metadata !5569, metadata !DIExpression(DW_OP_deref)), !dbg !5570
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #22, !dbg !5577
  %9 = icmp slt i32 %8, 0, !dbg !5580
  br i1 %9, label %18, label %10, !dbg !5581

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !5582
  call void @llvm.dbg.value(metadata i8 %11, metadata !5569, metadata !DIExpression()), !dbg !5570
  %12 = and i8 %11, 1, !dbg !5584
  %13 = icmp eq i8 %12, 0, !dbg !5584
  br i1 %13, label %14, label %15, !dbg !5585

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5586
  ret i32 0, !dbg !5587

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !5589
  %16 = add nuw nsw i32 %7, 1, !dbg !5590
  call void @llvm.dbg.value(metadata i32 %16, metadata !5568, metadata !DIExpression()), !dbg !5570
  %17 = icmp eq i32 %16, %4, !dbg !5573
  br i1 %17, label %18, label %6, !dbg !5576, !llvm.loop !5591

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.33, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.41, i32 0, i32 0)) #21, !dbg !5593
  unreachable, !dbg !5593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5594 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5598, metadata !DIExpression()), !dbg !5601
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5602
  call void @llvm.dbg.value(metadata i8 5, metadata !5600, metadata !DIExpression()), !dbg !5601
  store i8 5, i8* %2, align 1, !dbg !5603
  call void @llvm.dbg.value(metadata i8* %2, metadata !5600, metadata !DIExpression(DW_OP_deref)), !dbg !5601
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #20, !dbg !5604
  call void @llvm.dbg.value(metadata i32 %3, metadata !5599, metadata !DIExpression()), !dbg !5601
  %4 = icmp ne i32 %3, 1, !dbg !5605
  %5 = sext i1 %4 to i32, !dbg !5601
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5607
  ret i32 %5, !dbg !5607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5608 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5610, metadata !DIExpression()), !dbg !5614
  call void @llvm.dbg.value(metadata i32 %1, metadata !5611, metadata !DIExpression()), !dbg !5614
  %4 = bitcast i32* %3 to i8*, !dbg !5615
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5615
  call void @llvm.dbg.value(metadata i32 0, metadata !5612, metadata !DIExpression()), !dbg !5614
  store i32 144, i32* %3, align 4, !dbg !5616
  call void @llvm.dbg.value(metadata i8 undef, metadata !5612, metadata !DIExpression()), !dbg !5614
  call void @llvm.dbg.value(metadata i32* %3, metadata !5612, metadata !DIExpression(DW_OP_deref)), !dbg !5614
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #20, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %5, metadata !5613, metadata !DIExpression()), !dbg !5614
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5618
  ret i32 %5, !dbg !5619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5620 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5622, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %1, metadata !5623, metadata !DIExpression()), !dbg !5626
  %4 = bitcast i32* %3 to i8*, !dbg !5627
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5627
  call void @llvm.dbg.value(metadata i32 0, metadata !5624, metadata !DIExpression()), !dbg !5626
  store i32 144, i32* %3, align 4, !dbg !5628
  call void @llvm.dbg.value(metadata i8 undef, metadata !5624, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32* %3, metadata !5624, metadata !DIExpression(DW_OP_deref)), !dbg !5626
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #20, !dbg !5629
  call void @llvm.dbg.value(metadata i32 %5, metadata !5625, metadata !DIExpression()), !dbg !5626
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5630
  ret i32 %5, !dbg !5631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !5632 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5636, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.value(metadata i32 %1, metadata !5637, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.value(metadata i32 %2, metadata !5638, metadata !DIExpression()), !dbg !5641
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !5642
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5642
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !5639, metadata !DIExpression()), !dbg !5643
  %6 = icmp eq i32 %2, 0, !dbg !5644
  br i1 %6, label %18, label %7, !dbg !5646

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #22, !dbg !5647
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !5649
  store i8 3, i8* %5, align 1, !dbg !5650
  %9 = lshr i32 %1, 16, !dbg !5651
  %10 = trunc i32 %9 to i8, !dbg !5652
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !5653
  store i8 %10, i8* %11, align 1, !dbg !5654
  %12 = lshr i32 %1, 8, !dbg !5655
  %13 = trunc i32 %12 to i8, !dbg !5656
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !5657
  store i8 %13, i8* %14, align 1, !dbg !5658
  %15 = trunc i32 %1 to i8, !dbg !5659
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !5660
  store i8 %15, i8* %16, align 1, !dbg !5661
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #20, !dbg !5662
  call void @llvm.dbg.value(metadata i32 %17, metadata !5640, metadata !DIExpression()), !dbg !5641
  br label %18, !dbg !5663

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !5641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !5664
  ret i32 %19, !dbg !5664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !5665 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5669, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 %1, metadata !5670, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 %2, metadata !5671, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 %3, metadata !5672, metadata !DIExpression()), !dbg !5678
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !5679
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #19, !dbg !5679
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !5673, metadata !DIExpression()), !dbg !5680
  %7 = icmp eq i32 %2, 0, !dbg !5681
  br i1 %7, label %33, label %8, !dbg !5683

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #22, !dbg !5684
  store i8 11, i8* %6, align 1, !dbg !5686
  %10 = lshr i32 %1, 16, !dbg !5687
  %11 = trunc i32 %10 to i8, !dbg !5688
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !5689
  store i8 %11, i8* %12, align 1, !dbg !5690
  %13 = lshr i32 %1, 8, !dbg !5691
  %14 = trunc i32 %13 to i8, !dbg !5692
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !5693
  store i8 %14, i8* %15, align 1, !dbg !5694
  %16 = trunc i32 %1 to i8, !dbg !5695
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !5696
  store i8 %16, i8* %17, align 1, !dbg !5697
  call void @llvm.dbg.value(metadata i32 4, metadata !5675, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 0, metadata !5677, metadata !DIExpression()), !dbg !5678
  %18 = icmp sgt i32 %3, 0, !dbg !5698
  br i1 %18, label %19, label %30, !dbg !5701

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !5701
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !5701
  br label %22, !dbg !5701

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !5677, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 undef, metadata !5675, metadata !DIExpression()), !dbg !5678
  %24 = add nuw nsw i32 %23, 4, !dbg !5702
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !5704
  store i8 0, i8* %25, align 1, !dbg !5705
  call void @llvm.dbg.value(metadata i32 undef, metadata !5675, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5678
  %26 = add nuw nsw i32 %23, 1, !dbg !5706
  call void @llvm.dbg.value(metadata i32 %26, metadata !5677, metadata !DIExpression()), !dbg !5678
  %27 = icmp eq i32 %23, %21, !dbg !5707
  br i1 %27, label %28, label %22, !dbg !5701, !llvm.loop !5708

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !5701
  br label %30, !dbg !5710

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !5678
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #20, !dbg !5710
  call void @llvm.dbg.value(metadata i32 %32, metadata !5676, metadata !DIExpression()), !dbg !5678
  br label %33, !dbg !5711

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !5678
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #19, !dbg !5712
  ret i32 %34, !dbg !5712
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5713 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5715, metadata !DIExpression()), !dbg !5718
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5719
  call void @llvm.dbg.value(metadata i8 53, metadata !5717, metadata !DIExpression()), !dbg !5718
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !5720
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !5722

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i8 53, i8* %2, align 1, !dbg !5723
  br label %10, !dbg !5725

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i8 43, i8* %2, align 1, !dbg !5726
  br label %10, !dbg !5729

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i8 112, i8* %2, align 1, !dbg !5730
  br label %10, !dbg !5733

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #20, !dbg !5734
  call void @llvm.dbg.value(metadata i8 %8, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i8 %8, i8* %2, align 1, !dbg !5737
  br label %10, !dbg !5738

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.48, i32 0, i32 0)) #20, !dbg !5739
  call void @llvm.dbg.value(metadata i8 5, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i8 5, i8* %2, align 1, !dbg !5741
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !5717, metadata !DIExpression(DW_OP_deref)), !dbg !5718
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #20, !dbg !5742
  call void @llvm.dbg.value(metadata i32 %11, metadata !5716, metadata !DIExpression()), !dbg !5718
  %12 = icmp ne i32 %11, 1, !dbg !5743
  %13 = sext i1 %12 to i32, !dbg !5718
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5745
  ret i32 %13, !dbg !5745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #0 section ".ramTEXT" !dbg !5746 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5749
  call void @llvm.dbg.value(metadata i8 0, metadata !5748, metadata !DIExpression()), !dbg !5750
  store i8 0, i8* %1, align 1, !dbg !5751
  call void @llvm.dbg.value(metadata i8* %1, metadata !5748, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #22, !dbg !5752
  %3 = icmp slt i32 %2, 0, !dbg !5754
  br i1 %3, label %9, label %4, !dbg !5755

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !5756
  call void @llvm.dbg.value(metadata i8 %5, metadata !5748, metadata !DIExpression()), !dbg !5750
  %6 = and i8 %5, 28, !dbg !5758
  %7 = icmp eq i8 %6, 0, !dbg !5759
  br i1 %7, label %9, label %8, !dbg !5760

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !5748, metadata !DIExpression()), !dbg !5750
  store i8 0, i8* %1, align 1, !dbg !5761
  call void @llvm.dbg.value(metadata i8* %1, metadata !5748, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #22, !dbg !5763
  br label %9, !dbg !5764

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !5750
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5765
  ret i32 %10, !dbg !5765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !5766 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5768, metadata !DIExpression()), !dbg !5771
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5772
  call void @llvm.dbg.value(metadata i8 1, metadata !5770, metadata !DIExpression()), !dbg !5771
  store i8 1, i8* %2, align 1, !dbg !5773
  call void @llvm.dbg.value(metadata i8* %2, metadata !5770, metadata !DIExpression(DW_OP_deref)), !dbg !5771
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #20, !dbg !5774
  call void @llvm.dbg.value(metadata i32 %3, metadata !5769, metadata !DIExpression()), !dbg !5771
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !5775
  ret void, !dbg !5775
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #0 section ".ramTEXT" !dbg !5776 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5779
  call void @llvm.dbg.value(metadata i8 0, metadata !5778, metadata !DIExpression()), !dbg !5780
  store i8 0, i8* %1, align 1, !dbg !5781
  call void @llvm.dbg.value(metadata i8* %1, metadata !5778, metadata !DIExpression(DW_OP_deref)), !dbg !5780
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #22, !dbg !5782
  %3 = icmp slt i32 %2, 0, !dbg !5784
  br i1 %3, label %7, label %4, !dbg !5785

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !5786
  call void @llvm.dbg.value(metadata i8 %5, metadata !5778, metadata !DIExpression()), !dbg !5780
  %6 = or i8 %5, 28, !dbg !5786
  call void @llvm.dbg.value(metadata i8 %6, metadata !5778, metadata !DIExpression()), !dbg !5780
  store i8 %6, i8* %1, align 1, !dbg !5786
  call void @llvm.dbg.value(metadata i8* %1, metadata !5778, metadata !DIExpression(DW_OP_deref)), !dbg !5780
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #22, !dbg !5787
  br label %7, !dbg !5788

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !5780
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5789
  ret i32 %8, !dbg !5789
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #0 section ".ramTEXT" !dbg !5790 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5793
  call void @llvm.dbg.value(metadata i8 6, metadata !5792, metadata !DIExpression()), !dbg !5794
  store i8 6, i8* %1, align 1, !dbg !5795
  call void @llvm.dbg.value(metadata i8* %1, metadata !5792, metadata !DIExpression(DW_OP_deref)), !dbg !5794
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #20, !dbg !5796
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5797
  ret i32 %2, !dbg !5798
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #0 section ".ramTEXT" !dbg !5799 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5802
  call void @llvm.dbg.value(metadata i8 4, metadata !5801, metadata !DIExpression()), !dbg !5803
  store i8 4, i8* %1, align 1, !dbg !5804
  call void @llvm.dbg.value(metadata i8* %1, metadata !5801, metadata !DIExpression(DW_OP_deref)), !dbg !5803
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #20, !dbg !5805
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !5806
  ret i32 %2, !dbg !5807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5808 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !5812, metadata !DIExpression()), !dbg !5816
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !5817
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5817
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !5813, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 0, metadata !5815, metadata !DIExpression()), !dbg !5816
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !5819
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !5821
  br label %5, !dbg !5822

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %6, metadata !5815, metadata !DIExpression()), !dbg !5816
  %7 = icmp eq i32 %6, -121, !dbg !5825
  br i1 %7, label %5, label %8, !dbg !5826, !llvm.loop !5827

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5829
  call void @llvm.dbg.value(metadata i32 %9, metadata !5814, metadata !DIExpression()), !dbg !5816
  store i8 -40, i8* %3, align 1, !dbg !5830
  %10 = lshr i32 %0, 16, !dbg !5831
  %11 = trunc i32 %10 to i8, !dbg !5832
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !5833
  store i8 %11, i8* %12, align 1, !dbg !5834
  %13 = lshr i32 %0, 8, !dbg !5835
  %14 = trunc i32 %13 to i8, !dbg !5836
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !5837
  store i8 %14, i8* %15, align 1, !dbg !5838
  %16 = trunc i32 %0 to i8, !dbg !5839
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !5840
  store i8 %16, i8* %17, align 1, !dbg !5841
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !5842
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #20, !dbg !5843
  call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !5844
  br label %19, !dbg !5845

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %20, metadata !5815, metadata !DIExpression()), !dbg !5816
  %21 = icmp eq i32 %20, -121, !dbg !5848
  br i1 %21, label %19, label %22, !dbg !5849, !llvm.loop !5850

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #22, !dbg !5852
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5853
  ret i32 0, !dbg !5853
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5854 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !5856, metadata !DIExpression()), !dbg !5860
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !5861
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5861
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !5857, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 0, metadata !5859, metadata !DIExpression()), !dbg !5860
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !5863
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !5865
  br label %5, !dbg !5866

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %6, metadata !5859, metadata !DIExpression()), !dbg !5860
  %7 = icmp eq i32 %6, -121, !dbg !5869
  br i1 %7, label %5, label %8, !dbg !5870, !llvm.loop !5871

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5873
  call void @llvm.dbg.value(metadata i32 %9, metadata !5858, metadata !DIExpression()), !dbg !5860
  store i8 82, i8* %3, align 1, !dbg !5874
  %10 = lshr i32 %0, 16, !dbg !5875
  %11 = trunc i32 %10 to i8, !dbg !5876
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !5877
  store i8 %11, i8* %12, align 1, !dbg !5878
  %13 = lshr i32 %0, 8, !dbg !5879
  %14 = trunc i32 %13 to i8, !dbg !5880
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !5881
  store i8 %14, i8* %15, align 1, !dbg !5882
  %16 = trunc i32 %0 to i8, !dbg !5883
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !5884
  store i8 %16, i8* %17, align 1, !dbg !5885
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !5886
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #20, !dbg !5887
  br label %19, !dbg !5888

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %20, metadata !5859, metadata !DIExpression()), !dbg !5860
  %21 = icmp eq i32 %20, -121, !dbg !5891
  br i1 %21, label %19, label %22, !dbg !5892, !llvm.loop !5893

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !5895
  %23 = call i32 @flash_write_disable() #22, !dbg !5896
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5897
  ret i32 0, !dbg !5897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5898 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !5900, metadata !DIExpression()), !dbg !5904
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !5905
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5905
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !5901, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.value(metadata i32 0, metadata !5903, metadata !DIExpression()), !dbg !5904
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !5907
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !5909
  br label %5, !dbg !5910

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %6, metadata !5903, metadata !DIExpression()), !dbg !5904
  %7 = icmp eq i32 %6, -121, !dbg !5913
  br i1 %7, label %5, label %8, !dbg !5914, !llvm.loop !5915

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %9, metadata !5902, metadata !DIExpression()), !dbg !5904
  store i8 32, i8* %3, align 1, !dbg !5918
  %10 = lshr i32 %0, 16, !dbg !5919
  %11 = trunc i32 %10 to i8, !dbg !5920
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !5921
  store i8 %11, i8* %12, align 1, !dbg !5922
  %13 = lshr i32 %0, 8, !dbg !5923
  %14 = trunc i32 %13 to i8, !dbg !5924
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !5925
  store i8 %14, i8* %15, align 1, !dbg !5926
  %16 = trunc i32 %0 to i8, !dbg !5927
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !5928
  store i8 %16, i8* %17, align 1, !dbg !5929
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !5930
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #20, !dbg !5931
  call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !5932
  br label %19, !dbg !5933

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %20, metadata !5903, metadata !DIExpression()), !dbg !5904
  %21 = icmp eq i32 %20, -121, !dbg !5936
  br i1 %21, label %19, label %22, !dbg !5937, !llvm.loop !5938

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #22, !dbg !5940
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !5941
  ret i32 0, !dbg !5941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #0 section ".ramTEXT" !dbg !5942 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !5945
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !5945
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !5944, metadata !DIExpression()), !dbg !5946
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !5947
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !5949
  %4 = tail call i32 @flash_write_enable() #22, !dbg !5950
  %5 = tail call i32 @flash_unprotect() #22, !dbg !5951
  store i8 96, i8* %2, align 1, !dbg !5952
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #20, !dbg !5953
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #22, !dbg !5954
  %8 = call i32 @flash_write_disable() #22, !dbg !5956
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !5957
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !5958
  ret i32 0, !dbg !5958
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5963, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i32 %1, metadata !5964, metadata !DIExpression()), !dbg !5965
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !5964, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i32 %0, metadata !5963, metadata !DIExpression()), !dbg !5965
  br i1 %3, label %4, label %14, !dbg !5966

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5964, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i32 %6, metadata !5963, metadata !DIExpression()), !dbg !5965
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #22, !dbg !5967
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !5970
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !5971
  %10 = load i32, i32* %9, align 4, !dbg !5971
  %11 = add i32 %10, %6, !dbg !5972
  call void @llvm.dbg.value(metadata i32 %11, metadata !5963, metadata !DIExpression()), !dbg !5965
  %12 = sub i32 %5, %10, !dbg !5973
  call void @llvm.dbg.value(metadata i32 %12, metadata !5964, metadata !DIExpression()), !dbg !5965
  %13 = icmp sgt i32 %12, 0, !dbg !5974
  br i1 %13, label %4, label %14, !dbg !5975, !llvm.loop !5976

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !5978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !5979 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5983, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %1, metadata !5984, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %2, metadata !5985, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 0, metadata !5988, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 0, metadata !5989, metadata !DIExpression()), !dbg !5997
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !5998
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #19, !dbg !5998
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !5991, metadata !DIExpression()), !dbg !5999
  call void @llvm.dbg.value(metadata i32 %1, metadata !5994, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i8* %0, metadata !5995, metadata !DIExpression()), !dbg !5997
  %6 = icmp eq i32 %2, 0, !dbg !6000
  br i1 %6, label %86, label %7, !dbg !6002

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !6003
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !6005
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !6006
  %11 = load i32, i32* %10, align 4, !dbg !6006
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !6007
  %13 = load i32, i32* %12, align 4, !dbg !6007
  %14 = mul i32 %13, %11, !dbg !6008
  %15 = icmp ugt i32 %8, %14, !dbg !6009
  br i1 %15, label %86, label %16, !dbg !6010

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #22, !dbg !6011
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %19, metadata !5992, metadata !DIExpression()), !dbg !5997
  %20 = icmp eq i32 %19, -121, !dbg !6015
  br i1 %20, label %18, label %21, !dbg !6016, !llvm.loop !6017

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !6020
  %22 = tail call i32 @sfc_GetDirectMode() #20, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %22, metadata !5990, metadata !DIExpression()), !dbg !5997
  %23 = icmp eq i32 %22, 2, !dbg !6022
  br i1 %23, label %24, label %29, !dbg !6024

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !6025
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !6026
  %27 = load i8, i8* %26, align 4, !dbg !6026
  %28 = icmp eq i8 %27, 0, !dbg !6025
  br i1 %28, label %29, label %30, !dbg !6027

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !6028
  store i8 %31, i8* %5, align 1, !dbg !6028
  call void @llvm.dbg.value(metadata i32 undef, metadata !5986, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i8* %0, metadata !5995, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %1, metadata !5994, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %2, metadata !5985, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 0, metadata !5989, metadata !DIExpression()), !dbg !5997
  %32 = icmp sgt i32 %2, 0, !dbg !6029
  br i1 %32, label %33, label %41, !dbg !6030

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !6031
  %35 = urem i32 %1, %34, !dbg !6032
  call void @llvm.dbg.value(metadata i32 %35, metadata !5986, metadata !DIExpression()), !dbg !5997
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !6030

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !5997
  br label %81, !dbg !6033

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !6034
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !5995, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %46, metadata !5994, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %47, metadata !5985, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %48, metadata !5986, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %49, metadata !5989, metadata !DIExpression()), !dbg !5997
  %50 = sub i32 %44, %48, !dbg !6034
  %51 = icmp ugt i32 %47, %50, !dbg !6034
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !6034
  call void @llvm.dbg.value(metadata i32 %52, metadata !5987, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 0, metadata !5986, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i8* %45, metadata !5996, metadata !DIExpression()), !dbg !5997
  %53 = lshr i32 %46, 16, !dbg !6036
  %54 = trunc i32 %53 to i8, !dbg !6037
  store i8 %54, i8* %36, align 1, !dbg !6038
  %55 = lshr i32 %46, 8, !dbg !6039
  %56 = trunc i32 %55 to i8, !dbg !6040
  store i8 %56, i8* %37, align 1, !dbg !6041
  %57 = trunc i32 %46 to i8, !dbg !6042
  store i8 %57, i8* %38, align 1, !dbg !6043
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #22, !dbg !6044
  %59 = call i32 @flash_write_enable() #22, !dbg !6046
  %60 = call i32 @save_and_set_interrupt_mask() #20, !dbg !6047
  call void @llvm.dbg.value(metadata i32 %60, metadata !5993, metadata !DIExpression()), !dbg !5997
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !6048
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #20, !dbg !6049
  call void @llvm.dbg.value(metadata i32 %61, metadata !5988, metadata !DIExpression()), !dbg !5997
  call void @restore_interrupt_mask(i32 noundef %60) #20, !dbg !6050
  br label %62, !dbg !6051

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !6052
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #20, !dbg !6054
  call void @llvm.dbg.value(metadata i32 %64, metadata !5992, metadata !DIExpression()), !dbg !5997
  %65 = icmp eq i32 %64, 0, !dbg !6055
  br i1 %65, label %62, label %66, !dbg !6056, !llvm.loop !6057

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !6059
  br i1 %67, label %68, label %73, !dbg !6061

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !6062
  call void @llvm.dbg.value(metadata i32 %69, metadata !5989, metadata !DIExpression()), !dbg !5997
  %70 = icmp ult i32 %61, %52, !dbg !6064
  br i1 %70, label %71, label %73, !dbg !6066

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #22, !dbg !6067
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.33, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.41, i32 0, i32 0)) #21, !dbg !6069
  unreachable, !dbg !6069

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !5997
  call void @llvm.dbg.value(metadata i32 %74, metadata !5989, metadata !DIExpression()), !dbg !5997
  %75 = sub i32 %47, %52, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %75, metadata !5985, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !5994, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5997
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !5995, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5997
  call void @llvm.dbg.value(metadata i32 0, metadata !5986, metadata !DIExpression()), !dbg !5997
  %76 = icmp sgt i32 %75, 0, !dbg !6029
  br i1 %76, label %77, label %41, !dbg !6030, !llvm.loop !6071

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !6073
  call void @llvm.dbg.value(metadata i8* %78, metadata !5995, metadata !DIExpression()), !dbg !5997
  %79 = add i32 %52, %46, !dbg !6074
  call void @llvm.dbg.value(metadata i32 %79, metadata !5994, metadata !DIExpression()), !dbg !5997
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !6034
  br label %43, !dbg !6030

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #20, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %82, metadata !5992, metadata !DIExpression()), !dbg !5997
  %83 = icmp eq i32 %82, -121, !dbg !6077
  br i1 %83, label %81, label %84, !dbg !6078, !llvm.loop !6079

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #22, !dbg !6081
  br label %86, !dbg !6082

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !5997
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #19, !dbg !6083
  ret i32 %87, !dbg !6083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !6084 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !6086, metadata !DIExpression()), !dbg !6090
  call void @llvm.dbg.value(metadata i32 4, metadata !6087, metadata !DIExpression()), !dbg !6090
  call void @llvm.dbg.value(metadata i32 0, metadata !6088, metadata !DIExpression()), !dbg !6090
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !6091
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !6091
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !6089, metadata !DIExpression()), !dbg !6092
  %4 = and i32 %0, 4095, !dbg !6093
  %5 = icmp eq i32 %4, 0, !dbg !6093
  br i1 %5, label %6, label %29, !dbg !6095

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !6096
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !6098
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !6099
  %10 = load i32, i32* %9, align 4, !dbg !6099
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !6100
  %12 = load i32, i32* %11, align 4, !dbg !6100
  %13 = mul i32 %12, %10, !dbg !6101
  %14 = icmp ugt i32 %7, %13, !dbg !6102
  br i1 %14, label %29, label %15, !dbg !6103

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !6104
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #22, !dbg !6105
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #22, !dbg !6107
  store i8 2, i8* %3, align 1, !dbg !6108
  %18 = lshr i32 %0, 16, !dbg !6109
  %19 = trunc i32 %18 to i8, !dbg !6110
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !6111
  store i8 %19, i8* %20, align 1, !dbg !6112
  %21 = lshr i32 %0, 8, !dbg !6113
  %22 = trunc i32 %21 to i8, !dbg !6114
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !6115
  store i8 %22, i8* %23, align 1, !dbg !6116
  %24 = trunc i32 %0 to i8, !dbg !6117
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !6118
  store i8 %24, i8* %25, align 1, !dbg !6119
  %26 = tail call i32 @flash_write_enable() #22, !dbg !6120
  %27 = tail call i32 @flash_unprotect() #22, !dbg !6121
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #20, !dbg !6122
  call void @llvm.dbg.value(metadata i32 %28, metadata !6088, metadata !DIExpression()), !dbg !6090
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !6123
  br label %29, !dbg !6124

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !6090
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !6125
  ret i32 %30, !dbg !6125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !6126 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !6128, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %1, metadata !6129, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %2, metadata !6130, metadata !DIExpression()), !dbg !6145
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !6146
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #19, !dbg !6146
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !6131, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i32 4096, metadata !6135, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 4095, metadata !6136, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i8* %0, metadata !6128, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %1, metadata !6129, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %2, metadata !6130, metadata !DIExpression()), !dbg !6145
  %6 = icmp sgt i32 %2, 0, !dbg !6148
  br i1 %6, label %7, label %43, !dbg !6149

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !6128, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %9, metadata !6129, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %10, metadata !6130, metadata !DIExpression()), !dbg !6145
  %11 = and i32 %9, 4095, !dbg !6150
  %12 = icmp ne i32 %11, 0, !dbg !6150
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !6151
  br i1 %14, label %15, label %30, !dbg !6151

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !6152
  call void @llvm.dbg.value(metadata i32 %16, metadata !6141, metadata !DIExpression()), !dbg !6153
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #22, !dbg !6154
  %18 = icmp eq i32 %17, 4096, !dbg !6156
  br i1 %18, label %19, label %45, !dbg !6157

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !6158
  call void @llvm.dbg.value(metadata i32 %11, metadata !6137, metadata !DIExpression()), !dbg !6153
  %20 = sub nuw nsw i32 4096, %11, !dbg !6159
  %21 = icmp ugt i32 %10, %20, !dbg !6159
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %22, metadata !6142, metadata !DIExpression()), !dbg !6153
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !6160
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #20, !dbg !6161
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #22, !dbg !6162
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #22, !dbg !6164
  %27 = icmp eq i32 %26, 4096, !dbg !6166
  br i1 %27, label %28, label %45, !dbg !6167

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !6128, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6145
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !6129, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6145
  %29 = sub nsw i32 %10, %22, !dbg !6168
  call void @llvm.dbg.value(metadata i32 %29, metadata !6130, metadata !DIExpression()), !dbg !6145
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %31, metadata !6143, metadata !DIExpression()), !dbg !6170
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #22, !dbg !6171
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #22, !dbg !6173
  %34 = icmp eq i32 %33, %31, !dbg !6175
  br i1 %34, label %35, label %43, !dbg !6176

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !6128, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6145
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !6129, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6145
  %36 = and i32 %10, 4095, !dbg !6177
  call void @llvm.dbg.value(metadata i8* %8, metadata !6128, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %9, metadata !6129, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %10, metadata !6130, metadata !DIExpression()), !dbg !6145
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !6178
  %41 = add i32 %39, %9, !dbg !6178
  call void @llvm.dbg.value(metadata i8* %40, metadata !6128, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %41, metadata !6129, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %38, metadata !6130, metadata !DIExpression()), !dbg !6145
  %42 = icmp sgt i32 %38, 0, !dbg !6148
  br i1 %42, label %7, label %43, !dbg !6149, !llvm.loop !6179

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !6145
  br label %45, !dbg !6181

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !6145
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #19, !dbg !6181
  ret i32 %46, !dbg !6181
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #0 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #9 section ".ramTEXT" !dbg !6182 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !6186
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !6188

2:                                                ; preds = %0
  br label %7, !dbg !6189

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !6192
  %5 = icmp ult i32 %4, 3, !dbg !6192
  %6 = select i1 %5, i32 1, i32 2, !dbg !6194
  br label %7, !dbg !6194

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !6195
  ret i32 %8, !dbg !6196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @spim_Lisr() #0 !dbg !6197 {
  %1 = load volatile i32, i32* @spi_ok_cnt, align 4, !dbg !6198
  %2 = add nsw i32 %1, 1, !dbg !6198
  store volatile i32 %2, i32* @spi_ok_cnt, align 4, !dbg !6198
  %3 = load volatile i32, i32* @spi_ok_cnt, align 4, !dbg !6199
  %4 = load i32, i32* @quotient, align 4, !dbg !6201
  %5 = add i32 %4, 1, !dbg !6202
  %6 = icmp eq i32 %3, %5, !dbg !6203
  br i1 %6, label %7, label %10, !dbg !6204

7:                                                ; preds = %0
  %8 = load i32, i32* @g_spi_master_cs_n, align 4, !dbg !6205
  %9 = tail call i32 @hal_gpio_set_output(i32 noundef %8, i32 noundef 1) #20, !dbg !6207
  store volatile i32 0, i32* @spi_ok_cnt, align 4, !dbg !6208
  br label %10, !dbg !6209

10:                                               ; preds = %7, %0
  ret void, !dbg !6210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spim_init(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6213, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.value(metadata i32 %1, metadata !6214, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.value(metadata i32 0, metadata !6215, metadata !DIExpression()), !dbg !6216
  tail call void @spim_isr_Register(void ()* noundef nonnull @spim_Lisr) #20, !dbg !6217
  %3 = load i32, i32* @g_spi_master_cs_n, align 4, !dbg !6218
  %4 = tail call i32 @hal_gpio_set_direction(i32 noundef %3, i32 noundef 1) #20, !dbg !6219
  %5 = or i32 %0, 4, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %5, metadata !6213, metadata !DIExpression()), !dbg !6216
  %6 = tail call i32 @halSpim_init(i32 noundef %5, i32 noundef %1) #20, !dbg !6221
  call void @llvm.dbg.value(metadata i32 %6, metadata !6215, metadata !DIExpression()), !dbg !6216
  %7 = load i32, i32* @g_spi_master_cs_n, align 4, !dbg !6222
  %8 = tail call i32 @hal_gpio_set_output(i32 noundef %7, i32 noundef 1) #20, !dbg !6223
  ret i32 %6, !dbg !6224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spim_write(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !580 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !585, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 %1, metadata !586, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 0, metadata !587, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 0, metadata !589, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 4, metadata !590, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 0, metadata !591, metadata !DIExpression()), !dbg !6225
  %3 = udiv i32 %1, 36, !dbg !6226
  store i32 %3, i32* @quotient, align 4, !dbg !6227
  %4 = mul i32 %3, 36
  %5 = sub i32 %1, %4
  store i32 %5, i32* @spim_write.remainder, align 4, !dbg !6228
  %6 = load volatile i32, i32* inttoptr (i32 603979816 to i32*), align 8, !dbg !6229
  %7 = and i32 %6, 8, !dbg !6230
  store i32 %7, i32* @spim_write.regVal, align 4, !dbg !6230
  %8 = icmp eq i32 %1, 0, !dbg !6231
  br i1 %8, label %57, label %9, !dbg !6233

9:                                                ; preds = %2
  %10 = icmp ult i32 %1, 5, !dbg !6234
  br i1 %10, label %19, label %11, !dbg !6236

11:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 0, metadata !591, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 0, metadata !587, metadata !DIExpression()), !dbg !6225
  %12 = icmp ult i32 %1, 36, !dbg !6237
  br i1 %12, label %38, label %13, !dbg !6241

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 4
  call void @llvm.dbg.value(metadata i32 0, metadata !591, metadata !DIExpression()), !dbg !6225
  %15 = tail call fastcc i32 @spim_fill_in_data(i8* noundef %0, i32 noundef 0, i32 noundef %7, i32 noundef 4) #22, !dbg !6242
  call void @llvm.dbg.value(metadata i32 %15, metadata !589, metadata !DIExpression()), !dbg !6225
  %16 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef %15, i32 noundef 4, i8* noundef nonnull %14, i32 noundef 32, i32 noundef 2) #20, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %16, metadata !587, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i32 1, metadata !591, metadata !DIExpression()), !dbg !6225
  %17 = load i32, i32* @quotient, align 4, !dbg !6245
  %18 = icmp ugt i32 %17, 1, !dbg !6237
  br i1 %18, label %22, label %32, !dbg !6241, !llvm.loop !6246

19:                                               ; preds = %9
  %20 = tail call fastcc i32 @spim_fill_in_data(i8* noundef %0, i32 noundef 0, i32 noundef %7, i32 noundef %5) #22, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %20, metadata !589, metadata !DIExpression()), !dbg !6225
  %21 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef %20, i32 noundef %1, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %21, metadata !587, metadata !DIExpression()), !dbg !6225
  br label %57, !dbg !6251

22:                                               ; preds = %13, %22
  %23 = phi i32 [ %29, %22 ], [ 1, %13 ]
  %24 = load i32, i32* @spim_write.regVal, align 4, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %23, metadata !591, metadata !DIExpression()), !dbg !6225
  %25 = tail call fastcc i32 @spim_fill_in_data(i8* noundef %0, i32 noundef %23, i32 noundef %24, i32 noundef 4) #22, !dbg !6242
  call void @llvm.dbg.value(metadata i32 %25, metadata !589, metadata !DIExpression()), !dbg !6225
  %26 = mul i32 %23, 36, !dbg !6253
  %27 = getelementptr inbounds i8, i8* %14, i32 %26, !dbg !6254
  %28 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef %25, i32 noundef 4, i8* noundef nonnull %27, i32 noundef 32, i32 noundef 2) #20, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %28, metadata !587, metadata !DIExpression()), !dbg !6225
  %29 = add nuw i32 %23, 1, !dbg !6255
  call void @llvm.dbg.value(metadata i32 %29, metadata !591, metadata !DIExpression()), !dbg !6225
  %30 = load i32, i32* @quotient, align 4, !dbg !6245
  %31 = icmp ult i32 %29, %30, !dbg !6237
  br i1 %31, label %22, label %32, !dbg !6241, !llvm.loop !6246

32:                                               ; preds = %22, %13
  %33 = phi i32 [ %16, %13 ], [ %28, %22 ], !dbg !6244
  %34 = phi i32 [ 1, %13 ], [ %29, %22 ], !dbg !6255
  %35 = phi i32 [ %17, %13 ], [ %30, %22 ], !dbg !6245
  %36 = load i32, i32* @spim_write.remainder, align 4, !dbg !6256
  %37 = mul i32 %35, 36, !dbg !6256
  br label %38, !dbg !6256

38:                                               ; preds = %32, %11
  %39 = phi i32 [ %5, %11 ], [ %36, %32 ], !dbg !6256
  %40 = phi i32 [ 0, %11 ], [ %33, %32 ], !dbg !6225
  %41 = phi i32 [ 0, %11 ], [ %34, %32 ], !dbg !6258
  %42 = phi i32 [ 0, %11 ], [ %37, %32 ]
  %43 = icmp ult i32 %39, 5, !dbg !6259
  br i1 %43, label %44, label %50, !dbg !6260

44:                                               ; preds = %38
  %45 = icmp eq i32 %39, 0, !dbg !6261
  br i1 %45, label %57, label %46, !dbg !6264

46:                                               ; preds = %44
  %47 = load i32, i32* @spim_write.regVal, align 4, !dbg !6265
  %48 = tail call fastcc i32 @spim_fill_in_data(i8* noundef %0, i32 noundef %41, i32 noundef %47, i32 noundef %39) #22, !dbg !6266
  call void @llvm.dbg.value(metadata i32 %48, metadata !589, metadata !DIExpression()), !dbg !6225
  %49 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef %48, i32 noundef %39, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !6267
  call void @llvm.dbg.value(metadata i32 %49, metadata !587, metadata !DIExpression()), !dbg !6225
  br label %57, !dbg !6268

50:                                               ; preds = %38
  %51 = load i32, i32* @spim_write.regVal, align 4, !dbg !6269
  %52 = tail call fastcc i32 @spim_fill_in_data(i8* noundef %0, i32 noundef %41, i32 noundef %51, i32 noundef 4) #22, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %52, metadata !589, metadata !DIExpression()), !dbg !6225
  %53 = getelementptr inbounds i8, i8* %0, i32 %42, !dbg !6272
  %54 = getelementptr inbounds i8, i8* %53, i32 4, !dbg !6273
  %55 = add i32 %39, -4, !dbg !6274
  %56 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef %52, i32 noundef 4, i8* noundef nonnull %54, i32 noundef %55, i32 noundef 2) #20, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %56, metadata !587, metadata !DIExpression()), !dbg !6225
  br label %57, !dbg !6276

57:                                               ; preds = %44, %2, %50, %46, %19
  %58 = phi i32 [ %21, %19 ], [ %49, %46 ], [ %56, %50 ], [ -1, %2 ], [ %40, %44 ], !dbg !6225
  ret i32 %58, !dbg !6277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @spim_fill_in_data(i8* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !6278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6282, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 %1, metadata !6283, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 %2, metadata !6284, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 %3, metadata !6285, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 0, metadata !6286, metadata !DIExpression()), !dbg !6287
  %5 = icmp eq i32 %2, 0, !dbg !6288
  br i1 %5, label %6, label %57, !dbg !6290

6:                                                ; preds = %4
  switch i32 %3, label %108 [
    i32 1, label %7
    i32 2, label %12
    i32 3, label %22
    i32 4, label %37
  ], !dbg !6291

7:                                                ; preds = %6
  %8 = mul i32 %1, 36, !dbg !6293
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !6296
  %10 = load i8, i8* %9, align 1, !dbg !6297
  %11 = zext i8 %10 to i32, !dbg !6297
  call void @llvm.dbg.value(metadata i32 %11, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6298

12:                                               ; preds = %6
  %13 = mul i32 %1, 36, !dbg !6299
  %14 = getelementptr inbounds i8, i8* %0, i32 %13, !dbg !6302
  %15 = load i8, i8* %14, align 1, !dbg !6303
  %16 = zext i8 %15 to i32, !dbg !6303
  %17 = shl nuw nsw i32 %16, 8, !dbg !6304
  %18 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6305
  %19 = load i8, i8* %18, align 1, !dbg !6306
  %20 = zext i8 %19 to i32, !dbg !6306
  %21 = or i32 %17, %20, !dbg !6307
  call void @llvm.dbg.value(metadata i32 %21, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6308

22:                                               ; preds = %6
  %23 = mul i32 %1, 36, !dbg !6309
  %24 = getelementptr inbounds i8, i8* %0, i32 %23, !dbg !6312
  %25 = load i8, i8* %24, align 1, !dbg !6313
  %26 = zext i8 %25 to i32, !dbg !6313
  %27 = shl nuw nsw i32 %26, 16, !dbg !6314
  %28 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !6315
  %29 = load i8, i8* %28, align 1, !dbg !6316
  %30 = zext i8 %29 to i32, !dbg !6316
  %31 = shl nuw nsw i32 %30, 8, !dbg !6317
  %32 = or i32 %31, %27, !dbg !6318
  %33 = getelementptr inbounds i8, i8* %24, i32 2, !dbg !6319
  %34 = load i8, i8* %33, align 1, !dbg !6320
  %35 = zext i8 %34 to i32, !dbg !6320
  %36 = or i32 %32, %35, !dbg !6321
  call void @llvm.dbg.value(metadata i32 %36, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6322

37:                                               ; preds = %6
  %38 = mul i32 %1, 36, !dbg !6323
  %39 = getelementptr inbounds i8, i8* %0, i32 %38, !dbg !6326
  %40 = load i8, i8* %39, align 1, !dbg !6327
  %41 = zext i8 %40 to i32, !dbg !6327
  %42 = shl nuw i32 %41, 24, !dbg !6328
  %43 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !6329
  %44 = load i8, i8* %43, align 1, !dbg !6330
  %45 = zext i8 %44 to i32, !dbg !6330
  %46 = shl nuw nsw i32 %45, 16, !dbg !6331
  %47 = or i32 %46, %42, !dbg !6332
  %48 = getelementptr inbounds i8, i8* %39, i32 2, !dbg !6333
  %49 = load i8, i8* %48, align 1, !dbg !6334
  %50 = zext i8 %49 to i32, !dbg !6334
  %51 = shl nuw nsw i32 %50, 8, !dbg !6335
  %52 = or i32 %47, %51, !dbg !6336
  %53 = getelementptr inbounds i8, i8* %39, i32 3, !dbg !6337
  %54 = load i8, i8* %53, align 1, !dbg !6338
  %55 = zext i8 %54 to i32, !dbg !6338
  %56 = or i32 %52, %55, !dbg !6339
  call void @llvm.dbg.value(metadata i32 %56, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6340

57:                                               ; preds = %4
  switch i32 %3, label %108 [
    i32 1, label %58
    i32 2, label %63
    i32 3, label %73
    i32 4, label %88
  ], !dbg !6341

58:                                               ; preds = %57
  %59 = mul i32 %1, 36, !dbg !6343
  %60 = getelementptr inbounds i8, i8* %0, i32 %59, !dbg !6346
  %61 = load i8, i8* %60, align 1, !dbg !6347
  %62 = zext i8 %61 to i32, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %62, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6348

63:                                               ; preds = %57
  %64 = mul i32 %1, 36, !dbg !6349
  %65 = getelementptr inbounds i8, i8* %0, i32 %64, !dbg !6352
  %66 = load i8, i8* %65, align 1, !dbg !6353
  %67 = zext i8 %66 to i32, !dbg !6353
  %68 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !6354
  %69 = load i8, i8* %68, align 1, !dbg !6355
  %70 = zext i8 %69 to i32, !dbg !6355
  %71 = shl nuw nsw i32 %70, 8, !dbg !6356
  %72 = or i32 %71, %67, !dbg !6357
  call void @llvm.dbg.value(metadata i32 %72, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6358

73:                                               ; preds = %57
  %74 = mul i32 %1, 36, !dbg !6359
  %75 = getelementptr inbounds i8, i8* %0, i32 %74, !dbg !6362
  %76 = load i8, i8* %75, align 1, !dbg !6363
  %77 = zext i8 %76 to i32, !dbg !6363
  %78 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !6364
  %79 = load i8, i8* %78, align 1, !dbg !6365
  %80 = zext i8 %79 to i32, !dbg !6365
  %81 = shl nuw nsw i32 %80, 8, !dbg !6366
  %82 = or i32 %81, %77, !dbg !6367
  %83 = getelementptr inbounds i8, i8* %75, i32 2, !dbg !6368
  %84 = load i8, i8* %83, align 1, !dbg !6369
  %85 = zext i8 %84 to i32, !dbg !6369
  %86 = shl nuw nsw i32 %85, 16, !dbg !6370
  %87 = or i32 %82, %86, !dbg !6371
  call void @llvm.dbg.value(metadata i32 %87, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6372

88:                                               ; preds = %57
  %89 = mul i32 %1, 36, !dbg !6373
  %90 = getelementptr inbounds i8, i8* %0, i32 %89, !dbg !6376
  %91 = load i8, i8* %90, align 1, !dbg !6377
  %92 = zext i8 %91 to i32, !dbg !6377
  %93 = getelementptr inbounds i8, i8* %90, i32 1, !dbg !6378
  %94 = load i8, i8* %93, align 1, !dbg !6379
  %95 = zext i8 %94 to i32, !dbg !6379
  %96 = shl nuw nsw i32 %95, 8, !dbg !6380
  %97 = or i32 %96, %92, !dbg !6381
  %98 = getelementptr inbounds i8, i8* %90, i32 2, !dbg !6382
  %99 = load i8, i8* %98, align 1, !dbg !6383
  %100 = zext i8 %99 to i32, !dbg !6383
  %101 = shl nuw nsw i32 %100, 16, !dbg !6384
  %102 = or i32 %97, %101, !dbg !6385
  %103 = getelementptr inbounds i8, i8* %90, i32 3, !dbg !6386
  %104 = load i8, i8* %103, align 1, !dbg !6387
  %105 = zext i8 %104 to i32, !dbg !6387
  %106 = shl nuw i32 %105, 24, !dbg !6388
  %107 = or i32 %102, %106, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %107, metadata !6286, metadata !DIExpression()), !dbg !6287
  br label %108, !dbg !6390

108:                                              ; preds = %57, %6, %58, %73, %88, %63, %7, %22, %37, %12
  %109 = phi i32 [ %11, %7 ], [ %21, %12 ], [ %36, %22 ], [ %56, %37 ], [ %62, %58 ], [ %72, %63 ], [ %87, %73 ], [ %107, %88 ], [ 0, %6 ], [ 0, %57 ], !dbg !6287
  call void @llvm.dbg.value(metadata i32 %109, metadata !6286, metadata !DIExpression()), !dbg !6287
  ret i32 %109, !dbg !6391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spim_read(i32 noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !600, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 %1, metadata !601, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i8* %2, metadata !602, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 %3, metadata !603, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 0, metadata !604, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 0, metadata !605, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 0, metadata !606, metadata !DIExpression()), !dbg !6392
  %5 = lshr i32 %3, 5, !dbg !6393
  store i32 %5, i32* @quotient, align 4, !dbg !6394
  %6 = and i32 %3, 31, !dbg !6395
  store i32 %6, i32* @spim_read.remainder, align 4, !dbg !6396
  %7 = icmp ult i32 %3, 32, !dbg !6397
  br i1 %7, label %8, label %10, !dbg !6399

8:                                                ; preds = %4
  %9 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 1) #20, !dbg !6400
  call void @llvm.dbg.value(metadata i32 %9, metadata !604, metadata !DIExpression()), !dbg !6392
  br label %31, !dbg !6402

10:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 0, metadata !607, metadata !DIExpression()), !dbg !6392
  %11 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef 32, i32 noundef 1) #20, !dbg !6403
  call void @llvm.dbg.value(metadata i32 1, metadata !607, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 0, metadata !604, metadata !DIExpression()), !dbg !6392
  %12 = load i32, i32* @quotient, align 4, !dbg !6405
  %13 = icmp ugt i32 %12, 1, !dbg !6408
  br i1 %13, label %14, label %22, !dbg !6409

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %19, %14 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !607, metadata !DIExpression()), !dbg !6392
  %16 = shl i32 %15, 5, !dbg !6410
  %17 = getelementptr inbounds i8, i8* %2, i32 %16, !dbg !6412
  %18 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef 0, i32 noundef 0, i8* noundef %17, i32 noundef 32, i32 noundef 1) #20, !dbg !6413
  call void @llvm.dbg.value(metadata i32 %18, metadata !604, metadata !DIExpression()), !dbg !6392
  %19 = add nuw i32 %15, 1, !dbg !6414
  call void @llvm.dbg.value(metadata i32 %19, metadata !607, metadata !DIExpression()), !dbg !6392
  %20 = load i32, i32* @quotient, align 4, !dbg !6405
  %21 = icmp ult i32 %19, %20, !dbg !6408
  br i1 %21, label %14, label %22, !dbg !6409, !llvm.loop !6415

22:                                               ; preds = %14, %10
  %23 = phi i32 [ 0, %10 ], [ %18, %14 ], !dbg !6392
  %24 = phi i32 [ %12, %10 ], [ %20, %14 ], !dbg !6405
  %25 = load i32, i32* @spim_read.remainder, align 4, !dbg !6417
  %26 = icmp eq i32 %25, 0, !dbg !6419
  br i1 %26, label %31, label %27, !dbg !6420

27:                                               ; preds = %22
  %28 = shl i32 %24, 5, !dbg !6421
  %29 = getelementptr inbounds i8, i8* %2, i32 %28, !dbg !6423
  %30 = tail call i32 @spim_more_buf_trans_gpio(i32 noundef 0, i32 noundef 0, i8* noundef %29, i32 noundef %25, i32 noundef 1) #20, !dbg !6424
  call void @llvm.dbg.value(metadata i32 %30, metadata !604, metadata !DIExpression()), !dbg !6392
  br label %31, !dbg !6425

31:                                               ; preds = %22, %27, %8
  %32 = phi i32 [ %9, %8 ], [ %30, %27 ], [ %23, %22 ], !dbg !6426
  ret i32 %32, !dbg !6427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #0 !dbg !6428 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #20, !dbg !6429
  ret i32 %1, !dbg !6430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #0 !dbg !6431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6433, metadata !DIExpression()), !dbg !6436
  %2 = tail call i32 @get_current_count() #22, !dbg !6437
  %3 = add i32 %2, %0, !dbg !6438
  %4 = xor i32 %3, -1, !dbg !6439
  call void @llvm.dbg.value(metadata i32 %3, metadata !6434, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6436
  %5 = tail call i32 @get_current_count() #22, !dbg !6440
  call void @llvm.dbg.value(metadata i32 %5, metadata !6435, metadata !DIExpression()), !dbg !6436
  %6 = add i32 %5, %4, !dbg !6441
  %7 = icmp slt i32 %6, 0, !dbg !6441
  br i1 %7, label %8, label %12, !dbg !6442

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #22, !dbg !6443
  call void @llvm.dbg.value(metadata i32 %9, metadata !6435, metadata !DIExpression()), !dbg !6436
  %10 = add i32 %9, %4, !dbg !6441
  %11 = icmp slt i32 %10, 0, !dbg !6441
  br i1 %11, label %8, label %12, !dbg !6442, !llvm.loop !6445

12:                                               ; preds = %8, %1
  ret void, !dbg !6447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #0 !dbg !6448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6450, metadata !DIExpression()), !dbg !6453
  %2 = tail call i32 @get_current_gpt4_count() #22, !dbg !6454
  %3 = add i32 %2, %0, !dbg !6455
  %4 = xor i32 %3, -1, !dbg !6456
  call void @llvm.dbg.value(metadata i32 %3, metadata !6451, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6453
  %5 = tail call i32 @get_current_gpt4_count() #22, !dbg !6457
  call void @llvm.dbg.value(metadata i32 %5, metadata !6452, metadata !DIExpression()), !dbg !6453
  %6 = add i32 %5, %4, !dbg !6458
  %7 = icmp slt i32 %6, 0, !dbg !6458
  br i1 %7, label %8, label %12, !dbg !6459

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #22, !dbg !6460
  call void @llvm.dbg.value(metadata i32 %9, metadata !6452, metadata !DIExpression()), !dbg !6453
  %10 = add i32 %9, %4, !dbg !6458
  %11 = icmp slt i32 %10, 0, !dbg !6458
  br i1 %11, label %8, label %12, !dbg !6459, !llvm.loop !6462

12:                                               ; preds = %8, %1
  ret void, !dbg !6464
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #0 !dbg !6465 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #20, !dbg !6466
  ret i32 %1, !dbg !6467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !6468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6470, metadata !DIExpression()), !dbg !6472
  %2 = shl i32 %0, 5, !dbg !6473
  call void @llvm.dbg.value(metadata i32 %2, metadata !6471, metadata !DIExpression()), !dbg !6472
  %3 = mul i32 %0, 7, !dbg !6474
  %4 = udiv i32 %3, 10, !dbg !6475
  %5 = add i32 %4, %2, !dbg !6476
  call void @llvm.dbg.value(metadata i32 %5, metadata !6471, metadata !DIExpression()), !dbg !6472
  %6 = mul i32 %0, 6, !dbg !6477
  %7 = udiv i32 %6, 100, !dbg !6478
  %8 = add i32 %5, %7, !dbg !6479
  call void @llvm.dbg.value(metadata i32 %8, metadata !6471, metadata !DIExpression()), !dbg !6472
  %9 = shl i32 %0, 3, !dbg !6480
  %10 = udiv i32 %9, 1000, !dbg !6481
  %11 = add i32 %8, %10, !dbg !6482
  call void @llvm.dbg.value(metadata i32 %11, metadata !6471, metadata !DIExpression()), !dbg !6472
  tail call void @delay_time(i32 noundef %11) #22, !dbg !6483
  ret void, !dbg !6484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !6485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6487, metadata !DIExpression()), !dbg !6490
  %2 = tail call i32 @top_mcu_freq_get() #20, !dbg !6491
  %3 = udiv i32 %2, 1000000, !dbg !6492
  call void @llvm.dbg.value(metadata i32 %3, metadata !6489, metadata !DIExpression()), !dbg !6490
  %4 = mul i32 %3, %0, !dbg !6493
  call void @llvm.dbg.value(metadata i32 %4, metadata !6488, metadata !DIExpression()), !dbg !6490
  tail call void @delay_time_for_gpt4(i32 noundef %4) #22, !dbg !6494
  ret void, !dbg !6495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #0 !dbg !6496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6500, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i32 %1, metadata !6501, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i1 %2, metadata !6502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6504
  call void @llvm.dbg.value(metadata void ()* %3, metadata !6503, metadata !DIExpression()), !dbg !6504
  tail call void @GPT_Stop(i32 noundef %0) #20, !dbg !6505
  %5 = icmp eq i32 %0, 0, !dbg !6506
  br i1 %5, label %6, label %7, !dbg !6508

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !6509
  br label %8, !dbg !6511

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !6512
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #20, !dbg !6514
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #20, !dbg !6515
  ret void, !dbg !6516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !6517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6519, metadata !DIExpression()), !dbg !6520
  tail call void @GPT_Start(i32 noundef %0) #20, !dbg !6521
  ret void, !dbg !6522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #0 !dbg !6523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6525, metadata !DIExpression()), !dbg !6526
  tail call void @GPT_Stop(i32 noundef %0) #20, !dbg !6527
  ret void, !dbg !6528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #0 !dbg !6529 {
  tail call void @CM4_GPT2Init() #20, !dbg !6530
  ret void, !dbg !6531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #0 !dbg !6532 {
  tail call void @CM4_GPT4Init() #20, !dbg !6533
  ret void, !dbg !6534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #5 !dbg !6535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6537, metadata !DIExpression()), !dbg !6538
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !6539

2:                                                ; preds = %1
  br label %3, !dbg !6540

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !6538
  br label %5, !dbg !6543

5:                                                ; preds = %3, %1
  ret void, !dbg !6543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #0 !dbg !6544 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6546, metadata !DIExpression()), !dbg !6548
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !6549
  call void @llvm.dbg.value(metadata i32 %1, metadata !6547, metadata !DIExpression()), !dbg !6548
  %2 = lshr i32 %1, 13, !dbg !6550
  %3 = and i32 %2, 7, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %3, metadata !6547, metadata !DIExpression()), !dbg !6548
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %4, metadata !6546, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata i32 %4, metadata !6546, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !6548
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !6553
  %6 = load i32, i32* %5, align 4, !dbg !6553
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !6553
  %8 = load i32, i32* %7, align 4, !dbg !6553
  %9 = and i32 %4, -2048, !dbg !6554
  call void @llvm.dbg.value(metadata i32 %9, metadata !6546, metadata !DIExpression()), !dbg !6548
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !6555
  %10 = or i32 %9, %8, !dbg !6555
  call void @llvm.dbg.value(metadata i32 %10, metadata !6546, metadata !DIExpression()), !dbg !6548
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !6557
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !6558
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !6559
  tail call void @SystemCoreClockUpdate() #20, !dbg !6560
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !6561
  %13 = udiv i32 %12, 1000, !dbg !6562
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #20, !dbg !6563
  ret void, !dbg !6564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #9 !dbg !6565 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !6566
  ret i32 %1, !dbg !6567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #9 !dbg !6568 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !6569
  ret i32 %1, !dbg !6570
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #10 !dbg !6571 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6575
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6575
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6573, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !6574, metadata !DIExpression()), !dbg !6577
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6578
  store volatile i32 %3, i32* %1, align 4, !dbg !6579
  %4 = load volatile i32, i32* %1, align 4, !dbg !6580
  %5 = lshr i32 %4, 28, !dbg !6581
  %6 = and i32 %5, 3, !dbg !6582
  store volatile i32 %6, i32* %1, align 4, !dbg !6583
  %7 = load volatile i32, i32* %1, align 4, !dbg !6584
  %8 = icmp eq i32 %7, 0, !dbg !6586
  br i1 %8, label %9, label %22, !dbg !6587

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6588
  store volatile i32 %10, i32* %1, align 4, !dbg !6590
  %11 = load volatile i32, i32* %1, align 4, !dbg !6591
  %12 = and i32 %11, -16777217, !dbg !6592
  store volatile i32 %12, i32* %1, align 4, !dbg !6593
  %13 = load volatile i32, i32* %1, align 4, !dbg !6594
  %14 = or i32 %13, 536870912, !dbg !6595
  store volatile i32 %14, i32* %1, align 4, !dbg !6596
  %15 = load volatile i32, i32* %1, align 4, !dbg !6597
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #22, !dbg !6598
  br label %16, !dbg !6599

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6600
  store volatile i32 %17, i32* %1, align 4, !dbg !6602
  %18 = load volatile i32, i32* %1, align 4, !dbg !6603
  %19 = and i32 %18, 134217728, !dbg !6604
  store volatile i32 %19, i32* %1, align 4, !dbg !6605
  %20 = load volatile i32, i32* %1, align 4, !dbg !6606
  %21 = icmp eq i32 %20, 0, !dbg !6607
  br i1 %21, label %16, label %22, !dbg !6608, !llvm.loop !6609

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6611
  ret void, !dbg !6611
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32.67(i8* noundef %0) unnamed_addr #7 !dbg !6612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6614, metadata !DIExpression()), !dbg !6615
  %2 = bitcast i8* %0 to i32*, !dbg !6616
  %3 = load volatile i32, i32* %2, align 4, !dbg !6617
  ret i32 %3, !dbg !6618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !6619 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6623, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32 %1, metadata !6624, metadata !DIExpression()), !dbg !6625
  %3 = bitcast i8* %0 to i32*, !dbg !6626
  store volatile i32 %1, i32* %3, align 4, !dbg !6627
  ret void, !dbg !6628
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #10 !dbg !6629 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6633, metadata !DIExpression()), !dbg !6636
  %3 = bitcast i32* %2 to i8*, !dbg !6637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !6637
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6634, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !6635, metadata !DIExpression()), !dbg !6636
  %4 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6639
  store volatile i32 %4, i32* %2, align 4, !dbg !6640
  %5 = load volatile i32, i32* %2, align 4, !dbg !6641
  %6 = lshr i32 %5, 28, !dbg !6642
  %7 = and i32 %6, 3, !dbg !6643
  store volatile i32 %7, i32* %2, align 4, !dbg !6644
  %8 = load volatile i32, i32* %2, align 4, !dbg !6645
  %9 = icmp eq i32 %8, 3, !dbg !6647
  br i1 %9, label %38, label %10, !dbg !6648

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6649
  store volatile i32 %11, i32* %2, align 4, !dbg !6651
  %12 = load volatile i32, i32* %2, align 4, !dbg !6652
  %13 = and i32 %12, -262145, !dbg !6653
  store volatile i32 %13, i32* %2, align 4, !dbg !6654
  %14 = load volatile i32, i32* %2, align 4, !dbg !6655
  %15 = and i32 %14, -16777217, !dbg !6656
  store volatile i32 %15, i32* %2, align 4, !dbg !6657
  %16 = load volatile i32, i32* %2, align 4, !dbg !6658
  store volatile i32 %16, i32* %2, align 4, !dbg !6659
  %17 = load volatile i32, i32* %2, align 4, !dbg !6660
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #22, !dbg !6661
  %18 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6662
  store volatile i32 %18, i32* %2, align 4, !dbg !6663
  %19 = load volatile i32, i32* %2, align 4, !dbg !6664
  %20 = and i32 %19, -805306369, !dbg !6665
  store volatile i32 %20, i32* %2, align 4, !dbg !6666
  %21 = load volatile i32, i32* %2, align 4, !dbg !6667
  %22 = and i32 %21, -16777217, !dbg !6668
  store volatile i32 %22, i32* %2, align 4, !dbg !6669
  %23 = load volatile i32, i32* %2, align 4, !dbg !6670
  %24 = or i32 %23, 805306368, !dbg !6671
  store volatile i32 %24, i32* %2, align 4, !dbg !6672
  %25 = load volatile i32, i32* %2, align 4, !dbg !6673
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #22, !dbg !6674
  br label %26, !dbg !6675

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6676
  store volatile i32 %27, i32* %2, align 4, !dbg !6678
  %28 = load volatile i32, i32* %2, align 4, !dbg !6679
  %29 = and i32 %28, 67108864, !dbg !6680
  store volatile i32 %29, i32* %2, align 4, !dbg !6681
  %30 = load volatile i32, i32* %2, align 4, !dbg !6682
  %31 = icmp eq i32 %30, 0, !dbg !6683
  br i1 %31, label %26, label %32, !dbg !6684, !llvm.loop !6685

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6687
  store volatile i32 %33, i32* %2, align 4, !dbg !6688
  %34 = load volatile i32, i32* %2, align 4, !dbg !6689
  %35 = and i32 %34, -262145, !dbg !6690
  store volatile i32 %35, i32* %2, align 4, !dbg !6691
  %36 = load volatile i32, i32* %2, align 4, !dbg !6692
  %37 = and i32 %36, -16777217, !dbg !6693
  store volatile i32 %37, i32* %2, align 4, !dbg !6694
  br label %38, !dbg !6695

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6696
  store volatile i32 %39, i32* %2, align 4, !dbg !6697
  %40 = icmp eq i8 %0, 0, !dbg !6698
  %41 = load volatile i32, i32* %2, align 4, !dbg !6700
  br i1 %40, label %44, label %42, !dbg !6701

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !6702
  store volatile i32 %43, i32* %2, align 4, !dbg !6704
  br label %45, !dbg !6705

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !6706
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !6708
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #22, !dbg !6709
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !6710
  ret void, !dbg !6710
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #10 !dbg !6711 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6715
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6715
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6713, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !6714, metadata !DIExpression()), !dbg !6717
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6718
  store volatile i32 %3, i32* %1, align 4, !dbg !6719
  %4 = load volatile i32, i32* %1, align 4, !dbg !6720
  %5 = and i32 %4, -805306369, !dbg !6721
  store volatile i32 %5, i32* %1, align 4, !dbg !6722
  %6 = load volatile i32, i32* %1, align 4, !dbg !6723
  %7 = and i32 %6, -16777217, !dbg !6724
  store volatile i32 %7, i32* %1, align 4, !dbg !6725
  %8 = load volatile i32, i32* %1, align 4, !dbg !6726
  store volatile i32 %8, i32* %1, align 4, !dbg !6727
  %9 = load volatile i32, i32* %1, align 4, !dbg !6728
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #22, !dbg !6729
  %10 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #22, !dbg !6730
  store volatile i32 %10, i32* %1, align 4, !dbg !6731
  %11 = load volatile i32, i32* %1, align 4, !dbg !6732
  %12 = and i32 %11, -262145, !dbg !6733
  store volatile i32 %12, i32* %1, align 4, !dbg !6734
  %13 = load volatile i32, i32* %1, align 4, !dbg !6735
  %14 = and i32 %13, -16777217, !dbg !6736
  store volatile i32 %14, i32* %1, align 4, !dbg !6737
  %15 = load volatile i32, i32* %1, align 4, !dbg !6738
  store volatile i32 %15, i32* %1, align 4, !dbg !6739
  %16 = load volatile i32, i32* %1, align 4, !dbg !6740
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #22, !dbg !6741
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6742
  ret void, !dbg !6742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #0 !dbg !6743 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6747
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6747
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6745, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !6746, metadata !DIExpression()), !dbg !6749
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6750
  store volatile i32 %3, i32* %1, align 4, !dbg !6751
  %4 = load volatile i32, i32* %1, align 4, !dbg !6752
  %5 = and i32 %4, -8, !dbg !6753
  store volatile i32 %5, i32* %1, align 4, !dbg !6754
  %6 = load volatile i32, i32* %1, align 4, !dbg !6755
  store volatile i32 %6, i32* %1, align 4, !dbg !6756
  %7 = load volatile i32, i32* %1, align 4, !dbg !6757
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #22, !dbg !6758
  %8 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6759
  store volatile i32 %8, i32* %1, align 4, !dbg !6760
  %9 = load volatile i32, i32* %1, align 4, !dbg !6761
  %10 = and i32 %9, -49153, !dbg !6762
  store volatile i32 %10, i32* %1, align 4, !dbg !6763
  %11 = load volatile i32, i32* %1, align 4, !dbg !6764
  store volatile i32 %11, i32* %1, align 4, !dbg !6765
  %12 = load volatile i32, i32* %1, align 4, !dbg !6766
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #22, !dbg !6767
  br label %13, !dbg !6768

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !6769
  %15 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6770
  %16 = icmp eq i32 %14, %15, !dbg !6771
  br i1 %16, label %17, label %13, !dbg !6768, !llvm.loop !6772

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #22, !dbg !6774
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !6775
  tail call void @SystemCoreClockUpdate() #20, !dbg !6776
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !6777
  %20 = udiv i32 %19, 1000, !dbg !6778
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #20, !dbg !6779
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6780
  ret void, !dbg !6780
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #0 !dbg !6781 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6785
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6785
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6783, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !6784, metadata !DIExpression()), !dbg !6787
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #22, !dbg !6788
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6789
  store volatile i32 %3, i32* %1, align 4, !dbg !6790
  %4 = load volatile i32, i32* %1, align 4, !dbg !6791
  %5 = and i32 %4, -49153, !dbg !6792
  store volatile i32 %5, i32* %1, align 4, !dbg !6793
  %6 = load volatile i32, i32* %1, align 4, !dbg !6794
  %7 = or i32 %6, 16384, !dbg !6795
  store volatile i32 %7, i32* %1, align 4, !dbg !6796
  %8 = load volatile i32, i32* %1, align 4, !dbg !6797
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #22, !dbg !6798
  br label %9, !dbg !6799

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !6800
  %11 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6801
  %12 = icmp eq i32 %10, %11, !dbg !6802
  br i1 %12, label %13, label %9, !dbg !6799, !llvm.loop !6803

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6805
  store volatile i32 %14, i32* %1, align 4, !dbg !6806
  %15 = load volatile i32, i32* %1, align 4, !dbg !6807
  %16 = and i32 %15, -1009, !dbg !6808
  store volatile i32 %16, i32* %1, align 4, !dbg !6809
  %17 = load volatile i32, i32* %1, align 4, !dbg !6810
  %18 = or i32 %17, 128, !dbg !6811
  store volatile i32 %18, i32* %1, align 4, !dbg !6812
  %19 = load volatile i32, i32* %1, align 4, !dbg !6813
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #22, !dbg !6814
  %20 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6815
  store volatile i32 %20, i32* %1, align 4, !dbg !6816
  %21 = load volatile i32, i32* %1, align 4, !dbg !6817
  %22 = and i32 %21, -8, !dbg !6818
  store volatile i32 %22, i32* %1, align 4, !dbg !6819
  %23 = load volatile i32, i32* %1, align 4, !dbg !6820
  %24 = or i32 %23, 4, !dbg !6821
  store volatile i32 %24, i32* %1, align 4, !dbg !6822
  %25 = load volatile i32, i32* %1, align 4, !dbg !6823
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #22, !dbg !6824
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !6825
  tail call void @SystemCoreClockUpdate() #20, !dbg !6826
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !6827
  %27 = udiv i32 %26, 1000, !dbg !6828
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #20, !dbg !6829
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6830
  ret void, !dbg !6830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #0 !dbg !6831 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6835
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6835
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6833, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !6834, metadata !DIExpression()), !dbg !6837
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #22, !dbg !6838
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6839
  store volatile i32 %3, i32* %1, align 4, !dbg !6840
  %4 = load volatile i32, i32* %1, align 4, !dbg !6841
  %5 = and i32 %4, -49153, !dbg !6842
  store volatile i32 %5, i32* %1, align 4, !dbg !6843
  %6 = load volatile i32, i32* %1, align 4, !dbg !6844
  %7 = or i32 %6, 32768, !dbg !6845
  store volatile i32 %7, i32* %1, align 4, !dbg !6846
  %8 = load volatile i32, i32* %1, align 4, !dbg !6847
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #22, !dbg !6848
  br label %9, !dbg !6849

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !6850
  %11 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6851
  %12 = icmp eq i32 %10, %11, !dbg !6852
  br i1 %12, label %13, label %9, !dbg !6849, !llvm.loop !6853

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6855
  store volatile i32 %14, i32* %1, align 4, !dbg !6856
  %15 = load volatile i32, i32* %1, align 4, !dbg !6857
  %16 = and i32 %15, -1009, !dbg !6858
  store volatile i32 %16, i32* %1, align 4, !dbg !6859
  %17 = load volatile i32, i32* %1, align 4, !dbg !6860
  %18 = or i32 %17, 32, !dbg !6861
  store volatile i32 %18, i32* %1, align 4, !dbg !6862
  %19 = load volatile i32, i32* %1, align 4, !dbg !6863
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #22, !dbg !6864
  %20 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6865
  store volatile i32 %20, i32* %1, align 4, !dbg !6866
  %21 = load volatile i32, i32* %1, align 4, !dbg !6867
  %22 = and i32 %21, -8, !dbg !6868
  store volatile i32 %22, i32* %1, align 4, !dbg !6869
  %23 = load volatile i32, i32* %1, align 4, !dbg !6870
  %24 = or i32 %23, 4, !dbg !6871
  store volatile i32 %24, i32* %1, align 4, !dbg !6872
  %25 = load volatile i32, i32* %1, align 4, !dbg !6873
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #22, !dbg !6874
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !6875
  tail call void @SystemCoreClockUpdate() #20, !dbg !6876
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !6877
  %27 = udiv i32 %26, 1000, !dbg !6878
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #20, !dbg !6879
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6880
  ret void, !dbg !6880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #0 !dbg !6881 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6885
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6885
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6883, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !6884, metadata !DIExpression()), !dbg !6887
  tail call void @cmnPLL1ON() #22, !dbg !6888
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6889
  store volatile i32 %3, i32* %1, align 4, !dbg !6890
  %4 = load volatile i32, i32* %1, align 4, !dbg !6891
  %5 = and i32 %4, -49153, !dbg !6892
  store volatile i32 %5, i32* %1, align 4, !dbg !6893
  %6 = load volatile i32, i32* %1, align 4, !dbg !6894
  store volatile i32 %6, i32* %1, align 4, !dbg !6895
  %7 = load volatile i32, i32* %1, align 4, !dbg !6896
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #22, !dbg !6897
  br label %8, !dbg !6898

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !6899
  %10 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6900
  %11 = icmp eq i32 %9, %10, !dbg !6901
  br i1 %11, label %12, label %8, !dbg !6898, !llvm.loop !6902

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #22, !dbg !6904
  store volatile i32 %13, i32* %1, align 4, !dbg !6905
  %14 = load volatile i32, i32* %1, align 4, !dbg !6906
  %15 = and i32 %14, -8, !dbg !6907
  store volatile i32 %15, i32* %1, align 4, !dbg !6908
  %16 = load volatile i32, i32* %1, align 4, !dbg !6909
  %17 = or i32 %16, 2, !dbg !6910
  store volatile i32 %17, i32* %1, align 4, !dbg !6911
  %18 = load volatile i32, i32* %1, align 4, !dbg !6912
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #22, !dbg !6913
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !6914
  tail call void @SystemCoreClockUpdate() #20, !dbg !6915
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !6916
  %20 = udiv i32 %19, 1000, !dbg !6917
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #20, !dbg !6918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6919
  ret void, !dbg !6919
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #10 section ".ramTEXT" !dbg !6920 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6924
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6924
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6922, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !6923, metadata !DIExpression()), !dbg !6926
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #22, !dbg !6927
  store volatile i32 %3, i32* %1, align 4, !dbg !6928
  %4 = load volatile i32, i32* %1, align 4, !dbg !6929
  %5 = and i32 %4, -24577, !dbg !6930
  store volatile i32 %5, i32* %1, align 4, !dbg !6931
  %6 = load volatile i32, i32* %1, align 4, !dbg !6932
  store volatile i32 %6, i32* %1, align 4, !dbg !6933
  %7 = load volatile i32, i32* %1, align 4, !dbg !6934
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #22, !dbg !6935
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6936
  ret void, !dbg !6936
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #10 section ".ramTEXT" !dbg !6937 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !6947
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6947
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6939, metadata !DIExpression()), !dbg !6948
  store volatile i32 0, i32* %1, align 4, !dbg !6948
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !6940, metadata !DIExpression()), !dbg !6949
  tail call void @cmnPLL1ON() #22, !dbg !6950
  %3 = tail call fastcc i32 @cmnReadRegister32.67(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #22, !dbg !6951
  store volatile i32 %3, i32* %1, align 4, !dbg !6952
  %4 = load volatile i32, i32* %1, align 4, !dbg !6953
  %5 = and i32 %4, -24577, !dbg !6954
  store volatile i32 %5, i32* %1, align 4, !dbg !6955
  %6 = load volatile i32, i32* %1, align 4, !dbg !6956
  %7 = or i32 %6, 8192, !dbg !6957
  store volatile i32 %7, i32* %1, align 4, !dbg !6958
  %8 = load volatile i32, i32* %1, align 4, !dbg !6959
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #22, !dbg !6960
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !6941, metadata !DIExpression()), !dbg !6961
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !6962
  %10 = and i32 %9, -4, !dbg !6962
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !6962
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !6943, metadata !DIExpression()), !dbg !6963
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !6964
  %12 = or i32 %11, 16, !dbg !6964
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !6964
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !6945, metadata !DIExpression()), !dbg !6965
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !6966
  %14 = and i32 %13, -64, !dbg !6966
  %15 = or i32 %14, 24, !dbg !6966
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !6966
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6967
  ret void, !dbg !6967
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #7 !dbg !6968 {
  %1 = tail call i32 @getc_nowait() #22, !dbg !6971
  call void @llvm.dbg.value(metadata i32 %1, metadata !6970, metadata !DIExpression()), !dbg !6972
  ret i32 %1, !dbg !6973
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #7 !dbg !6974 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !6977
  %2 = and i32 %1, 1, !dbg !6979
  %3 = icmp eq i32 %2, 0, !dbg !6979
  br i1 %3, label %7, label %4, !dbg !6980

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !6981
  %6 = and i32 %5, 255, !dbg !6983
  call void @llvm.dbg.value(metadata i32 %5, metadata !6976, metadata !DIExpression()), !dbg !6984
  br label %7, !dbg !6985

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !6986
  ret i32 %8, !dbg !6987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !6988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6993, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i8 %1, metadata !6994, metadata !DIExpression()), !dbg !6996
  %3 = icmp eq i32 %0, 0, !dbg !6997
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !6997
  call void @llvm.dbg.value(metadata i32 %4, metadata !6995, metadata !DIExpression()), !dbg !6996
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !6998

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !6999
  %9 = and i32 %8, 32, !dbg !7000
  %10 = icmp eq i32 %9, 0, !dbg !7001
  br i1 %10, label %7, label %11, !dbg !6998, !llvm.loop !7002

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !7004
  %13 = inttoptr i32 %4 to i32*, !dbg !7005
  store volatile i32 %12, i32* %13, align 65536, !dbg !7006
  ret void, !dbg !7007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #5 !dbg !7008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7012, metadata !DIExpression()), !dbg !7015
  %2 = icmp eq i32 %0, 0, !dbg !7016
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !7016
  call void @llvm.dbg.value(metadata i32 %3, metadata !7013, metadata !DIExpression()), !dbg !7015
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !7017

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !7018
  %8 = and i32 %7, 1, !dbg !7019
  %9 = icmp eq i32 %8, 0, !dbg !7020
  br i1 %9, label %6, label %10, !dbg !7017, !llvm.loop !7021

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !7023
  %12 = load volatile i32, i32* %11, align 65536, !dbg !7023
  %13 = trunc i32 %12 to i8, !dbg !7023
  call void @llvm.dbg.value(metadata i8 %13, metadata !7014, metadata !DIExpression()), !dbg !7015
  ret i8 %13, !dbg !7024
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #7 !dbg !7025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7029, metadata !DIExpression()), !dbg !7032
  %2 = icmp eq i32 %0, 0, !dbg !7033
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !7033
  call void @llvm.dbg.value(metadata i32 %3, metadata !7030, metadata !DIExpression()), !dbg !7032
  %4 = or i32 %3, 20, !dbg !7034
  %5 = inttoptr i32 %4 to i32*, !dbg !7034
  %6 = load volatile i32, i32* %5, align 4, !dbg !7034
  %7 = and i32 %6, 1, !dbg !7036
  %8 = icmp eq i32 %7, 0, !dbg !7036
  br i1 %8, label %13, label %9, !dbg !7037

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !7038
  %11 = load volatile i32, i32* %10, align 65536, !dbg !7038
  %12 = and i32 %11, 255, !dbg !7040
  call void @llvm.dbg.value(metadata i32 %11, metadata !7031, metadata !DIExpression()), !dbg !7032
  br label %13, !dbg !7041

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !7042
  ret i32 %14, !dbg !7043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #0 !dbg !7044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7048, metadata !DIExpression()), !dbg !7049
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !7050
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !7051

2:                                                ; preds = %1
  br label %3, !dbg !7052

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !7056
  %6 = or i32 %5, 1, !dbg !7056
  store volatile i32 %6, i32* %4, align 4, !dbg !7056
  br label %7, !dbg !7057

7:                                                ; preds = %3, %1
  ret void, !dbg !7057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 !dbg !7058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7062, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i32 %1, metadata !7063, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i16 %2, metadata !7064, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i16 %3, metadata !7065, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i16 %4, metadata !7066, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !7068, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !7075, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !7077, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.value(metadata i32 0, metadata !7078, metadata !DIExpression()), !dbg !7079
  %6 = tail call i32 @top_xtal_freq_get() #20, !dbg !7082
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !7083
  %7 = icmp eq i32 %0, 1, !dbg !7084
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !7084
  call void @llvm.dbg.value(metadata i32 %8, metadata !7068, metadata !DIExpression()), !dbg !7079
  %9 = or i32 %8, 36, !dbg !7085
  %10 = inttoptr i32 %9 to i32*, !dbg !7085
  store volatile i32 3, i32* %10, align 4, !dbg !7086
  %11 = or i32 %8, 12, !dbg !7087
  %12 = inttoptr i32 %11 to i32*, !dbg !7087
  %13 = load volatile i32, i32* %12, align 4, !dbg !7087
  call void @llvm.dbg.value(metadata i32 %13, metadata !7070, metadata !DIExpression()), !dbg !7079
  %14 = or i32 %13, 128, !dbg !7088
  store volatile i32 %14, i32* %12, align 4, !dbg !7089
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !7090
  %16 = udiv i32 %15, %1, !dbg !7091
  call void @llvm.dbg.value(metadata i32 %16, metadata !7069, metadata !DIExpression()), !dbg !7079
  %17 = lshr i32 %16, 8, !dbg !7092
  %18 = add nuw nsw i32 %17, 1, !dbg !7093
  call void @llvm.dbg.value(metadata i32 %18, metadata !7071, metadata !DIExpression()), !dbg !7079
  %19 = udiv i32 %16, %18, !dbg !7094
  %20 = add i32 %19, -1, !dbg !7096
  call void @llvm.dbg.value(metadata i32 %20, metadata !7072, metadata !DIExpression()), !dbg !7079
  %21 = icmp eq i32 %20, 3, !dbg !7097
  %22 = lshr i32 %20, 1, !dbg !7099
  %23 = add nsw i32 %22, -1, !dbg !7099
  %24 = select i1 %21, i32 0, i32 %23, !dbg !7099
  call void @llvm.dbg.value(metadata i32 %24, metadata !7073, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i32 undef, metadata !7078, metadata !DIExpression()), !dbg !7079
  %25 = mul i32 %15, 10, !dbg !7100
  %26 = udiv i32 %25, %1, !dbg !7101
  %27 = udiv i32 %26, %16, !dbg !7102
  %28 = mul i32 %19, -10, !dbg !7103
  %29 = add i32 %27, %28, !dbg !7104
  %30 = urem i32 %29, 10, !dbg !7105
  call void @llvm.dbg.value(metadata i32 %30, metadata !7074, metadata !DIExpression()), !dbg !7079
  %31 = and i32 %18, 255, !dbg !7106
  %32 = inttoptr i32 %8 to i32*, !dbg !7107
  store volatile i32 %31, i32* %32, align 65536, !dbg !7108
  %33 = lshr i32 %18, 8, !dbg !7109
  %34 = and i32 %33, 255, !dbg !7110
  %35 = or i32 %8, 4, !dbg !7111
  %36 = inttoptr i32 %35 to i32*, !dbg !7111
  store volatile i32 %34, i32* %36, align 4, !dbg !7112
  %37 = or i32 %8, 40, !dbg !7113
  %38 = inttoptr i32 %37 to i32*, !dbg !7113
  store volatile i32 %20, i32* %38, align 8, !dbg !7114
  %39 = or i32 %8, 44, !dbg !7115
  %40 = inttoptr i32 %39 to i32*, !dbg !7115
  store volatile i32 %24, i32* %40, align 4, !dbg !7116
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !7117
  %42 = load i16, i16* %41, align 2, !dbg !7117
  %43 = zext i16 %42 to i32, !dbg !7117
  %44 = or i32 %8, 88, !dbg !7118
  %45 = inttoptr i32 %44 to i32*, !dbg !7118
  store volatile i32 %43, i32* %45, align 8, !dbg !7119
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !7120
  %47 = load i16, i16* %46, align 2, !dbg !7120
  %48 = zext i16 %47 to i32, !dbg !7120
  %49 = or i32 %8, 84, !dbg !7121
  %50 = inttoptr i32 %49 to i32*, !dbg !7121
  store volatile i32 %48, i32* %50, align 4, !dbg !7122
  store volatile i32 %13, i32* %12, align 4, !dbg !7123
  %51 = or i32 %8, 8, !dbg !7124
  %52 = inttoptr i32 %51 to i32*, !dbg !7124
  store volatile i32 71, i32* %52, align 8, !dbg !7125
  %53 = inttoptr i32 %11 to i16*, !dbg !7126
  %54 = load volatile i16, i16* %53, align 4, !dbg !7126
  call void @llvm.dbg.value(metadata i16 %54, metadata !7067, metadata !DIExpression()), !dbg !7079
  %55 = and i16 %54, -64, !dbg !7127
  call void @llvm.dbg.value(metadata i16 %54, metadata !7067, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7079
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !7067, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7079
  %56 = and i16 %2, -61, !dbg !7128
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !7067, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7079
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !7067, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7079
  %57 = and i16 %4, -57, !dbg !7129
  call void @llvm.dbg.value(metadata i16 undef, metadata !7067, metadata !DIExpression()), !dbg !7079
  %58 = or i16 %56, %3, !dbg !7128
  %59 = or i16 %58, %57, !dbg !7129
  %60 = or i16 %59, %55, !dbg !7130
  call void @llvm.dbg.value(metadata i16 %60, metadata !7067, metadata !DIExpression()), !dbg !7079
  store volatile i16 %60, i16* %53, align 4, !dbg !7131
  ret void, !dbg !7132
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #7 !dbg !7133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7137, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata i32 %1, metadata !7138, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata i32* %2, metadata !7139, metadata !DIExpression()), !dbg !7140
  %4 = icmp eq i32 %0, 0, !dbg !7141
  %5 = icmp eq i32 %1, 0, !dbg !7143
  br i1 %4, label %6, label %16, !dbg !7144

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !7145

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !7147
  %9 = zext i16 %8 to i32, !dbg !7147
  br label %26, !dbg !7150

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !7151
  %12 = zext i16 %11 to i32, !dbg !7151
  store i32 %12, i32* %2, align 4, !dbg !7153
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !7154
  %14 = zext i16 %13 to i32, !dbg !7154
  %15 = sub nsw i32 %12, %14, !dbg !7155
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !7156

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !7158
  %19 = zext i16 %18 to i32, !dbg !7158
  br label %26, !dbg !7161

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !7162
  %22 = zext i16 %21 to i32, !dbg !7162
  store i32 %22, i32* %2, align 4, !dbg !7164
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !7165
  %24 = zext i16 %23 to i32, !dbg !7165
  %25 = sub nsw i32 %22, %24, !dbg !7166
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !7143
  ret void, !dbg !7167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !7168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7172, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i8* %1, metadata !7173, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i32 %2, metadata !7174, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i32 0, metadata !7175, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i32 0, metadata !7175, metadata !DIExpression()), !dbg !7176
  %4 = icmp eq i32 %2, 0, !dbg !7177
  br i1 %4, label %15, label %5, !dbg !7180

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7175, metadata !DIExpression()), !dbg !7176
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !7181

7:                                                ; preds = %5
  br label %8, !dbg !7183

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !7187
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !7187
  store i8 %10, i8* %11, align 1, !dbg !7187
  br label %12, !dbg !7188

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !7188
  call void @llvm.dbg.value(metadata i32 %13, metadata !7175, metadata !DIExpression()), !dbg !7176
  %14 = icmp eq i32 %13, %2, !dbg !7177
  br i1 %14, label %15, label %5, !dbg !7180, !llvm.loop !7189

15:                                               ; preds = %12, %3
  ret void, !dbg !7191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !7192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7196, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i8* %1, metadata !7197, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 %2, metadata !7198, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 0, metadata !7199, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 0, metadata !7199, metadata !DIExpression()), !dbg !7200
  %4 = icmp eq i32 %2, 0, !dbg !7201
  br i1 %4, label %16, label %5, !dbg !7204

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7199, metadata !DIExpression()), !dbg !7200
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !7205

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !7207
  %9 = load i8, i8* %8, align 1, !dbg !7207
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !7210
  br label %13, !dbg !7211

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !7212
  %12 = load i8, i8* %11, align 1, !dbg !7212
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !7215
  br label %13, !dbg !7216

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !7217
  call void @llvm.dbg.value(metadata i32 %14, metadata !7199, metadata !DIExpression()), !dbg !7200
  %15 = icmp eq i32 %14, %2, !dbg !7201
  br i1 %15, label %16, label %5, !dbg !7204, !llvm.loop !7218

16:                                               ; preds = %13, %3
  ret void, !dbg !7220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7225, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata i8* %1, metadata !7226, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata i32 %2, metadata !7227, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata i32 %3, metadata !7228, metadata !DIExpression()), !dbg !7229
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !7230

5:                                                ; preds = %4
  br label %6, !dbg !7231

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !7235
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #20, !dbg !7235
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #20, !dbg !7235
  br label %9, !dbg !7236

9:                                                ; preds = %6, %4
  ret void, !dbg !7236
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_SetAdrs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Flush(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #0 !dbg !7237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7241, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i8* %1, metadata !7242, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i32 %2, metadata !7243, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i32 %3, metadata !7244, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i32 %4, metadata !7245, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i32 %5, metadata !7246, metadata !DIExpression()), !dbg !7247
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !7248

7:                                                ; preds = %6
  br label %8, !dbg !7249

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !7253
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #20, !dbg !7253
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #20, !dbg !7253
  br label %11, !dbg !7254

11:                                               ; preds = %8, %6
  ret void, !dbg !7254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !7255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7259, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata void ()* %1, metadata !7260, metadata !DIExpression()), !dbg !7261
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !7262

3:                                                ; preds = %2
  br label %4, !dbg !7263

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #20, !dbg !7267
  br label %6, !dbg !7268

6:                                                ; preds = %4, %2
  ret void, !dbg !7268
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !7269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7271, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.value(metadata void ()* %1, metadata !7272, metadata !DIExpression()), !dbg !7273
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !7274

3:                                                ; preds = %2
  br label %4, !dbg !7275

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #20, !dbg !7279
  br label %6, !dbg !7280

6:                                                ; preds = %4, %2
  ret void, !dbg !7280
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !7281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7283, metadata !DIExpression()), !dbg !7287
  %2 = icmp eq i32 %0, 0, !dbg !7288
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !7288
  call void @llvm.dbg.value(metadata i32 %3, metadata !7284, metadata !DIExpression()), !dbg !7287
  %4 = or i32 %3, 12, !dbg !7289
  %5 = inttoptr i32 %4 to i32*, !dbg !7289
  %6 = load volatile i32, i32* %5, align 4, !dbg !7289
  call void @llvm.dbg.value(metadata i32 %6, metadata !7286, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7287
  store volatile i32 191, i32* %5, align 4, !dbg !7290
  %7 = or i32 %3, 8, !dbg !7291
  %8 = inttoptr i32 %7 to i32*, !dbg !7291
  %9 = load volatile i32, i32* %8, align 8, !dbg !7291
  call void @llvm.dbg.value(metadata i32 %9, metadata !7285, metadata !DIExpression()), !dbg !7287
  %10 = and i32 %9, 65327, !dbg !7292
  %11 = or i32 %10, 208, !dbg !7292
  call void @llvm.dbg.value(metadata i32 %9, metadata !7285, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !7287
  store volatile i32 %11, i32* %8, align 8, !dbg !7293
  %12 = or i32 %3, 68, !dbg !7294
  %13 = inttoptr i32 %12 to i32*, !dbg !7294
  store volatile i32 0, i32* %13, align 4, !dbg !7295
  store volatile i32 0, i32* %5, align 4, !dbg !7296
  %14 = or i32 %3, 16, !dbg !7297
  %15 = inttoptr i32 %14 to i32*, !dbg !7297
  store volatile i32 2, i32* %15, align 16, !dbg !7298
  %16 = and i32 %6, 65535, !dbg !7299
  store volatile i32 %16, i32* %5, align 4, !dbg !7300
  ret void, !dbg !7301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #5 !dbg !7302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7306, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata i8 %1, metadata !7307, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata i8 %2, metadata !7308, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata i8 %3, metadata !7309, metadata !DIExpression()), !dbg !7313
  %5 = icmp eq i32 %0, 0, !dbg !7314
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !7314
  call void @llvm.dbg.value(metadata i32 %6, metadata !7310, metadata !DIExpression()), !dbg !7313
  %7 = or i32 %6, 12, !dbg !7315
  %8 = inttoptr i32 %7 to i32*, !dbg !7315
  %9 = load volatile i32, i32* %8, align 4, !dbg !7315
  call void @llvm.dbg.value(metadata i32 %9, metadata !7312, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7313
  store volatile i32 191, i32* %8, align 4, !dbg !7316
  %10 = zext i8 %1 to i32, !dbg !7317
  %11 = or i32 %6, 16, !dbg !7318
  %12 = inttoptr i32 %11 to i32*, !dbg !7318
  store volatile i32 %10, i32* %12, align 16, !dbg !7319
  %13 = or i32 %6, 20, !dbg !7320
  %14 = inttoptr i32 %13 to i32*, !dbg !7320
  store volatile i32 %10, i32* %14, align 4, !dbg !7321
  %15 = zext i8 %2 to i32, !dbg !7322
  %16 = or i32 %6, 24, !dbg !7323
  %17 = inttoptr i32 %16 to i32*, !dbg !7323
  store volatile i32 %15, i32* %17, align 8, !dbg !7324
  %18 = or i32 %6, 28, !dbg !7325
  %19 = inttoptr i32 %18 to i32*, !dbg !7325
  store volatile i32 %15, i32* %19, align 4, !dbg !7326
  %20 = or i32 %6, 8, !dbg !7327
  %21 = inttoptr i32 %20 to i32*, !dbg !7327
  %22 = load volatile i32, i32* %21, align 8, !dbg !7327
  call void @llvm.dbg.value(metadata i32 %22, metadata !7311, metadata !DIExpression()), !dbg !7313
  %23 = and i32 %22, 65525, !dbg !7328
  %24 = or i32 %23, 10, !dbg !7328
  call void @llvm.dbg.value(metadata i32 %22, metadata !7311, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !7313
  store volatile i32 %24, i32* %21, align 8, !dbg !7329
  %25 = and i32 %9, 65535, !dbg !7330
  store volatile i32 %25, i32* %8, align 4, !dbg !7331
  %26 = zext i8 %3 to i32, !dbg !7332
  %27 = or i32 %6, 64, !dbg !7333
  %28 = inttoptr i32 %27 to i32*, !dbg !7333
  store volatile i32 %26, i32* %28, align 64, !dbg !7334
  %29 = or i32 %6, 68, !dbg !7335
  %30 = inttoptr i32 %29 to i32*, !dbg !7335
  store volatile i32 1, i32* %30, align 4, !dbg !7336
  ret void, !dbg !7337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !7338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7340, metadata !DIExpression()), !dbg !7343
  %2 = icmp eq i32 %0, 0, !dbg !7344
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !7344
  call void @llvm.dbg.value(metadata i32 %3, metadata !7341, metadata !DIExpression()), !dbg !7343
  %4 = or i32 %3, 12, !dbg !7345
  %5 = inttoptr i32 %4 to i32*, !dbg !7345
  %6 = load volatile i32, i32* %5, align 4, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %6, metadata !7342, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7343
  store volatile i32 191, i32* %5, align 4, !dbg !7346
  %7 = or i32 %3, 8, !dbg !7347
  %8 = inttoptr i32 %7 to i32*, !dbg !7347
  store volatile i32 0, i32* %8, align 8, !dbg !7348
  store volatile i32 0, i32* %5, align 4, !dbg !7349
  %9 = and i32 %6, 65535, !dbg !7350
  store volatile i32 %9, i32* %5, align 4, !dbg !7351
  ret void, !dbg !7352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(i32 noundef %0) local_unnamed_addr #5 !dbg !7353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7355, metadata !DIExpression()), !dbg !7357
  %2 = icmp eq i32 %0, 0, !dbg !7358
  call void @llvm.dbg.value(metadata i32 undef, metadata !7356, metadata !DIExpression()), !dbg !7357
  %3 = select i1 %2, i32 -2096955320, i32 -2096889784, !dbg !7359
  %4 = inttoptr i32 %3 to i32*, !dbg !7359
  store volatile i32 1, i32* %4, align 8, !dbg !7360
  ret void, !dbg !7361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !7362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7364, metadata !DIExpression()), !dbg !7368
  %2 = icmp eq i32 %0, 0, !dbg !7369
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !7369
  call void @llvm.dbg.value(metadata i32 %3, metadata !7365, metadata !DIExpression()), !dbg !7368
  %4 = or i32 %3, 12, !dbg !7370
  %5 = inttoptr i32 %4 to i32*, !dbg !7370
  %6 = load volatile i32, i32* %5, align 4, !dbg !7370
  call void @llvm.dbg.value(metadata i32 %6, metadata !7367, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7368
  store volatile i32 0, i32* %5, align 4, !dbg !7371
  %7 = or i32 %3, 4, !dbg !7372
  %8 = inttoptr i32 %7 to i32*, !dbg !7372
  %9 = load volatile i32, i32* %8, align 4, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %9, metadata !7366, metadata !DIExpression()), !dbg !7368
  %10 = and i32 %9, 65533, !dbg !7373
  %11 = or i32 %10, 2, !dbg !7373
  call void @llvm.dbg.value(metadata i32 %9, metadata !7366, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !7368
  store volatile i32 %11, i32* %8, align 4, !dbg !7374
  %12 = and i32 %6, 65535, !dbg !7375
  store volatile i32 %12, i32* %5, align 4, !dbg !7376
  %13 = or i32 %3, 72, !dbg !7377
  %14 = inttoptr i32 %13 to i32*, !dbg !7377
  store volatile i32 1, i32* %14, align 8, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_mask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !7380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7382, metadata !DIExpression()), !dbg !7386
  %2 = icmp eq i32 %0, 0, !dbg !7387
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !7387
  call void @llvm.dbg.value(metadata i32 %3, metadata !7383, metadata !DIExpression()), !dbg !7386
  %4 = or i32 %3, 12, !dbg !7388
  %5 = inttoptr i32 %4 to i32*, !dbg !7388
  %6 = load volatile i32, i32* %5, align 4, !dbg !7388
  call void @llvm.dbg.value(metadata i32 %6, metadata !7385, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7386
  store volatile i32 0, i32* %5, align 4, !dbg !7389
  %7 = or i32 %3, 4, !dbg !7390
  %8 = inttoptr i32 %7 to i32*, !dbg !7390
  %9 = load volatile i32, i32* %8, align 4, !dbg !7390
  call void @llvm.dbg.value(metadata i32 %9, metadata !7384, metadata !DIExpression()), !dbg !7386
  %10 = and i32 %9, 65533, !dbg !7391
  call void @llvm.dbg.value(metadata i32 %10, metadata !7384, metadata !DIExpression()), !dbg !7386
  store volatile i32 %10, i32* %8, align 4, !dbg !7392
  %11 = and i32 %6, 65535, !dbg !7393
  store volatile i32 %11, i32* %5, align 4, !dbg !7394
  %12 = or i32 %3, 72, !dbg !7395
  %13 = inttoptr i32 %12 to i32*, !dbg !7395
  store volatile i32 0, i32* %13, align 8, !dbg !7396
  ret void, !dbg !7397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !7398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7400, metadata !DIExpression()), !dbg !7404
  %2 = icmp eq i32 %0, 0, !dbg !7405
  %3 = select i1 %2, i32* inttoptr (i32 -2096955384 to i32*), i32* inttoptr (i32 -2096889848 to i32*)
  call void @llvm.dbg.value(metadata i32 undef, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 undef, metadata !7402, metadata !DIExpression()), !dbg !7404
  %4 = load volatile i32, i32* %3, align 8, !dbg !7407
  call void @llvm.dbg.value(metadata i32 %4, metadata !7403, metadata !DIExpression()), !dbg !7404
  %5 = and i32 %4, 63, !dbg !7408
  %6 = icmp eq i32 %5, 2, !dbg !7409
  br i1 %6, label %7, label %10, !dbg !7409

7:                                                ; preds = %1
  %8 = xor i1 %2, true
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !7401, metadata !DIExpression()), !dbg !7404
  tail call void @uart_send_handler(i32 noundef %9) #20, !dbg !7410
  br label %10, !dbg !7412

10:                                               ; preds = %1, %7
  ret void, !dbg !7413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #5 !dbg !7414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7416, metadata !DIExpression()), !dbg !7418
  %2 = icmp eq i32 %0, 0, !dbg !7419
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !7419
  call void @llvm.dbg.value(metadata i32 %3, metadata !7417, metadata !DIExpression()), !dbg !7418
  %4 = or i32 %3, 12, !dbg !7420
  %5 = inttoptr i32 %4 to i32*, !dbg !7420
  store volatile i32 191, i32* %5, align 4, !dbg !7421
  %6 = or i32 %3, 8, !dbg !7422
  %7 = inttoptr i32 %6 to i32*, !dbg !7422
  store volatile i32 16, i32* %7, align 8, !dbg !7423
  %8 = or i32 %3, 16, !dbg !7424
  %9 = inttoptr i32 %8 to i32*, !dbg !7424
  store volatile i32 0, i32* %9, align 16, !dbg !7425
  %10 = or i32 %3, 24, !dbg !7426
  %11 = inttoptr i32 %10 to i32*, !dbg !7426
  store volatile i32 0, i32* %11, align 8, !dbg !7427
  store volatile i32 128, i32* %5, align 4, !dbg !7428
  %12 = inttoptr i32 %3 to i32*, !dbg !7429
  store volatile i32 0, i32* %12, align 65536, !dbg !7430
  %13 = or i32 %3, 4, !dbg !7431
  %14 = inttoptr i32 %13 to i32*, !dbg !7431
  store volatile i32 0, i32* %14, align 4, !dbg !7432
  store volatile i32 0, i32* %5, align 4, !dbg !7433
  store volatile i32 0, i32* %14, align 4, !dbg !7434
  store volatile i32 0, i32* %7, align 8, !dbg !7435
  store volatile i32 191, i32* %5, align 4, !dbg !7436
  store volatile i32 0, i32* %7, align 8, !dbg !7437
  store volatile i32 0, i32* %5, align 4, !dbg !7438
  store volatile i32 0, i32* %9, align 16, !dbg !7439
  %15 = or i32 %3, 28, !dbg !7440
  %16 = inttoptr i32 %15 to i32*, !dbg !7440
  store volatile i32 0, i32* %16, align 4, !dbg !7441
  %17 = or i32 %3, 36, !dbg !7442
  %18 = inttoptr i32 %17 to i32*, !dbg !7442
  store volatile i32 0, i32* %18, align 4, !dbg !7443
  %19 = or i32 %3, 40, !dbg !7444
  %20 = inttoptr i32 %19 to i32*, !dbg !7444
  store volatile i32 0, i32* %20, align 8, !dbg !7445
  %21 = or i32 %3, 44, !dbg !7446
  %22 = inttoptr i32 %21 to i32*, !dbg !7446
  store volatile i32 0, i32* %22, align 4, !dbg !7447
  %23 = or i32 %3, 52, !dbg !7448
  %24 = inttoptr i32 %23 to i32*, !dbg !7448
  store volatile i32 0, i32* %24, align 4, !dbg !7449
  %25 = or i32 %3, 60, !dbg !7450
  %26 = inttoptr i32 %25 to i32*, !dbg !7450
  store volatile i32 0, i32* %26, align 4, !dbg !7451
  %27 = or i32 %3, 64, !dbg !7452
  %28 = inttoptr i32 %27 to i32*, !dbg !7452
  store volatile i32 0, i32* %28, align 64, !dbg !7453
  %29 = or i32 %3, 68, !dbg !7454
  %30 = inttoptr i32 %29 to i32*, !dbg !7454
  store volatile i32 0, i32* %30, align 4, !dbg !7455
  %31 = or i32 %3, 72, !dbg !7456
  %32 = inttoptr i32 %31 to i32*, !dbg !7456
  store volatile i32 0, i32* %32, align 8, !dbg !7457
  %33 = or i32 %3, 76, !dbg !7458
  %34 = inttoptr i32 %33 to i32*, !dbg !7458
  store volatile i32 0, i32* %34, align 4, !dbg !7459
  %35 = or i32 %3, 80, !dbg !7460
  %36 = inttoptr i32 %35 to i32*, !dbg !7460
  store volatile i32 0, i32* %36, align 16, !dbg !7461
  %37 = or i32 %3, 84, !dbg !7462
  %38 = inttoptr i32 %37 to i32*, !dbg !7462
  store volatile i32 0, i32* %38, align 4, !dbg !7463
  %39 = or i32 %3, 88, !dbg !7464
  %40 = inttoptr i32 %39 to i32*, !dbg !7464
  store volatile i32 0, i32* %40, align 8, !dbg !7465
  %41 = or i32 %3, 96, !dbg !7466
  %42 = inttoptr i32 %41 to i32*, !dbg !7466
  store volatile i32 0, i32* %42, align 32, !dbg !7467
  ret void, !dbg !7468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #5 !dbg !7469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7471, metadata !DIExpression()), !dbg !7473
  %2 = icmp eq i32 %0, 0, !dbg !7474
  call void @llvm.dbg.value(metadata i32 undef, metadata !7472, metadata !DIExpression()), !dbg !7473
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !7475

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !7476
  %7 = and i32 %6, 64, !dbg !7477
  %8 = icmp eq i32 %7, 0, !dbg !7478
  br i1 %8, label %5, label %9, !dbg !7475, !llvm.loop !7479

9:                                                ; preds = %5
  ret void, !dbg !7481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !7482 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7486, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.value(metadata i32 %1, metadata !7487, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.value(metadata i8* %2, metadata !7488, metadata !DIExpression()), !dbg !7498
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !7499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7499
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !7489, metadata !DIExpression()), !dbg !7500
  call void @llvm.va_start(i8* nonnull %5), !dbg !7501
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !7502
  %7 = load i32, i32* %6, align 4, !dbg !7502
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !7502
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #20, !dbg !7502
  call void @llvm.va_end(i8* nonnull %5), !dbg !7503
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7504
  ret void, !dbg !7504
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !7505 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7507, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 %1, metadata !7508, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i8* %2, metadata !7509, metadata !DIExpression()), !dbg !7511
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !7512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !7510, metadata !DIExpression()), !dbg !7513
  call void @llvm.va_start(i8* nonnull %5), !dbg !7514
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !7515
  %7 = load i32, i32* %6, align 4, !dbg !7515
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !7515
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #20, !dbg !7515
  call void @llvm.va_end(i8* nonnull %5), !dbg !7516
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7517
  ret void, !dbg !7517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !7518 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7520, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i32 %1, metadata !7521, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8* %2, metadata !7522, metadata !DIExpression()), !dbg !7524
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !7525
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7525
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !7523, metadata !DIExpression()), !dbg !7526
  call void @llvm.va_start(i8* nonnull %5), !dbg !7527
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !7528
  %7 = load i32, i32* %6, align 4, !dbg !7528
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !7528
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 2, i8* noundef %2, [1 x i32] %8) #20, !dbg !7528
  call void @llvm.va_end(i8* nonnull %5), !dbg !7529
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7530
  ret void, !dbg !7530
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !7531 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7533, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i32 %1, metadata !7534, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i8* %2, metadata !7535, metadata !DIExpression()), !dbg !7537
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !7538
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7538
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !7536, metadata !DIExpression()), !dbg !7539
  call void @llvm.va_start(i8* nonnull %5), !dbg !7540
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !7541
  %7 = load i32, i32* %6, align 4, !dbg !7541
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !7541
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %2, [1 x i32] %8) #20, !dbg !7541
  call void @llvm.va_end(i8* nonnull %5), !dbg !7542
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !7543
  ret void, !dbg !7543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_dump_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3, i32 noundef %4, ...) local_unnamed_addr #0 !dbg !7544 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7548, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i32 %1, metadata !7549, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8* %2, metadata !7550, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8* %3, metadata !7551, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i32 %4, metadata !7552, metadata !DIExpression()), !dbg !7554
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !7555
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !7555
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !7553, metadata !DIExpression()), !dbg !7556
  call void @llvm.va_start(i8* nonnull %7), !dbg !7557
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !7558
  %9 = load i32, i32* %8, align 4, !dbg !7558
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !7558
  call void @vdump_module_buffer(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %3, i32 noundef %4, i8* noundef %2, [1 x i32] %10) #20, !dbg !7558
  call void @llvm.va_end(i8* nonnull %7), !dbg !7559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !7560
  ret void, !dbg !7560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !7561 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7568
  call void @llvm.dbg.value(metadata i32 %1, metadata !7567, metadata !DIExpression()), !dbg !7569
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !7570, !range !2755
  %3 = icmp eq i8 %2, 0, !dbg !7570
  br i1 %3, label %5, label %4, !dbg !7572

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !7573
  br label %15, !dbg !7575

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !7576
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !7578
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !7579
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7580
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7581
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !7582
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !7583
  call void @llvm.dbg.value(metadata i32 0, metadata !7566, metadata !DIExpression()), !dbg !7569
  br label %7, !dbg !7584

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7566, metadata !DIExpression()), !dbg !7569
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !7586
  store volatile i32 0, i32* %9, align 4, !dbg !7589
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !7590
  store volatile i32 0, i32* %10, align 4, !dbg !7591
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !7592
  store i32 0, i32* %11, align 4, !dbg !7593
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !7594
  store i32 0, i32* %12, align 4, !dbg !7595
  %13 = add nuw nsw i32 %8, 1, !dbg !7596
  call void @llvm.dbg.value(metadata i32 %13, metadata !7566, metadata !DIExpression()), !dbg !7569
  %14 = icmp eq i32 %13, 16, !dbg !7597
  br i1 %14, label %15, label %7, !dbg !7584, !llvm.loop !7598

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !7569
  ret i32 %16, !dbg !7600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !7601 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7604
  call void @llvm.dbg.value(metadata i32 %1, metadata !7603, metadata !DIExpression()), !dbg !7605
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7606
  %3 = and i32 %2, -31, !dbg !7606
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7606
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7607
  %5 = or i32 %4, 19, !dbg !7607
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7607
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7608
  %7 = and i32 %6, -31, !dbg !7608
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7608
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7609
  %9 = or i32 %8, 3, !dbg !7609
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7609
  tail call void asm sideeffect "isb", ""() #19, !dbg !7610, !srcloc !7614
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !7615
  ret i32 0, !dbg !7616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !7617 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !7620
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7621
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7622
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !7623
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !7624
  call void @llvm.dbg.value(metadata i32 0, metadata !7619, metadata !DIExpression()), !dbg !7625
  br label %2, !dbg !7626

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7619, metadata !DIExpression()), !dbg !7625
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !7628
  store volatile i32 0, i32* %4, align 4, !dbg !7631
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !7632
  store volatile i32 0, i32* %5, align 4, !dbg !7633
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !7634
  store i32 0, i32* %6, align 4, !dbg !7635
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !7636
  store i32 0, i32* %7, align 4, !dbg !7637
  %8 = add nuw nsw i32 %3, 1, !dbg !7638
  call void @llvm.dbg.value(metadata i32 %8, metadata !7619, metadata !DIExpression()), !dbg !7625
  %9 = icmp eq i32 %8, 16, !dbg !7639
  br i1 %9, label %10, label %2, !dbg !7626, !llvm.loop !7640

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !7642
  ret i32 0, !dbg !7643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #5 !dbg !7644 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !7645
  %2 = and i32 %1, 768, !dbg !7647
  %3 = icmp eq i32 %2, 0, !dbg !7647
  br i1 %3, label %8, label %4, !dbg !7648

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7649
  %6 = or i32 %5, 13, !dbg !7649
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7649
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7650
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !7651
  br label %8, !dbg !7652

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !7653
  ret i32 %9, !dbg !7654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !7655 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %1, metadata !7657, metadata !DIExpression()), !dbg !7659
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7660
  %3 = and i32 %2, 1, !dbg !7662
  %4 = icmp eq i32 %3, 0, !dbg !7662
  br i1 %4, label %7, label %5, !dbg !7663

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !7664
  br label %7, !dbg !7666

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7667
  %9 = and i32 %8, -2, !dbg !7667
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7667
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7668
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !7669
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !7670
  ret i32 0, !dbg !7671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #5 !dbg !7672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7676, metadata !DIExpression()), !dbg !7677
  %2 = icmp ugt i32 %0, 15, !dbg !7678
  br i1 %2, label %13, label %3, !dbg !7680

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !7681
  %5 = load volatile i32, i32* %4, align 4, !dbg !7681
  %6 = and i32 %5, 256, !dbg !7683
  %7 = icmp eq i32 %6, 0, !dbg !7683
  br i1 %7, label %13, label %8, !dbg !7684

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !7685
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7687
  %11 = or i32 %10, %9, !dbg !7687
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7687
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7688
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !7689
  br label %13, !dbg !7690

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !7677
  ret i32 %14, !dbg !7691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #5 !dbg !7692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7694, metadata !DIExpression()), !dbg !7695
  %2 = icmp ugt i32 %0, 15, !dbg !7696
  br i1 %2, label %11, label %3, !dbg !7698

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !7699
  %5 = xor i32 %4, -1, !dbg !7700
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7701
  %7 = and i32 %6, %5, !dbg !7701
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7701
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7702
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !7703
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !7704
  store i32 0, i32* %9, align 4, !dbg !7705
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !7706
  store i32 0, i32* %10, align 4, !dbg !7707
  br label %11, !dbg !7708

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7695
  ret i32 %12, !dbg !7709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #5 !dbg !7710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7715, metadata !DIExpression()), !dbg !7716
  %2 = icmp ugt i32 %0, 3, !dbg !7717
  br i1 %2, label %13, label %3, !dbg !7719

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7720
  %5 = and i32 %4, -769, !dbg !7720
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7720
  %6 = shl nuw nsw i32 %0, 8, !dbg !7721
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7722
  %8 = or i32 %7, %6, !dbg !7722
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7722
  %9 = icmp eq i32 %0, 0, !dbg !7723
  br i1 %9, label %10, label %11, !dbg !7725

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7726
  br label %11, !dbg !7728

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7729
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !7730
  br label %13, !dbg !7731

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !7716
  ret i32 %14, !dbg !7732
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.gpio_backup_restore_t* noundef readonly %1) local_unnamed_addr #0 !dbg !7733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7744, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.value(metadata %struct.gpio_backup_restore_t* %1, metadata !7745, metadata !DIExpression()), !dbg !7746
  %3 = icmp ugt i32 %0, 15, !dbg !7747
  br i1 %3, label %30, label %4, !dbg !7749

4:                                                ; preds = %2
  %5 = icmp eq %struct.gpio_backup_restore_t* %1, null, !dbg !7750
  br i1 %5, label %30, label %6, !dbg !7752

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.gpio_backup_restore_t, %struct.gpio_backup_restore_t* %1, i32 0, i32 0, !dbg !7753
  %8 = load i32, i32* %7, align 4, !dbg !7753
  %9 = and i32 %8, 4095, !dbg !7755
  %10 = icmp eq i32 %9, 0, !dbg !7755
  br i1 %10, label %12, label %11, !dbg !7756

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.81, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #21, !dbg !7757
  unreachable, !dbg !7757

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.gpio_backup_restore_t, %struct.gpio_backup_restore_t* %1, i32 0, i32 1, !dbg !7759
  %14 = load i32, i32* %13, align 4, !dbg !7759
  %15 = and i32 %14, 4095, !dbg !7761
  %16 = icmp eq i32 %15, 0, !dbg !7761
  br i1 %16, label %18, label %17, !dbg !7762

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.81, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #21, !dbg !7763
  unreachable, !dbg !7763

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !7765
  store volatile i32 %8, i32* %19, align 4, !dbg !7766
  %20 = load i32, i32* %7, align 4, !dbg !7767
  %21 = load i32, i32* %13, align 4, !dbg !7768
  %22 = add i32 %21, %20, !dbg !7769
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !7770
  store volatile i32 %22, i32* %23, align 4, !dbg !7771
  %24 = load volatile i32, i32* %19, align 4, !dbg !7772
  %25 = or i32 %24, 256, !dbg !7772
  store volatile i32 %25, i32* %19, align 4, !dbg !7772
  %26 = load volatile i32, i32* %19, align 4, !dbg !7773
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !7774
  store i32 %26, i32* %27, align 4, !dbg !7775
  %28 = load volatile i32, i32* %23, align 4, !dbg !7776
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !7777
  store i32 %28, i32* %29, align 4, !dbg !7778
  br label %30, !dbg !7779

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !7746
  ret i32 %31, !dbg !7780
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !7781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7785, metadata !DIExpression()), !dbg !7787
  %2 = and i32 %0, 31, !dbg !7788
  %3 = icmp eq i32 %2, 0, !dbg !7788
  br i1 %3, label %4, label %9, !dbg !7790

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7791
  call void @llvm.dbg.value(metadata i32 %5, metadata !7786, metadata !DIExpression()), !dbg !7787
  %6 = and i32 %0, -32, !dbg !7792
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7793
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7794
  %8 = or i32 %7, 5, !dbg !7794
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7794
  tail call void asm sideeffect "isb", ""() #19, !dbg !7795, !srcloc !7614
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !7797
  br label %9, !dbg !7798

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !7787
  ret i32 %10, !dbg !7799
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !7800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7804, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %1, metadata !7805, metadata !DIExpression()), !dbg !7808
  %3 = add i32 %1, %0, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %3, metadata !7807, metadata !DIExpression()), !dbg !7808
  %4 = or i32 %1, %0, !dbg !7810
  %5 = and i32 %4, 31, !dbg !7810
  %6 = icmp eq i32 %5, 0, !dbg !7810
  br i1 %6, label %7, label %16, !dbg !7810

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %8, metadata !7806, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %0, metadata !7804, metadata !DIExpression()), !dbg !7808
  %9 = icmp ugt i32 %3, %0, !dbg !7813
  br i1 %9, label %10, label %15, !dbg !7814

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7804, metadata !DIExpression()), !dbg !7808
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #22, !dbg !7815
  %13 = add i32 %11, 32, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %13, metadata !7804, metadata !DIExpression()), !dbg !7808
  %14 = icmp ult i32 %13, %3, !dbg !7813
  br i1 %14, label %10, label %15, !dbg !7814, !llvm.loop !7818

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #19, !dbg !7820, !srcloc !7614
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !7822
  br label %16, !dbg !7823

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !7808
  ret i32 %17, !dbg !7824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !7825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7827, metadata !DIExpression()), !dbg !7829
  %2 = and i32 %0, 31, !dbg !7830
  %3 = icmp eq i32 %2, 0, !dbg !7830
  br i1 %3, label %4, label %9, !dbg !7832

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %5, metadata !7828, metadata !DIExpression()), !dbg !7829
  %6 = and i32 %0, -32, !dbg !7834
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7835
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7836
  %8 = or i32 %7, 21, !dbg !7836
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7836
  tail call void asm sideeffect "isb", ""() #19, !dbg !7837, !srcloc !7614
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !7839
  br label %9, !dbg !7840

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !7829
  ret i32 %10, !dbg !7841
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !7842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7844, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i32 %1, metadata !7845, metadata !DIExpression()), !dbg !7848
  %3 = add i32 %1, %0, !dbg !7849
  call void @llvm.dbg.value(metadata i32 %3, metadata !7847, metadata !DIExpression()), !dbg !7848
  %4 = or i32 %1, %0, !dbg !7850
  %5 = and i32 %4, 31, !dbg !7850
  %6 = icmp eq i32 %5, 0, !dbg !7850
  br i1 %6, label %7, label %16, !dbg !7850

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %8, metadata !7846, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i32 %0, metadata !7844, metadata !DIExpression()), !dbg !7848
  %9 = icmp ugt i32 %3, %0, !dbg !7853
  br i1 %9, label %10, label %15, !dbg !7854

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7844, metadata !DIExpression()), !dbg !7848
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #22, !dbg !7855
  %13 = add i32 %11, 32, !dbg !7857
  call void @llvm.dbg.value(metadata i32 %13, metadata !7844, metadata !DIExpression()), !dbg !7848
  %14 = icmp ult i32 %13, %3, !dbg !7853
  br i1 %14, label %10, label %15, !dbg !7854, !llvm.loop !7858

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #19, !dbg !7860, !srcloc !7614
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !7862
  br label %16, !dbg !7863

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !7848
  ret i32 %17, !dbg !7864
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !7865 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7868
  call void @llvm.dbg.value(metadata i32 %1, metadata !7867, metadata !DIExpression()), !dbg !7869
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7870
  %3 = and i32 %2, -31, !dbg !7870
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7870
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7871
  %5 = or i32 %4, 19, !dbg !7871
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7871
  tail call void asm sideeffect "isb", ""() #19, !dbg !7872, !srcloc !7614
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !7874
  ret i32 0, !dbg !7875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #5 !dbg !7876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7880, metadata !DIExpression()), !dbg !7882
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7883
  %3 = and i32 %2, 8, !dbg !7885
  %4 = icmp eq i32 %3, 0, !dbg !7885
  br i1 %4, label %23, label %5, !dbg !7886

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7881, metadata !DIExpression()), !dbg !7882
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7887
  %8 = shl nuw nsw i32 1, %6, !dbg !7892
  %9 = and i32 %7, %8, !dbg !7893
  %10 = icmp eq i32 %9, 0, !dbg !7893
  br i1 %10, label %20, label %11, !dbg !7894

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !7895
  %13 = load volatile i32, i32* %12, align 4, !dbg !7895
  %14 = and i32 %13, -257, !dbg !7898
  %15 = icmp ugt i32 %14, %0, !dbg !7899
  br i1 %15, label %20, label %16, !dbg !7900

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !7901
  %18 = load volatile i32, i32* %17, align 4, !dbg !7901
  %19 = icmp ugt i32 %18, %0, !dbg !7902
  br i1 %19, label %23, label %20, !dbg !7903

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %21, metadata !7881, metadata !DIExpression()), !dbg !7882
  %22 = icmp eq i32 %21, 16, !dbg !7905
  br i1 %22, label %23, label %5, !dbg !7906, !llvm.loop !7907

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !7882
  ret i1 %24, !dbg !7909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #8 !dbg !7910 {
  ret i32 0, !dbg !7914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !7915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7919, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 -1, metadata !7920, metadata !DIExpression()), !dbg !7921
  %2 = icmp ugt i32 %0, 95, !dbg !7922
  br i1 %2, label %4, label %3, !dbg !7922

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ.91(i32 noundef %0) #22, !dbg !7924
  call void @llvm.dbg.value(metadata i32 0, metadata !7920, metadata !DIExpression()), !dbg !7921
  br label %4, !dbg !7926

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7921
  ret i32 %5, !dbg !7927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.91(i32 noundef %0) unnamed_addr #5 !dbg !7928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7930, metadata !DIExpression()), !dbg !7931
  %2 = and i32 %0, 31, !dbg !7932
  %3 = shl nuw i32 1, %2, !dbg !7933
  %4 = lshr i32 %0, 5, !dbg !7934
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7935
  store volatile i32 %3, i32* %5, align 4, !dbg !7936
  ret void, !dbg !7937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !7938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7940, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i32 -1, metadata !7941, metadata !DIExpression()), !dbg !7942
  %2 = icmp ugt i32 %0, 95, !dbg !7943
  br i1 %2, label %4, label %3, !dbg !7943

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ.92(i32 noundef %0) #22, !dbg !7945
  call void @llvm.dbg.value(metadata i32 0, metadata !7941, metadata !DIExpression()), !dbg !7942
  br label %4, !dbg !7947

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7942
  ret i32 %5, !dbg !7948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.92(i32 noundef %0) unnamed_addr #5 !dbg !7949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7951, metadata !DIExpression()), !dbg !7952
  %2 = and i32 %0, 31, !dbg !7953
  %3 = shl nuw i32 1, %2, !dbg !7954
  %4 = lshr i32 %0, 5, !dbg !7955
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7956
  store volatile i32 %3, i32* %5, align 4, !dbg !7957
  ret void, !dbg !7958
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #7 !dbg !7959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7963, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i32 255, metadata !7964, metadata !DIExpression()), !dbg !7965
  %2 = icmp ugt i32 %0, 95, !dbg !7966
  br i1 %2, label %5, label %3, !dbg !7966

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #22, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %4, metadata !7964, metadata !DIExpression()), !dbg !7965
  br label %5, !dbg !7970

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !7965
  ret i32 %6, !dbg !7971
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #7 !dbg !7972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7976, metadata !DIExpression()), !dbg !7977
  %2 = lshr i32 %0, 5, !dbg !7978
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !7979
  %4 = load volatile i32, i32* %3, align 4, !dbg !7979
  %5 = and i32 %0, 31, !dbg !7980
  %6 = lshr i32 %4, %5, !dbg !7981
  %7 = and i32 %6, 1, !dbg !7981
  ret i32 %7, !dbg !7982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !7983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7985, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 -1, metadata !7986, metadata !DIExpression()), !dbg !7987
  %2 = icmp ugt i32 %0, 95, !dbg !7988
  br i1 %2, label %4, label %3, !dbg !7988

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #22, !dbg !7990
  call void @llvm.dbg.value(metadata i32 0, metadata !7986, metadata !DIExpression()), !dbg !7987
  br label %4, !dbg !7992

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7987
  ret i32 %5, !dbg !7993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !7994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7996, metadata !DIExpression()), !dbg !7997
  %2 = and i32 %0, 31, !dbg !7998
  %3 = shl nuw i32 1, %2, !dbg !7999
  %4 = lshr i32 %0, 5, !dbg !8000
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !8001
  store volatile i32 %3, i32* %5, align 4, !dbg !8002
  ret void, !dbg !8003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !8004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8006, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i32 -1, metadata !8007, metadata !DIExpression()), !dbg !8008
  %2 = icmp ugt i32 %0, 95, !dbg !8009
  br i1 %2, label %4, label %3, !dbg !8009

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ.93(i32 noundef %0) #22, !dbg !8011
  call void @llvm.dbg.value(metadata i32 0, metadata !8007, metadata !DIExpression()), !dbg !8008
  br label %4, !dbg !8013

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8008
  ret i32 %5, !dbg !8014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.93(i32 noundef %0) unnamed_addr #5 !dbg !8015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8017, metadata !DIExpression()), !dbg !8018
  %2 = and i32 %0, 31, !dbg !8019
  %3 = shl nuw i32 1, %2, !dbg !8020
  %4 = lshr i32 %0, 5, !dbg !8021
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !8022
  store volatile i32 %3, i32* %5, align 4, !dbg !8023
  ret void, !dbg !8024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !8025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8029, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %1, metadata !8030, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 -1, metadata !8031, metadata !DIExpression()), !dbg !8032
  %3 = icmp ugt i32 %0, 95, !dbg !8033
  br i1 %3, label %5, label %4, !dbg !8033

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority.96(i32 noundef %0, i32 noundef %1) #22, !dbg !8035
  call void @llvm.dbg.value(metadata i32 0, metadata !8031, metadata !DIExpression()), !dbg !8032
  br label %5, !dbg !8037

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !8032
  ret i32 %6, !dbg !8038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority.96(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !8039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8041, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %1, metadata !8042, metadata !DIExpression()), !dbg !8043
  %3 = trunc i32 %1 to i8, !dbg !8044
  %4 = shl i8 %3, 5, !dbg !8044
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8047
  store volatile i8 %4, i8* %5, align 1, !dbg !8048
  ret void, !dbg !8049
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #7 !dbg !8050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8052, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.value(metadata i32 68, metadata !8053, metadata !DIExpression()), !dbg !8054
  %2 = icmp ugt i32 %0, 95, !dbg !8055
  br i1 %2, label %5, label %3, !dbg !8055

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #22, !dbg !8057
  call void @llvm.dbg.value(metadata i32 %4, metadata !8053, metadata !DIExpression()), !dbg !8054
  br label %5, !dbg !8059

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !8054
  ret i32 %6, !dbg !8060
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #7 !dbg !8061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8063, metadata !DIExpression()), !dbg !8064
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8065
  %3 = load volatile i8, i8* %2, align 1, !dbg !8065
  %4 = lshr i8 %3, 5, !dbg !8068
  %5 = zext i8 %4 to i32, !dbg !8068
  ret i32 %5, !dbg !8069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".ramTEXT" !dbg !8070 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8072, metadata !DIExpression()), !dbg !8074
  tail call void @Flash_ReturnReady() #20, !dbg !8075
  %1 = tail call fastcc i32 @get_current_irq() #22, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()), !dbg !8074
  %2 = icmp ugt i32 %1, 95, !dbg !8077
  br i1 %2, label %12, label %3, !dbg !8077

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !8079
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !8079
  %6 = icmp eq void (i32)* %5, null, !dbg !8081
  br i1 %6, label %7, label %8, !dbg !8082

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !8072, metadata !DIExpression()), !dbg !8074
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i32 0, i32 0)) #20, !dbg !8083
  br label %12, !dbg !8085

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #22, !dbg !8086
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !8088
  store i32 %9, i32* %10, align 4, !dbg !8089
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !8090
  tail call void %11(i32 noundef %1) #20, !dbg !8091
  call void @llvm.dbg.value(metadata i32 0, metadata !8072, metadata !DIExpression()), !dbg !8074
  br label %12, !dbg !8092

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !8074
  ret i32 %13, !dbg !8093
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #7 !dbg !8094 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8097
  %2 = and i32 %1, 511, !dbg !8098
  call void @llvm.dbg.value(metadata i32 %2, metadata !8096, metadata !DIExpression()), !dbg !8099
  %3 = add nsw i32 %2, -16, !dbg !8100
  ret i32 %3, !dbg !8101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #7 !dbg !8102 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8103
  %2 = lshr i32 %1, 22, !dbg !8104
  %3 = and i32 %2, 1, !dbg !8104
  ret i32 %3, !dbg !8105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !8106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8111, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !8112, metadata !DIExpression()), !dbg !8114
  %3 = icmp ugt i32 %0, 95, !dbg !8115
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !8115
  br i1 %5, label %10, label %6, !dbg !8115

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8117
  call void @llvm.dbg.value(metadata i32 %7, metadata !8113, metadata !DIExpression()), !dbg !8114
  tail call fastcc void @NVIC_ClearPendingIRQ.93(i32 noundef %0) #22, !dbg !8118
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !8119
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !8120
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !8121
  store i32 0, i32* %9, align 4, !dbg !8122
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !8123
  br label %10, !dbg !8124

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !8114
  ret i32 %11, !dbg !8125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !8126 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8130, metadata !DIExpression()), !dbg !8131
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8132
  store i32 %2, i32* %0, align 4, !dbg !8133
  ret i32 0, !dbg !8134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !8135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8139, metadata !DIExpression()), !dbg !8140
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8141
  ret i32 0, !dbg !8142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !8143 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8148, metadata !DIExpression()), !dbg !8149
  %1 = tail call i32 @flash_sfc_config(i8 noundef zeroext 0) #20, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %1, metadata !8148, metadata !DIExpression()), !dbg !8149
  %2 = ashr i32 %1, 31, !dbg !8151
  ret i32 %2, !dbg !8152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #8 !dbg !8153 {
  ret i32 0, !dbg !8154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8160, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %1, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 -1, metadata !8162, metadata !DIExpression()), !dbg !8163
  %3 = tail call i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) #20, !dbg !8164
  call void @llvm.dbg.value(metadata i32 %3, metadata !8162, metadata !DIExpression()), !dbg !8163
  %4 = ashr i32 %3, 31, !dbg !8165
  ret i32 %4, !dbg !8166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i8* %1, metadata !8172, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %2, metadata !8173, metadata !DIExpression()), !dbg !8174
  %4 = add i32 %0, 268435456, !dbg !8175
  %5 = inttoptr i32 %4 to i8*, !dbg !8176
  tail call void @hal_flash_direct_read(i8* noundef %5, i8* noundef %1, i32 noundef %2) #20, !dbg !8177
  ret i32 0, !dbg !8178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8183, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i8* %1, metadata !8184, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i32 %2, metadata !8185, metadata !DIExpression()), !dbg !8187
  %4 = tail call i32 @flash_sfc_write(i32 noundef %0, i32 noundef %2, i8* noundef %1) #20, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %4, metadata !8186, metadata !DIExpression()), !dbg !8187
  %5 = ashr i32 %4, 31, !dbg !8189
  ret i32 %5, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !8191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8196, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8 %1, metadata !8197, metadata !DIExpression()), !dbg !8199
  %3 = icmp ugt i32 %0, 60, !dbg !8200
  br i1 %3, label %11, label %4, !dbg !8202

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !8203
  br i1 %5, label %11, label %6, !dbg !8205

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !8206
  %8 = tail call i32 @pinmux_config(i32 noundef %0, i32 noundef %7) #20, !dbg !8207
  call void @llvm.dbg.value(metadata i32 %8, metadata !8198, metadata !DIExpression()), !dbg !8199
  %9 = icmp slt i32 %8, 0, !dbg !8208
  %10 = select i1 %9, i32 -3, i32 0, !dbg !8208
  br label %11, !dbg !8209

11:                                               ; preds = %4, %2, %6
  %12 = phi i32 [ %10, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !8199
  ret i32 %12, !dbg !8210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #8 !dbg !8211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8216, metadata !DIExpression()), !dbg !8217
  ret i32 0, !dbg !8218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #8 !dbg !8219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8221, metadata !DIExpression()), !dbg !8222
  ret i32 0, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !8224 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8229, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.value(metadata i32* %1, metadata !8230, metadata !DIExpression()), !dbg !8239
  %4 = icmp eq i32* %1, null, !dbg !8240
  br i1 %4, label %12, label %5, !dbg !8242

5:                                                ; preds = %2
  %6 = icmp ugt i32 %0, 60, !dbg !8243
  br i1 %6, label %12, label %7, !dbg !8245

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !8246
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19, !dbg !8246
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #20, !dbg !8246
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 2, !dbg !8246
  %10 = load i8, i8* %9, align 1, !dbg !8246
  call void @llvm.dbg.value(metadata i8 %10, metadata !8231, metadata !DIExpression(DW_OP_LLVM_fragment, 40, 8)), !dbg !8239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19, !dbg !8246
  %11 = zext i8 %10 to i32, !dbg !8247
  store i32 %11, i32* %1, align 4, !dbg !8248
  br label %12, !dbg !8249

12:                                               ; preds = %5, %2, %7
  %13 = phi i32 [ 0, %7 ], [ -1, %2 ], [ -2, %5 ], !dbg !8239
  ret i32 %13, !dbg !8250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8255, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32 %1, metadata !8256, metadata !DIExpression()), !dbg !8258
  %3 = icmp ugt i32 %0, 60, !dbg !8259
  br i1 %3, label %9, label %4, !dbg !8261

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i8, !dbg !8262
  %6 = tail call i32 @gpio_write(i32 noundef %0, i8 noundef zeroext %5) #20, !dbg !8263
  call void @llvm.dbg.value(metadata i32 %6, metadata !8257, metadata !DIExpression()), !dbg !8258
  %7 = icmp slt i32 %6, 0, !dbg !8264
  %8 = select i1 %7, i32 -3, i32 0, !dbg !8264
  br label %9, !dbg !8265

9:                                                ; preds = %2, %4
  %10 = phi i32 [ %8, %4 ], [ -2, %2 ], !dbg !8258
  ret i32 %10, !dbg !8266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !8267 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8269, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32* %1, metadata !8270, metadata !DIExpression()), !dbg !8272
  %4 = icmp ugt i32 %0, 60, !dbg !8273
  br i1 %4, label %12, label %5, !dbg !8275

5:                                                ; preds = %2
  %6 = icmp eq i32* %1, null, !dbg !8276
  br i1 %6, label %12, label %7, !dbg !8278

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !8279
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19, !dbg !8279
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #20, !dbg !8279
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 3, !dbg !8279
  %10 = load i8, i8* %9, align 2, !dbg !8279
  call void @llvm.dbg.value(metadata i8 %10, metadata !8271, metadata !DIExpression(DW_OP_LLVM_fragment, 48, 8)), !dbg !8272
  call void @llvm.dbg.value(metadata i8 undef, metadata !8271, metadata !DIExpression(DW_OP_LLVM_fragment, 56, 8)), !dbg !8272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19, !dbg !8279
  %11 = zext i8 %10 to i32, !dbg !8280
  store i32 %11, i32* %1, align 4, !dbg !8281
  br label %12, !dbg !8282

12:                                               ; preds = %5, %2, %7
  %13 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !8272
  ret i32 %13, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8289, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 %1, metadata !8290, metadata !DIExpression()), !dbg !8292
  %3 = icmp ugt i32 %0, 60, !dbg !8293
  br i1 %3, label %8, label %4, !dbg !8295

4:                                                ; preds = %2
  %5 = tail call i32 @gpio_direction(i32 noundef %0, i32 noundef %1) #20, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %5, metadata !8291, metadata !DIExpression()), !dbg !8292
  %6 = icmp slt i32 %5, 0, !dbg !8297
  %7 = select i1 %6, i32 -3, i32 0, !dbg !8297
  br label %8, !dbg !8298

8:                                                ; preds = %2, %4
  %9 = phi i32 [ %7, %4 ], [ -2, %2 ], !dbg !8292
  ret i32 %9, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !8300 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8305, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32* %1, metadata !8306, metadata !DIExpression()), !dbg !8308
  %4 = icmp ugt i32 %0, 60, !dbg !8309
  br i1 %4, label %13, label %5, !dbg !8311

5:                                                ; preds = %2
  %6 = icmp eq i32* %1, null, !dbg !8312
  br i1 %6, label %13, label %7, !dbg !8314

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !8315
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19, !dbg !8315
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #20, !dbg !8315
  call void @llvm.dbg.value(metadata i32 undef, metadata !8307, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !8308
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 1, !dbg !8315
  %10 = load i8, i8* %9, align 4, !dbg !8315
  call void @llvm.dbg.value(metadata i8 %10, metadata !8307, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 8)), !dbg !8308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19, !dbg !8315
  %11 = icmp ne i8 %10, 0, !dbg !8316
  %12 = zext i1 %11 to i32, !dbg !8316
  store i32 %12, i32* %1, align 4, !dbg !8317
  br label %13, !dbg !8318

13:                                               ; preds = %5, %2, %7
  %14 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !8308
  ret i32 %14, !dbg !8319
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #0 !dbg !8320 {
  %2 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8322, metadata !DIExpression()), !dbg !8324
  %3 = icmp ugt i32 %0, 60, !dbg !8325
  br i1 %3, label %11, label %4, !dbg !8327

4:                                                ; preds = %1
  %5 = bitcast %struct.gpio_status* %2 to i8*, !dbg !8328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19, !dbg !8328
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %2, i32 noundef %0) #20, !dbg !8328
  %6 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %2, i32 0, i32 3, !dbg !8328
  %7 = load i8, i8* %6, align 2, !dbg !8328
  call void @llvm.dbg.value(metadata i8 %7, metadata !8323, metadata !DIExpression(DW_OP_LLVM_fragment, 48, 8)), !dbg !8324
  call void @llvm.dbg.value(metadata i8 undef, metadata !8323, metadata !DIExpression(DW_OP_LLVM_fragment, 56, 8)), !dbg !8324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19, !dbg !8328
  %8 = xor i8 %7, 1, !dbg !8329
  %9 = zext i8 %8 to i32, !dbg !8329
  %10 = call i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %9) #22, !dbg !8330
  br label %11, !dbg !8331

11:                                               ; preds = %1, %4
  %12 = phi i32 [ %10, %4 ], [ -2, %1 ], !dbg !8324
  ret i32 %12, !dbg !8332
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #0 !dbg !8333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8335, metadata !DIExpression()), !dbg !8337
  %2 = icmp ugt i32 %0, 60, !dbg !8338
  br i1 %2, label %10, label %3, !dbg !8340

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #20, !dbg !8341
  call void @llvm.dbg.value(metadata i32 %4, metadata !8336, metadata !DIExpression()), !dbg !8337
  %5 = icmp slt i32 %4, 0, !dbg !8342
  br i1 %5, label %10, label %6, !dbg !8344

6:                                                ; preds = %3
  %7 = tail call i32 @gpio_PullUp(i32 noundef %0) #20, !dbg !8345
  call void @llvm.dbg.value(metadata i32 %7, metadata !8336, metadata !DIExpression()), !dbg !8337
  %8 = icmp slt i32 %7, 0, !dbg !8346
  %9 = select i1 %8, i32 -3, i32 0, !dbg !8346
  br label %10, !dbg !8347

10:                                               ; preds = %3, %1, %6
  %11 = phi i32 [ %9, %6 ], [ -2, %1 ], [ -3, %3 ], !dbg !8337
  ret i32 %11, !dbg !8348
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #0 !dbg !8349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8351, metadata !DIExpression()), !dbg !8353
  %2 = icmp ugt i32 %0, 60, !dbg !8354
  br i1 %2, label %10, label %3, !dbg !8356

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #20, !dbg !8357
  call void @llvm.dbg.value(metadata i32 %4, metadata !8352, metadata !DIExpression()), !dbg !8353
  %5 = icmp slt i32 %4, 0, !dbg !8358
  br i1 %5, label %10, label %6, !dbg !8360

6:                                                ; preds = %3
  %7 = tail call i32 @gpio_PullDown(i32 noundef %0) #20, !dbg !8361
  call void @llvm.dbg.value(metadata i32 %7, metadata !8352, metadata !DIExpression()), !dbg !8353
  %8 = icmp slt i32 %7, 0, !dbg !8362
  %9 = select i1 %8, i32 -3, i32 0, !dbg !8362
  br label %10, !dbg !8363

10:                                               ; preds = %3, %1, %6
  %11 = phi i32 [ %9, %6 ], [ -2, %1 ], [ -3, %3 ], !dbg !8353
  ret i32 %11, !dbg !8364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #0 !dbg !8365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8367, metadata !DIExpression()), !dbg !8369
  %2 = icmp ugt i32 %0, 60, !dbg !8370
  br i1 %2, label %7, label %3, !dbg !8372

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #20, !dbg !8373
  call void @llvm.dbg.value(metadata i32 %4, metadata !8368, metadata !DIExpression()), !dbg !8369
  %5 = icmp slt i32 %4, 0, !dbg !8374
  %6 = select i1 %5, i32 -3, i32 0, !dbg !8374
  br label %7, !dbg !8375

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ -2, %1 ], !dbg !8369
  ret i32 %8, !dbg !8376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8381, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.value(metadata i32 %1, metadata !8382, metadata !DIExpression()), !dbg !8384
  %3 = icmp ugt i32 %0, 60, !dbg !8385
  br i1 %3, label %9, label %4, !dbg !8387

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i8, !dbg !8388
  %6 = tail call i32 @gpio_SetDriving(i32 noundef %0, i8 noundef zeroext %5) #20, !dbg !8389
  call void @llvm.dbg.value(metadata i32 %6, metadata !8383, metadata !DIExpression()), !dbg !8384
  %7 = icmp slt i32 %6, 0, !dbg !8390
  %8 = select i1 %7, i32 -3, i32 0, !dbg !8390
  br label %9, !dbg !8391

9:                                                ; preds = %2, %4
  %10 = phi i32 [ %8, %4 ], [ -2, %2 ], !dbg !8384
  ret i32 %10, !dbg !8392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !8393 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !8398, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i32* %1, metadata !8399, metadata !DIExpression()), !dbg !8402
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !8403
  %4 = icmp ugt i32 %0, 60, !dbg !8404
  br i1 %4, label %11, label %5, !dbg !8406

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %3, metadata !8401, metadata !DIExpression(DW_OP_deref)), !dbg !8402
  %6 = call i32 @gpio_GetDriving(i32 noundef %0, i8* noundef nonnull %3) #20, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %6, metadata !8400, metadata !DIExpression()), !dbg !8402
  %7 = load i8, i8* %3, align 1, !dbg !8408
  call void @llvm.dbg.value(metadata i8 %7, metadata !8401, metadata !DIExpression()), !dbg !8402
  %8 = zext i8 %7 to i32, !dbg !8409
  store i32 %8, i32* %1, align 4, !dbg !8410
  %9 = icmp slt i32 %6, 0, !dbg !8411
  %10 = select i1 %9, i32 -3, i32 0, !dbg !8411
  br label %11, !dbg !8412

11:                                               ; preds = %2, %5
  %12 = phi i32 [ %10, %5 ], [ -2, %2 ], !dbg !8402
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !8413
  ret i32 %12, !dbg !8413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !8414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8419, metadata !DIExpression()), !dbg !8420
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !8421
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !8423
  %4 = load i8, i8* %3, align 4, !dbg !8423, !range !2755
  %5 = icmp eq i8 %4, 0, !dbg !8423
  br i1 %5, label %6, label %12, !dbg !8424

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !8425
  br i1 %7, label %9, label %8, !dbg !8427

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.104, i32 0, i32 0), i32 noundef %0) #20, !dbg !8428
  br label %12, !dbg !8430

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !8431
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #20, !dbg !8432
  store i8 1, i8* %3, align 4, !dbg !8433
  br label %12, !dbg !8434

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !8420
  ret i32 %13, !dbg !8435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #8 !dbg !8436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8440, metadata !DIExpression()), !dbg !8441
  %2 = icmp ult i32 %0, 5, !dbg !8442
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !8444
  ret i1 %4, !dbg !8445
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !8446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8448, metadata !DIExpression()), !dbg !8449
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !8450
  br i1 %2, label %4, label %3, !dbg !8452

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.104, i32 0, i32 0), i32 noundef %0) #20, !dbg !8453
  br label %14, !dbg !8455

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !8456
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !8458
  %7 = load i32, i32* %6, align 4, !dbg !8458
  %8 = icmp eq i32 %7, 0, !dbg !8459
  br i1 %8, label %10, label %9, !dbg !8460

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.105, i32 0, i32 0), i32 noundef %0) #20, !dbg !8461
  br label %14, !dbg !8463

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !8464
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #20, !dbg !8465
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !8466
  store i8 0, i8* %13, align 4, !dbg !8467
  br label %14, !dbg !8468

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !8449
  ret i32 %15, !dbg !8469
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !8470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8475, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32* %1, metadata !8476, metadata !DIExpression()), !dbg !8477
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !8478

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !8479
  %5 = icmp eq i32 %4, 1, !dbg !8483
  br i1 %5, label %7, label %6, !dbg !8484

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #20, !dbg !8485
  br label %7, !dbg !8487

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #20, !dbg !8488
  store i32 %8, i32* %1, align 4, !dbg !8489
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !8490
  br label %25, !dbg !8491

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !8492
  %11 = icmp eq i32 %10, 1, !dbg !8496
  br i1 %11, label %13, label %12, !dbg !8497

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #20, !dbg !8498
  br label %13, !dbg !8500

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #20, !dbg !8501
  %15 = tail call i32 @top_mcu_freq_get() #20, !dbg !8502
  %16 = udiv i32 %15, 1000000, !dbg !8503
  %17 = udiv i32 %14, %16, !dbg !8504
  store i32 %17, i32* %1, align 4, !dbg !8505
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !8506
  br label %25, !dbg !8507

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !8508
  %20 = icmp eq i32 %19, 1, !dbg !8512
  br i1 %20, label %22, label %21, !dbg !8513

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #20, !dbg !8514
  br label %22, !dbg !8516

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #20, !dbg !8517
  store i32 %23, i32* %1, align 4, !dbg !8518
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !8519
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.108, i32 0, i32 0), i32 noundef %0) #20, !dbg !8520
  br label %25, !dbg !8522

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !8477
  ret i32 %26, !dbg !8523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 !dbg !8524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8528, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i32 %1, metadata !8529, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i32* %2, metadata !8530, metadata !DIExpression()), !dbg !8531
  %4 = icmp eq i32* %2, null, !dbg !8532
  br i1 %4, label %7, label %5, !dbg !8534

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !8535
  store i32 %6, i32* %2, align 4, !dbg !8535
  br label %7, !dbg !8537

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !8531
  ret i32 %8, !dbg !8538
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !8539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8544, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.value(metadata i32* %1, metadata !8545, metadata !DIExpression()), !dbg !8546
  %3 = icmp ugt i32 %0, 4, !dbg !8547
  br i1 %3, label %4, label %5, !dbg !8549

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.109, i32 0, i32 0), i32 noundef %0) #20, !dbg !8550
  br label %8, !dbg !8552

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !8553
  %7 = load i32, i32* %6, align 4, !dbg !8553
  store i32 %7, i32* %1, align 4, !dbg !8554
  br label %8, !dbg !8555

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !8546
  ret i32 %9, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !8557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8561, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !8562, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i8* %2, metadata !8563, metadata !DIExpression()), !dbg !8564
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !8565
  br i1 %4, label %6, label %5, !dbg !8567

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.110, i32 0, i32 0), i32 noundef %0) #20, !dbg !8568
  br label %15, !dbg !8570

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !8571
  %8 = load i8, i8* %7, align 4, !dbg !8571, !range !2755
  %9 = icmp eq i8 %8, 1, !dbg !8573
  br i1 %9, label %10, label %15, !dbg !8574

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !8575
  br i1 %11, label %15, label %12, !dbg !8577

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !8578
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !8579
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !8580
  store i8* %2, i8** %14, align 4, !dbg !8581
  br label %15, !dbg !8582

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !8564
  ret i32 %16, !dbg !8583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %1, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %2, metadata !8591, metadata !DIExpression()), !dbg !8592
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !8593
  br i1 %4, label %6, label %5, !dbg !8595

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.110, i32 0, i32 0), i32 noundef %0) #20, !dbg !8596
  br label %17, !dbg !8598

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !8599
  %8 = load i8, i8* %7, align 4, !dbg !8599, !range !2755
  %9 = icmp eq i8 %8, 1, !dbg !8601
  br i1 %9, label %10, label %17, !dbg !8602

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !8603
  br i1 %11, label %17, label %12, !dbg !8605

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #22, !dbg !8606
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #22, !dbg !8607
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #22, !dbg !8608
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #20, !dbg !8609
  tail call void @TMR_Start(i32 noundef %0) #20, !dbg !8610
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !8611
  store i32 1, i32* %16, align 4, !dbg !8612
  br label %17, !dbg !8613

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !8592
  ret i32 %18, !dbg !8614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #8 !dbg !8615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8617, metadata !DIExpression()), !dbg !8618
  %2 = shl i32 %0, 5, !dbg !8619
  %3 = mul i32 %0, 7, !dbg !8620
  %4 = udiv i32 %3, 10, !dbg !8621
  %5 = add i32 %4, %2, !dbg !8622
  %6 = mul i32 %0, 6, !dbg !8623
  %7 = udiv i32 %6, 100, !dbg !8624
  %8 = add i32 %5, %7, !dbg !8625
  %9 = shl i32 %0, 3, !dbg !8626
  %10 = udiv i32 %9, 1000, !dbg !8627
  %11 = add i32 %8, %10, !dbg !8628
  ret i32 %11, !dbg !8629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #8 !dbg !8630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8634, metadata !DIExpression()), !dbg !8635
  %2 = icmp eq i32 %0, 1, !dbg !8636
  ret i1 %2, !dbg !8637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #8 !dbg !8638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8643, metadata !DIExpression()), !dbg !8644
  %2 = icmp eq i32 %0, 0, !dbg !8645
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !8646
  ret void ()* %3, !dbg !8647
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #0 !dbg !8648 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !8652
  %2 = icmp eq void (i8*)* %1, null, !dbg !8654
  br i1 %2, label %5, label %3, !dbg !8655

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !8656
  tail call void %1(i8* noundef %4) #20, !dbg !8658
  br label %5, !dbg !8659

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !8660
  ret void, !dbg !8661
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #0 !dbg !8662 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !8665
  %2 = icmp eq void (i8*)* %1, null, !dbg !8667
  br i1 %2, label %5, label %3, !dbg !8668

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !8669
  tail call void %1(i8* noundef %4) #20, !dbg !8671
  br label %5, !dbg !8672

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !8673
  ret void, !dbg !8674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !8675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8677, metadata !DIExpression()), !dbg !8678
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !8679
  br i1 %2, label %4, label %3, !dbg !8681

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.110, i32 0, i32 0), i32 noundef %0) #20, !dbg !8682
  br label %6, !dbg !8684

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #20, !dbg !8685
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !8686
  store i32 0, i32* %5, align 4, !dbg !8687
  br label %6, !dbg !8688

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !8678
  ret i32 %7, !dbg !8689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !8690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8694, metadata !DIExpression()), !dbg !8695
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !8696
  %3 = icmp eq i32 %2, 1, !dbg !8698
  br i1 %3, label %5, label %4, !dbg !8699

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #20, !dbg !8700
  br label %5, !dbg !8702

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #20, !dbg !8703
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !8704
  ret i32 0, !dbg !8705
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !8706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8708, metadata !DIExpression()), !dbg !8709
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !8710
  %3 = icmp eq i32 %2, 1, !dbg !8712
  br i1 %3, label %5, label %4, !dbg !8713

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #20, !dbg !8714
  br label %5, !dbg !8716

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #20, !dbg !8717
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !8718
  ret i32 0, !dbg !8719
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_init(i32 noundef %0, %struct.hal_spi_master_config_t* noundef %1) local_unnamed_addr #0 !dbg !8720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8727, metadata !DIExpression()), !dbg !8734
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %1, metadata !8728, metadata !DIExpression()), !dbg !8734
  %3 = tail call fastcc zeroext i1 @hal_spi_master_is_master_port_valid(i32 noundef %0) #22, !dbg !8735
  br i1 %3, label %4, label %30, !dbg !8737

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_spi_master_config_t* %1, null, !dbg !8738
  br i1 %5, label %30, label %6, !dbg !8740

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 0, !dbg !8741
  %8 = load i32, i32* %7, align 4, !dbg !8741
  %9 = add i32 %8, -60000001, !dbg !8743
  %10 = icmp ult i32 %9, -59970001, !dbg !8743
  br i1 %10, label %30, label %11, !dbg !8743

11:                                               ; preds = %6
  %12 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8744
  call void @llvm.dbg.value(metadata i32 %12, metadata !8732, metadata !DIExpression()), !dbg !8745
  %13 = load volatile i8, i8* @g_spi_master_status, align 1, !dbg !8746
  %14 = icmp eq i8 %13, 1, !dbg !8746
  br i1 %14, label %15, label %16, !dbg !8744

15:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 0, metadata !8731, metadata !DIExpression()), !dbg !8734
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !8744
  br label %30, !dbg !8748

16:                                               ; preds = %11
  store volatile i8 1, i8* @g_spi_master_status, align 1, !dbg !8749
  call void @llvm.dbg.value(metadata i32 0, metadata !8731, metadata !DIExpression()), !dbg !8734
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !8744
  %17 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 1, !dbg !8751
  %18 = load i32, i32* %17, align 4, !dbg !8751
  tail call fastcc void @hal_spi_master_map_cs_pin(i32 noundef %18) #22, !dbg !8752
  %19 = tail call fastcc i32 @hal_spi_master_build_settings(%struct.hal_spi_master_config_t* noundef nonnull %1) #22, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %19, metadata !8729, metadata !DIExpression()), !dbg !8734
  %20 = load i32, i32* %7, align 4, !dbg !8754
  %21 = tail call fastcc i32 @hal_spi_master_calc_divisor(i32 noundef %20) #22, !dbg !8755, !range !8756
  %22 = tail call i32 @spim_init(i32 noundef %19, i32 noundef %21) #20, !dbg !8757
  call void @llvm.dbg.value(metadata i32 %22, metadata !8730, metadata !DIExpression()), !dbg !8734
  %23 = icmp slt i32 %22, 0, !dbg !8758
  br i1 %23, label %30, label %24, !dbg !8760

24:                                               ; preds = %16
  %25 = tail call i8* @memset(i8* noundef bitcast (%struct.hal_spi_master_config_t* @g_spi_master_context to i8*), i32 noundef 0, i32 noundef 20) #20, !dbg !8761
  %26 = bitcast %struct.hal_spi_master_config_t* %1 to i8*, !dbg !8762
  %27 = tail call i8* @memcpy(i8* noundef bitcast (%struct.hal_spi_master_config_t* @g_spi_master_context to i8*), i8* noundef nonnull %26, i32 noundef 20) #20, !dbg !8763
  %28 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.115, i32 0, i32 0)) #20, !dbg !8764
  %29 = getelementptr inbounds [1 x i8], [1 x i8]* @spim_sleep_handler, i32 0, i32 %0, !dbg !8765
  store i8 %28, i8* %29, align 1, !dbg !8766
  br label %30, !dbg !8767

30:                                               ; preds = %15, %16, %6, %4, %2, %24
  %31 = phi i32 [ 0, %24 ], [ -2, %2 ], [ -1, %4 ], [ -1, %6 ], [ -4, %16 ], [ -3, %15 ], !dbg !8734
  ret i32 %31, !dbg !8768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_spi_master_is_master_port_valid(i32 noundef %0) unnamed_addr #8 !dbg !8769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8773, metadata !DIExpression()), !dbg !8774
  %2 = icmp eq i32 %0, 0, !dbg !8775
  ret i1 %2, !dbg !8776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_spi_master_map_cs_pin(i32 noundef %0) unnamed_addr #0 !dbg !8777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8781, metadata !DIExpression()), !dbg !8782
  %2 = icmp eq i32 %0, 0, !dbg !8783
  br i1 %2, label %3, label %14, !dbg !8785

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !8786
  %5 = and i32 %4, 7340032, !dbg !8786
  %6 = icmp eq i32 %5, 7340032, !dbg !8786
  br i1 %6, label %7, label %8, !dbg !8789

7:                                                ; preds = %3
  store i32 32, i32* @g_spi_master_cs_n, align 4, !dbg !8790
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_spi_master_map_cs_pin, i32 0, i32 0), i32 noundef 106, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.116, i32 0, i32 0), i32 noundef 32) #20, !dbg !8792
  br label %15, !dbg !8793

8:                                                ; preds = %3
  %9 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !8794
  %10 = and i32 %9, 6, !dbg !8794
  %11 = icmp eq i32 %10, 6, !dbg !8794
  br i1 %11, label %12, label %13, !dbg !8796

12:                                               ; preds = %8
  store i32 7, i32* @g_spi_master_cs_n, align 4, !dbg !8797
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_spi_master_map_cs_pin, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.116, i32 0, i32 0), i32 noundef 7) #20, !dbg !8799
  br label %15, !dbg !8800

13:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_spi_master_map_cs_pin, i32 0, i32 0), i32 noundef 111, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.117, i32 0, i32 0)) #20, !dbg !8801
  store i32 32, i32* @g_spi_master_cs_n, align 4, !dbg !8803
  br label %15

14:                                               ; preds = %1
  store i32 6, i32* @g_spi_master_cs_n, align 4, !dbg !8804
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_spi_master_map_cs_pin, i32 0, i32 0), i32 noundef 116, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.116, i32 0, i32 0), i32 noundef 6) #20, !dbg !8806
  br label %15

15:                                               ; preds = %7, %13, %12, %14
  ret void, !dbg !8807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @hal_spi_master_build_settings(%struct.hal_spi_master_config_t* nocapture noundef readonly %0) unnamed_addr #9 !dbg !8808 {
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %0, metadata !8812, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 0, metadata !8813, metadata !DIExpression()), !dbg !8814
  %2 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 1, !dbg !8815
  %3 = load i32, i32* %2, align 4, !dbg !8815
  %4 = icmp eq i32 %3, 0, !dbg !8817
  %5 = select i1 %4, i32 0, i32 536870912
  call void @llvm.dbg.value(metadata i32 %5, metadata !8813, metadata !DIExpression()), !dbg !8814
  %6 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 2, !dbg !8818
  %7 = load i32, i32* %6, align 4, !dbg !8818
  %8 = icmp eq i32 %7, 1, !dbg !8820
  %9 = or i32 %5, 8, !dbg !8821
  %10 = select i1 %8, i32 %5, i32 %9, !dbg !8821
  call void @llvm.dbg.value(metadata i32 %10, metadata !8813, metadata !DIExpression()), !dbg !8814
  %11 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 3, !dbg !8822
  %12 = load i32, i32* %11, align 4, !dbg !8822
  %13 = icmp eq i32 %12, 0, !dbg !8824
  %14 = or i32 %10, 16, !dbg !8825
  %15 = select i1 %13, i32 %10, i32 %14, !dbg !8825
  call void @llvm.dbg.value(metadata i32 %15, metadata !8813, metadata !DIExpression()), !dbg !8814
  %16 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 4, !dbg !8826
  %17 = load i32, i32* %16, align 4, !dbg !8826
  %18 = icmp eq i32 %17, 0, !dbg !8828
  %19 = or i32 %15, 32, !dbg !8829
  %20 = select i1 %18, i32 %15, i32 %19, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %20, metadata !8813, metadata !DIExpression()), !dbg !8814
  ret i32 %20, !dbg !8830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_spi_master_calc_divisor(i32 noundef %0) unnamed_addr #8 !dbg !1041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1045, metadata !DIExpression()), !dbg !8831
  %2 = udiv i32 120000000, %0, !dbg !8832
  %3 = add nsw i32 %2, -2, !dbg !8833
  ret i32 %3, !dbg !8834
}

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !8835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8839, metadata !DIExpression()), !dbg !8840
  %2 = tail call fastcc zeroext i1 @hal_spi_master_is_master_port_valid(i32 noundef %0) #22, !dbg !8841
  br i1 %2, label %3, label %8, !dbg !8843

3:                                                ; preds = %1
  %4 = tail call i8* @memset(i8* noundef bitcast (%struct.hal_spi_master_config_t* @g_spi_master_context to i8*), i32 noundef 0, i32 noundef 20) #20, !dbg !8844
  store volatile i8 0, i8* @g_spi_master_status, align 1, !dbg !8845
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* @spim_sleep_handler, i32 0, i32 %0, !dbg !8847
  %6 = load i8, i8* %5, align 1, !dbg !8847
  %7 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %6) #20, !dbg !8848
  br label %8, !dbg !8849

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !8840
  ret i32 %9, !dbg !8850
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_polling(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8855, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.value(metadata i8* %1, metadata !8856, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.value(metadata i32 %2, metadata !8857, metadata !DIExpression()), !dbg !8859
  %4 = tail call fastcc zeroext i1 @hal_spi_master_is_master_port_valid(i32 noundef %0) #22, !dbg !8860
  br i1 %4, label %5, label %24, !dbg !8862

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !8863
  br i1 %6, label %24, label %7, !dbg !8865

7:                                                ; preds = %5
  %8 = load volatile i32, i32* inttoptr (i32 603979776 to i32*), align 67108864, !dbg !8866
  %9 = and i32 %8, 65536, !dbg !8868
  %10 = icmp eq i32 %9, 0, !dbg !8869
  br i1 %10, label %11, label %24, !dbg !8870

11:                                               ; preds = %7
  %12 = load i32, i32* @g_spi_master_cs_n, align 4, !dbg !8871
  %13 = tail call i32 @hal_gpio_set_output(i32 noundef %12, i32 noundef 0) #20, !dbg !8872
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* @spim_sleep_handler, i32 0, i32 %0, !dbg !8873
  %15 = load i8, i8* %14, align 1, !dbg !8873
  %16 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %15) #20, !dbg !8874
  %17 = tail call i32 @spim_write(i8* noundef nonnull %1, i32 noundef %2) #20, !dbg !8875
  call void @llvm.dbg.value(metadata i32 %17, metadata !8858, metadata !DIExpression()), !dbg !8859
  %18 = load i8, i8* %14, align 1, !dbg !8876
  %19 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %18) #20, !dbg !8877
  %20 = load i32, i32* @g_spi_master_cs_n, align 4, !dbg !8878
  %21 = tail call i32 @hal_gpio_set_output(i32 noundef %20, i32 noundef 1) #20, !dbg !8879
  %22 = icmp slt i32 %17, 0, !dbg !8880
  %23 = select i1 %22, i32 -4, i32 0, !dbg !8880
  br label %24, !dbg !8881

24:                                               ; preds = %7, %5, %3, %11
  %25 = phi i32 [ %23, %11 ], [ -2, %3 ], [ -1, %5 ], [ -3, %7 ], !dbg !8859
  ret i32 %25, !dbg !8882
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_and_receive_polling(i32 noundef %0, %struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !8883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8895, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %1, metadata !8896, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8898
  %3 = tail call fastcc zeroext i1 @hal_spi_master_is_master_port_valid(i32 noundef %0) #22, !dbg !8899
  br i1 %3, label %4, label %43, !dbg !8901

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 2, !dbg !8902
  %6 = load i8*, i8** %5, align 4, !dbg !8902
  %7 = icmp eq i8* %6, null, !dbg !8904
  br i1 %7, label %43, label %8, !dbg !8905

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 0, !dbg !8906
  %10 = load i8*, i8** %9, align 4, !dbg !8906
  %11 = icmp eq i8* %10, null, !dbg !8908
  br i1 %11, label %43, label %12, !dbg !8909

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 1, !dbg !8910
  %14 = load i32, i32* %13, align 4, !dbg !8910
  %15 = icmp ugt i32 %14, 4, !dbg !8912
  br i1 %15, label %43, label %16, !dbg !8913

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 3, !dbg !8914
  %18 = load i32, i32* %17, align 4, !dbg !8914
  %19 = icmp ugt i32 %14, %18, !dbg !8916
  br i1 %19, label %43, label %20, !dbg !8917

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 603979776 to i32*), align 67108864, !dbg !8918
  %22 = and i32 %21, 65536, !dbg !8920
  %23 = icmp eq i32 %22, 0, !dbg !8921
  br i1 %23, label %24, label %43, !dbg !8922

24:                                               ; preds = %20
  %25 = load i32, i32* @g_spi_master_cs_n, align 4, !dbg !8923
  %26 = tail call i32 @hal_gpio_set_output(i32 noundef %25, i32 noundef 0) #20, !dbg !8924
  %27 = getelementptr inbounds [1 x i8], [1 x i8]* @spim_sleep_handler, i32 0, i32 %0, !dbg !8925
  %28 = load i8, i8* %27, align 1, !dbg !8925
  %29 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %28) #20, !dbg !8926
  %30 = tail call fastcc i32 @hal_spi_build_op_addr(%struct.hal_spi_master_send_and_receive_config_t* noundef nonnull %1) #22, !dbg !8927
  %31 = load i32, i32* %13, align 4, !dbg !8928
  %32 = load i8*, i8** %5, align 4, !dbg !8929
  %33 = getelementptr inbounds i8, i8* %32, i32 %31, !dbg !8930
  %34 = load i32, i32* %17, align 4, !dbg !8931
  %35 = sub i32 %34, %31, !dbg !8932
  %36 = tail call i32 @spim_read(i32 noundef %30, i32 noundef %31, i8* noundef %33, i32 noundef %35) #20, !dbg !8933
  call void @llvm.dbg.value(metadata i32 %36, metadata !8897, metadata !DIExpression()), !dbg !8898
  %37 = load i8, i8* %27, align 1, !dbg !8934
  %38 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %37) #20, !dbg !8935
  %39 = load i32, i32* @g_spi_master_cs_n, align 4, !dbg !8936
  %40 = tail call i32 @hal_gpio_set_output(i32 noundef %39, i32 noundef 1) #20, !dbg !8937
  %41 = icmp slt i32 %36, 0, !dbg !8938
  %42 = select i1 %41, i32 -4, i32 0, !dbg !8938
  br label %43, !dbg !8939

43:                                               ; preds = %20, %16, %12, %8, %4, %2, %24
  %44 = phi i32 [ %42, %24 ], [ -2, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ -1, %16 ], [ -3, %20 ], !dbg !8898
  ret i32 %44, !dbg !8940
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc i32 @hal_spi_build_op_addr(%struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %0) unnamed_addr #12 !dbg !8941 {
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %0, metadata !8947, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 0, metadata !8948, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 0, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 0, metadata !8949, metadata !DIExpression()), !dbg !8950
  %2 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 0, metadata !8948, metadata !DIExpression()), !dbg !8950
  %4 = icmp eq i32 %3, 0, !dbg !8951
  br i1 %4, label %21, label %5, !dbg !8954

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 4
  br label %8, !dbg !8954

8:                                                ; preds = %5, %8
  %9 = phi i32 [ 0, %5 ], [ %19, %8 ]
  %10 = phi i32 [ 0, %5 ], [ %18, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 %10, metadata !8948, metadata !DIExpression()), !dbg !8950
  %11 = getelementptr inbounds i8, i8* %7, i32 %9, !dbg !8955
  %12 = load i8, i8* %11, align 1, !dbg !8955
  %13 = zext i8 %12 to i32, !dbg !8955
  %14 = xor i32 %9, -1, !dbg !8957
  %15 = add i32 %3, %14, !dbg !8957
  %16 = shl i32 %15, 3, !dbg !8958
  %17 = shl i32 %13, %16, !dbg !8959
  %18 = or i32 %17, %10, !dbg !8960
  call void @llvm.dbg.value(metadata i32 %18, metadata !8948, metadata !DIExpression()), !dbg !8950
  %19 = add nuw i32 %9, 1, !dbg !8961
  call void @llvm.dbg.value(metadata i32 %19, metadata !8949, metadata !DIExpression()), !dbg !8950
  %20 = icmp eq i32 %19, %3, !dbg !8951
  br i1 %20, label %21, label %8, !dbg !8954, !llvm.loop !8962

21:                                               ; preds = %8, %1
  %22 = phi i32 [ 0, %1 ], [ %18, %8 ], !dbg !8950
  ret i32 %22, !dbg !8964
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_spi_master_get_running_status(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #7 !dbg !8965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8971, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.value(metadata i32* %1, metadata !8972, metadata !DIExpression()), !dbg !8973
  %3 = tail call fastcc zeroext i1 @hal_spi_master_is_master_port_valid(i32 noundef %0) #22, !dbg !8974
  br i1 %3, label %4, label %11, !dbg !8976

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !8977
  br i1 %5, label %11, label %6, !dbg !8979

6:                                                ; preds = %4
  %7 = load volatile i32, i32* inttoptr (i32 603979776 to i32*), align 67108864, !dbg !8980
  %8 = lshr i32 %7, 16
  %9 = and i32 %8, 1
  %10 = xor i32 %9, 1
  store i32 %10, i32* %1, align 4, !dbg !8982
  br label %11, !dbg !8983

11:                                               ; preds = %4, %2, %6
  %12 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !8973
  ret i32 %12, !dbg !8984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !8985 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8987, metadata !DIExpression()), !dbg !8990
  %4 = bitcast i32* %2 to i8*, !dbg !8991
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !8991
  %5 = bitcast i32* %3 to i8*, !dbg !8992
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !8992
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !8993
  %7 = load i8, i8* %6, align 1, !dbg !8993, !range !2755
  %8 = icmp eq i8 %7, 0, !dbg !8995
  br i1 %8, label %9, label %26, !dbg !8996

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %3, metadata !8989, metadata !DIExpression(DW_OP_deref)), !dbg !8990
  %10 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %3) #20, !dbg !8997
  call void @llvm.dbg.value(metadata i32* %2, metadata !8988, metadata !DIExpression(DW_OP_deref)), !dbg !8990
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %2) #20, !dbg !8999
  %11 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !9000
  %12 = load i32, i32* %11, align 4, !dbg !9000
  %13 = load i32, i32* %2, align 4, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %13, metadata !8988, metadata !DIExpression()), !dbg !8990
  %14 = icmp eq i32 %12, %13, !dbg !9003
  br i1 %14, label %15, label %23, !dbg !9004

15:                                               ; preds = %9
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !9005
  %17 = load i8, i8* %16, align 1, !dbg !9005, !range !2755
  %18 = icmp eq i8 %17, 0, !dbg !9005
  br i1 %18, label %23, label %19, !dbg !9008

19:                                               ; preds = %15
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !9009
  %21 = load i8, i8* %20, align 1, !dbg !9009
  %22 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %21) #20, !dbg !9011
  store i8 0, i8* %16, align 1, !dbg !9012
  br label %23, !dbg !9013

23:                                               ; preds = %15, %19, %9
  %24 = load i32, i32* %3, align 4, !dbg !9014
  call void @llvm.dbg.value(metadata i32 %24, metadata !8989, metadata !DIExpression()), !dbg !8990
  %25 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %24) #20, !dbg !9015
  br label %27, !dbg !9016

26:                                               ; preds = %1
  store i8 0, i8* %6, align 1, !dbg !9017
  br label %27

27:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !9019
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !9019
  ret void, !dbg !9019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef %1) local_unnamed_addr #0 !dbg !9020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9026, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.value(metadata %struct.hal_eint_gpio_map_t* %1, metadata !9027, metadata !DIExpression()), !dbg !9028
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef %1) #22, !dbg !9029
  br i1 %3, label %4, label %24, !dbg !9031

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !9032
  %6 = load i8, i8* %5, align 4, !dbg !9032, !range !2755
  %7 = icmp eq i8 %6, 0, !dbg !9032
  br i1 %7, label %8, label %24, !dbg !9034

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #20, !dbg !9035
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !9036
  %11 = bitcast %struct.hal_eint_gpio_map_t* %10 to i8*, !dbg !9037
  %12 = bitcast %struct.hal_eint_gpio_map_t* %1 to i8*, !dbg !9038
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #20, !dbg !9039
  store i8 1, i8* %5, align 4, !dbg !9040
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9041, !range !9042
  tail call void @uart_reset_default_value(i32 noundef %14) #20, !dbg !9043
  tail call void @halUART_HWInit(i32 noundef %14) #20, !dbg !9044
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef %1) #22, !dbg !9045
  %16 = icmp eq i32 %15, 0, !dbg !9047
  br i1 %16, label %17, label %24, !dbg !9048

17:                                               ; preds = %8
  tail call void @uart_set_sleep_mode(i32 noundef %14) #20, !dbg !9049
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !9050
  store i8 0, i8* %18, align 1, !dbg !9051
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !9052
  store i8 0, i8* %19, align 1, !dbg !9053
  %20 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([2 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !9054
  %21 = load i8*, i8** %20, align 4, !dbg !9054
  %22 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %21) #20, !dbg !9055
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !9056
  store i8 %22, i8* %23, align 1, !dbg !9057
  br label %24, !dbg !9058

24:                                               ; preds = %8, %4, %2, %17
  %25 = phi i32 [ 0, %17 ], [ -4, %2 ], [ -3, %4 ], [ -4, %8 ], !dbg !9028
  ret i32 %25, !dbg !9059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef readonly %1) unnamed_addr #9 !dbg !9060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9066, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata %struct.hal_eint_gpio_map_t* %1, metadata !9067, metadata !DIExpression()), !dbg !9068
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9069
  %4 = icmp ne %struct.hal_eint_gpio_map_t* %1, null
  %5 = and i1 %4, %3, !dbg !9071
  br i1 %5, label %6, label %22, !dbg !9071

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 0, !dbg !9072
  %8 = load i32, i32* %7, align 4, !dbg !9072
  %9 = icmp ugt i32 %8, 12, !dbg !9074
  br i1 %9, label %22, label %10, !dbg !9075

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 3, !dbg !9076
  %12 = load i32, i32* %11, align 4, !dbg !9076
  %13 = icmp ugt i32 %12, 2, !dbg !9077
  br i1 %13, label %22, label %14, !dbg !9078

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 2, !dbg !9079
  %16 = load i32, i32* %15, align 4, !dbg !9079
  %17 = icmp ugt i32 %16, 1, !dbg !9080
  br i1 %17, label %22, label %18, !dbg !9081

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 1, !dbg !9082
  %20 = load i32, i32* %19, align 4, !dbg !9082
  %21 = icmp ult i32 %20, 4, !dbg !9083
  br label %22, !dbg !9084

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !9068
  ret i1 %23, !dbg !9085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #8 !dbg !9086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9090, metadata !DIExpression()), !dbg !9091
  %2 = icmp ne i32 %0, 0, !dbg !9092
  %3 = zext i1 %2 to i32, !dbg !9093
  ret i32 %3, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef %1) local_unnamed_addr #0 !dbg !9095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata %struct.hal_eint_gpio_map_t* %1, metadata !9100, metadata !DIExpression()), !dbg !9101
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef %1) #22, !dbg !9102
  br i1 %3, label %4, label %22, !dbg !9104

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !9105
  %6 = bitcast %struct.hal_eint_gpio_map_t* %5 to i8*, !dbg !9106
  %7 = bitcast %struct.hal_eint_gpio_map_t* %1 to i8*, !dbg !9107
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #20, !dbg !9108
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9109
  %10 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 0, !dbg !9110
  %11 = load i32, i32* %10, align 4, !dbg !9110
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #22, !dbg !9111
  %13 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 1, !dbg !9112
  %14 = load i32, i32* %13, align 4, !dbg !9112
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #22, !dbg !9113
  %16 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 3, !dbg !9114
  %17 = load i32, i32* %16, align 4, !dbg !9114
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #22, !dbg !9115
  %19 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %1, i32 0, i32 2, !dbg !9116
  %20 = load i32, i32* %19, align 4, !dbg !9116
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #22, !dbg !9117
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #20, !dbg !9118
  br label %22, !dbg !9119

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !9101
  ret i32 %23, !dbg !9120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #8 !dbg !9121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9125, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !9126, metadata !DIExpression()), !dbg !9129
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !9130
  %3 = load i32, i32* %2, align 4, !dbg !9130
  ret i32 %3, !dbg !9131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #8 !dbg !9132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9136, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !9137, metadata !DIExpression()), !dbg !9140
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !9141
  %3 = load i16, i16* %2, align 2, !dbg !9141
  ret i16 %3, !dbg !9142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #8 !dbg !9143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !9148, metadata !DIExpression()), !dbg !9151
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !9152
  %3 = load i16, i16* %2, align 2, !dbg !9152
  ret i16 %3, !dbg !9153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #8 !dbg !9154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9158, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !9159, metadata !DIExpression()), !dbg !9162
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !9163
  %3 = load i16, i16* %2, align 2, !dbg !9163
  ret i16 %3, !dbg !9164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #8 !dbg !9165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9169, metadata !DIExpression()), !dbg !9170
  %2 = icmp ult i32 %0, 2, !dbg !9171
  ret i1 %2, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !9173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9177, metadata !DIExpression()), !dbg !9178
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9179
  br i1 %2, label %3, label %18, !dbg !9181

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !9182
  %5 = load i8, i8* %4, align 4, !dbg !9182, !range !2755
  %6 = icmp eq i8 %5, 0, !dbg !9184
  br i1 %6, label %18, label %7, !dbg !9185

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #20, !dbg !9186
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9187, !range !9042
  tail call void @uart_query_empty(i32 noundef %9) #20, !dbg !9188
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !9189
  %11 = load i32, i32* %10, align 4, !dbg !9189
  %12 = tail call i32 @hal_nvic_disable_irq(i32 noundef %11) #20, !dbg !9190
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !9191
  store i8 0, i8* %13, align 1, !dbg !9192
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !9193
  store i8 0, i8* %14, align 1, !dbg !9194
  tail call void @uart_mask_send_interrupt(i32 noundef %9) #20, !dbg !9195
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !9196
  %16 = load i8, i8* %15, align 1, !dbg !9196
  %17 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %16) #20, !dbg !9197
  tail call void @uart_reset_default_value(i32 noundef %9) #20, !dbg !9198
  br label %18, !dbg !9199

18:                                               ; preds = %3, %1, %7
  %19 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !9178
  ret i32 %19, !dbg !9200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !9201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9205, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i8 %1, metadata !9206, metadata !DIExpression()), !dbg !9208
  %3 = icmp eq i32 %0, 0, !dbg !9209
  %4 = icmp eq i32 %0, 1, !dbg !9209
  %5 = select i1 %4, i32 1, i32 2, !dbg !9209
  %6 = select i1 %3, i32 0, i32 %5, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %6, metadata !9207, metadata !DIExpression()), !dbg !9208
  %7 = icmp eq i32 %6, 2, !dbg !9210
  br i1 %7, label %9, label %8, !dbg !9212

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #20, !dbg !9213
  br label %9, !dbg !9215

9:                                                ; preds = %2, %8
  ret void, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9221, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.value(metadata i8* %1, metadata !9222, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.value(metadata i32 %2, metadata !9223, metadata !DIExpression()), !dbg !9226
  %4 = icmp eq i32 %0, 0, !dbg !9227
  %5 = icmp eq i32 %0, 1, !dbg !9227
  %6 = select i1 %5, i32 1, i32 2, !dbg !9227
  %7 = select i1 %4, i32 0, i32 %6, !dbg !9227
  call void @llvm.dbg.value(metadata i32 %7, metadata !9224, metadata !DIExpression()), !dbg !9226
  %8 = icmp eq i8* %1, null, !dbg !9228
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !9230
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !9230
  call void @llvm.dbg.value(metadata i32 0, metadata !9225, metadata !DIExpression()), !dbg !9226
  br i1 %12, label %19, label %13, !dbg !9230

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9225, metadata !DIExpression()), !dbg !9226
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !9231
  %16 = load i8, i8* %15, align 1, !dbg !9231
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #20, !dbg !9237
  %17 = add nuw i32 %14, 1, !dbg !9238
  call void @llvm.dbg.value(metadata i32 %17, metadata !9225, metadata !DIExpression()), !dbg !9226
  %18 = icmp eq i32 %17, %2, !dbg !9239
  br i1 %18, label %19, label %13, !dbg !9240, !llvm.loop !9241

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !9226
  ret i32 %20, !dbg !9243
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9244 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9246, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata i8* %1, metadata !9247, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata i32 %2, metadata !9248, metadata !DIExpression()), !dbg !9254
  %6 = bitcast i32* %4 to i8*, !dbg !9255
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !9255
  %7 = bitcast i32* %5 to i8*, !dbg !9256
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !9256
  %8 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9257
  br i1 %8, label %9, label %37, !dbg !9259

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null, !dbg !9260
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !9262
  br i1 %12, label %37, label %13, !dbg !9262

13:                                               ; preds = %9
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !9263
  %15 = load i8, i8* %14, align 4, !dbg !9263, !range !2755
  %16 = icmp eq i8 %15, 0, !dbg !9263
  br i1 %16, label %37, label %17, !dbg !9265

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32* %5, metadata !9253, metadata !DIExpression(DW_OP_deref)), !dbg !9254
  %18 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !9266
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !9267
  %20 = load i8, i8* %19, align 1, !dbg !9267, !range !2755
  %21 = icmp eq i8 %20, 0, !dbg !9269
  br i1 %21, label %22, label %26, !dbg !9270

22:                                               ; preds = %17
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !9271
  %24 = load i8, i8* %23, align 1, !dbg !9271
  %25 = call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %24) #20, !dbg !9273
  store i8 1, i8* %19, align 1, !dbg !9274
  br label %26, !dbg !9275

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %5, align 4, !dbg !9276
  call void @llvm.dbg.value(metadata i32 %27, metadata !9253, metadata !DIExpression()), !dbg !9254
  %28 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %27) #20, !dbg !9277
  %29 = call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9278, !range !9042
  call void @llvm.dbg.value(metadata i32* %4, metadata !9249, metadata !DIExpression(DW_OP_deref)), !dbg !9254
  call void @halUART_Get_VFIFO_Length(i32 noundef %29, i32 noundef 0, i32* noundef nonnull %4) #20, !dbg !9279
  %30 = load i32, i32* %4, align 4, !dbg !9280
  call void @llvm.dbg.value(metadata i32 %30, metadata !9249, metadata !DIExpression()), !dbg !9254
  %31 = icmp ult i32 %30, %2, !dbg !9282
  %32 = select i1 %31, i32 %30, i32 %2
  call void @llvm.dbg.value(metadata i32 %32, metadata !9250, metadata !DIExpression()), !dbg !9254
  call void @halUART_Write_VFIFO_Data(i32 noundef %29, i8* noundef nonnull %1, i32 noundef %32) #20, !dbg !9283
  %33 = load i32, i32* %4, align 4, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %33, metadata !9249, metadata !DIExpression()), !dbg !9254
  %34 = icmp eq i32 %32, %33, !dbg !9286
  br i1 %34, label %35, label %37, !dbg !9287

35:                                               ; preds = %26
  %36 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %29, i1 noundef zeroext false) #22, !dbg !9288, !range !9290
  call void @llvm.dbg.value(metadata i32 %36, metadata !9251, metadata !DIExpression()), !dbg !9254
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %36) #20, !dbg !9291
  br label %37, !dbg !9292

37:                                               ; preds = %26, %35, %13, %9, %3
  %38 = phi i32 [ 0, %3 ], [ 0, %9 ], [ 0, %13 ], [ %32, %35 ], [ %32, %26 ], !dbg !9254
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !9293
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !9293
  ret i32 %38, !dbg !9293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #8 !dbg !9294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9298, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.value(metadata i1 %1, metadata !9299, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9301
  %3 = icmp eq i32 %0, 0, !dbg !9302
  %4 = select i1 %1, i32 15, i32 14, !dbg !9304
  %5 = select i1 %1, i32 17, i32 16, !dbg !9304
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !9304
  call void @llvm.dbg.value(metadata i32 %6, metadata !9300, metadata !DIExpression()), !dbg !9301
  ret i32 %6, !dbg !9305
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !9306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9310, metadata !DIExpression()), !dbg !9312
  %2 = icmp eq i32 %0, 0, !dbg !9313
  %3 = icmp eq i32 %0, 1, !dbg !9313
  %4 = select i1 %3, i32 1, i32 2, !dbg !9313
  %5 = select i1 %2, i32 0, i32 %4, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %5, metadata !9311, metadata !DIExpression()), !dbg !9312
  %6 = icmp ult i32 %5, 2, !dbg !9314
  br i1 %6, label %7, label %9, !dbg !9316

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #20, !dbg !9317
  br label %9, !dbg !9319

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !9320
  ret i8 %10, !dbg !9321
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !9322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9326, metadata !DIExpression()), !dbg !9328
  %2 = icmp eq i32 %0, 0, !dbg !9329
  %3 = icmp eq i32 %0, 1, !dbg !9329
  %4 = select i1 %3, i32 1, i32 2, !dbg !9329
  %5 = select i1 %2, i32 0, i32 %4, !dbg !9329
  call void @llvm.dbg.value(metadata i32 %5, metadata !9327, metadata !DIExpression()), !dbg !9328
  %6 = icmp ult i32 %5, 2, !dbg !9330
  br i1 %6, label %7, label %9, !dbg !9332

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #20, !dbg !9333
  br label %9, !dbg !9335

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !9336
  ret i32 %10, !dbg !9337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9342, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8* %1, metadata !9343, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %2, metadata !9344, metadata !DIExpression()), !dbg !9347
  %4 = icmp eq i32 %0, 0, !dbg !9348
  %5 = icmp eq i32 %0, 1, !dbg !9348
  %6 = select i1 %5, i32 1, i32 2, !dbg !9348
  %7 = select i1 %4, i32 0, i32 %6, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %7, metadata !9345, metadata !DIExpression()), !dbg !9347
  %8 = icmp eq i8* %1, null, !dbg !9349
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !9351
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !9351
  call void @llvm.dbg.value(metadata i32 0, metadata !9346, metadata !DIExpression()), !dbg !9347
  br i1 %12, label %19, label %13, !dbg !9351

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9346, metadata !DIExpression()), !dbg !9347
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #20, !dbg !9352
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !9358
  store i8 %15, i8* %16, align 1, !dbg !9359
  %17 = add nuw i32 %14, 1, !dbg !9360
  call void @llvm.dbg.value(metadata i32 %17, metadata !9346, metadata !DIExpression()), !dbg !9347
  %18 = icmp eq i32 %17, %2, !dbg !9361
  br i1 %18, label %19, label %13, !dbg !9362, !llvm.loop !9363

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !9347
  ret i32 %20, !dbg !9365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9366 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9368, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata i8* %1, metadata !9369, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata i32 %2, metadata !9370, metadata !DIExpression()), !dbg !9374
  %5 = bitcast i32* %4 to i8*, !dbg !9375
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !9375
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9376
  br i1 %6, label %7, label %20, !dbg !9378

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !9379
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !9381
  br i1 %10, label %20, label %11, !dbg !9381

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9382, !range !9042
  call void @llvm.dbg.value(metadata i32* %4, metadata !9371, metadata !DIExpression(DW_OP_deref)), !dbg !9374
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #20, !dbg !9383
  %13 = load i32, i32* %4, align 4, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %13, metadata !9371, metadata !DIExpression()), !dbg !9374
  %14 = icmp ult i32 %13, %2, !dbg !9386
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !9372, metadata !DIExpression()), !dbg !9374
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #20, !dbg !9387
  %16 = load i32, i32* %4, align 4, !dbg !9388
  call void @llvm.dbg.value(metadata i32 %16, metadata !9371, metadata !DIExpression()), !dbg !9374
  %17 = icmp eq i32 %15, %16, !dbg !9390
  br i1 %17, label %18, label %20, !dbg !9391

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #22, !dbg !9392, !range !9290
  call void @llvm.dbg.value(metadata i32 %19, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #20, !dbg !9394
  br label %20, !dbg !9395

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !9374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !9396
  ret i32 %21, !dbg !9396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !9397 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9399, metadata !DIExpression()), !dbg !9401
  %3 = bitcast i32* %2 to i8*, !dbg !9402
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !9402
  call void @llvm.dbg.value(metadata i32 0, metadata !9400, metadata !DIExpression()), !dbg !9401
  store i32 0, i32* %2, align 4, !dbg !9403
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9404
  br i1 %4, label %5, label %8, !dbg !9406

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9407, !range !9042
  call void @llvm.dbg.value(metadata i32* %2, metadata !9400, metadata !DIExpression(DW_OP_deref)), !dbg !9401
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #20, !dbg !9408
  %7 = load i32, i32* %2, align 4, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %7, metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %8, !dbg !9410

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !9401
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !9411
  ret i32 %9, !dbg !9411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !9412 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9414, metadata !DIExpression()), !dbg !9416
  %3 = bitcast i32* %2 to i8*, !dbg !9417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !9417
  call void @llvm.dbg.value(metadata i32 0, metadata !9415, metadata !DIExpression()), !dbg !9416
  store i32 0, i32* %2, align 4, !dbg !9418
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9419
  br i1 %4, label %5, label %8, !dbg !9421

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9422, !range !9042
  call void @llvm.dbg.value(metadata i32* %2, metadata !9415, metadata !DIExpression(DW_OP_deref)), !dbg !9416
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #20, !dbg !9423
  %7 = load i32, i32* %2, align 4, !dbg !9424
  call void @llvm.dbg.value(metadata i32 %7, metadata !9415, metadata !DIExpression()), !dbg !9416
  br label %8, !dbg !9425

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !9416
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !9426
  ret i32 %9, !dbg !9426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9431, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9432, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i8* %2, metadata !9433, metadata !DIExpression()), !dbg !9435
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9436
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !9438
  br i1 %6, label %7, label %24, !dbg !9438

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !9439
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !9440
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !9441
  store i8* %2, i8** %9, align 4, !dbg !9442
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !9443
  store i8 1, i8* %10, align 4, !dbg !9444
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9445
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #22, !dbg !9446
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #20, !dbg !9447
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #20, !dbg !9448
  %13 = icmp eq i32 %11, 0, !dbg !9449
  br i1 %13, label %14, label %15, !dbg !9451

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #20, !dbg !9452
  br label %16, !dbg !9454

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #20, !dbg !9455
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #22, !dbg !9457, !range !9290
  call void @llvm.dbg.value(metadata i32 %17, metadata !9434, metadata !DIExpression()), !dbg !9435
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #20, !dbg !9458
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !9459
  store i8 1, i8* %18, align 1, !dbg !9460
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !9461
  %20 = load i32, i32* %19, align 4, !dbg !9461
  %21 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %20, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !9462
  tail call void @uart_unmask_send_interrupt(i32 noundef %11) #20, !dbg !9463
  %22 = load i32, i32* %19, align 4, !dbg !9464
  %23 = tail call i32 @hal_nvic_enable_irq(i32 noundef %22) #20, !dbg !9465
  br label %24, !dbg !9466

24:                                               ; preds = %3, %16
  %25 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !9435
  ret i32 %25, !dbg !9467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #8 !dbg !1157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1163, metadata !DIExpression()), !dbg !9468
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !9469
  %3 = load void ()*, void ()** %2, align 4, !dbg !9469
  ret void ()* %3, !dbg !9470
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #0 !dbg !9471 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !9477, !range !2755
  %2 = icmp eq i8 %1, 0, !dbg !9477
  br i1 %2, label %8, label %3, !dbg !9478

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !9479
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !9481
  br i1 %5, label %8, label %6, !dbg !9482

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !9483
  tail call void %4(i32 noundef 2, i8* noundef %7) #20, !dbg !9485
  br label %8, !dbg !9486

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #22, !dbg !9487, !range !9042
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #22, !dbg !9488
  ret void, !dbg !9489
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #0 !dbg !9490 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !9495, !range !2755
  %2 = icmp eq i8 %1, 0, !dbg !9495
  br i1 %2, label %8, label %3, !dbg !9496

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !9497
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !9499
  br i1 %5, label %8, label %6, !dbg !9500

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !9501
  tail call void %4(i32 noundef 2, i8* noundef %7) #20, !dbg !9503
  br label %8, !dbg !9504

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #22, !dbg !9505, !range !9042
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #22, !dbg !9506
  ret void, !dbg !9507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #0 !dbg !9508 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9512, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata i1 %1, metadata !9513, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9519
  %5 = bitcast i32* %3 to i8*, !dbg !9520
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !9520
  %6 = bitcast i32* %4 to i8*, !dbg !9520
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !9520
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !9516, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !9519
  br i1 %1, label %7, label %12, !dbg !9521

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !9516, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !9519
  call void @llvm.dbg.value(metadata i32* %3, metadata !9514, metadata !DIExpression(DW_OP_deref)), !dbg !9519
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #20, !dbg !9522
  %8 = load i32, i32* %3, align 4, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %8, metadata !9514, metadata !DIExpression()), !dbg !9519
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !9527
  %10 = load i32, i32* %9, align 4, !dbg !9527
  %11 = icmp ult i32 %8, %10, !dbg !9528
  br i1 %11, label %22, label %20, !dbg !9529

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !9515, metadata !DIExpression(DW_OP_deref)), !dbg !9519
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #20, !dbg !9530
  %13 = load i32, i32* %4, align 4, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %13, metadata !9515, metadata !DIExpression()), !dbg !9519
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !9534
  %15 = load i32, i32* %14, align 4, !dbg !9534
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !9535
  %17 = load i32, i32* %16, align 4, !dbg !9535
  %18 = sub i32 %15, %17, !dbg !9536
  %19 = icmp ult i32 %13, %18, !dbg !9537
  br i1 %19, label %22, label %20, !dbg !9538

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #22, !dbg !9539, !range !9290
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #20, !dbg !9539
  br label %22, !dbg !9540

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !9540
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !9540
  ret void, !dbg !9540
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #0 !dbg !9541 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !9546, !range !2755
  %2 = icmp eq i8 %1, 0, !dbg !9546
  br i1 %2, label %11, label %3, !dbg !9547

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #22, !dbg !9548
  %5 = icmp eq i32 %4, 0, !dbg !9549
  br i1 %5, label %11, label %6, !dbg !9550

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !9551
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !9553
  br i1 %8, label %11, label %9, !dbg !9554

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !9555
  tail call void %7(i32 noundef 1, i8* noundef %10) #20, !dbg !9557
  br label %11, !dbg !9558

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #22, !dbg !9559, !range !9042
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #22, !dbg !9560
  ret void, !dbg !9561
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #0 !dbg !9562 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !9567, !range !2755
  %2 = icmp eq i8 %1, 0, !dbg !9567
  br i1 %2, label %11, label %3, !dbg !9568

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #22, !dbg !9569
  %5 = icmp eq i32 %4, 0, !dbg !9570
  br i1 %5, label %11, label %6, !dbg !9571

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !9572
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !9574
  br i1 %8, label %11, label %9, !dbg !9575

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !9576
  tail call void %7(i32 noundef 1, i8* noundef %10) #20, !dbg !9578
  br label %11, !dbg !9579

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #22, !dbg !9580, !range !9042
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #22, !dbg !9581
  ret void, !dbg !9582
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9587, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i32 %1, metadata !9588, metadata !DIExpression()), !dbg !9589
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9590
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !9592
  br i1 %5, label %6, label %10, !dbg !9592

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !9593
  %8 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %7, i32 0, i32 0, !dbg !9594
  store i32 %1, i32* %8, align 4, !dbg !9595
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef nonnull %7) #22, !dbg !9596
  br label %10, !dbg !9597

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !9589
  ret i32 %11, !dbg !9598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #0 !dbg !9599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9605, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !9606, metadata !DIExpression()), !dbg !9607
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9608
  br i1 %3, label %4, label %28, !dbg !9610

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #22, !dbg !9611
  br i1 %5, label %6, label %28, !dbg !9613

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !9614
  store i8 1, i8* %7, align 4, !dbg !9615
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !9616
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !9617
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !9618
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #20, !dbg !9619
  tail call void @DMA_Init() #20, !dbg !9620
  tail call void @DMA_Vfifo_init() #20, !dbg !9621
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #22, !dbg !9622
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !9623
  %14 = load i8*, i8** %13, align 4, !dbg !9623
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !9624
  %16 = load i32, i32* %15, align 4, !dbg !9624
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !9625
  %18 = load i32, i32* %17, align 4, !dbg !9625
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !9626
  %20 = load i32, i32* %19, align 4, !dbg !9626
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #22, !dbg !9627
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #20, !dbg !9628
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !9629
  %23 = load i8*, i8** %22, align 4, !dbg !9629
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !9630
  %25 = load i32, i32* %24, align 4, !dbg !9630
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !9631
  %27 = load i32, i32* %26, align 4, !dbg !9631
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #20, !dbg !9632
  br label %28, !dbg !9633

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !9607
  ret i32 %29, !dbg !9634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #9 !dbg !9635 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !9641
  br i1 %2, label %27, label %3, !dbg !9643

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !9644
  %5 = load i8*, i8** %4, align 4, !dbg !9644
  %6 = icmp eq i8* %5, null, !dbg !9646
  br i1 %6, label %27, label %7, !dbg !9647

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !9648
  %9 = load i32, i32* %8, align 4, !dbg !9648
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !9650
  %11 = load i32, i32* %10, align 4, !dbg !9650
  %12 = icmp ult i32 %9, %11, !dbg !9651
  br i1 %12, label %27, label %13, !dbg !9652

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !9653
  %15 = load i32, i32* %14, align 4, !dbg !9653
  %16 = icmp ult i32 %9, %15, !dbg !9655
  br i1 %16, label %27, label %17, !dbg !9656

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !9657
  %19 = load i8*, i8** %18, align 4, !dbg !9657
  %20 = icmp eq i8* %19, null, !dbg !9659
  br i1 %20, label %27, label %21, !dbg !9660

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !9661
  %23 = load i32, i32* %22, align 4, !dbg !9661
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !9663
  %25 = load i32, i32* %24, align 4, !dbg !9663
  %26 = icmp uge i32 %23, %25, !dbg !9664
  br label %27, !dbg !9665

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !9640
  ret i1 %28, !dbg !9666
}

; Function Attrs: optsize
declare dso_local void @DMA_Init() local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #0 !dbg !9667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9669, metadata !DIExpression()), !dbg !9671
  %2 = tail call i32 @top_mcu_freq_get() #20, !dbg !9672
  %3 = udiv i32 %2, 1000000, !dbg !9673
  call void @llvm.dbg.value(metadata i32 %3, metadata !9670, metadata !DIExpression()), !dbg !9671
  %4 = mul i32 %3, %0, !dbg !9674
  ret i32 %4, !dbg !9675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !9676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9678, metadata !DIExpression()), !dbg !9680
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9681
  br i1 %2, label %3, label %8, !dbg !9683

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !9684
  %5 = icmp eq i32 %0, 1, !dbg !9684
  %6 = select i1 %5, i32 1, i32 2, !dbg !9684
  %7 = select i1 %4, i32 0, i32 %6, !dbg !9684
  call void @llvm.dbg.value(metadata i32 %7, metadata !9679, metadata !DIExpression()), !dbg !9680
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #20, !dbg !9685
  br label %8, !dbg !9686

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !9680
  ret i32 %9, !dbg !9687
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !9688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9692, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i8 %1, metadata !9693, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i8 %2, metadata !9694, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i8 %3, metadata !9695, metadata !DIExpression()), !dbg !9697
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9698
  br i1 %5, label %6, label %11, !dbg !9700

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !9701
  %8 = icmp eq i32 %0, 1, !dbg !9701
  %9 = select i1 %8, i32 1, i32 2, !dbg !9701
  %10 = select i1 %7, i32 0, i32 %9, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %10, metadata !9696, metadata !DIExpression()), !dbg !9697
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !9702
  br label %11, !dbg !9703

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !9697
  ret i32 %12, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !9705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9707, metadata !DIExpression()), !dbg !9709
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9710
  br i1 %2, label %3, label %8, !dbg !9712

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !9713
  %5 = icmp eq i32 %0, 1, !dbg !9713
  %6 = select i1 %5, i32 1, i32 2, !dbg !9713
  %7 = select i1 %4, i32 0, i32 %6, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %7, metadata !9708, metadata !DIExpression()), !dbg !9709
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #20, !dbg !9714
  br label %8, !dbg !9715

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !9709
  ret i32 %9, !dbg !9716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9721, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 %1, metadata !9722, metadata !DIExpression()), !dbg !9723
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #22, !dbg !9724
  br i1 %3, label %4, label %8, !dbg !9726

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !9727
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #22, !dbg !9729
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #20, !dbg !9729
  br label %8, !dbg !9730

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !9723
  ret i32 %9, !dbg !9730
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Set_timeout(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_reset() local_unnamed_addr #5 !dbg !9731 {
  store volatile i32 0, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !9732
  store volatile i32 0, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !9733
  store volatile i32 0, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !9734
  store volatile i32 0, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !9735
  store volatile i32 0, i32* inttoptr (i32 -536866784 to i32*), align 32, !dbg !9736
  store volatile i32 0, i32* inttoptr (i32 -536866768 to i32*), align 16, !dbg !9737
  store volatile i32 0, i32* inttoptr (i32 -536866752 to i32*), align 64, !dbg !9738
  store volatile i32 0, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !9739
  %1 = load volatile i32, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !9740
  %2 = and i32 %1, -16, !dbg !9740
  store volatile i32 %2, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !9740
  %3 = load volatile i32, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !9741
  %4 = and i32 %3, -16, !dbg !9741
  store volatile i32 %4, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !9741
  %5 = load volatile i32, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !9742
  %6 = and i32 %5, -16, !dbg !9742
  store volatile i32 %6, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !9742
  %7 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !9743
  %8 = and i32 %7, -16, !dbg !9743
  store volatile i32 %8, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !9743
  ret void, !dbg !9744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_init() local_unnamed_addr #5 !dbg !9745 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !9746
  %2 = and i32 %1, 1, !dbg !9748
  %3 = icmp eq i32 %2, 0, !dbg !9748
  br i1 %3, label %4, label %22, !dbg !9749

4:                                                ; preds = %0
  tail call void @hal_dwt_reset() #22, !dbg !9750
  %5 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !9752
  %6 = and i32 %5, 65536, !dbg !9754
  %7 = icmp eq i32 %6, 0, !dbg !9754
  br i1 %7, label %8, label %11, !dbg !9755

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !9756
  %10 = or i32 %9, 16842752, !dbg !9756
  store volatile i32 %10, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !9756
  br label %11, !dbg !9758

11:                                               ; preds = %8, %4
  %12 = load volatile i32, i32* inttoptr (i32 -536866816 to i32*), align 4096, !dbg !9759
  %13 = lshr i32 %12, 28, !dbg !9760
  store i32 %13, i32* @DWT_NUMCOMP, align 4, !dbg !9761
  %14 = load volatile i32, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !9762
  %15 = or i32 %14, 31, !dbg !9762
  store volatile i32 %15, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !9762
  %16 = load volatile i32, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !9763
  %17 = or i32 %16, 31, !dbg !9763
  store volatile i32 %17, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !9763
  %18 = load volatile i32, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !9764
  %19 = or i32 %18, 31, !dbg !9764
  store volatile i32 %19, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !9764
  %20 = load volatile i32, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !9765
  %21 = or i32 %20, 31, !dbg !9765
  store volatile i32 %21, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !9765
  br label %22, !dbg !9766

22:                                               ; preds = %11, %0
  ret void, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dwt_request_watchpoint(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 !dbg !9768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9773, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %1, metadata !9774, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %2, metadata !9775, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %3, metadata !9776, metadata !DIExpression()), !dbg !9778
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !9779
  %6 = and i32 %5, 1, !dbg !9781
  %7 = icmp eq i32 %6, 0, !dbg !9781
  br i1 %7, label %8, label %23, !dbg !9782

8:                                                ; preds = %4
  %9 = load i32, i32* @DWT_NUMCOMP, align 4, !dbg !9783
  %10 = icmp ugt i32 %9, %0, !dbg !9786
  %11 = and i32 %2, %1
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %12, %10, !dbg !9787
  br i1 %13, label %14, label %23, !dbg !9787

14:                                               ; preds = %8
  %15 = shl i32 %0, 2, !dbg !9788
  %16 = and i32 %15, 1073741820, !dbg !9788
  call void @llvm.dbg.value(metadata i32 %16, metadata !9777, metadata !DIExpression()), !dbg !9778
  %17 = getelementptr inbounds i32, i32* inttoptr (i32 -536866784 to i32*), i32 %16, !dbg !9789
  store volatile i32 %1, i32* %17, align 16, !dbg !9790
  %18 = getelementptr inbounds i32, i32* inttoptr (i32 -536866780 to i32*), i32 %16, !dbg !9791
  store volatile i32 %2, i32* %18, align 4, !dbg !9792
  %19 = getelementptr inbounds i32, i32* inttoptr (i32 -536866776 to i32*), i32 %16, !dbg !9793
  %20 = load volatile i32, i32* %19, align 8, !dbg !9794
  %21 = and i32 %20, 15, !dbg !9795
  %22 = or i32 %21, %3, !dbg !9796
  store volatile i32 %22, i32* %19, align 8, !dbg !9797
  br label %23, !dbg !9798

23:                                               ; preds = %4, %8, %14
  %24 = phi i32 [ 0, %14 ], [ -1, %8 ], [ -1, %4 ], !dbg !9799
  ret i32 %24, !dbg !9800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #8 !dbg !9801 {
  call void @llvm.dbg.value(metadata i8 5, metadata !9805, metadata !DIExpression()), !dbg !9806
  ret i8 5, !dbg !9807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #8 !dbg !9808 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !9811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #8 !dbg !9812 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !9813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #8 !dbg !9814 {
  call void @llvm.dbg.value(metadata i8 5, metadata !9816, metadata !DIExpression()), !dbg !9817
  ret i8 5, !dbg !9818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #8 !dbg !9819 {
  ret %struct.flash_info_t* null, !dbg !9822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_mode_init() local_unnamed_addr #5 !dbg !9823 {
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.gpio_mode_init.mode_temp, metadata !9826, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i32 0, metadata !9825, metadata !DIExpression()), !dbg !9831
  br label %1, !dbg !9832

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9825, metadata !DIExpression()), !dbg !9831
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.gpio_mode_init.mode_temp, i32 0, i32 %2, !dbg !9834
  %4 = load i32, i32* %3, align 4, !dbg !9834
  %5 = shl nuw nsw i32 %2, 2, !dbg !9834
  %6 = add nuw nsw i32 %5, -2130563040, !dbg !9834
  %7 = inttoptr i32 %6 to i32*, !dbg !9834
  store volatile i32 %4, i32* %7, align 4, !dbg !9834
  %8 = add nuw nsw i32 %2, 1, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %8, metadata !9825, metadata !DIExpression()), !dbg !9831
  %9 = icmp eq i32 %8, 10, !dbg !9838
  br i1 %9, label %10, label %1, !dbg !9832, !llvm.loop !9839

10:                                               ; preds = %1
  ret void, !dbg !9841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_oe_init() local_unnamed_addr #5 !dbg !9842 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9844, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata i32 0, metadata !9844, metadata !DIExpression()), !dbg !9847
  store volatile i32 115, i32* inttoptr (i32 -2097106800 to i32*), align 16, !dbg !9848
  call void @llvm.dbg.value(metadata i32 1, metadata !9844, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata i32 1, metadata !9844, metadata !DIExpression()), !dbg !9847
  store volatile i32 100663494, i32* inttoptr (i32 -2097106784 to i32*), align 32, !dbg !9848
  call void @llvm.dbg.value(metadata i32 2, metadata !9844, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata i32 2, metadata !9844, metadata !DIExpression()), !dbg !9847
  store volatile i32 0, i32* inttoptr (i32 -2097106768 to i32*), align 16, !dbg !9848
  call void @llvm.dbg.value(metadata i32 3, metadata !9844, metadata !DIExpression()), !dbg !9847
  ret void, !dbg !9852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_ies_init() local_unnamed_addr #5 !dbg !9853 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9855, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 0, metadata !9855, metadata !DIExpression()), !dbg !9857
  store volatile i32 -116, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !9858
  call void @llvm.dbg.value(metadata i32 1, metadata !9855, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 1, metadata !9855, metadata !DIExpression()), !dbg !9857
  store volatile i32 -100663495, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !9858
  call void @llvm.dbg.value(metadata i32 2, metadata !9855, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 2, metadata !9855, metadata !DIExpression()), !dbg !9857
  store volatile i32 511, i32* inttoptr (i32 -2097106680 to i32*), align 8, !dbg !9858
  call void @llvm.dbg.value(metadata i32 3, metadata !9855, metadata !DIExpression()), !dbg !9857
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9862
  %2 = and i32 %1, -3, !dbg !9862
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9862
  %3 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9863
  %4 = or i32 %3, 2, !dbg !9863
  store volatile i32 %4, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9863
  %5 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9864
  %6 = or i32 %5, 2048, !dbg !9864
  store volatile i32 %6, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9864
  %7 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9865
  %8 = and i32 %7, -3, !dbg !9865
  store volatile i32 %8, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9865
  %9 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9866
  %10 = or i32 %9, 2, !dbg !9866
  store volatile i32 %10, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9866
  %11 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9867
  %12 = or i32 %11, 2048, !dbg !9867
  store volatile i32 %12, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9867
  %13 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9868
  %14 = and i32 %13, -3, !dbg !9868
  store volatile i32 %14, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9868
  %15 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9869
  %16 = or i32 %15, 2, !dbg !9869
  store volatile i32 %16, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9869
  %17 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9870
  %18 = or i32 %17, 2048, !dbg !9870
  store volatile i32 %18, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9870
  %19 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9871
  %20 = and i32 %19, -3, !dbg !9871
  store volatile i32 %20, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9871
  %21 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9872
  %22 = or i32 %21, 2, !dbg !9872
  store volatile i32 %22, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9872
  %23 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9873
  %24 = or i32 %23, 2048, !dbg !9873
  store volatile i32 %24, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9873
  %25 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9874
  %26 = and i32 %25, -3, !dbg !9874
  store volatile i32 %26, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9874
  %27 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9875
  %28 = or i32 %27, 2, !dbg !9875
  store volatile i32 %28, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9875
  %29 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9876
  %30 = or i32 %29, 2048, !dbg !9876
  store volatile i32 %30, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9876
  %31 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9877
  %32 = and i32 %31, -3, !dbg !9877
  store volatile i32 %32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9877
  %33 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9878
  %34 = or i32 %33, 2, !dbg !9878
  store volatile i32 %34, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9878
  %35 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9879
  %36 = or i32 %35, 2048, !dbg !9879
  store volatile i32 %36, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9879
  ret void, !dbg !9880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_up_init() local_unnamed_addr #5 !dbg !9881 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9883, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 0, metadata !9883, metadata !DIExpression()), !dbg !9885
  store volatile i32 4, i32* inttoptr (i32 -2097106944 to i32*), align 4096, !dbg !9886
  call void @llvm.dbg.value(metadata i32 1, metadata !9883, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 1, metadata !9883, metadata !DIExpression()), !dbg !9885
  store volatile i32 16, i32* inttoptr (i32 -2097106928 to i32*), align 16, !dbg !9886
  call void @llvm.dbg.value(metadata i32 2, metadata !9883, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 2, metadata !9883, metadata !DIExpression()), !dbg !9885
  store volatile i32 0, i32* inttoptr (i32 -2097106912 to i32*), align 32, !dbg !9886
  call void @llvm.dbg.value(metadata i32 3, metadata !9883, metadata !DIExpression()), !dbg !9885
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9890
  %2 = and i32 %1, -29, !dbg !9890
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !9890
  %3 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9891
  %4 = and i32 %3, -29, !dbg !9891
  store volatile i32 %4, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !9891
  %5 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9892
  %6 = and i32 %5, -29, !dbg !9892
  store volatile i32 %6, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !9892
  %7 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9893
  %8 = and i32 %7, -29, !dbg !9893
  store volatile i32 %8, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !9893
  %9 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9894
  %10 = and i32 %9, -29, !dbg !9894
  store volatile i32 %10, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !9894
  %11 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9895
  %12 = and i32 %11, -29, !dbg !9895
  store volatile i32 %12, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !9895
  ret void, !dbg !9896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_down_init() local_unnamed_addr #5 !dbg !9897 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9899, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i32 0, metadata !9899, metadata !DIExpression()), !dbg !9901
  store volatile i32 16776960, i32* inttoptr (i32 -2097106896 to i32*), align 16, !dbg !9902
  call void @llvm.dbg.value(metadata i32 1, metadata !9899, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i32 1, metadata !9899, metadata !DIExpression()), !dbg !9901
  store volatile i32 -100663552, i32* inttoptr (i32 -2097106880 to i32*), align 64, !dbg !9902
  call void @llvm.dbg.value(metadata i32 2, metadata !9899, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i32 2, metadata !9899, metadata !DIExpression()), !dbg !9901
  store volatile i32 511, i32* inttoptr (i32 -2097106864 to i32*), align 16, !dbg !9902
  call void @llvm.dbg.value(metadata i32 3, metadata !9899, metadata !DIExpression()), !dbg !9901
  ret void, !dbg !9906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_output_init() local_unnamed_addr #5 !dbg !9907 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9909, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 0, metadata !9909, metadata !DIExpression()), !dbg !9911
  store volatile i32 67, i32* inttoptr (i32 -2097106848 to i32*), align 32, !dbg !9912
  call void @llvm.dbg.value(metadata i32 1, metadata !9909, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 1, metadata !9909, metadata !DIExpression()), !dbg !9911
  store volatile i32 64, i32* inttoptr (i32 -2097106832 to i32*), align 16, !dbg !9912
  call void @llvm.dbg.value(metadata i32 2, metadata !9909, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 2, metadata !9909, metadata !DIExpression()), !dbg !9911
  store volatile i32 0, i32* inttoptr (i32 -2097106816 to i32*), align 128, !dbg !9912
  call void @llvm.dbg.value(metadata i32 3, metadata !9909, metadata !DIExpression()), !dbg !9911
  ret void, !dbg !9916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_set_control_by_cm4() local_unnamed_addr #5 !dbg !9917 {
  store volatile i32 -1, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !9918
  store volatile i32 -1, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !9919
  store volatile i32 50397183, i32* inttoptr (i32 -2130571128 to i32*), align 8, !dbg !9920
  ret void, !dbg !9921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_setting_init() local_unnamed_addr #5 !dbg !9922 {
  tail call void @gpio_mode_init() #22, !dbg !9923
  tail call void @gpio_oe_init() #22, !dbg !9924
  tail call void @gpio_ies_init() #22, !dbg !9925
  tail call void @gpio_pull_up_init() #22, !dbg !9926
  tail call void @gpio_pull_down_init() #22, !dbg !9927
  tail call void @gpio_output_init() #22, !dbg !9928
  ret void, !dbg !9929
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_mount(%struct.FATFS* noundef %0, i8* noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !9930 {
  %4 = alloca %struct.FATFS*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !9934, metadata !DIExpression()), !dbg !9941
  store %struct.FATFS* %0, %struct.FATFS** %4, align 4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9935, metadata !DIExpression()), !dbg !9941
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.value(metadata i8 %2, metadata !9936, metadata !DIExpression()), !dbg !9941
  %7 = bitcast i8** %6 to i8*, !dbg !9942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !9942
  call void @llvm.dbg.value(metadata i8* %1, metadata !9935, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i8* %1, metadata !9940, metadata !DIExpression()), !dbg !9941
  store i8* %1, i8** %6, align 4, !dbg !9943
  call void @llvm.dbg.value(metadata i8** %6, metadata !9940, metadata !DIExpression(DW_OP_deref)), !dbg !9941
  %8 = call fastcc i32 @get_ldnumber(i8** noundef nonnull %6) #22, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %8, metadata !9938, metadata !DIExpression()), !dbg !9941
  %9 = icmp slt i32 %8, 0, !dbg !9945
  br i1 %9, label %24, label %10, !dbg !9947

10:                                               ; preds = %3
  %11 = getelementptr inbounds [1 x %struct.FATFS*], [1 x %struct.FATFS*]* @FatFs, i32 0, i32 %8, !dbg !9948
  %12 = load %struct.FATFS*, %struct.FATFS** %11, align 4, !dbg !9948
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !9937, metadata !DIExpression()), !dbg !9941
  %13 = icmp eq %struct.FATFS* %12, null, !dbg !9949
  br i1 %13, label %16, label %14, !dbg !9951

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 0, !dbg !9952
  store i8 0, i8* %15, align 4, !dbg !9954
  br label %16, !dbg !9955

16:                                               ; preds = %14, %10
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !9934, metadata !DIExpression()), !dbg !9941
  %17 = icmp eq %struct.FATFS* %0, null, !dbg !9956
  br i1 %17, label %18, label %19, !dbg !9958

18:                                               ; preds = %16
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !9934, metadata !DIExpression()), !dbg !9941
  store %struct.FATFS* null, %struct.FATFS** %11, align 4, !dbg !9959
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !9934, metadata !DIExpression()), !dbg !9941
  br label %24, !dbg !9960

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 0, !dbg !9962
  store i8 0, i8* %20, align 4, !dbg !9964
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !9934, metadata !DIExpression()), !dbg !9941
  store %struct.FATFS* %0, %struct.FATFS** %11, align 4, !dbg !9959
  %21 = icmp eq i8 %2, 1
  br i1 %21, label %22, label %24, !dbg !9960

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata %struct.FATFS** %4, metadata !9934, metadata !DIExpression(DW_OP_deref)), !dbg !9941
  call void @llvm.dbg.value(metadata i8** %5, metadata !9935, metadata !DIExpression(DW_OP_deref)), !dbg !9941
  %23 = call fastcc i32 @find_volume(i8** noundef nonnull %5, %struct.FATFS** noundef nonnull %4, i8 noundef zeroext 0) #22, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %23, metadata !9939, metadata !DIExpression()), !dbg !9941
  br label %24, !dbg !9966

24:                                               ; preds = %18, %19, %3, %22
  %25 = phi i32 [ %23, %22 ], [ 11, %3 ], [ 0, %19 ], [ 0, %18 ], !dbg !9941
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !9967
  ret i32 %25, !dbg !9967
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_ldnumber(i8** nocapture noundef %0) unnamed_addr #13 !dbg !1404 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !1408, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 -1, metadata !1412, metadata !DIExpression()), !dbg !9968
  %2 = load i8*, i8** %0, align 4, !dbg !9969
  %3 = icmp eq i8* %2, null, !dbg !9969
  br i1 %3, label %50, label %4, !dbg !9971

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %1 ]
  %6 = getelementptr inbounds i8, i8* %2, i32 %5, !dbg !9968
  call void @llvm.dbg.value(metadata i8* %6, metadata !1410, metadata !DIExpression()), !dbg !9968
  %7 = load i8, i8* %6, align 1, !dbg !9972
  %8 = icmp ult i8 %7, 33, !dbg !9976
  %9 = icmp eq i8 %7, 58
  %10 = or i1 %8, %9, !dbg !9977
  %11 = add nuw nsw i32 %5, 1, !dbg !9978
  call void @llvm.dbg.value(metadata !DIArgList(i8* %2, i32 %11), metadata !1410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !9968
  br i1 %10, label %12, label %4, !dbg !9977, !llvm.loop !9979

12:                                               ; preds = %4
  %13 = getelementptr inbounds i8, i8* %2, i32 %5, !dbg !9968
  br i1 %9, label %14, label %50, !dbg !9982

14:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i8* %2, metadata !1409, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %2, metadata !1409, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9968
  %15 = load i8, i8* %2, align 1, !dbg !9983
  %16 = zext i8 %15 to i32, !dbg !9983
  %17 = add nsw i32 %16, -48, !dbg !9986
  call void @llvm.dbg.value(metadata i32 %17, metadata !1411, metadata !DIExpression()), !dbg !9968
  %18 = icmp ult i32 %17, 10, !dbg !9987
  %19 = icmp eq i32 %5, 1
  %20 = select i1 %18, i1 %19, i1 false, !dbg !9989
  call void @llvm.dbg.value(metadata i8* %2, metadata !1409, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9968
  br i1 %20, label %27, label %21, !dbg !9989

21:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.130, i32 0, i32 0), metadata !1413, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %2, metadata !1409, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.130, i32 0, i32 0), metadata !1413, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9968
  call void @llvm.dbg.value(metadata i8 83, metadata !1414, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %2, metadata !1409, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9968
  call void @llvm.dbg.value(metadata i8 %15, metadata !1415, metadata !DIExpression()), !dbg !9968
  %22 = add i8 %15, -97, !dbg !9990
  %23 = icmp ult i8 %22, 26, !dbg !9990
  %24 = add i8 %15, -32
  %25 = select i1 %23, i8 %24, i8 %15, !dbg !9990
  call void @llvm.dbg.value(metadata i8 %25, metadata !1415, metadata !DIExpression()), !dbg !9968
  %26 = icmp eq i8 %25, 83, !dbg !9995
  br i1 %26, label %29, label %43, !dbg !9996, !llvm.loop !9997

27:                                               ; preds = %14
  %28 = icmp eq i32 %17, 0, !dbg !10000
  br i1 %28, label %48, label %50, !dbg !10003

29:                                               ; preds = %21, %29
  %30 = phi i8* [ %32, %29 ], [ %2, %21 ]
  %31 = phi i8* [ %33, %29 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.130, i32 0, i32 0), %21 ]
  %32 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !10004
  call void @llvm.dbg.value(metadata i8* %31, metadata !1413, metadata !DIExpression()), !dbg !9968
  %33 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !10005
  call void @llvm.dbg.value(metadata i8* %33, metadata !1413, metadata !DIExpression()), !dbg !9968
  %34 = load i8, i8* %32, align 1, !dbg !10006
  call void @llvm.dbg.value(metadata i8* %32, metadata !1409, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %33, metadata !1413, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9968
  %35 = load i8, i8* %33, align 1, !dbg !10007
  call void @llvm.dbg.value(metadata i8 %35, metadata !1414, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %32, metadata !1409, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9968
  call void @llvm.dbg.value(metadata i8 %34, metadata !1415, metadata !DIExpression()), !dbg !9968
  %36 = add i8 %34, -97, !dbg !9990
  %37 = icmp ult i8 %36, 26, !dbg !9990
  %38 = add i8 %34, -32
  %39 = select i1 %37, i8 %38, i8 %34, !dbg !9990
  call void @llvm.dbg.value(metadata i8 %39, metadata !1415, metadata !DIExpression()), !dbg !9968
  %40 = icmp ne i8 %35, 0, !dbg !10008
  %41 = icmp eq i8 %35, %39, !dbg !9995
  %42 = select i1 %40, i1 %41, i1 false, !dbg !9995
  br i1 %42, label %29, label %43, !dbg !9996, !llvm.loop !9997

43:                                               ; preds = %29, %21
  %44 = phi i8* [ %2, %21 ], [ %32, %29 ], !dbg !10009
  %45 = phi i1 [ true, %21 ], [ %40, %29 ], !dbg !10008
  %46 = icmp ne i8* %44, %13
  %47 = or i1 %46, %45, !dbg !10010
  br i1 %47, label %50, label %48, !dbg !10010

48:                                               ; preds = %43, %27
  %49 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !10011
  store i8* %49, i8** %0, align 4, !dbg !10011
  br label %50, !dbg !10012

50:                                               ; preds = %48, %43, %1, %12, %27
  %51 = phi i32 [ -1, %27 ], [ -1, %1 ], [ 0, %12 ], [ -1, %43 ], [ 0, %48 ], !dbg !9968
  ret i32 %51, !dbg !10012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @find_volume(i8** nocapture noundef %0, %struct.FATFS** nocapture noundef writeonly %1, i8 noundef zeroext %2) unnamed_addr #0 !dbg !10013 {
  %4 = alloca [4 x i32], align 4
  call void @llvm.dbg.value(metadata i8** %0, metadata !10018, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata %struct.FATFS** %1, metadata !10019, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i8 %2, metadata !10020, metadata !DIExpression()), !dbg !10036
  %5 = bitcast [4 x i32]* %4 to i8*, !dbg !10037
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #19, !dbg !10037
  call void @llvm.dbg.declare(metadata [4 x i32]* %4, metadata !10031, metadata !DIExpression()), !dbg !10038
  store %struct.FATFS* null, %struct.FATFS** %1, align 4, !dbg !10039
  %6 = tail call fastcc i32 @get_ldnumber(i8** noundef %0) #22, !dbg !10040
  call void @llvm.dbg.value(metadata i32 %6, metadata !10023, metadata !DIExpression()), !dbg !10036
  %7 = icmp slt i32 %6, 0, !dbg !10041
  br i1 %7, label %219, label %8, !dbg !10043

8:                                                ; preds = %3
  %9 = getelementptr inbounds [1 x %struct.FATFS*], [1 x %struct.FATFS*]* @FatFs, i32 0, i32 %6, !dbg !10044
  %10 = load %struct.FATFS*, %struct.FATFS** %9, align 4, !dbg !10044
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !10034, metadata !DIExpression()), !dbg !10036
  %11 = icmp eq %struct.FATFS* %10, null, !dbg !10045
  br i1 %11, label %219, label %12, !dbg !10047

12:                                               ; preds = %8
  store %struct.FATFS* %10, %struct.FATFS** %1, align 4, !dbg !10048
  %13 = and i8 %2, -2, !dbg !10049
  call void @llvm.dbg.value(metadata i8 %13, metadata !10020, metadata !DIExpression()), !dbg !10036
  %14 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 0, !dbg !10050
  %15 = load i8, i8* %14, align 4, !dbg !10050
  %16 = icmp eq i8 %15, 0, !dbg !10052
  br i1 %16, label %30, label %17, !dbg !10053

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 1, !dbg !10054
  %19 = load i8, i8* %18, align 1, !dbg !10054
  %20 = tail call zeroext i8 @disk_status(i8 noundef zeroext %19) #20, !dbg !10056
  call void @llvm.dbg.value(metadata i8 %20, metadata !10024, metadata !DIExpression()), !dbg !10036
  %21 = zext i8 %20 to i32, !dbg !10057
  %22 = and i32 %21, 1, !dbg !10059
  %23 = icmp eq i32 %22, 0, !dbg !10059
  br i1 %23, label %24, label %30, !dbg !10060

24:                                               ; preds = %17
  %25 = icmp eq i8 %13, 0, !dbg !10061
  %26 = and i32 %21, 4
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %25, i1 true, i1 %27, !dbg !10064
  %29 = select i1 %28, i32 0, i32 10, !dbg !10064
  br label %219, !dbg !10064

30:                                               ; preds = %17, %12
  store i8 0, i8* %14, align 4, !dbg !10065
  %31 = trunc i32 %6 to i8, !dbg !10066
  %32 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 1, !dbg !10067
  store i8 %31, i8* %32, align 1, !dbg !10068
  %33 = tail call zeroext i8 @disk_initialize(i8 noundef zeroext %31) #20, !dbg !10069
  call void @llvm.dbg.value(metadata i8 %33, metadata !10024, metadata !DIExpression()), !dbg !10036
  %34 = zext i8 %33 to i32, !dbg !10070
  %35 = and i32 %34, 1, !dbg !10072
  %36 = icmp eq i32 %35, 0, !dbg !10072
  br i1 %36, label %37, label %219, !dbg !10073

37:                                               ; preds = %30
  %38 = icmp eq i8 %13, 0, !dbg !10074
  %39 = and i32 %34, 4
  %40 = icmp eq i32 %39, 0
  %41 = select i1 %38, i1 true, i1 %40, !dbg !10076
  br i1 %41, label %42, label %219, !dbg !10076

42:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 0, metadata !10025, metadata !DIExpression()), !dbg !10036
  %43 = tail call fastcc zeroext i8 @check_fs(%struct.FATFS* noundef nonnull %10, i32 noundef 0) #22, !dbg !10077
  call void @llvm.dbg.value(metadata i8 %43, metadata !10021, metadata !DIExpression()), !dbg !10036
  %44 = icmp eq i8 %43, 2, !dbg !10078
  br i1 %44, label %45, label %74, !dbg !10080

45:                                               ; preds = %42, %56
  %46 = phi i32 [ %59, %56 ], [ 0, %42 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !10035, metadata !DIExpression()), !dbg !10036
  %47 = shl nuw nsw i32 %46, 4, !dbg !10081
  %48 = add nuw nsw i32 %47, 446, !dbg !10086
  %49 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 %48, !dbg !10087
  call void @llvm.dbg.value(metadata i8* %49, metadata !10022, metadata !DIExpression()), !dbg !10036
  %50 = getelementptr inbounds i8, i8* %49, i32 4, !dbg !10088
  %51 = load i8, i8* %50, align 1, !dbg !10088
  %52 = icmp eq i8 %51, 0, !dbg !10088
  br i1 %52, label %56, label %53, !dbg !10088

53:                                               ; preds = %45
  %54 = getelementptr inbounds i8, i8* %49, i32 8, !dbg !10089
  %55 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %54) #22, !dbg !10090
  br label %56, !dbg !10088

56:                                               ; preds = %45, %53
  %57 = phi i32 [ %55, %53 ], [ 0, %45 ], !dbg !10088
  %58 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i32 0, i32 %46, !dbg !10091
  store i32 %57, i32* %58, align 4, !dbg !10092
  %59 = add nuw nsw i32 %46, 1, !dbg !10093
  call void @llvm.dbg.value(metadata i32 %59, metadata !10035, metadata !DIExpression()), !dbg !10036
  %60 = icmp eq i32 %59, 4, !dbg !10094
  br i1 %60, label %61, label %45, !dbg !10095, !llvm.loop !10096

61:                                               ; preds = %56, %68
  %62 = phi i32 [ %71, %68 ], [ 0, %56 ], !dbg !10098
  call void @llvm.dbg.value(metadata i32 %62, metadata !10035, metadata !DIExpression()), !dbg !10036
  %63 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i32 0, i32 %62, !dbg !10099
  %64 = load i32, i32* %63, align 4, !dbg !10099
  call void @llvm.dbg.value(metadata i32 %64, metadata !10025, metadata !DIExpression()), !dbg !10036
  %65 = icmp eq i32 %64, 0, !dbg !10101
  br i1 %65, label %68, label %66, !dbg !10101

66:                                               ; preds = %61
  %67 = tail call fastcc zeroext i8 @check_fs(%struct.FATFS* noundef %10, i32 noundef %64) #22, !dbg !10102
  br label %68, !dbg !10101

68:                                               ; preds = %61, %66
  %69 = phi i8 [ %67, %66 ], [ 3, %61 ], !dbg !10101
  call void @llvm.dbg.value(metadata i8 %69, metadata !10021, metadata !DIExpression()), !dbg !10036
  %70 = icmp ugt i8 %69, 1, !dbg !10103
  %71 = add nuw nsw i32 %62, 1
  %72 = icmp ult i32 %62, 3
  %73 = select i1 %70, i1 %72, i1 false, !dbg !10104
  call void @llvm.dbg.value(metadata i32 %71, metadata !10035, metadata !DIExpression()), !dbg !10036
  br i1 %73, label %61, label %74, !dbg !10104, !llvm.loop !10105

74:                                               ; preds = %68, %42
  %75 = phi i32 [ 0, %42 ], [ %64, %68 ], !dbg !10036
  %76 = phi i8 [ %43, %42 ], [ %69, %68 ], !dbg !10036
  call void @llvm.dbg.value(metadata i8 %76, metadata !10021, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i32 %75, metadata !10025, metadata !DIExpression()), !dbg !10036
  %77 = icmp eq i8 %76, 4, !dbg !10108
  br i1 %77, label %219, label %78, !dbg !10110

78:                                               ; preds = %74
  %79 = icmp ugt i8 %76, 1, !dbg !10111
  br i1 %79, label %219, label %80, !dbg !10113

80:                                               ; preds = %78
  %81 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 0, !dbg !10114
  %82 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 11, !dbg !10117
  %83 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %82) #22, !dbg !10118
  %84 = icmp eq i16 %83, 512, !dbg !10119
  br i1 %84, label %85, label %219, !dbg !10120

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 22, !dbg !10121
  %87 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %86) #22, !dbg !10122
  %88 = zext i16 %87 to i32, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %88, metadata !10026, metadata !DIExpression()), !dbg !10036
  %89 = icmp eq i16 %87, 0, !dbg !10123
  br i1 %89, label %90, label %93, !dbg !10125

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 36, !dbg !10126
  %92 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %91) #22, !dbg !10127
  call void @llvm.dbg.value(metadata i32 %92, metadata !10026, metadata !DIExpression()), !dbg !10036
  br label %93, !dbg !10128

93:                                               ; preds = %90, %85
  %94 = phi i32 [ %92, %90 ], [ %88, %85 ], !dbg !10129
  call void @llvm.dbg.value(metadata i32 %94, metadata !10026, metadata !DIExpression()), !dbg !10036
  %95 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 12, !dbg !10130
  store i32 %94, i32* %95, align 4, !dbg !10131
  %96 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 16, !dbg !10132
  %97 = load i8, i8* %96, align 4, !dbg !10132
  %98 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 2, !dbg !10133
  store i8 %97, i8* %98, align 2, !dbg !10134
  %99 = add i8 %97, -1, !dbg !10135
  %100 = icmp ult i8 %99, 2, !dbg !10135
  br i1 %100, label %101, label %219, !dbg !10135

101:                                              ; preds = %93
  %102 = zext i8 %97 to i32, !dbg !10137
  %103 = mul i32 %94, %102, !dbg !10138
  call void @llvm.dbg.value(metadata i32 %103, metadata !10026, metadata !DIExpression()), !dbg !10036
  %104 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 13, !dbg !10139
  %105 = load i8, i8* %104, align 1, !dbg !10139
  %106 = zext i8 %105 to i16, !dbg !10139
  %107 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 7, !dbg !10140
  store i16 %106, i16* %107, align 2, !dbg !10141
  %108 = tail call i8 @llvm.ctpop.i8(i8 %105), !range !10142
  %109 = icmp eq i8 %108, 1, !dbg !10143
  br i1 %109, label %110, label %219, !dbg !10143

110:                                              ; preds = %101
  %111 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 17, !dbg !10145
  %112 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %111) #22, !dbg !10146
  %113 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 6, !dbg !10147
  store i16 %112, i16* %113, align 4, !dbg !10148
  %114 = and i16 %112, 15, !dbg !10149
  %115 = icmp eq i16 %114, 0, !dbg !10149
  br i1 %115, label %116, label %219, !dbg !10151

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 19, !dbg !10152
  %118 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %117) #22, !dbg !10153
  %119 = zext i16 %118 to i32, !dbg !10153
  call void @llvm.dbg.value(metadata i32 %119, metadata !10027, metadata !DIExpression()), !dbg !10036
  %120 = icmp eq i16 %118, 0, !dbg !10154
  br i1 %120, label %121, label %124, !dbg !10156

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 32, !dbg !10157
  %123 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %122) #22, !dbg !10158
  call void @llvm.dbg.value(metadata i32 %123, metadata !10027, metadata !DIExpression()), !dbg !10036
  br label %124, !dbg !10159

124:                                              ; preds = %121, %116
  %125 = phi i32 [ %123, %121 ], [ %119, %116 ], !dbg !10129
  call void @llvm.dbg.value(metadata i32 %125, metadata !10027, metadata !DIExpression()), !dbg !10036
  %126 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 14, !dbg !10160
  %127 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %126) #22, !dbg !10161
  call void @llvm.dbg.value(metadata i16 %127, metadata !10033, metadata !DIExpression()), !dbg !10036
  %128 = zext i16 %127 to i32, !dbg !10162
  %129 = icmp eq i16 %127, 0, !dbg !10164
  br i1 %129, label %219, label %130, !dbg !10165

130:                                              ; preds = %124
  %131 = lshr i16 %112, 4, !dbg !10166
  %132 = zext i16 %131 to i32, !dbg !10166
  %133 = add i32 %103, %132, !dbg !10167
  %134 = add i32 %133, %128, !dbg !10168
  call void @llvm.dbg.value(metadata i32 %134, metadata !10028, metadata !DIExpression()), !dbg !10036
  %135 = icmp ult i32 %125, %134, !dbg !10169
  br i1 %135, label %219, label %136, !dbg !10171

136:                                              ; preds = %130
  %137 = sub i32 %125, %134, !dbg !10172
  %138 = zext i8 %105 to i32, !dbg !10173
  %139 = udiv i32 %137, %138, !dbg !10174
  call void @llvm.dbg.value(metadata i32 %139, metadata !10029, metadata !DIExpression()), !dbg !10036
  %140 = icmp ult i32 %137, %138, !dbg !10175
  br i1 %140, label %219, label %141, !dbg !10177

141:                                              ; preds = %136
  call void @llvm.dbg.value(metadata i8 3, metadata !10021, metadata !DIExpression()), !dbg !10036
  %142 = icmp ult i32 %139, 65526, !dbg !10178
  %143 = select i1 %142, i8 2, i8 3, !dbg !10180
  call void @llvm.dbg.value(metadata i8 %143, metadata !10021, metadata !DIExpression()), !dbg !10036
  %144 = icmp ult i32 %139, 4086, !dbg !10181
  %145 = select i1 %144, i8 1, i8 %143, !dbg !10183
  call void @llvm.dbg.value(metadata i8 %145, metadata !10021, metadata !DIExpression()), !dbg !10036
  %146 = add i32 %139, 2, !dbg !10184
  %147 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 11, !dbg !10185
  store i32 %146, i32* %147, align 4, !dbg !10186
  %148 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 13, !dbg !10187
  store i32 %75, i32* %148, align 4, !dbg !10188
  %149 = add i32 %75, %128, !dbg !10189
  %150 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 14, !dbg !10190
  store i32 %149, i32* %150, align 4, !dbg !10191
  %151 = add i32 %134, %75, !dbg !10192
  %152 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 16, !dbg !10193
  store i32 %151, i32* %152, align 4, !dbg !10194
  %153 = icmp eq i8 %145, 3, !dbg !10195
  br i1 %153, label %154, label %160, !dbg !10197

154:                                              ; preds = %141
  %155 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 42, !dbg !10198
  %156 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %155) #22, !dbg !10201
  %157 = icmp eq i16 %156, 0, !dbg !10202
  %158 = icmp eq i16 %112, 0
  %159 = select i1 %157, i1 %158, i1 false, !dbg !10203
  br i1 %159, label %175, label %219, !dbg !10203

160:                                              ; preds = %141
  %161 = icmp eq i16 %112, 0, !dbg !10204
  br i1 %161, label %219, label %162, !dbg !10207

162:                                              ; preds = %160
  %163 = add i32 %149, %103, !dbg !10208
  %164 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 15, !dbg !10209
  store i32 %163, i32* %164, align 4, !dbg !10210
  %165 = icmp eq i8 %145, 2, !dbg !10211
  %166 = shl i32 %146, 1, !dbg !10212
  %167 = mul i32 %146, 3, !dbg !10212
  %168 = lshr i32 %167, 1, !dbg !10212
  %169 = and i32 %139, 1, !dbg !10212
  %170 = add nuw i32 %168, %169, !dbg !10212
  %171 = select i1 %165, i32 %166, i32 %170, !dbg !10212
  call void @llvm.dbg.value(metadata i32 %171, metadata !10030, metadata !DIExpression()), !dbg !10036
  %172 = add i32 %171, 511, !dbg !10213
  %173 = lshr i32 %172, 9, !dbg !10215
  %174 = icmp ult i32 %94, %173, !dbg !10216
  br i1 %174, label %219, label %183, !dbg !10217

175:                                              ; preds = %154
  %176 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 44, !dbg !10218
  %177 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %176) #22, !dbg !10219
  %178 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 15, !dbg !10220
  store i32 %177, i32* %178, align 4, !dbg !10221
  %179 = shl i32 %146, 2, !dbg !10222
  call void @llvm.dbg.value(metadata i32 %171, metadata !10030, metadata !DIExpression()), !dbg !10036
  %180 = add i32 %179, 511, !dbg !10213
  %181 = lshr i32 %180, 9, !dbg !10215
  %182 = icmp ult i32 %94, %181, !dbg !10216
  br i1 %182, label %219, label %187, !dbg !10217

183:                                              ; preds = %162
  %184 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 9, !dbg !10223
  store i32 -1, i32* %184, align 4, !dbg !10224
  %185 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 8, !dbg !10225
  store i32 -1, i32* %185, align 4, !dbg !10226
  %186 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 4, !dbg !10227
  store i8 -128, i8* %186, align 4, !dbg !10228
  br label %214, !dbg !10229

187:                                              ; preds = %175
  %188 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 9, !dbg !10223
  store i32 -1, i32* %188, align 4, !dbg !10224
  %189 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 8, !dbg !10225
  store i32 -1, i32* %189, align 4, !dbg !10226
  %190 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 4, !dbg !10227
  store i8 -128, i8* %190, align 4, !dbg !10228
  %191 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 48, !dbg !10231
  %192 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %191) #22, !dbg !10232
  %193 = icmp eq i16 %192, 1, !dbg !10233
  br i1 %193, label %194, label %214, !dbg !10234

194:                                              ; preds = %187
  %195 = add i32 %75, 1, !dbg !10235
  %196 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %10, i32 noundef %195) #22, !dbg !10236
  %197 = icmp eq i32 %196, 0, !dbg !10237
  br i1 %197, label %198, label %214, !dbg !10238

198:                                              ; preds = %194
  store i8 0, i8* %190, align 4, !dbg !10239
  %199 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 510, !dbg !10241
  %200 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %199) #22, !dbg !10243
  %201 = icmp eq i16 %200, -21931, !dbg !10244
  br i1 %201, label %202, label %214, !dbg !10245

202:                                              ; preds = %198
  %203 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %81) #22, !dbg !10246
  %204 = icmp eq i32 %203, 1096897106, !dbg !10247
  br i1 %204, label %205, label %214, !dbg !10248

205:                                              ; preds = %202
  %206 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 484, !dbg !10249
  %207 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %206) #22, !dbg !10250
  %208 = icmp eq i32 %207, 1631679090, !dbg !10251
  br i1 %208, label %209, label %214, !dbg !10252

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 488, !dbg !10253
  %211 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %210) #22, !dbg !10255
  store i32 %211, i32* %188, align 4, !dbg !10256
  %212 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 18, i32 492, !dbg !10257
  %213 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %212) #22, !dbg !10258
  store i32 %213, i32* %189, align 4, !dbg !10259
  br label %214, !dbg !10260

214:                                              ; preds = %183, %198, %202, %205, %209, %194, %187
  store i8 %145, i8* %14, align 4, !dbg !10261
  %215 = load i16, i16* @Fsid, align 2, !dbg !10262
  %216 = add i16 %215, 1, !dbg !10262
  store i16 %216, i16* @Fsid, align 2, !dbg !10262
  %217 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 5, !dbg !10263
  store i16 %216, i16* %217, align 2, !dbg !10264
  %218 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 10, !dbg !10265
  store i32 0, i32* %218, align 4, !dbg !10266
  br label %219, !dbg !10267

219:                                              ; preds = %175, %24, %93, %162, %160, %154, %136, %130, %124, %110, %101, %80, %78, %74, %37, %30, %8, %3, %214
  %220 = phi i32 [ 0, %214 ], [ 11, %3 ], [ 12, %8 ], [ 3, %30 ], [ 10, %37 ], [ 1, %74 ], [ 13, %78 ], [ 13, %80 ], [ 13, %93 ], [ 13, %101 ], [ 13, %110 ], [ 13, %124 ], [ 13, %130 ], [ 13, %136 ], [ 13, %154 ], [ 13, %160 ], [ 13, %162 ], [ %29, %24 ], [ 13, %175 ], !dbg !10036
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #19, !dbg !10268
  ret i32 %220, !dbg !10268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i8 @check_fs(%struct.FATFS* noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !10269 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !10273, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i32 %1, metadata !10274, metadata !DIExpression()), !dbg !10275
  %3 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 3, !dbg !10276
  store i8 0, i8* %3, align 1, !dbg !10277
  %4 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 17, !dbg !10278
  store i32 -1, i32* %4, align 4, !dbg !10279
  %5 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %0, i32 noundef %1) #22, !dbg !10280
  %6 = icmp eq i32 %5, 0, !dbg !10282
  br i1 %6, label %7, label %28, !dbg !10283

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 510, !dbg !10284
  %9 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %8) #22, !dbg !10286
  %10 = icmp eq i16 %9, -21931, !dbg !10287
  br i1 %10, label %11, label %28, !dbg !10288

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 0, !dbg !10289
  %13 = load i8, i8* %12, align 4, !dbg !10290
  switch i8 %13, label %27 [
    i8 -23, label %18
    i8 -21, label %14
  ], !dbg !10292

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 2, !dbg !10293
  %16 = load i8, i8* %15, align 2, !dbg !10293
  %17 = icmp eq i8 %16, -112, !dbg !10294
  br i1 %17, label %18, label %27, !dbg !10295

18:                                               ; preds = %11, %14
  %19 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 54, !dbg !10296
  %20 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %19) #22, !dbg !10299
  %21 = and i32 %20, 16777215, !dbg !10300
  %22 = icmp eq i32 %21, 5521734, !dbg !10301
  br i1 %22, label %28, label %23, !dbg !10302

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 82, !dbg !10303
  %25 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %24) #22, !dbg !10305
  %26 = icmp eq i32 %25, 861159750, !dbg !10306
  br i1 %26, label %28, label %27, !dbg !10307

27:                                               ; preds = %11, %23, %14
  br label %28, !dbg !10308

28:                                               ; preds = %23, %18, %7, %2, %27
  %29 = phi i8 [ 2, %27 ], [ 4, %2 ], [ 3, %7 ], [ 0, %18 ], [ 0, %23 ], !dbg !10275
  ret i8 %29, !dbg !10309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @ld_dword(i8* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10310 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10314, metadata !DIExpression()), !dbg !10316
  %2 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !10317
  %3 = load i8, i8* %2, align 1, !dbg !10317
  %4 = zext i8 %3 to i32, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %4, metadata !10315, metadata !DIExpression()), !dbg !10316
  %5 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !10318
  %6 = load i8, i8* %5, align 1, !dbg !10318
  %7 = zext i8 %6 to i32, !dbg !10318
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i32 %7), metadata !10315, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !10316
  %8 = shl nuw nsw i32 %4, 16, !dbg !10319
  %9 = shl nuw nsw i32 %7, 8, !dbg !10319
  %10 = or i32 %9, %8, !dbg !10319
  %11 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !10320
  %12 = load i8, i8* %11, align 1, !dbg !10320
  %13 = zext i8 %12 to i32, !dbg !10320
  %14 = or i32 %10, %13, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %14, metadata !10315, metadata !DIExpression()), !dbg !10316
  %15 = shl nuw i32 %14, 8, !dbg !10322
  %16 = load i8, i8* %0, align 1, !dbg !10323
  %17 = zext i8 %16 to i32, !dbg !10323
  %18 = or i32 %15, %17, !dbg !10324
  call void @llvm.dbg.value(metadata i32 %18, metadata !10315, metadata !DIExpression()), !dbg !10316
  ret i32 %18, !dbg !10325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i16 @ld_word(i8* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10330, metadata !DIExpression()), !dbg !10332
  %2 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !10333
  %3 = load i8, i8* %2, align 1, !dbg !10333
  %4 = zext i8 %3 to i16, !dbg !10334
  call void @llvm.dbg.value(metadata i8 %3, metadata !10331, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10332
  %5 = shl nuw i16 %4, 8, !dbg !10335
  %6 = load i8, i8* %0, align 1, !dbg !10336
  %7 = zext i8 %6 to i16, !dbg !10336
  %8 = or i16 %5, %7, !dbg !10337
  call void @llvm.dbg.value(metadata i16 %8, metadata !10331, metadata !DIExpression()), !dbg !10332
  ret i16 %8, !dbg !10338
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.ctpop.i8(i8) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @move_window(%struct.FATFS* noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !10339 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !10343, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10345, metadata !DIExpression()), !dbg !10346
  %3 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 17, !dbg !10347
  %4 = load i32, i32* %3, align 4, !dbg !10347
  %5 = icmp eq i32 %4, %1, !dbg !10349
  br i1 %5, label %18, label %6, !dbg !10350

6:                                                ; preds = %2
  %7 = tail call fastcc i32 @sync_window(%struct.FATFS* noundef nonnull %0) #22, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %7, metadata !10345, metadata !DIExpression()), !dbg !10346
  %8 = icmp eq i32 %7, 0, !dbg !10353
  br i1 %8, label %9, label %18, !dbg !10355

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 1, !dbg !10356
  %11 = load i8, i8* %10, align 1, !dbg !10356
  %12 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 0, !dbg !10359
  %13 = tail call i32 @disk_read(i8 noundef zeroext %11, i8* noundef nonnull %12, i32 noundef %1, i32 noundef 1) #20, !dbg !10360
  %14 = icmp eq i32 %13, 0, !dbg !10361
  %15 = select i1 %14, i32 %1, i32 -1, !dbg !10362
  %16 = xor i1 %14, true, !dbg !10362
  %17 = zext i1 %16 to i32, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %17, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %15, metadata !10344, metadata !DIExpression()), !dbg !10346
  store i32 %15, i32* %3, align 4, !dbg !10363
  br label %18, !dbg !10364

18:                                               ; preds = %6, %9, %2
  %19 = phi i32 [ %17, %9 ], [ %7, %6 ], [ 0, %2 ], !dbg !10346
  call void @llvm.dbg.value(metadata i32 %19, metadata !10345, metadata !DIExpression()), !dbg !10346
  ret i32 %19, !dbg !10365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @sync_window(%struct.FATFS* noundef %0) unnamed_addr #0 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !10370, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32 0, metadata !10373, metadata !DIExpression()), !dbg !10374
  %2 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 3, !dbg !10375
  %3 = load i8, i8* %2, align 1, !dbg !10375
  %4 = icmp eq i8 %3, 0, !dbg !10377
  br i1 %4, label %40, label %5, !dbg !10378

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 17, !dbg !10379
  %7 = load i32, i32* %6, align 4, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %7, metadata !10371, metadata !DIExpression()), !dbg !10374
  %8 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 1, !dbg !10381
  %9 = load i8, i8* %8, align 1, !dbg !10381
  %10 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 0, !dbg !10383
  %11 = tail call i32 @disk_write(i8 noundef zeroext %9, i8* noundef nonnull %10, i32 noundef %7, i32 noundef 1) #20, !dbg !10384
  %12 = icmp eq i32 %11, 0, !dbg !10385
  br i1 %12, label %13, label %40, !dbg !10386

13:                                               ; preds = %5
  store i8 0, i8* %2, align 1, !dbg !10387
  %14 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 14, !dbg !10389
  %15 = load i32, i32* %14, align 4, !dbg !10389
  %16 = sub i32 %7, %15, !dbg !10391
  %17 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 12, !dbg !10392
  %18 = load i32, i32* %17, align 4, !dbg !10392
  %19 = icmp ult i32 %16, %18, !dbg !10393
  br i1 %19, label %20, label %40, !dbg !10394

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 2, !dbg !10395
  %22 = load i8, i8* %21, align 2, !dbg !10395
  call void @llvm.dbg.value(metadata i8 %22, metadata !10372, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10374
  call void @llvm.dbg.value(metadata i32 %7, metadata !10371, metadata !DIExpression()), !dbg !10374
  %23 = icmp ugt i8 %22, 1, !dbg !10398
  br i1 %23, label %24, label %40, !dbg !10400

24:                                               ; preds = %20
  %25 = zext i8 %22 to i32, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %25, metadata !10372, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32 %7, metadata !10371, metadata !DIExpression()), !dbg !10374
  %26 = add i32 %18, %7, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %26, metadata !10371, metadata !DIExpression()), !dbg !10374
  %27 = load i8, i8* %8, align 1, !dbg !10404
  %28 = tail call i32 @disk_write(i8 noundef zeroext %27, i8* noundef nonnull %10, i32 noundef %26, i32 noundef 1) #20, !dbg !10405
  %29 = add nsw i32 %25, -1, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %29, metadata !10372, metadata !DIExpression()), !dbg !10374
  %30 = icmp ugt i32 %29, 1, !dbg !10398
  br i1 %30, label %31, label %40, !dbg !10400, !llvm.loop !10407

31:                                               ; preds = %24, %31
  %32 = phi i32 [ %38, %31 ], [ %29, %24 ]
  %33 = phi i32 [ %35, %31 ], [ %26, %24 ]
  %34 = load i32, i32* %17, align 4, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %32, metadata !10372, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32 %33, metadata !10371, metadata !DIExpression()), !dbg !10374
  %35 = add i32 %34, %33, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %35, metadata !10371, metadata !DIExpression()), !dbg !10374
  %36 = load i8, i8* %8, align 1, !dbg !10404
  %37 = tail call i32 @disk_write(i8 noundef zeroext %36, i8* noundef nonnull %10, i32 noundef %35, i32 noundef 1) #20, !dbg !10405
  %38 = add i32 %32, -1, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %38, metadata !10372, metadata !DIExpression()), !dbg !10374
  %39 = icmp ugt i32 %38, 1, !dbg !10398
  br i1 %39, label %31, label %40, !dbg !10400, !llvm.loop !10407

40:                                               ; preds = %31, %24, %20, %5, %13, %1
  %41 = phi i32 [ 0, %13 ], [ 0, %1 ], [ 1, %5 ], [ 0, %20 ], [ 0, %24 ], [ 0, %31 ], !dbg !10374
  call void @llvm.dbg.value(metadata i32 %41, metadata !10373, metadata !DIExpression()), !dbg !10374
  ret i32 %41, !dbg !10410
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_open(%struct.FIL* noundef %0, i8* noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !10411 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.DIR, align 4
  %6 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !10429, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i8* %1, metadata !10430, metadata !DIExpression()), !dbg !10441
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.value(metadata i8 %2, metadata !10431, metadata !DIExpression()), !dbg !10441
  %7 = bitcast %struct.DIR* %5 to i8*, !dbg !10442
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #19, !dbg !10442
  call void @llvm.dbg.declare(metadata %struct.DIR* %5, metadata !10433, metadata !DIExpression()), !dbg !10443
  %8 = bitcast %struct.FATFS** %6 to i8*, !dbg !10444
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !10444
  %9 = icmp eq %struct.FIL* %0, null, !dbg !10445
  br i1 %9, label %155, label %10, !dbg !10447

10:                                               ; preds = %3
  %11 = and i8 %2, 63, !dbg !10448
  call void @llvm.dbg.value(metadata i8 %11, metadata !10431, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i8** %4, metadata !10430, metadata !DIExpression(DW_OP_deref)), !dbg !10441
  call void @llvm.dbg.value(metadata %struct.FATFS** %6, metadata !10434, metadata !DIExpression(DW_OP_deref)), !dbg !10441
  %12 = call fastcc i32 @find_volume(i8** noundef nonnull %4, %struct.FATFS** noundef nonnull %6, i8 noundef zeroext %11) #22, !dbg !10449
  call void @llvm.dbg.value(metadata i32 %12, metadata !10432, metadata !DIExpression()), !dbg !10441
  %13 = icmp eq i32 %12, 0, !dbg !10450
  br i1 %13, label %14, label %152, !dbg !10452

14:                                               ; preds = %10
  %15 = load %struct.FATFS*, %struct.FATFS** %6, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %16 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, !dbg !10455
  %17 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 0, !dbg !10456
  store %struct.FATFS* %15, %struct.FATFS** %17, align 4, !dbg !10457
  %18 = load i8*, i8** %4, align 4, !dbg !10458
  call void @llvm.dbg.value(metadata i8* %18, metadata !10430, metadata !DIExpression()), !dbg !10441
  %19 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %5, i8* noundef %18) #22, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %19, metadata !10432, metadata !DIExpression()), !dbg !10441
  %20 = icmp eq i32 %19, 0, !dbg !10460
  %21 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 5, i32 11, !dbg !10462
  %22 = load i8, i8* %21, align 1, !dbg !10462
  %23 = icmp sgt i8 %22, -1, !dbg !10462
  %24 = select i1 %23, i32 0, i32 6, !dbg !10462
  %25 = select i1 %20, i32 %24, i32 %19, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %25, metadata !10432, metadata !DIExpression()), !dbg !10441
  %26 = zext i8 %11 to i32, !dbg !10463
  %27 = and i32 %26, 28, !dbg !10465
  %28 = icmp eq i32 %27, 0, !dbg !10465
  br i1 %28, label %63, label %29, !dbg !10466

29:                                               ; preds = %14
  switch i32 %25, label %40 [
    i32 0, label %32
    i32 4, label %30
  ], !dbg !10467

30:                                               ; preds = %29
  %31 = call fastcc i32 @dir_register(%struct.DIR* noundef nonnull %5) #22, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %31, metadata !10432, metadata !DIExpression()), !dbg !10441
  br label %40, !dbg !10473

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 2, !dbg !10474
  %34 = load i8, i8* %33, align 2, !dbg !10474
  %35 = and i8 %34, 17, !dbg !10477
  %36 = icmp eq i8 %35, 0, !dbg !10477
  br i1 %36, label %37, label %152, !dbg !10478

37:                                               ; preds = %32
  %38 = and i32 %26, 4, !dbg !10479
  %39 = icmp eq i32 %38, 0, !dbg !10479
  br i1 %39, label %44, label %152, !dbg !10482

40:                                               ; preds = %30, %29
  %41 = phi i32 [ %31, %30 ], [ %25, %29 ], !dbg !10483
  call void @llvm.dbg.value(metadata i32 %41, metadata !10432, metadata !DIExpression()), !dbg !10441
  %42 = or i8 %11, 8, !dbg !10484
  call void @llvm.dbg.value(metadata i8 %42, metadata !10431, metadata !DIExpression()), !dbg !10441
  %43 = icmp eq i32 %41, 0, !dbg !10485
  br i1 %43, label %44, label %152, !dbg !10487

44:                                               ; preds = %37, %40
  %45 = phi i8 [ %42, %40 ], [ %11, %37 ]
  %46 = and i8 %45, 8, !dbg !10488
  %47 = icmp eq i8 %46, 0, !dbg !10488
  br i1 %47, label %82, label %48, !dbg !10489

48:                                               ; preds = %44
  call void @llvm.dbg.value(metadata i32 1212219392, metadata !10435, metadata !DIExpression()), !dbg !10441
  %49 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 4, !dbg !10490
  %50 = load i8*, i8** %49, align 4, !dbg !10490
  %51 = getelementptr inbounds i8, i8* %50, i32 14, !dbg !10493
  tail call fastcc void @st_dword(i8* noundef nonnull %51, i32 noundef 1212219392) #22, !dbg !10494
  %52 = getelementptr inbounds i8, i8* %50, i32 22, !dbg !10495
  tail call fastcc void @st_dword(i8* noundef nonnull %52, i32 noundef 1212219392) #22, !dbg !10496
  %53 = getelementptr inbounds i8, i8* %50, i32 11, !dbg !10497
  store i8 32, i8* %53, align 1, !dbg !10498
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %54 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %15, i8* noundef %50) #22, !dbg !10499
  call void @llvm.dbg.value(metadata i32 %54, metadata !10436, metadata !DIExpression()), !dbg !10441
  tail call fastcc void @st_clust(%struct.FATFS* noundef %15, i8* noundef %50, i32 noundef 0) #22, !dbg !10500
  %55 = getelementptr inbounds i8, i8* %50, i32 28, !dbg !10501
  tail call fastcc void @st_dword(i8* noundef nonnull %55, i32 noundef 0) #22, !dbg !10502
  %56 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 3, !dbg !10503
  store i8 1, i8* %56, align 1, !dbg !10504
  %57 = icmp eq i32 %54, 0, !dbg !10505
  br i1 %57, label %82, label %58, !dbg !10507

58:                                               ; preds = %48
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %59 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 17, !dbg !10508
  %60 = load i32, i32* %59, align 4, !dbg !10508
  call void @llvm.dbg.value(metadata i32 %60, metadata !10435, metadata !DIExpression()), !dbg !10441
  %61 = call fastcc i32 @remove_chain(%struct._FDID* noundef nonnull %16, i32 noundef %54, i32 noundef 0) #22, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %61, metadata !10432, metadata !DIExpression()), !dbg !10441
  %62 = icmp eq i32 %61, 0, !dbg !10511
  br i1 %62, label %77, label %152, !dbg !10513

63:                                               ; preds = %14
  %64 = icmp eq i32 %25, 0, !dbg !10514
  br i1 %64, label %65, label %152, !dbg !10517

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 2, !dbg !10518
  %67 = load i8, i8* %66, align 2, !dbg !10518
  %68 = zext i8 %67 to i32, !dbg !10521
  %69 = and i32 %68, 16, !dbg !10522
  %70 = icmp eq i32 %69, 0, !dbg !10522
  br i1 %70, label %71, label %152, !dbg !10523

71:                                               ; preds = %65
  %72 = and i32 %26, 2, !dbg !10524
  %73 = icmp eq i32 %72, 0, !dbg !10524
  %74 = and i32 %68, 1
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %73, i1 true, i1 %75, !dbg !10527
  br i1 %76, label %82, label %152, !dbg !10527

77:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %78 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %15, i32 noundef %60) #22, !dbg !10528
  call void @llvm.dbg.value(metadata i32 %78, metadata !10432, metadata !DIExpression()), !dbg !10441
  %79 = add i32 %54, -1, !dbg !10530
  %80 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 8, !dbg !10531
  store i32 %79, i32* %80, align 4, !dbg !10532
  call void @llvm.dbg.value(metadata i8 %45, metadata !10431, metadata !DIExpression()), !dbg !10441
  %81 = icmp eq i32 %78, 0, !dbg !10533
  br i1 %81, label %82, label %152, !dbg !10535

82:                                               ; preds = %71, %44, %48, %77
  %83 = phi i8 [ %45, %77 ], [ %45, %44 ], [ %45, %48 ], [ %11, %71 ]
  %84 = shl i8 %83, 3, !dbg !10536
  %85 = and i8 %84, 64, !dbg !10536
  %86 = or i8 %85, %83, !dbg !10536
  call void @llvm.dbg.value(metadata !DIArgList(i8 %85, i8 %83), metadata !10431, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !10441
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %87 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 17, !dbg !10538
  %88 = load i32, i32* %87, align 4, !dbg !10538
  %89 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 6, !dbg !10539
  store i32 %88, i32* %89, align 4, !dbg !10540
  %90 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 4, !dbg !10541
  %91 = load i8*, i8** %90, align 4, !dbg !10541
  %92 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 7, !dbg !10542
  store i8* %91, i8** %92, align 4, !dbg !10543
  call void @llvm.dbg.value(metadata i8 undef, metadata !10431, metadata !DIExpression()), !dbg !10441
  %93 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %15, i8* noundef %91) #22, !dbg !10544
  %94 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !10548
  %95 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4, !dbg !10549
  store i32 %93, i32* %95, align 4, !dbg !10550
  %96 = getelementptr inbounds i8, i8* %91, i32 28, !dbg !10551
  %97 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %96) #22, !dbg !10552
  %98 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5, !dbg !10553
  store i32 %97, i32* %98, align 4, !dbg !10554
  %99 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 8, !dbg !10555
  store i32* null, i32** %99, align 4, !dbg !10556
  %100 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 0, !dbg !10557
  store %struct.FATFS* %15, %struct.FATFS** %100, align 4, !dbg !10558
  %101 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 5, !dbg !10559
  %102 = load i16, i16* %101, align 2, !dbg !10559
  %103 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 1, !dbg !10560
  store i16 %102, i16* %103, align 4, !dbg !10561
  %104 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !10562
  store i8 %86, i8* %104, align 4, !dbg !10563
  %105 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 2, !dbg !10564
  store i8 0, i8* %105, align 1, !dbg !10565
  %106 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 5, !dbg !10566
  store i32 0, i32* %106, align 4, !dbg !10567
  %107 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 3, !dbg !10568
  store i32 0, i32* %107, align 4, !dbg !10569
  %108 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0, !dbg !10570
  tail call fastcc void @mem_set(i8* noundef nonnull %108, i32 noundef 0, i32 noundef 512) #22, !dbg !10571
  %109 = and i8 %83, 32, !dbg !10572
  %110 = icmp eq i8 %109, 0, !dbg !10572
  br i1 %110, label %155, label %111, !dbg !10574

111:                                              ; preds = %82
  %112 = load i32, i32* %98, align 4, !dbg !10575
  %113 = icmp eq i32 %112, 0, !dbg !10576
  br i1 %113, label %155, label %114, !dbg !10577

114:                                              ; preds = %111
  store i32 %112, i32* %107, align 4, !dbg !10578
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %115 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 7, !dbg !10580
  %116 = load i16, i16* %115, align 2, !dbg !10580
  %117 = zext i16 %116 to i32, !dbg !10581
  %118 = shl nuw nsw i32 %117, 9, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %118, metadata !10437, metadata !DIExpression()), !dbg !10441
  %119 = load i32, i32* %95, align 4, !dbg !10583
  call void @llvm.dbg.value(metadata i32 %119, metadata !10438, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %112, metadata !10440, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 0, metadata !10432, metadata !DIExpression()), !dbg !10441
  %120 = icmp ugt i32 %112, %118, !dbg !10584
  br i1 %120, label %123, label %121, !dbg !10587

121:                                              ; preds = %114
  %122 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4, !dbg !10588
  store i32 %119, i32* %122, align 4, !dbg !10589
  br label %137, !dbg !10590

123:                                              ; preds = %114, %123
  %124 = phi i32 [ %131, %123 ], [ %112, %114 ]
  %125 = phi i32 [ %126, %123 ], [ %119, %114 ]
  call void @llvm.dbg.value(metadata i32 %124, metadata !10440, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %125, metadata !10438, metadata !DIExpression()), !dbg !10441
  %126 = tail call fastcc i32 @get_fat(%struct._FDID* noundef nonnull %94, i32 noundef %125) #22, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %126, metadata !10438, metadata !DIExpression()), !dbg !10441
  %127 = icmp ult i32 %126, 2, !dbg !10594
  %128 = select i1 %127, i32 2, i32 0, !dbg !10596
  call void @llvm.dbg.value(metadata i32 %128, metadata !10432, metadata !DIExpression()), !dbg !10441
  %129 = icmp eq i32 %126, -1, !dbg !10597
  %130 = select i1 %129, i32 1, i32 %128, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %130, metadata !10432, metadata !DIExpression()), !dbg !10441
  %131 = sub i32 %124, %118, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %131, metadata !10440, metadata !DIExpression()), !dbg !10441
  %132 = icmp eq i32 %130, 0, !dbg !10601
  %133 = icmp ugt i32 %131, %118, !dbg !10584
  %134 = select i1 %132, i1 %133, i1 false, !dbg !10584
  br i1 %134, label %123, label %135, !dbg !10587, !llvm.loop !10602

135:                                              ; preds = %123
  %136 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4, !dbg !10588
  store i32 %126, i32* %136, align 4, !dbg !10589
  br i1 %132, label %137, label %152, !dbg !10590

137:                                              ; preds = %121, %135
  %138 = phi i32 [ %112, %121 ], [ %131, %135 ]
  %139 = phi i32 [ %119, %121 ], [ %126, %135 ]
  %140 = and i32 %138, 511, !dbg !10604
  %141 = icmp eq i32 %140, 0, !dbg !10604
  br i1 %141, label %155, label %142, !dbg !10605

142:                                              ; preds = %137
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %143 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef %15, i32 noundef %139) #22, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %143, metadata !10439, metadata !DIExpression()), !dbg !10441
  %144 = icmp eq i32 %143, 0, !dbg !10609
  br i1 %144, label %152, label %145, !dbg !10610

145:                                              ; preds = %142
  %146 = lshr i32 %138, 9, !dbg !10611
  %147 = add i32 %143, %146, !dbg !10613
  store i32 %147, i32* %106, align 4, !dbg !10614
  call void @llvm.dbg.value(metadata %struct.FATFS* %15, metadata !10434, metadata !DIExpression()), !dbg !10441
  %148 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 1, !dbg !10615
  %149 = load i8, i8* %148, align 1, !dbg !10615
  %150 = tail call i32 @disk_read(i8 noundef zeroext %149, i8* noundef nonnull %108, i32 noundef %147, i32 noundef 1) #20, !dbg !10617
  %151 = icmp eq i32 %150, 0, !dbg !10618
  br i1 %151, label %155, label %152, !dbg !10619

152:                                              ; preds = %77, %37, %32, %135, %10, %142, %145, %71, %65, %63, %40, %58
  %153 = phi i32 [ %61, %58 ], [ %41, %40 ], [ %25, %63 ], [ 4, %65 ], [ 7, %71 ], [ 1, %145 ], [ 2, %142 ], [ %12, %10 ], [ %130, %135 ], [ 8, %37 ], [ 7, %32 ], [ %78, %77 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10432, metadata !DIExpression()), !dbg !10441
  %154 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 0, !dbg !10620
  store %struct.FATFS* null, %struct.FATFS** %154, align 4, !dbg !10622
  br label %155, !dbg !10623

155:                                              ; preds = %145, %82, %111, %137, %152, %3
  %156 = phi i32 [ 9, %3 ], [ %153, %152 ], [ 0, %137 ], [ 0, %111 ], [ 0, %82 ], [ 0, %145 ], !dbg !10441
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !10624
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #19, !dbg !10624
  ret i32 %156, !dbg !10624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @follow_path(%struct.DIR* nocapture noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !10625 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !10630, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8* %1, metadata !10631, metadata !DIExpression()), !dbg !10637
  store i8* %1, i8** %3, align 4
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !10634, metadata !DIExpression()), !dbg !10637
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !10638
  %5 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !10638
  call void @llvm.dbg.value(metadata %struct.FATFS* %5, metadata !10636, metadata !DIExpression()), !dbg !10637
  %6 = load i8, i8* %1, align 1, !dbg !10639
  switch i8 %6, label %8 [
    i8 47, label %7
    i8 92, label %7
  ], !dbg !10641

7:                                                ; preds = %2, %2
  br label %11, !dbg !10642

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 10, !dbg !10644
  %10 = load i32, i32* %9, align 4, !dbg !10644
  br label %18, !dbg !10646

11:                                               ; preds = %7, %14
  %12 = phi i8 [ %16, %14 ], [ %6, %7 ], !dbg !10647
  %13 = phi i8* [ %15, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !10631, metadata !DIExpression()), !dbg !10637
  switch i8 %12, label %17 [
    i8 47, label %14
    i8 92, label %14
  ], !dbg !10648

14:                                               ; preds = %11, %11
  call void @llvm.dbg.value(metadata i8* %13, metadata !10631, metadata !DIExpression()), !dbg !10637
  %15 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !10649
  call void @llvm.dbg.value(metadata i8* %15, metadata !10631, metadata !DIExpression()), !dbg !10637
  %16 = load i8, i8* %15, align 1, !dbg !10647
  br label %11, !dbg !10642, !llvm.loop !10650

17:                                               ; preds = %11
  store i8* %13, i8** %3, align 4, !dbg !10651
  br label %18

18:                                               ; preds = %17, %8
  %19 = phi i32 [ 0, %17 ], [ %10, %8 ]
  %20 = phi i8* [ %13, %17 ], [ %1, %8 ], !dbg !10652
  %21 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 4, !dbg !10654
  store i32 %19, i32* %21, align 4, !dbg !10654
  call void @llvm.dbg.value(metadata i8* %20, metadata !10631, metadata !DIExpression()), !dbg !10637
  %22 = load i8, i8* %20, align 1, !dbg !10655
  %23 = icmp ult i8 %22, 32, !dbg !10656
  br i1 %23, label %32, label %24, !dbg !10657

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8** %3, metadata !10631, metadata !DIExpression(DW_OP_deref)), !dbg !10637
  %25 = call fastcc i32 @create_name(%struct.DIR* noundef nonnull %0, i8** noundef nonnull %3) #22, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %25, metadata !10632, metadata !DIExpression()), !dbg !10637
  %26 = icmp eq i32 %25, 0, !dbg !10663
  br i1 %26, label %27, label %65, !dbg !10665

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 11
  %29 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 1
  %31 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 4
  br label %35, !dbg !10665

32:                                               ; preds = %18
  %33 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 11, !dbg !10666
  store i8 -128, i8* %33, align 1, !dbg !10668
  %34 = tail call fastcc i32 @dir_sdi(%struct.DIR* noundef nonnull %0, i32 noundef 0) #22, !dbg !10669
  call void @llvm.dbg.value(metadata i32 %34, metadata !10632, metadata !DIExpression()), !dbg !10637
  br label %65, !dbg !10670

35:                                               ; preds = %27, %62
  %36 = tail call fastcc i32 @dir_find(%struct.DIR* noundef nonnull %0) #22, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %36, metadata !10632, metadata !DIExpression()), !dbg !10637
  %37 = load i8, i8* %28, align 1, !dbg !10672
  call void @llvm.dbg.value(metadata i8 %37, metadata !10633, metadata !DIExpression()), !dbg !10637
  switch i32 %36, label %65 [
    i32 0, label %50
    i32 4, label %38
  ], !dbg !10673

38:                                               ; preds = %35
  %39 = zext i8 %37 to i32, !dbg !10674
  %40 = and i32 %39, 32, !dbg !10680
  %41 = icmp eq i32 %40, 0, !dbg !10680
  br i1 %41, label %46, label %42, !dbg !10681

42:                                               ; preds = %38
  %43 = and i32 %39, 4, !dbg !10682
  %44 = icmp eq i32 %43, 0, !dbg !10682
  br i1 %44, label %62, label %45, !dbg !10685

45:                                               ; preds = %42
  store i8 -128, i8* %28, align 1, !dbg !10686
  call void @llvm.dbg.value(metadata i32 0, metadata !10632, metadata !DIExpression()), !dbg !10637
  br label %65, !dbg !10687

46:                                               ; preds = %38
  %47 = and i8 %37, 4, !dbg !10688
  %48 = icmp eq i8 %47, 0, !dbg !10688
  %49 = select i1 %48, i32 5, i32 4, !dbg !10691
  br label %65, !dbg !10691

50:                                               ; preds = %35
  %51 = and i8 %37, 4, !dbg !10692
  %52 = icmp eq i8 %51, 0, !dbg !10692
  br i1 %52, label %53, label %65, !dbg !10694

53:                                               ; preds = %50
  %54 = load i8, i8* %29, align 2, !dbg !10695
  %55 = and i8 %54, 16, !dbg !10697
  %56 = icmp eq i8 %55, 0, !dbg !10697
  br i1 %56, label %65, label %57, !dbg !10698

57:                                               ; preds = %53
  %58 = load i32, i32* %30, align 4, !dbg !10699
  %59 = and i32 %58, 511, !dbg !10701
  %60 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 18, i32 %59, !dbg !10702
  %61 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %5, i8* noundef nonnull %60) #22, !dbg !10703
  store i32 %61, i32* %31, align 4, !dbg !10704
  br label %62, !dbg !10705

62:                                               ; preds = %57, %42
  call void @llvm.dbg.value(metadata i8** %3, metadata !10631, metadata !DIExpression(DW_OP_deref)), !dbg !10637
  %63 = call fastcc i32 @create_name(%struct.DIR* noundef nonnull %0, i8** noundef nonnull %3) #22, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %63, metadata !10632, metadata !DIExpression()), !dbg !10637
  %64 = icmp eq i32 %63, 0, !dbg !10663
  br i1 %64, label %35, label %65, !dbg !10665, !llvm.loop !10706

65:                                               ; preds = %50, %62, %35, %53, %24, %46, %45, %32
  %66 = phi i32 [ %34, %32 ], [ 0, %45 ], [ %49, %46 ], [ %25, %24 ], [ 0, %50 ], [ %63, %62 ], [ %36, %35 ], [ 5, %53 ], !dbg !10709
  call void @llvm.dbg.value(metadata i32 %66, metadata !10632, metadata !DIExpression()), !dbg !10637
  ret i32 %66, !dbg !10710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @dir_register(%struct.DIR* nocapture noundef %0) unnamed_addr #0 !dbg !10711 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !10715, metadata !DIExpression()), !dbg !10718
  %2 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !10719
  %3 = load %struct.FATFS*, %struct.FATFS** %2, align 4, !dbg !10719
  call void @llvm.dbg.value(metadata %struct.FATFS* %3, metadata !10717, metadata !DIExpression()), !dbg !10718
  %4 = tail call fastcc i32 @dir_alloc(%struct.DIR* noundef %0) #22, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %4, metadata !10716, metadata !DIExpression()), !dbg !10718
  %5 = icmp eq i32 %4, 0, !dbg !10721
  br i1 %5, label %6, label %17, !dbg !10723

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3, !dbg !10724
  %8 = load i32, i32* %7, align 4, !dbg !10724
  %9 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %3, i32 noundef %8) #22, !dbg !10726
  call void @llvm.dbg.value(metadata i32 %9, metadata !10716, metadata !DIExpression()), !dbg !10718
  %10 = icmp eq i32 %9, 0, !dbg !10727
  br i1 %10, label %11, label %17, !dbg !10729

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4, !dbg !10730
  %13 = load i8*, i8** %12, align 4, !dbg !10730
  tail call fastcc void @mem_set(i8* noundef %13, i32 noundef 0, i32 noundef 32) #22, !dbg !10732
  %14 = load i8*, i8** %12, align 4, !dbg !10733
  %15 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 0, !dbg !10734
  tail call fastcc void @mem_cpy(i8* noundef %14, i8* noundef nonnull %15, i32 noundef 11) #22, !dbg !10735
  %16 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %3, i32 0, i32 3, !dbg !10736
  store i8 1, i8* %16, align 1, !dbg !10737
  br label %17, !dbg !10738

17:                                               ; preds = %6, %11, %1
  %18 = phi i32 [ 0, %11 ], [ %9, %6 ], [ %4, %1 ], !dbg !10718
  call void @llvm.dbg.value(metadata i32 %18, metadata !10716, metadata !DIExpression()), !dbg !10718
  ret i32 %18, !dbg !10739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @st_dword(i8* nocapture noundef writeonly %0, i32 noundef %1) unnamed_addr #4 !dbg !10740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10744, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.value(metadata i32 %1, metadata !10745, metadata !DIExpression()), !dbg !10746
  %3 = trunc i32 %1 to i8, !dbg !10747
  %4 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !10748
  call void @llvm.dbg.value(metadata i8* %4, metadata !10744, metadata !DIExpression()), !dbg !10746
  store i8 %3, i8* %0, align 1, !dbg !10749
  %5 = lshr i32 %1, 8, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %5, metadata !10745, metadata !DIExpression()), !dbg !10746
  %6 = trunc i32 %5 to i8, !dbg !10751
  %7 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !10752
  call void @llvm.dbg.value(metadata i8* %7, metadata !10744, metadata !DIExpression()), !dbg !10746
  store i8 %6, i8* %4, align 1, !dbg !10753
  %8 = lshr i32 %1, 16, !dbg !10754
  call void @llvm.dbg.value(metadata i32 %8, metadata !10745, metadata !DIExpression()), !dbg !10746
  %9 = trunc i32 %8 to i8, !dbg !10755
  %10 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !10756
  call void @llvm.dbg.value(metadata i8* %10, metadata !10744, metadata !DIExpression()), !dbg !10746
  store i8 %9, i8* %7, align 1, !dbg !10757
  %11 = lshr i32 %1, 24, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %11, metadata !10745, metadata !DIExpression()), !dbg !10746
  %12 = trunc i32 %11 to i8, !dbg !10759
  call void @llvm.dbg.value(metadata i8* %10, metadata !10744, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10746
  store i8 %12, i8* %10, align 1, !dbg !10760
  ret void, !dbg !10761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @ld_clust(%struct.FATFS* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) unnamed_addr #9 !dbg !10762 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !10766, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i8* %1, metadata !10767, metadata !DIExpression()), !dbg !10769
  %3 = getelementptr inbounds i8, i8* %1, i32 26, !dbg !10770
  %4 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %3) #22, !dbg !10771
  %5 = zext i16 %4 to i32, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %5, metadata !10768, metadata !DIExpression()), !dbg !10769
  %6 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 0, !dbg !10772
  %7 = load i8, i8* %6, align 4, !dbg !10772
  %8 = icmp eq i8 %7, 3, !dbg !10774
  br i1 %8, label %9, label %15, !dbg !10775

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i32 20, !dbg !10776
  %11 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %10) #22, !dbg !10778
  %12 = zext i16 %11 to i32, !dbg !10779
  %13 = shl nuw i32 %12, 16, !dbg !10780
  %14 = or i32 %13, %5, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %14, metadata !10768, metadata !DIExpression()), !dbg !10769
  br label %15, !dbg !10782

15:                                               ; preds = %9, %2
  %16 = phi i32 [ %14, %9 ], [ %5, %2 ], !dbg !10769
  call void @llvm.dbg.value(metadata i32 %16, metadata !10768, metadata !DIExpression()), !dbg !10769
  ret i32 %16, !dbg !10783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @st_clust(%struct.FATFS* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !10784 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !10788, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i8* %1, metadata !10789, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i32 %2, metadata !10790, metadata !DIExpression()), !dbg !10791
  %4 = getelementptr inbounds i8, i8* %1, i32 26, !dbg !10792
  %5 = trunc i32 %2 to i16, !dbg !10793
  tail call fastcc void @st_word(i8* noundef nonnull %4, i16 noundef zeroext %5) #22, !dbg !10794
  %6 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 0, !dbg !10795
  %7 = load i8, i8* %6, align 4, !dbg !10795
  %8 = icmp eq i8 %7, 3, !dbg !10797
  br i1 %8, label %9, label %13, !dbg !10798

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %1, i32 20, !dbg !10799
  %11 = lshr i32 %2, 16, !dbg !10801
  %12 = trunc i32 %11 to i16, !dbg !10802
  tail call fastcc void @st_word(i8* noundef nonnull %10, i16 noundef zeroext %12) #22, !dbg !10803
  br label %13, !dbg !10804

13:                                               ; preds = %9, %3
  ret void, !dbg !10805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @remove_chain(%struct._FDID* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !10806 {
  call void @llvm.dbg.value(metadata %struct._FDID* %0, metadata !10810, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.value(metadata i32 %1, metadata !10811, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.value(metadata i32 %2, metadata !10812, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.value(metadata i32 0, metadata !10813, metadata !DIExpression()), !dbg !10816
  %4 = getelementptr inbounds %struct._FDID, %struct._FDID* %0, i32 0, i32 0, !dbg !10817
  %5 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !10817
  call void @llvm.dbg.value(metadata %struct.FATFS* %5, metadata !10815, metadata !DIExpression()), !dbg !10816
  %6 = icmp ult i32 %1, 2, !dbg !10818
  br i1 %6, label %39, label %7, !dbg !10820

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 11, !dbg !10821
  %9 = load i32, i32* %8, align 4, !dbg !10821
  %10 = icmp ugt i32 %9, %1, !dbg !10822
  br i1 %10, label %11, label %39, !dbg !10823

11:                                               ; preds = %7
  %12 = icmp eq i32 %2, 0, !dbg !10824
  br i1 %12, label %16, label %13, !dbg !10826

13:                                               ; preds = %11
  %14 = tail call fastcc i32 @put_fat(%struct.FATFS* noundef nonnull %5, i32 noundef %2, i32 noundef -1) #22, !dbg !10827
  call void @llvm.dbg.value(metadata i32 %14, metadata !10813, metadata !DIExpression()), !dbg !10816
  %15 = icmp eq i32 %14, 0, !dbg !10829
  br i1 %15, label %16, label %39, !dbg !10831

16:                                               ; preds = %13, %11
  %17 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 9
  %18 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 4
  br label %19, !dbg !10832

19:                                               ; preds = %34, %16
  %20 = phi i32 [ %1, %16 ], [ %21, %34 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !10811, metadata !DIExpression()), !dbg !10816
  %21 = tail call fastcc i32 @get_fat(%struct._FDID* noundef %0, i32 noundef %20) #22, !dbg !10833
  call void @llvm.dbg.value(metadata i32 %21, metadata !10814, metadata !DIExpression()), !dbg !10816
  switch i32 %21, label %22 [
    i32 0, label %39
    i32 1, label %36
    i32 -1, label %38
  ], !dbg !10835

22:                                               ; preds = %19
  %23 = tail call fastcc i32 @put_fat(%struct.FATFS* noundef nonnull %5, i32 noundef %20, i32 noundef 0) #22, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %23, metadata !10813, metadata !DIExpression()), !dbg !10816
  %24 = icmp eq i32 %23, 0, !dbg !10839
  br i1 %24, label %25, label %36, !dbg !10841

25:                                               ; preds = %22
  %26 = load i32, i32* %17, align 4, !dbg !10842
  %27 = load i32, i32* %8, align 4, !dbg !10844
  %28 = add i32 %27, -2, !dbg !10845
  %29 = icmp ult i32 %26, %28, !dbg !10846
  br i1 %29, label %30, label %34, !dbg !10847

30:                                               ; preds = %25
  %31 = add nuw i32 %26, 1, !dbg !10848
  store i32 %31, i32* %17, align 4, !dbg !10848
  %32 = load i8, i8* %18, align 4, !dbg !10850
  %33 = or i8 %32, 1, !dbg !10850
  store i8 %33, i8* %18, align 4, !dbg !10850
  br label %34, !dbg !10851

34:                                               ; preds = %30, %25
  call void @llvm.dbg.value(metadata i32 %21, metadata !10811, metadata !DIExpression()), !dbg !10816
  %35 = icmp ult i32 %21, %27, !dbg !10852
  br i1 %35, label %19, label %39, !dbg !10853, !llvm.loop !10854

36:                                               ; preds = %19, %22
  %37 = phi i32 [ 2, %19 ], [ %23, %22 ]
  br label %39, !dbg !10856

38:                                               ; preds = %19
  br label %39, !dbg !10856

39:                                               ; preds = %34, %19, %38, %36, %13, %3, %7
  %40 = phi i32 [ 2, %7 ], [ 2, %3 ], [ %14, %13 ], [ %37, %36 ], [ 1, %38 ], [ 0, %19 ], [ 0, %34 ], !dbg !10816
  ret i32 %40, !dbg !10856
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal fastcc void @mem_set(i8* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10861, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i32 %1, metadata !10862, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i32 %2, metadata !10863, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i8* %0, metadata !10864, metadata !DIExpression()), !dbg !10865
  %4 = trunc i32 %1 to i8
  br label %5, !dbg !10866

5:                                                ; preds = %5, %3
  %6 = phi i32 [ %2, %3 ], [ %9, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %8, %5 ], !dbg !10865
  call void @llvm.dbg.value(metadata i8* %7, metadata !10864, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i32 %6, metadata !10863, metadata !DIExpression()), !dbg !10865
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10867
  call void @llvm.dbg.value(metadata i8* %8, metadata !10864, metadata !DIExpression()), !dbg !10865
  store i8 %4, i8* %7, align 1, !dbg !10868
  %9 = add i32 %6, -1, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %9, metadata !10863, metadata !DIExpression()), !dbg !10865
  %10 = icmp eq i32 %9, 0, !dbg !10870
  br i1 %10, label %11, label %5, !dbg !10870, !llvm.loop !10871

11:                                               ; preds = %5
  ret void, !dbg !10873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_fat(%struct._FDID* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #0 !dbg !10874 {
  call void @llvm.dbg.value(metadata %struct._FDID* %0, metadata !10878, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i32 %1, metadata !10879, metadata !DIExpression()), !dbg !10884
  %3 = getelementptr inbounds %struct._FDID, %struct._FDID* %0, i32 0, i32 0, !dbg !10885
  %4 = load %struct.FATFS*, %struct.FATFS** %3, align 4, !dbg !10885
  call void @llvm.dbg.value(metadata %struct.FATFS* %4, metadata !10883, metadata !DIExpression()), !dbg !10884
  %5 = icmp ult i32 %1, 2, !dbg !10886
  br i1 %5, label %71, label %6, !dbg !10888

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 11, !dbg !10889
  %8 = load i32, i32* %7, align 4, !dbg !10889
  %9 = icmp ugt i32 %8, %1, !dbg !10890
  br i1 %9, label %10, label %71, !dbg !10891

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 -1, metadata !10882, metadata !DIExpression()), !dbg !10884
  %11 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 0, !dbg !10892
  %12 = load i8, i8* %11, align 4, !dbg !10892
  switch i8 %12, label %71 [
    i8 1, label %13
    i8 2, label %45
    i8 3, label %58
  ], !dbg !10894

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %1, metadata !10881, metadata !DIExpression()), !dbg !10884
  %14 = lshr i32 %1, 1, !dbg !10895
  %15 = add i32 %14, %1, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %15, metadata !10881, metadata !DIExpression()), !dbg !10884
  %16 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 14, !dbg !10898
  %17 = load i32, i32* %16, align 4, !dbg !10898
  %18 = lshr i32 %15, 9, !dbg !10900
  %19 = add i32 %17, %18, !dbg !10901
  %20 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %4, i32 noundef %19) #22, !dbg !10902
  %21 = icmp eq i32 %20, 0, !dbg !10903
  br i1 %21, label %22, label %71, !dbg !10904

22:                                               ; preds = %13
  %23 = add i32 %15, 1, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %23, metadata !10881, metadata !DIExpression()), !dbg !10884
  %24 = and i32 %15, 511, !dbg !10906
  %25 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 18, i32 %24, !dbg !10907
  %26 = load i8, i8* %25, align 1, !dbg !10907
  call void @llvm.dbg.value(metadata i8 %26, metadata !10880, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10884
  %27 = load i32, i32* %16, align 4, !dbg !10908
  %28 = lshr i32 %23, 9, !dbg !10910
  %29 = add i32 %27, %28, !dbg !10911
  %30 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %4, i32 noundef %29) #22, !dbg !10912
  %31 = icmp eq i32 %30, 0, !dbg !10913
  br i1 %31, label %32, label %71, !dbg !10914

32:                                               ; preds = %22
  %33 = zext i8 %26 to i32, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %33, metadata !10880, metadata !DIExpression()), !dbg !10884
  %34 = and i32 %23, 511, !dbg !10915
  %35 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 18, i32 %34, !dbg !10916
  %36 = load i8, i8* %35, align 1, !dbg !10916
  %37 = zext i8 %36 to i32, !dbg !10916
  %38 = shl nuw nsw i32 %37, 8, !dbg !10917
  %39 = or i32 %38, %33, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %39, metadata !10880, metadata !DIExpression()), !dbg !10884
  %40 = and i32 %1, 1, !dbg !10919
  %41 = icmp eq i32 %40, 0, !dbg !10919
  %42 = lshr i32 %39, 4, !dbg !10920
  %43 = and i32 %39, 4095, !dbg !10920
  %44 = select i1 %41, i32 %43, i32 %42, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %44, metadata !10882, metadata !DIExpression()), !dbg !10884
  br label %71, !dbg !10921

45:                                               ; preds = %10
  %46 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 14, !dbg !10922
  %47 = load i32, i32* %46, align 4, !dbg !10922
  %48 = lshr i32 %1, 8, !dbg !10924
  %49 = add i32 %47, %48, !dbg !10925
  %50 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %4, i32 noundef %49) #22, !dbg !10926
  %51 = icmp eq i32 %50, 0, !dbg !10927
  br i1 %51, label %52, label %71, !dbg !10928

52:                                               ; preds = %45
  %53 = shl i32 %1, 1, !dbg !10929
  %54 = and i32 %53, 510, !dbg !10930
  %55 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 18, i32 %54, !dbg !10931
  %56 = tail call fastcc zeroext i16 @ld_word(i8* noundef nonnull %55) #22, !dbg !10932
  %57 = zext i16 %56 to i32, !dbg !10932
  call void @llvm.dbg.value(metadata i32 %57, metadata !10882, metadata !DIExpression()), !dbg !10884
  br label %71, !dbg !10933

58:                                               ; preds = %10
  %59 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 14, !dbg !10934
  %60 = load i32, i32* %59, align 4, !dbg !10934
  %61 = lshr i32 %1, 7, !dbg !10936
  %62 = add i32 %60, %61, !dbg !10937
  %63 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %4, i32 noundef %62) #22, !dbg !10938
  %64 = icmp eq i32 %63, 0, !dbg !10939
  br i1 %64, label %65, label %71, !dbg !10940

65:                                               ; preds = %58
  %66 = shl i32 %1, 2, !dbg !10941
  %67 = and i32 %66, 508, !dbg !10942
  %68 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 18, i32 %67, !dbg !10943
  %69 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %68) #22, !dbg !10944
  %70 = and i32 %69, 268435455, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %70, metadata !10882, metadata !DIExpression()), !dbg !10884
  br label %71, !dbg !10946

71:                                               ; preds = %10, %2, %6, %32, %52, %65, %13, %22, %45, %58
  %72 = phi i32 [ -1, %58 ], [ %70, %65 ], [ -1, %45 ], [ %57, %52 ], [ -1, %13 ], [ -1, %22 ], [ %44, %32 ], [ 1, %6 ], [ 1, %2 ], [ 1, %10 ], !dbg !10947
  call void @llvm.dbg.value(metadata i32 %72, metadata !10882, metadata !DIExpression()), !dbg !10884
  ret i32 %72, !dbg !10948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @clust2sect(%struct.FATFS* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #9 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !10953, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %1, metadata !10954, metadata !DIExpression()), !dbg !10955
  %3 = add i32 %1, -2, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %3, metadata !10954, metadata !DIExpression()), !dbg !10955
  %4 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 11, !dbg !10957
  %5 = load i32, i32* %4, align 4, !dbg !10957
  %6 = add i32 %5, -2, !dbg !10959
  %7 = icmp ult i32 %3, %6, !dbg !10960
  br i1 %7, label %8, label %16, !dbg !10961

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 7, !dbg !10962
  %10 = load i16, i16* %9, align 2, !dbg !10962
  %11 = zext i16 %10 to i32, !dbg !10963
  %12 = mul i32 %3, %11, !dbg !10964
  %13 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 16, !dbg !10965
  %14 = load i32, i32* %13, align 4, !dbg !10965
  %15 = add i32 %12, %14, !dbg !10966
  br label %16, !dbg !10967

16:                                               ; preds = %2, %8
  %17 = phi i32 [ %15, %8 ], [ 0, %2 ], !dbg !10955
  ret i32 %17, !dbg !10968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @put_fat(%struct.FATFS* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !10969 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !10973, metadata !DIExpression()), !dbg !10979
  call void @llvm.dbg.value(metadata i32 %1, metadata !10974, metadata !DIExpression()), !dbg !10979
  call void @llvm.dbg.value(metadata i32 %2, metadata !10975, metadata !DIExpression()), !dbg !10979
  call void @llvm.dbg.value(metadata i32 2, metadata !10978, metadata !DIExpression()), !dbg !10979
  %4 = icmp ugt i32 %1, 1, !dbg !10980
  br i1 %4, label %5, label %92, !dbg !10982

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 11, !dbg !10983
  %7 = load i32, i32* %6, align 4, !dbg !10983
  %8 = icmp ugt i32 %7, %1, !dbg !10984
  br i1 %8, label %9, label %92, !dbg !10985

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 0, !dbg !10986
  %11 = load i8, i8* %10, align 4, !dbg !10986
  switch i8 %11, label %92 [
    i8 1, label %12
    i8 2, label %61
    i8 3, label %74
  ], !dbg !10988

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %1, metadata !10976, metadata !DIExpression()), !dbg !10979
  %13 = lshr i32 %1, 1, !dbg !10989
  %14 = add i32 %13, %1, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %14, metadata !10976, metadata !DIExpression()), !dbg !10979
  %15 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 14, !dbg !10992
  %16 = load i32, i32* %15, align 4, !dbg !10992
  %17 = lshr i32 %14, 9, !dbg !10993
  %18 = add i32 %16, %17, !dbg !10994
  %19 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %0, i32 noundef %18) #22, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %19, metadata !10978, metadata !DIExpression()), !dbg !10979
  %20 = icmp eq i32 %19, 0, !dbg !10996
  br i1 %20, label %21, label %92, !dbg !10998

21:                                               ; preds = %12
  %22 = add i32 %14, 1, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %22, metadata !10976, metadata !DIExpression()), !dbg !10979
  %23 = and i32 %14, 511, !dbg !11000
  %24 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 %23, !dbg !11001
  call void @llvm.dbg.value(metadata i8* %24, metadata !10977, metadata !DIExpression()), !dbg !10979
  %25 = and i32 %1, 1, !dbg !11002
  %26 = icmp eq i32 %25, 0, !dbg !11002
  br i1 %26, label %34, label %27, !dbg !11003

27:                                               ; preds = %21
  %28 = load i8, i8* %24, align 1, !dbg !11004
  %29 = and i8 %28, 15, !dbg !11005
  %30 = zext i8 %29 to i32, !dbg !11005
  %31 = shl i32 %2, 4, !dbg !11006
  %32 = and i32 %31, 4080, !dbg !11006
  %33 = or i32 %32, %30, !dbg !11007
  br label %36, !dbg !11003

34:                                               ; preds = %21
  %35 = and i32 %2, 255, !dbg !11008
  br label %36, !dbg !11003

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %33, %27 ], [ %35, %34 ], !dbg !11003
  %38 = trunc i32 %37 to i8, !dbg !11003
  store i8 %38, i8* %24, align 1, !dbg !11009
  %39 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 3, !dbg !11010
  store i8 1, i8* %39, align 1, !dbg !11011
  %40 = load i32, i32* %15, align 4, !dbg !11012
  %41 = lshr i32 %22, 9, !dbg !11013
  %42 = add i32 %40, %41, !dbg !11014
  %43 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %0, i32 noundef %42) #22, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %43, metadata !10978, metadata !DIExpression()), !dbg !10979
  %44 = icmp eq i32 %43, 0, !dbg !11016
  br i1 %44, label %45, label %92, !dbg !11018

45:                                               ; preds = %36
  %46 = and i32 %22, 511, !dbg !11019
  %47 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 %46, !dbg !11020
  call void @llvm.dbg.value(metadata i8* %47, metadata !10977, metadata !DIExpression()), !dbg !10979
  br i1 %26, label %51, label %48, !dbg !11021

48:                                               ; preds = %45
  %49 = lshr i32 %2, 4, !dbg !11022
  %50 = and i32 %49, 255, !dbg !11023
  br label %58, !dbg !11021

51:                                               ; preds = %45
  %52 = load i8, i8* %47, align 1, !dbg !11024
  %53 = and i8 %52, -16, !dbg !11025
  %54 = zext i8 %53 to i32, !dbg !11025
  %55 = lshr i32 %2, 8, !dbg !11026
  %56 = and i32 %55, 15, !dbg !11027
  %57 = or i32 %56, %54, !dbg !11028
  br label %58, !dbg !11021

58:                                               ; preds = %51, %48
  %59 = phi i32 [ %50, %48 ], [ %57, %51 ], !dbg !11021
  %60 = trunc i32 %59 to i8, !dbg !11021
  store i8 %60, i8* %47, align 1, !dbg !11029
  br label %90, !dbg !11030

61:                                               ; preds = %9
  %62 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 14, !dbg !11031
  %63 = load i32, i32* %62, align 4, !dbg !11031
  %64 = lshr i32 %1, 8, !dbg !11032
  %65 = add i32 %63, %64, !dbg !11033
  %66 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %0, i32 noundef %65) #22, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %66, metadata !10978, metadata !DIExpression()), !dbg !10979
  %67 = icmp eq i32 %66, 0, !dbg !11035
  br i1 %67, label %68, label %92, !dbg !11037

68:                                               ; preds = %61
  %69 = shl i32 %1, 1, !dbg !11038
  %70 = and i32 %69, 510, !dbg !11039
  %71 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 %70, !dbg !11040
  %72 = trunc i32 %2 to i16, !dbg !11041
  tail call fastcc void @st_word(i8* noundef nonnull %71, i16 noundef zeroext %72) #22, !dbg !11042
  %73 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 3, !dbg !11043
  br label %90, !dbg !11044

74:                                               ; preds = %9
  %75 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 14, !dbg !11045
  %76 = load i32, i32* %75, align 4, !dbg !11045
  %77 = lshr i32 %1, 7, !dbg !11046
  %78 = add i32 %76, %77, !dbg !11047
  %79 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %0, i32 noundef %78) #22, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %79, metadata !10978, metadata !DIExpression()), !dbg !10979
  %80 = icmp eq i32 %79, 0, !dbg !11049
  br i1 %80, label %81, label %92, !dbg !11051

81:                                               ; preds = %74
  %82 = and i32 %2, 268435455, !dbg !11052
  %83 = shl i32 %1, 2, !dbg !11055
  %84 = and i32 %83, 508, !dbg !11056
  %85 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 %84, !dbg !11057
  %86 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %85) #22, !dbg !11058
  %87 = and i32 %86, -268435456, !dbg !11059
  %88 = or i32 %87, %82, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %88, metadata !10975, metadata !DIExpression()), !dbg !10979
  tail call fastcc void @st_dword(i8* noundef nonnull %85, i32 noundef %88) #22, !dbg !11061
  %89 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 3, !dbg !11062
  br label %90, !dbg !11063

90:                                               ; preds = %81, %68, %58
  %91 = phi i8* [ %39, %58 ], [ %73, %68 ], [ %89, %81 ]
  store i8 1, i8* %91, align 1, !dbg !11064
  br label %92, !dbg !11065

92:                                               ; preds = %90, %9, %12, %36, %61, %74, %5, %3
  %93 = phi i32 [ 2, %9 ], [ %79, %74 ], [ %66, %61 ], [ %19, %12 ], [ %43, %36 ], [ 2, %5 ], [ 2, %3 ], [ 0, %90 ], !dbg !10979
  call void @llvm.dbg.value(metadata i32 %93, metadata !10978, metadata !DIExpression()), !dbg !10979
  ret i32 %93, !dbg !11065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @st_word(i8* nocapture noundef writeonly %0, i16 noundef zeroext %1) unnamed_addr #4 !dbg !11066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11070, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i16 %1, metadata !11071, metadata !DIExpression()), !dbg !11072
  %3 = trunc i16 %1 to i8, !dbg !11073
  %4 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !11074
  call void @llvm.dbg.value(metadata i8* %4, metadata !11070, metadata !DIExpression()), !dbg !11072
  store i8 %3, i8* %0, align 1, !dbg !11075
  %5 = lshr i16 %1, 8, !dbg !11076
  call void @llvm.dbg.value(metadata i16 %5, metadata !11071, metadata !DIExpression()), !dbg !11072
  %6 = trunc i16 %5 to i8, !dbg !11077
  call void @llvm.dbg.value(metadata i8* %4, metadata !11070, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11072
  store i8 %6, i8* %4, align 1, !dbg !11078
  ret void, !dbg !11079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @dir_alloc(%struct.DIR* nocapture noundef %0) unnamed_addr #0 !dbg !11080 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !11084, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 1, metadata !11085, metadata !DIExpression()), !dbg !11089
  %2 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !11090
  %3 = load %struct.FATFS*, %struct.FATFS** %2, align 4, !dbg !11090
  call void @llvm.dbg.value(metadata %struct.FATFS* %3, metadata !11088, metadata !DIExpression()), !dbg !11089
  %4 = tail call fastcc i32 @dir_sdi(%struct.DIR* noundef %0, i32 noundef 0) #22, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %4, metadata !11086, metadata !DIExpression()), !dbg !11089
  %5 = icmp eq i32 %4, 0, !dbg !11092
  br i1 %5, label %6, label %19, !dbg !11094

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4
  br label %9, !dbg !11095

9:                                                ; preds = %6, %16
  call void @llvm.dbg.value(metadata i32 0, metadata !11087, metadata !DIExpression()), !dbg !11089
  %10 = load i32, i32* %7, align 4, !dbg !11097
  %11 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %3, i32 noundef %10) #22, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %11, metadata !11086, metadata !DIExpression()), !dbg !11089
  %12 = icmp eq i32 %11, 0, !dbg !11100
  br i1 %12, label %13, label %19, !dbg !11102

13:                                               ; preds = %9
  %14 = load i8*, i8** %8, align 4, !dbg !11103
  %15 = load i8, i8* %14, align 1, !dbg !11105
  switch i8 %15, label %16 [
    i8 -27, label %23
    i8 0, label %23
  ], !dbg !11106

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 0, metadata !11087, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 0, metadata !11087, metadata !DIExpression()), !dbg !11089
  %17 = tail call fastcc i32 @dir_next(%struct.DIR* noundef nonnull %0, i32 noundef 1) #22, !dbg !11107
  call void @llvm.dbg.value(metadata i32 %17, metadata !11086, metadata !DIExpression()), !dbg !11089
  %18 = icmp eq i32 %17, 0, !dbg !11108
  br i1 %18, label %9, label %19, !dbg !11109, !llvm.loop !11110

19:                                               ; preds = %16, %9, %1
  %20 = phi i32 [ %4, %1 ], [ %17, %16 ], [ %11, %9 ], !dbg !11089
  call void @llvm.dbg.value(metadata i32 %20, metadata !11086, metadata !DIExpression()), !dbg !11089
  %21 = icmp eq i32 %20, 4, !dbg !11112
  %22 = select i1 %21, i32 7, i32 %20, !dbg !11114
  br label %23, !dbg !11114

23:                                               ; preds = %13, %13, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %13 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !11086, metadata !DIExpression()), !dbg !11089
  ret i32 %24, !dbg !11115
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @mem_cpy(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #13 !dbg !11116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11120, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i8* %1, metadata !11121, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %2, metadata !11122, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i8* %0, metadata !11123, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i8* %1, metadata !11124, metadata !DIExpression()), !dbg !11125
  br label %4

4:                                                ; preds = %3, %4
  %5 = phi i32 [ %2, %3 ], [ %11, %4 ]
  %6 = phi i8* [ %0, %3 ], [ %10, %4 ], !dbg !11125
  %7 = phi i8* [ %1, %3 ], [ %8, %4 ], !dbg !11125
  call void @llvm.dbg.value(metadata i8* %7, metadata !11124, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i8* %6, metadata !11123, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %5, metadata !11122, metadata !DIExpression()), !dbg !11125
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11126
  call void @llvm.dbg.value(metadata i8* %8, metadata !11124, metadata !DIExpression()), !dbg !11125
  %9 = load i8, i8* %7, align 1, !dbg !11129
  %10 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !11130
  call void @llvm.dbg.value(metadata i8* %10, metadata !11123, metadata !DIExpression()), !dbg !11125
  store i8 %9, i8* %6, align 1, !dbg !11131
  %11 = add i32 %5, -1, !dbg !11132
  call void @llvm.dbg.value(metadata i32 %11, metadata !11122, metadata !DIExpression()), !dbg !11125
  %12 = icmp eq i32 %11, 0, !dbg !11133
  br i1 %12, label %13, label %4, !dbg !11133, !llvm.loop !11134

13:                                               ; preds = %4
  ret void, !dbg !11137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @dir_sdi(%struct.DIR* nocapture noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !11142, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %1, metadata !11143, metadata !DIExpression()), !dbg !11147
  %3 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, !dbg !11148
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !11149
  %5 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !11149
  call void @llvm.dbg.value(metadata %struct.FATFS* %5, metadata !11146, metadata !DIExpression()), !dbg !11147
  %6 = and i32 %1, 31, !dbg !11150
  %7 = icmp eq i32 %6, 0, !dbg !11150
  br i1 %7, label %8, label %70, !dbg !11152

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 1, !dbg !11153
  store i32 %1, i32* %9, align 4, !dbg !11154
  %10 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 4, !dbg !11155
  %11 = load i32, i32* %10, align 4, !dbg !11155
  call void @llvm.dbg.value(metadata i32 %11, metadata !11145, metadata !DIExpression()), !dbg !11147
  %12 = icmp eq i32 %11, 0, !dbg !11156
  br i1 %12, label %13, label %30, !dbg !11158

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 0, !dbg !11159
  %15 = load i8, i8* %14, align 4, !dbg !11159
  %16 = icmp ugt i8 %15, 2, !dbg !11160
  br i1 %16, label %17, label %21, !dbg !11161

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 15, !dbg !11162
  %19 = load i32, i32* %18, align 4, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %19, metadata !11145, metadata !DIExpression()), !dbg !11147
  %20 = icmp eq i32 %19, 0, !dbg !11164
  br i1 %20, label %21, label %30, !dbg !11166

21:                                               ; preds = %13, %17
  %22 = lshr i32 %1, 5, !dbg !11167
  %23 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 6, !dbg !11170
  %24 = load i16, i16* %23, align 4, !dbg !11170
  %25 = zext i16 %24 to i32, !dbg !11171
  %26 = icmp ult i32 %22, %25, !dbg !11172
  br i1 %26, label %27, label %70, !dbg !11173

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 15, !dbg !11174
  %29 = load i32, i32* %28, align 4, !dbg !11174
  br label %56, !dbg !11175

30:                                               ; preds = %8, %17
  %31 = phi i32 [ %19, %17 ], [ %11, %8 ]
  %32 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 7, !dbg !11176
  %33 = load i16, i16* %32, align 2, !dbg !11176
  %34 = zext i16 %33 to i32, !dbg !11178
  %35 = shl nuw nsw i32 %34, 9, !dbg !11179
  call void @llvm.dbg.value(metadata i32 %35, metadata !11144, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %31, metadata !11145, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %1, metadata !11143, metadata !DIExpression()), !dbg !11147
  %36 = icmp ugt i32 %35, %1, !dbg !11180
  br i1 %36, label %52, label %37, !dbg !11181

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 11
  br label %39, !dbg !11181

39:                                               ; preds = %37, %49
  %40 = phi i32 [ %31, %37 ], [ %42, %49 ]
  %41 = phi i32 [ %1, %37 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !11145, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %41, metadata !11143, metadata !DIExpression()), !dbg !11147
  %42 = tail call fastcc i32 @get_fat(%struct._FDID* noundef %3, i32 noundef %40) #22, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %42, metadata !11145, metadata !DIExpression()), !dbg !11147
  %43 = icmp eq i32 %42, -1, !dbg !11184
  br i1 %43, label %70, label %44, !dbg !11186

44:                                               ; preds = %39
  %45 = icmp ult i32 %42, 2, !dbg !11187
  br i1 %45, label %70, label %46, !dbg !11189

46:                                               ; preds = %44
  %47 = load i32, i32* %38, align 4, !dbg !11190
  %48 = icmp ult i32 %42, %47, !dbg !11191
  br i1 %48, label %49, label %70, !dbg !11192

49:                                               ; preds = %46
  %50 = sub i32 %41, %35, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %42, metadata !11145, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %50, metadata !11143, metadata !DIExpression()), !dbg !11147
  %51 = icmp ult i32 %50, %35, !dbg !11180
  br i1 %51, label %52, label %39, !dbg !11181, !llvm.loop !11194

52:                                               ; preds = %49, %30
  %53 = phi i32 [ %1, %30 ], [ %50, %49 ]
  %54 = phi i32 [ %31, %30 ], [ %42, %49 ], !dbg !11147
  %55 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %5, i32 noundef %54) #22, !dbg !11196
  br label %56

56:                                               ; preds = %52, %27
  %57 = phi i32 [ %55, %52 ], [ %29, %27 ]
  %58 = phi i32 [ %53, %52 ], [ %1, %27 ]
  %59 = phi i32 [ %54, %52 ], [ 0, %27 ], !dbg !11197
  %60 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3, !dbg !11198
  store i32 %57, i32* %60, align 4, !dbg !11198
  call void @llvm.dbg.value(metadata i32 %59, metadata !11145, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %58, metadata !11143, metadata !DIExpression()), !dbg !11147
  %61 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 2, !dbg !11199
  store i32 %59, i32* %61, align 4, !dbg !11200
  %62 = icmp eq i32 %57, 0, !dbg !11201
  br i1 %62, label %70, label %63, !dbg !11203

63:                                               ; preds = %56
  %64 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3, !dbg !11204
  %65 = lshr i32 %58, 9, !dbg !11205
  %66 = add i32 %57, %65, !dbg !11206
  store i32 %66, i32* %64, align 4, !dbg !11206
  %67 = and i32 %58, 511, !dbg !11207
  %68 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 18, i32 %67, !dbg !11208
  %69 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4, !dbg !11209
  store i8* %68, i8** %69, align 4, !dbg !11210
  br label %70, !dbg !11211

70:                                               ; preds = %44, %46, %39, %56, %21, %2, %63
  %71 = phi i32 [ 0, %63 ], [ 2, %2 ], [ 2, %21 ], [ 2, %56 ], [ 2, %44 ], [ 2, %46 ], [ 1, %39 ], !dbg !11147
  ret i32 %71, !dbg !11212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @dir_next(%struct.DIR* nocapture noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !11213 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !11217, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 %1, metadata !11218, metadata !DIExpression()), !dbg !11223
  %3 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, !dbg !11224
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !11225
  %5 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !11225
  call void @llvm.dbg.value(metadata %struct.FATFS* %5, metadata !11221, metadata !DIExpression()), !dbg !11223
  %6 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 1, !dbg !11226
  %7 = load i32, i32* %6, align 4, !dbg !11226
  %8 = add i32 %7, 32, !dbg !11227
  call void @llvm.dbg.value(metadata i32 %8, metadata !11219, metadata !DIExpression()), !dbg !11223
  %9 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3, !dbg !11228
  %10 = load i32, i32* %9, align 4, !dbg !11228
  %11 = icmp eq i32 %10, 0, !dbg !11230
  %12 = icmp ugt i32 %8, 2097151
  %13 = select i1 %11, i1 true, i1 %12, !dbg !11231
  br i1 %13, label %89, label %14, !dbg !11231

14:                                               ; preds = %2
  %15 = and i32 %8, 511, !dbg !11232
  %16 = icmp eq i32 %15, 0, !dbg !11234
  br i1 %16, label %17, label %83, !dbg !11235

17:                                               ; preds = %14
  %18 = add i32 %10, 1, !dbg !11236
  store i32 %18, i32* %9, align 4, !dbg !11236
  %19 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 2, !dbg !11238
  %20 = load i32, i32* %19, align 4, !dbg !11238
  %21 = icmp eq i32 %20, 0, !dbg !11240
  br i1 %21, label %22, label %29, !dbg !11241

22:                                               ; preds = %17
  %23 = lshr i32 %8, 5, !dbg !11242
  %24 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 6, !dbg !11245
  %25 = load i16, i16* %24, align 4, !dbg !11245
  %26 = zext i16 %25 to i32, !dbg !11246
  %27 = icmp ult i32 %23, %26, !dbg !11247
  br i1 %27, label %83, label %28, !dbg !11248

28:                                               ; preds = %22
  store i32 0, i32* %9, align 4, !dbg !11249
  br label %89, !dbg !11251

29:                                               ; preds = %17
  %30 = lshr i32 %8, 9, !dbg !11252
  %31 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 7, !dbg !11255
  %32 = load i16, i16* %31, align 2, !dbg !11255
  %33 = zext i16 %32 to i32, !dbg !11256
  %34 = add nuw nsw i32 %33, 8388607, !dbg !11257
  %35 = and i32 %34, %30, !dbg !11258
  %36 = icmp eq i32 %35, 0, !dbg !11259
  br i1 %36, label %37, label %83, !dbg !11260

37:                                               ; preds = %29
  %38 = tail call fastcc i32 @get_fat(%struct._FDID* noundef nonnull %3, i32 noundef %20) #22, !dbg !11261
  call void @llvm.dbg.value(metadata i32 %38, metadata !11220, metadata !DIExpression()), !dbg !11223
  %39 = icmp ult i32 %38, 2, !dbg !11263
  br i1 %39, label %89, label %40, !dbg !11265

40:                                               ; preds = %37
  %41 = icmp eq i32 %38, -1, !dbg !11266
  br i1 %41, label %89, label %42, !dbg !11268

42:                                               ; preds = %40
  %43 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 11, !dbg !11269
  %44 = load i32, i32* %43, align 4, !dbg !11269
  %45 = icmp ult i32 %38, %44, !dbg !11271
  br i1 %45, label %80, label %46, !dbg !11272

46:                                               ; preds = %42
  %47 = icmp eq i32 %1, 0, !dbg !11273
  br i1 %47, label %48, label %49, !dbg !11276

48:                                               ; preds = %46
  store i32 0, i32* %9, align 4, !dbg !11277
  br label %89, !dbg !11279

49:                                               ; preds = %46
  %50 = load i32, i32* %19, align 4, !dbg !11280
  %51 = tail call fastcc i32 @create_chain(%struct._FDID* noundef nonnull %3, i32 noundef %50) #22, !dbg !11281
  call void @llvm.dbg.value(metadata i32 %51, metadata !11220, metadata !DIExpression()), !dbg !11223
  %52 = add i32 %51, 1, !dbg !11282
  %53 = icmp ult i32 %52, 3, !dbg !11282
  br i1 %53, label %86, label %54, !dbg !11282

54:                                               ; preds = %49
  %55 = tail call fastcc i32 @sync_window(%struct.FATFS* noundef nonnull %5) #22, !dbg !11283
  %56 = icmp eq i32 %55, 0, !dbg !11285
  br i1 %56, label %57, label %89, !dbg !11286

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 18, i32 0, !dbg !11287
  tail call fastcc void @mem_set(i8* noundef nonnull %58, i32 noundef 0, i32 noundef 512) #22, !dbg !11288
  call void @llvm.dbg.value(metadata i32 0, metadata !11222, metadata !DIExpression()), !dbg !11223
  %59 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %5, i32 noundef %51) #22, !dbg !11289
  %60 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 17, !dbg !11291
  store i32 %59, i32* %60, align 4, !dbg !11292
  call void @llvm.dbg.value(metadata i32 0, metadata !11222, metadata !DIExpression()), !dbg !11223
  %61 = load i16, i16* %31, align 2, !dbg !11293
  %62 = icmp eq i16 %61, 0, !dbg !11295
  br i1 %62, label %76, label %63, !dbg !11296

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 3
  br label %65, !dbg !11296

65:                                               ; preds = %63, %69
  %66 = phi i32 [ 0, %63 ], [ %70, %69 ]
  call void @llvm.dbg.value(metadata i32 %66, metadata !11222, metadata !DIExpression()), !dbg !11223
  store i8 1, i8* %64, align 1, !dbg !11297
  %67 = tail call fastcc i32 @sync_window(%struct.FATFS* noundef nonnull %5) #22, !dbg !11299
  %68 = icmp eq i32 %67, 0, !dbg !11301
  br i1 %68, label %69, label %89, !dbg !11302

69:                                               ; preds = %65
  %70 = add nuw nsw i32 %66, 1, !dbg !11303
  call void @llvm.dbg.value(metadata i32 %70, metadata !11222, metadata !DIExpression()), !dbg !11223
  %71 = load i32, i32* %60, align 4, !dbg !11304
  %72 = add i32 %71, 1, !dbg !11304
  store i32 %72, i32* %60, align 4, !dbg !11292
  %73 = load i16, i16* %31, align 2, !dbg !11293
  %74 = zext i16 %73 to i32, !dbg !11305
  %75 = icmp ult i32 %70, %74, !dbg !11295
  br i1 %75, label %65, label %76, !dbg !11296, !llvm.loop !11306

76:                                               ; preds = %69, %57
  %77 = phi i32 [ %59, %57 ], [ %72, %69 ], !dbg !11292
  %78 = phi i32 [ 0, %57 ], [ %70, %69 ], !dbg !11292
  %79 = sub i32 %77, %78, !dbg !11308
  store i32 %79, i32* %60, align 4, !dbg !11308
  br label %80, !dbg !11309

80:                                               ; preds = %76, %42
  %81 = phi i32 [ %51, %76 ], [ %38, %42 ], !dbg !11310
  call void @llvm.dbg.value(metadata i32 %81, metadata !11220, metadata !DIExpression()), !dbg !11223
  store i32 %81, i32* %19, align 4, !dbg !11311
  %82 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %5, i32 noundef %81) #22, !dbg !11312
  store i32 %82, i32* %9, align 4, !dbg !11313
  br label %83, !dbg !11314

83:                                               ; preds = %22, %80, %29, %14
  store i32 %8, i32* %6, align 4, !dbg !11315
  %84 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %5, i32 0, i32 18, i32 %15, !dbg !11316
  %85 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4, !dbg !11317
  store i8* %84, i8** %85, align 4, !dbg !11318
  br label %89, !dbg !11319

86:                                               ; preds = %49
  %87 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.dir_next, i32 0, i32 %52, !dbg !11282
  %88 = load i32, i32* %87, align 4, !dbg !11282
  br label %89, !dbg !11282

89:                                               ; preds = %65, %86, %54, %40, %37, %2, %83, %48, %28
  %90 = phi i32 [ 0, %83 ], [ 4, %48 ], [ 4, %28 ], [ 4, %2 ], [ 2, %37 ], [ 1, %40 ], [ 1, %54 ], [ %88, %86 ], [ 1, %65 ], !dbg !11223
  ret i32 %90, !dbg !11320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @create_chain(%struct._FDID* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #0 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct._FDID* %0, metadata !11323, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata i32 %1, metadata !11324, metadata !DIExpression()), !dbg !11330
  %3 = getelementptr inbounds %struct._FDID, %struct._FDID* %0, i32 0, i32 0, !dbg !11331
  %4 = load %struct.FATFS*, %struct.FATFS** %3, align 4, !dbg !11331
  call void @llvm.dbg.value(metadata %struct.FATFS* %4, metadata !11329, metadata !DIExpression()), !dbg !11330
  %5 = icmp eq i32 %1, 0, !dbg !11332
  br i1 %5, label %6, label %15, !dbg !11334

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 8, !dbg !11335
  %8 = load i32, i32* %7, align 4, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %8, metadata !11327, metadata !DIExpression()), !dbg !11330
  %9 = icmp eq i32 %8, 0, !dbg !11337
  br i1 %9, label %14, label %10, !dbg !11339

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 11, !dbg !11340
  %12 = load i32, i32* %11, align 4, !dbg !11340
  %13 = icmp ult i32 %8, %12, !dbg !11341
  br i1 %13, label %24, label %14, !dbg !11342

14:                                               ; preds = %10, %6
  call void @llvm.dbg.value(metadata i32 1, metadata !11327, metadata !DIExpression()), !dbg !11330
  br label %24, !dbg !11343

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @get_fat(%struct._FDID* noundef nonnull %0, i32 noundef %1) #22, !dbg !11344
  call void @llvm.dbg.value(metadata i32 %16, metadata !11325, metadata !DIExpression()), !dbg !11330
  %17 = icmp ult i32 %16, 2, !dbg !11346
  br i1 %17, label %65, label %18, !dbg !11348

18:                                               ; preds = %15
  %19 = icmp eq i32 %16, -1, !dbg !11349
  br i1 %19, label %65, label %20, !dbg !11351

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 11, !dbg !11352
  %22 = load i32, i32* %21, align 4, !dbg !11352
  %23 = icmp ult i32 %16, %22, !dbg !11354
  br i1 %23, label %65, label %24, !dbg !11355

24:                                               ; preds = %20, %10, %14
  %25 = phi i32 [ 1, %14 ], [ %8, %10 ], [ %1, %20 ], !dbg !11356
  call void @llvm.dbg.value(metadata i32 %25, metadata !11327, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata i32 %25, metadata !11326, metadata !DIExpression()), !dbg !11330
  %26 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 11
  %27 = icmp ugt i32 %25, 1
  br label %28, !dbg !11357

28:                                               ; preds = %37, %24
  %29 = phi i32 [ %25, %24 ], [ %34, %37 ], !dbg !11359
  call void @llvm.dbg.value(metadata i32 %29, metadata !11326, metadata !DIExpression()), !dbg !11330
  %30 = add i32 %29, 1, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %30, metadata !11326, metadata !DIExpression()), !dbg !11330
  %31 = load i32, i32* %26, align 4, !dbg !11364
  %32 = icmp ult i32 %30, %31, !dbg !11366
  %33 = select i1 %32, i1 true, i1 %27, !dbg !11367
  %34 = select i1 %32, i32 %30, i32 2, !dbg !11367
  br i1 %33, label %35, label %65, !dbg !11367

35:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11326, metadata !DIExpression()), !dbg !11330
  %36 = tail call fastcc i32 @get_fat(%struct._FDID* noundef %0, i32 noundef %34) #22, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %36, metadata !11325, metadata !DIExpression()), !dbg !11330
  switch i32 %36, label %37 [
    i32 0, label %39
    i32 -1, label %65
    i32 1, label %65
  ], !dbg !11369

37:                                               ; preds = %35
  %38 = icmp eq i32 %34, %25, !dbg !11370
  br i1 %38, label %65, label %28, !dbg !11372, !llvm.loop !11373

39:                                               ; preds = %35
  %40 = tail call fastcc i32 @put_fat(%struct.FATFS* noundef nonnull %4, i32 noundef %34, i32 noundef -1) #22, !dbg !11376
  call void @llvm.dbg.value(metadata i32 %40, metadata !11328, metadata !DIExpression()), !dbg !11330
  %41 = icmp eq i32 %40, 0, !dbg !11379
  %42 = icmp ne i32 %1, 0
  %43 = and i1 %42, %41, !dbg !11381
  br i1 %43, label %44, label %46, !dbg !11381

44:                                               ; preds = %39
  %45 = tail call fastcc i32 @put_fat(%struct.FATFS* noundef nonnull %4, i32 noundef %1, i32 noundef %34) #22, !dbg !11382
  call void @llvm.dbg.value(metadata i32 %45, metadata !11328, metadata !DIExpression()), !dbg !11330
  br label %46, !dbg !11384

46:                                               ; preds = %44, %39
  %47 = phi i32 [ %45, %44 ], [ %40, %39 ], !dbg !11385
  call void @llvm.dbg.value(metadata i32 %47, metadata !11328, metadata !DIExpression()), !dbg !11330
  %48 = icmp eq i32 %47, 0, !dbg !11386
  br i1 %48, label %49, label %62, !dbg !11388

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 8, !dbg !11389
  store i32 %34, i32* %50, align 4, !dbg !11391
  %51 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 9, !dbg !11392
  %52 = load i32, i32* %51, align 4, !dbg !11392
  %53 = load i32, i32* %26, align 4, !dbg !11394
  %54 = add i32 %53, -2, !dbg !11395
  %55 = icmp ult i32 %52, %54, !dbg !11396
  br i1 %55, label %56, label %58, !dbg !11397

56:                                               ; preds = %49
  %57 = add i32 %52, -1, !dbg !11398
  store i32 %57, i32* %51, align 4, !dbg !11398
  br label %58, !dbg !11399

58:                                               ; preds = %56, %49
  %59 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %4, i32 0, i32 4, !dbg !11400
  %60 = load i8, i8* %59, align 4, !dbg !11401
  %61 = or i8 %60, 1, !dbg !11401
  store i8 %61, i8* %59, align 4, !dbg !11401
  br label %65, !dbg !11402

62:                                               ; preds = %46
  %63 = icmp eq i32 %47, 1, !dbg !11403
  %64 = select i1 %63, i32 -1, i32 1, !dbg !11405
  call void @llvm.dbg.value(metadata i32 %64, metadata !11326, metadata !DIExpression()), !dbg !11330
  br label %65

65:                                               ; preds = %35, %35, %37, %28, %58, %62, %20, %18, %15
  %66 = phi i32 [ 1, %15 ], [ -1, %18 ], [ %16, %20 ], [ %34, %58 ], [ %64, %62 ], [ %36, %35 ], [ %36, %35 ], [ 0, %37 ], [ 0, %28 ], !dbg !11330
  ret i32 %66, !dbg !11406
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @create_name(%struct.DIR* nocapture noundef %0, i8** nocapture noundef %1) unnamed_addr #13 !dbg !11407 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !11411, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i8** %1, metadata !11412, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.declare(metadata i8* undef, metadata !11414, metadata !DIExpression()), !dbg !11421
  %3 = load i8*, i8** %1, align 4, !dbg !11422
  call void @llvm.dbg.value(metadata i8* %3, metadata !11419, metadata !DIExpression()), !dbg !11420
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 0, !dbg !11423
  call void @llvm.dbg.value(metadata i8* %4, metadata !11415, metadata !DIExpression()), !dbg !11420
  tail call fastcc void @mem_set(i8* noundef nonnull %4, i32 noundef 32, i32 noundef 11) #22, !dbg !11424
  call void @llvm.dbg.value(metadata i32 0, metadata !11418, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 0, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 8, metadata !11416, metadata !DIExpression()), !dbg !11420
  %5 = load i8, i8* %3, align 1, !dbg !11425
  %6 = icmp eq i8 %5, 46, !dbg !11427
  br i1 %6, label %9, label %7, !dbg !11428

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !11418, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 0, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 8, metadata !11416, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 1, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i8 %5, metadata !11413, metadata !DIExpression()), !dbg !11420
  %8 = icmp ult i8 %5, 33, !dbg !11429
  br i1 %8, label %83, label %50, !dbg !11434

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !11418, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 1, metadata !11418, metadata !DIExpression()), !dbg !11420
  %10 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 0, !dbg !11435
  store i8 46, i8* %10, align 1, !dbg !11440
  call void @llvm.dbg.value(metadata i32 1, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 1, metadata !11417, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11420
  %11 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !11441
  %12 = load i8, i8* %11, align 1, !dbg !11441
  call void @llvm.dbg.value(metadata i8 %12, metadata !11413, metadata !DIExpression()), !dbg !11420
  %13 = icmp eq i8 %12, 46, !dbg !11442
  br i1 %13, label %14, label %18, !dbg !11444, !llvm.loop !11445

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 1, metadata !11418, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 2, metadata !11418, metadata !DIExpression()), !dbg !11420
  %15 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 1, !dbg !11435
  store i8 46, i8* %15, align 1, !dbg !11440
  call void @llvm.dbg.value(metadata i32 2, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 2, metadata !11417, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11420
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !11441
  %17 = load i8, i8* %16, align 1, !dbg !11441
  call void @llvm.dbg.value(metadata i8 %17, metadata !11413, metadata !DIExpression()), !dbg !11420
  br label %18

18:                                               ; preds = %14, %9
  %19 = phi i32 [ 2, %9 ], [ 3, %14 ]
  %20 = phi i8 [ %12, %9 ], [ %17, %14 ], !dbg !11441
  %21 = freeze i8 %20
  %22 = icmp ugt i8 %21, 32
  br i1 %22, label %23, label %24, !dbg !11448

23:                                               ; preds = %18
  switch i8 %21, label %97 [
    i8 92, label %24
    i8 47, label %24
  ], !dbg !11448

24:                                               ; preds = %23, %23, %18
  %25 = phi i8 [ 32, %23 ], [ 32, %23 ], [ 36, %18 ], !dbg !11450
  %26 = getelementptr inbounds i8, i8* %3, i32 %19, !dbg !11450
  store i8* %26, i8** %1, align 4, !dbg !11451
  br label %94, !dbg !11452

27:                                               ; preds = %50, %70
  %28 = phi i8 [ %79, %70 ], [ %55, %50 ]
  %29 = phi i32 [ %77, %70 ], [ %51, %50 ]
  %30 = phi i32 [ %75, %70 ], [ %52, %50 ]
  %31 = zext i8 %28 to i32, !dbg !11453
  call void @llvm.dbg.value(metadata i32 %30, metadata !11418, metadata !DIExpression()), !dbg !11420
  switch i8 %28, label %39 [
    i8 92, label %32
    i8 47, label %32
    i8 46, label %41
  ], !dbg !11454

32:                                               ; preds = %27, %27
  br label %33, !dbg !11456

33:                                               ; preds = %32, %37
  %34 = phi i32 [ %38, %37 ], [ %29, %32 ], !dbg !11458
  call void @llvm.dbg.value(metadata i32 %34, metadata !11417, metadata !DIExpression()), !dbg !11420
  %35 = getelementptr inbounds i8, i8* %3, i32 %34, !dbg !11459
  %36 = load i8, i8* %35, align 1, !dbg !11459
  switch i8 %36, label %83 [
    i8 47, label %37
    i8 92, label %37
  ], !dbg !11460

37:                                               ; preds = %33, %33
  %38 = add i32 %34, 1, !dbg !11461
  call void @llvm.dbg.value(metadata i32 %38, metadata !11417, metadata !DIExpression()), !dbg !11420
  br label %33, !dbg !11456, !llvm.loop !11462

39:                                               ; preds = %27
  %40 = icmp eq i32 %29, %57, !dbg !11463
  br i1 %40, label %41, label %58, !dbg !11465

41:                                               ; preds = %27, %39
  %42 = phi i32 [ %29, %27 ], [ %57, %39 ]
  %43 = icmp ne i8 %28, 46
  %44 = select i1 %54, i1 true, i1 %43, !dbg !11466
  br i1 %44, label %97, label %45, !dbg !11466, !llvm.loop !11469

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %3, i32 %42
  %47 = load i8, i8* %46, align 1, !dbg !11472
  call void @llvm.dbg.value(metadata i32 8, metadata !11418, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 %42, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 11, metadata !11416, metadata !DIExpression()), !dbg !11420
  %48 = add i32 %42, 1, !dbg !11473
  call void @llvm.dbg.value(metadata i32 %48, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i8 %47, metadata !11413, metadata !DIExpression()), !dbg !11420
  %49 = icmp ult i8 %47, 33, !dbg !11429
  br i1 %49, label %83, label %50, !dbg !11434

50:                                               ; preds = %7, %45
  %51 = phi i32 [ %48, %45 ], [ 1, %7 ]
  %52 = phi i32 [ 8, %45 ], [ 0, %7 ]
  %53 = phi i32 [ 11, %45 ], [ 8, %7 ]
  %54 = phi i1 [ true, %45 ], [ false, %7 ]
  %55 = phi i8 [ %47, %45 ], [ %5, %7 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !11418, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 %53, metadata !11416, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i8 %55, metadata !11413, metadata !DIExpression()), !dbg !11420
  %56 = add i32 %51, %53, !dbg !11470
  %57 = sub i32 %56, %52, !dbg !11470
  br label %27, !dbg !11470

58:                                               ; preds = %39
  %59 = icmp slt i8 %28, 0, !dbg !11474
  br i1 %59, label %60, label %65, !dbg !11476

60:                                               ; preds = %58
  %61 = add nsw i32 %31, -128, !dbg !11477
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* @ExCvt, i32 0, i32 %61, !dbg !11479
  %63 = load i8, i8* %62, align 1, !dbg !11479
  call void @llvm.dbg.value(metadata i8 %63, metadata !11413, metadata !DIExpression()), !dbg !11420
  %64 = zext i8 %63 to i32, !dbg !11480
  br label %65, !dbg !11484

65:                                               ; preds = %60, %58
  %66 = phi i32 [ %64, %60 ], [ %31, %58 ], !dbg !11480
  %67 = phi i8 [ %63, %60 ], [ %28, %58 ], !dbg !11458
  call void @llvm.dbg.value(metadata i8 %67, metadata !11413, metadata !DIExpression()), !dbg !11420
  %68 = tail call fastcc i32 @chk_chr(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.131, i32 0, i32 0), i32 noundef %66) #22, !dbg !11485
  %69 = icmp eq i32 %68, 0, !dbg !11485
  br i1 %69, label %70, label %97, !dbg !11486

70:                                               ; preds = %65
  %71 = add i8 %67, -97, !dbg !11487
  %72 = icmp ult i8 %71, 26, !dbg !11487
  %73 = add i8 %67, -32
  %74 = select i1 %72, i8 %73, i8 %67, !dbg !11487
  call void @llvm.dbg.value(metadata i8 %74, metadata !11413, metadata !DIExpression()), !dbg !11420
  %75 = add nuw nsw i32 %30, 1, !dbg !11489
  call void @llvm.dbg.value(metadata i32 %75, metadata !11418, metadata !DIExpression()), !dbg !11420
  %76 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 %30, !dbg !11490
  store i8 %74, i8* %76, align 1, !dbg !11491
  call void @llvm.dbg.value(metadata i32 %29, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 undef, metadata !11416, metadata !DIExpression()), !dbg !11420
  %77 = add i32 %29, 1, !dbg !11473
  call void @llvm.dbg.value(metadata i32 %77, metadata !11417, metadata !DIExpression()), !dbg !11420
  %78 = getelementptr inbounds i8, i8* %3, i32 %29, !dbg !11472
  %79 = load i8, i8* %78, align 1, !dbg !11472
  call void @llvm.dbg.value(metadata i8 %79, metadata !11413, metadata !DIExpression()), !dbg !11420
  %80 = icmp ult i8 %79, 33, !dbg !11429
  br i1 %80, label %81, label %27, !dbg !11434, !llvm.loop !11469

81:                                               ; preds = %70
  call void @llvm.dbg.value(metadata i32 %86, metadata !11417, metadata !DIExpression()), !dbg !11420
  %82 = getelementptr inbounds i8, i8* %3, i32 %77, !dbg !11492
  store i8* %82, i8** %1, align 4, !dbg !11493
  br label %89, !dbg !11494

83:                                               ; preds = %45, %33, %7
  %84 = phi i32 [ 0, %7 ], [ %30, %33 ], [ 8, %45 ]
  %85 = phi i8 [ 4, %7 ], [ 0, %33 ], [ 4, %45 ]
  %86 = phi i32 [ 1, %7 ], [ %34, %33 ], [ %48, %45 ], !dbg !11473
  call void @llvm.dbg.value(metadata i32 %86, metadata !11417, metadata !DIExpression()), !dbg !11420
  %87 = getelementptr inbounds i8, i8* %3, i32 %86, !dbg !11492
  store i8* %87, i8** %1, align 4, !dbg !11493
  %88 = icmp eq i32 %84, 0, !dbg !11495
  br i1 %88, label %97, label %89, !dbg !11494

89:                                               ; preds = %81, %83
  %90 = phi i8 [ 4, %81 ], [ %85, %83 ]
  %91 = load i8, i8* %4, align 1, !dbg !11497
  %92 = icmp eq i8 %91, -27, !dbg !11499
  br i1 %92, label %93, label %94, !dbg !11500

93:                                               ; preds = %89
  store i8 5, i8* %4, align 1, !dbg !11501
  br label %94, !dbg !11502

94:                                               ; preds = %89, %93, %24
  %95 = phi i8 [ %25, %24 ], [ %90, %93 ], [ %90, %89 ]
  %96 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 11, !dbg !11420
  store i8 %95, i8* %96, align 1, !dbg !11420
  br label %97, !dbg !11503

97:                                               ; preds = %41, %65, %94, %83, %23
  %98 = phi i32 [ 6, %23 ], [ 6, %83 ], [ 0, %94 ], [ 6, %65 ], [ 6, %41 ], !dbg !11420
  ret i32 %98, !dbg !11503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @dir_find(%struct.DIR* nocapture noundef %0) unnamed_addr #0 !dbg !11504 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !11506, metadata !DIExpression()), !dbg !11510
  %2 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !11511
  %3 = load %struct.FATFS*, %struct.FATFS** %2, align 4, !dbg !11511
  call void @llvm.dbg.value(metadata %struct.FATFS* %3, metadata !11508, metadata !DIExpression()), !dbg !11510
  %4 = tail call fastcc i32 @dir_sdi(%struct.DIR* noundef %0, i32 noundef 0) #22, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %4, metadata !11507, metadata !DIExpression()), !dbg !11510
  %5 = icmp eq i32 %4, 0, !dbg !11513
  br i1 %5, label %6, label %32, !dbg !11515

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4, !dbg !11516
  %8 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 0, !dbg !11518
  %9 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3
  %10 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 2
  br label %11, !dbg !11520

11:                                               ; preds = %6, %29
  %12 = load i32, i32* %9, align 4, !dbg !11521
  %13 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %3, i32 noundef %12) #22, !dbg !11522
  call void @llvm.dbg.value(metadata i32 %13, metadata !11507, metadata !DIExpression()), !dbg !11510
  %14 = icmp eq i32 %13, 0, !dbg !11523
  br i1 %14, label %15, label %32, !dbg !11525

15:                                               ; preds = %11
  %16 = load i8*, i8** %7, align 4, !dbg !11516
  %17 = load i8, i8* %16, align 1, !dbg !11526
  call void @llvm.dbg.value(metadata i8 %17, metadata !11509, metadata !DIExpression()), !dbg !11510
  %18 = icmp eq i8 %17, 0, !dbg !11527
  br i1 %18, label %32, label %19, !dbg !11529

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %16, i32 11, !dbg !11530
  %21 = load i8, i8* %20, align 1, !dbg !11530
  %22 = and i8 %21, 63, !dbg !11531
  store i8 %22, i8* %10, align 2, !dbg !11532
  %23 = load i8, i8* %20, align 1, !dbg !11533
  %24 = and i8 %23, 8, !dbg !11534
  %25 = icmp eq i8 %24, 0, !dbg !11534
  br i1 %25, label %26, label %29, !dbg !11535

26:                                               ; preds = %19
  %27 = tail call fastcc i32 @mem_cmp(i8* noundef nonnull %16, i8* noundef nonnull %8) #22, !dbg !11536
  %28 = icmp eq i32 %27, 0, !dbg !11536
  br i1 %28, label %32, label %29, !dbg !11537

29:                                               ; preds = %26, %19
  %30 = tail call fastcc i32 @dir_next(%struct.DIR* noundef nonnull %0, i32 noundef 0) #22, !dbg !11538
  call void @llvm.dbg.value(metadata i32 %30, metadata !11507, metadata !DIExpression()), !dbg !11510
  %31 = icmp eq i32 %30, 0, !dbg !11539
  br i1 %31, label %11, label %32, !dbg !11540, !llvm.loop !11541

32:                                               ; preds = %29, %11, %26, %15, %1
  %33 = phi i32 [ %4, %1 ], [ 4, %15 ], [ 0, %26 ], [ %30, %29 ], [ %13, %11 ], !dbg !11510
  ret i32 %33, !dbg !11543
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc i32 @mem_cmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) unnamed_addr #12 !dbg !11544 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11548, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i8* %1, metadata !11549, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i32 11, metadata !11550, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i8* %0, metadata !11551, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i8* %1, metadata !11552, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i32 0, metadata !11553, metadata !DIExpression()), !dbg !11554
  br label %3, !dbg !11555

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 11, %2 ], [ %14, %3 ]
  %5 = phi i8* [ %0, %2 ], [ %7, %3 ], !dbg !11554
  %6 = phi i8* [ %1, %2 ], [ %10, %3 ], !dbg !11554
  call void @llvm.dbg.value(metadata i8* %6, metadata !11552, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i8* %5, metadata !11551, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i32 %4, metadata !11550, metadata !DIExpression()), !dbg !11554
  %7 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11556
  call void @llvm.dbg.value(metadata i8* %7, metadata !11551, metadata !DIExpression()), !dbg !11554
  %8 = load i8, i8* %5, align 1, !dbg !11558
  %9 = zext i8 %8 to i32, !dbg !11558
  %10 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !11559
  call void @llvm.dbg.value(metadata i8* %10, metadata !11552, metadata !DIExpression()), !dbg !11554
  %11 = load i8, i8* %6, align 1, !dbg !11560
  %12 = zext i8 %11 to i32, !dbg !11560
  %13 = sub nsw i32 %9, %12, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %13, metadata !11553, metadata !DIExpression()), !dbg !11554
  %14 = add nsw i32 %4, -1, !dbg !11562
  call void @llvm.dbg.value(metadata i32 %14, metadata !11550, metadata !DIExpression()), !dbg !11554
  %15 = icmp ne i32 %14, 0, !dbg !11562
  %16 = icmp eq i32 %13, 0, !dbg !11563
  %17 = select i1 %15, i1 %16, i1 false, !dbg !11563
  br i1 %17, label %3, label %18, !dbg !11564, !llvm.loop !11565

18:                                               ; preds = %3
  ret i32 %13, !dbg !11567
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc i32 @chk_chr(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #12 !dbg !11568 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11572, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 %1, metadata !11573, metadata !DIExpression()), !dbg !11574
  br label %3, !dbg !11575

3:                                                ; preds = %3, %2
  %4 = phi i8* [ %0, %2 ], [ %10, %3 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !11572, metadata !DIExpression()), !dbg !11574
  %5 = load i8, i8* %4, align 1, !dbg !11576
  %6 = icmp eq i8 %5, 0, !dbg !11576
  %7 = zext i8 %5 to i32
  %8 = icmp eq i32 %7, %1
  %9 = or i1 %6, %8, !dbg !11577
  %10 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !11578
  call void @llvm.dbg.value(metadata i8* %10, metadata !11572, metadata !DIExpression()), !dbg !11574
  br i1 %9, label %11, label %3, !dbg !11577, !llvm.loop !11579

11:                                               ; preds = %3
  %12 = zext i8 %5 to i32
  ret i32 %12, !dbg !11580
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_read(%struct.FIL* noundef %0, i8* noundef %1, i32 noundef %2, i32* nocapture noundef %3) local_unnamed_addr #0 !dbg !11581 {
  %5 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !11586, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i8* %1, metadata !11587, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i32 %2, metadata !11588, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i32* %3, metadata !11589, metadata !DIExpression()), !dbg !11599
  %6 = bitcast %struct.FATFS** %5 to i8*, !dbg !11600
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !11600
  call void @llvm.dbg.value(metadata i8* %1, metadata !11598, metadata !DIExpression()), !dbg !11599
  store i32 0, i32* %3, align 4, !dbg !11601
  %7 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !11602
  call void @llvm.dbg.value(metadata %struct.FATFS** %5, metadata !11591, metadata !DIExpression(DW_OP_deref)), !dbg !11599
  %8 = call fastcc i32 @validate(%struct._FDID* noundef %7, %struct.FATFS** noundef nonnull %5) #22, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %8, metadata !11590, metadata !DIExpression()), !dbg !11599
  %9 = icmp eq i32 %8, 0, !dbg !11604
  br i1 %9, label %10, label %141, !dbg !11606

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 2, !dbg !11607
  %12 = load i8, i8* %11, align 1, !dbg !11607
  %13 = zext i8 %12 to i32, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %13, metadata !11590, metadata !DIExpression()), !dbg !11599
  %14 = icmp eq i8 %12, 0, !dbg !11609
  br i1 %14, label %15, label %141, !dbg !11610

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !11611
  %17 = load i8, i8* %16, align 4, !dbg !11611
  %18 = and i8 %17, 1, !dbg !11613
  %19 = icmp eq i8 %18, 0, !dbg !11613
  br i1 %19, label %141, label %20, !dbg !11614

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5, !dbg !11615
  %22 = load i32, i32* %21, align 4, !dbg !11615
  %23 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 3, !dbg !11616
  %24 = load i32, i32* %23, align 4, !dbg !11616
  %25 = sub i32 %22, %24, !dbg !11617
  call void @llvm.dbg.value(metadata i32 %25, metadata !11594, metadata !DIExpression()), !dbg !11599
  %26 = icmp ult i32 %25, %2, !dbg !11618
  %27 = select i1 %26, i32 %25, i32 %2, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %27, metadata !11588, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i8* %1, metadata !11598, metadata !DIExpression()), !dbg !11599
  %28 = icmp eq i32 %27, 0, !dbg !11621
  br i1 %28, label %141, label %29, !dbg !11621

29:                                               ; preds = %20
  %30 = load %struct.FATFS*, %struct.FATFS** %5, align 4
  %31 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %30, i32 0, i32 7
  %32 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 8
  %33 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4
  %34 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4
  %35 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %30, i32 0, i32 1
  %36 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 5
  %37 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0
  br label %38, !dbg !11621

38:                                               ; preds = %135, %29
  %39 = phi i32 [ %24, %29 ], [ %137, %135 ], !dbg !11623
  %40 = phi i8* [ %1, %29 ], [ %136, %135 ]
  %41 = phi i32 [ %27, %29 ], [ %133, %135 ]
  call void @llvm.dbg.value(metadata i8* %40, metadata !11598, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i32 %41, metadata !11588, metadata !DIExpression()), !dbg !11599
  %42 = and i32 %39, 511, !dbg !11627
  %43 = icmp eq i32 %42, 0, !dbg !11628
  br i1 %43, label %44, label %121, !dbg !11629

44:                                               ; preds = %38
  %45 = lshr i32 %39, 9, !dbg !11630
  call void @llvm.dbg.value(metadata %struct.FATFS* %30, metadata !11591, metadata !DIExpression()), !dbg !11599
  %46 = load i16, i16* %31, align 2, !dbg !11632
  %47 = zext i16 %46 to i32, !dbg !11633
  %48 = add nuw nsw i32 %47, 8388607, !dbg !11634
  %49 = and i32 %48, %45, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %49, metadata !11597, metadata !DIExpression()), !dbg !11599
  %50 = icmp eq i32 %49, 0, !dbg !11636
  br i1 %50, label %53, label %51, !dbg !11638

51:                                               ; preds = %44
  %52 = load i32, i32* %33, align 4, !dbg !11639
  br label %71, !dbg !11638

53:                                               ; preds = %44
  %54 = icmp eq i32 %39, 0, !dbg !11640
  br i1 %54, label %55, label %57, !dbg !11643

55:                                               ; preds = %53
  %56 = load i32, i32* %34, align 4, !dbg !11644
  call void @llvm.dbg.value(metadata i32 %56, metadata !11592, metadata !DIExpression()), !dbg !11599
  br label %65, !dbg !11646

57:                                               ; preds = %53
  %58 = load i32*, i32** %32, align 4, !dbg !11647
  %59 = icmp eq i32* %58, null, !dbg !11650
  br i1 %59, label %62, label %60, !dbg !11651

60:                                               ; preds = %57
  %61 = tail call fastcc i32 @clmt_clust(%struct.FIL* noundef nonnull %0, i32 noundef %39) #22, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %61, metadata !11592, metadata !DIExpression()), !dbg !11599
  br label %65, !dbg !11654

62:                                               ; preds = %57
  %63 = load i32, i32* %33, align 4, !dbg !11655
  %64 = tail call fastcc i32 @get_fat(%struct._FDID* noundef nonnull %7, i32 noundef %63) #22, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %64, metadata !11592, metadata !DIExpression()), !dbg !11599
  br label %65

65:                                               ; preds = %60, %62, %55
  %66 = phi i32 [ %56, %55 ], [ %61, %60 ], [ %64, %62 ], !dbg !11658
  call void @llvm.dbg.value(metadata i32 %66, metadata !11592, metadata !DIExpression()), !dbg !11599
  %67 = icmp ult i32 %66, 2, !dbg !11659
  br i1 %67, label %138, label %68, !dbg !11661

68:                                               ; preds = %65
  %69 = icmp eq i32 %66, -1, !dbg !11662
  br i1 %69, label %138, label %70, !dbg !11664

70:                                               ; preds = %68
  store i32 %66, i32* %33, align 4, !dbg !11665
  br label %71, !dbg !11666

71:                                               ; preds = %51, %70
  %72 = phi i32 [ %52, %51 ], [ %66, %70 ], !dbg !11639
  call void @llvm.dbg.value(metadata %struct.FATFS* %30, metadata !11591, metadata !DIExpression()), !dbg !11599
  %73 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %30, i32 noundef %72) #22, !dbg !11667
  call void @llvm.dbg.value(metadata i32 %73, metadata !11593, metadata !DIExpression()), !dbg !11599
  %74 = icmp eq i32 %73, 0, !dbg !11668
  br i1 %74, label %138, label %75, !dbg !11670

75:                                               ; preds = %71
  %76 = add i32 %73, %49, !dbg !11671
  call void @llvm.dbg.value(metadata i32 %76, metadata !11593, metadata !DIExpression()), !dbg !11599
  %77 = lshr i32 %41, 9, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %77, metadata !11596, metadata !DIExpression()), !dbg !11599
  %78 = icmp ult i32 %41, 512, !dbg !11673
  br i1 %78, label %101, label %79, !dbg !11675

79:                                               ; preds = %75
  %80 = add nuw nsw i32 %49, %77, !dbg !11676
  call void @llvm.dbg.value(metadata %struct.FATFS* %30, metadata !11591, metadata !DIExpression()), !dbg !11599
  %81 = load i16, i16* %31, align 2, !dbg !11679
  %82 = zext i16 %81 to i32, !dbg !11680
  %83 = icmp ugt i32 %80, %82, !dbg !11681
  %84 = sub nsw i32 %82, %49
  %85 = select i1 %83, i32 %84, i32 %77, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %85, metadata !11596, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata %struct.FATFS* %30, metadata !11591, metadata !DIExpression()), !dbg !11599
  %86 = load i8, i8* %35, align 1, !dbg !11683
  %87 = tail call i32 @disk_read(i8 noundef zeroext %86, i8* noundef %40, i32 noundef %76, i32 noundef %85) #20, !dbg !11685
  %88 = icmp eq i32 %87, 0, !dbg !11686
  br i1 %88, label %89, label %138, !dbg !11687

89:                                               ; preds = %79
  %90 = load i8, i8* %16, align 4, !dbg !11688
  %91 = icmp sgt i8 %90, -1, !dbg !11690
  br i1 %91, label %99, label %92, !dbg !11691

92:                                               ; preds = %89
  %93 = load i32, i32* %36, align 4, !dbg !11692
  %94 = sub i32 %93, %76, !dbg !11693
  %95 = icmp ult i32 %94, %85, !dbg !11694
  br i1 %95, label %96, label %99, !dbg !11695

96:                                               ; preds = %92
  %97 = shl i32 %94, 9, !dbg !11696
  %98 = getelementptr inbounds i8, i8* %40, i32 %97, !dbg !11698
  tail call fastcc void @mem_cpy(i8* noundef %98, i8* noundef nonnull %37, i32 noundef 512) #22, !dbg !11699
  br label %99, !dbg !11700

99:                                               ; preds = %96, %92, %89
  %100 = shl i32 %85, 9, !dbg !11701
  call void @llvm.dbg.value(metadata i32 %100, metadata !11595, metadata !DIExpression()), !dbg !11599
  br label %127, !dbg !11702

101:                                              ; preds = %75
  %102 = load i32, i32* %36, align 4, !dbg !11703
  %103 = icmp eq i32 %102, %76, !dbg !11705
  br i1 %103, label %118, label %104, !dbg !11706

104:                                              ; preds = %101
  %105 = load i8, i8* %16, align 4, !dbg !11707
  %106 = icmp sgt i8 %105, -1, !dbg !11710
  br i1 %106, label %114, label %107, !dbg !11711

107:                                              ; preds = %104
  call void @llvm.dbg.value(metadata %struct.FATFS* %30, metadata !11591, metadata !DIExpression()), !dbg !11599
  %108 = load i8, i8* %35, align 1, !dbg !11712
  %109 = tail call i32 @disk_write(i8 noundef zeroext %108, i8* noundef nonnull %37, i32 noundef %102, i32 noundef 1) #20, !dbg !11715
  %110 = icmp eq i32 %109, 0, !dbg !11716
  br i1 %110, label %111, label %138, !dbg !11717

111:                                              ; preds = %107
  %112 = load i8, i8* %16, align 4, !dbg !11718
  %113 = and i8 %112, 127, !dbg !11718
  store i8 %113, i8* %16, align 4, !dbg !11718
  br label %114, !dbg !11719

114:                                              ; preds = %111, %104
  call void @llvm.dbg.value(metadata %struct.FATFS* %30, metadata !11591, metadata !DIExpression()), !dbg !11599
  %115 = load i8, i8* %35, align 1, !dbg !11720
  %116 = tail call i32 @disk_read(i8 noundef zeroext %115, i8* noundef nonnull %37, i32 noundef %76, i32 noundef 1) #20, !dbg !11722
  %117 = icmp eq i32 %116, 0, !dbg !11723
  br i1 %117, label %118, label %138, !dbg !11724

118:                                              ; preds = %114, %101
  store i32 %76, i32* %36, align 4, !dbg !11725
  %119 = load i32, i32* %23, align 4, !dbg !11726
  %120 = and i32 %119, 511, !dbg !11727
  br label %121, !dbg !11728

121:                                              ; preds = %118, %38
  %122 = phi i32 [ %120, %118 ], [ %42, %38 ], !dbg !11727
  %123 = sub nuw nsw i32 512, %122, !dbg !11729
  call void @llvm.dbg.value(metadata i32 %123, metadata !11595, metadata !DIExpression()), !dbg !11599
  %124 = icmp ugt i32 %123, %41, !dbg !11730
  %125 = select i1 %124, i32 %41, i32 %123, !dbg !11732
  call void @llvm.dbg.value(metadata i32 %125, metadata !11595, metadata !DIExpression()), !dbg !11599
  %126 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 %122, !dbg !11733
  tail call fastcc void @mem_cpy(i8* noundef %40, i8* noundef nonnull %126, i32 noundef %125) #22, !dbg !11734
  br label %127, !dbg !11735

127:                                              ; preds = %121, %99
  %128 = phi i32 [ %100, %99 ], [ %125, %121 ], !dbg !11736
  call void @llvm.dbg.value(metadata i32 %128, metadata !11595, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata !DIArgList(i8* %40, i32 %128), metadata !11598, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !11599
  %129 = load i32, i32* %23, align 4, !dbg !11737
  %130 = add i32 %129, %128, !dbg !11737
  store i32 %130, i32* %23, align 4, !dbg !11737
  %131 = load i32, i32* %3, align 4, !dbg !11738
  %132 = add i32 %131, %128, !dbg !11738
  store i32 %132, i32* %3, align 4, !dbg !11738
  %133 = sub i32 %41, %128, !dbg !11739
  call void @llvm.dbg.value(metadata i32 %133, metadata !11588, metadata !DIExpression()), !dbg !11599
  %134 = icmp eq i32 %133, 0, !dbg !11621
  br i1 %134, label %141, label %135, !dbg !11621, !llvm.loop !11740

135:                                              ; preds = %127
  %136 = getelementptr inbounds i8, i8* %40, i32 %128, !dbg !11742
  call void @llvm.dbg.value(metadata i8* %136, metadata !11598, metadata !DIExpression()), !dbg !11599
  %137 = load i32, i32* %23, align 4, !dbg !11623
  br label %38, !dbg !11621

138:                                              ; preds = %114, %107, %79, %71, %68, %65
  %139 = phi i8 [ 2, %65 ], [ 1, %68 ], [ 2, %71 ], [ 1, %79 ], [ 1, %107 ], [ 1, %114 ]
  %140 = phi i32 [ 2, %65 ], [ 1, %68 ], [ 2, %71 ], [ 1, %79 ], [ 1, %107 ], [ 1, %114 ]
  store i8 %139, i8* %11, align 1, !dbg !11743
  br label %141, !dbg !11744

141:                                              ; preds = %127, %138, %20, %15, %4, %10
  %142 = phi i32 [ %8, %4 ], [ %13, %10 ], [ 7, %15 ], [ 0, %20 ], [ %140, %138 ], [ 0, %127 ], !dbg !11599
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !11744
  ret i32 %142, !dbg !11744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @validate(%struct._FDID* noundef readonly %0, %struct.FATFS** nocapture noundef writeonly %1) unnamed_addr #0 !dbg !11745 {
  call void @llvm.dbg.value(metadata %struct._FDID* %0, metadata !11749, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.value(metadata %struct.FATFS** %1, metadata !11750, metadata !DIExpression()), !dbg !11752
  %3 = icmp eq %struct._FDID* %0, null, !dbg !11753
  br i1 %3, label %26, label %4, !dbg !11755

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._FDID, %struct._FDID* %0, i32 0, i32 0, !dbg !11756
  %6 = load %struct.FATFS*, %struct.FATFS** %5, align 4, !dbg !11756
  %7 = icmp eq %struct.FATFS* %6, null, !dbg !11757
  br i1 %7, label %26, label %8, !dbg !11758

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %6, i32 0, i32 0, !dbg !11759
  %10 = load i8, i8* %9, align 4, !dbg !11759
  %11 = icmp eq i8 %10, 0, !dbg !11760
  br i1 %11, label %26, label %12, !dbg !11761

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %6, i32 0, i32 5, !dbg !11762
  %14 = load i16, i16* %13, align 2, !dbg !11762
  %15 = getelementptr inbounds %struct._FDID, %struct._FDID* %0, i32 0, i32 1, !dbg !11763
  %16 = load i16, i16* %15, align 4, !dbg !11763
  %17 = icmp eq i16 %14, %16, !dbg !11764
  br i1 %17, label %18, label %26, !dbg !11765

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %6, i32 0, i32 1, !dbg !11766
  %20 = load i8, i8* %19, align 1, !dbg !11766
  %21 = tail call zeroext i8 @disk_status(i8 noundef zeroext %20) #20, !dbg !11767
  %22 = and i8 %21, 1, !dbg !11768
  %23 = icmp eq i8 %22, 0, !dbg !11768
  br i1 %23, label %24, label %26, !dbg !11769

24:                                               ; preds = %18
  %25 = load %struct.FATFS*, %struct.FATFS** %5, align 4, !dbg !11770
  call void @llvm.dbg.value(metadata i32 0, metadata !11751, metadata !DIExpression()), !dbg !11752
  br label %26

26:                                               ; preds = %2, %4, %8, %12, %18, %24
  %27 = phi %struct.FATFS* [ %25, %24 ], [ null, %18 ], [ null, %12 ], [ null, %8 ], [ null, %4 ], [ null, %2 ], !dbg !11772
  %28 = phi i32 [ 0, %24 ], [ 9, %18 ], [ 9, %12 ], [ 9, %8 ], [ 9, %4 ], [ 9, %2 ], !dbg !11772
  store %struct.FATFS* %27, %struct.FATFS** %1, align 4, !dbg !11772
  call void @llvm.dbg.value(metadata i32 %28, metadata !11751, metadata !DIExpression()), !dbg !11752
  ret i32 %28, !dbg !11773
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc i32 @clmt_clust(%struct.FIL* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #12 !dbg !11774 {
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !11778, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %1, metadata !11779, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata %struct.FATFS* undef, metadata !11783, metadata !DIExpression()), !dbg !11784
  %3 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 8, !dbg !11785
  %4 = load i32*, i32** %3, align 4, !dbg !11785
  call void @llvm.dbg.value(metadata i32* %4, metadata !11782, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !11784
  call void @llvm.dbg.value(metadata i32 undef, metadata !11780, metadata !DIExpression()), !dbg !11784
  %5 = getelementptr inbounds i32, i32* %4, i32 1, !dbg !11784
  call void @llvm.dbg.value(metadata i32* %5, metadata !11782, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32* %4, metadata !11782, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !11784
  %6 = load i32, i32* %5, align 4, !dbg !11786
  call void @llvm.dbg.value(metadata i32 %6, metadata !11781, metadata !DIExpression()), !dbg !11784
  %7 = icmp eq i32 %6, 0, !dbg !11790
  br i1 %7, label %30, label %8, !dbg !11792

8:                                                ; preds = %2
  %9 = lshr i32 %1, 9, !dbg !11793
  %10 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 0, !dbg !11794
  %11 = load %struct.FATFS*, %struct.FATFS** %10, align 4, !dbg !11794
  call void @llvm.dbg.value(metadata %struct.FATFS* %11, metadata !11783, metadata !DIExpression()), !dbg !11784
  %12 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %11, i32 0, i32 7, !dbg !11795
  %13 = load i16, i16* %12, align 2, !dbg !11795
  %14 = zext i16 %13 to i32, !dbg !11796
  %15 = udiv i32 %9, %14, !dbg !11797
  call void @llvm.dbg.value(metadata i32 %15, metadata !11780, metadata !DIExpression()), !dbg !11784
  br label %16, !dbg !11798

16:                                               ; preds = %8, %22
  %17 = phi i32 [ %25, %22 ], [ %6, %8 ]
  %18 = phi i32* [ %20, %22 ], [ %4, %8 ]
  %19 = phi i32 [ %23, %22 ], [ %15, %8 ]
  %20 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %19, metadata !11780, metadata !DIExpression()), !dbg !11784
  %21 = icmp ult i32 %19, %17, !dbg !11800
  br i1 %21, label %27, label %22, !dbg !11802

22:                                               ; preds = %16
  %23 = sub i32 %19, %17, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %23, metadata !11780, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32* %20, metadata !11782, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !11784
  %24 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !11784
  call void @llvm.dbg.value(metadata i32* %24, metadata !11782, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32* %20, metadata !11782, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !11784
  %25 = load i32, i32* %24, align 4, !dbg !11786
  call void @llvm.dbg.value(metadata i32 %25, metadata !11781, metadata !DIExpression()), !dbg !11784
  %26 = icmp eq i32 %25, 0, !dbg !11790
  br i1 %26, label %30, label %16, !dbg !11792, !llvm.loop !11804

27:                                               ; preds = %16
  %28 = load i32, i32* %20, align 4, !dbg !11806
  %29 = add i32 %28, %19, !dbg !11807
  br label %30, !dbg !11808

30:                                               ; preds = %22, %2, %27
  %31 = phi i32 [ %29, %27 ], [ 0, %2 ], [ 0, %22 ], !dbg !11784
  ret i32 %31, !dbg !11809
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_write(%struct.FIL* noundef %0, i8* noundef %1, i32 noundef %2, i32* nocapture noundef %3) local_unnamed_addr #0 !dbg !11810 {
  %5 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !11814, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i8* %1, metadata !11815, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 %2, metadata !11816, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32* %3, metadata !11817, metadata !DIExpression()), !dbg !11826
  %6 = bitcast %struct.FATFS** %5 to i8*, !dbg !11827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !11827
  call void @llvm.dbg.value(metadata i8* %1, metadata !11825, metadata !DIExpression()), !dbg !11826
  store i32 0, i32* %3, align 4, !dbg !11828
  %7 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !11829
  call void @llvm.dbg.value(metadata %struct.FATFS** %5, metadata !11819, metadata !DIExpression(DW_OP_deref)), !dbg !11826
  %8 = call fastcc i32 @validate(%struct._FDID* noundef %7, %struct.FATFS** noundef nonnull %5) #22, !dbg !11830
  call void @llvm.dbg.value(metadata i32 %8, metadata !11818, metadata !DIExpression()), !dbg !11826
  %9 = icmp eq i32 %8, 0, !dbg !11831
  br i1 %9, label %10, label %158, !dbg !11833

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 2, !dbg !11834
  %12 = load i8, i8* %11, align 1, !dbg !11834
  %13 = zext i8 %12 to i32, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %13, metadata !11818, metadata !DIExpression()), !dbg !11826
  %14 = icmp eq i8 %12, 0, !dbg !11836
  br i1 %14, label %15, label %158, !dbg !11837

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !11838
  %17 = load i8, i8* %16, align 4, !dbg !11838
  %18 = and i8 %17, 2, !dbg !11840
  %19 = icmp eq i8 %18, 0, !dbg !11840
  br i1 %19, label %158, label %20, !dbg !11841

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 3, !dbg !11842
  %22 = load i32, i32* %21, align 4, !dbg !11842
  %23 = xor i32 %22, -1, !dbg !11844
  %24 = icmp ult i32 %23, %2, !dbg !11844
  %25 = select i1 %24, i32 %23, i32 %2, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %25, metadata !11816, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i8* %1, metadata !11825, metadata !DIExpression()), !dbg !11826
  %26 = icmp eq i32 %25, 0, !dbg !11846
  br i1 %26, label %155, label %27, !dbg !11846

27:                                               ; preds = %20
  %28 = load %struct.FATFS*, %struct.FATFS** %5, align 4
  %29 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %28, i32 0, i32 7
  %30 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 8
  %31 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4
  %32 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4
  %33 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %28, i32 0, i32 1
  %34 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0
  %35 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 5
  %36 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5
  br label %37, !dbg !11846

37:                                               ; preds = %150, %27
  %38 = phi i32 [ %22, %27 ], [ %152, %150 ], !dbg !11848
  %39 = phi i8* [ %1, %27 ], [ %151, %150 ]
  %40 = phi i32 [ %25, %27 ], [ %148, %150 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !11825, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 %40, metadata !11816, metadata !DIExpression()), !dbg !11826
  %41 = and i32 %38, 511, !dbg !11852
  %42 = icmp eq i32 %41, 0, !dbg !11853
  br i1 %42, label %43, label %131, !dbg !11854

43:                                               ; preds = %37
  %44 = lshr i32 %38, 9, !dbg !11855
  call void @llvm.dbg.value(metadata %struct.FATFS* %28, metadata !11819, metadata !DIExpression()), !dbg !11826
  %45 = load i16, i16* %29, align 2, !dbg !11857
  %46 = zext i16 %45 to i32, !dbg !11858
  %47 = add nuw nsw i32 %46, 8388607, !dbg !11859
  %48 = and i32 %47, %44, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %48, metadata !11824, metadata !DIExpression()), !dbg !11826
  %49 = icmp eq i32 %48, 0, !dbg !11861
  br i1 %49, label %50, label %73, !dbg !11863

50:                                               ; preds = %43
  %51 = icmp eq i32 %38, 0, !dbg !11864
  br i1 %51, label %52, label %57, !dbg !11867

52:                                               ; preds = %50
  %53 = load i32, i32* %32, align 4, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %53, metadata !11820, metadata !DIExpression()), !dbg !11826
  %54 = icmp eq i32 %53, 0, !dbg !11870
  br i1 %54, label %55, label %65, !dbg !11872

55:                                               ; preds = %52
  %56 = tail call fastcc i32 @create_chain(%struct._FDID* noundef nonnull %7, i32 noundef 0) #22, !dbg !11873
  call void @llvm.dbg.value(metadata i32 %56, metadata !11820, metadata !DIExpression()), !dbg !11826
  br label %65, !dbg !11875

57:                                               ; preds = %50
  %58 = load i32*, i32** %30, align 4, !dbg !11876
  %59 = icmp eq i32* %58, null, !dbg !11879
  br i1 %59, label %62, label %60, !dbg !11880

60:                                               ; preds = %57
  %61 = tail call fastcc i32 @clmt_clust(%struct.FIL* noundef nonnull %0, i32 noundef %38) #22, !dbg !11881
  call void @llvm.dbg.value(metadata i32 %61, metadata !11820, metadata !DIExpression()), !dbg !11826
  br label %65, !dbg !11883

62:                                               ; preds = %57
  %63 = load i32, i32* %31, align 4, !dbg !11884
  %64 = tail call fastcc i32 @create_chain(%struct._FDID* noundef nonnull %7, i32 noundef %63) #22, !dbg !11886
  call void @llvm.dbg.value(metadata i32 %64, metadata !11820, metadata !DIExpression()), !dbg !11826
  br label %65

65:                                               ; preds = %60, %62, %52, %55
  %66 = phi i32 [ %56, %55 ], [ %53, %52 ], [ %61, %60 ], [ %64, %62 ], !dbg !11887
  call void @llvm.dbg.value(metadata i32 %66, metadata !11820, metadata !DIExpression()), !dbg !11826
  switch i32 %66, label %69 [
    i32 0, label %153
    i32 1, label %67
    i32 -1, label %68
  ], !dbg !11888

67:                                               ; preds = %65
  store i8 2, i8* %11, align 1, !dbg !11889
  br label %158, !dbg !11889

68:                                               ; preds = %65
  store i8 1, i8* %11, align 1, !dbg !11892
  br label %158, !dbg !11892

69:                                               ; preds = %65
  store i32 %66, i32* %31, align 4, !dbg !11895
  %70 = load i32, i32* %32, align 4, !dbg !11896
  %71 = icmp eq i32 %70, 0, !dbg !11898
  br i1 %71, label %72, label %73, !dbg !11899

72:                                               ; preds = %69
  store i32 %66, i32* %32, align 4, !dbg !11900
  br label %73, !dbg !11901

73:                                               ; preds = %69, %72, %43
  %74 = load i8, i8* %16, align 4, !dbg !11902
  %75 = icmp sgt i8 %74, -1, !dbg !11904
  br i1 %75, label %85, label %76, !dbg !11905

76:                                               ; preds = %73
  call void @llvm.dbg.value(metadata %struct.FATFS* %28, metadata !11819, metadata !DIExpression()), !dbg !11826
  %77 = load i8, i8* %33, align 1, !dbg !11906
  %78 = load i32, i32* %35, align 4, !dbg !11909
  %79 = tail call i32 @disk_write(i8 noundef zeroext %77, i8* noundef nonnull %34, i32 noundef %78, i32 noundef 1) #20, !dbg !11910
  %80 = icmp eq i32 %79, 0, !dbg !11911
  br i1 %80, label %82, label %81, !dbg !11912

81:                                               ; preds = %76
  store i8 1, i8* %11, align 1, !dbg !11913
  br label %158, !dbg !11913

82:                                               ; preds = %76
  %83 = load i8, i8* %16, align 4, !dbg !11915
  %84 = and i8 %83, 127, !dbg !11915
  store i8 %84, i8* %16, align 4, !dbg !11915
  br label %85, !dbg !11916

85:                                               ; preds = %82, %73
  call void @llvm.dbg.value(metadata %struct.FATFS* %28, metadata !11819, metadata !DIExpression()), !dbg !11826
  %86 = load i32, i32* %31, align 4, !dbg !11917
  %87 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %28, i32 noundef %86) #22, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %87, metadata !11821, metadata !DIExpression()), !dbg !11826
  %88 = icmp eq i32 %87, 0, !dbg !11919
  br i1 %88, label %89, label %90, !dbg !11921

89:                                               ; preds = %85
  store i8 2, i8* %11, align 1, !dbg !11922
  br label %158, !dbg !11922

90:                                               ; preds = %85
  %91 = add i32 %87, %48, !dbg !11924
  call void @llvm.dbg.value(metadata i32 %91, metadata !11821, metadata !DIExpression()), !dbg !11826
  %92 = lshr i32 %40, 9, !dbg !11925
  call void @llvm.dbg.value(metadata i32 %92, metadata !11823, metadata !DIExpression()), !dbg !11826
  %93 = icmp ult i32 %40, 512, !dbg !11926
  br i1 %93, label %116, label %94, !dbg !11928

94:                                               ; preds = %90
  %95 = add nuw nsw i32 %48, %92, !dbg !11929
  call void @llvm.dbg.value(metadata %struct.FATFS* %28, metadata !11819, metadata !DIExpression()), !dbg !11826
  %96 = load i16, i16* %29, align 2, !dbg !11932
  %97 = zext i16 %96 to i32, !dbg !11933
  %98 = icmp ugt i32 %95, %97, !dbg !11934
  %99 = sub nsw i32 %97, %48
  %100 = select i1 %98, i32 %99, i32 %92, !dbg !11935
  call void @llvm.dbg.value(metadata i32 %100, metadata !11823, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata %struct.FATFS* %28, metadata !11819, metadata !DIExpression()), !dbg !11826
  %101 = load i8, i8* %33, align 1, !dbg !11936
  %102 = tail call i32 @disk_write(i8 noundef zeroext %101, i8* noundef %39, i32 noundef %91, i32 noundef %100) #20, !dbg !11938
  %103 = icmp eq i32 %102, 0, !dbg !11939
  br i1 %103, label %105, label %104, !dbg !11940

104:                                              ; preds = %94
  store i8 1, i8* %11, align 1, !dbg !11941
  br label %158, !dbg !11941

105:                                              ; preds = %94
  %106 = load i32, i32* %35, align 4, !dbg !11943
  %107 = sub i32 %106, %91, !dbg !11945
  %108 = icmp ult i32 %107, %100, !dbg !11946
  br i1 %108, label %109, label %114, !dbg !11947

109:                                              ; preds = %105
  %110 = shl i32 %107, 9, !dbg !11948
  %111 = getelementptr inbounds i8, i8* %39, i32 %110, !dbg !11950
  tail call fastcc void @mem_cpy(i8* noundef nonnull %34, i8* noundef %111, i32 noundef 512) #22, !dbg !11951
  %112 = load i8, i8* %16, align 4, !dbg !11952
  %113 = and i8 %112, 127, !dbg !11952
  store i8 %113, i8* %16, align 4, !dbg !11952
  br label %114, !dbg !11953

114:                                              ; preds = %109, %105
  %115 = shl i32 %100, 9, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %115, metadata !11822, metadata !DIExpression()), !dbg !11826
  br label %139, !dbg !11955

116:                                              ; preds = %90
  %117 = load i32, i32* %35, align 4, !dbg !11956
  %118 = icmp eq i32 %117, %91, !dbg !11958
  br i1 %118, label %128, label %119, !dbg !11959

119:                                              ; preds = %116
  %120 = load i32, i32* %21, align 4, !dbg !11960
  %121 = load i32, i32* %36, align 4, !dbg !11961
  %122 = icmp ult i32 %120, %121, !dbg !11962
  br i1 %122, label %123, label %128, !dbg !11963

123:                                              ; preds = %119
  call void @llvm.dbg.value(metadata %struct.FATFS* %28, metadata !11819, metadata !DIExpression()), !dbg !11826
  %124 = load i8, i8* %33, align 1, !dbg !11964
  %125 = tail call i32 @disk_read(i8 noundef zeroext %124, i8* noundef nonnull %34, i32 noundef %91, i32 noundef 1) #20, !dbg !11965
  %126 = icmp eq i32 %125, 0, !dbg !11966
  br i1 %126, label %128, label %127, !dbg !11967

127:                                              ; preds = %123
  store i8 1, i8* %11, align 1, !dbg !11968
  br label %158, !dbg !11968

128:                                              ; preds = %123, %119, %116
  store i32 %91, i32* %35, align 4, !dbg !11971
  %129 = load i32, i32* %21, align 4, !dbg !11972
  %130 = and i32 %129, 511, !dbg !11973
  br label %131, !dbg !11974

131:                                              ; preds = %128, %37
  %132 = phi i32 [ %130, %128 ], [ %41, %37 ], !dbg !11973
  %133 = sub nuw nsw i32 512, %132, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %133, metadata !11822, metadata !DIExpression()), !dbg !11826
  %134 = icmp ugt i32 %133, %40, !dbg !11976
  %135 = select i1 %134, i32 %40, i32 %133, !dbg !11978
  call void @llvm.dbg.value(metadata i32 %135, metadata !11822, metadata !DIExpression()), !dbg !11826
  %136 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 %132, !dbg !11979
  tail call fastcc void @mem_cpy(i8* noundef nonnull %136, i8* noundef %39, i32 noundef %135) #22, !dbg !11980
  %137 = load i8, i8* %16, align 4, !dbg !11981
  %138 = or i8 %137, -128, !dbg !11981
  store i8 %138, i8* %16, align 4, !dbg !11981
  br label %139, !dbg !11982

139:                                              ; preds = %131, %114
  %140 = phi i32 [ %115, %114 ], [ %135, %131 ], !dbg !11983
  call void @llvm.dbg.value(metadata i32 %140, metadata !11822, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata !DIArgList(i8* %39, i32 %140), metadata !11825, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !11826
  %141 = load i32, i32* %21, align 4, !dbg !11984
  %142 = add i32 %141, %140, !dbg !11984
  store i32 %142, i32* %21, align 4, !dbg !11984
  %143 = load i32, i32* %36, align 4, !dbg !11985
  %144 = icmp ugt i32 %142, %143, !dbg !11986
  %145 = select i1 %144, i32 %142, i32 %143, !dbg !11987
  store i32 %145, i32* %36, align 4, !dbg !11988
  %146 = load i32, i32* %3, align 4, !dbg !11989
  %147 = add i32 %146, %140, !dbg !11989
  store i32 %147, i32* %3, align 4, !dbg !11989
  %148 = sub i32 %40, %140, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %148, metadata !11816, metadata !DIExpression()), !dbg !11826
  %149 = icmp eq i32 %148, 0, !dbg !11846
  br i1 %149, label %153, label %150, !dbg !11846, !llvm.loop !11991

150:                                              ; preds = %139
  %151 = getelementptr inbounds i8, i8* %39, i32 %140, !dbg !11993
  call void @llvm.dbg.value(metadata i8* %151, metadata !11825, metadata !DIExpression()), !dbg !11826
  %152 = load i32, i32* %21, align 4, !dbg !11848
  br label %37, !dbg !11846

153:                                              ; preds = %65, %139
  %154 = load i8, i8* %16, align 4, !dbg !11994
  br label %155, !dbg !11994

155:                                              ; preds = %153, %20
  %156 = phi i8 [ %154, %153 ], [ %17, %20 ], !dbg !11994
  %157 = or i8 %156, 64, !dbg !11994
  store i8 %157, i8* %16, align 4, !dbg !11994
  br label %158, !dbg !11995

158:                                              ; preds = %15, %4, %10, %155, %127, %104, %89, %81, %68, %67
  %159 = phi i32 [ 0, %155 ], [ 2, %67 ], [ 1, %68 ], [ 1, %81 ], [ 1, %104 ], [ 1, %127 ], [ 2, %89 ], [ %8, %4 ], [ %13, %10 ], [ 7, %15 ], !dbg !11826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !11996
  ret i32 %159, !dbg !11996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_sync(%struct.FIL* noundef %0) local_unnamed_addr #0 !dbg !11997 {
  %2 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !12001, metadata !DIExpression()), !dbg !12006
  %3 = bitcast %struct.FATFS** %2 to i8*, !dbg !12007
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12007
  %4 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !12008
  call void @llvm.dbg.value(metadata %struct.FATFS** %2, metadata !12003, metadata !DIExpression(DW_OP_deref)), !dbg !12006
  %5 = call fastcc i32 @validate(%struct._FDID* noundef %4, %struct.FATFS** noundef nonnull %2) #22, !dbg !12009
  call void @llvm.dbg.value(metadata i32 %5, metadata !12002, metadata !DIExpression()), !dbg !12006
  %6 = icmp eq i32 %5, 0, !dbg !12010
  br i1 %6, label %7, label %52, !dbg !12012

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !12013
  %9 = load i8, i8* %8, align 4, !dbg !12013
  %10 = zext i8 %9 to i32, !dbg !12016
  %11 = and i32 %10, 64, !dbg !12017
  %12 = icmp eq i32 %11, 0, !dbg !12017
  br i1 %12, label %52, label %13, !dbg !12018

13:                                               ; preds = %7
  %14 = and i32 %10, 128, !dbg !12019
  %15 = icmp eq i32 %14, 0, !dbg !12019
  %16 = load %struct.FATFS*, %struct.FATFS** %2, align 4, !dbg !12022
  br i1 %15, label %28, label %17, !dbg !12023

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata %struct.FATFS* %16, metadata !12003, metadata !DIExpression()), !dbg !12006
  %18 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %16, i32 0, i32 1, !dbg !12024
  %19 = load i8, i8* %18, align 1, !dbg !12024
  %20 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0, !dbg !12027
  %21 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 5, !dbg !12028
  %22 = load i32, i32* %21, align 4, !dbg !12028
  %23 = tail call i32 @disk_write(i8 noundef zeroext %19, i8* noundef nonnull %20, i32 noundef %22, i32 noundef 1) #20, !dbg !12029
  %24 = icmp eq i32 %23, 0, !dbg !12030
  br i1 %24, label %25, label %52, !dbg !12031

25:                                               ; preds = %17
  %26 = load i8, i8* %8, align 4, !dbg !12032
  %27 = and i8 %26, 127, !dbg !12032
  store i8 %27, i8* %8, align 4, !dbg !12032
  br label %28, !dbg !12033

28:                                               ; preds = %13, %25
  call void @llvm.dbg.value(metadata i32 1212219392, metadata !12004, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata %struct.FATFS* %16, metadata !12003, metadata !DIExpression()), !dbg !12006
  %29 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 6, !dbg !12034
  %30 = load i32, i32* %29, align 4, !dbg !12034
  %31 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %16, i32 noundef %30) #22, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %31, metadata !12002, metadata !DIExpression()), !dbg !12006
  %32 = icmp eq i32 %31, 0, !dbg !12037
  br i1 %32, label %33, label %52, !dbg !12039

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 7, !dbg !12040
  %35 = load i8*, i8** %34, align 4, !dbg !12040
  call void @llvm.dbg.value(metadata i8* %35, metadata !12005, metadata !DIExpression()), !dbg !12006
  %36 = getelementptr inbounds i8, i8* %35, i32 11, !dbg !12042
  %37 = load i8, i8* %36, align 1, !dbg !12043
  %38 = or i8 %37, 32, !dbg !12043
  store i8 %38, i8* %36, align 1, !dbg !12043
  %39 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 0, !dbg !12044
  %40 = load %struct.FATFS*, %struct.FATFS** %39, align 4, !dbg !12044
  %41 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4, !dbg !12045
  %42 = load i32, i32* %41, align 4, !dbg !12045
  tail call fastcc void @st_clust(%struct.FATFS* noundef %40, i8* noundef %35, i32 noundef %42) #22, !dbg !12046
  %43 = getelementptr inbounds i8, i8* %35, i32 28, !dbg !12047
  %44 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5, !dbg !12048
  %45 = load i32, i32* %44, align 4, !dbg !12048
  tail call fastcc void @st_dword(i8* noundef nonnull %43, i32 noundef %45) #22, !dbg !12049
  %46 = getelementptr inbounds i8, i8* %35, i32 22, !dbg !12050
  tail call fastcc void @st_dword(i8* noundef nonnull %46, i32 noundef 1212219392) #22, !dbg !12051
  %47 = getelementptr inbounds i8, i8* %35, i32 18, !dbg !12052
  tail call fastcc void @st_word(i8* noundef nonnull %47, i16 noundef zeroext 0) #22, !dbg !12053
  call void @llvm.dbg.value(metadata %struct.FATFS* %16, metadata !12003, metadata !DIExpression()), !dbg !12006
  %48 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %16, i32 0, i32 3, !dbg !12054
  store i8 1, i8* %48, align 1, !dbg !12055
  call void @llvm.dbg.value(metadata %struct.FATFS* %16, metadata !12003, metadata !DIExpression()), !dbg !12006
  %49 = tail call fastcc i32 @sync_fs(%struct.FATFS* noundef %16) #22, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %49, metadata !12002, metadata !DIExpression()), !dbg !12006
  %50 = load i8, i8* %8, align 4, !dbg !12057
  %51 = and i8 %50, -65, !dbg !12057
  store i8 %51, i8* %8, align 4, !dbg !12057
  br label %52, !dbg !12058

52:                                               ; preds = %1, %28, %33, %7, %17
  %53 = phi i32 [ 1, %17 ], [ %49, %33 ], [ %31, %28 ], [ 0, %7 ], [ %5, %1 ], !dbg !12006
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12059
  ret i32 %53, !dbg !12059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @sync_fs(%struct.FATFS* noundef %0) unnamed_addr #0 !dbg !12060 {
  call void @llvm.dbg.value(metadata %struct.FATFS* %0, metadata !12062, metadata !DIExpression()), !dbg !12064
  %2 = tail call fastcc i32 @sync_window(%struct.FATFS* noundef %0) #22, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %2, metadata !12063, metadata !DIExpression()), !dbg !12064
  %3 = icmp eq i32 %2, 0, !dbg !12066
  br i1 %3, label %4, label %35, !dbg !12068

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 0, !dbg !12069
  %6 = load i8, i8* %5, align 4, !dbg !12069
  %7 = icmp eq i8 %6, 3, !dbg !12072
  br i1 %7, label %8, label %29, !dbg !12073

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 4, !dbg !12074
  %10 = load i8, i8* %9, align 4, !dbg !12074
  %11 = icmp eq i8 %10, 1, !dbg !12075
  br i1 %11, label %12, label %29, !dbg !12076

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 0, !dbg !12077
  tail call fastcc void @mem_set(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 512) #22, !dbg !12079
  %14 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 510, !dbg !12080
  tail call fastcc void @st_word(i8* noundef nonnull %14, i16 noundef zeroext -21931) #22, !dbg !12081
  tail call fastcc void @st_dword(i8* noundef nonnull %13, i32 noundef 1096897106) #22, !dbg !12082
  %15 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 484, !dbg !12083
  tail call fastcc void @st_dword(i8* noundef nonnull %15, i32 noundef 1631679090) #22, !dbg !12084
  %16 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 488, !dbg !12085
  %17 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 9, !dbg !12086
  %18 = load i32, i32* %17, align 4, !dbg !12086
  tail call fastcc void @st_dword(i8* noundef nonnull %16, i32 noundef %18) #22, !dbg !12087
  %19 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 18, i32 492, !dbg !12088
  %20 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 8, !dbg !12089
  %21 = load i32, i32* %20, align 4, !dbg !12089
  tail call fastcc void @st_dword(i8* noundef nonnull %19, i32 noundef %21) #22, !dbg !12090
  %22 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 13, !dbg !12091
  %23 = load i32, i32* %22, align 4, !dbg !12091
  %24 = add i32 %23, 1, !dbg !12092
  %25 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 17, !dbg !12093
  store i32 %24, i32* %25, align 4, !dbg !12094
  %26 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 1, !dbg !12095
  %27 = load i8, i8* %26, align 1, !dbg !12095
  %28 = tail call i32 @disk_write(i8 noundef zeroext %27, i8* noundef nonnull %13, i32 noundef %24, i32 noundef 1) #20, !dbg !12096
  store i8 0, i8* %9, align 4, !dbg !12097
  br label %29, !dbg !12098

29:                                               ; preds = %12, %8, %4
  %30 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %0, i32 0, i32 1, !dbg !12099
  %31 = load i8, i8* %30, align 1, !dbg !12099
  %32 = tail call i32 @disk_ioctl(i8 noundef zeroext %31, i8 noundef zeroext 0, i8* noundef null) #20, !dbg !12101
  %33 = icmp ne i32 %32, 0, !dbg !12102
  %34 = zext i1 %33 to i32, !dbg !12103
  br label %35, !dbg !12103

35:                                               ; preds = %29, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %29 ], !dbg !12064
  call void @llvm.dbg.value(metadata i32 %36, metadata !12063, metadata !DIExpression()), !dbg !12064
  ret i32 %36, !dbg !12104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_close(%struct.FIL* noundef %0) local_unnamed_addr #0 !dbg !12105 {
  %2 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !12107, metadata !DIExpression()), !dbg !12110
  %3 = bitcast %struct.FATFS** %2 to i8*, !dbg !12111
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12111
  %4 = tail call i32 @f_sync(%struct.FIL* noundef %0) #22, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %4, metadata !12108, metadata !DIExpression()), !dbg !12110
  %5 = icmp eq i32 %4, 0, !dbg !12113
  br i1 %5, label %6, label %12, !dbg !12115

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !12116
  call void @llvm.dbg.value(metadata %struct.FATFS** %2, metadata !12109, metadata !DIExpression(DW_OP_deref)), !dbg !12110
  %8 = call fastcc i32 @validate(%struct._FDID* noundef %7, %struct.FATFS** noundef nonnull %2) #22, !dbg !12118
  call void @llvm.dbg.value(metadata i32 %8, metadata !12108, metadata !DIExpression()), !dbg !12110
  %9 = icmp eq i32 %8, 0, !dbg !12119
  br i1 %9, label %10, label %12, !dbg !12121

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 0, !dbg !12122
  store %struct.FATFS* null, %struct.FATFS** %11, align 4, !dbg !12125
  br label %12, !dbg !12126

12:                                               ; preds = %6, %10, %1
  %13 = phi i32 [ 0, %10 ], [ %8, %6 ], [ %4, %1 ], !dbg !12110
  call void @llvm.dbg.value(metadata i32 %13, metadata !12108, metadata !DIExpression()), !dbg !12110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12127
  ret i32 %13, !dbg !12128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_chdir(i8* noundef %0) local_unnamed_addr #0 !dbg !12129 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.DIR, align 4
  %4 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12131, metadata !DIExpression()), !dbg !12135
  store i8* %0, i8** %2, align 4
  %5 = bitcast %struct.DIR* %3 to i8*, !dbg !12136
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #19, !dbg !12136
  call void @llvm.dbg.declare(metadata %struct.DIR* %3, metadata !12133, metadata !DIExpression()), !dbg !12137
  %6 = bitcast %struct.FATFS** %4 to i8*, !dbg !12138
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !12138
  call void @llvm.dbg.value(metadata i8** %2, metadata !12131, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.dbg.value(metadata %struct.FATFS** %4, metadata !12134, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  %7 = call fastcc i32 @find_volume(i8** noundef nonnull %2, %struct.FATFS** noundef nonnull %4, i8 noundef zeroext 0) #22, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %7, metadata !12132, metadata !DIExpression()), !dbg !12135
  %8 = icmp eq i32 %7, 0, !dbg !12140
  br i1 %8, label %9, label %33, !dbg !12142

9:                                                ; preds = %1
  %10 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !12143
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !12134, metadata !DIExpression()), !dbg !12135
  %11 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 0, !dbg !12145
  store %struct.FATFS* %10, %struct.FATFS** %11, align 4, !dbg !12146
  %12 = load i8*, i8** %2, align 4, !dbg !12147
  call void @llvm.dbg.value(metadata i8* %12, metadata !12131, metadata !DIExpression()), !dbg !12135
  %13 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %3, i8* noundef %12) #22, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %13, metadata !12132, metadata !DIExpression()), !dbg !12135
  switch i32 %13, label %33 [
    i32 0, label %14
    i32 4, label %32
  ], !dbg !12149

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 5, i32 11, !dbg !12150
  %16 = load i8, i8* %15, align 1, !dbg !12150
  %17 = icmp sgt i8 %16, -1, !dbg !12154
  br i1 %17, label %22, label %18, !dbg !12155

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 4, !dbg !12156
  %20 = load i32, i32* %19, align 4, !dbg !12156
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !12134, metadata !DIExpression()), !dbg !12135
  %21 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 10, !dbg !12158
  store i32 %20, i32* %21, align 4, !dbg !12159
  br label %33, !dbg !12160

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 2, !dbg !12161
  %24 = load i8, i8* %23, align 2, !dbg !12161
  %25 = and i8 %24, 16, !dbg !12164
  %26 = icmp eq i8 %25, 0, !dbg !12164
  br i1 %26, label %33, label %27, !dbg !12165

27:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !12134, metadata !DIExpression()), !dbg !12135
  %28 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 4, !dbg !12166
  %29 = load i8*, i8** %28, align 4, !dbg !12166
  %30 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %10, i8* noundef %29) #22, !dbg !12169
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !12134, metadata !DIExpression()), !dbg !12135
  %31 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 10, !dbg !12170
  store i32 %30, i32* %31, align 4, !dbg !12171
  br label %33, !dbg !12172

32:                                               ; preds = %9
  br label %33, !dbg !12173

33:                                               ; preds = %9, %22, %27, %18, %32, %1
  %34 = phi i32 [ %7, %1 ], [ 5, %32 ], [ 5, %22 ], [ 0, %27 ], [ 0, %18 ], [ %13, %9 ], !dbg !12135
  call void @llvm.dbg.value(metadata i32 %34, metadata !12132, metadata !DIExpression()), !dbg !12135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !12174
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #19, !dbg !12174
  ret i32 %34, !dbg !12175
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_getcwd(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12176 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.DIR, align 4
  %5 = alloca %struct.FATFS*, align 4
  %6 = alloca %struct.FILINFO, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12181, metadata !DIExpression()), !dbg !12200
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.value(metadata i32 %1, metadata !12182, metadata !DIExpression()), !dbg !12200
  %7 = bitcast %struct.DIR* %4 to i8*, !dbg !12201
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #19, !dbg !12201
  call void @llvm.dbg.declare(metadata %struct.DIR* %4, metadata !12184, metadata !DIExpression()), !dbg !12202
  %8 = bitcast %struct.FATFS** %5 to i8*, !dbg !12203
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !12203
  %9 = bitcast %struct.FILINFO* %6 to i8*, !dbg !12204
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #19, !dbg !12204
  call void @llvm.dbg.declare(metadata %struct.FILINFO* %6, metadata !12190, metadata !DIExpression()), !dbg !12205
  call void @llvm.dbg.value(metadata i8* %0, metadata !12181, metadata !DIExpression()), !dbg !12200
  store i8 0, i8* %0, align 1, !dbg !12206
  call void @llvm.dbg.value(metadata i8** %3, metadata !12181, metadata !DIExpression(DW_OP_deref)), !dbg !12200
  call void @llvm.dbg.value(metadata %struct.FATFS** %5, metadata !12185, metadata !DIExpression(DW_OP_deref)), !dbg !12200
  %10 = call fastcc i32 @find_volume(i8** noundef nonnull %3, %struct.FATFS** noundef nonnull %5, i8 noundef zeroext 0) #22, !dbg !12207
  call void @llvm.dbg.value(metadata i32 %10, metadata !12183, metadata !DIExpression()), !dbg !12200
  %11 = icmp eq i32 %10, 0, !dbg !12208
  br i1 %11, label %12, label %96, !dbg !12210

12:                                               ; preds = %2
  %13 = load %struct.FATFS*, %struct.FATFS** %5, align 4, !dbg !12211
  call void @llvm.dbg.value(metadata %struct.FATFS* %13, metadata !12185, metadata !DIExpression()), !dbg !12200
  %14 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 0, i32 0, !dbg !12213
  store %struct.FATFS* %13, %struct.FATFS** %14, align 4, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %1, metadata !12186, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata %struct.FATFS* %13, metadata !12185, metadata !DIExpression()), !dbg !12200
  %15 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %13, i32 0, i32 10, !dbg !12215
  %16 = load i32, i32* %15, align 4, !dbg !12215
  %17 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 0, i32 4, !dbg !12218
  store i32 %16, i32* %17, align 4, !dbg !12219
  call void @llvm.dbg.value(metadata i32 0, metadata !12183, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 %1, metadata !12186, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 %16, metadata !12188, metadata !DIExpression()), !dbg !12200
  %18 = icmp eq i32 %16, 0, !dbg !12220
  br i1 %18, label %19, label %21, !dbg !12221

19:                                               ; preds = %12
  %20 = load i8*, i8** %3, align 4, !dbg !12222
  call void @llvm.dbg.value(metadata i32 0, metadata !12183, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i8* %24, metadata !12181, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i8* %24, metadata !12189, metadata !DIExpression()), !dbg !12200
  br label %82, !dbg !12223

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 3
  %23 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 4
  %24 = load i8*, i8** %3, align 4
  br label %25, !dbg !12221

25:                                               ; preds = %21, %74
  %26 = phi i32 [ %1, %21 ], [ %76, %74 ]
  %27 = phi i32 [ %16, %21 ], [ %78, %74 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !12186, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 %27, metadata !12188, metadata !DIExpression()), !dbg !12200
  %28 = call fastcc i32 @dir_sdi(%struct.DIR* noundef nonnull %4, i32 noundef 32) #22, !dbg !12226
  call void @llvm.dbg.value(metadata i32 %28, metadata !12183, metadata !DIExpression()), !dbg !12200
  %29 = icmp eq i32 %28, 0, !dbg !12228
  br i1 %29, label %30, label %93, !dbg !12230

30:                                               ; preds = %25
  call void @llvm.dbg.value(metadata %struct.FATFS* %13, metadata !12185, metadata !DIExpression()), !dbg !12200
  %31 = load i32, i32* %22, align 4, !dbg !12231
  %32 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %13, i32 noundef %31) #22, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %32, metadata !12183, metadata !DIExpression()), !dbg !12200
  %33 = icmp eq i32 %32, 0, !dbg !12233
  br i1 %33, label %34, label %93, !dbg !12235

34:                                               ; preds = %30
  call void @llvm.dbg.value(metadata %struct.FATFS* %13, metadata !12185, metadata !DIExpression()), !dbg !12200
  %35 = load i8*, i8** %23, align 4, !dbg !12236
  %36 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %13, i8* noundef %35) #22, !dbg !12237
  store i32 %36, i32* %17, align 4, !dbg !12238
  %37 = call fastcc i32 @dir_sdi(%struct.DIR* noundef nonnull %4, i32 noundef 0) #22, !dbg !12239
  call void @llvm.dbg.value(metadata i32 %37, metadata !12183, metadata !DIExpression()), !dbg !12200
  %38 = icmp eq i32 %37, 0, !dbg !12240
  br i1 %38, label %39, label %93, !dbg !12242

39:                                               ; preds = %34, %46
  %40 = call fastcc i32 @dir_read(%struct.DIR* noundef nonnull %4, i32 noundef 0) #22, !dbg !12243
  call void @llvm.dbg.value(metadata i32 %40, metadata !12183, metadata !DIExpression()), !dbg !12200
  %41 = icmp eq i32 %40, 0, !dbg !12245
  br i1 %41, label %42, label %49, !dbg !12247

42:                                               ; preds = %39
  call void @llvm.dbg.value(metadata %struct.FATFS* %13, metadata !12185, metadata !DIExpression()), !dbg !12200
  %43 = load i8*, i8** %23, align 4, !dbg !12248
  %44 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %13, i8* noundef %43) #22, !dbg !12250
  %45 = icmp eq i32 %27, %44, !dbg !12251
  br i1 %45, label %53, label %46, !dbg !12252

46:                                               ; preds = %42
  %47 = call fastcc i32 @dir_next(%struct.DIR* noundef nonnull %4, i32 noundef 0) #22, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %47, metadata !12183, metadata !DIExpression()), !dbg !12200
  %48 = icmp eq i32 %47, 0, !dbg !12254
  br i1 %48, label %39, label %49, !dbg !12255, !llvm.loop !12256

49:                                               ; preds = %39, %46
  %50 = phi i32 [ %40, %39 ], [ %47, %46 ], !dbg !12259
  call void @llvm.dbg.value(metadata i32 %50, metadata !12183, metadata !DIExpression()), !dbg !12200
  %51 = icmp eq i32 %50, 4, !dbg !12260
  %52 = select i1 %51, i32 2, i32 %50, !dbg !12262
  br label %93, !dbg !12262

53:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i32 0, metadata !12183, metadata !DIExpression()), !dbg !12200
  call fastcc void @get_fileinfo(%struct.DIR* noundef nonnull %4, %struct.FILINFO* noundef nonnull %6) #22, !dbg !12263
  call void @llvm.dbg.value(metadata i32 0, metadata !12187, metadata !DIExpression()), !dbg !12200
  br label %54, !dbg !12264

54:                                               ; preds = %54, %53
  %55 = phi i32 [ 0, %53 ], [ %59, %54 ], !dbg !12266
  call void @llvm.dbg.value(metadata i32 %55, metadata !12187, metadata !DIExpression()), !dbg !12200
  %56 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %6, i32 0, i32 4, i32 %55, !dbg !12267
  %57 = load i8, i8* %56, align 1, !dbg !12267
  %58 = icmp eq i8 %57, 0, !dbg !12269
  %59 = add i32 %55, 1, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %59, metadata !12187, metadata !DIExpression()), !dbg !12200
  br i1 %58, label %60, label %54, !dbg !12269, !llvm.loop !12271

60:                                               ; preds = %54
  %61 = add i32 %55, 3, !dbg !12273
  %62 = icmp ult i32 %26, %61, !dbg !12275
  br i1 %62, label %93, label %63, !dbg !12276

63:                                               ; preds = %60
  call void @llvm.dbg.value(metadata i32 %55, metadata !12187, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 %26, metadata !12186, metadata !DIExpression()), !dbg !12200
  %64 = icmp eq i32 %55, 0, !dbg !12277
  br i1 %64, label %74, label %65, !dbg !12277

65:                                               ; preds = %63, %65
  %66 = phi i32 [ %68, %65 ], [ %55, %63 ]
  %67 = phi i32 [ %71, %65 ], [ %26, %63 ]
  call void @llvm.dbg.value(metadata i32 %66, metadata !12187, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 %67, metadata !12186, metadata !DIExpression()), !dbg !12200
  %68 = add i32 %66, -1, !dbg !12278
  call void @llvm.dbg.value(metadata i32 %68, metadata !12187, metadata !DIExpression()), !dbg !12200
  %69 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %6, i32 0, i32 4, i32 %68, !dbg !12279
  %70 = load i8, i8* %69, align 1, !dbg !12279
  call void @llvm.dbg.value(metadata i8* %24, metadata !12181, metadata !DIExpression()), !dbg !12200
  %71 = add i32 %67, -1, !dbg !12280
  call void @llvm.dbg.value(metadata i32 %71, metadata !12186, metadata !DIExpression()), !dbg !12200
  %72 = getelementptr inbounds i8, i8* %24, i32 %71, !dbg !12281
  store i8 %70, i8* %72, align 1, !dbg !12282
  %73 = icmp eq i32 %68, 0, !dbg !12277
  br i1 %73, label %74, label %65, !dbg !12277, !llvm.loop !12283

74:                                               ; preds = %65, %63
  %75 = phi i32 [ %26, %63 ], [ %71, %65 ], !dbg !12285
  call void @llvm.dbg.value(metadata i8* %24, metadata !12181, metadata !DIExpression()), !dbg !12200
  %76 = add i32 %75, -1, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %76, metadata !12186, metadata !DIExpression()), !dbg !12200
  %77 = getelementptr inbounds i8, i8* %24, i32 %76, !dbg !12287
  store i8 47, i8* %77, align 1, !dbg !12288
  %78 = load i32, i32* %17, align 4, !dbg !12289
  call void @llvm.dbg.value(metadata i32 0, metadata !12183, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 %78, metadata !12188, metadata !DIExpression()), !dbg !12200
  %79 = icmp eq i32 %78, 0, !dbg !12220
  br i1 %79, label %80, label %25, !dbg !12221, !llvm.loop !12290

80:                                               ; preds = %74
  call void @llvm.dbg.value(metadata i32 0, metadata !12183, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i8* %24, metadata !12181, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i8* %24, metadata !12189, metadata !DIExpression()), !dbg !12200
  %81 = icmp eq i32 %76, %1, !dbg !12292
  br i1 %81, label %82, label %85, !dbg !12223

82:                                               ; preds = %19, %80
  %83 = phi i8* [ %20, %19 ], [ %24, %80 ]
  %84 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !12294
  call void @llvm.dbg.value(metadata i8* %84, metadata !12189, metadata !DIExpression()), !dbg !12200
  store i8 47, i8* %83, align 1, !dbg !12296
  br label %93, !dbg !12297

85:                                               ; preds = %80, %85
  %86 = phi i32 [ %88, %85 ], [ %76, %80 ], !dbg !12285
  %87 = phi i8* [ %91, %85 ], [ %24, %80 ], !dbg !12285
  call void @llvm.dbg.value(metadata i8* %87, metadata !12189, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 %86, metadata !12186, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i8* %24, metadata !12181, metadata !DIExpression()), !dbg !12200
  %88 = add i32 %86, 1, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %88, metadata !12186, metadata !DIExpression()), !dbg !12200
  %89 = getelementptr inbounds i8, i8* %24, i32 %86, !dbg !12300
  %90 = load i8, i8* %89, align 1, !dbg !12300
  %91 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !12301
  call void @llvm.dbg.value(metadata i8* %91, metadata !12189, metadata !DIExpression()), !dbg !12200
  store i8 %90, i8* %87, align 1, !dbg !12302
  %92 = icmp ult i32 %88, %1, !dbg !12303
  br i1 %92, label %85, label %93, !dbg !12304, !llvm.loop !12305

93:                                               ; preds = %60, %34, %30, %25, %85, %49, %82
  %94 = phi i32 [ 0, %82 ], [ %52, %49 ], [ 0, %85 ], [ %28, %25 ], [ %32, %30 ], [ %37, %34 ], [ 17, %60 ]
  %95 = phi i8* [ %84, %82 ], [ %24, %49 ], [ %91, %85 ], [ %24, %25 ], [ %24, %30 ], [ %24, %34 ], [ %24, %60 ], !dbg !12285
  call void @llvm.dbg.value(metadata i8* %95, metadata !12189, metadata !DIExpression()), !dbg !12200
  store i8 0, i8* %95, align 1, !dbg !12308
  br label %96, !dbg !12309

96:                                               ; preds = %93, %2
  %97 = phi i32 [ %94, %93 ], [ %10, %2 ], !dbg !12200
  call void @llvm.dbg.value(metadata i32 %97, metadata !12183, metadata !DIExpression()), !dbg !12200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #19, !dbg !12310
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !12310
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #19, !dbg !12310
  ret i32 %97, !dbg !12311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @dir_read(%struct.DIR* nocapture noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !12312 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12314, metadata !DIExpression()), !dbg !12320
  call void @llvm.dbg.value(metadata i32 %1, metadata !12315, metadata !DIExpression()), !dbg !12320
  call void @llvm.dbg.value(metadata i32 4, metadata !12316, metadata !DIExpression()), !dbg !12320
  %3 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !12321
  %4 = load %struct.FATFS*, %struct.FATFS** %3, align 4, !dbg !12321
  call void @llvm.dbg.value(metadata %struct.FATFS* %4, metadata !12317, metadata !DIExpression()), !dbg !12320
  %5 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3
  call void @llvm.dbg.value(metadata i32 4, metadata !12316, metadata !DIExpression()), !dbg !12320
  %6 = load i32, i32* %5, align 4, !dbg !12322
  %7 = icmp eq i32 %6, 0, !dbg !12323
  br i1 %7, label %38, label %8, !dbg !12323

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4
  %10 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 2
  br label %14, !dbg !12323

11:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 0, metadata !12316, metadata !DIExpression()), !dbg !12320
  %12 = load i32, i32* %5, align 4, !dbg !12322
  %13 = icmp eq i32 %12, 0, !dbg !12323
  br i1 %13, label %37, label %14, !dbg !12323, !llvm.loop !12324

14:                                               ; preds = %8, %11
  %15 = phi i32 [ %6, %8 ], [ %12, %11 ]
  %16 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %4, i32 noundef %15) #22, !dbg !12326
  call void @llvm.dbg.value(metadata i32 %16, metadata !12316, metadata !DIExpression()), !dbg !12320
  %17 = icmp eq i32 %16, 0, !dbg !12328
  br i1 %17, label %18, label %38, !dbg !12330

18:                                               ; preds = %14
  %19 = load i8*, i8** %9, align 4, !dbg !12331
  %20 = load i8, i8* %19, align 1, !dbg !12332
  call void @llvm.dbg.value(metadata i8 %20, metadata !12319, metadata !DIExpression()), !dbg !12320
  %21 = icmp eq i8 %20, 0, !dbg !12333
  br i1 %21, label %38, label %22, !dbg !12335

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %19, i32 11, !dbg !12336
  %24 = load i8, i8* %23, align 1, !dbg !12336
  %25 = and i8 %24, 63, !dbg !12338
  call void @llvm.dbg.value(metadata i8 %24, metadata !12318, metadata !DIExpression(DW_OP_constu, 63, DW_OP_and, DW_OP_stack_value)), !dbg !12320
  store i8 %25, i8* %10, align 2, !dbg !12339
  %26 = freeze i8 %25
  %27 = icmp eq i8 %26, 15
  br i1 %27, label %34, label %28, !dbg !12340

28:                                               ; preds = %22
  switch i8 %20, label %29 [
    i8 -27, label %34
    i8 46, label %34
  ], !dbg !12340

29:                                               ; preds = %28
  %30 = and i8 %24, 31, !dbg !12342
  %31 = icmp eq i8 %30, 8, !dbg !12343
  %32 = zext i1 %31 to i32, !dbg !12343
  %33 = icmp eq i32 %32, %1, !dbg !12344
  br i1 %33, label %40, label %34, !dbg !12345

34:                                               ; preds = %28, %28, %22, %29
  %35 = tail call fastcc i32 @dir_next(%struct.DIR* noundef nonnull %0, i32 noundef 0) #22, !dbg !12346
  call void @llvm.dbg.value(metadata i32 %35, metadata !12316, metadata !DIExpression()), !dbg !12320
  %36 = icmp eq i32 %35, 0, !dbg !12347
  br i1 %36, label %11, label %38, !dbg !12349, !llvm.loop !12324

37:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 0, metadata !12316, metadata !DIExpression()), !dbg !12320
  br i1 %7, label %38, label %40, !dbg !12350

38:                                               ; preds = %18, %34, %14, %2, %37
  %39 = phi i32 [ 0, %37 ], [ 4, %2 ], [ 4, %18 ], [ %35, %34 ], [ %16, %14 ]
  store i32 0, i32* %5, align 4, !dbg !12351
  br label %40, !dbg !12353

40:                                               ; preds = %29, %38, %37
  %41 = phi i32 [ %39, %38 ], [ 0, %37 ], [ 0, %29 ]
  ret i32 %41, !dbg !12354
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_fileinfo(%struct.DIR* nocapture noundef readonly %0, %struct.FILINFO* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12355 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12360, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata %struct.FILINFO* %1, metadata !12361, metadata !DIExpression()), !dbg !12366
  %3 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 4, i32 0, !dbg !12367
  store i8 0, i8* %3, align 1, !dbg !12368
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3, !dbg !12369
  %5 = load i32, i32* %4, align 4, !dbg !12369
  %6 = icmp eq i32 %5, 0, !dbg !12371
  br i1 %6, label %51, label %7, !dbg !12372

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4
  br label %9, !dbg !12373

9:                                                ; preds = %7, %29
  %10 = phi i32 [ 0, %7 ], [ %31, %29 ]
  %11 = phi i32 [ 0, %7 ], [ %18, %29 ]
  %12 = call i32 @llvm.umax.i32(i32 %11, i32 11), !dbg !12373
  br label %13, !dbg !12373

13:                                               ; preds = %9, %16
  %14 = phi i32 [ %18, %16 ], [ %11, %9 ], !dbg !12366
  call void @llvm.dbg.value(metadata i32 %14, metadata !12362, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i32 %10, metadata !12363, metadata !DIExpression()), !dbg !12366
  %15 = icmp eq i32 %14, %12, !dbg !12374
  br i1 %15, label %33, label %16, !dbg !12373

16:                                               ; preds = %13
  %17 = load i8*, i8** %8, align 4, !dbg !12375
  %18 = add i32 %14, 1, !dbg !12377
  call void @llvm.dbg.value(metadata i32 %18, metadata !12362, metadata !DIExpression()), !dbg !12366
  %19 = getelementptr inbounds i8, i8* %17, i32 %14, !dbg !12378
  %20 = load i8, i8* %19, align 1, !dbg !12378
  call void @llvm.dbg.value(metadata i8 %20, metadata !12364, metadata !DIExpression()), !dbg !12366
  %21 = icmp eq i8 %20, 32, !dbg !12379
  br i1 %21, label %13, label %22, !dbg !12381, !llvm.loop !12382

22:                                               ; preds = %16
  %23 = icmp eq i8 %20, 5, !dbg !12384
  %24 = select i1 %23, i8 -27, i8 %20, !dbg !12386
  call void @llvm.dbg.value(metadata i8 %24, metadata !12364, metadata !DIExpression()), !dbg !12366
  %25 = icmp eq i32 %18, 9, !dbg !12387
  br i1 %25, label %26, label %29, !dbg !12389

26:                                               ; preds = %22
  %27 = add i32 %10, 1, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %27, metadata !12363, metadata !DIExpression()), !dbg !12366
  %28 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 4, i32 %10, !dbg !12391
  store i8 46, i8* %28, align 1, !dbg !12392
  br label %29, !dbg !12391

29:                                               ; preds = %26, %22
  %30 = phi i32 [ %27, %26 ], [ %10, %22 ], !dbg !12366
  call void @llvm.dbg.value(metadata i32 %30, metadata !12363, metadata !DIExpression()), !dbg !12366
  %31 = add i32 %30, 1, !dbg !12393
  call void @llvm.dbg.value(metadata i32 %31, metadata !12363, metadata !DIExpression()), !dbg !12366
  %32 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 4, i32 %30, !dbg !12394
  store i8 %24, i8* %32, align 1, !dbg !12395
  br label %9, !dbg !12373, !llvm.loop !12382

33:                                               ; preds = %13
  %34 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 4, i32 %10, !dbg !12396
  store i8 0, i8* %34, align 1, !dbg !12397
  %35 = load i8*, i8** %8, align 4, !dbg !12398
  %36 = getelementptr inbounds i8, i8* %35, i32 11, !dbg !12399
  %37 = load i8, i8* %36, align 1, !dbg !12399
  %38 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 3, !dbg !12400
  store i8 %37, i8* %38, align 4, !dbg !12401
  %39 = load i8*, i8** %8, align 4, !dbg !12402
  %40 = getelementptr inbounds i8, i8* %39, i32 28, !dbg !12403
  %41 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %40) #22, !dbg !12404
  %42 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 0, !dbg !12405
  store i32 %41, i32* %42, align 4, !dbg !12406
  %43 = load i8*, i8** %8, align 4, !dbg !12407
  %44 = getelementptr inbounds i8, i8* %43, i32 22, !dbg !12408
  %45 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %44) #22, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %45, metadata !12365, metadata !DIExpression()), !dbg !12366
  %46 = trunc i32 %45 to i16, !dbg !12410
  %47 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 2, !dbg !12411
  store i16 %46, i16* %47, align 2, !dbg !12412
  %48 = lshr i32 %45, 16, !dbg !12413
  %49 = trunc i32 %48 to i16, !dbg !12414
  %50 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 1, !dbg !12415
  store i16 %49, i16* %50, align 4, !dbg !12416
  br label %51, !dbg !12417

51:                                               ; preds = %2, %33
  ret void, !dbg !12417
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_lseek(%struct.FIL* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12418 {
  %3 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !12422, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %1, metadata !12423, metadata !DIExpression()), !dbg !12438
  %4 = bitcast %struct.FATFS** %3 to i8*, !dbg !12439
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !12439
  %5 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !12440
  call void @llvm.dbg.value(metadata %struct.FATFS** %3, metadata !12425, metadata !DIExpression(DW_OP_deref)), !dbg !12438
  %6 = call fastcc i32 @validate(%struct._FDID* noundef %5, %struct.FATFS** noundef nonnull %3) #22, !dbg !12441
  call void @llvm.dbg.value(metadata i32 %6, metadata !12424, metadata !DIExpression()), !dbg !12438
  %7 = icmp eq i32 %6, 0, !dbg !12442
  br i1 %7, label %8, label %254, !dbg !12444

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 2, !dbg !12445
  %10 = load i8, i8* %9, align 1, !dbg !12445
  %11 = zext i8 %10 to i32, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %11, metadata !12424, metadata !DIExpression()), !dbg !12438
  %12 = icmp eq i8 %10, 0, !dbg !12447
  br i1 %12, label %13, label %254, !dbg !12448

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 8, !dbg !12449
  %15 = load i32*, i32** %14, align 4, !dbg !12449
  %16 = icmp eq i32* %15, null, !dbg !12451
  br i1 %16, label %113, label %17, !dbg !12452

17:                                               ; preds = %13
  %18 = icmp eq i32 %1, -1, !dbg !12453
  br i1 %18, label %19, label %62, !dbg !12456

19:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32* %15, metadata !12437, metadata !DIExpression()), !dbg !12438
  %20 = getelementptr inbounds i32, i32* %15, i32 1, !dbg !12457
  call void @llvm.dbg.value(metadata i32* %20, metadata !12437, metadata !DIExpression()), !dbg !12438
  %21 = load i32, i32* %15, align 4, !dbg !12459
  call void @llvm.dbg.value(metadata i32 %21, metadata !12435, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 2, metadata !12436, metadata !DIExpression()), !dbg !12438
  %22 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4, !dbg !12460
  %23 = load i32, i32* %22, align 4, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %23, metadata !12430, metadata !DIExpression()), !dbg !12438
  %24 = icmp eq i32 %23, 0, !dbg !12461
  br i1 %24, label %56, label %25, !dbg !12463

25:                                               ; preds = %19, %48
  %26 = phi i32 [ %34, %48 ], [ %23, %19 ], !dbg !12464
  %27 = phi i32 [ %29, %48 ], [ 2, %19 ], !dbg !12464
  %28 = phi i32* [ %49, %48 ], [ %20, %19 ], !dbg !12464
  call void @llvm.dbg.value(metadata i32* %28, metadata !12437, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %27, metadata !12436, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %26, metadata !12430, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %26, metadata !12433, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 0, metadata !12432, metadata !DIExpression()), !dbg !12438
  %29 = add i32 %27, 2, !dbg !12465
  call void @llvm.dbg.value(metadata i32 %29, metadata !12436, metadata !DIExpression()), !dbg !12438
  br label %30, !dbg !12468

30:                                               ; preds = %40, %25
  %31 = phi i32 [ %26, %25 ], [ %34, %40 ], !dbg !12464
  %32 = phi i32 [ 0, %25 ], [ %33, %40 ], !dbg !12469
  call void @llvm.dbg.value(metadata i32 %32, metadata !12432, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %31, metadata !12430, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %31, metadata !12431, metadata !DIExpression()), !dbg !12438
  %33 = add i32 %32, 1, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %33, metadata !12432, metadata !DIExpression()), !dbg !12438
  %34 = tail call fastcc i32 @get_fat(%struct._FDID* noundef %5, i32 noundef %31) #22, !dbg !12472
  call void @llvm.dbg.value(metadata i32 %34, metadata !12430, metadata !DIExpression()), !dbg !12438
  %35 = icmp ult i32 %34, 2, !dbg !12473
  br i1 %35, label %36, label %37, !dbg !12475

36:                                               ; preds = %30
  store i8 2, i8* %9, align 1, !dbg !12476
  br label %254, !dbg !12476

37:                                               ; preds = %30
  %38 = icmp eq i32 %34, -1, !dbg !12478
  br i1 %38, label %39, label %40, !dbg !12480

39:                                               ; preds = %37
  store i8 1, i8* %9, align 1, !dbg !12481
  br label %254, !dbg !12481

40:                                               ; preds = %37
  %41 = add i32 %31, 1, !dbg !12483
  %42 = icmp eq i32 %34, %41, !dbg !12484
  br i1 %42, label %30, label %43, !dbg !12485, !llvm.loop !12486

43:                                               ; preds = %40
  %44 = icmp ugt i32 %29, %21, !dbg !12488
  br i1 %44, label %48, label %45, !dbg !12490

45:                                               ; preds = %43
  %46 = getelementptr inbounds i32, i32* %28, i32 1, !dbg !12491
  call void @llvm.dbg.value(metadata i32* %46, metadata !12437, metadata !DIExpression()), !dbg !12438
  store i32 %33, i32* %28, align 4, !dbg !12493
  %47 = getelementptr inbounds i32, i32* %28, i32 2, !dbg !12494
  call void @llvm.dbg.value(metadata i32* %47, metadata !12437, metadata !DIExpression()), !dbg !12438
  store i32 %26, i32* %46, align 4, !dbg !12495
  br label %48, !dbg !12496

48:                                               ; preds = %43, %45
  %49 = phi i32* [ %47, %45 ], [ %28, %43 ], !dbg !12464
  call void @llvm.dbg.value(metadata i32* %49, metadata !12437, metadata !DIExpression()), !dbg !12438
  %50 = load %struct.FATFS*, %struct.FATFS** %3, align 4, !dbg !12497
  call void @llvm.dbg.value(metadata %struct.FATFS* %50, metadata !12425, metadata !DIExpression()), !dbg !12438
  %51 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %50, i32 0, i32 11, !dbg !12498
  %52 = load i32, i32* %51, align 4, !dbg !12498
  %53 = icmp ult i32 %34, %52, !dbg !12499
  br i1 %53, label %25, label %54, !dbg !12500, !llvm.loop !12501

54:                                               ; preds = %48
  %55 = load i32*, i32** %14, align 4, !dbg !12504
  br label %56, !dbg !12504

56:                                               ; preds = %54, %19
  %57 = phi i32* [ %15, %19 ], [ %55, %54 ], !dbg !12504
  %58 = phi i32 [ 2, %19 ], [ %29, %54 ], !dbg !12464
  %59 = phi i32* [ %20, %19 ], [ %49, %54 ], !dbg !12464
  call void @llvm.dbg.value(metadata i32* %59, metadata !12437, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %58, metadata !12436, metadata !DIExpression()), !dbg !12438
  store i32 %58, i32* %57, align 4, !dbg !12505
  %60 = icmp ugt i32 %58, %21, !dbg !12506
  br i1 %60, label %254, label %61, !dbg !12508

61:                                               ; preds = %56
  store i32 0, i32* %59, align 4, !dbg !12509
  br label %254, !dbg !12511

62:                                               ; preds = %17
  %63 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5, !dbg !12512
  %64 = load i32, i32* %63, align 4, !dbg !12512
  %65 = icmp ult i32 %64, %1, !dbg !12515
  %66 = select i1 %65, i32 %64, i32 %1, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %66, metadata !12423, metadata !DIExpression()), !dbg !12438
  %67 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 3, !dbg !12517
  store i32 %66, i32* %67, align 4, !dbg !12518
  %68 = icmp eq i32 %66, 0, !dbg !12519
  br i1 %68, label %254, label %69, !dbg !12521

69:                                               ; preds = %62
  %70 = add i32 %66, -1, !dbg !12522
  %71 = tail call fastcc i32 @clmt_clust(%struct.FIL* noundef nonnull %0, i32 noundef %70) #22, !dbg !12524
  %72 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4, !dbg !12525
  store i32 %71, i32* %72, align 4, !dbg !12526
  %73 = load %struct.FATFS*, %struct.FATFS** %3, align 4, !dbg !12527
  call void @llvm.dbg.value(metadata %struct.FATFS* %73, metadata !12425, metadata !DIExpression()), !dbg !12438
  %74 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef %73, i32 noundef %71) #22, !dbg !12528
  call void @llvm.dbg.value(metadata i32 %74, metadata !12434, metadata !DIExpression()), !dbg !12438
  %75 = icmp eq i32 %74, 0, !dbg !12529
  br i1 %75, label %76, label %77, !dbg !12531

76:                                               ; preds = %69
  store i8 2, i8* %9, align 1, !dbg !12532
  br label %254, !dbg !12532

77:                                               ; preds = %69
  %78 = lshr i32 %70, 9, !dbg !12534
  call void @llvm.dbg.value(metadata %struct.FATFS* %73, metadata !12425, metadata !DIExpression()), !dbg !12438
  %79 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %73, i32 0, i32 7, !dbg !12535
  %80 = load i16, i16* %79, align 2, !dbg !12535
  %81 = zext i16 %80 to i32, !dbg !12536
  %82 = add nuw nsw i32 %81, 8388607, !dbg !12537
  %83 = and i32 %82, %78, !dbg !12538
  %84 = add i32 %83, %74, !dbg !12539
  call void @llvm.dbg.value(metadata i32 %84, metadata !12434, metadata !DIExpression()), !dbg !12438
  %85 = and i32 %66, 511, !dbg !12540
  %86 = icmp eq i32 %85, 0, !dbg !12540
  br i1 %86, label %254, label %87, !dbg !12542

87:                                               ; preds = %77
  %88 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 5, !dbg !12543
  %89 = load i32, i32* %88, align 4, !dbg !12543
  %90 = icmp eq i32 %84, %89, !dbg !12544
  br i1 %90, label %254, label %91, !dbg !12545

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !12546
  %93 = load i8, i8* %92, align 4, !dbg !12546
  %94 = icmp sgt i8 %93, -1, !dbg !12549
  br i1 %94, label %105, label %95, !dbg !12550

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %73, i32 0, i32 1, !dbg !12551
  %97 = load i8, i8* %96, align 1, !dbg !12551
  %98 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0, !dbg !12554
  %99 = tail call i32 @disk_write(i8 noundef zeroext %97, i8* noundef nonnull %98, i32 noundef %89, i32 noundef 1) #20, !dbg !12555
  %100 = icmp eq i32 %99, 0, !dbg !12556
  br i1 %100, label %102, label %101, !dbg !12557

101:                                              ; preds = %95
  store i8 1, i8* %9, align 1, !dbg !12558
  br label %254, !dbg !12558

102:                                              ; preds = %95
  %103 = load i8, i8* %92, align 4, !dbg !12560
  %104 = and i8 %103, 127, !dbg !12560
  store i8 %104, i8* %92, align 4, !dbg !12560
  br label %105, !dbg !12561

105:                                              ; preds = %102, %91
  call void @llvm.dbg.value(metadata %struct.FATFS* %73, metadata !12425, metadata !DIExpression()), !dbg !12438
  %106 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %73, i32 0, i32 1, !dbg !12562
  %107 = load i8, i8* %106, align 1, !dbg !12562
  %108 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0, !dbg !12564
  %109 = tail call i32 @disk_read(i8 noundef zeroext %107, i8* noundef nonnull %108, i32 noundef %84, i32 noundef 1) #20, !dbg !12565
  %110 = icmp eq i32 %109, 0, !dbg !12566
  br i1 %110, label %112, label %111, !dbg !12567

111:                                              ; preds = %105
  store i8 1, i8* %9, align 1, !dbg !12568
  br label %254, !dbg !12568

112:                                              ; preds = %105
  store i32 %84, i32* %88, align 4, !dbg !12570
  br label %254, !dbg !12571

113:                                              ; preds = %13
  %114 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5, !dbg !12572
  %115 = load i32, i32* %114, align 4, !dbg !12572
  %116 = icmp ult i32 %115, %1, !dbg !12575
  br i1 %116, label %117, label %125, !dbg !12576

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !12577
  %119 = load i8, i8* %118, align 4, !dbg !12577
  %120 = and i8 %119, 2, !dbg !12578
  %121 = icmp eq i8 %120, 0, !dbg !12578
  br i1 %121, label %125, label %122, !dbg !12579

122:                                              ; preds = %117
  call void @llvm.dbg.value(metadata i32 %126, metadata !12423, metadata !DIExpression()), !dbg !12438
  %123 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 3, !dbg !12580
  %124 = load i32, i32* %123, align 4, !dbg !12580
  call void @llvm.dbg.value(metadata i32 %128, metadata !12429, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 0, metadata !12428, metadata !DIExpression()), !dbg !12438
  store i32 0, i32* %123, align 4, !dbg !12581
  br label %130, !dbg !12582

125:                                              ; preds = %117, %113
  %126 = phi i32 [ %1, %113 ], [ %115, %117 ]
  call void @llvm.dbg.value(metadata i32 %126, metadata !12423, metadata !DIExpression()), !dbg !12438
  %127 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 3, !dbg !12580
  %128 = load i32, i32* %127, align 4, !dbg !12580
  call void @llvm.dbg.value(metadata i32 %128, metadata !12429, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 0, metadata !12428, metadata !DIExpression()), !dbg !12438
  store i32 0, i32* %127, align 4, !dbg !12581
  %129 = icmp eq i32 %126, 0, !dbg !12583
  br i1 %129, label %214, label %130, !dbg !12582

130:                                              ; preds = %122, %125
  %131 = phi i32 [ %124, %122 ], [ %128, %125 ]
  %132 = phi i32* [ %123, %122 ], [ %127, %125 ]
  %133 = phi i32 [ %1, %122 ], [ %126, %125 ]
  %134 = load %struct.FATFS*, %struct.FATFS** %3, align 4, !dbg !12585
  call void @llvm.dbg.value(metadata %struct.FATFS* %134, metadata !12425, metadata !DIExpression()), !dbg !12438
  %135 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %134, i32 0, i32 7, !dbg !12587
  %136 = load i16, i16* %135, align 2, !dbg !12587
  %137 = zext i16 %136 to i32, !dbg !12588
  %138 = shl nuw nsw i32 %137, 9, !dbg !12589
  call void @llvm.dbg.value(metadata i32 %138, metadata !12427, metadata !DIExpression()), !dbg !12438
  %139 = icmp eq i32 %131, 0, !dbg !12590
  br i1 %139, label %152, label %140, !dbg !12592

140:                                              ; preds = %130
  %141 = add i32 %133, -1, !dbg !12593
  %142 = udiv i32 %141, %138, !dbg !12594
  %143 = add i32 %131, -1, !dbg !12595
  %144 = udiv i32 %143, %138, !dbg !12596
  %145 = icmp ult i32 %142, %144, !dbg !12597
  br i1 %145, label %152, label %146, !dbg !12598

146:                                              ; preds = %140
  %147 = sub nsw i32 0, %138, !dbg !12599
  %148 = and i32 %143, %147, !dbg !12601
  store i32 %148, i32* %132, align 4, !dbg !12602
  %149 = sub i32 %133, %148, !dbg !12603
  call void @llvm.dbg.value(metadata i32 %149, metadata !12423, metadata !DIExpression()), !dbg !12438
  %150 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4, !dbg !12604
  %151 = load i32, i32* %150, align 4, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %151, metadata !12426, metadata !DIExpression()), !dbg !12438
  br label %164, !dbg !12605

152:                                              ; preds = %140, %130
  %153 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4, !dbg !12606
  %154 = load i32, i32* %153, align 4, !dbg !12606
  call void @llvm.dbg.value(metadata i32 %154, metadata !12426, metadata !DIExpression()), !dbg !12438
  %155 = icmp eq i32 %154, 0, !dbg !12608
  br i1 %155, label %156, label %161, !dbg !12610

156:                                              ; preds = %152
  %157 = tail call fastcc i32 @create_chain(%struct._FDID* noundef nonnull %5, i32 noundef 0) #22, !dbg !12611
  call void @llvm.dbg.value(metadata i32 %157, metadata !12426, metadata !DIExpression()), !dbg !12438
  switch i32 %157, label %160 [
    i32 1, label %158
    i32 -1, label %159
  ], !dbg !12613

158:                                              ; preds = %156
  store i8 2, i8* %9, align 1, !dbg !12614
  br label %254, !dbg !12614

159:                                              ; preds = %156
  store i8 1, i8* %9, align 1, !dbg !12617
  br label %254, !dbg !12617

160:                                              ; preds = %156
  store i32 %157, i32* %153, align 4, !dbg !12620
  br label %161, !dbg !12621

161:                                              ; preds = %160, %152
  %162 = phi i32 [ %157, %160 ], [ %154, %152 ], !dbg !12622
  call void @llvm.dbg.value(metadata i32 %162, metadata !12426, metadata !DIExpression()), !dbg !12438
  %163 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4, !dbg !12623
  store i32 %162, i32* %163, align 4, !dbg !12624
  br label %164

164:                                              ; preds = %161, %146
  %165 = phi i32 [ %151, %146 ], [ %162, %161 ], !dbg !12625
  %166 = phi i32 [ %149, %146 ], [ %133, %161 ]
  call void @llvm.dbg.value(metadata i32 %166, metadata !12423, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %165, metadata !12426, metadata !DIExpression()), !dbg !12438
  %167 = icmp eq i32 %165, 0, !dbg !12626
  br i1 %167, label %214, label %168, !dbg !12628

168:                                              ; preds = %164
  call void @llvm.dbg.value(metadata i32 %166, metadata !12423, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %165, metadata !12426, metadata !DIExpression()), !dbg !12438
  %169 = icmp ugt i32 %166, %138, !dbg !12629
  br i1 %169, label %170, label %200, !dbg !12631

170:                                              ; preds = %168
  %171 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1
  %172 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %134, i32 0, i32 11
  %173 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4
  br label %174, !dbg !12631

174:                                              ; preds = %170, %198
  %175 = phi i32 [ %166, %170 ], [ %177, %198 ]
  %176 = phi i32 [ %165, %170 ], [ %189, %198 ]
  call void @llvm.dbg.value(metadata i32 %175, metadata !12423, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %176, metadata !12426, metadata !DIExpression()), !dbg !12438
  %177 = sub i32 %175, %138, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %177, metadata !12423, metadata !DIExpression()), !dbg !12438
  %178 = load i32, i32* %132, align 4, !dbg !12634
  %179 = add i32 %178, %138, !dbg !12634
  store i32 %179, i32* %132, align 4, !dbg !12634
  %180 = load i8, i8* %171, align 4, !dbg !12635
  %181 = and i8 %180, 2, !dbg !12637
  %182 = icmp eq i8 %181, 0, !dbg !12637
  br i1 %182, label %186, label %183, !dbg !12638

183:                                              ; preds = %174
  %184 = tail call fastcc i32 @create_chain(%struct._FDID* noundef nonnull %5, i32 noundef %176) #22, !dbg !12639
  call void @llvm.dbg.value(metadata i32 %184, metadata !12426, metadata !DIExpression()), !dbg !12438
  %185 = icmp eq i32 %184, 0, !dbg !12641
  br i1 %185, label %214, label %188, !dbg !12643

186:                                              ; preds = %174
  %187 = tail call fastcc i32 @get_fat(%struct._FDID* noundef nonnull %5, i32 noundef %176) #22, !dbg !12644
  call void @llvm.dbg.value(metadata i32 %187, metadata !12426, metadata !DIExpression()), !dbg !12438
  br label %188

188:                                              ; preds = %183, %186
  %189 = phi i32 [ %184, %183 ], [ %187, %186 ], !dbg !12646
  call void @llvm.dbg.value(metadata i32 %189, metadata !12426, metadata !DIExpression()), !dbg !12438
  %190 = icmp eq i32 %189, -1, !dbg !12647
  br i1 %190, label %191, label %192, !dbg !12649

191:                                              ; preds = %188
  store i8 1, i8* %9, align 1, !dbg !12650
  br label %254, !dbg !12650

192:                                              ; preds = %188
  %193 = icmp ult i32 %189, 2, !dbg !12652
  br i1 %193, label %197, label %194, !dbg !12654

194:                                              ; preds = %192
  call void @llvm.dbg.value(metadata %struct.FATFS* %134, metadata !12425, metadata !DIExpression()), !dbg !12438
  %195 = load i32, i32* %172, align 4, !dbg !12655
  %196 = icmp ult i32 %189, %195, !dbg !12656
  br i1 %196, label %198, label %197, !dbg !12657

197:                                              ; preds = %194, %192
  store i8 2, i8* %9, align 1, !dbg !12658
  br label %254, !dbg !12658

198:                                              ; preds = %194
  store i32 %189, i32* %173, align 4, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %177, metadata !12423, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %189, metadata !12426, metadata !DIExpression()), !dbg !12438
  %199 = icmp ugt i32 %177, %138, !dbg !12629
  br i1 %199, label %174, label %200, !dbg !12631, !llvm.loop !12661

200:                                              ; preds = %198, %168
  %201 = phi i32 [ %165, %168 ], [ %189, %198 ], !dbg !12663
  %202 = phi i32 [ %166, %168 ], [ %177, %198 ], !dbg !12663
  call void @llvm.dbg.value(metadata i32 %202, metadata !12423, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.value(metadata i32 %201, metadata !12426, metadata !DIExpression()), !dbg !12438
  %203 = load i32, i32* %132, align 4, !dbg !12664
  %204 = add i32 %203, %202, !dbg !12664
  store i32 %204, i32* %132, align 4, !dbg !12664
  %205 = and i32 %202, 511, !dbg !12665
  %206 = icmp eq i32 %205, 0, !dbg !12665
  br i1 %206, label %214, label %207, !dbg !12667

207:                                              ; preds = %200
  call void @llvm.dbg.value(metadata %struct.FATFS* %134, metadata !12425, metadata !DIExpression()), !dbg !12438
  %208 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %134, i32 noundef %201) #22, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %208, metadata !12428, metadata !DIExpression()), !dbg !12438
  %209 = icmp eq i32 %208, 0, !dbg !12670
  br i1 %209, label %210, label %211, !dbg !12672

210:                                              ; preds = %207
  store i8 2, i8* %9, align 1, !dbg !12673
  br label %254, !dbg !12673

211:                                              ; preds = %207
  %212 = lshr i32 %202, 9, !dbg !12675
  %213 = add i32 %208, %212, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %213, metadata !12428, metadata !DIExpression()), !dbg !12438
  br label %214, !dbg !12677

214:                                              ; preds = %183, %164, %211, %200, %125
  %215 = phi i32* [ %132, %211 ], [ %132, %200 ], [ %132, %164 ], [ %127, %125 ], [ %132, %183 ]
  %216 = phi i32 [ %213, %211 ], [ 0, %200 ], [ 0, %164 ], [ 0, %125 ], [ 0, %183 ], !dbg !12678
  call void @llvm.dbg.value(metadata i32 %216, metadata !12428, metadata !DIExpression()), !dbg !12438
  %217 = load i32, i32* %215, align 4, !dbg !12679
  %218 = load i32, i32* %114, align 4, !dbg !12681
  %219 = icmp ugt i32 %217, %218, !dbg !12682
  br i1 %219, label %220, label %224, !dbg !12683

220:                                              ; preds = %214
  store i32 %217, i32* %114, align 4, !dbg !12684
  %221 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !12686
  %222 = load i8, i8* %221, align 4, !dbg !12687
  %223 = or i8 %222, 64, !dbg !12687
  store i8 %223, i8* %221, align 4, !dbg !12687
  br label %224, !dbg !12688

224:                                              ; preds = %220, %214
  %225 = and i32 %217, 511, !dbg !12689
  %226 = icmp eq i32 %225, 0, !dbg !12689
  br i1 %226, label %254, label %227, !dbg !12691

227:                                              ; preds = %224
  %228 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 5, !dbg !12692
  %229 = load i32, i32* %228, align 4, !dbg !12692
  %230 = icmp eq i32 %216, %229, !dbg !12693
  br i1 %230, label %254, label %231, !dbg !12694

231:                                              ; preds = %227
  %232 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !12695
  %233 = load i8, i8* %232, align 4, !dbg !12695
  %234 = icmp sgt i8 %233, -1, !dbg !12698
  %235 = load %struct.FATFS*, %struct.FATFS** %3, align 4, !dbg !12699
  br i1 %234, label %246, label %236, !dbg !12700

236:                                              ; preds = %231
  call void @llvm.dbg.value(metadata %struct.FATFS* %235, metadata !12425, metadata !DIExpression()), !dbg !12438
  %237 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %235, i32 0, i32 1, !dbg !12701
  %238 = load i8, i8* %237, align 1, !dbg !12701
  %239 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0, !dbg !12704
  %240 = tail call i32 @disk_write(i8 noundef zeroext %238, i8* noundef nonnull %239, i32 noundef %229, i32 noundef 1) #20, !dbg !12705
  %241 = icmp eq i32 %240, 0, !dbg !12706
  br i1 %241, label %243, label %242, !dbg !12707

242:                                              ; preds = %236
  store i8 1, i8* %9, align 1, !dbg !12708
  br label %254, !dbg !12708

243:                                              ; preds = %236
  %244 = load i8, i8* %232, align 4, !dbg !12710
  %245 = and i8 %244, 127, !dbg !12710
  store i8 %245, i8* %232, align 4, !dbg !12710
  br label %246, !dbg !12711

246:                                              ; preds = %231, %243
  call void @llvm.dbg.value(metadata %struct.FATFS* %235, metadata !12425, metadata !DIExpression()), !dbg !12438
  %247 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %235, i32 0, i32 1, !dbg !12712
  %248 = load i8, i8* %247, align 1, !dbg !12712
  %249 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0, !dbg !12714
  %250 = tail call i32 @disk_read(i8 noundef zeroext %248, i8* noundef nonnull %249, i32 noundef %216, i32 noundef 1) #20, !dbg !12715
  %251 = icmp eq i32 %250, 0, !dbg !12716
  br i1 %251, label %253, label %252, !dbg !12717

252:                                              ; preds = %246
  store i8 1, i8* %9, align 1, !dbg !12718
  br label %254, !dbg !12718

253:                                              ; preds = %246
  store i32 %216, i32* %228, align 4, !dbg !12720
  br label %254, !dbg !12721

254:                                              ; preds = %62, %112, %87, %77, %61, %253, %227, %224, %56, %2, %8, %252, %242, %210, %197, %191, %159, %158, %111, %101, %76, %39, %36
  %255 = phi i32 [ 2, %36 ], [ 1, %39 ], [ 1, %101 ], [ 1, %111 ], [ 2, %76 ], [ 1, %242 ], [ 1, %252 ], [ 2, %210 ], [ 1, %191 ], [ 2, %197 ], [ 2, %158 ], [ 1, %159 ], [ %6, %2 ], [ %11, %8 ], [ 0, %61 ], [ 0, %112 ], [ 0, %87 ], [ 0, %77 ], [ 0, %62 ], [ 0, %253 ], [ 0, %227 ], [ 0, %224 ], [ 17, %56 ], !dbg !12438
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !12722
  ret i32 %255, !dbg !12722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_opendir(%struct.DIR* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !12723 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12725, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i8* %1, metadata !12726, metadata !DIExpression()), !dbg !12730
  store i8* %1, i8** %3, align 4
  %5 = bitcast %struct.FATFS** %4 to i8*, !dbg !12731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12731
  %6 = icmp eq %struct.DIR* %0, null, !dbg !12732
  br i1 %6, label %41, label %7, !dbg !12734

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12729, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i8** %3, metadata !12726, metadata !DIExpression(DW_OP_deref)), !dbg !12730
  call void @llvm.dbg.value(metadata %struct.FATFS** %4, metadata !12728, metadata !DIExpression(DW_OP_deref)), !dbg !12730
  %8 = call fastcc i32 @find_volume(i8** noundef nonnull %3, %struct.FATFS** noundef nonnull %4, i8 noundef zeroext 0) #22, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %8, metadata !12727, metadata !DIExpression()), !dbg !12730
  %9 = icmp eq i32 %8, 0, !dbg !12736
  br i1 %9, label %10, label %38, !dbg !12738

10:                                               ; preds = %7
  %11 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !12739
  call void @llvm.dbg.value(metadata %struct.FATFS* %11, metadata !12728, metadata !DIExpression()), !dbg !12730
  %12 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !12741
  store %struct.FATFS* %11, %struct.FATFS** %12, align 4, !dbg !12742
  %13 = load i8*, i8** %3, align 4, !dbg !12743
  call void @llvm.dbg.value(metadata i8* %13, metadata !12726, metadata !DIExpression()), !dbg !12730
  %14 = tail call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %0, i8* noundef %13) #22, !dbg !12744
  call void @llvm.dbg.value(metadata i32 %14, metadata !12727, metadata !DIExpression()), !dbg !12730
  %15 = icmp eq i32 %14, 0, !dbg !12745
  br i1 %15, label %16, label %35, !dbg !12747

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 5, i32 11, !dbg !12748
  %18 = load i8, i8* %17, align 1, !dbg !12748
  %19 = icmp sgt i8 %18, -1, !dbg !12751
  br i1 %19, label %20, label %30, !dbg !12752

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 2, !dbg !12753
  %22 = load i8, i8* %21, align 2, !dbg !12753
  %23 = and i8 %22, 16, !dbg !12756
  %24 = icmp eq i8 %23, 0, !dbg !12756
  br i1 %24, label %38, label %25, !dbg !12757

25:                                               ; preds = %20
  call void @llvm.dbg.value(metadata %struct.FATFS* %11, metadata !12728, metadata !DIExpression()), !dbg !12730
  %26 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4, !dbg !12758
  %27 = load i8*, i8** %26, align 4, !dbg !12758
  %28 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %11, i8* noundef %27) #22, !dbg !12761
  %29 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 4, !dbg !12762
  store i32 %28, i32* %29, align 4, !dbg !12763
  br label %30, !dbg !12764

30:                                               ; preds = %25, %16
  call void @llvm.dbg.value(metadata i32 undef, metadata !12727, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata %struct.FATFS* %11, metadata !12728, metadata !DIExpression()), !dbg !12730
  %31 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %11, i32 0, i32 5, !dbg !12765
  %32 = load i16, i16* %31, align 2, !dbg !12765
  %33 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 1, !dbg !12768
  store i16 %32, i16* %33, align 4, !dbg !12769
  %34 = tail call fastcc i32 @dir_sdi(%struct.DIR* noundef nonnull %0, i32 noundef 0) #22, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %34, metadata !12727, metadata !DIExpression()), !dbg !12730
  br label %35, !dbg !12771

35:                                               ; preds = %30, %10
  %36 = phi i32 [ %34, %30 ], [ %14, %10 ], !dbg !12772
  call void @llvm.dbg.value(metadata i32 %36, metadata !12727, metadata !DIExpression()), !dbg !12730
  switch i32 %36, label %37 [
    i32 4, label %38
    i32 0, label %41
  ], !dbg !12773

37:                                               ; preds = %35
  br label %38, !dbg !12774

38:                                               ; preds = %35, %37, %20, %7
  %39 = phi i32 [ %8, %7 ], [ 5, %20 ], [ 5, %35 ], [ %36, %37 ]
  %40 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !12774
  store %struct.FATFS* null, %struct.FATFS** %40, align 4, !dbg !12776
  br label %41, !dbg !12777

41:                                               ; preds = %35, %38, %2
  %42 = phi i32 [ 9, %2 ], [ %39, %38 ], [ %36, %35 ], !dbg !12730
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12778
  ret i32 %42, !dbg !12778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_closedir(%struct.DIR* noundef %0) local_unnamed_addr #0 !dbg !12779 {
  %2 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12781, metadata !DIExpression()), !dbg !12784
  %3 = bitcast %struct.FATFS** %2 to i8*, !dbg !12785
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12785
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, !dbg !12786
  call void @llvm.dbg.value(metadata %struct.FATFS** %2, metadata !12783, metadata !DIExpression(DW_OP_deref)), !dbg !12784
  %5 = call fastcc i32 @validate(%struct._FDID* noundef %4, %struct.FATFS** noundef nonnull %2) #22, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %5, metadata !12782, metadata !DIExpression()), !dbg !12784
  %6 = icmp eq i32 %5, 0, !dbg !12788
  br i1 %6, label %7, label %9, !dbg !12790

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !12791
  store %struct.FATFS* null, %struct.FATFS** %8, align 4, !dbg !12794
  br label %9, !dbg !12795

9:                                                ; preds = %7, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12796
  ret i32 %5, !dbg !12797
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_readdir(%struct.DIR* noundef %0, %struct.FILINFO* noundef writeonly %1) local_unnamed_addr #0 !dbg !12798 {
  %3 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12802, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.value(metadata %struct.FILINFO* %1, metadata !12803, metadata !DIExpression()), !dbg !12806
  %4 = bitcast %struct.FATFS** %3 to i8*, !dbg !12807
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !12807
  %5 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, !dbg !12808
  call void @llvm.dbg.value(metadata %struct.FATFS** %3, metadata !12805, metadata !DIExpression(DW_OP_deref)), !dbg !12806
  %6 = call fastcc i32 @validate(%struct._FDID* noundef %5, %struct.FATFS** noundef nonnull %3) #22, !dbg !12809
  call void @llvm.dbg.value(metadata i32 %6, metadata !12804, metadata !DIExpression()), !dbg !12806
  %7 = icmp eq i32 %6, 0, !dbg !12810
  br i1 %7, label %8, label %21, !dbg !12812

8:                                                ; preds = %2
  %9 = icmp eq %struct.FILINFO* %1, null, !dbg !12813
  br i1 %9, label %10, label %12, !dbg !12816

10:                                               ; preds = %8
  %11 = tail call fastcc i32 @dir_sdi(%struct.DIR* noundef %0, i32 noundef 0) #22, !dbg !12817
  call void @llvm.dbg.value(metadata i32 %11, metadata !12804, metadata !DIExpression()), !dbg !12806
  br label %21, !dbg !12819

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @dir_read(%struct.DIR* noundef %0, i32 noundef 0) #22, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %13, metadata !12804, metadata !DIExpression()), !dbg !12806
  %14 = icmp eq i32 %13, 4, !dbg !12822
  %15 = select i1 %14, i32 0, i32 %13, !dbg !12824
  call void @llvm.dbg.value(metadata i32 %15, metadata !12804, metadata !DIExpression()), !dbg !12806
  %16 = icmp eq i32 %15, 0, !dbg !12825
  br i1 %16, label %17, label %21, !dbg !12827

17:                                               ; preds = %12
  tail call fastcc void @get_fileinfo(%struct.DIR* noundef %0, %struct.FILINFO* noundef nonnull %1) #22, !dbg !12828
  %18 = tail call fastcc i32 @dir_next(%struct.DIR* noundef %0, i32 noundef 0) #22, !dbg !12830
  call void @llvm.dbg.value(metadata i32 %18, metadata !12804, metadata !DIExpression()), !dbg !12806
  %19 = icmp eq i32 %18, 4, !dbg !12831
  %20 = select i1 %19, i32 0, i32 %18, !dbg !12833
  call void @llvm.dbg.value(metadata i32 %20, metadata !12804, metadata !DIExpression()), !dbg !12806
  br label %21, !dbg !12834

21:                                               ; preds = %10, %17, %12, %2
  %22 = phi i32 [ %20, %17 ], [ %15, %12 ], [ %11, %10 ], [ %6, %2 ], !dbg !12806
  call void @llvm.dbg.value(metadata i32 %22, metadata !12804, metadata !DIExpression()), !dbg !12806
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !12835
  ret i32 %22, !dbg !12836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_findnext(%struct.DIR* noundef %0, %struct.FILINFO* noundef %1) local_unnamed_addr #0 !dbg !12837 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12839, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata %struct.FILINFO* %1, metadata !12840, metadata !DIExpression()), !dbg !12842
  %3 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 4, i32 0, !dbg !12843
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 6, !dbg !12848
  %5 = icmp ne %struct.FILINFO* %1, null
  br label %6, !dbg !12850

6:                                                ; preds = %13, %2
  %7 = tail call i32 @f_readdir(%struct.DIR* noundef %0, %struct.FILINFO* noundef %1) #22, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %7, metadata !12841, metadata !DIExpression()), !dbg !12842
  %8 = icmp eq i32 %7, 0, !dbg !12852
  %9 = and i1 %5, %8, !dbg !12853
  br i1 %9, label %10, label %17, !dbg !12853

10:                                               ; preds = %6
  %11 = load i8, i8* %3, align 1, !dbg !12843
  %12 = icmp eq i8 %11, 0, !dbg !12843
  br i1 %12, label %17, label %13, !dbg !12854

13:                                               ; preds = %10
  %14 = load i8*, i8** %4, align 4, !dbg !12848
  %15 = tail call fastcc i32 @pattern_matching(i8* noundef %14, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #22, !dbg !12855
  %16 = icmp eq i32 %15, 0, !dbg !12855
  br i1 %16, label %6, label %17, !dbg !12856, !llvm.loop !12857

17:                                               ; preds = %13, %6, %10
  %18 = phi i32 [ 0, %13 ], [ %7, %6 ], [ 0, %10 ], !dbg !12851
  ret i32 %18, !dbg !12860
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @pattern_matching(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !12861 {
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12865, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8* %1, metadata !12866, metadata !DIExpression()), !dbg !12875
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.value(metadata i32 %2, metadata !12867, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i32 %3, metadata !12868, metadata !DIExpression()), !dbg !12875
  %8 = bitcast i8** %6 to i8*, !dbg !12876
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !12876
  %9 = bitcast i8** %7 to i8*, !dbg !12876
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !12876
  br label %10, !dbg !12877

10:                                               ; preds = %13, %4
  %11 = phi i32 [ %2, %4 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !12867, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i32 %11, metadata !12867, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12875
  %12 = icmp eq i32 %11, 0, !dbg !12877
  br i1 %12, label %17, label %13, !dbg !12877

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !12878
  call void @llvm.dbg.value(metadata i32 %14, metadata !12867, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8** %5, metadata !12866, metadata !DIExpression(DW_OP_deref)), !dbg !12875
  %15 = call fastcc zeroext i16 @get_achar(i8** noundef nonnull %5) #22, !dbg !12879
  %16 = icmp eq i16 %15, 0, !dbg !12879
  br i1 %16, label %60, label %10, !dbg !12882, !llvm.loop !12883

17:                                               ; preds = %10
  %18 = load i8, i8* %0, align 1, !dbg !12885
  %19 = icmp eq i8 %18, 0, !dbg !12885
  %20 = icmp ne i32 %3, 0
  %21 = and i1 %20, %19, !dbg !12887
  br i1 %21, label %60, label %22, !dbg !12887

22:                                               ; preds = %17, %55
  call void @llvm.dbg.value(metadata i8* %0, metadata !12869, metadata !DIExpression()), !dbg !12875
  store i8* %0, i8** %6, align 4, !dbg !12888
  %23 = load i8*, i8** %5, align 4, !dbg !12890
  call void @llvm.dbg.value(metadata i8* %23, metadata !12866, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8* %23, metadata !12870, metadata !DIExpression()), !dbg !12875
  store i8* %23, i8** %7, align 4, !dbg !12891
  br label %24, !dbg !12892

24:                                               ; preds = %53, %22
  %25 = phi i8* [ %54, %53 ], [ %0, %22 ], !dbg !12893
  call void @llvm.dbg.value(metadata i8* %25, metadata !12869, metadata !DIExpression()), !dbg !12875
  %26 = load i8, i8* %25, align 1, !dbg !12898
  switch i8 %26, label %47 [
    i8 63, label %27
    i8 42, label %27
  ], !dbg !12899

27:                                               ; preds = %24, %24
  br label %28, !dbg !12900

28:                                               ; preds = %39, %27
  %29 = phi i8 [ %26, %27 ], [ %38, %39 ], !dbg !12902
  %30 = phi i8* [ %25, %27 ], [ %33, %39 ], !dbg !12875
  %31 = phi i32 [ 0, %27 ], [ %36, %39 ], !dbg !12905
  %32 = phi i32 [ 0, %27 ], [ %37, %39 ], !dbg !12906
  call void @llvm.dbg.value(metadata i32 %32, metadata !12874, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i32 %31, metadata !12873, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8* %30, metadata !12869, metadata !DIExpression()), !dbg !12875
  %33 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !12907
  call void @llvm.dbg.value(metadata i8* %33, metadata !12869, metadata !DIExpression()), !dbg !12875
  %34 = icmp eq i8 %29, 63, !dbg !12908
  %35 = zext i1 %34 to i32, !dbg !12909
  %36 = add nuw nsw i32 %31, %35, !dbg !12909
  %37 = select i1 %34, i32 %32, i32 1, !dbg !12909
  call void @llvm.dbg.value(metadata i32 %37, metadata !12874, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i32 %36, metadata !12873, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8* %33, metadata !12869, metadata !DIExpression()), !dbg !12875
  %38 = load i8, i8* %33, align 1, !dbg !12910
  switch i8 %38, label %40 [
    i8 63, label %39
    i8 42, label %39
  ], !dbg !12900

39:                                               ; preds = %28, %28
  br label %28, !dbg !12875

40:                                               ; preds = %28
  store i8* %33, i8** %6, align 4, !dbg !12907
  %41 = load i8*, i8** %7, align 4, !dbg !12911
  call void @llvm.dbg.value(metadata i8* %41, metadata !12870, metadata !DIExpression()), !dbg !12875
  %42 = tail call fastcc i32 @pattern_matching(i8* noundef nonnull %33, i8* noundef %41, i32 noundef %36, i32 noundef %37) #22, !dbg !12913
  %43 = icmp eq i32 %42, 0, !dbg !12913
  br i1 %43, label %44, label %60, !dbg !12914

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i8* %41, metadata !12870, metadata !DIExpression()), !dbg !12875
  %45 = load i8, i8* %41, align 1, !dbg !12915
  %46 = zext i8 %45 to i16, !dbg !12915
  call void @llvm.dbg.value(metadata i16 %46, metadata !12872, metadata !DIExpression()), !dbg !12875
  br label %55, !dbg !12916

47:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i8** %6, metadata !12869, metadata !DIExpression(DW_OP_deref)), !dbg !12875
  %48 = call fastcc zeroext i16 @get_achar(i8** noundef nonnull %6) #22, !dbg !12917
  call void @llvm.dbg.value(metadata i16 %48, metadata !12871, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8** %7, metadata !12870, metadata !DIExpression(DW_OP_deref)), !dbg !12875
  %49 = call fastcc zeroext i16 @get_achar(i8** noundef nonnull %7) #22, !dbg !12918
  call void @llvm.dbg.value(metadata i16 %49, metadata !12872, metadata !DIExpression()), !dbg !12875
  %50 = icmp eq i16 %48, %49, !dbg !12919
  br i1 %50, label %51, label %55, !dbg !12921

51:                                               ; preds = %47
  %52 = icmp eq i16 %48, 0, !dbg !12922
  br i1 %52, label %60, label %53, !dbg !12924, !llvm.loop !12925

53:                                               ; preds = %51
  %54 = load i8*, i8** %6, align 4, !dbg !12893
  br label %24, !dbg !12924

55:                                               ; preds = %47, %44
  %56 = phi i16 [ %46, %44 ], [ %49, %47 ], !dbg !12928
  call void @llvm.dbg.value(metadata i16 %56, metadata !12872, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i8** %5, metadata !12866, metadata !DIExpression(DW_OP_deref)), !dbg !12875
  %57 = call fastcc zeroext i16 @get_achar(i8** noundef nonnull %5) #22, !dbg !12929
  %58 = icmp ne i16 %56, 0, !dbg !12930
  %59 = select i1 %20, i1 %58, i1 false, !dbg !12930
  br i1 %59, label %22, label %60, !dbg !12931, !llvm.loop !12932

60:                                               ; preds = %13, %55, %40, %51, %17
  %61 = phi i32 [ 1, %17 ], [ 1, %51 ], [ 0, %55 ], [ 1, %40 ], [ 0, %13 ], !dbg !12875
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !12935
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !12935
  ret i32 %61, !dbg !12935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @get_achar(i8** nocapture noundef %0) unnamed_addr #14 !dbg !12936 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !12940, metadata !DIExpression()), !dbg !12942
  %2 = load i8*, i8** %0, align 4, !dbg !12943
  %3 = getelementptr inbounds i8, i8* %2, i32 1, !dbg !12943
  store i8* %3, i8** %0, align 4, !dbg !12943
  %4 = load i8, i8* %2, align 1, !dbg !12944
  %5 = zext i8 %4 to i16, !dbg !12945
  call void @llvm.dbg.value(metadata i16 %5, metadata !12941, metadata !DIExpression()), !dbg !12942
  %6 = add i8 %4, -97, !dbg !12946
  %7 = icmp ult i8 %6, 26, !dbg !12946
  %8 = add nsw i16 %5, -32, !dbg !12946
  %9 = select i1 %7, i16 %8, i16 %5, !dbg !12946
  call void @llvm.dbg.value(metadata i16 %9, metadata !12941, metadata !DIExpression()), !dbg !12942
  %10 = icmp ugt i16 %9, 127, !dbg !12948
  br i1 %10, label %11, label %17, !dbg !12950

11:                                               ; preds = %1
  %12 = zext i16 %9 to i32, !dbg !12951
  %13 = add nsw i32 %12, -128, !dbg !12952
  %14 = getelementptr inbounds [128 x i8], [128 x i8]* @ExCvt, i32 0, i32 %13, !dbg !12953
  %15 = load i8, i8* %14, align 1, !dbg !12953
  %16 = zext i8 %15 to i16, !dbg !12953
  call void @llvm.dbg.value(metadata i16 %16, metadata !12941, metadata !DIExpression()), !dbg !12942
  br label %17, !dbg !12954

17:                                               ; preds = %11, %1
  %18 = phi i16 [ %16, %11 ], [ %9, %1 ], !dbg !12942
  call void @llvm.dbg.value(metadata i16 %18, metadata !12941, metadata !DIExpression()), !dbg !12942
  ret i16 %18, !dbg !12955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_findfirst(%struct.DIR* noundef %0, %struct.FILINFO* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !12956 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !12960, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata %struct.FILINFO* %1, metadata !12961, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata i8* %2, metadata !12962, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata i8* %3, metadata !12963, metadata !DIExpression()), !dbg !12965
  %5 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 6, !dbg !12966
  store i8* %3, i8** %5, align 4, !dbg !12967
  %6 = tail call i32 @f_opendir(%struct.DIR* noundef %0, i8* noundef %2) #22, !dbg !12968
  call void @llvm.dbg.value(metadata i32 %6, metadata !12964, metadata !DIExpression()), !dbg !12965
  %7 = icmp eq i32 %6, 0, !dbg !12969
  br i1 %7, label %8, label %10, !dbg !12971

8:                                                ; preds = %4
  %9 = tail call i32 @f_findnext(%struct.DIR* noundef nonnull %0, %struct.FILINFO* noundef %1) #22, !dbg !12972
  call void @llvm.dbg.value(metadata i32 %9, metadata !12964, metadata !DIExpression()), !dbg !12965
  br label %10, !dbg !12974

10:                                               ; preds = %8, %4
  %11 = phi i32 [ %9, %8 ], [ %6, %4 ], !dbg !12965
  call void @llvm.dbg.value(metadata i32 %11, metadata !12964, metadata !DIExpression()), !dbg !12965
  ret i32 %11, !dbg !12975
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_stat(i8* noundef %0, %struct.FILINFO* noundef writeonly %1) local_unnamed_addr #0 !dbg !12976 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.DIR, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12980, metadata !DIExpression()), !dbg !12984
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.value(metadata %struct.FILINFO* %1, metadata !12981, metadata !DIExpression()), !dbg !12984
  %5 = bitcast %struct.DIR* %4 to i8*, !dbg !12985
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #19, !dbg !12985
  call void @llvm.dbg.declare(metadata %struct.DIR* %4, metadata !12983, metadata !DIExpression()), !dbg !12986
  %6 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 0, i32 0, !dbg !12987
  call void @llvm.dbg.value(metadata i8** %3, metadata !12980, metadata !DIExpression(DW_OP_deref)), !dbg !12984
  %7 = call fastcc i32 @find_volume(i8** noundef nonnull %3, %struct.FATFS** noundef nonnull %6, i8 noundef zeroext 0) #22, !dbg !12988
  call void @llvm.dbg.value(metadata i32 %7, metadata !12982, metadata !DIExpression()), !dbg !12984
  %8 = icmp eq i32 %7, 0, !dbg !12989
  br i1 %8, label %9, label %20, !dbg !12991

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 4, !dbg !12992
  call void @llvm.dbg.value(metadata i8* %10, metadata !12980, metadata !DIExpression()), !dbg !12984
  %11 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %4, i8* noundef %10) #22, !dbg !12994
  call void @llvm.dbg.value(metadata i32 %11, metadata !12982, metadata !DIExpression()), !dbg !12984
  %12 = icmp eq i32 %11, 0, !dbg !12995
  br i1 %12, label %13, label %20, !dbg !12997

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 5, i32 11, !dbg !12998
  %15 = load i8, i8* %14, align 1, !dbg !12998
  %16 = icmp sgt i8 %15, -1, !dbg !13001
  br i1 %16, label %17, label %20, !dbg !13002

17:                                               ; preds = %13
  %18 = icmp eq %struct.FILINFO* %1, null, !dbg !13003
  br i1 %18, label %20, label %19, !dbg !13006

19:                                               ; preds = %17
  call fastcc void @get_fileinfo(%struct.DIR* noundef nonnull %4, %struct.FILINFO* noundef nonnull %1) #22, !dbg !13007
  br label %20, !dbg !13007

20:                                               ; preds = %13, %9, %17, %19, %2
  %21 = phi i32 [ 0, %19 ], [ 0, %17 ], [ %11, %9 ], [ %7, %2 ], [ 6, %13 ], !dbg !12984
  call void @llvm.dbg.value(metadata i32 %21, metadata !12982, metadata !DIExpression()), !dbg !12984
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #19, !dbg !13008
  ret i32 %21, !dbg !13009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_getfree(i8* noundef %0, i32* nocapture noundef writeonly %1, %struct.FATFS** nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !13010 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.FATFS*, align 4
  %6 = alloca %struct._FDID, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13014, metadata !DIExpression()), !dbg !13026
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.value(metadata i32* %1, metadata !13015, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata %struct.FATFS** %2, metadata !13016, metadata !DIExpression()), !dbg !13026
  %7 = bitcast %struct.FATFS** %5 to i8*, !dbg !13027
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !13027
  %8 = bitcast %struct._FDID* %6 to i8*, !dbg !13028
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #19, !dbg !13028
  call void @llvm.dbg.declare(metadata %struct._FDID* %6, metadata !13025, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i8** %4, metadata !13014, metadata !DIExpression(DW_OP_deref)), !dbg !13026
  call void @llvm.dbg.value(metadata %struct.FATFS** %5, metadata !13018, metadata !DIExpression(DW_OP_deref)), !dbg !13026
  %9 = call fastcc i32 @find_volume(i8** noundef nonnull %4, %struct.FATFS** noundef nonnull %5, i8 noundef zeroext 0) #22, !dbg !13030
  call void @llvm.dbg.value(metadata i32 %9, metadata !13017, metadata !DIExpression()), !dbg !13026
  %10 = icmp eq i32 %9, 0, !dbg !13031
  br i1 %10, label %11, label %87, !dbg !13033

11:                                               ; preds = %3
  %12 = load %struct.FATFS*, %struct.FATFS** %5, align 4, !dbg !13034
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !13018, metadata !DIExpression()), !dbg !13026
  store %struct.FATFS* %12, %struct.FATFS** %2, align 4, !dbg !13036
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !13018, metadata !DIExpression()), !dbg !13026
  %13 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 9, !dbg !13037
  %14 = load i32, i32* %13, align 4, !dbg !13037
  %15 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 11, !dbg !13039
  %16 = load i32, i32* %15, align 4, !dbg !13039
  %17 = add i32 %16, -2, !dbg !13040
  %18 = icmp ugt i32 %14, %17, !dbg !13041
  br i1 %18, label %20, label %19, !dbg !13042

19:                                               ; preds = %11
  store i32 %14, i32* %1, align 4, !dbg !13043
  br label %87, !dbg !13045

20:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 0, metadata !13019, metadata !DIExpression()), !dbg !13026
  %21 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 0, !dbg !13046
  %22 = load i8, i8* %21, align 4, !dbg !13046
  %23 = icmp eq i8 %22, 1, !dbg !13049
  br i1 %23, label %24, label %37, !dbg !13050

24:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 2, metadata !13020, metadata !DIExpression()), !dbg !13026
  %25 = getelementptr inbounds %struct._FDID, %struct._FDID* %6, i32 0, i32 0, !dbg !13051
  store %struct.FATFS* %12, %struct.FATFS** %25, align 4, !dbg !13053
  br label %26, !dbg !13054

26:                                               ; preds = %32, %24
  %27 = phi i32 [ 0, %24 ], [ %33, %32 ], !dbg !13055
  %28 = phi i32 [ 2, %24 ], [ %34, %32 ], !dbg !13056
  call void @llvm.dbg.value(metadata i32 %28, metadata !13020, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %27, metadata !13019, metadata !DIExpression()), !dbg !13026
  %29 = call fastcc i32 @get_fat(%struct._FDID* noundef nonnull %6, i32 noundef %28) #22, !dbg !13057
  call void @llvm.dbg.value(metadata i32 %29, metadata !13022, metadata !DIExpression()), !dbg !13026
  switch i32 %29, label %32 [
    i32 -1, label %78
    i32 1, label %81
    i32 0, label %30
  ], !dbg !13059

30:                                               ; preds = %26
  %31 = add i32 %27, 1, !dbg !13060
  call void @llvm.dbg.value(metadata i32 %31, metadata !13019, metadata !DIExpression()), !dbg !13026
  br label %32, !dbg !13062

32:                                               ; preds = %26, %30
  %33 = phi i32 [ %31, %30 ], [ %27, %26 ], !dbg !13055
  call void @llvm.dbg.value(metadata i32 %33, metadata !13019, metadata !DIExpression()), !dbg !13026
  %34 = add nuw i32 %28, 1, !dbg !13063
  call void @llvm.dbg.value(metadata i32 %34, metadata !13020, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !13018, metadata !DIExpression()), !dbg !13026
  %35 = load i32, i32* %15, align 4, !dbg !13064
  %36 = icmp ult i32 %34, %35, !dbg !13065
  br i1 %36, label %26, label %78, !dbg !13066, !llvm.loop !13067

37:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %16, metadata !13020, metadata !DIExpression()), !dbg !13026
  %38 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 14, !dbg !13069
  %39 = load i32, i32* %38, align 4, !dbg !13069
  call void @llvm.dbg.value(metadata i32 %39, metadata !13021, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 0, metadata !13023, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i8* null, metadata !13024, metadata !DIExpression()), !dbg !13026
  %40 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 18, i32 0
  br label %41, !dbg !13072

41:                                               ; preds = %68, %37
  %42 = phi i8 [ %22, %37 ], [ %56, %68 ]
  %43 = phi i32 [ 0, %37 ], [ %75, %68 ], !dbg !13055
  %44 = phi i32 [ %16, %37 ], [ %76, %68 ], !dbg !13073
  %45 = phi i32 [ %39, %37 ], [ %57, %68 ], !dbg !13073
  %46 = phi i32 [ 0, %37 ], [ %73, %68 ], !dbg !13073
  %47 = phi i8* [ null, %37 ], [ %72, %68 ], !dbg !13073
  call void @llvm.dbg.value(metadata i8* %47, metadata !13024, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %46, metadata !13023, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 0, metadata !13017, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %45, metadata !13021, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %44, metadata !13020, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %43, metadata !13019, metadata !DIExpression()), !dbg !13026
  %48 = icmp eq i32 %46, 0, !dbg !13074
  br i1 %48, label %49, label %55, !dbg !13077

49:                                               ; preds = %41
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !13018, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %45, metadata !13021, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13026
  %50 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %12, i32 noundef %45) #22, !dbg !13078
  call void @llvm.dbg.value(metadata i32 %50, metadata !13017, metadata !DIExpression()), !dbg !13026
  %51 = icmp eq i32 %50, 0, !dbg !13080
  br i1 %51, label %52, label %81, !dbg !13082

52:                                               ; preds = %49
  %53 = add i32 %45, 1, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %53, metadata !13021, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !13018, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i8* %40, metadata !13024, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 512, metadata !13023, metadata !DIExpression()), !dbg !13026
  %54 = load i8, i8* %21, align 4, !dbg !13084
  br label %55, !dbg !13086

55:                                               ; preds = %52, %41
  %56 = phi i8 [ %54, %52 ], [ %42, %41 ], !dbg !13084
  %57 = phi i32 [ %53, %52 ], [ %45, %41 ], !dbg !13073
  %58 = phi i32 [ 512, %52 ], [ %46, %41 ], !dbg !13073
  %59 = phi i8* [ %40, %52 ], [ %47, %41 ], !dbg !13073
  call void @llvm.dbg.value(metadata i8* %59, metadata !13024, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %58, metadata !13023, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 0, metadata !13017, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %57, metadata !13021, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !13018, metadata !DIExpression()), !dbg !13026
  %60 = icmp eq i8 %56, 2, !dbg !13087
  br i1 %60, label %61, label %64, !dbg !13088

61:                                               ; preds = %55
  %62 = tail call fastcc zeroext i16 @ld_word(i8* noundef %59) #22, !dbg !13089
  %63 = icmp eq i16 %62, 0, !dbg !13092
  call void @llvm.dbg.value(metadata !DIArgList(i32 %43, i1 %63), metadata !13019, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !13026
  call void @llvm.dbg.value(metadata i8* %72, metadata !13024, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %73, metadata !13023, metadata !DIExpression()), !dbg !13026
  br label %68, !dbg !13093

64:                                               ; preds = %55
  %65 = tail call fastcc i32 @ld_dword(i8* noundef %59) #22, !dbg !13094
  %66 = and i32 %65, 268435455, !dbg !13097
  %67 = icmp eq i32 %66, 0, !dbg !13098
  call void @llvm.dbg.value(metadata !DIArgList(i32 %43, i1 %67), metadata !13019, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !13026
  call void @llvm.dbg.value(metadata i8* undef, metadata !13024, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 undef, metadata !13023, metadata !DIExpression()), !dbg !13026
  br label %68

68:                                               ; preds = %61, %64
  %69 = phi i32 [ 2, %61 ], [ 4, %64 ]
  %70 = phi i32 [ -2, %61 ], [ -4, %64 ]
  %71 = phi i1 [ %63, %61 ], [ %67, %64 ]
  %72 = getelementptr inbounds i8, i8* %59, i32 %69, !dbg !13099
  %73 = add i32 %58, %70, !dbg !13099
  %74 = zext i1 %71 to i32, !dbg !13099
  %75 = add i32 %43, %74, !dbg !13099
  call void @llvm.dbg.value(metadata i8* %72, metadata !13024, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %73, metadata !13023, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %75, metadata !13019, metadata !DIExpression()), !dbg !13026
  %76 = add i32 %44, -1, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %76, metadata !13020, metadata !DIExpression()), !dbg !13026
  %77 = icmp eq i32 %76, 0, !dbg !13101
  br i1 %77, label %81, label %41, !dbg !13101, !llvm.loop !13102

78:                                               ; preds = %32, %26
  %79 = phi i32 [ %27, %26 ], [ %33, %32 ]
  %80 = phi i32 [ 1, %26 ], [ 0, %32 ]
  br label %81, !dbg !13104

81:                                               ; preds = %68, %49, %26, %78
  %82 = phi i32 [ %79, %78 ], [ %27, %26 ], [ %75, %68 ], [ %43, %49 ], !dbg !13055
  %83 = phi i32 [ %80, %78 ], [ 2, %26 ], [ 0, %68 ], [ %50, %49 ], !dbg !13026
  call void @llvm.dbg.value(metadata i32 %83, metadata !13017, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %82, metadata !13019, metadata !DIExpression()), !dbg !13026
  store i32 %82, i32* %1, align 4, !dbg !13104
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !13018, metadata !DIExpression()), !dbg !13026
  store i32 %82, i32* %13, align 4, !dbg !13105
  %84 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 4, !dbg !13106
  %85 = load i8, i8* %84, align 4, !dbg !13107
  %86 = or i8 %85, 1, !dbg !13107
  store i8 %86, i8* %84, align 4, !dbg !13107
  br label %87

87:                                               ; preds = %19, %81, %3
  %88 = phi i32 [ 0, %19 ], [ %83, %81 ], [ %9, %3 ], !dbg !13026
  call void @llvm.dbg.value(metadata i32 %88, metadata !13017, metadata !DIExpression()), !dbg !13026
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #19, !dbg !13108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !13108
  ret i32 %88, !dbg !13109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_truncate(%struct.FIL* noundef %0) local_unnamed_addr #0 !dbg !13110 {
  %2 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !13112, metadata !DIExpression()), !dbg !13116
  %3 = bitcast %struct.FATFS** %2 to i8*, !dbg !13117
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !13117
  %4 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !13118
  call void @llvm.dbg.value(metadata %struct.FATFS** %2, metadata !13114, metadata !DIExpression(DW_OP_deref)), !dbg !13116
  %5 = call fastcc i32 @validate(%struct._FDID* noundef %4, %struct.FATFS** noundef nonnull %2) #22, !dbg !13119
  call void @llvm.dbg.value(metadata i32 %5, metadata !13113, metadata !DIExpression()), !dbg !13116
  %6 = icmp eq i32 %5, 0, !dbg !13120
  br i1 %6, label %7, label %78, !dbg !13122

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 2, !dbg !13123
  %9 = load i8, i8* %8, align 1, !dbg !13123
  %10 = zext i8 %9 to i32, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %10, metadata !13113, metadata !DIExpression()), !dbg !13116
  %11 = icmp eq i8 %9, 0, !dbg !13125
  br i1 %11, label %12, label %78, !dbg !13126

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !13127
  %14 = load i8, i8* %13, align 4, !dbg !13127
  %15 = and i8 %14, 2, !dbg !13129
  %16 = icmp eq i8 %15, 0, !dbg !13129
  br i1 %16, label %78, label %17, !dbg !13130

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5, !dbg !13131
  %19 = load i32, i32* %18, align 4, !dbg !13131
  %20 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 3, !dbg !13133
  %21 = load i32, i32* %20, align 4, !dbg !13133
  %22 = icmp ugt i32 %19, %21, !dbg !13134
  br i1 %22, label %23, label %78, !dbg !13135

23:                                               ; preds = %17
  %24 = icmp eq i32 %21, 0, !dbg !13136
  br i1 %24, label %25, label %29, !dbg !13139

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4, !dbg !13140
  %27 = load i32, i32* %26, align 4, !dbg !13140
  %28 = tail call fastcc i32 @remove_chain(%struct._FDID* noundef nonnull %4, i32 noundef %27, i32 noundef 0) #22, !dbg !13142
  call void @llvm.dbg.value(metadata i32 %28, metadata !13113, metadata !DIExpression()), !dbg !13116
  store i32 0, i32* %26, align 4, !dbg !13143
  br label %54, !dbg !13144

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 4, !dbg !13145
  %31 = load i32, i32* %30, align 4, !dbg !13145
  %32 = tail call fastcc i32 @get_fat(%struct._FDID* noundef nonnull %4, i32 noundef %31) #22, !dbg !13147
  call void @llvm.dbg.value(metadata i32 %32, metadata !13115, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 0, metadata !13113, metadata !DIExpression()), !dbg !13116
  %33 = icmp eq i32 %32, -1, !dbg !13148
  %34 = zext i1 %33 to i32, !dbg !13150
  call void @llvm.dbg.value(metadata i32 %34, metadata !13113, metadata !DIExpression()), !dbg !13116
  %35 = icmp eq i32 %32, 1, !dbg !13151
  %36 = select i1 %35, i32 2, i32 %34, !dbg !13153
  call void @llvm.dbg.value(metadata i32 %36, metadata !13113, metadata !DIExpression()), !dbg !13116
  %37 = icmp eq i32 %36, 0, !dbg !13154
  br i1 %37, label %42, label %38, !dbg !13156

38:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %55, metadata !13113, metadata !DIExpression()), !dbg !13116
  %39 = load i32, i32* %20, align 4, !dbg !13157
  store i32 %39, i32* %18, align 4, !dbg !13158
  %40 = load i8, i8* %13, align 4, !dbg !13159
  %41 = or i8 %40, 64, !dbg !13159
  store i8 %41, i8* %13, align 4, !dbg !13159
  br label %75, !dbg !13160

42:                                               ; preds = %29
  %43 = load %struct.FATFS*, %struct.FATFS** %2, align 4, !dbg !13162
  call void @llvm.dbg.value(metadata %struct.FATFS* %43, metadata !13114, metadata !DIExpression()), !dbg !13116
  %44 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %43, i32 0, i32 11, !dbg !13163
  %45 = load i32, i32* %44, align 4, !dbg !13163
  %46 = icmp ult i32 %32, %45, !dbg !13164
  br i1 %46, label %51, label %47, !dbg !13165

47:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i32 %55, metadata !13113, metadata !DIExpression()), !dbg !13116
  %48 = load i32, i32* %20, align 4, !dbg !13157
  store i32 %48, i32* %18, align 4, !dbg !13158
  %49 = load i8, i8* %13, align 4, !dbg !13159
  %50 = or i8 %49, 64, !dbg !13159
  store i8 %50, i8* %13, align 4, !dbg !13159
  br label %60, !dbg !13160

51:                                               ; preds = %42
  %52 = load i32, i32* %30, align 4, !dbg !13166
  %53 = tail call fastcc i32 @remove_chain(%struct._FDID* noundef nonnull %4, i32 noundef %32, i32 noundef %52) #22, !dbg !13168
  call void @llvm.dbg.value(metadata i32 %53, metadata !13113, metadata !DIExpression()), !dbg !13116
  br label %54, !dbg !13169

54:                                               ; preds = %51, %25
  %55 = phi i32 [ %28, %25 ], [ %53, %51 ], !dbg !13170
  call void @llvm.dbg.value(metadata i32 %55, metadata !13113, metadata !DIExpression()), !dbg !13116
  %56 = load i32, i32* %20, align 4, !dbg !13157
  store i32 %56, i32* %18, align 4, !dbg !13158
  %57 = load i8, i8* %13, align 4, !dbg !13159
  %58 = or i8 %57, 64, !dbg !13159
  store i8 %58, i8* %13, align 4, !dbg !13159
  %59 = icmp eq i32 %55, 0, !dbg !13171
  br i1 %59, label %60, label %75, !dbg !13160

60:                                               ; preds = %47, %54
  %61 = phi i8 [ %49, %47 ], [ %57, %54 ]
  %62 = icmp sgt i8 %61, -1, !dbg !13172
  br i1 %62, label %78, label %63, !dbg !13173

63:                                               ; preds = %60
  %64 = load %struct.FATFS*, %struct.FATFS** %2, align 4, !dbg !13174
  call void @llvm.dbg.value(metadata %struct.FATFS* %64, metadata !13114, metadata !DIExpression()), !dbg !13116
  %65 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %64, i32 0, i32 1, !dbg !13177
  %66 = load i8, i8* %65, align 1, !dbg !13177
  %67 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 9, i32 0, !dbg !13178
  %68 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 5, !dbg !13179
  %69 = load i32, i32* %68, align 4, !dbg !13179
  %70 = tail call i32 @disk_write(i8 noundef zeroext %66, i8* noundef nonnull %67, i32 noundef %69, i32 noundef 1) #20, !dbg !13180
  %71 = icmp eq i32 %70, 0, !dbg !13181
  br i1 %71, label %72, label %75, !dbg !13182

72:                                               ; preds = %63
  %73 = load i8, i8* %13, align 4, !dbg !13183
  %74 = and i8 %73, 127, !dbg !13183
  store i8 %74, i8* %13, align 4, !dbg !13183
  br label %78

75:                                               ; preds = %54, %63, %38
  %76 = phi i32 [ %36, %38 ], [ 1, %63 ], [ %55, %54 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !13113, metadata !DIExpression()), !dbg !13116
  %77 = trunc i32 %76 to i8, !dbg !13185
  store i8 %77, i8* %8, align 1, !dbg !13185
  br label %78, !dbg !13185

78:                                               ; preds = %60, %72, %17, %12, %1, %7, %75
  %79 = phi i32 [ %76, %75 ], [ %5, %1 ], [ %10, %7 ], [ 7, %12 ], [ 0, %17 ], [ 0, %72 ], [ 0, %60 ], !dbg !13116
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !13188
  ret i32 %79, !dbg !13188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_unlink(i8* noundef %0) local_unnamed_addr #0 !dbg !13189 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.DIR, align 4
  %4 = alloca %struct.DIR, align 4
  %5 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13191, metadata !DIExpression()), !dbg !13197
  store i8* %0, i8** %2, align 4
  %6 = bitcast %struct.DIR* %3 to i8*, !dbg !13198
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #19, !dbg !13198
  call void @llvm.dbg.declare(metadata %struct.DIR* %3, metadata !13193, metadata !DIExpression()), !dbg !13199
  %7 = bitcast %struct.DIR* %4 to i8*, !dbg !13198
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #19, !dbg !13198
  call void @llvm.dbg.declare(metadata %struct.DIR* %4, metadata !13194, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.value(metadata i32 0, metadata !13195, metadata !DIExpression()), !dbg !13197
  %8 = bitcast %struct.FATFS** %5 to i8*, !dbg !13201
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !13201
  call void @llvm.dbg.value(metadata i8** %2, metadata !13191, metadata !DIExpression(DW_OP_deref)), !dbg !13197
  call void @llvm.dbg.value(metadata %struct.FATFS** %5, metadata !13196, metadata !DIExpression(DW_OP_deref)), !dbg !13197
  %9 = call fastcc i32 @find_volume(i8** noundef nonnull %2, %struct.FATFS** noundef nonnull %5, i8 noundef zeroext 2) #22, !dbg !13202
  call void @llvm.dbg.value(metadata i32 %9, metadata !13192, metadata !DIExpression()), !dbg !13197
  %10 = load %struct.FATFS*, %struct.FATFS** %5, align 4, !dbg !13203
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !13196, metadata !DIExpression()), !dbg !13197
  %11 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, !dbg !13204
  %12 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 0, !dbg !13205
  store %struct.FATFS* %10, %struct.FATFS** %12, align 4, !dbg !13206
  %13 = icmp eq i32 %9, 0, !dbg !13207
  br i1 %13, label %14, label %64, !dbg !13209

14:                                               ; preds = %1
  %15 = load i8*, i8** %2, align 4, !dbg !13210
  call void @llvm.dbg.value(metadata i8* %15, metadata !13191, metadata !DIExpression()), !dbg !13197
  %16 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %3, i8* noundef %15) #22, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %16, metadata !13192, metadata !DIExpression()), !dbg !13197
  %17 = icmp eq i32 %16, 0, !dbg !13213
  %18 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 5, i32 11, !dbg !13215
  %19 = load i8, i8* %18, align 1, !dbg !13215
  %20 = and i8 %19, 32, !dbg !13215
  %21 = icmp eq i8 %20, 0, !dbg !13215
  %22 = select i1 %21, i32 0, i32 6, !dbg !13215
  %23 = select i1 %17, i32 %22, i32 %16, !dbg !13215
  call void @llvm.dbg.value(metadata i32 %23, metadata !13192, metadata !DIExpression()), !dbg !13197
  %24 = icmp eq i32 %23, 0, !dbg !13216
  br i1 %24, label %25, label %64, !dbg !13218

25:                                               ; preds = %14
  %26 = icmp sgt i8 %19, -1, !dbg !13219
  br i1 %26, label %27, label %64, !dbg !13222

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 2, !dbg !13223
  %29 = load i8, i8* %28, align 2, !dbg !13223
  %30 = and i8 %29, 1, !dbg !13226
  %31 = icmp eq i8 %30, 0, !dbg !13226
  call void @llvm.dbg.value(metadata i32 undef, metadata !13192, metadata !DIExpression()), !dbg !13197
  br i1 %31, label %32, label %64, !dbg !13227

32:                                               ; preds = %27
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !13196, metadata !DIExpression()), !dbg !13197
  %33 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 4, !dbg !13228
  %34 = load i8*, i8** %33, align 4, !dbg !13228
  %35 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef %10, i8* noundef %34) #22, !dbg !13232
  call void @llvm.dbg.value(metadata i32 %35, metadata !13195, metadata !DIExpression()), !dbg !13197
  %36 = and i8 %29, 16, !dbg !13233
  %37 = icmp eq i8 %36, 0, !dbg !13233
  br i1 %37, label %52, label %38, !dbg !13235

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !13196, metadata !DIExpression()), !dbg !13197
  %39 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 10, !dbg !13236
  %40 = load i32, i32* %39, align 4, !dbg !13236
  %41 = icmp eq i32 %35, %40, !dbg !13239
  br i1 %41, label %64, label %42, !dbg !13240

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 0, i32 0, !dbg !13241
  store %struct.FATFS* %10, %struct.FATFS** %43, align 4, !dbg !13243
  %44 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 0, i32 4, !dbg !13244
  store i32 %35, i32* %44, align 4, !dbg !13245
  %45 = call fastcc i32 @dir_sdi(%struct.DIR* noundef nonnull %4, i32 noundef 0) #22, !dbg !13246
  call void @llvm.dbg.value(metadata i32 %45, metadata !13192, metadata !DIExpression()), !dbg !13197
  %46 = icmp eq i32 %45, 0, !dbg !13247
  br i1 %46, label %47, label %64, !dbg !13249

47:                                               ; preds = %42
  %48 = call fastcc i32 @dir_read(%struct.DIR* noundef nonnull %4, i32 noundef 0) #22, !dbg !13250
  call void @llvm.dbg.value(metadata i32 %48, metadata !13192, metadata !DIExpression()), !dbg !13197
  %49 = icmp eq i32 %48, 0, !dbg !13252
  %50 = select i1 %49, i32 7, i32 %48, !dbg !13254
  call void @llvm.dbg.value(metadata i32 %50, metadata !13192, metadata !DIExpression()), !dbg !13197
  %51 = icmp eq i32 %50, 4, !dbg !13255
  call void @llvm.dbg.value(metadata i32 undef, metadata !13192, metadata !DIExpression()), !dbg !13197
  br i1 %51, label %52, label %64, !dbg !13257

52:                                               ; preds = %47, %32
  %53 = call fastcc i32 @dir_remove(%struct.DIR* noundef nonnull %3) #22, !dbg !13258
  call void @llvm.dbg.value(metadata i32 %53, metadata !13192, metadata !DIExpression()), !dbg !13197
  %54 = icmp eq i32 %53, 0, !dbg !13261
  %55 = icmp ne i32 %35, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13263
  br i1 %56, label %57, label %59, !dbg !13263

57:                                               ; preds = %52
  %58 = call fastcc i32 @remove_chain(%struct._FDID* noundef nonnull %11, i32 noundef %35, i32 noundef 0) #22, !dbg !13264
  call void @llvm.dbg.value(metadata i32 %58, metadata !13192, metadata !DIExpression()), !dbg !13197
  br label %59, !dbg !13266

59:                                               ; preds = %57, %52
  %60 = phi i32 [ %58, %57 ], [ %53, %52 ], !dbg !13267
  call void @llvm.dbg.value(metadata i32 %60, metadata !13192, metadata !DIExpression()), !dbg !13197
  %61 = icmp eq i32 %60, 0, !dbg !13268
  br i1 %61, label %62, label %64, !dbg !13270

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !13196, metadata !DIExpression()), !dbg !13197
  %63 = tail call fastcc i32 @sync_fs(%struct.FATFS* noundef %10) #22, !dbg !13271
  call void @llvm.dbg.value(metadata i32 %63, metadata !13192, metadata !DIExpression()), !dbg !13197
  br label %64, !dbg !13272

64:                                               ; preds = %27, %25, %38, %42, %47, %14, %59, %62, %1
  %65 = phi i32 [ %63, %62 ], [ %60, %59 ], [ %23, %14 ], [ %9, %1 ], [ 7, %38 ], [ %45, %42 ], [ %50, %47 ], [ 6, %25 ], [ 7, %27 ], !dbg !13197
  call void @llvm.dbg.value(metadata i32 %65, metadata !13192, metadata !DIExpression()), !dbg !13197
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !13273
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #19, !dbg !13273
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #19, !dbg !13273
  ret i32 %65, !dbg !13274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @dir_remove(%struct.DIR* nocapture noundef readonly %0) unnamed_addr #0 !dbg !13275 {
  call void @llvm.dbg.value(metadata %struct.DIR* %0, metadata !13277, metadata !DIExpression()), !dbg !13280
  %2 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 0, i32 0, !dbg !13281
  %3 = load %struct.FATFS*, %struct.FATFS** %2, align 4, !dbg !13281
  call void @llvm.dbg.value(metadata %struct.FATFS* %3, metadata !13279, metadata !DIExpression()), !dbg !13280
  %4 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 3, !dbg !13282
  %5 = load i32, i32* %4, align 4, !dbg !13282
  %6 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %3, i32 noundef %5) #22, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %6, metadata !13278, metadata !DIExpression()), !dbg !13280
  %7 = icmp eq i32 %6, 0, !dbg !13284
  br i1 %7, label %8, label %12, !dbg !13286

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.DIR, %struct.DIR* %0, i32 0, i32 4, !dbg !13287
  %10 = load i8*, i8** %9, align 4, !dbg !13287
  store i8 -27, i8* %10, align 1, !dbg !13289
  %11 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %3, i32 0, i32 3, !dbg !13290
  store i8 1, i8* %11, align 1, !dbg !13291
  br label %12, !dbg !13292

12:                                               ; preds = %8, %1
  ret i32 %6, !dbg !13293
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_mkdir(i8* noundef %0) local_unnamed_addr #0 !dbg !13294 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.DIR, align 4
  %4 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13296, metadata !DIExpression()), !dbg !13306
  store i8* %0, i8** %2, align 4
  %5 = bitcast %struct.DIR* %3 to i8*, !dbg !13307
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #19, !dbg !13307
  call void @llvm.dbg.declare(metadata %struct.DIR* %3, metadata !13298, metadata !DIExpression()), !dbg !13308
  %6 = bitcast %struct.FATFS** %4 to i8*, !dbg !13309
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !13309
  call void @llvm.dbg.value(metadata i8** %2, metadata !13296, metadata !DIExpression(DW_OP_deref)), !dbg !13306
  call void @llvm.dbg.value(metadata %struct.FATFS** %4, metadata !13299, metadata !DIExpression(DW_OP_deref)), !dbg !13306
  %7 = call fastcc i32 @find_volume(i8** noundef nonnull %2, %struct.FATFS** noundef nonnull %4, i8 noundef zeroext 2) #22, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %7, metadata !13297, metadata !DIExpression()), !dbg !13306
  %8 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !13311
  call void @llvm.dbg.value(metadata %struct.FATFS* %8, metadata !13299, metadata !DIExpression()), !dbg !13306
  %9 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, !dbg !13312
  %10 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 0, !dbg !13313
  store %struct.FATFS* %8, %struct.FATFS** %10, align 4, !dbg !13314
  %11 = icmp eq i32 %7, 0, !dbg !13315
  br i1 %11, label %12, label %89, !dbg !13317

12:                                               ; preds = %1
  %13 = load i8*, i8** %2, align 4, !dbg !13318
  call void @llvm.dbg.value(metadata i8* %13, metadata !13296, metadata !DIExpression()), !dbg !13306
  %14 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %3, i8* noundef %13) #22, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %14, metadata !13297, metadata !DIExpression()), !dbg !13306
  %15 = icmp eq i32 %14, 0, !dbg !13321
  %16 = select i1 %15, i32 8, i32 %14, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %16, metadata !13297, metadata !DIExpression()), !dbg !13306
  %17 = icmp eq i32 %16, 4, !dbg !13324
  %18 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 5, i32 11, !dbg !13326
  %19 = load i8, i8* %18, align 1, !dbg !13326
  %20 = and i8 %19, 32, !dbg !13326
  %21 = icmp eq i8 %20, 0, !dbg !13326
  %22 = select i1 %21, i32 4, i32 6, !dbg !13326
  %23 = select i1 %17, i32 %22, i32 %16, !dbg !13326
  call void @llvm.dbg.value(metadata i32 %23, metadata !13297, metadata !DIExpression()), !dbg !13306
  %24 = icmp eq i32 %23, 4, !dbg !13327
  br i1 %24, label %25, label %89, !dbg !13329

25:                                               ; preds = %12
  %26 = call fastcc i32 @create_chain(%struct._FDID* noundef nonnull %9, i32 noundef 0) #22, !dbg !13330
  call void @llvm.dbg.value(metadata i32 %26, metadata !13303, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata %struct.FATFS* %8, metadata !13299, metadata !DIExpression()), !dbg !13306
  %27 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 7, !dbg !13332
  %28 = load i16, i16* %27, align 2, !dbg !13332
  %29 = zext i16 %28 to i32, !dbg !13333
  %30 = shl nuw nsw i32 %29, 9, !dbg !13334
  %31 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 5, !dbg !13335
  store i32 %30, i32* %31, align 4, !dbg !13336
  call void @llvm.dbg.value(metadata i32 0, metadata !13297, metadata !DIExpression()), !dbg !13306
  %32 = icmp eq i32 %26, 0, !dbg !13337
  %33 = select i1 %32, i32 7, i32 0, !dbg !13339
  call void @llvm.dbg.value(metadata i32 %33, metadata !13297, metadata !DIExpression()), !dbg !13306
  %34 = icmp eq i32 %26, 1, !dbg !13340
  %35 = select i1 %34, i32 2, i32 %33, !dbg !13342
  call void @llvm.dbg.value(metadata i32 %35, metadata !13297, metadata !DIExpression()), !dbg !13306
  %36 = icmp eq i32 %26, -1, !dbg !13343
  %37 = select i1 %36, i32 1, i32 %35, !dbg !13345
  call void @llvm.dbg.value(metadata i32 %37, metadata !13297, metadata !DIExpression()), !dbg !13306
  %38 = icmp eq i32 %37, 0, !dbg !13346
  br i1 %38, label %39, label %86, !dbg !13348

39:                                               ; preds = %25
  call void @llvm.dbg.value(metadata %struct.FATFS* %8, metadata !13299, metadata !DIExpression()), !dbg !13306
  %40 = tail call fastcc i32 @sync_window(%struct.FATFS* noundef nonnull %8) #22, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %40, metadata !13297, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 1212219392, metadata !13305, metadata !DIExpression()), !dbg !13306
  %41 = icmp eq i32 %40, 0, !dbg !13350
  br i1 %41, label %42, label %86, !dbg !13352

42:                                               ; preds = %39
  call void @llvm.dbg.value(metadata %struct.FATFS* %8, metadata !13299, metadata !DIExpression()), !dbg !13306
  %43 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %8, i32 noundef %26) #22, !dbg !13353
  call void @llvm.dbg.value(metadata i32 %43, metadata !13302, metadata !DIExpression()), !dbg !13306
  %44 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 18, i32 0, !dbg !13355
  call void @llvm.dbg.value(metadata i8* %44, metadata !13300, metadata !DIExpression()), !dbg !13306
  tail call fastcc void @mem_set(i8* noundef nonnull %44, i32 noundef 0, i32 noundef 512) #22, !dbg !13356
  tail call fastcc void @mem_set(i8* noundef nonnull %44, i32 noundef 32, i32 noundef 11) #22, !dbg !13357
  store i8 46, i8* %44, align 1, !dbg !13360
  %45 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 18, i32 11, !dbg !13361
  store i8 16, i8* %45, align 1, !dbg !13362
  %46 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 18, i32 22, !dbg !13363
  tail call fastcc void @st_dword(i8* noundef nonnull %46, i32 noundef 1212219392) #22, !dbg !13364
  tail call fastcc void @st_clust(%struct.FATFS* noundef nonnull %8, i8* noundef nonnull %44, i32 noundef %26) #22, !dbg !13365
  %47 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 18, i32 32, !dbg !13366
  tail call fastcc void @mem_cpy(i8* noundef nonnull %47, i8* noundef nonnull %44, i32 noundef 32) #22, !dbg !13367
  %48 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 18, i32 33, !dbg !13368
  store i8 46, i8* %48, align 1, !dbg !13369
  %49 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 4, !dbg !13370
  %50 = load i32, i32* %49, align 4, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %50, metadata !13304, metadata !DIExpression()), !dbg !13306
  %51 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 0, !dbg !13371
  %52 = load i8, i8* %51, align 4, !dbg !13371
  %53 = icmp eq i8 %52, 3, !dbg !13373
  br i1 %53, label %54, label %59, !dbg !13374

54:                                               ; preds = %42
  %55 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 15, !dbg !13375
  %56 = load i32, i32* %55, align 4, !dbg !13375
  %57 = icmp eq i32 %50, %56, !dbg !13376
  %58 = select i1 %57, i32 0, i32 %50, !dbg !13377
  call void @llvm.dbg.value(metadata i32 %58, metadata !13304, metadata !DIExpression()), !dbg !13306
  br label %59, !dbg !13377

59:                                               ; preds = %54, %42
  %60 = phi i32 [ %58, %54 ], [ %50, %42 ], !dbg !13378
  call void @llvm.dbg.value(metadata i32 %60, metadata !13304, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata %struct.FATFS* %8, metadata !13299, metadata !DIExpression()), !dbg !13306
  tail call fastcc void @st_clust(%struct.FATFS* noundef nonnull %8, i8* noundef nonnull %47, i32 noundef %60) #22, !dbg !13379
  %61 = load i16, i16* %27, align 2, !dbg !13380
  call void @llvm.dbg.value(metadata i16 %61, metadata !13301, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13306
  call void @llvm.dbg.value(metadata i32 0, metadata !13297, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 %43, metadata !13302, metadata !DIExpression()), !dbg !13306
  %62 = icmp eq i16 %61, 0, !dbg !13382
  br i1 %62, label %76, label %63, !dbg !13382

63:                                               ; preds = %59
  %64 = zext i16 %61 to i32, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %64, metadata !13301, metadata !DIExpression()), !dbg !13306
  %65 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 17
  %66 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 3
  br label %67, !dbg !13382

67:                                               ; preds = %63, %72
  %68 = phi i32 [ %43, %63 ], [ %73, %72 ]
  %69 = phi i32 [ %64, %63 ], [ %74, %72 ]
  call void @llvm.dbg.value(metadata i32 %68, metadata !13302, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 %69, metadata !13301, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 %68, metadata !13302, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13306
  call void @llvm.dbg.value(metadata %struct.FATFS* %8, metadata !13299, metadata !DIExpression()), !dbg !13306
  store i32 %68, i32* %65, align 4, !dbg !13384
  store i8 1, i8* %66, align 1, !dbg !13387
  %70 = tail call fastcc i32 @sync_window(%struct.FATFS* noundef nonnull %8) #22, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %70, metadata !13297, metadata !DIExpression()), !dbg !13306
  %71 = icmp eq i32 %70, 0, !dbg !13389
  br i1 %71, label %72, label %86, !dbg !13391

72:                                               ; preds = %67
  %73 = add i32 %68, 1, !dbg !13392
  call void @llvm.dbg.value(metadata i32 %73, metadata !13302, metadata !DIExpression()), !dbg !13306
  tail call fastcc void @mem_set(i8* noundef nonnull %44, i32 noundef 0, i32 noundef 512) #22, !dbg !13393
  %74 = add nsw i32 %69, -1, !dbg !13394
  call void @llvm.dbg.value(metadata i32 0, metadata !13297, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 %74, metadata !13301, metadata !DIExpression()), !dbg !13306
  %75 = icmp eq i32 %74, 0, !dbg !13382
  br i1 %75, label %76, label %67, !dbg !13382, !llvm.loop !13395

76:                                               ; preds = %72, %59
  call void @llvm.dbg.value(metadata i32 0, metadata !13297, metadata !DIExpression()), !dbg !13306
  %77 = call fastcc i32 @dir_register(%struct.DIR* noundef nonnull %3) #22, !dbg !13397
  call void @llvm.dbg.value(metadata i32 %77, metadata !13297, metadata !DIExpression()), !dbg !13306
  %78 = icmp eq i32 %77, 0, !dbg !13399
  br i1 %78, label %79, label %86, !dbg !13401

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 4, !dbg !13402
  %81 = load i8*, i8** %80, align 4, !dbg !13402
  call void @llvm.dbg.value(metadata i8* %81, metadata !13300, metadata !DIExpression()), !dbg !13306
  %82 = getelementptr inbounds i8, i8* %81, i32 22, !dbg !13405
  tail call fastcc void @st_dword(i8* noundef nonnull %82, i32 noundef 1212219392) #22, !dbg !13406
  call void @llvm.dbg.value(metadata %struct.FATFS* %8, metadata !13299, metadata !DIExpression()), !dbg !13306
  tail call fastcc void @st_clust(%struct.FATFS* noundef nonnull %8, i8* noundef %81, i32 noundef %26) #22, !dbg !13407
  %83 = getelementptr inbounds i8, i8* %81, i32 11, !dbg !13408
  store i8 16, i8* %83, align 1, !dbg !13409
  %84 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %8, i32 0, i32 3, !dbg !13410
  store i8 1, i8* %84, align 1, !dbg !13411
  %85 = tail call fastcc i32 @sync_fs(%struct.FATFS* noundef nonnull %8) #22, !dbg !13412
  call void @llvm.dbg.value(metadata i32 %85, metadata !13297, metadata !DIExpression()), !dbg !13306
  br label %89, !dbg !13414

86:                                               ; preds = %67, %39, %25, %76
  %87 = phi i32 [ %77, %76 ], [ %40, %39 ], [ %37, %25 ], [ 1, %67 ]
  %88 = call fastcc i32 @remove_chain(%struct._FDID* noundef nonnull %9, i32 noundef %26, i32 noundef 0) #22, !dbg !13415
  br label %89

89:                                               ; preds = %12, %79, %86, %1
  %90 = phi i32 [ %85, %79 ], [ %87, %86 ], [ %23, %12 ], [ %7, %1 ], !dbg !13306
  call void @llvm.dbg.value(metadata i32 %90, metadata !13297, metadata !DIExpression()), !dbg !13306
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !13417
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #19, !dbg !13417
  ret i32 %90, !dbg !13418
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_rename(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !13419 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.DIR, align 4
  %6 = alloca %struct.DIR, align 4
  %7 = alloca %struct.FATFS*, align 4
  %8 = alloca [24 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !13423, metadata !DIExpression()), !dbg !13433
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.value(metadata i8* %1, metadata !13424, metadata !DIExpression()), !dbg !13433
  store i8* %1, i8** %4, align 4
  %9 = bitcast %struct.DIR* %5 to i8*, !dbg !13434
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #19, !dbg !13434
  call void @llvm.dbg.declare(metadata %struct.DIR* %5, metadata !13426, metadata !DIExpression()), !dbg !13435
  %10 = bitcast %struct.DIR* %6 to i8*, !dbg !13434
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #19, !dbg !13434
  call void @llvm.dbg.declare(metadata %struct.DIR* %6, metadata !13427, metadata !DIExpression()), !dbg !13436
  %11 = bitcast %struct.FATFS** %7 to i8*, !dbg !13437
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #19, !dbg !13437
  %12 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i32 0, i32 0, !dbg !13438
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #19, !dbg !13438
  call void @llvm.dbg.declare(metadata [24 x i8]* %8, metadata !13429, metadata !DIExpression()), !dbg !13439
  call void @llvm.dbg.value(metadata i8** %4, metadata !13424, metadata !DIExpression(DW_OP_deref)), !dbg !13433
  %13 = call fastcc i32 @get_ldnumber(i8** noundef nonnull %4) #22, !dbg !13440
  call void @llvm.dbg.value(metadata i8** %3, metadata !13423, metadata !DIExpression(DW_OP_deref)), !dbg !13433
  call void @llvm.dbg.value(metadata %struct.FATFS** %7, metadata !13428, metadata !DIExpression(DW_OP_deref)), !dbg !13433
  %14 = call fastcc i32 @find_volume(i8** noundef nonnull %3, %struct.FATFS** noundef nonnull %7, i8 noundef zeroext 2) #22, !dbg !13441
  call void @llvm.dbg.value(metadata i32 %14, metadata !13425, metadata !DIExpression()), !dbg !13433
  %15 = icmp eq i32 %14, 0, !dbg !13442
  br i1 %15, label %16, label %86, !dbg !13444

16:                                               ; preds = %2
  %17 = load %struct.FATFS*, %struct.FATFS** %7, align 4, !dbg !13445
  call void @llvm.dbg.value(metadata %struct.FATFS* %17, metadata !13428, metadata !DIExpression()), !dbg !13433
  %18 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 0, !dbg !13447
  store %struct.FATFS* %17, %struct.FATFS** %18, align 4, !dbg !13448
  %19 = load i8*, i8** %3, align 4, !dbg !13449
  call void @llvm.dbg.value(metadata i8* %19, metadata !13423, metadata !DIExpression()), !dbg !13433
  %20 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %5, i8* noundef %19) #22, !dbg !13450
  call void @llvm.dbg.value(metadata i32 %20, metadata !13425, metadata !DIExpression()), !dbg !13433
  %21 = icmp eq i32 %20, 0, !dbg !13451
  %22 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 5, i32 11, !dbg !13453
  %23 = load i8, i8* %22, align 1, !dbg !13453
  %24 = and i8 %23, -96, !dbg !13453
  %25 = icmp eq i8 %24, 0, !dbg !13453
  %26 = select i1 %25, i32 0, i32 6, !dbg !13453
  %27 = select i1 %21, i32 %26, i32 %20, !dbg !13453
  call void @llvm.dbg.value(metadata i32 %27, metadata !13425, metadata !DIExpression()), !dbg !13433
  %28 = icmp eq i32 %27, 0, !dbg !13454
  br i1 %28, label %29, label %86, !dbg !13456

29:                                               ; preds = %16
  %30 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 4, !dbg !13457
  %31 = load i8*, i8** %30, align 4, !dbg !13457
  %32 = getelementptr inbounds i8, i8* %31, i32 11, !dbg !13460
  call fastcc void @mem_cpy(i8* noundef nonnull %12, i8* noundef nonnull %32, i32 noundef 21) #22, !dbg !13461
  call fastcc void @mem_cpy(i8* noundef nonnull %10, i8* noundef nonnull %9, i32 noundef 48) #22, !dbg !13462
  %33 = load i8*, i8** %4, align 4, !dbg !13463
  call void @llvm.dbg.value(metadata i8* %33, metadata !13424, metadata !DIExpression()), !dbg !13433
  %34 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %6, i8* noundef %33) #22, !dbg !13464
  call void @llvm.dbg.value(metadata i32 %34, metadata !13425, metadata !DIExpression()), !dbg !13433
  switch i32 %34, label %86 [
    i32 0, label %35
    i32 4, label %47
  ], !dbg !13465

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.DIR, %struct.DIR* %6, i32 0, i32 0, i32 4, !dbg !13466
  %37 = load i32, i32* %36, align 4, !dbg !13466
  %38 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 4, !dbg !13469
  %39 = load i32, i32* %38, align 4, !dbg !13469
  %40 = icmp eq i32 %37, %39, !dbg !13470
  %41 = getelementptr inbounds %struct.DIR, %struct.DIR* %6, i32 0, i32 1, !dbg !13471
  %42 = load i32, i32* %41, align 4, !dbg !13471
  %43 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 1, !dbg !13471
  %44 = load i32, i32* %43, align 4, !dbg !13471
  %45 = icmp eq i32 %42, %44, !dbg !13471
  %46 = select i1 %40, i1 %45, i1 false, !dbg !13471
  call void @llvm.dbg.value(metadata i32 undef, metadata !13425, metadata !DIExpression()), !dbg !13433
  br i1 %46, label %47, label %86, !dbg !13472

47:                                               ; preds = %29, %35
  %48 = call fastcc i32 @dir_register(%struct.DIR* noundef nonnull %6) #22, !dbg !13473
  call void @llvm.dbg.value(metadata i32 %48, metadata !13425, metadata !DIExpression()), !dbg !13433
  %49 = icmp eq i32 %48, 0, !dbg !13476
  br i1 %49, label %50, label %86, !dbg !13478

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.DIR, %struct.DIR* %6, i32 0, i32 4, !dbg !13479
  %52 = load i8*, i8** %51, align 4, !dbg !13479
  call void @llvm.dbg.value(metadata i8* %52, metadata !13431, metadata !DIExpression()), !dbg !13433
  %53 = getelementptr inbounds i8, i8* %52, i32 13, !dbg !13481
  %54 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i32 0, i32 2, !dbg !13482
  call fastcc void @mem_cpy(i8* noundef nonnull %53, i8* noundef nonnull %54, i32 noundef 19) #22, !dbg !13483
  %55 = load i8, i8* %12, align 1, !dbg !13484
  %56 = or i8 %55, 32, !dbg !13485
  %57 = getelementptr inbounds i8, i8* %52, i32 11, !dbg !13486
  store i8 %56, i8* %57, align 1, !dbg !13487
  call void @llvm.dbg.value(metadata %struct.FATFS* %17, metadata !13428, metadata !DIExpression()), !dbg !13433
  %58 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %17, i32 0, i32 3, !dbg !13488
  store i8 1, i8* %58, align 1, !dbg !13489
  %59 = load i8, i8* %57, align 1, !dbg !13490
  %60 = and i8 %59, 16, !dbg !13492
  %61 = icmp eq i8 %60, 0, !dbg !13492
  br i1 %61, label %81, label %62, !dbg !13493

62:                                               ; preds = %50
  %63 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 4, !dbg !13494
  %64 = load i32, i32* %63, align 4, !dbg !13494
  %65 = getelementptr inbounds %struct.DIR, %struct.DIR* %6, i32 0, i32 0, i32 4, !dbg !13495
  %66 = load i32, i32* %65, align 4, !dbg !13495
  %67 = icmp eq i32 %64, %66, !dbg !13496
  br i1 %67, label %81, label %68, !dbg !13497

68:                                               ; preds = %62
  call void @llvm.dbg.value(metadata %struct.FATFS* %17, metadata !13428, metadata !DIExpression()), !dbg !13433
  %69 = tail call fastcc i32 @ld_clust(%struct.FATFS* noundef nonnull %17, i8* noundef nonnull %52) #22, !dbg !13498
  %70 = tail call fastcc i32 @clust2sect(%struct.FATFS* noundef nonnull %17, i32 noundef %69) #22, !dbg !13500
  call void @llvm.dbg.value(metadata i32 %70, metadata !13432, metadata !DIExpression()), !dbg !13433
  %71 = icmp eq i32 %70, 0, !dbg !13501
  br i1 %71, label %86, label %72, !dbg !13503

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata %struct.FATFS* %17, metadata !13428, metadata !DIExpression()), !dbg !13433
  %73 = tail call fastcc i32 @move_window(%struct.FATFS* noundef nonnull %17, i32 noundef %70) #22, !dbg !13504
  call void @llvm.dbg.value(metadata i32 %73, metadata !13425, metadata !DIExpression()), !dbg !13433
  %74 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %17, i32 0, i32 18, i32 32, !dbg !13506
  call void @llvm.dbg.value(metadata i8* %74, metadata !13431, metadata !DIExpression()), !dbg !13433
  %75 = icmp eq i32 %73, 0, !dbg !13507
  br i1 %75, label %76, label %86, !dbg !13509

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %17, i32 0, i32 18, i32 33, !dbg !13510
  %78 = load i8, i8* %77, align 1, !dbg !13510
  %79 = icmp eq i8 %78, 46, !dbg !13511
  br i1 %79, label %80, label %81, !dbg !13512

80:                                               ; preds = %76
  tail call fastcc void @st_clust(%struct.FATFS* noundef nonnull %17, i8* noundef nonnull %74, i32 noundef %66) #22, !dbg !13513
  call void @llvm.dbg.value(metadata %struct.FATFS* %17, metadata !13428, metadata !DIExpression()), !dbg !13433
  store i8 1, i8* %58, align 1, !dbg !13515
  br label %81, !dbg !13516

81:                                               ; preds = %50, %62, %76, %80
  call void @llvm.dbg.value(metadata i32 0, metadata !13425, metadata !DIExpression()), !dbg !13433
  %82 = call fastcc i32 @dir_remove(%struct.DIR* noundef nonnull %5) #22, !dbg !13517
  call void @llvm.dbg.value(metadata i32 %82, metadata !13425, metadata !DIExpression()), !dbg !13433
  %83 = icmp eq i32 %82, 0, !dbg !13520
  br i1 %83, label %84, label %86, !dbg !13522

84:                                               ; preds = %81
  call void @llvm.dbg.value(metadata %struct.FATFS* %17, metadata !13428, metadata !DIExpression()), !dbg !13433
  %85 = tail call fastcc i32 @sync_fs(%struct.FATFS* noundef nonnull %17) #22, !dbg !13523
  call void @llvm.dbg.value(metadata i32 %85, metadata !13425, metadata !DIExpression()), !dbg !13433
  br label %86, !dbg !13525

86:                                               ; preds = %29, %35, %68, %47, %72, %16, %81, %84, %2
  %87 = phi i32 [ %85, %84 ], [ %82, %81 ], [ %27, %16 ], [ %14, %2 ], [ 2, %68 ], [ %48, %47 ], [ %73, %72 ], [ 8, %35 ], [ %34, %29 ], !dbg !13433
  call void @llvm.dbg.value(metadata i32 %87, metadata !13425, metadata !DIExpression()), !dbg !13433
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #19, !dbg !13526
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #19, !dbg !13526
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #19, !dbg !13526
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #19, !dbg !13526
  ret i32 %87, !dbg !13527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_chmod(i8* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !13528 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.DIR, align 4
  %6 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13532, metadata !DIExpression()), !dbg !13538
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.value(metadata i8 %1, metadata !13533, metadata !DIExpression()), !dbg !13538
  call void @llvm.dbg.value(metadata i8 %2, metadata !13534, metadata !DIExpression()), !dbg !13538
  %7 = bitcast %struct.DIR* %5 to i8*, !dbg !13539
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #19, !dbg !13539
  call void @llvm.dbg.declare(metadata %struct.DIR* %5, metadata !13536, metadata !DIExpression()), !dbg !13540
  %8 = bitcast %struct.FATFS** %6 to i8*, !dbg !13541
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !13541
  call void @llvm.dbg.value(metadata i8** %4, metadata !13532, metadata !DIExpression(DW_OP_deref)), !dbg !13538
  call void @llvm.dbg.value(metadata %struct.FATFS** %6, metadata !13537, metadata !DIExpression(DW_OP_deref)), !dbg !13538
  %9 = call fastcc i32 @find_volume(i8** noundef nonnull %4, %struct.FATFS** noundef nonnull %6, i8 noundef zeroext 2) #22, !dbg !13542
  call void @llvm.dbg.value(metadata i32 %9, metadata !13535, metadata !DIExpression()), !dbg !13538
  %10 = load %struct.FATFS*, %struct.FATFS** %6, align 4, !dbg !13543
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !13537, metadata !DIExpression()), !dbg !13538
  %11 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 0, !dbg !13544
  store %struct.FATFS* %10, %struct.FATFS** %11, align 4, !dbg !13545
  %12 = icmp eq i32 %9, 0, !dbg !13546
  br i1 %12, label %13, label %36, !dbg !13548

13:                                               ; preds = %3
  %14 = load i8*, i8** %4, align 4, !dbg !13549
  call void @llvm.dbg.value(metadata i8* %14, metadata !13532, metadata !DIExpression()), !dbg !13538
  %15 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %5, i8* noundef %14) #22, !dbg !13551
  call void @llvm.dbg.value(metadata i32 %15, metadata !13535, metadata !DIExpression()), !dbg !13538
  %16 = icmp eq i32 %15, 0, !dbg !13552
  %17 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 5, i32 11, !dbg !13554
  %18 = load i8, i8* %17, align 1, !dbg !13554
  %19 = and i8 %18, -96, !dbg !13554
  %20 = icmp eq i8 %19, 0, !dbg !13554
  %21 = select i1 %20, i32 0, i32 6, !dbg !13554
  %22 = select i1 %16, i32 %21, i32 %15, !dbg !13554
  call void @llvm.dbg.value(metadata i32 %22, metadata !13535, metadata !DIExpression()), !dbg !13538
  %23 = icmp eq i32 %22, 0, !dbg !13555
  br i1 %23, label %24, label %36, !dbg !13557

24:                                               ; preds = %13
  %25 = and i8 %2, 39, !dbg !13558
  call void @llvm.dbg.value(metadata i8 %25, metadata !13534, metadata !DIExpression()), !dbg !13538
  %26 = and i8 %25, %1, !dbg !13560
  %27 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 4, !dbg !13562
  %28 = load i8*, i8** %27, align 4, !dbg !13562
  %29 = getelementptr inbounds i8, i8* %28, i32 11, !dbg !13563
  %30 = load i8, i8* %29, align 1, !dbg !13563
  %31 = xor i8 %25, -1, !dbg !13564
  %32 = and i8 %30, %31, !dbg !13565
  %33 = or i8 %32, %26, !dbg !13566
  store i8 %33, i8* %29, align 1, !dbg !13567
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !13537, metadata !DIExpression()), !dbg !13538
  %34 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %10, i32 0, i32 3, !dbg !13568
  store i8 1, i8* %34, align 1, !dbg !13569
  call void @llvm.dbg.value(metadata %struct.FATFS* %10, metadata !13537, metadata !DIExpression()), !dbg !13538
  %35 = tail call fastcc i32 @sync_fs(%struct.FATFS* noundef %10) #22, !dbg !13570
  call void @llvm.dbg.value(metadata i32 %35, metadata !13535, metadata !DIExpression()), !dbg !13538
  br label %36, !dbg !13572

36:                                               ; preds = %13, %24, %3
  %37 = phi i32 [ %35, %24 ], [ %22, %13 ], [ %9, %3 ], !dbg !13538
  call void @llvm.dbg.value(metadata i32 %37, metadata !13535, metadata !DIExpression()), !dbg !13538
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !13573
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #19, !dbg !13573
  ret i32 %37, !dbg !13574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_utime(i8* noundef %0, %struct.FILINFO* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !13575 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.DIR, align 4
  %5 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13581, metadata !DIExpression()), !dbg !13586
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.value(metadata %struct.FILINFO* %1, metadata !13582, metadata !DIExpression()), !dbg !13586
  %6 = bitcast %struct.DIR* %4 to i8*, !dbg !13587
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #19, !dbg !13587
  call void @llvm.dbg.declare(metadata %struct.DIR* %4, metadata !13584, metadata !DIExpression()), !dbg !13588
  %7 = bitcast %struct.FATFS** %5 to i8*, !dbg !13589
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !13589
  call void @llvm.dbg.value(metadata i8** %3, metadata !13581, metadata !DIExpression(DW_OP_deref)), !dbg !13586
  call void @llvm.dbg.value(metadata %struct.FATFS** %5, metadata !13585, metadata !DIExpression(DW_OP_deref)), !dbg !13586
  %8 = call fastcc i32 @find_volume(i8** noundef nonnull %3, %struct.FATFS** noundef nonnull %5, i8 noundef zeroext 2) #22, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %8, metadata !13583, metadata !DIExpression()), !dbg !13586
  %9 = load %struct.FATFS*, %struct.FATFS** %5, align 4, !dbg !13591
  call void @llvm.dbg.value(metadata %struct.FATFS* %9, metadata !13585, metadata !DIExpression()), !dbg !13586
  %10 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 0, i32 0, !dbg !13592
  store %struct.FATFS* %9, %struct.FATFS** %10, align 4, !dbg !13593
  %11 = icmp eq i32 %8, 0, !dbg !13594
  br i1 %11, label %12, label %37, !dbg !13596

12:                                               ; preds = %2
  %13 = load i8*, i8** %3, align 4, !dbg !13597
  call void @llvm.dbg.value(metadata i8* %13, metadata !13581, metadata !DIExpression()), !dbg !13586
  %14 = call fastcc i32 @follow_path(%struct.DIR* noundef nonnull %4, i8* noundef %13) #22, !dbg !13599
  call void @llvm.dbg.value(metadata i32 %14, metadata !13583, metadata !DIExpression()), !dbg !13586
  %15 = icmp eq i32 %14, 0, !dbg !13600
  %16 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 5, i32 11, !dbg !13602
  %17 = load i8, i8* %16, align 1, !dbg !13602
  %18 = and i8 %17, -96, !dbg !13602
  %19 = icmp eq i8 %18, 0, !dbg !13602
  %20 = select i1 %19, i32 0, i32 6, !dbg !13602
  %21 = select i1 %15, i32 %20, i32 %14, !dbg !13602
  call void @llvm.dbg.value(metadata i32 %21, metadata !13583, metadata !DIExpression()), !dbg !13586
  %22 = icmp eq i32 %21, 0, !dbg !13603
  br i1 %22, label %23, label %37, !dbg !13605

23:                                               ; preds = %12
  %24 = getelementptr inbounds %struct.DIR, %struct.DIR* %4, i32 0, i32 4, !dbg !13606
  %25 = load i8*, i8** %24, align 4, !dbg !13606
  %26 = getelementptr inbounds i8, i8* %25, i32 22, !dbg !13609
  %27 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 1, !dbg !13610
  %28 = load i16, i16* %27, align 4, !dbg !13610
  %29 = zext i16 %28 to i32, !dbg !13611
  %30 = shl nuw i32 %29, 16, !dbg !13612
  %31 = getelementptr inbounds %struct.FILINFO, %struct.FILINFO* %1, i32 0, i32 2, !dbg !13613
  %32 = load i16, i16* %31, align 2, !dbg !13613
  %33 = zext i16 %32 to i32, !dbg !13614
  %34 = or i32 %30, %33, !dbg !13615
  tail call fastcc void @st_dword(i8* noundef nonnull %26, i32 noundef %34) #22, !dbg !13616
  call void @llvm.dbg.value(metadata %struct.FATFS* %9, metadata !13585, metadata !DIExpression()), !dbg !13586
  %35 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %9, i32 0, i32 3, !dbg !13617
  store i8 1, i8* %35, align 1, !dbg !13618
  call void @llvm.dbg.value(metadata %struct.FATFS* %9, metadata !13585, metadata !DIExpression()), !dbg !13586
  %36 = tail call fastcc i32 @sync_fs(%struct.FATFS* noundef %9) #22, !dbg !13619
  call void @llvm.dbg.value(metadata i32 %36, metadata !13583, metadata !DIExpression()), !dbg !13586
  br label %37, !dbg !13621

37:                                               ; preds = %12, %23, %2
  %38 = phi i32 [ %36, %23 ], [ %21, %12 ], [ %8, %2 ], !dbg !13586
  call void @llvm.dbg.value(metadata i32 %38, metadata !13583, metadata !DIExpression()), !dbg !13586
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !13622
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #19, !dbg !13622
  ret i32 %38, !dbg !13623
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_getlabel(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !13624 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.DIR, align 4
  %6 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13628, metadata !DIExpression()), !dbg !13636
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.value(metadata i8* %1, metadata !13629, metadata !DIExpression()), !dbg !13636
  call void @llvm.dbg.value(metadata i32* %2, metadata !13630, metadata !DIExpression()), !dbg !13636
  %7 = bitcast %struct.DIR* %5 to i8*, !dbg !13637
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #19, !dbg !13637
  call void @llvm.dbg.declare(metadata %struct.DIR* %5, metadata !13632, metadata !DIExpression()), !dbg !13638
  %8 = bitcast %struct.FATFS** %6 to i8*, !dbg !13639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !13639
  call void @llvm.dbg.value(metadata i8** %4, metadata !13628, metadata !DIExpression(DW_OP_deref)), !dbg !13636
  call void @llvm.dbg.value(metadata %struct.FATFS** %6, metadata !13633, metadata !DIExpression(DW_OP_deref)), !dbg !13636
  %9 = call fastcc i32 @find_volume(i8** noundef nonnull %4, %struct.FATFS** noundef nonnull %6, i8 noundef zeroext 0) #22, !dbg !13640
  call void @llvm.dbg.value(metadata i32 %9, metadata !13631, metadata !DIExpression()), !dbg !13636
  %10 = icmp eq i32 %9, 0, !dbg !13641
  %11 = icmp ne i8* %1, null
  %12 = and i1 %11, %10, !dbg !13643
  br i1 %12, label %13, label %45, !dbg !13643

13:                                               ; preds = %3
  %14 = load %struct.FATFS*, %struct.FATFS** %6, align 4, !dbg !13644
  call void @llvm.dbg.value(metadata %struct.FATFS* %14, metadata !13633, metadata !DIExpression()), !dbg !13636
  %15 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 0, !dbg !13646
  store %struct.FATFS* %14, %struct.FATFS** %15, align 4, !dbg !13647
  %16 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 0, i32 4, !dbg !13648
  store i32 0, i32* %16, align 4, !dbg !13649
  %17 = call fastcc i32 @dir_sdi(%struct.DIR* noundef nonnull %5, i32 noundef 0) #22, !dbg !13650
  call void @llvm.dbg.value(metadata i32 %17, metadata !13631, metadata !DIExpression()), !dbg !13636
  %18 = icmp eq i32 %17, 0, !dbg !13651
  br i1 %18, label %19, label %41, !dbg !13653

19:                                               ; preds = %13
  %20 = call fastcc i32 @dir_read(%struct.DIR* noundef nonnull %5, i32 noundef 1) #22, !dbg !13654
  call void @llvm.dbg.value(metadata i32 %20, metadata !13631, metadata !DIExpression()), !dbg !13636
  %21 = icmp eq i32 %20, 0, !dbg !13656
  br i1 %21, label %22, label %41, !dbg !13658

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.DIR, %struct.DIR* %5, i32 0, i32 4
  %24 = load i8*, i8** %23, align 4
  br label %25, !dbg !13659

25:                                               ; preds = %22, %25
  %26 = phi i32 [ %27, %25 ], [ 0, %22 ], !dbg !13662
  call void @llvm.dbg.value(metadata i32 %26, metadata !13635, metadata !DIExpression()), !dbg !13636
  call void @llvm.dbg.value(metadata i32 %26, metadata !13634, metadata !DIExpression()), !dbg !13636
  %27 = add nuw nsw i32 %26, 1, !dbg !13663
  call void @llvm.dbg.value(metadata i32 %27, metadata !13634, metadata !DIExpression()), !dbg !13636
  %28 = getelementptr inbounds i8, i8* %24, i32 %26, !dbg !13665
  %29 = load i8, i8* %28, align 1, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %27, metadata !13635, metadata !DIExpression()), !dbg !13636
  %30 = getelementptr inbounds i8, i8* %1, i32 %26, !dbg !13666
  store i8 %29, i8* %30, align 1, !dbg !13667
  %31 = icmp eq i32 %27, 11, !dbg !13668
  br i1 %31, label %32, label %25, !dbg !13669, !llvm.loop !13670

32:                                               ; preds = %25, %36
  %33 = phi i32 [ %37, %36 ], [ 11, %25 ], !dbg !13662
  call void @llvm.dbg.value(metadata i32 %33, metadata !13635, metadata !DIExpression()), !dbg !13636
  %34 = getelementptr inbounds i8, i8* %1, i32 %33, !dbg !13672
  store i8 0, i8* %34, align 1, !dbg !13674
  %35 = icmp eq i32 %33, 0, !dbg !13675
  br i1 %35, label %45, label %36, !dbg !13677

36:                                               ; preds = %32
  %37 = add nsw i32 %33, -1, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %37, metadata !13635, metadata !DIExpression()), !dbg !13636
  %38 = getelementptr inbounds i8, i8* %1, i32 %37, !dbg !13679
  %39 = load i8, i8* %38, align 1, !dbg !13679
  %40 = icmp eq i8 %39, 32, !dbg !13680
  br i1 %40, label %32, label %45, !dbg !13681, !llvm.loop !13682

41:                                               ; preds = %19, %13
  %42 = phi i32 [ %20, %19 ], [ %17, %13 ], !dbg !13685
  call void @llvm.dbg.value(metadata i32 %42, metadata !13631, metadata !DIExpression()), !dbg !13636
  %43 = icmp eq i32 %42, 4, !dbg !13686
  br i1 %43, label %44, label %65, !dbg !13688

44:                                               ; preds = %41
  store i8 0, i8* %1, align 1, !dbg !13689
  call void @llvm.dbg.value(metadata i32 0, metadata !13631, metadata !DIExpression()), !dbg !13636
  br label %45, !dbg !13691

45:                                               ; preds = %36, %32, %44, %3
  %46 = phi i32 [ 0, %44 ], [ %9, %3 ], [ 0, %32 ], [ 0, %36 ], !dbg !13636
  call void @llvm.dbg.value(metadata i32 %46, metadata !13631, metadata !DIExpression()), !dbg !13636
  %47 = icmp eq i32 %46, 0, !dbg !13692
  %48 = icmp ne i32* %2, null
  %49 = and i1 %48, %47, !dbg !13694
  br i1 %49, label %50, label %65, !dbg !13694

50:                                               ; preds = %45
  %51 = load %struct.FATFS*, %struct.FATFS** %6, align 4, !dbg !13695
  call void @llvm.dbg.value(metadata %struct.FATFS* %51, metadata !13633, metadata !DIExpression()), !dbg !13636
  %52 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %51, i32 0, i32 13, !dbg !13697
  %53 = load i32, i32* %52, align 4, !dbg !13697
  %54 = tail call fastcc i32 @move_window(%struct.FATFS* noundef %51, i32 noundef %53) #22, !dbg !13698
  call void @llvm.dbg.value(metadata i32 %54, metadata !13631, metadata !DIExpression()), !dbg !13636
  %55 = icmp eq i32 %54, 0, !dbg !13699
  br i1 %55, label %56, label %65, !dbg !13701

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.FATFS* %51, metadata !13633, metadata !DIExpression()), !dbg !13636
  %57 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %51, i32 0, i32 0, !dbg !13702
  %58 = load i8, i8* %57, align 4, !dbg !13702
  %59 = icmp eq i8 %58, 3, !dbg !13704
  %60 = select i1 %59, i32 67, i32 39, !dbg !13704
  %61 = icmp eq i8 %58, 4, !dbg !13704
  %62 = select i1 %61, i32 100, i32 %60, !dbg !13704
  call void @llvm.dbg.value(metadata i32 %62, metadata !13635, metadata !DIExpression()), !dbg !13636
  %63 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %51, i32 0, i32 18, i32 %62, !dbg !13705
  %64 = tail call fastcc i32 @ld_dword(i8* noundef nonnull %63) #22, !dbg !13706
  store i32 %64, i32* %2, align 4, !dbg !13707
  br label %65, !dbg !13708

65:                                               ; preds = %41, %50, %56, %45
  %66 = phi i32 [ 0, %56 ], [ %54, %50 ], [ %46, %45 ], [ %42, %41 ], !dbg !13636
  call void @llvm.dbg.value(metadata i32 %66, metadata !13631, metadata !DIExpression()), !dbg !13636
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !13709
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #19, !dbg !13709
  ret i32 %66, !dbg !13710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_setlabel(i8* noundef %0) local_unnamed_addr #0 !dbg !1296 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.DIR, align 4
  %4 = alloca %struct.FATFS*, align 4
  %5 = alloca [22 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1300, metadata !DIExpression()), !dbg !13711
  store i8* %0, i8** %2, align 4
  %6 = bitcast %struct.DIR* %3 to i8*, !dbg !13712
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #19, !dbg !13712
  call void @llvm.dbg.declare(metadata %struct.DIR* %3, metadata !1302, metadata !DIExpression()), !dbg !13713
  %7 = bitcast %struct.FATFS** %4 to i8*, !dbg !13714
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !13714
  %8 = getelementptr inbounds [22 x i8], [22 x i8]* %5, i32 0, i32 0, !dbg !13715
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %8) #19, !dbg !13715
  call void @llvm.dbg.declare(metadata [22 x i8]* %5, metadata !1350, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i8** %2, metadata !1300, metadata !DIExpression(DW_OP_deref)), !dbg !13711
  call void @llvm.dbg.value(metadata %struct.FATFS** %4, metadata !1349, metadata !DIExpression(DW_OP_deref)), !dbg !13711
  %9 = call fastcc i32 @find_volume(i8** noundef nonnull %2, %struct.FATFS** noundef nonnull %4, i8 noundef zeroext 2) #22, !dbg !13717
  call void @llvm.dbg.value(metadata i32 %9, metadata !1301, metadata !DIExpression()), !dbg !13711
  %10 = icmp eq i32 %9, 0, !dbg !13718
  br i1 %10, label %11, label %94, !dbg !13720

11:                                               ; preds = %1
  %12 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !13721
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !1349, metadata !DIExpression()), !dbg !13711
  %13 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 0, !dbg !13722
  store %struct.FATFS* %12, %struct.FATFS** %13, align 4, !dbg !13723
  call void @llvm.dbg.value(metadata i32 0, metadata !1354, metadata !DIExpression()), !dbg !13711
  %14 = load i8*, i8** %2, align 4
  br label %15, !dbg !13724

15:                                               ; preds = %15, %11
  %16 = phi i32 [ 0, %11 ], [ %20, %15 ], !dbg !13726
  call void @llvm.dbg.value(metadata i32 %16, metadata !1354, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i8* %14, metadata !1300, metadata !DIExpression()), !dbg !13711
  %17 = getelementptr inbounds i8, i8* %14, i32 %16, !dbg !13727
  %18 = load i8, i8* %17, align 1, !dbg !13727
  %19 = icmp ugt i8 %18, 31, !dbg !13729
  %20 = add i32 %16, 1, !dbg !13730
  call void @llvm.dbg.value(metadata i32 %20, metadata !1354, metadata !DIExpression()), !dbg !13711
  br i1 %19, label %15, label %21, !dbg !13731, !llvm.loop !13732

21:                                               ; preds = %15, %24
  %22 = phi i32 [ %25, %24 ], [ %16, %15 ], !dbg !13711
  call void @llvm.dbg.value(metadata i32 %22, metadata !1354, metadata !DIExpression()), !dbg !13711
  %23 = icmp eq i32 %22, 0, !dbg !13734
  br i1 %23, label %72, label %24, !dbg !13738

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %14, metadata !1300, metadata !DIExpression()), !dbg !13711
  %25 = add i32 %22, -1, !dbg !13739
  %26 = getelementptr inbounds i8, i8* %14, i32 %25, !dbg !13740
  %27 = load i8, i8* %26, align 1, !dbg !13740
  %28 = icmp eq i8 %27, 32, !dbg !13741
  br i1 %28, label %21, label %29, !dbg !13742, !llvm.loop !13743

29:                                               ; preds = %24
  store i8 0, i8* %8, align 1, !dbg !13745
  call void @llvm.dbg.value(metadata i32 0, metadata !1353, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i32 0, metadata !1352, metadata !DIExpression()), !dbg !13711
  br label %30, !dbg !13748

30:                                               ; preds = %56, %29
  %31 = phi i32 [ 0, %29 ], [ %32, %56 ], !dbg !13749
  call void @llvm.dbg.value(metadata i32 %31, metadata !1353, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i32 %31, metadata !1352, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i8* %14, metadata !1300, metadata !DIExpression()), !dbg !13711
  %32 = add nuw nsw i32 %31, 1, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %32, metadata !1352, metadata !DIExpression()), !dbg !13711
  %33 = getelementptr inbounds i8, i8* %14, i32 %31, !dbg !13752
  %34 = load i8, i8* %33, align 1, !dbg !13752
  %35 = zext i8 %34 to i16, !dbg !13753
  call void @llvm.dbg.value(metadata i16 %35, metadata !1355, metadata !DIExpression()), !dbg !13711
  %36 = add i8 %34, -97, !dbg !13754
  %37 = icmp ult i8 %36, 26, !dbg !13754
  %38 = add nsw i16 %35, -32, !dbg !13754
  %39 = select i1 %37, i16 %38, i16 %35, !dbg !13754
  call void @llvm.dbg.value(metadata i16 %39, metadata !1355, metadata !DIExpression()), !dbg !13711
  %40 = icmp ugt i16 %39, 127, !dbg !13756
  br i1 %40, label %41, label %47, !dbg !13758

41:                                               ; preds = %30
  %42 = zext i16 %39 to i32, !dbg !13759
  %43 = add nsw i32 %42, -128, !dbg !13760
  %44 = getelementptr inbounds [128 x i8], [128 x i8]* @ExCvt, i32 0, i32 %43, !dbg !13761
  %45 = load i8, i8* %44, align 1, !dbg !13761
  %46 = zext i8 %45 to i16, !dbg !13761
  call void @llvm.dbg.value(metadata i16 %46, metadata !1355, metadata !DIExpression()), !dbg !13711
  br label %47, !dbg !13762

47:                                               ; preds = %41, %30
  %48 = phi i16 [ %46, %41 ], [ %39, %30 ], !dbg !13763
  call void @llvm.dbg.value(metadata i16 %48, metadata !1355, metadata !DIExpression()), !dbg !13711
  %49 = icmp eq i16 %48, 0, !dbg !13764
  br i1 %49, label %94, label %50, !dbg !13766

50:                                               ; preds = %47
  %51 = zext i16 %48 to i32, !dbg !13767
  %52 = tail call fastcc i32 @chk_chr(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @f_setlabel.badchr, i32 0, i32 0), i32 noundef %51) #22, !dbg !13768
  %53 = icmp ne i32 %52, 0, !dbg !13768
  %54 = icmp ugt i32 %31, 10
  %55 = select i1 %53, i1 true, i1 %54, !dbg !13769
  br i1 %55, label %94, label %56, !dbg !13769

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %31, metadata !1353, metadata !DIExpression()), !dbg !13711
  %57 = trunc i16 %48 to i8, !dbg !13770
  call void @llvm.dbg.value(metadata i32 %32, metadata !1353, metadata !DIExpression()), !dbg !13711
  %58 = getelementptr inbounds [22 x i8], [22 x i8]* %5, i32 0, i32 %31, !dbg !13771
  store i8 %57, i8* %58, align 1, !dbg !13772
  %59 = icmp eq i32 %32, %22, !dbg !13773
  br i1 %59, label %60, label %30, !dbg !13774, !llvm.loop !13775

60:                                               ; preds = %56
  call void @llvm.dbg.value(metadata i32 %22, metadata !1353, metadata !DIExpression()), !dbg !13711
  %61 = icmp ult i32 %31, 10, !dbg !13777
  br i1 %61, label %62, label %69, !dbg !13778

62:                                               ; preds = %60
  %63 = call i32 @llvm.umax.i32(i32 %22, i32 10), !dbg !13778
  br label %64, !dbg !13778

64:                                               ; preds = %62, %64
  %65 = phi i32 [ %66, %64 ], [ %22, %62 ]
  call void @llvm.dbg.value(metadata i32 %65, metadata !1353, metadata !DIExpression()), !dbg !13711
  %66 = add nuw nsw i32 %65, 1, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %66, metadata !1353, metadata !DIExpression()), !dbg !13711
  %67 = getelementptr inbounds [22 x i8], [22 x i8]* %5, i32 0, i32 %65, !dbg !13780
  store i8 32, i8* %67, align 1, !dbg !13781
  %68 = icmp eq i32 %65, %63, !dbg !13777
  br i1 %68, label %69, label %64, !dbg !13778, !llvm.loop !13782

69:                                               ; preds = %64, %60
  %70 = load i8, i8* %8, align 1, !dbg !13784
  %71 = icmp eq i8 %70, -27, !dbg !13786
  br i1 %71, label %94, label %72, !dbg !13787

72:                                               ; preds = %21, %69
  %73 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 0, i32 4, !dbg !13788
  store i32 0, i32* %73, align 4, !dbg !13789
  %74 = call fastcc i32 @dir_sdi(%struct.DIR* noundef nonnull %3, i32 noundef 0) #22, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %74, metadata !1301, metadata !DIExpression()), !dbg !13711
  %75 = icmp eq i32 %74, 0, !dbg !13791
  br i1 %75, label %76, label %94, !dbg !13793

76:                                               ; preds = %72
  %77 = call fastcc i32 @dir_read(%struct.DIR* noundef nonnull %3, i32 noundef 1) #22, !dbg !13794
  call void @llvm.dbg.value(metadata i32 %77, metadata !1301, metadata !DIExpression()), !dbg !13711
  switch i32 %77, label %94 [
    i32 0, label %78
    i32 4, label %83
  ], !dbg !13796

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 4, !dbg !13797
  %80 = load i8*, i8** %79, align 4, !dbg !13797
  br i1 %23, label %82, label %81, !dbg !13803

81:                                               ; preds = %78
  call fastcc void @mem_cpy(i8* noundef %80, i8* noundef nonnull %8, i32 noundef 11) #22, !dbg !13804
  br label %91, !dbg !13806

82:                                               ; preds = %78
  store i8 -27, i8* %80, align 1, !dbg !13807
  br label %91

83:                                               ; preds = %76
  call void @llvm.dbg.value(metadata i32 0, metadata !1301, metadata !DIExpression()), !dbg !13711
  br i1 %23, label %94, label %84, !dbg !13809

84:                                               ; preds = %83
  %85 = call fastcc i32 @dir_alloc(%struct.DIR* noundef nonnull %3) #22, !dbg !13813
  call void @llvm.dbg.value(metadata i32 %85, metadata !1301, metadata !DIExpression()), !dbg !13711
  %86 = icmp eq i32 %85, 0, !dbg !13816
  br i1 %86, label %87, label %94, !dbg !13818

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.DIR, %struct.DIR* %3, i32 0, i32 4, !dbg !13819
  %89 = load i8*, i8** %88, align 4, !dbg !13819
  tail call fastcc void @mem_set(i8* noundef %89, i32 noundef 0, i32 noundef 32) #22, !dbg !13821
  %90 = getelementptr inbounds i8, i8* %89, i32 11, !dbg !13822
  store i8 8, i8* %90, align 1, !dbg !13825
  call fastcc void @mem_cpy(i8* noundef %89, i8* noundef nonnull %8, i32 noundef 11) #22, !dbg !13826
  call void @llvm.dbg.value(metadata %struct.FATFS* %12, metadata !1349, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i32 %93, metadata !1301, metadata !DIExpression()), !dbg !13711
  br label %91, !dbg !13827

91:                                               ; preds = %81, %82, %87
  %92 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %12, i32 0, i32 3, !dbg !13828
  store i8 1, i8* %92, align 1, !dbg !13828
  %93 = tail call fastcc i32 @sync_fs(%struct.FATFS* noundef %12) #22, !dbg !13828
  br label %94, !dbg !13829

94:                                               ; preds = %47, %50, %91, %72, %84, %83, %76, %69, %1
  %95 = phi i32 [ %9, %1 ], [ 6, %69 ], [ %85, %84 ], [ 0, %83 ], [ %74, %72 ], [ %77, %76 ], [ %93, %91 ], [ 6, %50 ], [ 6, %47 ], !dbg !13711
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %8) #19, !dbg !13829
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !13829
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #19, !dbg !13829
  ret i32 %95, !dbg !13829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_expand(%struct.FIL* noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !13830 {
  %4 = alloca %struct.FATFS*, align 4
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !13834, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %1, metadata !13835, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i8 %2, metadata !13836, metadata !DIExpression()), !dbg !13846
  %5 = bitcast %struct.FATFS** %4 to i8*, !dbg !13847
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !13847
  %6 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, !dbg !13848
  call void @llvm.dbg.value(metadata %struct.FATFS** %4, metadata !13838, metadata !DIExpression(DW_OP_deref)), !dbg !13846
  %7 = call fastcc i32 @validate(%struct._FDID* noundef %6, %struct.FATFS** noundef nonnull %4) #22, !dbg !13849
  call void @llvm.dbg.value(metadata i32 %7, metadata !13837, metadata !DIExpression()), !dbg !13846
  %8 = icmp eq i32 %7, 0, !dbg !13850
  br i1 %8, label %9, label %98, !dbg !13852

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 2, !dbg !13853
  %11 = load i8, i8* %10, align 1, !dbg !13853
  %12 = zext i8 %11 to i32, !dbg !13854
  call void @llvm.dbg.value(metadata i32 %12, metadata !13837, metadata !DIExpression()), !dbg !13846
  %13 = icmp eq i8 %11, 0, !dbg !13855
  br i1 %13, label %14, label %98, !dbg !13856

14:                                               ; preds = %9
  %15 = icmp eq i32 %1, 0, !dbg !13857
  br i1 %15, label %98, label %16, !dbg !13859

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 5, !dbg !13860
  %18 = load i32, i32* %17, align 4, !dbg !13860
  %19 = icmp eq i32 %18, 0, !dbg !13861
  br i1 %19, label %20, label %98, !dbg !13862

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 1, !dbg !13863
  %22 = load i8, i8* %21, align 4, !dbg !13863
  %23 = and i8 %22, 2, !dbg !13864
  %24 = icmp eq i8 %23, 0, !dbg !13864
  br i1 %24, label %98, label %25, !dbg !13865

25:                                               ; preds = %20
  %26 = load %struct.FATFS*, %struct.FATFS** %4, align 4, !dbg !13866
  call void @llvm.dbg.value(metadata %struct.FATFS* %26, metadata !13838, metadata !DIExpression()), !dbg !13846
  %27 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %26, i32 0, i32 7, !dbg !13867
  %28 = load i16, i16* %27, align 2, !dbg !13867
  %29 = zext i16 %28 to i32, !dbg !13868
  %30 = shl nuw nsw i32 %29, 9, !dbg !13869
  call void @llvm.dbg.value(metadata i32 %30, metadata !13839, metadata !DIExpression()), !dbg !13846
  %31 = udiv i32 %1, %30, !dbg !13870
  %32 = add nsw i32 %30, -1, !dbg !13871
  %33 = and i32 %32, %1, !dbg !13872
  %34 = icmp ne i32 %33, 0, !dbg !13873
  %35 = zext i1 %34 to i32, !dbg !13873
  %36 = add i32 %31, %35, !dbg !13874
  call void @llvm.dbg.value(metadata i32 %36, metadata !13844, metadata !DIExpression()), !dbg !13846
  %37 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %26, i32 0, i32 8, !dbg !13875
  %38 = load i32, i32* %37, align 4, !dbg !13875
  call void @llvm.dbg.value(metadata i32 %38, metadata !13841, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 0, metadata !13845, metadata !DIExpression()), !dbg !13846
  %39 = icmp ult i32 %38, 2, !dbg !13876
  br i1 %39, label %44, label %40, !dbg !13878

40:                                               ; preds = %25
  %41 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %26, i32 0, i32 11, !dbg !13879
  %42 = load i32, i32* %41, align 4, !dbg !13879
  %43 = icmp ult i32 %38, %42, !dbg !13880
  br i1 %43, label %45, label %44, !dbg !13881

44:                                               ; preds = %40, %25
  call void @llvm.dbg.value(metadata i32 2, metadata !13841, metadata !DIExpression()), !dbg !13846
  br label %45, !dbg !13882

45:                                               ; preds = %44, %40
  %46 = phi i32 [ 2, %44 ], [ %38, %40 ], !dbg !13846
  call void @llvm.dbg.value(metadata i32 %46, metadata !13841, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %46, metadata !13840, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %46, metadata !13842, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 0, metadata !13843, metadata !DIExpression()), !dbg !13846
  %47 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %26, i32 0, i32 11
  br label %48, !dbg !13883

48:                                               ; preds = %60, %45
  %49 = phi i32 [ %46, %45 ], [ %56, %60 ], !dbg !13885
  %50 = phi i32 [ %46, %45 ], [ %61, %60 ], !dbg !13886
  %51 = phi i32 [ 0, %45 ], [ %62, %60 ], !dbg !13885
  call void @llvm.dbg.value(metadata i32 %51, metadata !13843, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %50, metadata !13842, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %49, metadata !13840, metadata !DIExpression()), !dbg !13846
  %52 = tail call fastcc i32 @get_fat(%struct._FDID* noundef %6, i32 noundef %49) #22, !dbg !13887
  call void @llvm.dbg.value(metadata i32 %52, metadata !13839, metadata !DIExpression()), !dbg !13846
  %53 = add i32 %49, 1, !dbg !13891
  call void @llvm.dbg.value(metadata i32 %53, metadata !13840, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata %struct.FATFS* %26, metadata !13838, metadata !DIExpression()), !dbg !13846
  %54 = load i32, i32* %47, align 4, !dbg !13893
  %55 = icmp ult i32 %53, %54, !dbg !13894
  %56 = select i1 %55, i32 %53, i32 2, !dbg !13895
  call void @llvm.dbg.value(metadata i32 %56, metadata !13840, metadata !DIExpression()), !dbg !13846
  switch i32 %52, label %60 [
    i32 1, label %96
    i32 -1, label %98
    i32 0, label %57
  ], !dbg !13896

57:                                               ; preds = %48
  %58 = add i32 %51, 1, !dbg !13897
  call void @llvm.dbg.value(metadata i32 %58, metadata !13843, metadata !DIExpression()), !dbg !13846
  %59 = icmp eq i32 %58, %36, !dbg !13901
  br i1 %59, label %64, label %60, !dbg !13902

60:                                               ; preds = %48, %57
  %61 = phi i32 [ %50, %57 ], [ %56, %48 ], !dbg !13885
  %62 = phi i32 [ %58, %57 ], [ 0, %48 ], !dbg !13903
  call void @llvm.dbg.value(metadata i32 %62, metadata !13843, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %61, metadata !13842, metadata !DIExpression()), !dbg !13846
  %63 = icmp eq i32 %56, %46, !dbg !13904
  br i1 %63, label %96, label %48, !dbg !13906, !llvm.loop !13907

64:                                               ; preds = %57
  call void @llvm.dbg.value(metadata i32 %50, metadata !13842, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 0, metadata !13837, metadata !DIExpression()), !dbg !13846
  %65 = icmp eq i8 %2, 0, !dbg !13910
  br i1 %65, label %79, label %66, !dbg !13914

66:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i32 0, metadata !13845, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %50, metadata !13840, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %36, metadata !13839, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 0, metadata !13837, metadata !DIExpression()), !dbg !13846
  %67 = icmp eq i32 %36, 0, !dbg !13915
  br i1 %67, label %81, label %70, !dbg !13915

68:                                               ; preds = %70
  call void @llvm.dbg.value(metadata i32 %71, metadata !13845, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %74, metadata !13840, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %78, metadata !13839, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 0, metadata !13837, metadata !DIExpression()), !dbg !13846
  %69 = icmp eq i32 %78, 0, !dbg !13915
  br i1 %69, label %81, label %70, !dbg !13915, !llvm.loop !13918

70:                                               ; preds = %66, %68
  %71 = phi i32 [ %74, %68 ], [ %50, %66 ]
  %72 = phi i32 [ %78, %68 ], [ %36, %66 ]
  call void @llvm.dbg.value(metadata i32 %71, metadata !13840, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %72, metadata !13839, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata %struct.FATFS* %26, metadata !13838, metadata !DIExpression()), !dbg !13846
  %73 = icmp eq i32 %72, 1, !dbg !13920
  %74 = add i32 %71, 1, !dbg !13923
  %75 = select i1 %73, i32 -1, i32 %74, !dbg !13923
  %76 = tail call fastcc i32 @put_fat(%struct.FATFS* noundef %26, i32 noundef %71, i32 noundef %75) #22, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %76, metadata !13837, metadata !DIExpression()), !dbg !13846
  %77 = icmp eq i32 %76, 0, !dbg !13925
  call void @llvm.dbg.value(metadata i32 %71, metadata !13845, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %74, metadata !13840, metadata !DIExpression()), !dbg !13846
  %78 = add i32 %72, -1, !dbg !13927
  call void @llvm.dbg.value(metadata i32 %78, metadata !13839, metadata !DIExpression()), !dbg !13846
  br i1 %77, label %68, label %98, !dbg !13928

79:                                               ; preds = %64
  %80 = add i32 %50, -1, !dbg !13929
  call void @llvm.dbg.value(metadata i32 undef, metadata !13845, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata %struct.FATFS* %26, metadata !13838, metadata !DIExpression()), !dbg !13846
  store i32 %80, i32* %37, align 4, !dbg !13931
  br label %98, !dbg !13934

81:                                               ; preds = %68, %66
  %82 = phi i32 [ 0, %66 ], [ %71, %68 ], !dbg !13846
  call void @llvm.dbg.value(metadata i32 undef, metadata !13845, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata %struct.FATFS* %26, metadata !13838, metadata !DIExpression()), !dbg !13846
  store i32 %82, i32* %37, align 4, !dbg !13931
  %83 = getelementptr inbounds %struct.FIL, %struct.FIL* %0, i32 0, i32 0, i32 4, !dbg !13935
  store i32 %50, i32* %83, align 4, !dbg !13938
  store i32 %1, i32* %17, align 4, !dbg !13939
  %84 = load i8, i8* %21, align 4, !dbg !13940
  %85 = or i8 %84, 64, !dbg !13940
  store i8 %85, i8* %21, align 4, !dbg !13940
  %86 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %26, i32 0, i32 9, !dbg !13941
  %87 = load i32, i32* %86, align 4, !dbg !13941
  %88 = load i32, i32* %47, align 4, !dbg !13943
  %89 = add i32 %88, -2, !dbg !13944
  %90 = icmp ult i32 %87, %89, !dbg !13945
  br i1 %90, label %91, label %98, !dbg !13946

91:                                               ; preds = %81
  %92 = sub i32 %87, %36, !dbg !13947
  store i32 %92, i32* %86, align 4, !dbg !13947
  call void @llvm.dbg.value(metadata %struct.FATFS* %26, metadata !13838, metadata !DIExpression()), !dbg !13846
  %93 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %26, i32 0, i32 4, !dbg !13949
  %94 = load i8, i8* %93, align 4, !dbg !13950
  %95 = or i8 %94, 1, !dbg !13950
  store i8 %95, i8* %93, align 4, !dbg !13950
  br label %98, !dbg !13951

96:                                               ; preds = %48, %60
  %97 = phi i32 [ 2, %48 ], [ 7, %60 ]
  br label %98, !dbg !13952

98:                                               ; preds = %70, %48, %96, %79, %81, %91, %14, %16, %20, %3, %9
  %99 = phi i32 [ %7, %3 ], [ %12, %9 ], [ 7, %20 ], [ 7, %16 ], [ 7, %14 ], [ 0, %91 ], [ 0, %81 ], [ 0, %79 ], [ %97, %96 ], [ 1, %48 ], [ %76, %70 ], !dbg !13846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !13952
  ret i32 %99, !dbg !13952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_mkfs(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2, i8* noundef %3, i32 noundef %4) local_unnamed_addr #0 !dbg !1360 {
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !1364, metadata !DIExpression()), !dbg !13953
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.value(metadata i8 %1, metadata !1365, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %2, metadata !1366, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8* %3, metadata !1367, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %4, metadata !1368, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 1, metadata !1369, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 512, metadata !1371, metadata !DIExpression()), !dbg !13953
  %9 = bitcast i32* %7 to i8*, !dbg !13954
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !13954
  %10 = bitcast i32* %8 to i8*, !dbg !13955
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #19, !dbg !13955
  call void @llvm.dbg.value(metadata i8** %6, metadata !1364, metadata !DIExpression(DW_OP_deref)), !dbg !13953
  %11 = call fastcc i32 @get_ldnumber(i8** noundef nonnull %6) #22, !dbg !13956
  call void @llvm.dbg.value(metadata i32 %11, metadata !1395, metadata !DIExpression()), !dbg !13953
  %12 = icmp slt i32 %11, 0, !dbg !13957
  br i1 %12, label %318, label %13, !dbg !13959

13:                                               ; preds = %5
  %14 = getelementptr inbounds [1 x %struct.FATFS*], [1 x %struct.FATFS*]* @FatFs, i32 0, i32 %11, !dbg !13960
  %15 = load %struct.FATFS*, %struct.FATFS** %14, align 4, !dbg !13960
  %16 = icmp eq %struct.FATFS* %15, null, !dbg !13960
  br i1 %16, label %19, label %17, !dbg !13962

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.FATFS, %struct.FATFS* %15, i32 0, i32 0, !dbg !13963
  store i8 0, i8* %18, align 4, !dbg !13964
  br label %19, !dbg !13965

19:                                               ; preds = %17, %13
  %20 = trunc i32 %11 to i8, !dbg !13966
  call void @llvm.dbg.value(metadata i8 %20, metadata !1376, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8 0, metadata !1377, metadata !DIExpression()), !dbg !13953
  %21 = tail call zeroext i8 @disk_initialize(i8 noundef zeroext %20) #20, !dbg !13967
  call void @llvm.dbg.value(metadata i8 %21, metadata !1396, metadata !DIExpression()), !dbg !13953
  %22 = zext i8 %21 to i32, !dbg !13968
  %23 = and i32 %22, 1, !dbg !13970
  %24 = icmp eq i32 %23, 0, !dbg !13970
  br i1 %24, label %25, label %318, !dbg !13971

25:                                               ; preds = %19
  %26 = and i32 %22, 4, !dbg !13972
  %27 = icmp eq i32 %26, 0, !dbg !13972
  br i1 %27, label %28, label %318, !dbg !13974

28:                                               ; preds = %25
  call void @llvm.dbg.value(metadata i32* %7, metadata !1381, metadata !DIExpression(DW_OP_deref)), !dbg !13953
  %29 = call i32 @disk_ioctl(i8 noundef zeroext %20, i8 noundef zeroext 3, i8* noundef nonnull %9) #20, !dbg !13975
  %30 = icmp eq i32 %29, 0, !dbg !13977
  %31 = load i32, i32* %7, align 4
  call void @llvm.dbg.value(metadata i32 %31, metadata !1381, metadata !DIExpression()), !dbg !13953
  %32 = icmp ne i32 %31, 0
  %33 = select i1 %30, i1 %32, i1 false, !dbg !13978
  %34 = icmp ult i32 %31, 32769
  %35 = select i1 %33, i1 %34, i1 false, !dbg !13978
  %36 = call i32 @llvm.ctpop.i32(i32 %31), !range !13979
  %37 = icmp ult i32 %36, 2
  %38 = select i1 %35, i1 %37, i1 false, !dbg !13978
  br i1 %38, label %40, label %39, !dbg !13978

39:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 1, metadata !1381, metadata !DIExpression()), !dbg !13953
  store i32 1, i32* %7, align 4, !dbg !13980
  br label %40, !dbg !13981

40:                                               ; preds = %28, %39
  call void @llvm.dbg.value(metadata i16 512, metadata !1378, metadata !DIExpression()), !dbg !13953
  %41 = icmp eq i32 %2, 0, !dbg !13982
  br i1 %41, label %48, label %42, !dbg !13984

42:                                               ; preds = %40
  %43 = add i32 %2, -512, !dbg !13985
  %44 = icmp ult i32 %43, 16776705, !dbg !13985
  %45 = call i32 @llvm.ctpop.i32(i32 %2), !range !13979
  %46 = icmp ult i32 %45, 2
  %47 = and i1 %44, %46, !dbg !13985
  br i1 %47, label %48, label %318, !dbg !13985

48:                                               ; preds = %40, %42
  %49 = lshr i32 %2, 9, !dbg !13986
  call void @llvm.dbg.value(metadata i32 %49, metadata !1366, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8* %3, metadata !1374, metadata !DIExpression()), !dbg !13953
  %50 = lshr i32 %4, 9, !dbg !13987
  call void @llvm.dbg.value(metadata i32 %50, metadata !1380, metadata !DIExpression()), !dbg !13953
  %51 = and i32 %4, -512, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %51, metadata !1379, metadata !DIExpression()), !dbg !13953
  %52 = icmp eq i32 %51, 0, !dbg !13989
  br i1 %52, label %318, label %53, !dbg !13991

53:                                               ; preds = %48
  call void @llvm.dbg.value(metadata i32* %8, metadata !1390, metadata !DIExpression(DW_OP_deref)), !dbg !13953
  %54 = call i32 @disk_ioctl(i8 noundef zeroext %20, i8 noundef zeroext 1, i8* noundef nonnull %10) #20, !dbg !13992
  %55 = icmp eq i32 %54, 0, !dbg !13996
  br i1 %55, label %56, label %318, !dbg !13997

56:                                               ; preds = %53
  %57 = zext i8 %1 to i32, !dbg !13998
  %58 = and i32 %57, 8, !dbg !13999
  %59 = icmp eq i32 %58, 0, !dbg !14000
  %60 = select i1 %59, i32 -63, i32 0, !dbg !14000
  %61 = select i1 %59, i32 63, i32 0, !dbg !14000
  call void @llvm.dbg.value(metadata i32 %61, metadata !1387, metadata !DIExpression()), !dbg !13953
  %62 = load i32, i32* %8, align 4, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %62, metadata !1390, metadata !DIExpression()), !dbg !13953
  %63 = icmp ult i32 %62, %61, !dbg !14003
  br i1 %63, label %318, label %64, !dbg !14004

64:                                               ; preds = %56
  %65 = sub i32 %62, %61, !dbg !14005
  call void @llvm.dbg.value(metadata i32 %65, metadata !1390, metadata !DIExpression()), !dbg !13953
  store i32 %65, i32* %8, align 4, !dbg !14005
  %66 = icmp ult i32 %65, 128, !dbg !14006
  br i1 %66, label %318, label %67, !dbg !14008

67:                                               ; preds = %64
  %68 = icmp ugt i32 %2, 66047, !dbg !14009
  br i1 %68, label %318, label %69, !dbg !14012

69:                                               ; preds = %67
  %70 = and i32 %57, 2, !dbg !14013
  %71 = icmp eq i32 %70, 0, !dbg !14013
  br i1 %71, label %79, label %72, !dbg !14015

72:                                               ; preds = %69
  %73 = and i32 %57, 7, !dbg !14016
  %74 = icmp eq i32 %73, 2, !dbg !14019
  %75 = and i32 %57, 1
  %76 = icmp eq i32 %75, 0
  %77 = or i1 %74, %76, !dbg !14020
  %78 = select i1 %77, i8 3, i8 2, !dbg !14020
  br label %82, !dbg !14020

79:                                               ; preds = %69
  %80 = and i32 %57, 1, !dbg !14021
  %81 = icmp eq i32 %80, 0, !dbg !14021
  br i1 %81, label %318, label %82, !dbg !14023

82:                                               ; preds = %72, %79
  %83 = phi i8 [ 2, %79 ], [ %78, %72 ], !dbg !14024
  call void @llvm.dbg.value(metadata i8 %83, metadata !1372, metadata !DIExpression()), !dbg !13953
  %84 = lshr i32 %65, 12
  %85 = lshr i32 %65, 17
  %86 = load i32, i32* %7, align 4
  %87 = add i32 %86, -1
  %88 = sub i32 0, %86
  %89 = xor i1 %71, true
  %90 = trunc i32 %85 to i16
  br label %91, !dbg !14025

91:                                               ; preds = %185, %82
  %92 = phi i8 [ %83, %82 ], [ %186, %185 ], !dbg !14027
  %93 = phi i32 [ %49, %82 ], [ %187, %185 ], !dbg !13953
  call void @llvm.dbg.value(metadata i32 %93, metadata !1366, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8 %92, metadata !1372, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %93, metadata !1383, metadata !DIExpression()), !dbg !13953
  %94 = icmp eq i8 %92, 3, !dbg !14029
  %95 = icmp eq i32 %93, 0, !dbg !14032
  br i1 %94, label %96, label %114, !dbg !14033

96:                                               ; preds = %91
  br i1 %95, label %97, label %107, !dbg !14034

97:                                               ; preds = %96, %103
  %98 = phi i32 [ %104, %103 ], [ 0, %96 ]
  %99 = phi i32 [ %105, %103 ], [ 1, %96 ]
  call void @llvm.dbg.value(metadata i32 %98, metadata !1394, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %99, metadata !1383, metadata !DIExpression()), !dbg !13953
  %100 = getelementptr inbounds [7 x i16], [7 x i16]* @f_mkfs.cst32, i32 0, i32 %98, !dbg !14036
  %101 = load i16, i16* %100, align 2, !dbg !14036
  %102 = icmp ugt i16 %101, %90, !dbg !14041
  br i1 %102, label %107, label %103, !dbg !14042

103:                                              ; preds = %97
  %104 = add nuw nsw i32 %98, 1, !dbg !14043
  call void @llvm.dbg.value(metadata i32 %104, metadata !1394, metadata !DIExpression()), !dbg !13953
  %105 = shl i32 %99, 1, !dbg !14044
  call void @llvm.dbg.value(metadata i32 %105, metadata !1383, metadata !DIExpression()), !dbg !13953
  %106 = icmp eq i32 %104, 6, !dbg !14036
  br i1 %106, label %107, label %97, !dbg !14045, !llvm.loop !14046

107:                                              ; preds = %97, %103, %96
  %108 = phi i32 [ %93, %96 ], [ %105, %103 ], [ %99, %97 ], !dbg !14048
  call void @llvm.dbg.value(metadata i32 %108, metadata !1383, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %65, metadata !1390, metadata !DIExpression()), !dbg !13953
  %109 = udiv i32 %65, %108, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %109, metadata !1382, metadata !DIExpression()), !dbg !13953
  %110 = shl i32 %109, 2, !dbg !14050
  %111 = add i32 %110, 519, !dbg !14051
  call void @llvm.dbg.value(metadata i32 %111, metadata !1392, metadata !DIExpression(DW_OP_constu, 9, DW_OP_shr, DW_OP_stack_value)), !dbg !13953
  call void @llvm.dbg.value(metadata i32 32, metadata !1391, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 0, metadata !1393, metadata !DIExpression()), !dbg !13953
  %112 = add i32 %109, -268435446, !dbg !14052
  %113 = icmp ult i32 %112, -268369920, !dbg !14052
  br i1 %113, label %318, label %139, !dbg !14052

114:                                              ; preds = %91
  br i1 %95, label %115, label %126, !dbg !14054

115:                                              ; preds = %114, %122
  %116 = phi i32 [ %123, %122 ], [ 0, %114 ]
  %117 = phi i32 [ %124, %122 ], [ 1, %114 ]
  call void @llvm.dbg.value(metadata i32 %116, metadata !1394, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %117, metadata !1383, metadata !DIExpression()), !dbg !13953
  %118 = getelementptr inbounds [7 x i16], [7 x i16]* @f_mkfs.cst, i32 0, i32 %116, !dbg !14056
  %119 = load i16, i16* %118, align 2, !dbg !14056
  %120 = zext i16 %119 to i32, !dbg !14056
  %121 = icmp ult i32 %84, %120, !dbg !14061
  br i1 %121, label %126, label %122, !dbg !14062

122:                                              ; preds = %115
  %123 = add nuw nsw i32 %116, 1, !dbg !14063
  call void @llvm.dbg.value(metadata i32 %123, metadata !1394, metadata !DIExpression()), !dbg !13953
  %124 = shl i32 %117, 1, !dbg !14064
  call void @llvm.dbg.value(metadata i32 %124, metadata !1383, metadata !DIExpression()), !dbg !13953
  %125 = icmp eq i32 %123, 6, !dbg !14056
  br i1 %125, label %126, label %115, !dbg !14065, !llvm.loop !14066

126:                                              ; preds = %115, %122, %114
  %127 = phi i32 [ %93, %114 ], [ %124, %122 ], [ %117, %115 ], !dbg !14048
  call void @llvm.dbg.value(metadata i32 %127, metadata !1383, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %65, metadata !1390, metadata !DIExpression()), !dbg !13953
  %128 = udiv i32 %65, %127, !dbg !14068
  call void @llvm.dbg.value(metadata i32 %128, metadata !1382, metadata !DIExpression()), !dbg !13953
  %129 = icmp ugt i32 %128, 4085, !dbg !14069
  %130 = shl i32 %128, 1, !dbg !14071
  %131 = add i32 %130, 4, !dbg !14071
  %132 = mul i32 %128, 3, !dbg !14071
  %133 = add i32 %132, 1, !dbg !14071
  %134 = lshr i32 %133, 1, !dbg !14071
  %135 = add nuw i32 %134, 3, !dbg !14071
  %136 = select i1 %129, i32 %131, i32 %135, !dbg !14071
  %137 = select i1 %129, i8 %92, i8 1, !dbg !14071
  call void @llvm.dbg.value(metadata i8 %137, metadata !1372, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %136, metadata !1386, metadata !DIExpression()), !dbg !13953
  %138 = add i32 %136, 511, !dbg !14072
  call void @llvm.dbg.value(metadata i32 %138, metadata !1392, metadata !DIExpression(DW_OP_constu, 9, DW_OP_shr, DW_OP_stack_value)), !dbg !13953
  call void @llvm.dbg.value(metadata i32 1, metadata !1391, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 32, metadata !1393, metadata !DIExpression()), !dbg !13953
  br label %139

139:                                              ; preds = %107, %126
  %140 = phi i32 [ %108, %107 ], [ %127, %126 ], !dbg !14073
  %141 = phi i8 [ 3, %107 ], [ %137, %126 ], !dbg !14027
  %142 = phi i32 [ 32, %107 ], [ 1, %126 ], !dbg !14032
  %143 = phi i32 [ %111, %107 ], [ %138, %126 ]
  %144 = phi i32 [ 0, %107 ], [ 32, %126 ], !dbg !14032
  %145 = lshr i32 %143, 9, !dbg !14032
  call void @llvm.dbg.value(metadata i32 %144, metadata !1393, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %145, metadata !1392, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %142, metadata !1391, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8 %141, metadata !1372, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %140, metadata !1383, metadata !DIExpression()), !dbg !13953
  %146 = add nuw nsw i32 %142, %61, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %146, metadata !1388, metadata !DIExpression()), !dbg !13953
  %147 = add nuw nsw i32 %145, %146, !dbg !14075
  %148 = add nuw nsw i32 %147, %144, !dbg !14076
  call void @llvm.dbg.value(metadata i32 %148, metadata !1389, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %86, metadata !1381, metadata !DIExpression()), !dbg !13953
  %149 = add i32 %87, %148, !dbg !14077
  %150 = and i32 %149, %88, !dbg !14078
  %151 = sub i32 %150, %148, !dbg !14079
  call void @llvm.dbg.value(metadata i32 %151, metadata !1386, metadata !DIExpression()), !dbg !13953
  %152 = icmp eq i8 %141, 3, !dbg !14080
  %153 = select i1 %152, i32 %151, i32 0, !dbg !14082
  %154 = add i32 %153, %142, !dbg !14082
  %155 = select i1 %152, i32 0, i32 %151, !dbg !14082
  %156 = add i32 %155, %145, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %156, metadata !1392, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %154, metadata !1391, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %146), metadata !1388, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %65, metadata !1390, metadata !DIExpression()), !dbg !13953
  %157 = shl i32 %140, 4, !dbg !14083
  %158 = add i32 %157, %60, !dbg !14085
  %159 = add i32 %158, %148, !dbg !14086
  %160 = icmp ult i32 %65, %159, !dbg !14087
  br i1 %160, label %318, label %161, !dbg !14088

161:                                              ; preds = %139
  %162 = add i32 %144, %156, !dbg !14089
  %163 = add i32 %162, %154, !dbg !14089
  %164 = sub i32 %65, %163, !dbg !14089
  %165 = udiv i32 %164, %140, !dbg !14090
  call void @llvm.dbg.value(metadata i32 %165, metadata !1382, metadata !DIExpression()), !dbg !13953
  %166 = icmp ult i32 %165, 65526
  %167 = select i1 %152, i1 %166, i1 false, !dbg !14091
  br i1 %167, label %168, label %173, !dbg !14091

168:                                              ; preds = %161
  %169 = icmp ne i32 %93, 0, !dbg !14092
  %170 = lshr i32 %140, 1
  %171 = icmp ult i32 %140, 2
  %172 = select i1 %169, i1 true, i1 %171, !dbg !14098
  call void @llvm.dbg.value(metadata i32 %170, metadata !1366, metadata !DIExpression()), !dbg !13953
  br i1 %172, label %318, label %185, !dbg !14098

173:                                              ; preds = %161
  %174 = icmp eq i8 %141, 2, !dbg !14099
  br i1 %174, label %175, label %198, !dbg !14101

175:                                              ; preds = %173
  %176 = icmp ugt i32 %165, 65525, !dbg !14102
  br i1 %176, label %177, label %191, !dbg !14105

177:                                              ; preds = %175
  %178 = icmp eq i32 %93, 0, !dbg !14106
  %179 = shl i32 %140, 1
  %180 = icmp ult i32 %179, 65
  %181 = select i1 %178, i1 %180, i1 false, !dbg !14109
  %182 = or i1 %181, %89, !dbg !14109
  %183 = select i1 %181, i8 2, i8 3, !dbg !14109
  %184 = select i1 %181, i32 %179, i32 %93, !dbg !14109
  br i1 %182, label %185, label %188, !dbg !14109

185:                                              ; preds = %177, %193, %188, %168
  %186 = phi i8 [ 3, %168 ], [ 2, %188 ], [ 2, %193 ], [ %183, %177 ]
  %187 = phi i32 [ %170, %168 ], [ %179, %188 ], [ %195, %193 ], [ %184, %177 ]
  br label %91, !dbg !13953, !llvm.loop !14110

188:                                              ; preds = %177
  %189 = icmp ult i32 %179, 129
  %190 = select i1 %178, i1 %189, i1 false, !dbg !14112
  call void @llvm.dbg.value(metadata i32 %179, metadata !1366, metadata !DIExpression()), !dbg !13953
  br i1 %190, label %185, label %318, !dbg !14112

191:                                              ; preds = %175
  %192 = icmp ult i32 %165, 4086, !dbg !14114
  br i1 %192, label %193, label %202, !dbg !14116

193:                                              ; preds = %191
  %194 = icmp eq i32 %93, 0, !dbg !14117
  %195 = shl i32 %140, 1
  %196 = icmp ult i32 %195, 129
  %197 = select i1 %194, i1 %196, i1 false, !dbg !14120
  call void @llvm.dbg.value(metadata i32 %195, metadata !1366, metadata !DIExpression()), !dbg !13953
  br i1 %197, label %185, label %318, !dbg !14120

198:                                              ; preds = %173
  %199 = icmp eq i8 %141, 1, !dbg !14121
  %200 = icmp ugt i32 %165, 4085
  %201 = select i1 %199, i1 %200, i1 false, !dbg !14123
  br i1 %201, label %318, label %202, !dbg !14123

202:                                              ; preds = %191, %198
  %203 = phi i1 [ %199, %198 ], [ false, %191 ]
  %204 = add i32 %153, %146, !dbg !14082
  call fastcc void @mem_set(i8* noundef %3, i32 noundef 0, i32 noundef 512) #22, !dbg !14124
  call fastcc void @mem_cpy(i8* noundef %3, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.132, i32 0, i32 0), i32 noundef 11) #22, !dbg !14125
  %205 = getelementptr inbounds i8, i8* %3, i32 11, !dbg !14126
  call fastcc void @st_word(i8* noundef nonnull %205, i16 noundef zeroext 512) #22, !dbg !14127
  %206 = trunc i32 %140 to i8, !dbg !14128
  %207 = getelementptr inbounds i8, i8* %3, i32 13, !dbg !14129
  store i8 %206, i8* %207, align 1, !dbg !14130
  %208 = getelementptr inbounds i8, i8* %3, i32 14, !dbg !14131
  %209 = trunc i32 %154 to i16, !dbg !14132
  call fastcc void @st_word(i8* noundef nonnull %208, i16 noundef zeroext %209) #22, !dbg !14133
  %210 = getelementptr inbounds i8, i8* %3, i32 16, !dbg !14134
  store i8 1, i8* %210, align 1, !dbg !14135
  %211 = getelementptr inbounds i8, i8* %3, i32 17, !dbg !14136
  %212 = select i1 %152, i16 0, i16 512, !dbg !14137
  call fastcc void @st_word(i8* noundef nonnull %211, i16 noundef zeroext %212) #22, !dbg !14138
  %213 = load i32, i32* %8, align 4, !dbg !14139
  call void @llvm.dbg.value(metadata i32 %213, metadata !1390, metadata !DIExpression()), !dbg !13953
  %214 = icmp ult i32 %213, 65536, !dbg !14141
  br i1 %214, label %215, label %218, !dbg !14142

215:                                              ; preds = %202
  %216 = getelementptr inbounds i8, i8* %3, i32 19, !dbg !14143
  %217 = trunc i32 %213 to i16, !dbg !14145
  call fastcc void @st_word(i8* noundef nonnull %216, i16 noundef zeroext %217) #22, !dbg !14146
  br label %220, !dbg !14147

218:                                              ; preds = %202
  %219 = getelementptr inbounds i8, i8* %3, i32 32, !dbg !14148
  call fastcc void @st_dword(i8* noundef nonnull %219, i32 noundef %213) #22, !dbg !14150
  br label %220

220:                                              ; preds = %218, %215
  %221 = getelementptr inbounds i8, i8* %3, i32 21, !dbg !14151
  store i8 -8, i8* %221, align 1, !dbg !14152
  %222 = getelementptr inbounds i8, i8* %3, i32 24, !dbg !14153
  call fastcc void @st_word(i8* noundef nonnull %222, i16 noundef zeroext 63) #22, !dbg !14154
  %223 = getelementptr inbounds i8, i8* %3, i32 26, !dbg !14155
  call fastcc void @st_word(i8* noundef nonnull %223, i16 noundef zeroext 255) #22, !dbg !14156
  %224 = getelementptr inbounds i8, i8* %3, i32 28, !dbg !14157
  call fastcc void @st_dword(i8* noundef nonnull %224, i32 noundef %61) #22, !dbg !14158
  br i1 %152, label %225, label %231, !dbg !14159

225:                                              ; preds = %220
  %226 = getelementptr inbounds i8, i8* %3, i32 67, !dbg !14160
  call fastcc void @st_dword(i8* noundef nonnull %226, i32 noundef 1212219392) #22, !dbg !14163
  %227 = getelementptr inbounds i8, i8* %3, i32 36, !dbg !14164
  call fastcc void @st_dword(i8* noundef nonnull %227, i32 noundef %156) #22, !dbg !14165
  %228 = getelementptr inbounds i8, i8* %3, i32 44, !dbg !14166
  call fastcc void @st_dword(i8* noundef nonnull %228, i32 noundef 2) #22, !dbg !14167
  %229 = getelementptr inbounds i8, i8* %3, i32 48, !dbg !14168
  call fastcc void @st_word(i8* noundef nonnull %229, i16 noundef zeroext 1) #22, !dbg !14169
  %230 = getelementptr inbounds i8, i8* %3, i32 50, !dbg !14170
  call fastcc void @st_word(i8* noundef nonnull %230, i16 noundef zeroext 6) #22, !dbg !14171
  br label %235, !dbg !14172

231:                                              ; preds = %220
  %232 = getelementptr inbounds i8, i8* %3, i32 39, !dbg !14173
  call fastcc void @st_dword(i8* noundef nonnull %232, i32 noundef 1212219392) #22, !dbg !14175
  %233 = getelementptr inbounds i8, i8* %3, i32 22, !dbg !14176
  %234 = trunc i32 %156 to i16, !dbg !14177
  call fastcc void @st_word(i8* noundef nonnull %233, i16 noundef zeroext %234) #22, !dbg !14178
  br label %235

235:                                              ; preds = %231, %225
  %236 = phi i32 [ 36, %231 ], [ 64, %225 ]
  %237 = phi i32 [ 38, %231 ], [ 66, %225 ]
  %238 = phi i32 [ 43, %231 ], [ 71, %225 ]
  %239 = phi i8* [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.133, i32 0, i32 0), %231 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.134, i32 0, i32 0), %225 ]
  %240 = getelementptr inbounds i8, i8* %3, i32 %236, !dbg !14179
  store i8 -128, i8* %240, align 1, !dbg !14179
  %241 = getelementptr inbounds i8, i8* %3, i32 %237, !dbg !14179
  store i8 41, i8* %241, align 1, !dbg !14179
  %242 = getelementptr inbounds i8, i8* %3, i32 %238, !dbg !14179
  call fastcc void @mem_cpy(i8* noundef nonnull %242, i8* noundef %239, i32 noundef 19) #22, !dbg !14179
  %243 = getelementptr inbounds i8, i8* %3, i32 510, !dbg !14180
  call fastcc void @st_word(i8* noundef nonnull %243, i16 noundef zeroext -21931) #22, !dbg !14181
  %244 = call i32 @disk_write(i8 noundef zeroext %20, i8* noundef nonnull %3, i32 noundef %61, i32 noundef 1) #20, !dbg !14182
  %245 = icmp eq i32 %244, 0, !dbg !14184
  br i1 %245, label %246, label %318, !dbg !14185

246:                                              ; preds = %235
  br i1 %152, label %247, label %260, !dbg !14186

247:                                              ; preds = %246
  %248 = add nuw nsw i32 %61, 6, !dbg !14187
  %249 = call i32 @disk_write(i8 noundef zeroext %20, i8* noundef nonnull %3, i32 noundef %248, i32 noundef 1) #20, !dbg !14190
  call fastcc void @mem_set(i8* noundef nonnull %3, i32 noundef 0, i32 noundef 512) #22, !dbg !14191
  call fastcc void @st_dword(i8* noundef nonnull %3, i32 noundef 1096897106) #22, !dbg !14192
  %250 = getelementptr inbounds i8, i8* %3, i32 484, !dbg !14193
  call fastcc void @st_dword(i8* noundef nonnull %250, i32 noundef 1631679090) #22, !dbg !14194
  %251 = getelementptr inbounds i8, i8* %3, i32 488, !dbg !14195
  %252 = add i32 %165, -1, !dbg !14196
  call fastcc void @st_dword(i8* noundef nonnull %251, i32 noundef %252) #22, !dbg !14197
  %253 = getelementptr inbounds i8, i8* %3, i32 492, !dbg !14198
  call fastcc void @st_dword(i8* noundef nonnull %253, i32 noundef 2) #22, !dbg !14199
  call fastcc void @st_word(i8* noundef nonnull %243, i16 noundef zeroext -21931) #22, !dbg !14200
  %254 = add nuw nsw i32 %61, 7, !dbg !14201
  %255 = call i32 @disk_write(i8 noundef zeroext %20, i8* noundef nonnull %3, i32 noundef %254, i32 noundef 1) #20, !dbg !14202
  %256 = add nuw nsw i32 %61, 1, !dbg !14203
  %257 = call i32 @disk_write(i8 noundef zeroext %20, i8* noundef nonnull %3, i32 noundef %256, i32 noundef 1) #20, !dbg !14204
  call fastcc void @mem_set(i8* noundef nonnull %3, i32 noundef 0, i32 noundef %51) #22, !dbg !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !1394, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %204, metadata !1384, metadata !DIExpression()), !dbg !13953
  %258 = getelementptr inbounds i8, i8* %3, i32 8
  %259 = getelementptr inbounds i8, i8* %3, i32 4
  call fastcc void @st_dword(i8* noundef nonnull %3, i32 noundef -8) #22, !dbg !14206
  call fastcc void @st_dword(i8* noundef nonnull %259, i32 noundef -1) #22, !dbg !14212
  call fastcc void @st_dword(i8* noundef nonnull %258, i32 noundef 268435455) #22, !dbg !14213
  br label %262, !dbg !14214

260:                                              ; preds = %246
  call fastcc void @mem_set(i8* noundef nonnull %3, i32 noundef 0, i32 noundef %51) #22, !dbg !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !1394, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %204, metadata !1384, metadata !DIExpression()), !dbg !13953
  %261 = select i1 %203, i32 16777208, i32 -8
  call fastcc void @st_dword(i8* noundef nonnull %3, i32 noundef %261) #22, !dbg !14215
  br label %262

262:                                              ; preds = %260, %247
  br label %263, !dbg !14217

263:                                              ; preds = %262, %270
  %264 = phi i32 [ %271, %270 ], [ %204, %262 ], !dbg !14219
  %265 = phi i32 [ %272, %270 ], [ %156, %262 ], !dbg !14220
  call void @llvm.dbg.value(metadata i32 %265, metadata !1385, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %264, metadata !1384, metadata !DIExpression()), !dbg !13953
  %266 = icmp ugt i32 %265, %50, !dbg !14221
  %267 = select i1 %266, i32 %50, i32 %265, !dbg !14222
  call void @llvm.dbg.value(metadata i32 %267, metadata !1386, metadata !DIExpression()), !dbg !13953
  %268 = call i32 @disk_write(i8 noundef zeroext %20, i8* noundef %3, i32 noundef %264, i32 noundef %267) #20, !dbg !14223
  %269 = icmp eq i32 %268, 0, !dbg !14225
  br i1 %269, label %270, label %318, !dbg !14217

270:                                              ; preds = %263
  call fastcc void @mem_set(i8* noundef %3, i32 noundef 0, i32 noundef 512) #22, !dbg !14226
  %271 = add i32 %267, %264, !dbg !14227
  call void @llvm.dbg.value(metadata i32 %271, metadata !1384, metadata !DIExpression()), !dbg !13953
  %272 = sub i32 %265, %267, !dbg !14228
  call void @llvm.dbg.value(metadata i32 %272, metadata !1385, metadata !DIExpression()), !dbg !13953
  %273 = icmp eq i32 %272, 0, !dbg !14229
  br i1 %273, label %274, label %263, !dbg !14229

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i32 undef, metadata !1394, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %271, metadata !1384, metadata !DIExpression()), !dbg !13953
  %275 = select i1 %152, i32 %140, i32 %144, !dbg !14230
  call void @llvm.dbg.value(metadata i32 %275, metadata !1385, metadata !DIExpression()), !dbg !13953
  br label %276, !dbg !14231

276:                                              ; preds = %283, %274
  %277 = phi i32 [ %271, %274 ], [ %284, %283 ], !dbg !14219
  %278 = phi i32 [ %275, %274 ], [ %285, %283 ], !dbg !14219
  call void @llvm.dbg.value(metadata i32 %278, metadata !1385, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %277, metadata !1384, metadata !DIExpression()), !dbg !13953
  %279 = icmp ugt i32 %278, %50, !dbg !14232
  %280 = select i1 %279, i32 %50, i32 %278, !dbg !14234
  call void @llvm.dbg.value(metadata i32 %280, metadata !1386, metadata !DIExpression()), !dbg !13953
  %281 = call i32 @disk_write(i8 noundef zeroext %20, i8* noundef %3, i32 noundef %277, i32 noundef %280) #20, !dbg !14235
  %282 = icmp eq i32 %281, 0, !dbg !14237
  br i1 %282, label %283, label %318, !dbg !14238

283:                                              ; preds = %276
  %284 = add i32 %280, %277, !dbg !14239
  call void @llvm.dbg.value(metadata i32 %284, metadata !1384, metadata !DIExpression()), !dbg !13953
  %285 = sub i32 %278, %280, !dbg !14240
  call void @llvm.dbg.value(metadata i32 %285, metadata !1385, metadata !DIExpression()), !dbg !13953
  %286 = icmp eq i32 %285, 0, !dbg !14241
  br i1 %286, label %287, label %276, !dbg !14241, !llvm.loop !14242

287:                                              ; preds = %283
  call void @llvm.dbg.value(metadata i8 undef, metadata !1373, metadata !DIExpression()), !dbg !13953
  br i1 %59, label %288, label %314, !dbg !14244

288:                                              ; preds = %287
  %289 = load i32, i32* %8, align 4, !dbg !14247
  %290 = icmp ugt i32 %289, 65535, !dbg !14247
  %291 = select i1 %174, i8 4, i8 1, !dbg !14247
  %292 = select i1 %290, i8 6, i8 %291, !dbg !14247
  %293 = select i1 %152, i8 12, i8 %292, !dbg !14247
  call void @llvm.dbg.value(metadata i8 %293, metadata !1373, metadata !DIExpression()), !dbg !13953
  call fastcc void @mem_set(i8* noundef %3, i32 noundef 0, i32 noundef 512) #22, !dbg !14250
  call fastcc void @st_word(i8* noundef nonnull %243, i16 noundef zeroext -21931) #22, !dbg !14253
  %294 = getelementptr inbounds i8, i8* %3, i32 446, !dbg !14254
  call void @llvm.dbg.value(metadata i8* %294, metadata !1375, metadata !DIExpression()), !dbg !13953
  store i8 0, i8* %294, align 1, !dbg !14255
  %295 = getelementptr inbounds i8, i8* %3, i32 447, !dbg !14256
  store i8 1, i8* %295, align 1, !dbg !14257
  %296 = getelementptr inbounds i8, i8* %3, i32 448, !dbg !14258
  store i8 1, i8* %296, align 1, !dbg !14259
  %297 = getelementptr inbounds i8, i8* %3, i32 449, !dbg !14260
  store i8 0, i8* %297, align 1, !dbg !14261
  %298 = getelementptr inbounds i8, i8* %3, i32 450, !dbg !14262
  store i8 %293, i8* %298, align 1, !dbg !14263
  %299 = load i32, i32* %8, align 4, !dbg !14264
  call void @llvm.dbg.value(metadata i32 %299, metadata !1390, metadata !DIExpression()), !dbg !13953
  %300 = add i32 %299, %61, !dbg !14265
  %301 = udiv i32 %300, 16065, !dbg !14266
  call void @llvm.dbg.value(metadata i32 %301, metadata !1386, metadata !DIExpression()), !dbg !13953
  %302 = getelementptr inbounds i8, i8* %3, i32 451, !dbg !14267
  store i8 -2, i8* %302, align 1, !dbg !14268
  %303 = lshr i32 %301, 2, !dbg !14269
  %304 = trunc i32 %303 to i8, !dbg !14270
  %305 = or i8 %304, 63, !dbg !14270
  %306 = getelementptr inbounds i8, i8* %3, i32 452, !dbg !14271
  store i8 %305, i8* %306, align 1, !dbg !14272
  %307 = trunc i32 %301 to i8, !dbg !14273
  %308 = getelementptr inbounds i8, i8* %3, i32 453, !dbg !14274
  store i8 %307, i8* %308, align 1, !dbg !14275
  %309 = getelementptr inbounds i8, i8* %3, i32 454, !dbg !14276
  call fastcc void @st_dword(i8* noundef nonnull %309, i32 noundef %61) #22, !dbg !14277
  %310 = getelementptr inbounds i8, i8* %3, i32 458, !dbg !14278
  %311 = load i32, i32* %8, align 4, !dbg !14279
  call void @llvm.dbg.value(metadata i32 %311, metadata !1390, metadata !DIExpression()), !dbg !13953
  call fastcc void @st_dword(i8* noundef nonnull %310, i32 noundef %311) #22, !dbg !14280
  %312 = call i32 @disk_write(i8 noundef zeroext %20, i8* noundef %3, i32 noundef 0, i32 noundef 1) #20, !dbg !14281
  %313 = icmp eq i32 %312, 0, !dbg !14283
  br i1 %313, label %314, label %318, !dbg !14284

314:                                              ; preds = %288, %287
  %315 = call i32 @disk_ioctl(i8 noundef zeroext %20, i8 noundef zeroext 0, i8* noundef null) #20, !dbg !14285
  %316 = icmp ne i32 %315, 0, !dbg !14287
  %317 = zext i1 %316 to i32, !dbg !13953
  br label %318, !dbg !13953

318:                                              ; preds = %193, %188, %168, %139, %107, %263, %276, %314, %288, %235, %198, %79, %67, %64, %56, %53, %48, %42, %25, %19, %5
  %319 = phi i32 [ 11, %5 ], [ 3, %19 ], [ 10, %25 ], [ 19, %42 ], [ 14, %48 ], [ 1, %53 ], [ 14, %56 ], [ 14, %64 ], [ 19, %67 ], [ 19, %79 ], [ 14, %198 ], [ 1, %235 ], [ 1, %288 ], [ %317, %314 ], [ 1, %276 ], [ 1, %263 ], [ 14, %107 ], [ 14, %139 ], [ 14, %168 ], [ 14, %188 ], [ 14, %193 ], !dbg !13953
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #19, !dbg !14288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !14288
  ret i32 %319, !dbg !14288
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @f_gets(i8* noundef writeonly %0, i32 noundef %1, %struct.FIL* noundef %2) local_unnamed_addr #0 !dbg !14289 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14293, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i32 %1, metadata !14294, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata %struct.FIL* %2, metadata !14295, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i32 0, metadata !14296, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i8* %0, metadata !14298, metadata !DIExpression()), !dbg !14302
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !14303
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #19, !dbg !14303
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !14299, metadata !DIExpression()), !dbg !14304
  %7 = bitcast i32* %5 to i8*, !dbg !14305
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14305
  %8 = add i32 %1, -1
  %9 = call i32 @llvm.smax.i32(i32 %8, i32 0), !dbg !14306
  br label %10, !dbg !14306

10:                                               ; preds = %18, %3
  %11 = phi i32 [ 0, %3 ], [ %21, %18 ], !dbg !14302
  %12 = phi i8* [ %0, %3 ], [ %20, %18 ], !dbg !14302
  call void @llvm.dbg.value(metadata i8* %12, metadata !14298, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i32 %11, metadata !14296, metadata !DIExpression()), !dbg !14302
  %13 = icmp eq i32 %11, %9, !dbg !14307
  br i1 %13, label %24, label %14, !dbg !14306

14:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32* %5, metadata !14301, metadata !DIExpression(DW_OP_deref)), !dbg !14302
  %15 = call i32 @f_read(%struct.FIL* noundef %2, i8* noundef nonnull %6, i32 noundef 1, i32* noundef nonnull %5) #22, !dbg !14308
  %16 = load i32, i32* %5, align 4, !dbg !14310
  call void @llvm.dbg.value(metadata i32 %16, metadata !14301, metadata !DIExpression()), !dbg !14302
  %17 = icmp eq i32 %16, 1, !dbg !14312
  br i1 %17, label %18, label %24, !dbg !14313

18:                                               ; preds = %14
  %19 = load i8, i8* %6, align 1, !dbg !14314
  call void @llvm.dbg.value(metadata i8 %19, metadata !14297, metadata !DIExpression()), !dbg !14302
  %20 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !14315
  call void @llvm.dbg.value(metadata i8* %20, metadata !14298, metadata !DIExpression()), !dbg !14302
  store i8 %19, i8* %12, align 1, !dbg !14316
  %21 = add nuw i32 %11, 1, !dbg !14317
  call void @llvm.dbg.value(metadata i32 %21, metadata !14296, metadata !DIExpression()), !dbg !14302
  %22 = icmp eq i8 %19, 10, !dbg !14318
  br i1 %22, label %23, label %10, !dbg !14320, !llvm.loop !14321

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8* undef, metadata !14298, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()), !dbg !14302
  store i8 0, i8* %20, align 1, !dbg !14323
  br label %28, !dbg !14324

24:                                               ; preds = %14, %10
  %25 = phi i32 [ %11, %14 ], [ %9, %10 ], !dbg !14302
  call void @llvm.dbg.value(metadata i8* %12, metadata !14298, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i32 %25, metadata !14296, metadata !DIExpression()), !dbg !14302
  store i8 0, i8* %12, align 1, !dbg !14323
  %26 = icmp eq i32 %25, 0, !dbg !14324
  %27 = select i1 %26, i8* null, i8* %0, !dbg !14324
  br label %28, !dbg !14324

28:                                               ; preds = %24, %23
  %29 = phi i8* [ %0, %23 ], [ %27, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14325
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #19, !dbg !14325
  ret i8* %29, !dbg !14326
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_putc(i8 noundef zeroext %0, %struct.FIL* noundef %1) local_unnamed_addr #0 !dbg !14327 {
  %3 = alloca %struct.putbuff, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !14331, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata %struct.FIL* %1, metadata !14332, metadata !DIExpression()), !dbg !14344
  %4 = bitcast %struct.putbuff* %3 to i8*, !dbg !14345
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %4) #19, !dbg !14345
  call void @llvm.dbg.declare(metadata %struct.putbuff* %3, metadata !14333, metadata !DIExpression()), !dbg !14346
  call fastcc void @putc_init(%struct.putbuff* noundef nonnull %3, %struct.FIL* noundef %1) #22, !dbg !14347
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %3, i8 noundef zeroext %0) #22, !dbg !14348
  %5 = call fastcc i32 @putc_flush(%struct.putbuff* noundef nonnull %3) #22, !dbg !14349
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %4) #19, !dbg !14350
  ret i32 %5, !dbg !14351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @putc_init(%struct.putbuff* nocapture noundef writeonly %0, %struct.FIL* noundef %1) unnamed_addr #4 !dbg !14352 {
  call void @llvm.dbg.value(metadata %struct.putbuff* %0, metadata !14357, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata %struct.FIL* %1, metadata !14358, metadata !DIExpression()), !dbg !14359
  %3 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 0, !dbg !14360
  store %struct.FIL* %1, %struct.FIL** %3, align 4, !dbg !14361
  %4 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 1, !dbg !14362
  store i32 0, i32* %4, align 4, !dbg !14363
  %5 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 2, !dbg !14364
  store i32 0, i32* %5, align 4, !dbg !14365
  ret void, !dbg !14366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @putc_bfd(%struct.putbuff* noundef %0, i8 noundef zeroext %1) unnamed_addr #0 !dbg !14367 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.putbuff* %0, metadata !14371, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.value(metadata i8 %1, metadata !14372, metadata !DIExpression()), !dbg !14375
  %4 = bitcast i32* %3 to i8*, !dbg !14376
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !14376
  %5 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 1, !dbg !14377
  %6 = load i32, i32* %5, align 4, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %6, metadata !14374, metadata !DIExpression()), !dbg !14375
  %7 = icmp slt i32 %6, 0, !dbg !14378
  br i1 %7, label %25, label %8, !dbg !14380

8:                                                ; preds = %2
  %9 = add nuw nsw i32 %6, 1, !dbg !14381
  call void @llvm.dbg.value(metadata i32 %9, metadata !14374, metadata !DIExpression()), !dbg !14375
  %10 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 3, i32 %6, !dbg !14382
  store i8 %1, i8* %10, align 1, !dbg !14383
  %11 = icmp ugt i32 %6, 59, !dbg !14384
  br i1 %11, label %12, label %20, !dbg !14386

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 0, !dbg !14387
  %14 = load %struct.FIL*, %struct.FIL** %13, align 4, !dbg !14387
  %15 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 3, i32 0, !dbg !14389
  call void @llvm.dbg.value(metadata i32* %3, metadata !14373, metadata !DIExpression(DW_OP_deref)), !dbg !14375
  %16 = call i32 @f_write(%struct.FIL* noundef %14, i8* noundef nonnull %15, i32 noundef %9, i32* noundef nonnull %3) #22, !dbg !14390
  %17 = load i32, i32* %3, align 4, !dbg !14391
  call void @llvm.dbg.value(metadata i32 %17, metadata !14373, metadata !DIExpression()), !dbg !14375
  %18 = icmp ne i32 %17, %9, !dbg !14392
  %19 = sext i1 %18 to i32, !dbg !14393
  call void @llvm.dbg.value(metadata i32 %19, metadata !14374, metadata !DIExpression()), !dbg !14375
  br label %20, !dbg !14394

20:                                               ; preds = %12, %8
  %21 = phi i32 [ %19, %12 ], [ %9, %8 ], !dbg !14375
  call void @llvm.dbg.value(metadata i32 %21, metadata !14374, metadata !DIExpression()), !dbg !14375
  store i32 %21, i32* %5, align 4, !dbg !14395
  %22 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 2, !dbg !14396
  %23 = load i32, i32* %22, align 4, !dbg !14397
  %24 = add nsw i32 %23, 1, !dbg !14397
  store i32 %24, i32* %22, align 4, !dbg !14397
  br label %25, !dbg !14398

25:                                               ; preds = %2, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !14398
  ret void, !dbg !14398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @putc_flush(%struct.putbuff* noundef %0) unnamed_addr #0 !dbg !14399 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.putbuff* %0, metadata !14403, metadata !DIExpression()), !dbg !14405
  %3 = bitcast i32* %2 to i8*, !dbg !14406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !14406
  %4 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 1, !dbg !14407
  %5 = load i32, i32* %4, align 4, !dbg !14407
  %6 = icmp sgt i32 %5, -1, !dbg !14409
  br i1 %6, label %7, label %20, !dbg !14410

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 0, !dbg !14411
  %9 = load %struct.FIL*, %struct.FIL** %8, align 4, !dbg !14411
  %10 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 3, i32 0, !dbg !14412
  call void @llvm.dbg.value(metadata i32* %2, metadata !14404, metadata !DIExpression(DW_OP_deref)), !dbg !14405
  %11 = call i32 @f_write(%struct.FIL* noundef %9, i8* noundef nonnull %10, i32 noundef %5, i32* noundef nonnull %2) #22, !dbg !14413
  %12 = icmp eq i32 %11, 0, !dbg !14414
  br i1 %12, label %13, label %20, !dbg !14415

13:                                               ; preds = %7
  %14 = load i32, i32* %4, align 4, !dbg !14416
  %15 = load i32, i32* %2, align 4, !dbg !14417
  call void @llvm.dbg.value(metadata i32 %15, metadata !14404, metadata !DIExpression()), !dbg !14405
  %16 = icmp eq i32 %14, %15, !dbg !14418
  br i1 %16, label %17, label %20, !dbg !14419

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.putbuff, %struct.putbuff* %0, i32 0, i32 2, !dbg !14420
  %19 = load i32, i32* %18, align 4, !dbg !14420
  br label %20, !dbg !14421

20:                                               ; preds = %1, %7, %13, %17
  %21 = phi i32 [ %19, %17 ], [ -1, %13 ], [ -1, %7 ], [ -1, %1 ], !dbg !14405
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !14422
  ret i32 %21, !dbg !14422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_puts(i8* nocapture noundef readonly %0, %struct.FIL* noundef %1) local_unnamed_addr #0 !dbg !14423 {
  %3 = alloca %struct.putbuff, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14427, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata %struct.FIL* %1, metadata !14428, metadata !DIExpression()), !dbg !14430
  %4 = bitcast %struct.putbuff* %3 to i8*, !dbg !14431
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %4) #19, !dbg !14431
  call void @llvm.dbg.declare(metadata %struct.putbuff* %3, metadata !14429, metadata !DIExpression()), !dbg !14432
  call fastcc void @putc_init(%struct.putbuff* noundef nonnull %3, %struct.FIL* noundef %1) #22, !dbg !14433
  call void @llvm.dbg.value(metadata i8* %0, metadata !14427, metadata !DIExpression()), !dbg !14430
  %5 = load i8, i8* %0, align 1, !dbg !14434
  %6 = icmp eq i8 %5, 0, !dbg !14435
  br i1 %6, label %13, label %7, !dbg !14435

7:                                                ; preds = %2, %7
  %8 = phi i8 [ %11, %7 ], [ %5, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !14427, metadata !DIExpression()), !dbg !14430
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !14436
  call void @llvm.dbg.value(metadata i8* %10, metadata !14427, metadata !DIExpression()), !dbg !14430
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %3, i8 noundef zeroext %8) #22, !dbg !14437
  %11 = load i8, i8* %10, align 1, !dbg !14434
  %12 = icmp eq i8 %11, 0, !dbg !14435
  br i1 %12, label %13, label %7, !dbg !14435, !llvm.loop !14438

13:                                               ; preds = %7, %2
  %14 = call fastcc i32 @putc_flush(%struct.putbuff* noundef nonnull %3) #22, !dbg !14440
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %4) #19, !dbg !14441
  ret i32 %14, !dbg !14442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f_printf(%struct.FIL* noundef %0, i8* nocapture noundef readonly %1, ...) local_unnamed_addr #0 !dbg !14443 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca %struct.putbuff, align 4
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.FIL* %0, metadata !14447, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %1, metadata !14448, metadata !DIExpression()), !dbg !14467
  %6 = bitcast %struct.__va_list* %3 to i8*, !dbg !14468
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !14468
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !14449, metadata !DIExpression()), !dbg !14469
  %7 = bitcast %struct.putbuff* %4 to i8*, !dbg !14470
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %7) #19, !dbg !14470
  call void @llvm.dbg.declare(metadata %struct.putbuff* %4, metadata !14455, metadata !DIExpression()), !dbg !14471
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !14472
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #19, !dbg !14472
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !14464, metadata !DIExpression()), !dbg !14473
  call fastcc void @putc_init(%struct.putbuff* noundef nonnull %4, %struct.FIL* noundef %0) #22, !dbg !14474
  call void @llvm.va_start(i8* nonnull %6), !dbg !14475
  %9 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0
  br label %10, !dbg !14476

10:                                               ; preds = %17, %2
  %11 = phi i8* [ %1, %2 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !14448, metadata !DIExpression()), !dbg !14467
  %12 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !14477
  call void @llvm.dbg.value(metadata i8* %12, metadata !14448, metadata !DIExpression()), !dbg !14467
  %13 = load i8, i8* %11, align 1, !dbg !14481
  call void @llvm.dbg.value(metadata i8 %13, metadata !14462, metadata !DIExpression()), !dbg !14467
  switch i8 %13, label %14 [
    i8 0, label %180
    i8 37, label %19
  ], !dbg !14482

14:                                               ; preds = %10, %60, %103
  %15 = phi i8 [ %108, %103 ], [ %58, %60 ], [ %13, %10 ]
  %16 = phi i8* [ %56, %103 ], [ %56, %60 ], [ %12, %10 ]
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %4, i8 noundef zeroext %15) #22, !dbg !14483
  br label %17, !dbg !14467

17:                                               ; preds = %176, %99, %14, %174, %91
  %18 = phi i8* [ %56, %91 ], [ %56, %174 ], [ %16, %14 ], [ %56, %99 ], [ %56, %176 ]
  br label %10, !dbg !14467, !llvm.loop !14484

19:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i8 0, metadata !14456, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 0, metadata !14460, metadata !DIExpression()), !dbg !14467
  %20 = getelementptr inbounds i8, i8* %11, i32 2, !dbg !14487
  call void @llvm.dbg.value(metadata i8* %20, metadata !14448, metadata !DIExpression()), !dbg !14467
  %21 = load i8, i8* %12, align 1, !dbg !14488
  call void @llvm.dbg.value(metadata i8 %21, metadata !14462, metadata !DIExpression()), !dbg !14467
  switch i8 %21, label %27 [
    i8 48, label %23
    i8 45, label %22
  ], !dbg !14489

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i8 2, metadata !14456, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %25, metadata !14448, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8 %26, metadata !14462, metadata !DIExpression()), !dbg !14467
  br label %23, !dbg !14490

23:                                               ; preds = %19, %22
  %24 = phi i8 [ 2, %22 ], [ 1, %19 ]
  %25 = getelementptr inbounds i8, i8* %11, i32 3, !dbg !14495
  %26 = load i8, i8* %20, align 1, !dbg !14495
  br label %27, !dbg !14496

27:                                               ; preds = %23, %19
  %28 = phi i8* [ %20, %19 ], [ %25, %23 ], !dbg !14483
  %29 = phi i8 [ 0, %19 ], [ %24, %23 ], !dbg !14483
  %30 = phi i8 [ %21, %19 ], [ %26, %23 ], !dbg !14483
  call void @llvm.dbg.value(metadata i8 %30, metadata !14462, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8 %29, metadata !14456, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %28, metadata !14448, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 0, metadata !14460, metadata !DIExpression()), !dbg !14467
  %31 = add i8 %30, -48, !dbg !14496
  %32 = icmp ult i8 %31, 10, !dbg !14496
  br i1 %32, label %33, label %45, !dbg !14497

33:                                               ; preds = %27, %33
  %34 = phi i8 [ %42, %33 ], [ %30, %27 ]
  %35 = phi i32 [ %40, %33 ], [ 0, %27 ]
  %36 = phi i8* [ %41, %33 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i8 %34, metadata !14462, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 %35, metadata !14460, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %36, metadata !14448, metadata !DIExpression()), !dbg !14467
  %37 = zext i8 %34 to i32, !dbg !14496
  %38 = mul i32 %35, 10, !dbg !14498
  %39 = add i32 %38, -48, !dbg !14500
  %40 = add i32 %39, %37, !dbg !14501
  call void @llvm.dbg.value(metadata i32 %40, metadata !14460, metadata !DIExpression()), !dbg !14467
  %41 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !14502
  call void @llvm.dbg.value(metadata i8* %41, metadata !14448, metadata !DIExpression()), !dbg !14467
  %42 = load i8, i8* %36, align 1, !dbg !14503
  call void @llvm.dbg.value(metadata i8 %42, metadata !14462, metadata !DIExpression()), !dbg !14467
  %43 = add i8 %42, -48, !dbg !14496
  %44 = icmp ult i8 %43, 10, !dbg !14496
  br i1 %44, label %33, label %45, !dbg !14497, !llvm.loop !14504

45:                                               ; preds = %33, %27
  %46 = phi i8* [ %28, %27 ], [ %41, %33 ], !dbg !14483
  %47 = phi i32 [ 0, %27 ], [ %40, %33 ], !dbg !14483
  %48 = phi i8 [ %30, %27 ], [ %42, %33 ], !dbg !14483
  %49 = and i8 %48, -33, !dbg !14506
  %50 = icmp eq i8 %49, 76, !dbg !14506
  br i1 %50, label %51, label %55, !dbg !14506

51:                                               ; preds = %45
  %52 = or i8 %29, 4, !dbg !14508
  call void @llvm.dbg.value(metadata i8 %52, metadata !14456, metadata !DIExpression()), !dbg !14467
  %53 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !14510
  call void @llvm.dbg.value(metadata i8* %53, metadata !14448, metadata !DIExpression()), !dbg !14467
  %54 = load i8, i8* %46, align 1, !dbg !14511
  call void @llvm.dbg.value(metadata i8 %54, metadata !14462, metadata !DIExpression()), !dbg !14467
  br label %55, !dbg !14512

55:                                               ; preds = %45, %51
  %56 = phi i8* [ %53, %51 ], [ %46, %45 ], !dbg !14483
  %57 = phi i8 [ %52, %51 ], [ %29, %45 ], !dbg !14483
  %58 = phi i8 [ %54, %51 ], [ %48, %45 ], !dbg !14483
  call void @llvm.dbg.value(metadata i8 %58, metadata !14462, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8 %57, metadata !14456, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %56, metadata !14448, metadata !DIExpression()), !dbg !14467
  %59 = icmp eq i8 %58, 0, !dbg !14513
  br i1 %59, label %180, label %60, !dbg !14515

60:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i8 %58, metadata !14463, metadata !DIExpression()), !dbg !14467
  %61 = add i8 %58, -97, !dbg !14516
  %62 = icmp ult i8 %61, 26, !dbg !14516
  %63 = add i8 %58, -32
  %64 = select i1 %62, i8 %63, i8 %58, !dbg !14516
  call void @llvm.dbg.value(metadata i8 %64, metadata !14463, metadata !DIExpression()), !dbg !14467
  switch i8 %64, label %14 [
    i8 83, label %65
    i8 67, label %103
    i8 66, label %112
    i8 79, label %109
    i8 68, label %110
    i8 85, label %110
    i8 88, label %111
  ], !dbg !14518

65:                                               ; preds = %60
  %66 = load i8*, i8** %9, align 4, !dbg !14519
  %67 = getelementptr inbounds i8, i8* %66, i32 4, !dbg !14519
  store i8* %67, i8** %9, align 4, !dbg !14519
  %68 = bitcast i8* %66 to i8**, !dbg !14519
  %69 = load i8*, i8** %68, align 4, !dbg !14519
  call void @llvm.dbg.value(metadata i8* %69, metadata !14466, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 0, metadata !14459, metadata !DIExpression()), !dbg !14467
  br label %70, !dbg !14521

70:                                               ; preds = %70, %65
  %71 = phi i32 [ 0, %65 ], [ %75, %70 ], !dbg !14523
  call void @llvm.dbg.value(metadata i32 %71, metadata !14459, metadata !DIExpression()), !dbg !14467
  %72 = getelementptr inbounds i8, i8* %69, i32 %71, !dbg !14524
  %73 = load i8, i8* %72, align 1, !dbg !14524
  %74 = icmp eq i8 %73, 0, !dbg !14526
  %75 = add i32 %71, 1, !dbg !14527
  call void @llvm.dbg.value(metadata i32 %75, metadata !14459, metadata !DIExpression()), !dbg !14467
  br i1 %74, label %76, label %70, !dbg !14526, !llvm.loop !14528

76:                                               ; preds = %70
  %77 = and i8 %57, 2, !dbg !14530
  %78 = icmp eq i8 %77, 0, !dbg !14530
  br i1 %78, label %79, label %87, !dbg !14532

79:                                               ; preds = %76
  call void @llvm.dbg.value(metadata i32 %75, metadata !14459, metadata !DIExpression()), !dbg !14467
  %80 = icmp ult i32 %71, %47, !dbg !14533
  br i1 %80, label %81, label %87, !dbg !14535

81:                                               ; preds = %79
  %82 = add i32 %47, 1, !dbg !14535
  br label %83, !dbg !14535

83:                                               ; preds = %81, %83
  %84 = phi i32 [ %85, %83 ], [ %75, %81 ]
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %4, i8 noundef zeroext 32) #22, !dbg !14536
  call void @llvm.dbg.value(metadata i32 %84, metadata !14459, metadata !DIExpression()), !dbg !14467
  %85 = add i32 %84, 1, !dbg !14537
  call void @llvm.dbg.value(metadata i32 %85, metadata !14459, metadata !DIExpression()), !dbg !14467
  %86 = icmp eq i32 %84, %47, !dbg !14533
  br i1 %86, label %87, label %83, !dbg !14535, !llvm.loop !14538

87:                                               ; preds = %83, %79, %76
  %88 = phi i32 [ %71, %76 ], [ %75, %79 ], [ %82, %83 ], !dbg !14540
  call void @llvm.dbg.value(metadata i32 %88, metadata !14459, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8* %69, metadata !14466, metadata !DIExpression()), !dbg !14467
  %89 = load i8, i8* %69, align 1, !dbg !14541
  %90 = icmp eq i8 %89, 0, !dbg !14542
  br i1 %90, label %91, label %93, !dbg !14542

91:                                               ; preds = %93, %87
  call void @llvm.dbg.value(metadata i32 %88, metadata !14459, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14467
  %92 = icmp ult i32 %88, %47, !dbg !14543
  br i1 %92, label %99, label %17, !dbg !14544

93:                                               ; preds = %87, %93
  %94 = phi i8 [ %97, %93 ], [ %89, %87 ]
  %95 = phi i8* [ %96, %93 ], [ %69, %87 ]
  call void @llvm.dbg.value(metadata i8* %95, metadata !14466, metadata !DIExpression()), !dbg !14467
  %96 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !14545
  call void @llvm.dbg.value(metadata i8* %96, metadata !14466, metadata !DIExpression()), !dbg !14467
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %4, i8 noundef zeroext %94) #22, !dbg !14546
  %97 = load i8, i8* %96, align 1, !dbg !14541
  %98 = icmp eq i8 %97, 0, !dbg !14542
  br i1 %98, label %91, label %93, !dbg !14542, !llvm.loop !14547

99:                                               ; preds = %91, %99
  %100 = phi i32 [ %101, %99 ], [ %88, %91 ]
  call void @llvm.dbg.value(metadata i32 %100, metadata !14459, metadata !DIExpression()), !dbg !14467
  %101 = add i32 %100, 1, !dbg !14549
  call void @llvm.dbg.value(metadata i32 %101, metadata !14459, metadata !DIExpression()), !dbg !14467
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %4, i8 noundef zeroext 32) #22, !dbg !14550
  call void @llvm.dbg.value(metadata i32 %101, metadata !14459, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14467
  %102 = icmp eq i32 %101, %47, !dbg !14543
  br i1 %102, label %17, label %99, !dbg !14544, !llvm.loop !14484

103:                                              ; preds = %60
  %104 = load i8*, i8** %9, align 4, !dbg !14551
  %105 = getelementptr inbounds i8, i8* %104, i32 4, !dbg !14551
  store i8* %105, i8** %9, align 4, !dbg !14551
  %106 = bitcast i8* %104 to i32*, !dbg !14551
  %107 = load i32, i32* %106, align 4, !dbg !14551
  %108 = trunc i32 %107 to i8, !dbg !14552
  br label %14, !dbg !14553

109:                                              ; preds = %60
  call void @llvm.dbg.value(metadata i8 8, metadata !14457, metadata !DIExpression()), !dbg !14467
  br label %112, !dbg !14554

110:                                              ; preds = %60, %60
  call void @llvm.dbg.value(metadata i8 10, metadata !14457, metadata !DIExpression()), !dbg !14467
  br label %112, !dbg !14555

111:                                              ; preds = %60
  call void @llvm.dbg.value(metadata i8 16, metadata !14457, metadata !DIExpression()), !dbg !14467
  br label %112, !dbg !14556

112:                                              ; preds = %60, %111, %110, %109
  %113 = phi i32 [ 16, %111 ], [ 10, %110 ], [ 8, %109 ], [ 2, %60 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !14457, metadata !DIExpression()), !dbg !14467
  %114 = load i8*, i8** %9, align 4, !dbg !14483
  %115 = getelementptr inbounds i8, i8* %114, i32 4, !dbg !14483
  store i8* %115, i8** %9, align 4, !dbg !14483
  %116 = bitcast i8* %114 to i32*, !dbg !14483
  %117 = load i32, i32* %116, align 4, !dbg !14557
  call void @llvm.dbg.value(metadata i32 %117, metadata !14461, metadata !DIExpression()), !dbg !14467
  %118 = icmp ne i8 %64, 68, !dbg !14558
  %119 = icmp sgt i32 %117, -1
  %120 = select i1 %118, i1 true, i1 %119, !dbg !14560
  %121 = sub i32 0, %117, !dbg !14560
  %122 = or i8 %57, 8, !dbg !14560
  %123 = select i1 %120, i32 %117, i32 %121, !dbg !14560
  call void @llvm.dbg.value(metadata i32 %123, metadata !14461, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i8 %144, metadata !14456, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 0, metadata !14458, metadata !DIExpression()), !dbg !14467
  %124 = icmp eq i8 %58, 120
  %125 = select i1 %124, i32 39, i32 7
  br label %126, !dbg !14561

126:                                              ; preds = %126, %112
  %127 = phi i32 [ 0, %112 ], [ %138, %126 ], !dbg !14483
  %128 = phi i32 [ %123, %112 ], [ %130, %126 ], !dbg !14483
  call void @llvm.dbg.value(metadata i32 %128, metadata !14461, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 %127, metadata !14458, metadata !DIExpression()), !dbg !14467
  %129 = freeze i32 %128
  %130 = udiv i32 %129, %113, !dbg !14562
  %131 = mul i32 %130, %113
  %132 = sub i32 %129, %131
  call void @llvm.dbg.value(metadata i32 %132, metadata !14463, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14467
  call void @llvm.dbg.value(metadata i32 %130, metadata !14461, metadata !DIExpression()), !dbg !14467
  %133 = icmp ugt i32 %132, 9, !dbg !14564
  %134 = select i1 %133, i32 %125, i32 0, !dbg !14566
  %135 = add nuw nsw i32 %134, %132, !dbg !14566
  call void @llvm.dbg.value(metadata i32 %135, metadata !14463, metadata !DIExpression()), !dbg !14467
  %136 = trunc i32 %135 to i8, !dbg !14567
  %137 = add nuw i8 %136, 48, !dbg !14567
  %138 = add nuw nsw i32 %127, 1, !dbg !14568
  call void @llvm.dbg.value(metadata i32 %138, metadata !14458, metadata !DIExpression()), !dbg !14467
  %139 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %127, !dbg !14569
  store i8 %137, i8* %139, align 1, !dbg !14570
  %140 = icmp ule i32 %113, %128, !dbg !14571
  %141 = icmp ult i32 %127, 31, !dbg !14572
  %142 = select i1 %140, i1 %141, i1 false, !dbg !14572
  br i1 %142, label %126, label %143, !dbg !14573, !llvm.loop !14574

143:                                              ; preds = %126
  %144 = select i1 %120, i8 %57, i8 %122, !dbg !14560
  %145 = zext i8 %144 to i32, !dbg !14576
  %146 = and i32 %145, 8, !dbg !14578
  %147 = icmp eq i32 %146, 0, !dbg !14578
  br i1 %147, label %151, label %148, !dbg !14579

148:                                              ; preds = %143
  %149 = add nuw nsw i32 %127, 2, !dbg !14580
  call void @llvm.dbg.value(metadata i32 %149, metadata !14458, metadata !DIExpression()), !dbg !14467
  %150 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %138, !dbg !14581
  store i8 45, i8* %150, align 1, !dbg !14582
  br label %151, !dbg !14581

151:                                              ; preds = %148, %143
  %152 = phi i32 [ %149, %148 ], [ %138, %143 ], !dbg !14483
  call void @llvm.dbg.value(metadata i32 %152, metadata !14458, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 %152, metadata !14459, metadata !DIExpression()), !dbg !14467
  %153 = and i32 %145, 1, !dbg !14583
  %154 = icmp eq i32 %153, 0, !dbg !14584
  %155 = select i1 %154, i8 32, i8 48, !dbg !14584
  call void @llvm.dbg.value(metadata i8 %155, metadata !14463, metadata !DIExpression()), !dbg !14467
  %156 = and i32 %145, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %166, !dbg !14585

158:                                              ; preds = %151
  %159 = call i32 @llvm.umax.i32(i32 %152, i32 %47), !dbg !14586
  %160 = add i32 %159, 1, !dbg !14586
  call void @llvm.dbg.value(metadata i32 %152, metadata !14459, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14467
  %161 = icmp ult i32 %152, %47, !dbg !14587
  br i1 %161, label %162, label %166, !dbg !14586

162:                                              ; preds = %158, %162
  %163 = phi i32 [ %164, %162 ], [ %152, %158 ]
  call void @llvm.dbg.value(metadata i32 %163, metadata !14459, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14467
  %164 = add i32 %163, 1, !dbg !14588
  call void @llvm.dbg.value(metadata i32 %164, metadata !14459, metadata !DIExpression()), !dbg !14467
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %4, i8 noundef zeroext %155) #22, !dbg !14589
  call void @llvm.dbg.value(metadata i32 %164, metadata !14459, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14467
  %165 = icmp eq i32 %164, %159, !dbg !14587
  br i1 %165, label %166, label %162, !dbg !14586, !llvm.loop !14590

166:                                              ; preds = %162, %158, %151
  %167 = phi i32 [ %152, %151 ], [ %160, %158 ], [ %160, %162 ], !dbg !14483
  call void @llvm.dbg.value(metadata i32 %167, metadata !14459, metadata !DIExpression()), !dbg !14467
  br label %168, !dbg !14592

168:                                              ; preds = %168, %166
  %169 = phi i32 [ %152, %166 ], [ %170, %168 ], !dbg !14483
  call void @llvm.dbg.value(metadata i32 %169, metadata !14458, metadata !DIExpression()), !dbg !14467
  %170 = add nsw i32 %169, -1, !dbg !14593
  call void @llvm.dbg.value(metadata i32 %170, metadata !14458, metadata !DIExpression()), !dbg !14467
  %171 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %170, !dbg !14594
  %172 = load i8, i8* %171, align 1, !dbg !14594
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %4, i8 noundef zeroext %172) #22, !dbg !14595
  %173 = icmp eq i32 %170, 0, !dbg !14595
  br i1 %173, label %174, label %168, !dbg !14595, !llvm.loop !14596

174:                                              ; preds = %168
  call void @llvm.dbg.value(metadata i32 %167, metadata !14459, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14467
  %175 = icmp ult i32 %167, %47, !dbg !14598
  br i1 %175, label %176, label %17, !dbg !14599

176:                                              ; preds = %174, %176
  %177 = phi i32 [ %178, %176 ], [ %167, %174 ]
  call void @llvm.dbg.value(metadata i32 %177, metadata !14459, metadata !DIExpression()), !dbg !14467
  %178 = add i32 %177, 1, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %178, metadata !14459, metadata !DIExpression()), !dbg !14467
  call fastcc void @putc_bfd(%struct.putbuff* noundef nonnull %4, i8 noundef zeroext %155) #22, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %178, metadata !14459, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14467
  %179 = icmp eq i32 %178, %47, !dbg !14598
  br i1 %179, label %17, label %176, !dbg !14599, !llvm.loop !14484

180:                                              ; preds = %10, %55
  call void @llvm.va_end(i8* nonnull %6), !dbg !14602
  %181 = call fastcc i32 @putc_flush(%struct.putbuff* noundef nonnull %4) #22, !dbg !14603
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #19, !dbg !14604
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %7) #19, !dbg !14604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !14604
  ret i32 %181, !dbg !14605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @disk_status(i8 noundef zeroext %0) local_unnamed_addr #9 !dbg !14606 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14610, metadata !DIExpression()), !dbg !14611
  %2 = icmp eq i8 %0, 0, !dbg !14612
  %3 = load i8, i8* @Drive0_Stat, align 1, !dbg !14614
  %4 = load i8, i8* @Drive1_Stat, align 1, !dbg !14614
  %5 = select i1 %2, i8 %3, i8 %4, !dbg !14614
  ret i8 %5, !dbg !14615
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @disk_initialize(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !14616 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14618, metadata !DIExpression()), !dbg !14619
  %2 = icmp eq i8 %0, 0, !dbg !14620
  br i1 %2, label %3, label %5, !dbg !14622

3:                                                ; preds = %1
  %4 = tail call zeroext i8 @sd_disk_initialize(i8 noundef zeroext 0) #20, !dbg !14623
  br label %5, !dbg !14625

5:                                                ; preds = %1, %3
  %6 = phi i8 [ %4, %3 ], [ 4, %1 ], !dbg !14626
  ret i8 %6, !dbg !14627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @disk_read(i8 noundef zeroext %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !14628 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14633, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i8* %1, metadata !14634, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 %2, metadata !14635, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 %3, metadata !14636, metadata !DIExpression()), !dbg !14637
  %5 = icmp eq i8 %0, 0, !dbg !14638
  br i1 %5, label %6, label %8, !dbg !14640

6:                                                ; preds = %4
  %7 = tail call i32 @sd_disk_read(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %2, i32 noundef %3) #20, !dbg !14641
  br label %8, !dbg !14643

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %7, %6 ], [ 4, %4 ], !dbg !14644
  ret i32 %9, !dbg !14645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @disk_write(i8 noundef zeroext %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !14646 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14650, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.value(metadata i8* %1, metadata !14651, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.value(metadata i32 %2, metadata !14652, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.value(metadata i32 %3, metadata !14653, metadata !DIExpression()), !dbg !14654
  %5 = icmp eq i8 %0, 0, !dbg !14655
  br i1 %5, label %6, label %8, !dbg !14657

6:                                                ; preds = %4
  %7 = tail call i32 @sd_disk_write(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %2, i32 noundef %3) #20, !dbg !14658
  br label %8, !dbg !14660

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %7, %6 ], [ 4, %4 ], !dbg !14661
  ret i32 %9, !dbg !14662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @disk_ioctl(i8 noundef zeroext %0, i8 noundef zeroext %1, i8* noundef %2) local_unnamed_addr #0 !dbg !14663 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14667, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.value(metadata i8 %1, metadata !14668, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.value(metadata i8* %2, metadata !14669, metadata !DIExpression()), !dbg !14670
  %4 = icmp eq i8 %0, 0, !dbg !14671
  br i1 %4, label %5, label %7, !dbg !14673

5:                                                ; preds = %3
  %6 = tail call i32 @sd_disk_ioctl(i8 noundef zeroext 0, i8 noundef zeroext %1, i8* noundef %2) #20, !dbg !14674
  br label %7, !dbg !14676

7:                                                ; preds = %3, %5
  %8 = phi i32 [ %6, %5 ], [ 4, %3 ], !dbg !14677
  ret i32 %8, !dbg !14678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @spi_pad_select() local_unnamed_addr #7 !dbg !14679 {
  %1 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !14680
  %2 = and i32 %1, 6, !dbg !14680
  %3 = icmp eq i32 %2, 6, !dbg !14680
  br i1 %3, label %8, label %4, !dbg !14682

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !14683
  %6 = and i32 %5, 7340032, !dbg !14683
  %7 = icmp eq i32 %6, 7340032, !dbg !14683
  br i1 %7, label %8, label %11, !dbg !14685

8:                                                ; preds = %4, %0
  %9 = phi i32 [ 24, %0 ], [ 29, %4 ]
  %10 = phi i8 [ 6, %0 ], [ 7, %4 ]
  store i32 %9, i32* @spi_mosi_pin, align 4, !dbg !14686
  store i8 %10, i8* @spi_mosi_pin_func_mosi, align 1, !dbg !14686
  store i1 true, i1* @spi_mosi_pin_func_gpio, align 1, !dbg !14686
  br label %11, !dbg !14687

11:                                               ; preds = %8, %4
  ret void, !dbg !14687
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @wait_ready() local_unnamed_addr #0 !dbg !14688 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*, !dbg !14696
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !14696
  call void @llvm.dbg.value(metadata i32 0, metadata !14692, metadata !DIExpression()), !dbg !14697
  store i32 0, i32* %1, align 4, !dbg !14698
  %5 = bitcast i32* %2 to i8*, !dbg !14699
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !14699
  call void @llvm.dbg.value(metadata i32 0, metadata !14693, metadata !DIExpression()), !dbg !14697
  store i32 0, i32* %2, align 4, !dbg !14700
  %6 = bitcast i32* %3 to i8*, !dbg !14701
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !14701
  call void @llvm.dbg.value(metadata i32 0, metadata !14694, metadata !DIExpression()), !dbg !14697
  store i32 0, i32* %3, align 4, !dbg !14702
  call void @llvm.dbg.value(metadata i8 0, metadata !14695, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32* %1, metadata !14692, metadata !DIExpression(DW_OP_deref)), !dbg !14697
  %7 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #20, !dbg !14703
  %8 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !14704
  call void @llvm.dbg.value(metadata i8 %8, metadata !14695, metadata !DIExpression()), !dbg !14697
  %9 = icmp eq i8 %8, -1, !dbg !14705
  call void @llvm.dbg.value(metadata i32 0, metadata !14694, metadata !DIExpression()), !dbg !14697
  br i1 %9, label %23, label %10, !dbg !14706

10:                                               ; preds = %0, %10
  call void @llvm.dbg.value(metadata i32* %2, metadata !14693, metadata !DIExpression(DW_OP_deref)), !dbg !14697
  %11 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %2) #20, !dbg !14707
  %12 = load i32, i32* %1, align 4, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %12, metadata !14692, metadata !DIExpression()), !dbg !14697
  %13 = load i32, i32* %2, align 4, !dbg !14710
  call void @llvm.dbg.value(metadata i32 %13, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32* %3, metadata !14694, metadata !DIExpression(DW_OP_deref)), !dbg !14697
  %14 = call i32 @hal_gpt_get_duration_count(i32 noundef %12, i32 noundef %13, i32* noundef nonnull %3) #20, !dbg !14711
  %15 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !14704
  call void @llvm.dbg.value(metadata i8 %15, metadata !14695, metadata !DIExpression()), !dbg !14697
  %16 = icmp ne i8 %15, -1, !dbg !14705
  %17 = load i32, i32* %3, align 4, !dbg !14712
  call void @llvm.dbg.value(metadata i32 %17, metadata !14694, metadata !DIExpression()), !dbg !14697
  %18 = icmp ult i32 %17, 32768, !dbg !14712
  %19 = select i1 %16, i1 %18, i1 false, !dbg !14712
  br i1 %19, label %10, label %20, !dbg !14706, !llvm.loop !14713

20:                                               ; preds = %10
  %21 = icmp ugt i32 %17, 32767, !dbg !14715
  br i1 %21, label %22, label %23, !dbg !14717

22:                                               ; preds = %20
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.wait_ready, i32 0, i32 0), i32 noundef 161, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.145, i32 0, i32 0)) #20, !dbg !14718
  br label %23, !dbg !14720

23:                                               ; preds = %0, %22, %20
  %24 = phi i8 [ %15, %22 ], [ %15, %20 ], [ -1, %0 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !14721
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !14721
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !14721
  ret i8 %24, !dbg !14722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i8 @rcvr_spi() unnamed_addr #0 !dbg !14723 {
  %1 = alloca [2 x i8], align 1
  %2 = alloca i8, align 1
  %3 = alloca %struct.hal_spi_master_send_and_receive_config_t, align 4
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %1, i32 0, i32 0, !dbg !14736
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #19, !dbg !14736
  call void @llvm.dbg.declare(metadata [2 x i8]* %1, metadata !14725, metadata !DIExpression()), !dbg !14737
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !14738
  %5 = bitcast %struct.hal_spi_master_send_and_receive_config_t* %3 to i8*, !dbg !14739
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #19, !dbg !14739
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_send_and_receive_config_t* %3, metadata !14727, metadata !DIExpression()), !dbg !14740
  %6 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %3, i32 0, i32 0, !dbg !14741
  store i8* %4, i8** %6, align 4, !dbg !14742
  %7 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %3, i32 0, i32 1, !dbg !14743
  store i32 0, i32* %7, align 4, !dbg !14744
  %8 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %3, i32 0, i32 2, !dbg !14745
  store i8* %2, i8** %8, align 4, !dbg !14746
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %3, i32 0, i32 3, !dbg !14747
  store i32 1, i32* %9, align 4, !dbg !14748
  %10 = call i32 @hal_spi_master_send_and_receive_polling(i32 noundef 0, %struct.hal_spi_master_send_and_receive_config_t* noundef nonnull %3) #20, !dbg !14749
  call void @llvm.dbg.value(metadata i32 %10, metadata !14735, metadata !DIExpression()), !dbg !14751
  %11 = icmp eq i32 %10, 0, !dbg !14752
  br i1 %11, label %13, label %12, !dbg !14753

12:                                               ; preds = %0
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.rcvr_spi, i32 0, i32 0), i32 noundef 121, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3.146, i32 0, i32 0), i32 noundef %10) #20, !dbg !14754
  br label %13, !dbg !14756

13:                                               ; preds = %12, %0
  %14 = load i8, i8* %2, align 1, !dbg !14757
  call void @llvm.dbg.value(metadata i8 %14, metadata !14726, metadata !DIExpression()), !dbg !14751
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #19, !dbg !14758
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !14758
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #19, !dbg !14758
  ret i8 %14, !dbg !14759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @power_on() local_unnamed_addr #0 !dbg !14760 {
  %1 = alloca %struct.hal_spi_master_config_t, align 4
  call void @llvm.dbg.value(metadata i32 240000, metadata !14762, metadata !DIExpression()), !dbg !14773
  %2 = bitcast %struct.hal_spi_master_config_t* %1 to i8*, !dbg !14774
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %2) #19, !dbg !14774
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_config_t* %1, metadata !14763, metadata !DIExpression()), !dbg !14775
  tail call void @spi_pad_select() #22, !dbg !14776
  %3 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 2, !dbg !14777
  store i32 1, i32* %3, align 4, !dbg !14778
  %4 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 1, !dbg !14779
  store i32 0, i32* %4, align 4, !dbg !14780
  %5 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 0, !dbg !14781
  store i32 240000, i32* %5, align 4, !dbg !14782
  %6 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 4, !dbg !14783
  store i32 1, i32* %6, align 4, !dbg !14784
  %7 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 3, !dbg !14785
  store i32 1, i32* %7, align 4, !dbg !14786
  %8 = call i32 @hal_spi_master_init(i32 noundef 0, %struct.hal_spi_master_config_t* noundef nonnull %1) #20, !dbg !14787
  call void @llvm.dbg.value(metadata i32 %8, metadata !14772, metadata !DIExpression()), !dbg !14773
  %9 = icmp eq i32 %8, 0, !dbg !14789
  br i1 %9, label %11, label %10, !dbg !14790

10:                                               ; preds = %0
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.power_on, i32 0, i32 0), i32 noundef 187, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.147, i32 0, i32 0), i32 noundef %8) #20, !dbg !14791
  br label %11, !dbg !14793

11:                                               ; preds = %10, %0
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %2) #19, !dbg !14794
  ret void, !dbg !14794
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @set_frequency(i32 noundef %0) local_unnamed_addr #0 !dbg !14795 {
  %2 = alloca %struct.hal_spi_master_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14799, metadata !DIExpression()), !dbg !14802
  %3 = bitcast %struct.hal_spi_master_config_t* %2 to i8*, !dbg !14803
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %3) #19, !dbg !14803
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_config_t* %2, metadata !14800, metadata !DIExpression()), !dbg !14804
  %4 = tail call i32 @hal_spi_master_deinit(i32 noundef 0) #20, !dbg !14805
  %5 = tail call i32 @hal_gpt_delay_ms(i32 noundef 1) #20, !dbg !14806
  %6 = load i32, i32* @spi_mosi_pin, align 4, !dbg !14807
  %7 = load i8, i8* @spi_mosi_pin_func_mosi, align 1, !dbg !14808
  %8 = tail call i32 @hal_pinmux_set_function(i32 noundef %6, i8 noundef zeroext %7) #20, !dbg !14809
  %9 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 2, !dbg !14810
  store i32 1, i32* %9, align 4, !dbg !14811
  %10 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 1, !dbg !14812
  store i32 0, i32* %10, align 4, !dbg !14813
  %11 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 0, !dbg !14814
  store i32 %0, i32* %11, align 4, !dbg !14815
  %12 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 4, !dbg !14816
  store i32 1, i32* %12, align 4, !dbg !14817
  %13 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %2, i32 0, i32 3, !dbg !14818
  store i32 1, i32* %13, align 4, !dbg !14819
  %14 = call i32 @hal_spi_master_init(i32 noundef 0, %struct.hal_spi_master_config_t* noundef nonnull %2) #20, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %14, metadata !14801, metadata !DIExpression()), !dbg !14802
  %15 = icmp eq i32 %14, 0, !dbg !14822
  br i1 %15, label %17, label %16, !dbg !14823

16:                                               ; preds = %1
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.set_frequency, i32 0, i32 0), i32 noundef 208, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef %14) #20, !dbg !14824
  br label %26, !dbg !14826

17:                                               ; preds = %1
  %18 = load i32, i32* @spi_mosi_pin, align 4, !dbg !14827
  %19 = load i1, i1* @spi_mosi_pin_func_gpio, align 1, !dbg !14828
  %20 = select i1 %19, i8 8, i8 0, !dbg !14828
  %21 = call i32 @hal_pinmux_set_function(i32 noundef %18, i8 noundef zeroext %20) #20, !dbg !14829
  %22 = load i32, i32* @spi_mosi_pin, align 4, !dbg !14830
  %23 = call i32 @hal_gpio_set_direction(i32 noundef %22, i32 noundef 1) #20, !dbg !14831
  %24 = load i32, i32* @spi_mosi_pin, align 4, !dbg !14832
  %25 = call i32 @hal_gpio_set_output(i32 noundef %24, i32 noundef 1) #20, !dbg !14833
  br label %26, !dbg !14834

26:                                               ; preds = %17, %16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %3) #19, !dbg !14835
  ret i1 %15, !dbg !14835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @power_off() local_unnamed_addr #14 !dbg !14836 {
  %1 = load i8, i8* @Drive0_Stat, align 1, !dbg !14837
  %2 = or i8 %1, 1, !dbg !14837
  store i8 %2, i8* @Drive0_Stat, align 1, !dbg !14837
  ret void, !dbg !14838
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @sd_disk_initialize(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !14839 {
  %2 = alloca [4 x i8], align 1
  %3 = alloca [20 x i8], align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !14841, metadata !DIExpression()), !dbg !14851
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 0, !dbg !14852
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14852
  call void @llvm.dbg.declare(metadata [4 x i8]* %2, metadata !14844, metadata !DIExpression()), !dbg !14853
  %8 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i32 0, i32 0, !dbg !14854
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %8) #19, !dbg !14854
  call void @llvm.dbg.declare(metadata [20 x i8]* %3, metadata !14846, metadata !DIExpression()), !dbg !14855
  %9 = bitcast i32* %4 to i8*, !dbg !14856
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !14856
  call void @llvm.dbg.value(metadata i32 0, metadata !14848, metadata !DIExpression()), !dbg !14851
  store i32 0, i32* %4, align 4, !dbg !14857
  %10 = bitcast i32* %5 to i8*, !dbg !14858
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #19, !dbg !14858
  call void @llvm.dbg.value(metadata i32 0, metadata !14849, metadata !DIExpression()), !dbg !14851
  store i32 0, i32* %5, align 4, !dbg !14859
  %11 = bitcast i32* %6 to i8*, !dbg !14860
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #19, !dbg !14860
  call void @llvm.dbg.value(metadata i32 0, metadata !14850, metadata !DIExpression()), !dbg !14851
  store i32 0, i32* %6, align 4, !dbg !14861
  %12 = icmp eq i8 %0, 0, !dbg !14862
  br i1 %12, label %13, label %121, !dbg !14864

13:                                               ; preds = %1
  %14 = load i8, i8* @Drive0_Stat, align 1, !dbg !14865
  %15 = and i8 %14, 2, !dbg !14867
  %16 = icmp eq i8 %15, 0, !dbg !14867
  br i1 %16, label %17, label %121, !dbg !14868

17:                                               ; preds = %13
  tail call void @power_on() #22, !dbg !14869
  %18 = tail call i32 @hal_gpt_delay_ms(i32 noundef 5) #20, !dbg !14870
  %19 = load i32, i32* @spi_mosi_pin, align 4, !dbg !14871
  %20 = load i1, i1* @spi_mosi_pin_func_gpio, align 1, !dbg !14872
  %21 = select i1 %20, i8 8, i8 0, !dbg !14872
  %22 = tail call i32 @hal_pinmux_set_function(i32 noundef %19, i8 noundef zeroext %21) #20, !dbg !14873
  %23 = load i32, i32* @spi_mosi_pin, align 4, !dbg !14874
  %24 = tail call i32 @hal_gpio_set_direction(i32 noundef %23, i32 noundef 1) #20, !dbg !14875
  %25 = load i32, i32* @spi_mosi_pin, align 4, !dbg !14876
  %26 = tail call i32 @hal_gpio_set_output(i32 noundef %25, i32 noundef 1) #20, !dbg !14877
  %27 = tail call i32 @hal_gpt_delay_ms(i32 noundef 5) #20, !dbg !14878
  call fastcc void @rcvr_spi_m(i8* noundef nonnull %8, i32 noundef 20) #22, !dbg !14879
  call void @llvm.dbg.value(metadata i8 0, metadata !14843, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32* %4, metadata !14848, metadata !DIExpression(DW_OP_deref)), !dbg !14851
  %28 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %4) #20, !dbg !14880
  %29 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 64, i32 noundef 0) #22, !dbg !14881
  %30 = icmp eq i8 %29, 1, !dbg !14883
  br i1 %30, label %31, label %117, !dbg !14884

31:                                               ; preds = %17
  %32 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 72, i32 noundef 426) #22, !dbg !14885
  %33 = icmp eq i8 %32, 1, !dbg !14888
  br i1 %33, label %34, label %78, !dbg !14889

34:                                               ; preds = %31, %34
  %35 = phi i32 [ %38, %34 ], [ 0, %31 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !14842, metadata !DIExpression()), !dbg !14851
  %36 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !14890
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 %35, !dbg !14895
  store i8 %36, i8* %37, align 1, !dbg !14896
  %38 = add nuw nsw i32 %35, 1, !dbg !14897
  call void @llvm.dbg.value(metadata i32 %38, metadata !14842, metadata !DIExpression()), !dbg !14851
  %39 = icmp eq i32 %38, 4, !dbg !14898
  br i1 %39, label %40, label %34, !dbg !14899, !llvm.loop !14900

40:                                               ; preds = %34
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 2, !dbg !14902
  %42 = load i8, i8* %41, align 1, !dbg !14902
  %43 = icmp eq i8 %42, 1, !dbg !14904
  %44 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 3
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, -86
  %47 = select i1 %43, i1 %46, i1 false, !dbg !14905
  br i1 %47, label %48, label %117, !dbg !14905

48:                                               ; preds = %40, %54
  %49 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 119, i32 noundef 0) #22, !dbg !14906
  %50 = icmp ult i8 %49, 2, !dbg !14910
  br i1 %50, label %51, label %54, !dbg !14911

51:                                               ; preds = %48
  %52 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 105, i32 noundef 1073741824) #22, !dbg !14912
  %53 = icmp eq i8 %52, 0, !dbg !14913
  br i1 %53, label %61, label %54, !dbg !14914

54:                                               ; preds = %51, %48
  call void @llvm.dbg.value(metadata i32* %5, metadata !14849, metadata !DIExpression(DW_OP_deref)), !dbg !14851
  %55 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %5) #20, !dbg !14915
  %56 = load i32, i32* %4, align 4, !dbg !14916
  call void @llvm.dbg.value(metadata i32 %56, metadata !14848, metadata !DIExpression()), !dbg !14851
  %57 = load i32, i32* %5, align 4, !dbg !14917
  call void @llvm.dbg.value(metadata i32 %57, metadata !14849, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32* %6, metadata !14850, metadata !DIExpression(DW_OP_deref)), !dbg !14851
  %58 = call i32 @hal_gpt_get_duration_count(i32 noundef %56, i32 noundef %57, i32* noundef nonnull %6) #20, !dbg !14918
  %59 = load i32, i32* %6, align 4, !dbg !14919
  call void @llvm.dbg.value(metadata i32 %59, metadata !14850, metadata !DIExpression()), !dbg !14851
  %60 = icmp ult i32 %59, 32768, !dbg !14920
  br i1 %60, label %48, label %117, !dbg !14921, !llvm.loop !14922

61:                                               ; preds = %51
  %62 = load i32, i32* %6, align 4, !dbg !14925
  call void @llvm.dbg.value(metadata i32 %62, metadata !14850, metadata !DIExpression()), !dbg !14851
  %63 = icmp ult i32 %62, 32768, !dbg !14927
  br i1 %63, label %64, label %117, !dbg !14928

64:                                               ; preds = %61
  %65 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 122, i32 noundef 0) #22, !dbg !14929
  %66 = icmp eq i8 %65, 0, !dbg !14930
  br i1 %66, label %67, label %117, !dbg !14931

67:                                               ; preds = %64, %67
  %68 = phi i32 [ %71, %67 ], [ 0, %64 ]
  call void @llvm.dbg.value(metadata i32 %68, metadata !14842, metadata !DIExpression()), !dbg !14851
  %69 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !14932
  %70 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 %68, !dbg !14937
  store i8 %69, i8* %70, align 1, !dbg !14938
  %71 = add nuw nsw i32 %68, 1, !dbg !14939
  call void @llvm.dbg.value(metadata i32 %71, metadata !14842, metadata !DIExpression()), !dbg !14851
  %72 = icmp eq i32 %71, 4, !dbg !14940
  br i1 %72, label %73, label %67, !dbg !14941, !llvm.loop !14942

73:                                               ; preds = %67
  %74 = load i8, i8* %7, align 1, !dbg !14944
  %75 = and i8 %74, 64, !dbg !14945
  %76 = icmp eq i8 %75, 0, !dbg !14946
  %77 = select i1 %76, i8 2, i8 6, !dbg !14946
  call void @llvm.dbg.value(metadata i8 %77, metadata !14843, metadata !DIExpression()), !dbg !14851
  br label %111, !dbg !14947

78:                                               ; preds = %31
  %79 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 119, i32 noundef 0) #22, !dbg !14948
  %80 = icmp ult i8 %79, 2, !dbg !14950
  br i1 %80, label %81, label %85, !dbg !14951

81:                                               ; preds = %78
  %82 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 105, i32 noundef 0) #22, !dbg !14952
  %83 = icmp ult i8 %82, 2, !dbg !14953
  %84 = select i1 %83, i8 2, i8 1
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi i8 [ 1, %78 ], [ %84, %81 ]
  call void @llvm.dbg.value(metadata i8 %86, metadata !14843, metadata !DIExpression()), !dbg !14851
  %87 = icmp eq i8 %86, 2
  br label %88, !dbg !14954

88:                                               ; preds = %98, %85
  br i1 %87, label %89, label %95, !dbg !14955

89:                                               ; preds = %88
  %90 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 119, i32 noundef 0) #22, !dbg !14957
  %91 = icmp ult i8 %90, 2, !dbg !14961
  br i1 %91, label %92, label %98, !dbg !14962

92:                                               ; preds = %89
  %93 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 105, i32 noundef 0) #22, !dbg !14963
  %94 = icmp eq i8 %93, 0, !dbg !14964
  br i1 %94, label %105, label %98, !dbg !14965

95:                                               ; preds = %88
  %96 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 65, i32 noundef 0) #22, !dbg !14966
  %97 = icmp eq i8 %96, 0, !dbg !14969
  br i1 %97, label %105, label %98, !dbg !14970

98:                                               ; preds = %95, %89, %92
  call void @llvm.dbg.value(metadata i32* %5, metadata !14849, metadata !DIExpression(DW_OP_deref)), !dbg !14851
  %99 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %5) #20, !dbg !14971
  %100 = load i32, i32* %4, align 4, !dbg !14972
  call void @llvm.dbg.value(metadata i32 %100, metadata !14848, metadata !DIExpression()), !dbg !14851
  %101 = load i32, i32* %5, align 4, !dbg !14973
  call void @llvm.dbg.value(metadata i32 %101, metadata !14849, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32* %6, metadata !14850, metadata !DIExpression(DW_OP_deref)), !dbg !14851
  %102 = call i32 @hal_gpt_get_duration_count(i32 noundef %100, i32 noundef %101, i32* noundef nonnull %6) #20, !dbg !14974
  %103 = load i32, i32* %6, align 4, !dbg !14975
  call void @llvm.dbg.value(metadata i32 %103, metadata !14850, metadata !DIExpression()), !dbg !14851
  %104 = icmp ult i32 %103, 32768, !dbg !14976
  br i1 %104, label %88, label %108, !dbg !14977, !llvm.loop !14978

105:                                              ; preds = %95, %92
  %106 = load i32, i32* %6, align 4, !dbg !14980
  call void @llvm.dbg.value(metadata i32 %106, metadata !14850, metadata !DIExpression()), !dbg !14851
  %107 = icmp ult i32 %106, 32768, !dbg !14982
  br i1 %107, label %117, label %108, !dbg !14983

108:                                              ; preds = %98, %105
  %109 = call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 80, i32 noundef 512) #22, !dbg !14984
  %110 = icmp eq i8 %109, 0, !dbg !14985
  br i1 %110, label %111, label %117, !dbg !14986

111:                                              ; preds = %108, %73
  %112 = phi i8 [ %77, %73 ], [ %86, %108 ], !dbg !14851
  call void @llvm.dbg.value(metadata i8 %112, metadata !14843, metadata !DIExpression()), !dbg !14851
  store i8 %112, i8* @CardType, align 1, !dbg !14987
  %113 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !14988
  %114 = load i8, i8* @Drive0_Stat, align 1, !dbg !14989
  %115 = and i8 %114, -2, !dbg !14989
  store i8 %115, i8* @Drive0_Stat, align 1, !dbg !14989
  %116 = call zeroext i1 @set_frequency(i32 noundef 20000000) #22, !dbg !14992
  br label %119, !dbg !14993

117:                                              ; preds = %54, %105, %108, %64, %61, %40, %17
  call void @llvm.dbg.value(metadata i8 %112, metadata !14843, metadata !DIExpression()), !dbg !14851
  store i8 0, i8* @CardType, align 1, !dbg !14987
  %118 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !14988
  call void @power_off() #22, !dbg !14994
  br label %119

119:                                              ; preds = %117, %111
  %120 = load i8, i8* @Drive0_Stat, align 1, !dbg !14996
  br label %121, !dbg !14997

121:                                              ; preds = %13, %1, %119
  %122 = phi i8 [ %120, %119 ], [ 1, %1 ], [ %14, %13 ], !dbg !14851
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #19, !dbg !14998
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #19, !dbg !14998
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !14998
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %8) #19, !dbg !14998
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !14998
  ret i8 %122, !dbg !14998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rcvr_spi_m(i8* noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !14999 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.hal_spi_master_send_and_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15001, metadata !DIExpression()), !dbg !15006
  call void @llvm.dbg.value(metadata i32 %1, metadata !15002, metadata !DIExpression()), !dbg !15006
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !15007
  %5 = bitcast %struct.hal_spi_master_send_and_receive_config_t* %4 to i8*, !dbg !15008
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #19, !dbg !15008
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_send_and_receive_config_t* %4, metadata !15004, metadata !DIExpression()), !dbg !15009
  %6 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 0, !dbg !15010
  store i8* %3, i8** %6, align 4, !dbg !15011
  %7 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 1, !dbg !15012
  store i32 0, i32* %7, align 4, !dbg !15013
  %8 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 2, !dbg !15014
  store i8* %0, i8** %8, align 4, !dbg !15015
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 3, !dbg !15016
  store i32 %1, i32* %9, align 4, !dbg !15017
  %10 = call i32 @hal_spi_master_send_and_receive_polling(i32 noundef 0, %struct.hal_spi_master_send_and_receive_config_t* noundef nonnull %4) #20, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %10, metadata !15005, metadata !DIExpression()), !dbg !15006
  %11 = icmp eq i32 %10, 0, !dbg !15020
  br i1 %11, label %13, label %12, !dbg !15021

12:                                               ; preds = %2
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.rcvr_spi_m, i32 0, i32 0), i32 noundef 140, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4.153, i32 0, i32 0), i32 noundef %10) #20, !dbg !15022
  br label %13, !dbg !15024

13:                                               ; preds = %12, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #19, !dbg !15025
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !15025
  ret void, !dbg !15025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i8 @send_cmd(i8 noundef zeroext %0, i32 noundef %1) unnamed_addr #0 !dbg !15026 {
  %3 = alloca [6 x i8], align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !15030, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata i32 %1, metadata !15031, metadata !DIExpression()), !dbg !15039
  %7 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0, !dbg !15040
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %7) #19, !dbg !15040
  call void @llvm.dbg.declare(metadata [6 x i8]* %3, metadata !15033, metadata !DIExpression()), !dbg !15041
  %8 = bitcast i32* %4 to i8*, !dbg !15042
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !15042
  call void @llvm.dbg.value(metadata i32 0, metadata !15035, metadata !DIExpression()), !dbg !15039
  store i32 0, i32* %4, align 4, !dbg !15043
  %9 = bitcast i32* %5 to i8*, !dbg !15044
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !15044
  call void @llvm.dbg.value(metadata i32 0, metadata !15036, metadata !DIExpression()), !dbg !15039
  store i32 0, i32* %5, align 4, !dbg !15045
  %10 = bitcast i32* %6 to i8*, !dbg !15046
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #19, !dbg !15046
  call void @llvm.dbg.value(metadata i32 0, metadata !15037, metadata !DIExpression()), !dbg !15039
  store i32 0, i32* %6, align 4, !dbg !15047
  %11 = tail call zeroext i8 @wait_ready() #22, !dbg !15048
  %12 = icmp eq i8 %11, -1, !dbg !15050
  br i1 %12, label %13, label %59, !dbg !15051

13:                                               ; preds = %2
  store i8 %0, i8* %7, align 1, !dbg !15052
  %14 = lshr i32 %1, 24, !dbg !15053
  %15 = trunc i32 %14 to i8, !dbg !15054
  %16 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 1, !dbg !15055
  store i8 %15, i8* %16, align 1, !dbg !15056
  %17 = lshr i32 %1, 16, !dbg !15057
  %18 = trunc i32 %17 to i8, !dbg !15058
  %19 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 2, !dbg !15059
  store i8 %18, i8* %19, align 1, !dbg !15060
  %20 = lshr i32 %1, 8, !dbg !15061
  %21 = trunc i32 %20 to i8, !dbg !15062
  %22 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 3, !dbg !15063
  store i8 %21, i8* %22, align 1, !dbg !15064
  %23 = trunc i32 %1 to i8, !dbg !15065
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 4, !dbg !15066
  store i8 %23, i8* %24, align 1, !dbg !15067
  %25 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 5, !dbg !15068
  %26 = icmp eq i8 %0, 64, !dbg !15069
  %27 = select i1 %26, i8 -107, i8 0, !dbg !15071
  %28 = icmp eq i8 %0, 72, !dbg !15072
  %29 = select i1 %28, i8 -121, i8 %27, !dbg !15074
  store i8 %29, i8* %25, align 1, !dbg !15039
  %30 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15075
  %31 = load i8, i8* @spi_mosi_pin_func_mosi, align 1, !dbg !15076
  %32 = tail call i32 @hal_pinmux_set_function(i32 noundef %30, i8 noundef zeroext %31) #20, !dbg !15077
  %33 = call i32 @hal_spi_master_send_polling(i32 noundef 0, i8* noundef nonnull %7, i32 noundef 6) #20, !dbg !15078
  call void @llvm.dbg.value(metadata i32 %33, metadata !15038, metadata !DIExpression()), !dbg !15039
  %34 = icmp eq i32 %33, 0, !dbg !15080
  br i1 %34, label %36, label %35, !dbg !15081

35:                                               ; preds = %13
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.send_cmd, i32 0, i32 0), i32 noundef 265, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5.151, i32 0, i32 0), i32 noundef %33) #20, !dbg !15082
  br label %36, !dbg !15084

36:                                               ; preds = %35, %13
  %37 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15085
  %38 = load i1, i1* @spi_mosi_pin_func_gpio, align 1, !dbg !15086
  %39 = select i1 %38, i8 8, i8 0, !dbg !15086
  %40 = call i32 @hal_pinmux_set_function(i32 noundef %37, i8 noundef zeroext %39) #20, !dbg !15087
  %41 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15088
  %42 = call i32 @hal_gpio_set_direction(i32 noundef %41, i32 noundef 1) #20, !dbg !15089
  %43 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15090
  %44 = call i32 @hal_gpio_set_output(i32 noundef %43, i32 noundef 1) #20, !dbg !15091
  call void @llvm.dbg.value(metadata i32* %4, metadata !15035, metadata !DIExpression(DW_OP_deref)), !dbg !15039
  %45 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %4) #20, !dbg !15092
  br label %46, !dbg !15093

46:                                               ; preds = %46, %36
  %47 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15094
  call void @llvm.dbg.value(metadata i8 %47, metadata !15032, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata i32* %5, metadata !15036, metadata !DIExpression(DW_OP_deref)), !dbg !15039
  %48 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %5) #20, !dbg !15096
  %49 = load i32, i32* %4, align 4, !dbg !15097
  call void @llvm.dbg.value(metadata i32 %49, metadata !15035, metadata !DIExpression()), !dbg !15039
  %50 = load i32, i32* %5, align 4, !dbg !15098
  call void @llvm.dbg.value(metadata i32 %50, metadata !15036, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata i32* %6, metadata !15037, metadata !DIExpression(DW_OP_deref)), !dbg !15039
  %51 = call i32 @hal_gpt_get_duration_count(i32 noundef %49, i32 noundef %50, i32* noundef nonnull %6) #20, !dbg !15099
  %52 = icmp slt i8 %47, 0, !dbg !15100
  %53 = load i32, i32* %6, align 4, !dbg !15101
  call void @llvm.dbg.value(metadata i32 %53, metadata !15037, metadata !DIExpression()), !dbg !15039
  %54 = icmp ult i32 %53, 3276, !dbg !15101
  %55 = select i1 %52, i1 %54, i1 false, !dbg !15101
  br i1 %55, label %46, label %56, !dbg !15102, !llvm.loop !15103

56:                                               ; preds = %46
  %57 = icmp ugt i32 %53, 3275, !dbg !15105
  br i1 %57, label %58, label %59, !dbg !15107

58:                                               ; preds = %56
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.send_cmd, i32 0, i32 0), i32 noundef 282, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.152, i32 0, i32 0)) #20, !dbg !15108
  br label %59, !dbg !15110

59:                                               ; preds = %56, %58, %2
  %60 = phi i8 [ -1, %2 ], [ %47, %58 ], [ %47, %56 ], !dbg !15039
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #19, !dbg !15111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !15111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !15111
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %7) #19, !dbg !15111
  ret i8 %60, !dbg !15111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_disk_read(i8 noundef zeroext %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !15112 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i8* %1, metadata !15115, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 %2, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 %3, metadata !15117, metadata !DIExpression()), !dbg !15118
  %5 = icmp eq i8 %0, 0, !dbg !15119
  %6 = icmp ne i32 %3, 0
  %7 = and i1 %5, %6, !dbg !15121
  br i1 %7, label %8, label %46, !dbg !15121

8:                                                ; preds = %4
  %9 = load i8, i8* @Drive0_Stat, align 1, !dbg !15122
  %10 = and i8 %9, 1, !dbg !15124
  %11 = icmp eq i8 %10, 0, !dbg !15124
  br i1 %11, label %12, label %46, !dbg !15125

12:                                               ; preds = %8
  %13 = load i8, i8* @CardType, align 1, !dbg !15126
  %14 = and i8 %13, 4, !dbg !15128
  %15 = icmp eq i8 %14, 0, !dbg !15128
  %16 = shl i32 %2, 9
  %17 = select i1 %15, i32 %16, i32 %2, !dbg !15129
  call void @llvm.dbg.value(metadata i32 %17, metadata !15116, metadata !DIExpression()), !dbg !15118
  %18 = icmp eq i32 %3, 1, !dbg !15130
  br i1 %18, label %19, label %26, !dbg !15132

19:                                               ; preds = %12
  %20 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 81, i32 noundef %17) #22, !dbg !15133
  %21 = icmp eq i8 %20, 0, !dbg !15136
  br i1 %21, label %22, label %41, !dbg !15137

22:                                               ; preds = %19
  %23 = tail call fastcc zeroext i8 @rcvr_datablock(i8* noundef %1, i32 noundef 512) #22, !dbg !15138
  %24 = icmp eq i8 %23, 0, !dbg !15138
  %25 = zext i1 %24 to i32, !dbg !15139
  br label %41, !dbg !15139

26:                                               ; preds = %12
  %27 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 82, i32 noundef %17) #22, !dbg !15140
  %28 = icmp eq i8 %27, 0, !dbg !15143
  br i1 %28, label %29, label %41, !dbg !15144

29:                                               ; preds = %26, %34
  %30 = phi i8* [ %35, %34 ], [ %1, %26 ]
  %31 = phi i32 [ %36, %34 ], [ %3, %26 ]
  call void @llvm.dbg.value(metadata i32 %31, metadata !15117, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i8* %30, metadata !15115, metadata !DIExpression()), !dbg !15118
  %32 = tail call fastcc zeroext i8 @rcvr_datablock(i8* noundef %30, i32 noundef 512) #22, !dbg !15145
  %33 = icmp eq i8 %32, 0, !dbg !15145
  br i1 %33, label %38, label %34, !dbg !15149

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, i8* %30, i32 512, !dbg !15150
  call void @llvm.dbg.value(metadata i8* %35, metadata !15115, metadata !DIExpression()), !dbg !15118
  %36 = add i32 %31, -1, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %36, metadata !15117, metadata !DIExpression()), !dbg !15118
  %37 = icmp eq i32 %36, 0, !dbg !15152
  br i1 %37, label %38, label %29, !dbg !15152, !llvm.loop !15153

38:                                               ; preds = %29, %34
  %39 = phi i32 [ 0, %34 ], [ %31, %29 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !15117, metadata !DIExpression()), !dbg !15118
  %40 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 76, i32 noundef 0) #22, !dbg !15156
  br label %41, !dbg !15157

41:                                               ; preds = %22, %26, %38, %19
  %42 = phi i32 [ 1, %19 ], [ %39, %38 ], [ 1, %26 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata i32 %42, metadata !15117, metadata !DIExpression()), !dbg !15118
  %43 = tail call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15158
  %44 = icmp ne i32 %42, 0, !dbg !15159
  %45 = zext i1 %44 to i32, !dbg !15159
  br label %46, !dbg !15160

46:                                               ; preds = %8, %4, %41
  %47 = phi i32 [ %45, %41 ], [ 4, %4 ], [ 3, %8 ], !dbg !15118
  ret i32 %47, !dbg !15161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i8 @rcvr_datablock(i8* noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !15162 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15166, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 %1, metadata !15167, metadata !DIExpression()), !dbg !15172
  %6 = bitcast i32* %3 to i8*, !dbg !15173
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !15173
  call void @llvm.dbg.value(metadata i32 0, metadata !15169, metadata !DIExpression()), !dbg !15172
  store i32 0, i32* %3, align 4, !dbg !15174
  %7 = bitcast i32* %4 to i8*, !dbg !15175
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !15175
  call void @llvm.dbg.value(metadata i32 0, metadata !15170, metadata !DIExpression()), !dbg !15172
  store i32 0, i32* %4, align 4, !dbg !15176
  %8 = bitcast i32* %5 to i8*, !dbg !15177
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !15177
  call void @llvm.dbg.value(metadata i32 0, metadata !15171, metadata !DIExpression()), !dbg !15172
  store i32 0, i32* %5, align 4, !dbg !15178
  call void @llvm.dbg.value(metadata i32* %3, metadata !15169, metadata !DIExpression(DW_OP_deref)), !dbg !15172
  %9 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %3) #20, !dbg !15179
  br label %10, !dbg !15180

10:                                               ; preds = %10, %2
  %11 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15181
  call void @llvm.dbg.value(metadata i8 %11, metadata !15168, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32* %4, metadata !15170, metadata !DIExpression(DW_OP_deref)), !dbg !15172
  %12 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %4) #20, !dbg !15183
  %13 = load i32, i32* %3, align 4, !dbg !15184
  call void @llvm.dbg.value(metadata i32 %13, metadata !15169, metadata !DIExpression()), !dbg !15172
  %14 = load i32, i32* %4, align 4, !dbg !15185
  call void @llvm.dbg.value(metadata i32 %14, metadata !15170, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32* %5, metadata !15171, metadata !DIExpression(DW_OP_deref)), !dbg !15172
  %15 = call i32 @hal_gpt_get_duration_count(i32 noundef %13, i32 noundef %14, i32* noundef nonnull %5) #20, !dbg !15186
  %16 = icmp eq i8 %11, -1, !dbg !15187
  %17 = load i32, i32* %5, align 4, !dbg !15188
  call void @llvm.dbg.value(metadata i32 %17, metadata !15171, metadata !DIExpression()), !dbg !15172
  %18 = icmp ult i32 %17, 3276, !dbg !15188
  %19 = select i1 %16, i1 %18, i1 false, !dbg !15188
  br i1 %19, label %10, label %20, !dbg !15189, !llvm.loop !15190

20:                                               ; preds = %10
  %21 = zext i8 %11 to i32, !dbg !15192
  %22 = icmp ugt i32 %17, 3275, !dbg !15193
  br i1 %22, label %23, label %24, !dbg !15195

23:                                               ; preds = %20
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.rcvr_datablock, i32 0, i32 0), i32 noundef 402, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.156, i32 0, i32 0)) #20, !dbg !15196
  br label %24, !dbg !15198

24:                                               ; preds = %23, %20
  %25 = icmp eq i8 %11, -2, !dbg !15199
  br i1 %25, label %27, label %26, !dbg !15201

26:                                               ; preds = %24
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.rcvr_datablock, i32 0, i32 0), i32 noundef 406, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.157, i32 0, i32 0), i32 noundef %21) #20, !dbg !15202
  br label %30, !dbg !15204

27:                                               ; preds = %24
  call fastcc void @rcvr_spi_m(i8* noundef %0, i32 noundef %1) #22, !dbg !15205
  %28 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15206
  %29 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15207
  br label %30, !dbg !15208

30:                                               ; preds = %27, %26
  %31 = phi i8 [ 0, %26 ], [ 1, %27 ], !dbg !15172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !15209
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !15209
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !15209
  ret i8 %31, !dbg !15209
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_disk_write(i8 noundef zeroext %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !15210 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !15212, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i8* %1, metadata !15213, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 %2, metadata !15214, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 %3, metadata !15215, metadata !DIExpression()), !dbg !15216
  %5 = icmp eq i8 %0, 0, !dbg !15217
  %6 = icmp ne i32 %3, 0
  %7 = and i1 %5, %6, !dbg !15219
  br i1 %7, label %8, label %56, !dbg !15219

8:                                                ; preds = %4
  %9 = load i8, i8* @Drive0_Stat, align 1, !dbg !15220
  %10 = zext i8 %9 to i32, !dbg !15220
  %11 = and i32 %10, 1, !dbg !15222
  %12 = icmp eq i32 %11, 0, !dbg !15222
  br i1 %12, label %13, label %56, !dbg !15223

13:                                               ; preds = %8
  %14 = and i32 %10, 4, !dbg !15224
  %15 = icmp eq i32 %14, 0, !dbg !15224
  br i1 %15, label %16, label %56, !dbg !15226

16:                                               ; preds = %13
  %17 = load i8, i8* @CardType, align 1, !dbg !15227
  %18 = and i8 %17, 4, !dbg !15229
  %19 = icmp eq i8 %18, 0, !dbg !15229
  %20 = shl i32 %2, 9
  %21 = select i1 %19, i32 %20, i32 %2, !dbg !15230
  call void @llvm.dbg.value(metadata i32 %21, metadata !15214, metadata !DIExpression()), !dbg !15216
  %22 = icmp eq i32 %3, 1, !dbg !15231
  br i1 %22, label %23, label %30, !dbg !15233

23:                                               ; preds = %16
  %24 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 88, i32 noundef %21) #22, !dbg !15234
  %25 = icmp eq i8 %24, 0, !dbg !15237
  br i1 %25, label %26, label %51, !dbg !15238

26:                                               ; preds = %23
  %27 = tail call fastcc zeroext i1 @xmit_datablock(i8* noundef %1, i8 noundef zeroext -2) #22, !dbg !15239
  %28 = xor i1 %27, true, !dbg !15240
  %29 = zext i1 %28 to i32, !dbg !15240
  br label %51, !dbg !15240

30:                                               ; preds = %16
  %31 = and i8 %17, 2, !dbg !15241
  %32 = icmp eq i8 %31, 0, !dbg !15241
  br i1 %32, label %36, label %33, !dbg !15244

33:                                               ; preds = %30
  %34 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 119, i32 noundef 0) #22, !dbg !15245
  %35 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 87, i32 noundef %3) #22, !dbg !15247
  br label %36, !dbg !15248

36:                                               ; preds = %33, %30
  %37 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 89, i32 noundef %21) #22, !dbg !15249
  %38 = icmp eq i8 %37, 0, !dbg !15251
  br i1 %38, label %39, label %51, !dbg !15252

39:                                               ; preds = %36, %43
  %40 = phi i8* [ %44, %43 ], [ %1, %36 ]
  %41 = phi i32 [ %45, %43 ], [ %3, %36 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !15215, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i8* %40, metadata !15213, metadata !DIExpression()), !dbg !15216
  %42 = tail call fastcc zeroext i1 @xmit_datablock(i8* noundef %40, i8 noundef zeroext -4) #22, !dbg !15253
  br i1 %42, label %43, label %47, !dbg !15257

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %40, i32 512, !dbg !15258
  call void @llvm.dbg.value(metadata i8* %44, metadata !15213, metadata !DIExpression()), !dbg !15216
  %45 = add i32 %41, -1, !dbg !15259
  call void @llvm.dbg.value(metadata i32 %45, metadata !15215, metadata !DIExpression()), !dbg !15216
  %46 = icmp eq i32 %45, 0, !dbg !15260
  br i1 %46, label %47, label %39, !dbg !15260, !llvm.loop !15261

47:                                               ; preds = %39, %43
  %48 = phi i32 [ 0, %43 ], [ %41, %39 ]
  call void @llvm.dbg.value(metadata i32 %48, metadata !15215, metadata !DIExpression()), !dbg !15216
  %49 = tail call fastcc zeroext i1 @xmit_datablock(i8* noundef null, i8 noundef zeroext -3) #22, !dbg !15264
  %50 = select i1 %49, i32 %48, i32 1, !dbg !15266
  br label %51, !dbg !15266

51:                                               ; preds = %47, %26, %36, %23
  %52 = phi i32 [ 1, %23 ], [ 1, %36 ], [ %29, %26 ], [ %50, %47 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !15215, metadata !DIExpression()), !dbg !15216
  %53 = tail call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15267
  %54 = icmp ne i32 %52, 0, !dbg !15268
  %55 = zext i1 %54 to i32, !dbg !15268
  br label %56, !dbg !15269

56:                                               ; preds = %13, %8, %4, %51
  %57 = phi i32 [ %55, %51 ], [ 4, %4 ], [ 3, %8 ], [ 2, %13 ], !dbg !15216
  ret i32 %57, !dbg !15270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @xmit_datablock(i8* noundef %0, i8 noundef zeroext %1) unnamed_addr #0 !dbg !15271 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15275, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i8 %1, metadata !15276, metadata !DIExpression()), !dbg !15278
  %3 = tail call zeroext i8 @wait_ready() #22, !dbg !15279
  %4 = icmp eq i8 %3, -1, !dbg !15281
  br i1 %4, label %5, label %12, !dbg !15282

5:                                                ; preds = %2
  tail call fastcc void @xmit_spi(i8 noundef zeroext %1) #22, !dbg !15283
  %6 = icmp eq i8 %1, -3, !dbg !15284
  br i1 %6, label %11, label %7, !dbg !15286

7:                                                ; preds = %5
  tail call fastcc void @xmit_spi_m(i8* noundef %0) #22, !dbg !15287
  tail call fastcc void @xmit_spi(i8 noundef zeroext -1) #22, !dbg !15289
  tail call fastcc void @xmit_spi(i8 noundef zeroext -1) #22, !dbg !15290
  %8 = tail call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15291
  call void @llvm.dbg.value(metadata i8 %8, metadata !15277, metadata !DIExpression()), !dbg !15278
  %9 = and i8 %8, 31, !dbg !15292
  %10 = icmp eq i8 %9, 5, !dbg !15294
  br i1 %10, label %11, label %12, !dbg !15295

11:                                               ; preds = %7, %5
  br label %12, !dbg !15296

12:                                               ; preds = %7, %2, %11
  %13 = phi i1 [ true, %11 ], [ false, %2 ], [ false, %7 ], !dbg !15278
  ret i1 %13, !dbg !15297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @xmit_spi(i8 noundef zeroext %0) unnamed_addr #0 !dbg !15298 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !15302, metadata !DIExpression()), !dbg !15305
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !15306
  call void @llvm.dbg.value(metadata i8 %0, metadata !15303, metadata !DIExpression()), !dbg !15305
  store i8 %0, i8* %2, align 1, !dbg !15307
  %3 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15308
  %4 = load i8, i8* @spi_mosi_pin_func_mosi, align 1, !dbg !15309
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef %3, i8 noundef zeroext %4) #20, !dbg !15310
  call void @llvm.dbg.value(metadata i8* %2, metadata !15303, metadata !DIExpression(DW_OP_deref)), !dbg !15305
  %6 = call i32 @hal_spi_master_send_polling(i32 noundef 0, i8* noundef nonnull %2, i32 noundef 1) #20, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %6, metadata !15304, metadata !DIExpression()), !dbg !15305
  %7 = icmp eq i32 %6, 0, !dbg !15313
  br i1 %7, label %9, label %8, !dbg !15314

8:                                                ; preds = %1
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xmit_spi, i32 0, i32 0), i32 noundef 85, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5.151, i32 0, i32 0), i32 noundef %6) #20, !dbg !15315
  br label %9, !dbg !15317

9:                                                ; preds = %8, %1
  %10 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15318
  %11 = load i1, i1* @spi_mosi_pin_func_gpio, align 1, !dbg !15319
  %12 = select i1 %11, i8 8, i8 0, !dbg !15319
  %13 = call i32 @hal_pinmux_set_function(i32 noundef %10, i8 noundef zeroext %12) #20, !dbg !15320
  %14 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15321
  %15 = call i32 @hal_gpio_set_direction(i32 noundef %14, i32 noundef 1) #20, !dbg !15322
  %16 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15323
  %17 = call i32 @hal_gpio_set_output(i32 noundef %16, i32 noundef 1) #20, !dbg !15324
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !15325
  ret void, !dbg !15325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @xmit_spi_m(i8* noundef %0) unnamed_addr #0 !dbg !15326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15330, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 512, metadata !15331, metadata !DIExpression()), !dbg !15333
  %2 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15334
  %3 = load i8, i8* @spi_mosi_pin_func_mosi, align 1, !dbg !15335
  %4 = tail call i32 @hal_pinmux_set_function(i32 noundef %2, i8 noundef zeroext %3) #20, !dbg !15336
  %5 = tail call i32 @hal_spi_master_send_polling(i32 noundef 0, i8* noundef %0, i32 noundef 512) #20, !dbg !15337
  call void @llvm.dbg.value(metadata i32 %5, metadata !15332, metadata !DIExpression()), !dbg !15333
  %6 = icmp eq i32 %5, 0, !dbg !15339
  br i1 %6, label %8, label %7, !dbg !15340

7:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.xmit_spi_m, i32 0, i32 0), i32 noundef 100, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.160, i32 0, i32 0), i32 noundef %5) #20, !dbg !15341
  br label %8, !dbg !15343

8:                                                ; preds = %7, %1
  %9 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15344
  %10 = load i1, i1* @spi_mosi_pin_func_gpio, align 1, !dbg !15345
  %11 = select i1 %10, i8 8, i8 0, !dbg !15345
  %12 = tail call i32 @hal_pinmux_set_function(i32 noundef %9, i8 noundef zeroext %11) #20, !dbg !15346
  %13 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15347
  %14 = tail call i32 @hal_gpio_set_direction(i32 noundef %13, i32 noundef 1) #20, !dbg !15348
  %15 = load i32, i32* @spi_mosi_pin, align 4, !dbg !15349
  %16 = tail call i32 @hal_gpio_set_output(i32 noundef %15, i32 noundef 1) #20, !dbg !15350
  ret void, !dbg !15351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_disk_ioctl(i8 noundef zeroext %0, i8 noundef zeroext %1, i8* noundef %2) local_unnamed_addr #0 !dbg !15352 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !15354, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i8 %1, metadata !15355, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i8* %2, metadata !15356, metadata !DIExpression()), !dbg !15363
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !15364
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #19, !dbg !15364
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !15359, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i8* %2, metadata !15361, metadata !DIExpression()), !dbg !15363
  %6 = icmp eq i8 %0, 0, !dbg !15366
  br i1 %6, label %7, label %110, !dbg !15368

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 1, metadata !15357, metadata !DIExpression()), !dbg !15363
  %8 = icmp eq i8 %1, 5, !dbg !15369
  br i1 %8, label %9, label %13, !dbg !15371

9:                                                ; preds = %7
  %10 = load i8, i8* %2, align 1, !dbg !15372
  switch i8 %10, label %12 [
    i8 0, label %110
    i8 1, label %11
    i8 2, label %110
  ], !dbg !15374

11:                                               ; preds = %9
  tail call void @power_on() #22, !dbg !15375
  call void @llvm.dbg.value(metadata i32 0, metadata !15357, metadata !DIExpression()), !dbg !15363
  br label %110, !dbg !15377

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !15357, metadata !DIExpression()), !dbg !15363
  br label %110, !dbg !15378

13:                                               ; preds = %7
  %14 = load i8, i8* @Drive0_Stat, align 1, !dbg !15379
  %15 = and i8 %14, 1, !dbg !15382
  %16 = icmp eq i8 %15, 0, !dbg !15382
  br i1 %16, label %17, label %110, !dbg !15383

17:                                               ; preds = %13
  switch i8 %1, label %107 [
    i8 1, label %18
    i8 2, label %74
    i8 0, label %76
    i8 11, label %80
    i8 12, label %87
    i8 13, label %94
    i8 10, label %104
  ], !dbg !15384

18:                                               ; preds = %17
  %19 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 73, i32 noundef 0) #22, !dbg !15385
  %20 = icmp eq i8 %19, 0, !dbg !15388
  br i1 %20, label %21, label %107, !dbg !15389

21:                                               ; preds = %18
  %22 = call fastcc zeroext i8 @rcvr_datablock(i8* noundef nonnull %5, i32 noundef 16) #22, !dbg !15390
  %23 = icmp eq i8 %22, 0, !dbg !15390
  br i1 %23, label %107, label %24, !dbg !15391

24:                                               ; preds = %21
  %25 = load i8, i8* %5, align 1, !dbg !15392
  %26 = and i8 %25, -64, !dbg !15395
  %27 = icmp eq i8 %26, 64, !dbg !15395
  br i1 %27, label %28, label %41, !dbg !15396

28:                                               ; preds = %24
  %29 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 9, !dbg !15397
  %30 = load i8, i8* %29, align 1, !dbg !15397
  %31 = zext i8 %30 to i32, !dbg !15397
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 8, !dbg !15399
  %33 = load i8, i8* %32, align 1, !dbg !15399
  %34 = zext i8 %33 to i32, !dbg !15400
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i32 %31), metadata !15362, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !15363
  %35 = shl nuw nsw i32 %34, 18, !dbg !15401
  %36 = shl nuw nsw i32 %31, 10, !dbg !15401
  %37 = or i32 %35, %36, !dbg !15401
  %38 = add nuw nsw i32 %37, 1024, !dbg !15401
  %39 = and i32 %38, 67107840, !dbg !15401
  %40 = bitcast i8* %2 to i32*, !dbg !15402
  store i32 %39, i32* %40, align 4, !dbg !15403
  br label %107, !dbg !15404

41:                                               ; preds = %24
  %42 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 5, !dbg !15405
  %43 = load i8, i8* %42, align 1, !dbg !15405
  %44 = and i8 %43, 15, !dbg !15407
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 10, !dbg !15408
  %46 = load i8, i8* %45, align 1, !dbg !15408
  %47 = lshr i8 %46, 7, !dbg !15409
  %48 = add nuw nsw i8 %47, %44, !dbg !15410
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 9, !dbg !15411
  %50 = load i8, i8* %49, align 1, !dbg !15411
  %51 = shl i8 %50, 1, !dbg !15412
  %52 = and i8 %51, 6, !dbg !15412
  %53 = add nuw nsw i8 %48, %52, !dbg !15413
  call void @llvm.dbg.value(metadata i8 %53, metadata !15358, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !15363
  %54 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 8, !dbg !15414
  %55 = load i8, i8* %54, align 1, !dbg !15414
  %56 = lshr i8 %55, 6, !dbg !15415
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 7, !dbg !15416
  %58 = load i8, i8* %57, align 1, !dbg !15416
  %59 = zext i8 %58 to i32, !dbg !15417
  %60 = shl nuw nsw i32 %59, 2, !dbg !15418
  %61 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 6, !dbg !15419
  %62 = load i8, i8* %61, align 1, !dbg !15419
  %63 = and i8 %62, 3, !dbg !15420
  %64 = zext i8 %63 to i32, !dbg !15421
  %65 = shl nuw nsw i32 %64, 10, !dbg !15422
  %66 = add nuw nsw i8 %56, 1, !dbg !15423
  %67 = zext i8 %66 to i32, !dbg !15423
  %68 = add nuw nsw i32 %60, %67, !dbg !15424
  %69 = add nuw nsw i32 %68, %65, !dbg !15425
  call void @llvm.dbg.value(metadata i32 %69, metadata !15362, metadata !DIExpression()), !dbg !15363
  %70 = zext i8 %53 to i32, !dbg !15426
  %71 = add nsw i32 %70, -7, !dbg !15426
  %72 = shl nuw nsw i32 %69, %71, !dbg !15427
  %73 = bitcast i8* %2 to i32*, !dbg !15428
  store i32 %72, i32* %73, align 4, !dbg !15429
  br label %107

74:                                               ; preds = %17
  %75 = bitcast i8* %2 to i16*, !dbg !15430
  store i16 512, i16* %75, align 2, !dbg !15431
  call void @llvm.dbg.value(metadata i32 0, metadata !15357, metadata !DIExpression()), !dbg !15363
  br label %107, !dbg !15432

76:                                               ; preds = %17
  %77 = tail call zeroext i8 @wait_ready() #22, !dbg !15433
  %78 = icmp ne i8 %77, -1, !dbg !15435
  %79 = zext i1 %78 to i32, !dbg !15436
  br label %107, !dbg !15436

80:                                               ; preds = %17
  %81 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 73, i32 noundef 0) #22, !dbg !15437
  %82 = icmp eq i8 %81, 0, !dbg !15439
  br i1 %82, label %83, label %107, !dbg !15440

83:                                               ; preds = %80
  %84 = tail call fastcc zeroext i8 @rcvr_datablock(i8* noundef %2, i32 noundef 16) #22, !dbg !15441
  %85 = icmp eq i8 %84, 0, !dbg !15441
  %86 = zext i1 %85 to i32, !dbg !15442
  br label %107, !dbg !15442

87:                                               ; preds = %17
  %88 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 74, i32 noundef 0) #22, !dbg !15443
  %89 = icmp eq i8 %88, 0, !dbg !15445
  br i1 %89, label %90, label %107, !dbg !15446

90:                                               ; preds = %87
  %91 = tail call fastcc zeroext i8 @rcvr_datablock(i8* noundef %2, i32 noundef 16) #22, !dbg !15447
  %92 = icmp eq i8 %91, 0, !dbg !15447
  %93 = zext i1 %92 to i32, !dbg !15448
  br label %107, !dbg !15448

94:                                               ; preds = %17
  %95 = tail call fastcc zeroext i8 @send_cmd(i8 noundef zeroext 122, i32 noundef 0) #22, !dbg !15449
  %96 = icmp eq i8 %95, 0, !dbg !15451
  br i1 %96, label %97, label %104, !dbg !15452

97:                                               ; preds = %94, %97
  %98 = phi i8* [ %101, %97 ], [ %2, %94 ]
  %99 = phi i8 [ %102, %97 ], [ 0, %94 ]
  call void @llvm.dbg.value(metadata i8* %98, metadata !15361, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i8 %99, metadata !15358, metadata !DIExpression()), !dbg !15363
  %100 = tail call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15453
  %101 = getelementptr inbounds i8, i8* %98, i32 1, !dbg !15458
  call void @llvm.dbg.value(metadata i8* %101, metadata !15361, metadata !DIExpression()), !dbg !15363
  store i8 %100, i8* %98, align 1, !dbg !15459
  %102 = add nuw nsw i8 %99, 1, !dbg !15460
  call void @llvm.dbg.value(metadata i8 %102, metadata !15358, metadata !DIExpression()), !dbg !15363
  %103 = icmp ult i8 %99, 3, !dbg !15461
  br i1 %103, label %97, label %104, !dbg !15462, !llvm.loop !15463

104:                                              ; preds = %97, %94, %17
  %105 = phi i8* [ %2, %17 ], [ %2, %94 ], [ %101, %97 ], !dbg !15465
  call void @llvm.dbg.value(metadata i8* %105, metadata !15361, metadata !DIExpression()), !dbg !15363
  %106 = load i8, i8* @CardType, align 1, !dbg !15466
  store i8 %106, i8* %105, align 1, !dbg !15467
  call void @llvm.dbg.value(metadata i32 0, metadata !15357, metadata !DIExpression()), !dbg !15363
  br label %107, !dbg !15468

107:                                              ; preds = %90, %83, %76, %17, %28, %41, %87, %80, %18, %21, %104, %74
  %108 = phi i32 [ 0, %104 ], [ 1, %87 ], [ 1, %80 ], [ 0, %74 ], [ 1, %21 ], [ 1, %18 ], [ 0, %41 ], [ 0, %28 ], [ %79, %76 ], [ %86, %83 ], [ %93, %90 ], [ 4, %17 ], !dbg !15363
  call void @llvm.dbg.value(metadata i32 %108, metadata !15357, metadata !DIExpression()), !dbg !15363
  %109 = call fastcc zeroext i8 @rcvr_spi() #22, !dbg !15469
  br label %110

110:                                              ; preds = %107, %12, %11, %9, %9, %13, %3
  %111 = phi i32 [ 4, %3 ], [ 3, %13 ], [ 4, %12 ], [ 0, %11 ], [ %108, %107 ], [ 0, %9 ], [ 0, %9 ], !dbg !15363
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #19, !dbg !15470
  ret i32 %111, !dbg !15470
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #17 !dbg !15471 {
  tail call void @system_init() #20, !dbg !15472
  tail call void @log_init(void (%struct.syslog_config_s*)* noundef null, i32 (%struct.syslog_config_s*)* noundef null, %struct.log_control_block_t** noundef null) #20, !dbg !15473
  tail call fastcc void @fatfs_read_write_file() #22, !dbg !15474
  br label %1, !dbg !15475

1:                                                ; preds = %1, %0
  br label %1, !dbg !15476, !llvm.loop !15479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @fatfs_read_write_file() unnamed_addr #0 !dbg !15482 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [1024 x i8], align 1
  %4 = alloca [1024 x i8], align 1
  %5 = bitcast i32* %1 to i8*, !dbg !15493
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !15493
  %6 = bitcast i32* %2 to i8*, !dbg !15493
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !15493
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0, !dbg !15494
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #19, !dbg !15494
  call void @llvm.dbg.declare(metadata [1024 x i8]* %3, metadata !15488, metadata !DIExpression()), !dbg !15495
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i32 0, i32 0, !dbg !15496
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #19, !dbg !15496
  call void @llvm.dbg.declare(metadata [1024 x i8]* %4, metadata !15492, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 0, metadata !15485, metadata !DIExpression()), !dbg !15498
  br label %9, !dbg !15499

9:                                                ; preds = %0, %9
  %10 = phi i32 [ 0, %0 ], [ %13, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !15485, metadata !DIExpression()), !dbg !15498
  %11 = trunc i32 %10 to i8, !dbg !15501
  %12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 %10, !dbg !15504
  store i8 %11, i8* %12, align 1, !dbg !15505
  %13 = add nuw nsw i32 %10, 1, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %13, metadata !15485, metadata !DIExpression()), !dbg !15498
  %14 = icmp eq i32 %13, 1000, !dbg !15507
  br i1 %14, label %15, label %9, !dbg !15499, !llvm.loop !15508

15:                                               ; preds = %9
  %16 = tail call i32 @f_mount(%struct.FATFS* noundef nonnull @fatfs, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.164, i32 0, i32 0), i8 noundef zeroext 1) #20, !dbg !15510
  call void @llvm.dbg.value(metadata i32 %16, metadata !15484, metadata !DIExpression()), !dbg !15498
  %17 = icmp eq i32 %16, 0, !dbg !15511
  br i1 %17, label %20, label %18, !dbg !15513

18:                                               ; preds = %15
  %19 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15514
  tail call void (i8*, i8*, i32, i32, i8*, ...) %19(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 83, i32 noundef 1, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.165, i32 0, i32 0)) #20, !dbg !15514
  br label %70, !dbg !15517

20:                                               ; preds = %15
  %21 = tail call i32 @f_open(%struct.FIL* noundef nonnull @fdst, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.166, i32 0, i32 0), i8 noundef zeroext 8) #20, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %21, metadata !15484, metadata !DIExpression()), !dbg !15498
  %22 = icmp eq i32 %21, 0, !dbg !15519
  br i1 %22, label %25, label %23, !dbg !15521

23:                                               ; preds = %20
  %24 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15522
  tail call void (i8*, i8*, i32, i32, i8*, ...) %24(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 90, i32 noundef 1, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.167, i32 0, i32 0)) #20, !dbg !15522
  br label %70, !dbg !15525

25:                                               ; preds = %20
  %26 = tail call i32 @f_open(%struct.FIL* noundef nonnull @fdst, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.166, i32 0, i32 0), i8 noundef zeroext 3) #20, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %26, metadata !15484, metadata !DIExpression()), !dbg !15498
  %27 = icmp eq i32 %26, 0, !dbg !15527
  br i1 %27, label %30, label %28, !dbg !15529

28:                                               ; preds = %25
  %29 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15530
  tail call void (i8*, i8*, i32, i32, i8*, ...) %29(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 96, i32 noundef 1, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.168, i32 0, i32 0)) #20, !dbg !15530
  br label %70, !dbg !15533

30:                                               ; preds = %25
  call void @llvm.dbg.value(metadata i32* %1, metadata !15486, metadata !DIExpression(DW_OP_deref)), !dbg !15498
  %31 = call i32 @f_write(%struct.FIL* noundef nonnull @fdst, i8* noundef nonnull %7, i32 noundef 1000, i32* noundef nonnull %1) #20, !dbg !15534
  call void @llvm.dbg.value(metadata i32 %31, metadata !15484, metadata !DIExpression()), !dbg !15498
  %32 = icmp eq i32 %31, 0, !dbg !15535
  br i1 %32, label %36, label %33, !dbg !15537

33:                                               ; preds = %30
  %34 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15538
  call void (i8*, i8*, i32, i32, i8*, ...) %34(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 103, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.169, i32 0, i32 0)) #20, !dbg !15538
  %35 = call i32 @f_close(%struct.FIL* noundef nonnull @fdst) #20, !dbg !15541
  call void @llvm.dbg.value(metadata i32 %35, metadata !15484, metadata !DIExpression()), !dbg !15498
  br label %70, !dbg !15542

36:                                               ; preds = %30
  %37 = call i32 @f_close(%struct.FIL* noundef nonnull @fdst) #20, !dbg !15543
  call void @llvm.dbg.value(metadata i32 %37, metadata !15484, metadata !DIExpression()), !dbg !15498
  %38 = icmp eq i32 %37, 0, !dbg !15544
  br i1 %38, label %42, label %39, !dbg !15546

39:                                               ; preds = %36
  %40 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15547
  call void (i8*, i8*, i32, i32, i8*, ...) %40(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 111, i32 noundef 1, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.170, i32 0, i32 0)) #20, !dbg !15547
  %41 = call i32 @f_close(%struct.FIL* noundef nonnull @fdst) #20, !dbg !15550
  call void @llvm.dbg.value(metadata i32 %41, metadata !15484, metadata !DIExpression()), !dbg !15498
  br label %70, !dbg !15551

42:                                               ; preds = %36
  %43 = call i32 @f_open(%struct.FIL* noundef nonnull @fdst, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.166, i32 0, i32 0), i8 noundef zeroext 1) #20, !dbg !15552
  call void @llvm.dbg.value(metadata i32 %43, metadata !15484, metadata !DIExpression()), !dbg !15498
  %44 = icmp eq i32 %43, 0, !dbg !15553
  br i1 %44, label %48, label %45, !dbg !15555

45:                                               ; preds = %42
  %46 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15556
  call void (i8*, i8*, i32, i32, i8*, ...) %46(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 118, i32 noundef 1, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.168, i32 0, i32 0)) #20, !dbg !15556
  %47 = call i32 @f_close(%struct.FIL* noundef nonnull @fdst) #20, !dbg !15559
  call void @llvm.dbg.value(metadata i32 %47, metadata !15484, metadata !DIExpression()), !dbg !15498
  br label %70, !dbg !15560

48:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i32* %2, metadata !15487, metadata !DIExpression(DW_OP_deref)), !dbg !15498
  %49 = call i32 @f_read(%struct.FIL* noundef nonnull @fdst, i8* noundef nonnull %8, i32 noundef 1000, i32* noundef nonnull %2) #20, !dbg !15561
  call void @llvm.dbg.value(metadata i32 %49, metadata !15484, metadata !DIExpression()), !dbg !15498
  %50 = icmp eq i32 %49, 0, !dbg !15562
  br i1 %50, label %57, label %51, !dbg !15564

51:                                               ; preds = %48
  %52 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15565
  call void (i8*, i8*, i32, i32, i8*, ...) %52(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 126, i32 noundef 1, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.171, i32 0, i32 0)) #20, !dbg !15565
  %53 = call i32 @f_close(%struct.FIL* noundef nonnull @fdst) #20, !dbg !15568
  call void @llvm.dbg.value(metadata i32 %53, metadata !15484, metadata !DIExpression()), !dbg !15498
  br label %70, !dbg !15569

54:                                               ; preds = %57
  %55 = add nuw nsw i32 %58, 1, !dbg !15570
  call void @llvm.dbg.value(metadata i32 %55, metadata !15485, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i32 %58, metadata !15485, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !15498
  %56 = icmp eq i32 %55, 1000, !dbg !15573
  br i1 %56, label %67, label %57, !dbg !15574, !llvm.loop !15575

57:                                               ; preds = %48, %54
  %58 = phi i32 [ %55, %54 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i32 %58, metadata !15485, metadata !DIExpression()), !dbg !15498
  %59 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i32 0, i32 %58, !dbg !15577
  %60 = load i8, i8* %59, align 1, !dbg !15577
  %61 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 %58, !dbg !15580
  %62 = load i8, i8* %61, align 1, !dbg !15580
  %63 = icmp eq i8 %60, %62, !dbg !15581
  call void @llvm.dbg.value(metadata i32 %58, metadata !15485, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !15498
  br i1 %63, label %54, label %64, !dbg !15582

64:                                               ; preds = %57
  %65 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15583
  call void (i8*, i8*, i32, i32, i8*, ...) %65(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 133, i32 noundef 1, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9.172, i32 0, i32 0)) #20, !dbg !15583
  %66 = call i32 @f_close(%struct.FIL* noundef nonnull @fdst) #20, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %66, metadata !15484, metadata !DIExpression()), !dbg !15498
  br label %70, !dbg !15587

67:                                               ; preds = %54
  %68 = call i32 @f_close(%struct.FIL* noundef nonnull @fdst) #20, !dbg !15588
  call void @llvm.dbg.value(metadata i32 %68, metadata !15484, metadata !DIExpression()), !dbg !15498
  %69 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_fatfs, i32 0, i32 3), align 4, !dbg !15589
  call void (i8*, i8*, i32, i32, i8*, ...) %69(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_fatfs to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.fatfs_read_write_file, i32 0, i32 0), i32 noundef 139, i32 noundef 1, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.173, i32 0, i32 0)) #20, !dbg !15589
  br label %70, !dbg !15591

70:                                               ; preds = %67, %64, %51, %45, %39, %33, %28, %23, %18
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #19, !dbg !15591
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #19, !dbg !15591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !15591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !15591
  ret void, !dbg !15591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #5 !dbg !15592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15594, metadata !DIExpression()), !dbg !15596
  %2 = add i32 %0, -1, !dbg !15597
  %3 = icmp ugt i32 %2, 16777215, !dbg !15599
  br i1 %3, label %8, label %4, !dbg !15600

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %5, metadata !15595, metadata !DIExpression()), !dbg !15596
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15602
  %7 = and i32 %6, -4, !dbg !15602
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15602
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !15603
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !15604
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15605
  br label %8, !dbg !15606

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !15596
  ret i32 %9, !dbg !15607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #5 !dbg !15608 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !15609
  ret void, !dbg !15610
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #7 !dbg !15611 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !15612
  ret i32 %1, !dbg !15613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #0 !dbg !15614 {
  %1 = tail call i32 @top_mcu_freq_get() #20, !dbg !15615
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !15616
  ret void, !dbg !15617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !15618 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15619
  %2 = or i32 %1, 15728640, !dbg !15619
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15619
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !15620
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15621
  %4 = or i32 %3, 458752, !dbg !15621
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15621
  ret void, !dbg !15622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #5 !dbg !15623 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !15624
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !15625
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !15626
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !15627
  store volatile i32 269713408, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !15628
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !15629
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !15630
  ret void, !dbg !15631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !15632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15634, metadata !DIExpression()), !dbg !15635
  %2 = trunc i32 %0 to i8, !dbg !15636
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext %2) #20, !dbg !15637
  %3 = icmp eq i32 %0, 10, !dbg !15638
  br i1 %3, label %4, label %5, !dbg !15640

4:                                                ; preds = %1
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext 13) #20, !dbg !15641
  br label %5, !dbg !15643

5:                                                ; preds = %4, %1
  ret i32 %0, !dbg !15644
}

; Function Attrs: noinline nounwind optsize
define dso_local void @system_init() local_unnamed_addr #0 !dbg !15645 {
  tail call fastcc void @SystemClock_Config() #22, !dbg !15646
  tail call fastcc void @prvSetupHardware() #22, !dbg !15647
  tail call fastcc void @_main_sys_random_init() #22, !dbg !15648
  ret void, !dbg !15649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !15650 {
  tail call void @top_xtal_init() #20, !dbg !15651
  tail call void @cmnCpuClkConfigureTo192M() #20, !dbg !15652
  tail call void @cmnSerialFlashClkConfTo64M() #20, !dbg !15653
  ret void, !dbg !15654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !15655 {
  tail call fastcc void @cache_enable() #22, !dbg !15656
  tail call void @bsp_ept_gpio_setting_init() #20, !dbg !15658
  %1 = tail call i32 @log_uart_init(i32 noundef 0) #20, !dbg !15659
  %2 = tail call i32 @hal_flash_init() #20, !dbg !15660
  ret void, !dbg !15661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_main_sys_random_init() unnamed_addr #0 !dbg !15662 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !15666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !15666
  %3 = tail call i32 @hal_trng_init() #20, !dbg !15667
  call void @llvm.dbg.value(metadata i32 %3, metadata !15665, metadata !DIExpression()), !dbg !15668
  %4 = icmp eq i32 %3, 0, !dbg !15669
  br i1 %4, label %5, label %10, !dbg !15671

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !15664, metadata !DIExpression(DW_OP_deref)), !dbg !15668
  %6 = call i32 @hal_trng_get_generated_random_number(i32* noundef nonnull %1) #20, !dbg !15672
  call void @llvm.dbg.value(metadata i32 %6, metadata !15665, metadata !DIExpression()), !dbg !15668
  %7 = icmp eq i32 %6, 0, !dbg !15674
  br i1 %7, label %8, label %10, !dbg !15674

8:                                                ; preds = %5
  %9 = load i32, i32* %1, align 4, !dbg !15675
  call void @llvm.dbg.value(metadata i32 %9, metadata !15664, metadata !DIExpression()), !dbg !15668
  call void @srand(i32 noundef %9) #20, !dbg !15678
  br label %12, !dbg !15679

10:                                               ; preds = %0, %5
  %11 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !15680
  call void (i8*, i8*, i32, i32, i8*, ...) %11(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__._main_sys_random_init, i32 0, i32 0), i32 noundef 203, i32 noundef 1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.187, i32 0, i32 0)) #20, !dbg !15680
  br label %12, !dbg !15684

12:                                               ; preds = %8, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !15685
  ret void, !dbg !15685
}

; Function Attrs: optsize
declare dso_local void @srand(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cache_enable() unnamed_addr #0 !dbg !15686 {
  %1 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 3, metadata !15690, metadata !DIExpression()), !dbg !15700
  %2 = bitcast i64* %1 to i8*, !dbg !15701
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19, !dbg !15701
  call void @llvm.dbg.value(metadata i64 3360107803414528, metadata !15693, metadata !DIExpression()), !dbg !15700
  store i64 3360107803414528, i64* %1, align 8, !dbg !15702
  call void @llvm.dbg.value(metadata i32 1, metadata !15692, metadata !DIExpression()), !dbg !15700
  %3 = tail call i32 @hal_cache_init() #20, !dbg !15703
  %4 = tail call i32 @hal_cache_set_size(i32 noundef 3) #20, !dbg !15704
  call void @llvm.dbg.value(metadata i32 undef, metadata !15691, metadata !DIExpression()), !dbg !15700
  %5 = bitcast i64* %1 to %struct.gpio_backup_restore_t*, !dbg !15705
  call void @llvm.dbg.value(metadata i64* %1, metadata !15693, metadata !DIExpression(DW_OP_deref)), !dbg !15700
  %6 = call i32 @hal_cache_region_config(i32 noundef 0, %struct.gpio_backup_restore_t* noundef nonnull %5) #20, !dbg !15709
  %7 = call i32 @hal_cache_region_enable(i32 noundef 0) #20, !dbg !15710
  call void @llvm.dbg.value(metadata i32 1, metadata !15691, metadata !DIExpression()), !dbg !15700
  br label %8, !dbg !15711

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 1, %0 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !15691, metadata !DIExpression()), !dbg !15700
  %10 = call i32 @hal_cache_region_disable(i32 noundef %9) #20, !dbg !15713
  %11 = add nuw nsw i32 %9, 1, !dbg !15716
  call void @llvm.dbg.value(metadata i32 %11, metadata !15691, metadata !DIExpression()), !dbg !15700
  %12 = icmp eq i32 %11, 16, !dbg !15717
  br i1 %12, label %13, label %8, !dbg !15711, !llvm.loop !15718

13:                                               ; preds = %8
  %14 = call i32 @hal_cache_enable() #20, !dbg !15720
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19, !dbg !15721
  ret void, !dbg !15721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #8 !dbg !15722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15724, metadata !DIExpression()), !dbg !15725
  ret i32 0, !dbg !15726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #8 !dbg !15727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15777, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !15778, metadata !DIExpression()), !dbg !15779
  ret i32 0, !dbg !15780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #8 !dbg !15781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15783, metadata !DIExpression()), !dbg !15784
  ret i32 1, !dbg !15785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !15786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15790, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i32 %1, metadata !15791, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i32 %2, metadata !15792, metadata !DIExpression()), !dbg !15793
  ret i32 0, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !15795 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15799, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.value(metadata i32 %1, metadata !15800, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.value(metadata i32 %2, metadata !15801, metadata !DIExpression()), !dbg !15802
  ret i32 -1, !dbg !15803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 !dbg !15804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15808, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i8* %1, metadata !15809, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i32 %2, metadata !15810, metadata !DIExpression()), !dbg !15811
  ret i32 0, !dbg !15812
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !15813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15815, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i8* %1, metadata !15816, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i32 %2, metadata !15817, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i32 0, metadata !15818, metadata !DIExpression()), !dbg !15819
  %4 = icmp sgt i32 %2, 0, !dbg !15820
  br i1 %4, label %5, label %14, !dbg !15823

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !15818, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i8* %7, metadata !15816, metadata !DIExpression()), !dbg !15819
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !15824
  call void @llvm.dbg.value(metadata i8* %8, metadata !15816, metadata !DIExpression()), !dbg !15819
  %9 = load i8, i8* %7, align 1, !dbg !15826
  %10 = zext i8 %9 to i32, !dbg !15826
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !15827
  %12 = add nuw nsw i32 %6, 1, !dbg !15828
  call void @llvm.dbg.value(metadata i32 %12, metadata !15818, metadata !DIExpression()), !dbg !15819
  %13 = icmp eq i32 %12, %2, !dbg !15820
  br i1 %13, label %14, label %5, !dbg !15823, !llvm.loop !15829

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !15831
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !1574 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !1770, metadata !DIExpression()), !dbg !15832
  call void @llvm.dbg.value(metadata i32 %1, metadata !1771, metadata !DIExpression()), !dbg !15832
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #19, !dbg !15833, !srcloc !15834
  call void @llvm.dbg.value(metadata i8* %3, metadata !1773, metadata !DIExpression()), !dbg !15832
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !15835
  %5 = icmp eq i8* %4, null, !dbg !15837
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !15838
  call void @llvm.dbg.value(metadata i8* %6, metadata !1772, metadata !DIExpression()), !dbg !15832
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !15839
  %8 = icmp ult i8* %3, %7, !dbg !15841
  %9 = xor i1 %8, true, !dbg !15842
  %10 = or i1 %5, %9, !dbg !15842
  br i1 %10, label %11, label %13, !dbg !15842

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !15843
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !15842
  br label %13, !dbg !15842

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !15843
  ret i8* %14, !dbg !15842
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #17 !dbg !15844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15846, metadata !DIExpression()), !dbg !15847
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.188, i32 0, i32 0)) #20, !dbg !15848
  br label %3, !dbg !15849

3:                                                ; preds = %1, %3
  br label %3, !dbg !15849, !llvm.loop !15850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !15852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15856, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 %1, metadata !15857, metadata !DIExpression()), !dbg !15858
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.189, i32 0, i32 0), i32 noundef %1) #20, !dbg !15859
  ret i32 -1, !dbg !15860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #0 !dbg !15861 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.190, i32 0, i32 0)) #20, !dbg !15866
  ret i32 0, !dbg !15867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericCreate(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i16 noundef zeroext %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, i32* noundef %6, %struct.xMEMORY_REGION* nocapture readnone %7) local_unnamed_addr #0 !dbg !15868 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !15888, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i8* %1, metadata !15889, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i16 %2, metadata !15890, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i8* %3, metadata !15891, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 %4, metadata !15892, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i8** %5, metadata !15893, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32* %6, metadata !15894, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !15895, metadata !DIExpression()), !dbg !15899
  %9 = icmp eq void (i8*)* %0, null, !dbg !15900
  br i1 %9, label %10, label %11, !dbg !15902

10:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 553) #20, !dbg !15903
  br label %11, !dbg !15903

11:                                               ; preds = %10, %8
  %12 = icmp ugt i32 %4, 19, !dbg !15905
  br i1 %12, label %13, label %14, !dbg !15907

13:                                               ; preds = %11
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 554) #20, !dbg !15908
  br label %14, !dbg !15908

14:                                               ; preds = %13, %11
  %15 = tail call fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %2, i32* noundef %6) #22, !dbg !15910
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %15, metadata !15897, metadata !DIExpression()), !dbg !15899
  %16 = icmp eq %struct.tskTaskControlBlock* %15, null, !dbg !15911
  br i1 %16, label %68, label %17, !dbg !15913

17:                                               ; preds = %14
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i16 %2), metadata !15898, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !15899
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 4, !dbg !15914
  %19 = load i32*, i32** %18, align 4, !dbg !15914
  call void @llvm.dbg.value(metadata !DIArgList(i32* %19, i16 %2), metadata !15898, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !15899
  %20 = zext i16 %2 to i32, !dbg !15917
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %20), metadata !15898, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !15899
  %21 = add nsw i32 %20, -1, !dbg !15918
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %21), metadata !15898, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !15899
  %22 = getelementptr inbounds i32, i32* %19, i32 %21, !dbg !15919
  call void @llvm.dbg.value(metadata i32* %22, metadata !15898, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !15899
  %23 = ptrtoint i32* %22 to i32, !dbg !15920
  call void @llvm.dbg.value(metadata i32 %23, metadata !15898, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !15899
  %24 = and i32 %23, -8, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %24, metadata !15898, metadata !DIExpression()), !dbg !15899
  %25 = inttoptr i32 %24 to i32*, !dbg !15922
  call void @llvm.dbg.value(metadata i32* %25, metadata !15898, metadata !DIExpression()), !dbg !15899
  tail call fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef nonnull %15, i8* noundef %1, i32 noundef %4) #22, !dbg !15923
  %26 = tail call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #20, !dbg !15924
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 0, !dbg !15926
  store i32* %26, i32** %27, align 4, !dbg !15927
  %28 = icmp eq i8** %5, null, !dbg !15928
  br i1 %28, label %31, label %29, !dbg !15930

29:                                               ; preds = %17
  %30 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !15931
  store %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** %30, align 4, !dbg !15931
  br label %31, !dbg !15933

31:                                               ; preds = %17, %29
  tail call void @vPortEnterCritical() #20, !dbg !15934
  %32 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !15935
  %33 = add i32 %32, 1, !dbg !15935
  store volatile i32 %33, i32* @uxCurrentNumberOfTasks, align 4, !dbg !15935
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !15937
  %35 = icmp eq %struct.tskTaskControlBlock* %34, null, !dbg !15939
  br i1 %35, label %36, label %40, !dbg !15940

36:                                               ; preds = %31
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !15941
  %37 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !15943
  %38 = icmp eq i32 %37, 1, !dbg !15945
  br i1 %38, label %39, label %49, !dbg !15946

39:                                               ; preds = %36
  tail call fastcc void @prvInitialiseTaskLists() #22, !dbg !15947
  br label %49, !dbg !15949

40:                                               ; preds = %31
  %41 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !15950
  %42 = icmp eq i32 %41, 0, !dbg !15953
  br i1 %42, label %43, label %49, !dbg !15954

43:                                               ; preds = %40
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !15955
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !15958
  %46 = load i32, i32* %45, align 4, !dbg !15958
  %47 = icmp ugt i32 %46, %4, !dbg !15959
  br i1 %47, label %49, label %48, !dbg !15960

48:                                               ; preds = %43
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !15961
  br label %49, !dbg !15963

49:                                               ; preds = %43, %48, %40, %39, %36
  %50 = load i32, i32* @uxTaskNumber, align 4, !dbg !15964
  %51 = add i32 %50, 1, !dbg !15964
  store i32 %51, i32* @uxTaskNumber, align 4, !dbg !15964
  %52 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 6, !dbg !15965
  store i32 %51, i32* %52, align 4, !dbg !15967
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !15968
  %54 = load i32, i32* %53, align 4, !dbg !15968
  %55 = shl nuw i32 1, %54, !dbg !15968
  %56 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !15968
  %57 = or i32 %56, %55, !dbg !15968
  store volatile i32 %57, i32* @uxTopReadyPriority, align 4, !dbg !15968
  %58 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %54, !dbg !15968
  %59 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 1, !dbg !15968
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %58, %struct.xLIST_ITEM* noundef nonnull %59) #20, !dbg !15968
  call void @llvm.dbg.value(metadata i32 1, metadata !15896, metadata !DIExpression()), !dbg !15899
  tail call void @vPortExitCritical() #20, !dbg !15969
  %60 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !15970
  %61 = icmp eq i32 %60, 0, !dbg !15974
  br i1 %61, label %68, label %62, !dbg !15975

62:                                               ; preds = %49
  %63 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !15976
  %64 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %63, i32 0, i32 3, !dbg !15979
  %65 = load i32, i32* %64, align 4, !dbg !15979
  %66 = icmp ult i32 %65, %4, !dbg !15980
  br i1 %66, label %67, label %68, !dbg !15981

67:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !15982
  tail call void asm sideeffect "dsb", ""() #19, !dbg !15982, !srcloc !15985
  tail call void asm sideeffect "isb", ""() #19, !dbg !15982, !srcloc !15986
  br label %68, !dbg !15987

68:                                               ; preds = %14, %62, %67, %49
  %69 = phi i32 [ 1, %62 ], [ 1, %67 ], [ 1, %49 ], [ -1, %14 ]
  ret i32 %69, !dbg !15988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %0, i32* noundef %1) unnamed_addr #0 !dbg !15989 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !15993, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32* %1, metadata !15994, metadata !DIExpression()), !dbg !15998
  %3 = icmp eq i32* %1, null, !dbg !15999
  br i1 %3, label %4, label %8, !dbg !15999

4:                                                ; preds = %2
  %5 = zext i16 %0 to i32, !dbg !15999
  %6 = shl nuw nsw i32 %5, 2, !dbg !15999
  %7 = tail call i8* @pvPortMalloc(i32 noundef %6) #20, !dbg !15999
  br label %10, !dbg !15999

8:                                                ; preds = %2
  %9 = bitcast i32* %1 to i8*, !dbg !15999
  br label %10, !dbg !15999

10:                                               ; preds = %8, %4
  %11 = phi i8* [ %7, %4 ], [ %9, %8 ], !dbg !15999
  call void @llvm.dbg.value(metadata i8* %11, metadata !15996, metadata !DIExpression()), !dbg !16000
  %12 = icmp eq i8* %11, null, !dbg !16001
  br i1 %12, label %24, label %13, !dbg !16003

13:                                               ; preds = %10
  %14 = tail call i8* @pvPortMalloc(i32 noundef 84) #20, !dbg !16004
  call void @llvm.dbg.value(metadata i8* %14, metadata !15995, metadata !DIExpression()), !dbg !15998
  %15 = icmp eq i8* %14, null, !dbg !16006
  br i1 %15, label %16, label %17, !dbg !16008

16:                                               ; preds = %13
  tail call void @vPortFree(i8* noundef nonnull %11) #20, !dbg !16009
  br label %24

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8* %14, metadata !15995, metadata !DIExpression()), !dbg !15998
  %18 = getelementptr inbounds i8, i8* %14, i32 48, !dbg !16011
  %19 = bitcast i8* %18 to i8**, !dbg !16013
  store i8* %11, i8** %19, align 4, !dbg !16013
  %20 = bitcast i8* %14 to %struct.tskTaskControlBlock*, !dbg !16014
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %20, metadata !15995, metadata !DIExpression()), !dbg !15998
  %21 = zext i16 %0 to i32, !dbg !16015
  %22 = shl nuw nsw i32 %21, 2, !dbg !16019
  %23 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 165, i32 noundef %22) #20, !dbg !16020
  br label %24, !dbg !16021

24:                                               ; preds = %10, %16, %17
  %25 = phi %struct.tskTaskControlBlock* [ %20, %17 ], [ null, %16 ], [ null, %10 ]
  ret %struct.tskTaskControlBlock* %25, !dbg !16022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 !dbg !16023 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !16028, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.value(metadata i8* %1, metadata !16029, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.value(metadata i32 %2, metadata !16030, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !16031, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.value(metadata i16 undef, metadata !16032, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.value(metadata i32 0, metadata !16033, metadata !DIExpression()), !dbg !16034
  br label %4, !dbg !16035

4:                                                ; preds = %4, %3
  %5 = phi i32 [ 0, %3 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !16033, metadata !DIExpression()), !dbg !16034
  %6 = getelementptr inbounds i8, i8* %1, i32 %5, !dbg !16037
  %7 = load i8, i8* %6, align 1, !dbg !16037
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 %5, !dbg !16040
  store i8 %7, i8* %8, align 1, !dbg !16041
  %9 = load i8, i8* %6, align 1, !dbg !16042
  %10 = icmp eq i8 %9, 0, !dbg !16044
  call void @llvm.dbg.value(metadata i32 %5, metadata !16033, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16034
  %11 = add nuw nsw i32 %5, 1
  %12 = icmp eq i32 %11, 6
  %13 = select i1 %10, i1 true, i1 %12, !dbg !16045
  call void @llvm.dbg.value(metadata i32 %11, metadata !16033, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.value(metadata i32 %5, metadata !16033, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16034
  br i1 %13, label %14, label %4, !dbg !16045, !llvm.loop !16046

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 5, !dbg !16048
  store i8 0, i8* %15, align 1, !dbg !16049
  %16 = icmp ult i32 %2, 19, !dbg !16050
  %17 = select i1 %16, i32 %2, i32 19, !dbg !16050
  call void @llvm.dbg.value(metadata i32 %17, metadata !16030, metadata !DIExpression()), !dbg !16034
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !16051
  store i32 %17, i32* %18, align 4, !dbg !16052
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !16053
  store i32 %17, i32* %19, align 4, !dbg !16055
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !16056
  store i32 0, i32* %20, align 4, !dbg !16057
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !16058
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !16059
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !16060
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %22) #20, !dbg !16061
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 3, !dbg !16062
  %24 = bitcast i8** %23 to %struct.tskTaskControlBlock**, !dbg !16062
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %24, align 4, !dbg !16062
  %25 = sub nuw nsw i32 20, %17, !dbg !16063
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 0, !dbg !16063
  store i32 %25, i32* %26, align 4, !dbg !16063
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 3, !dbg !16064
  %28 = bitcast i8** %27 to %struct.tskTaskControlBlock**, !dbg !16064
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %28, align 4, !dbg !16064
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !16065
  store volatile i32 0, i32* %29, align 4, !dbg !16067
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !16068
  store volatile i32 0, i32* %30, align 4, !dbg !16069
  ret void, !dbg !16070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #0 !dbg !16071 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16073, metadata !DIExpression()), !dbg !16074
  br label %1, !dbg !16075

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !16073, metadata !DIExpression()), !dbg !16074
  %3 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !16077
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #20, !dbg !16080
  %4 = add nuw nsw i32 %2, 1, !dbg !16081
  call void @llvm.dbg.value(metadata i32 %4, metadata !16073, metadata !DIExpression()), !dbg !16074
  %5 = icmp eq i32 %4, 20, !dbg !16082
  br i1 %5, label %6, label %1, !dbg !16075, !llvm.loop !16083

6:                                                ; preds = %1
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #20, !dbg !16085
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #20, !dbg !16086
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #20, !dbg !16087
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xTasksWaitingTermination) #20, !dbg !16088
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xSuspendedTaskList) #20, !dbg !16090
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16092
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !16093
  ret void, !dbg !16094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !16095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16099, metadata !DIExpression()), !dbg !16101
  tail call void @vPortEnterCritical() #20, !dbg !16102
  %2 = icmp eq i8* %0, null, !dbg !16103
  br i1 %2, label %3, label %5, !dbg !16103

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16103
  br label %7, !dbg !16103

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !16103
  br label %7, !dbg !16103

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !16103
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !16100, metadata !DIExpression()), !dbg !16101
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !16105
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !16107
  %11 = icmp eq i32 %10, 0, !dbg !16108
  br i1 %11, label %12, label %23, !dbg !16109

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !16110
  %14 = load i32, i32* %13, align 4, !dbg !16110
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !16110
  %16 = load i32, i32* %15, align 4, !dbg !16110
  %17 = icmp eq i32 %16, 0, !dbg !16110
  br i1 %17, label %18, label %23, !dbg !16114

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !16115
  %20 = xor i32 %19, -1, !dbg !16115
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16115
  %22 = and i32 %21, %20, !dbg !16115
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !16115
  br label %23, !dbg !16115

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !16117
  %25 = load i8*, i8** %24, align 4, !dbg !16117
  %26 = icmp eq i8* %25, null, !dbg !16119
  br i1 %26, label %30, label %27, !dbg !16120

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !16117
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !16121
  br label %30, !dbg !16123

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !16124
  %31 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !16125
  %32 = add i32 %31, 1, !dbg !16125
  store volatile i32 %32, i32* @uxTasksDeleted, align 4, !dbg !16125
  %33 = load i32, i32* @uxTaskNumber, align 4, !dbg !16126
  %34 = add i32 %33, 1, !dbg !16126
  store i32 %34, i32* @uxTaskNumber, align 4, !dbg !16126
  tail call void @vPortExitCritical() #20, !dbg !16127
  %35 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !16128
  %36 = icmp eq i32 %35, 0, !dbg !16130
  br i1 %36, label %46, label %37, !dbg !16131

37:                                               ; preds = %30
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16132
  %39 = icmp eq %struct.tskTaskControlBlock* %8, %38, !dbg !16135
  br i1 %39, label %40, label %45, !dbg !16136

40:                                               ; preds = %37
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16137
  %42 = icmp eq i32 %41, 0, !dbg !16137
  br i1 %42, label %44, label %43, !dbg !16140

43:                                               ; preds = %40
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 794) #20, !dbg !16141
  br label %44, !dbg !16141

44:                                               ; preds = %43, %40
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16143
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16143, !srcloc !16145
  tail call void asm sideeffect "isb", ""() #19, !dbg !16143, !srcloc !16146
  br label %46, !dbg !16147

45:                                               ; preds = %37
  tail call void @vPortEnterCritical() #20, !dbg !16148
  tail call fastcc void @prvResetNextTaskUnblockTime() #22, !dbg !16150
  tail call void @vPortExitCritical() #20, !dbg !16152
  br label %46

46:                                               ; preds = %44, %45, %30
  ret void, !dbg !16153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #5 !dbg !16154 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16157
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !16157
  %3 = load i32, i32* %2, align 4, !dbg !16157
  %4 = icmp eq i32 %3, 0, !dbg !16157
  br i1 %4, label %14, label %5, !dbg !16159

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16160
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !16160
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !16160
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !16160
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !16160
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !16160
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !16156, metadata !DIExpression()), !dbg !16162
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !16163
  %13 = load i32, i32* %12, align 4, !dbg !16163
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !16164
  ret void, !dbg !16165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelayUntil(i32* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !16166 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !16173, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i32 %1, metadata !16174, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i32 0, metadata !16177, metadata !DIExpression()), !dbg !16180
  %3 = icmp eq i32* %0, null, !dbg !16181
  br i1 %3, label %4, label %5, !dbg !16183

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 827) #20, !dbg !16184
  br label %5, !dbg !16184

5:                                                ; preds = %4, %2
  %6 = icmp eq i32 %1, 0, !dbg !16186
  br i1 %6, label %7, label %8, !dbg !16188

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 828) #20, !dbg !16189
  br label %8, !dbg !16189

8:                                                ; preds = %7, %5
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16191
  %10 = icmp eq i32 %9, 0, !dbg !16191
  br i1 %10, label %12, label %11, !dbg !16193

11:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 829) #20, !dbg !16194
  br label %12, !dbg !16194

12:                                               ; preds = %11, %8
  tail call void @vTaskSuspendAll() #22, !dbg !16196
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !16197
  call void @llvm.dbg.value(metadata i32 %13, metadata !16178, metadata !DIExpression()), !dbg !16198
  %14 = load i32, i32* %0, align 4, !dbg !16199
  %15 = add i32 %14, %1, !dbg !16200
  call void @llvm.dbg.value(metadata i32 %15, metadata !16175, metadata !DIExpression()), !dbg !16180
  %16 = icmp ult i32 %13, %14, !dbg !16201
  %17 = icmp ult i32 %15, %14, !dbg !16203
  %18 = icmp ugt i32 %15, %13
  br i1 %16, label %19, label %21, !dbg !16204

19:                                               ; preds = %12
  %20 = select i1 %17, i1 %18, i1 false, !dbg !16205
  br i1 %20, label %24, label %23, !dbg !16205

21:                                               ; preds = %12
  %22 = select i1 %17, i1 true, i1 %18, !dbg !16208
  br i1 %22, label %24, label %23, !dbg !16208

23:                                               ; preds = %21, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !16177, metadata !DIExpression()), !dbg !16180
  store i32 %15, i32* %0, align 4, !dbg !16211
  br label %38, !dbg !16212

24:                                               ; preds = %19, %21
  store i32 %15, i32* %0, align 4, !dbg !16211
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16213
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 1, !dbg !16217
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #20, !dbg !16218
  %28 = icmp eq i32 %27, 0, !dbg !16219
  br i1 %28, label %29, label %37, !dbg !16220

29:                                               ; preds = %24
  %30 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16221
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %30, i32 0, i32 3, !dbg !16221
  %32 = load i32, i32* %31, align 4, !dbg !16221
  %33 = shl nuw i32 1, %32, !dbg !16221
  %34 = xor i32 %33, -1, !dbg !16221
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16221
  %36 = and i32 %35, %34, !dbg !16221
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !16221
  br label %37, !dbg !16223

37:                                               ; preds = %24, %29
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %15) #22, !dbg !16224
  br label %38, !dbg !16225

38:                                               ; preds = %23, %37
  %39 = tail call i32 @xTaskResumeAll() #22, !dbg !16226
  call void @llvm.dbg.value(metadata i32 %39, metadata !16176, metadata !DIExpression()), !dbg !16180
  %40 = icmp eq i32 %39, 0, !dbg !16227
  br i1 %40, label %41, label %42, !dbg !16229

41:                                               ; preds = %38
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16230
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16230, !srcloc !16233
  tail call void asm sideeffect "isb", ""() #19, !dbg !16230, !srcloc !16234
  br label %42, !dbg !16235

42:                                               ; preds = %38, %41
  ret void, !dbg !16236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskSuspendAll() local_unnamed_addr #5 !dbg !16237 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16238
  %2 = add i32 %1, 1, !dbg !16238
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !16238
  ret void, !dbg !16239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #0 !dbg !16240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16244, metadata !DIExpression()), !dbg !16245
  %2 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16246
  %3 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, i32 0, !dbg !16246
  store i32 %0, i32* %3, align 4, !dbg !16246
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !16247
  %5 = icmp ugt i32 %4, %0, !dbg !16249
  br i1 %5, label %6, label %10, !dbg !16250

6:                                                ; preds = %1
  %7 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !16251
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16253
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !16254
  tail call void @vListInsert(%struct.xLIST* noundef %7, %struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !16255
  br label %17, !dbg !16256

10:                                               ; preds = %1
  %11 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16257
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16259
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !16260
  tail call void @vListInsert(%struct.xLIST* noundef %11, %struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !16261
  %14 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !16262
  %15 = icmp ugt i32 %14, %0, !dbg !16264
  br i1 %15, label %16, label %17, !dbg !16265

16:                                               ; preds = %10
  store volatile i32 %0, i32* @xNextTaskUnblockTime, align 4, !dbg !16266
  br label %17, !dbg !16268

17:                                               ; preds = %16, %10, %6
  ret void, !dbg !16269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #0 !dbg !16270 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16275, metadata !DIExpression()), !dbg !16276
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16277
  %2 = icmp eq i32 %1, 0, !dbg !16277
  br i1 %2, label %3, label %4, !dbg !16279

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.197, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1673) #20, !dbg !16280
  br label %4, !dbg !16280

4:                                                ; preds = %3, %0
  tail call void @vPortEnterCritical() #20, !dbg !16282
  %5 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16283
  %6 = add i32 %5, -1, !dbg !16283
  store volatile i32 %6, i32* @uxSchedulerSuspended, align 4, !dbg !16283
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16285
  %8 = icmp eq i32 %7, 0, !dbg !16287
  br i1 %8, label %9, label %58, !dbg !16288

9:                                                ; preds = %4
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !16289
  %11 = icmp eq i32 %10, 0, !dbg !16292
  br i1 %11, label %58, label %12, !dbg !16293

12:                                               ; preds = %9
  %13 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !16294
  %14 = icmp eq i32 %13, 0, !dbg !16294
  br i1 %14, label %39, label %15, !dbg !16296

15:                                               ; preds = %12, %36
  %16 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !16297
  %17 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %16, i32 0, i32 3, !dbg !16297
  %18 = bitcast i8** %17 to %struct.tskTaskControlBlock**, !dbg !16297
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %18, align 4, !dbg !16297
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %19, metadata !16274, metadata !DIExpression()), !dbg !16276
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 2, !dbg !16299
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #20, !dbg !16300
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !16301
  %23 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #20, !dbg !16302
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 3, !dbg !16303
  %25 = load i32, i32* %24, align 4, !dbg !16303
  %26 = shl nuw i32 1, %25, !dbg !16303
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16303
  %28 = or i32 %27, %26, !dbg !16303
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !16303
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !16303
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %22) #20, !dbg !16303
  %30 = load i32, i32* %24, align 4, !dbg !16304
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16306
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 3, !dbg !16307
  %33 = load i32, i32* %32, align 4, !dbg !16307
  %34 = icmp ult i32 %30, %33, !dbg !16308
  br i1 %34, label %36, label %35, !dbg !16309

35:                                               ; preds = %15
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !16310
  br label %36, !dbg !16312

36:                                               ; preds = %15, %35
  %37 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !16294
  %38 = icmp eq i32 %37, 0, !dbg !16294
  br i1 %38, label %39, label %15, !dbg !16296, !llvm.loop !16313

39:                                               ; preds = %36, %12
  %40 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !16315
  %41 = icmp eq i32 %40, 0, !dbg !16317
  br i1 %41, label %54, label %42, !dbg !16318

42:                                               ; preds = %39
  %43 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !16319
  %44 = icmp eq i32 %43, 0, !dbg !16321
  br i1 %44, label %54, label %45, !dbg !16322

45:                                               ; preds = %42, %49
  %46 = tail call i32 @xTaskIncrementTick() #22, !dbg !16323
  %47 = icmp eq i32 %46, 0, !dbg !16326
  br i1 %47, label %49, label %48, !dbg !16327

48:                                               ; preds = %45
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !16328
  br label %49, !dbg !16330

49:                                               ; preds = %45, %48
  %50 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !16331
  %51 = add i32 %50, -1, !dbg !16331
  store volatile i32 %51, i32* @uxPendedTicks, align 4, !dbg !16331
  %52 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !16319
  %53 = icmp eq i32 %52, 0, !dbg !16321
  br i1 %53, label %54, label %45, !dbg !16322, !llvm.loop !16332

54:                                               ; preds = %49, %42, %39
  %55 = load volatile i32, i32* @xYieldPending, align 4, !dbg !16334
  %56 = icmp eq i32 %55, 1, !dbg !16336
  br i1 %56, label %57, label %58, !dbg !16337

57:                                               ; preds = %54
  call void @llvm.dbg.value(metadata i32 1, metadata !16275, metadata !DIExpression()), !dbg !16276
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16338
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16338, !srcloc !16341
  tail call void asm sideeffect "isb", ""() #19, !dbg !16338, !srcloc !16342
  br label %58, !dbg !16343

58:                                               ; preds = %4, %9, %54, %57
  %59 = phi i32 [ 1, %57 ], [ 0, %54 ], [ 0, %9 ], [ 0, %4 ], !dbg !16276
  call void @llvm.dbg.value(metadata i32 %59, metadata !16275, metadata !DIExpression()), !dbg !16276
  tail call void @vPortExitCritical() #20, !dbg !16344
  ret i32 %59, !dbg !16345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #0 !dbg !16346 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16350, metadata !DIExpression()), !dbg !16359
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16360
  %2 = icmp eq i32 %1, 0, !dbg !16361
  br i1 %2, label %3, label %76, !dbg !16362

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !16363
  %5 = add i32 %4, 1, !dbg !16363
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !16363
  %6 = load volatile i32, i32* @xTickCount, align 4, !dbg !16364
  call void @llvm.dbg.value(metadata i32 %6, metadata !16351, metadata !DIExpression()), !dbg !16365
  %7 = icmp eq i32 %6, 0, !dbg !16366
  br i1 %7, label %8, label %19, !dbg !16367

8:                                                ; preds = %3
  %9 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16368
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %9, i32 0, i32 0, !dbg !16368
  %11 = load i32, i32* %10, align 4, !dbg !16368
  %12 = icmp eq i32 %11, 0, !dbg !16368
  br i1 %12, label %14, label %13, !dbg !16370

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1957) #20, !dbg !16371
  br label %14, !dbg !16371

14:                                               ; preds = %13, %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16370
  call void @llvm.dbg.value(metadata %struct.xLIST* %15, metadata !16355, metadata !DIExpression()), !dbg !16373
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !16370
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16370
  store volatile %struct.xLIST* %15, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !16370
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !16370
  %18 = add nsw i32 %17, 1, !dbg !16370
  store volatile i32 %18, i32* @xNumOfOverflows, align 4, !dbg !16370
  tail call fastcc void @prvResetNextTaskUnblockTime() #22, !dbg !16370
  br label %19, !dbg !16374

19:                                               ; preds = %3, %14
  %20 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !16375
  %21 = icmp ult i32 %6, %20, !dbg !16377
  br i1 %21, label %67, label %22, !dbg !16378

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !16350, metadata !DIExpression()), !dbg !16359
  %23 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16379
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %23, i32 0, i32 0, !dbg !16379
  %25 = load i32, i32* %24, align 4, !dbg !16379
  %26 = icmp eq i32 %25, 0, !dbg !16379
  br i1 %26, label %64, label %27, !dbg !16385

27:                                               ; preds = %22, %47
  %28 = phi i32 [ %59, %47 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !16350, metadata !DIExpression()), !dbg !16359
  %29 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16386
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %29, i32 0, i32 2, i32 1, !dbg !16386
  %31 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %30, align 4, !dbg !16386
  %32 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 3, !dbg !16386
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !16386
  %34 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %33, align 4, !dbg !16386
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %34, metadata !16348, metadata !DIExpression()), !dbg !16359
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !16388
  %36 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %35, i32 0, i32 0, !dbg !16388
  %37 = load i32, i32* %36, align 4, !dbg !16388
  call void @llvm.dbg.value(metadata i32 %37, metadata !16349, metadata !DIExpression()), !dbg !16359
  %38 = icmp ult i32 %6, %37, !dbg !16389
  br i1 %38, label %64, label %39, !dbg !16391

39:                                               ; preds = %27
  %40 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %35) #20, !dbg !16392
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, i32 4, !dbg !16393
  %42 = load i8*, i8** %41, align 4, !dbg !16393
  %43 = icmp eq i8* %42, null, !dbg !16395
  br i1 %43, label %47, label %44, !dbg !16396

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, !dbg !16393
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #20, !dbg !16397
  br label %47, !dbg !16399

47:                                               ; preds = %39, %44
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 3, !dbg !16400
  %49 = load i32, i32* %48, align 4, !dbg !16400
  %50 = shl nuw i32 1, %49, !dbg !16400
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16400
  %52 = or i32 %51, %50, !dbg !16400
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !16400
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !16400
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %35) #20, !dbg !16400
  %54 = load i32, i32* %48, align 4, !dbg !16401
  %55 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16404
  %56 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %55, i32 0, i32 3, !dbg !16405
  %57 = load i32, i32* %56, align 4, !dbg !16405
  %58 = icmp ult i32 %54, %57, !dbg !16406
  %59 = select i1 %58, i32 %28, i32 1, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %59, metadata !16350, metadata !DIExpression()), !dbg !16359
  %60 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !16379
  %61 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %60, i32 0, i32 0, !dbg !16379
  %62 = load i32, i32* %61, align 4, !dbg !16379
  %63 = icmp eq i32 %62, 0, !dbg !16379
  br i1 %63, label %64, label %27, !dbg !16385, !llvm.loop !16408

64:                                               ; preds = %27, %47, %22
  %65 = phi i32 [ -1, %22 ], [ -1, %47 ], [ %37, %27 ]
  %66 = phi i32 [ 0, %22 ], [ %59, %47 ], [ %28, %27 ]
  store volatile i32 %65, i32* @xNextTaskUnblockTime, align 4, !dbg !16411
  br label %67, !dbg !16412

67:                                               ; preds = %64, %19
  %68 = phi i32 [ 0, %19 ], [ %66, %64 ], !dbg !16415
  call void @llvm.dbg.value(metadata i32 %68, metadata !16350, metadata !DIExpression()), !dbg !16359
  %69 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16412
  %70 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %69, i32 0, i32 3, !dbg !16412
  %71 = load i32, i32* %70, align 4, !dbg !16412
  %72 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %71, i32 0, !dbg !16412
  %73 = load i32, i32* %72, align 4, !dbg !16412
  %74 = icmp ugt i32 %73, 1, !dbg !16416
  %75 = select i1 %74, i32 1, i32 %68, !dbg !16417
  br label %79, !dbg !16417

76:                                               ; preds = %0
  %77 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !16418
  %78 = add i32 %77, 1, !dbg !16418
  store volatile i32 %78, i32* @uxPendedTicks, align 4, !dbg !16418
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi i32 [ 0, %76 ], [ %75, %67 ], !dbg !16359
  call void @llvm.dbg.value(metadata i32 %80, metadata !16350, metadata !DIExpression()), !dbg !16359
  %81 = load volatile i32, i32* @xYieldPending, align 4, !dbg !16420
  %82 = icmp eq i32 %81, 0, !dbg !16423
  %83 = select i1 %82, i32 %80, i32 1, !dbg !16424
  call void @llvm.dbg.value(metadata i32 %83, metadata !16350, metadata !DIExpression()), !dbg !16359
  ret i32 %83, !dbg !16425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #0 !dbg !16426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16428, metadata !DIExpression()), !dbg !16431
  call void @llvm.dbg.value(metadata i32 0, metadata !16430, metadata !DIExpression()), !dbg !16431
  %2 = icmp eq i32 %0, 0, !dbg !16432
  br i1 %2, label %25, label %3, !dbg !16434

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16435
  %5 = icmp eq i32 %4, 0, !dbg !16435
  br i1 %5, label %7, label %6, !dbg !16438

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 927) #20, !dbg !16439
  br label %7, !dbg !16439

7:                                                ; preds = %6, %3
  tail call void @vTaskSuspendAll() #22, !dbg !16441
  %8 = load volatile i32, i32* @xTickCount, align 4, !dbg !16442
  %9 = add i32 %8, %0, !dbg !16444
  call void @llvm.dbg.value(metadata i32 %9, metadata !16429, metadata !DIExpression()), !dbg !16431
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16445
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 1, !dbg !16447
  %12 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %11) #20, !dbg !16448
  %13 = icmp eq i32 %12, 0, !dbg !16449
  br i1 %13, label %14, label %22, !dbg !16450

14:                                               ; preds = %7
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16451
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !16451
  %17 = load i32, i32* %16, align 4, !dbg !16451
  %18 = shl nuw i32 1, %17, !dbg !16451
  %19 = xor i32 %18, -1, !dbg !16451
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16451
  %21 = and i32 %20, %19, !dbg !16451
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !16451
  br label %22, !dbg !16453

22:                                               ; preds = %7, %14
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %9) #22, !dbg !16454
  %23 = tail call i32 @xTaskResumeAll() #22, !dbg !16455
  call void @llvm.dbg.value(metadata i32 %23, metadata !16430, metadata !DIExpression()), !dbg !16431
  %24 = icmp eq i32 %23, 0, !dbg !16456
  call void @llvm.dbg.value(metadata i32 undef, metadata !16430, metadata !DIExpression()), !dbg !16431
  br i1 %24, label %25, label %26, !dbg !16457

25:                                               ; preds = %1, %22
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16458
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16458, !srcloc !16462
  tail call void asm sideeffect "isb", ""() #19, !dbg !16458, !srcloc !16463
  br label %26, !dbg !16464

26:                                               ; preds = %22, %25
  ret void, !dbg !16465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGet(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !16466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16470, metadata !DIExpression()), !dbg !16473
  tail call void @vPortEnterCritical() #20, !dbg !16474
  %2 = icmp eq i8* %0, null, !dbg !16475
  br i1 %2, label %3, label %5, !dbg !16475

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16475
  br label %7, !dbg !16475

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !16475
  br label %7, !dbg !16475

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !16475
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !16471, metadata !DIExpression()), !dbg !16473
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !16477
  %10 = load i32, i32* %9, align 4, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %10, metadata !16472, metadata !DIExpression()), !dbg !16473
  tail call void @vPortExitCritical() #20, !dbg !16478
  ret i32 %10, !dbg !16479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGetFromISR(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !16480 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16482, metadata !DIExpression()), !dbg !16486
  tail call void @vPortValidateInterruptPriority() #20, !dbg !16487
  %2 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !16488, !srcloc !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()) #19, !dbg !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !16492, metadata !DIExpression()) #19, !dbg !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !16485, metadata !DIExpression()), !dbg !16486
  %3 = icmp eq i8* %0, null, !dbg !16496
  br i1 %3, label %4, label %6, !dbg !16496

4:                                                ; preds = %1
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16496
  br label %8, !dbg !16496

6:                                                ; preds = %1
  %7 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !16496
  br label %8, !dbg !16496

8:                                                ; preds = %6, %4
  %9 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %7, %6 ], !dbg !16496
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16488
  call void @llvm.dbg.value(metadata i32 %10, metadata !16491, metadata !DIExpression()) #19, !dbg !16495
  call void @llvm.dbg.value(metadata i32 %10, metadata !16485, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %9, metadata !16483, metadata !DIExpression()), !dbg !16486
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !16498
  %12 = load i32, i32* %11, align 4, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %12, metadata !16484, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata i32 undef, metadata !16499, metadata !DIExpression()) #19, !dbg !16502
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %10) #19, !dbg !16504, !srcloc !16505
  ret i32 %12, !dbg !16506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPrioritySet(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !16507 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16511, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.value(metadata i32 %1, metadata !16512, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.value(metadata i32 0, metadata !16516, metadata !DIExpression()), !dbg !16517
  %3 = icmp ugt i32 %1, 19, !dbg !16518
  br i1 %3, label %4, label %5, !dbg !16520

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1122) #20, !dbg !16521
  br label %5, !dbg !16521

5:                                                ; preds = %4, %2
  %6 = icmp ult i32 %1, 19, !dbg !16523
  %7 = select i1 %6, i32 %1, i32 19, !dbg !16523
  call void @llvm.dbg.value(metadata i32 %7, metadata !16512, metadata !DIExpression()), !dbg !16517
  tail call void @vPortEnterCritical() #20, !dbg !16524
  %8 = icmp eq i8* %0, null, !dbg !16525
  br i1 %8, label %9, label %11, !dbg !16525

9:                                                ; preds = %5
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16525
  br label %13, !dbg !16525

11:                                               ; preds = %5
  %12 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !16525
  br label %13, !dbg !16525

13:                                               ; preds = %11, %9
  %14 = phi %struct.tskTaskControlBlock* [ %10, %9 ], [ %12, %11 ], !dbg !16525
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %14, metadata !16513, metadata !DIExpression()), !dbg !16517
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 8, !dbg !16527
  %16 = load i32, i32* %15, align 4, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %16, metadata !16514, metadata !DIExpression()), !dbg !16517
  %17 = icmp eq i32 %16, %7, !dbg !16529
  br i1 %17, label %64, label %18, !dbg !16531

18:                                               ; preds = %13
  %19 = icmp ule i32 %7, %16, !dbg !16532
  %20 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16535
  %21 = icmp eq %struct.tskTaskControlBlock* %14, %20, !dbg !16535
  %22 = select i1 %19, i1 true, i1 %21, !dbg !16536
  %23 = select i1 %19, i1 %21, i1 false, !dbg !16536
  br i1 %22, label %29, label %24, !dbg !16536

24:                                               ; preds = %18
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16537
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !16542
  %27 = load i32, i32* %26, align 4, !dbg !16542
  %28 = icmp uge i32 %7, %27, !dbg !16543
  br label %29, !dbg !16544

29:                                               ; preds = %18, %24
  %30 = phi i1 [ %28, %24 ], [ %23, %18 ], !dbg !16517
  call void @llvm.dbg.value(metadata i32 undef, metadata !16516, metadata !DIExpression()), !dbg !16517
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !16545
  %32 = load i32, i32* %31, align 4, !dbg !16545
  call void @llvm.dbg.value(metadata i32 %32, metadata !16515, metadata !DIExpression()), !dbg !16517
  %33 = icmp eq i32 %16, %32, !dbg !16546
  br i1 %33, label %34, label %35, !dbg !16549

34:                                               ; preds = %29
  store i32 %7, i32* %31, align 4, !dbg !16550
  br label %35, !dbg !16552

35:                                               ; preds = %29, %34
  store i32 %7, i32* %15, align 4, !dbg !16553
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, i32 0, !dbg !16554
  %37 = load i32, i32* %36, align 4, !dbg !16554
  %38 = icmp sgt i32 %37, -1, !dbg !16556
  br i1 %38, label %39, label %41, !dbg !16557

39:                                               ; preds = %35
  %40 = sub nuw nsw i32 20, %7, !dbg !16558
  store i32 %40, i32* %36, align 4, !dbg !16558
  br label %41, !dbg !16560

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, !dbg !16561
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, i32 4, !dbg !16561
  %44 = load i8*, i8** %43, align 4, !dbg !16561
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !16561
  %46 = bitcast %struct.xLIST* %45 to i8*, !dbg !16561
  %47 = icmp eq i8* %44, %46, !dbg !16561
  br i1 %47, label %48, label %62, !dbg !16563

48:                                               ; preds = %41
  %49 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %42) #20, !dbg !16564
  %50 = icmp eq i32 %49, 0, !dbg !16567
  br i1 %50, label %51, label %56, !dbg !16568

51:                                               ; preds = %48
  %52 = shl nuw i32 1, %32, !dbg !16569
  %53 = xor i32 %52, -1, !dbg !16569
  %54 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16569
  %55 = and i32 %54, %53, !dbg !16569
  store volatile i32 %55, i32* @uxTopReadyPriority, align 4, !dbg !16569
  br label %56, !dbg !16571

56:                                               ; preds = %48, %51
  %57 = load i32, i32* %31, align 4, !dbg !16572
  %58 = shl nuw i32 1, %57, !dbg !16572
  %59 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16572
  %60 = or i32 %59, %58, !dbg !16572
  store volatile i32 %60, i32* @uxTopReadyPriority, align 4, !dbg !16572
  %61 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %57, !dbg !16572
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %61, %struct.xLIST_ITEM* noundef nonnull %42) #20, !dbg !16572
  br label %62, !dbg !16573

62:                                               ; preds = %41, %56
  br i1 %30, label %63, label %64, !dbg !16574

63:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16575
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16575, !srcloc !16579
  tail call void asm sideeffect "isb", ""() #19, !dbg !16575, !srcloc !16580
  br label %64, !dbg !16581

64:                                               ; preds = %63, %62, %13
  tail call void @vPortExitCritical() #20, !dbg !16582
  ret void, !dbg !16583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspend(i8* noundef %0) local_unnamed_addr #0 !dbg !16584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16586, metadata !DIExpression()), !dbg !16588
  tail call void @vPortEnterCritical() #20, !dbg !16589
  %2 = icmp eq i8* %0, null, !dbg !16590
  br i1 %2, label %3, label %5, !dbg !16590

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16590
  br label %7, !dbg !16590

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !16590
  br label %7, !dbg !16590

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !16590
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !16587, metadata !DIExpression()), !dbg !16588
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !16592
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !16594
  %11 = icmp eq i32 %10, 0, !dbg !16595
  br i1 %11, label %12, label %23, !dbg !16596

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !16597
  %14 = load i32, i32* %13, align 4, !dbg !16597
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !16597
  %16 = load i32, i32* %15, align 4, !dbg !16597
  %17 = icmp eq i32 %16, 0, !dbg !16597
  br i1 %17, label %18, label %23, !dbg !16601

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !16602
  %20 = xor i32 %19, -1, !dbg !16602
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16602
  %22 = and i32 %21, %20, !dbg !16602
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !16602
  br label %23, !dbg !16602

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !16604
  %25 = load i8*, i8** %24, align 4, !dbg !16604
  %26 = icmp eq i8* %25, null, !dbg !16606
  br i1 %26, label %30, label %27, !dbg !16607

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !16604
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !16608
  br label %30, !dbg !16610

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !16611
  tail call void @vPortExitCritical() #20, !dbg !16612
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16613
  %32 = icmp eq %struct.tskTaskControlBlock* %8, %31, !dbg !16615
  %33 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !16616
  %34 = icmp eq i32 %33, 0, !dbg !16616
  br i1 %32, label %35, label %47, !dbg !16617

35:                                               ; preds = %30
  br i1 %34, label %41, label %36, !dbg !16618

36:                                               ; preds = %35
  %37 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16620
  %38 = icmp eq i32 %37, 0, !dbg !16620
  br i1 %38, label %40, label %39, !dbg !16624

39:                                               ; preds = %36
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1322) #20, !dbg !16625
  br label %40, !dbg !16625

40:                                               ; preds = %39, %36
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16627
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16627, !srcloc !16629
  tail call void asm sideeffect "isb", ""() #19, !dbg !16627, !srcloc !16630
  br label %49, !dbg !16631

41:                                               ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0), align 4, !dbg !16632
  %43 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !16635
  %44 = icmp eq i32 %42, %43, !dbg !16636
  br i1 %44, label %45, label %46, !dbg !16637

45:                                               ; preds = %41
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16638
  br label %49, !dbg !16640

46:                                               ; preds = %41
  tail call void @vTaskSwitchContext() #22, !dbg !16641
  br label %49

47:                                               ; preds = %30
  br i1 %34, label %49, label %48, !dbg !16643

48:                                               ; preds = %47
  tail call void @vPortEnterCritical() #20, !dbg !16645
  tail call fastcc void @prvResetNextTaskUnblockTime() #22, !dbg !16648
  tail call void @vPortExitCritical() #20, !dbg !16650
  br label %49, !dbg !16651

49:                                               ; preds = %48, %47, %40, %46, %45
  ret void, !dbg !16652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSwitchContext() local_unnamed_addr #0 !dbg !1863 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16653
  %2 = icmp eq i32 %1, 0, !dbg !16654
  br i1 %2, label %4, label %3, !dbg !16655

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !16656
  br label %62, !dbg !16658

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !16659
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !16660
  %6 = and i32 %5, 1, !dbg !16660
  %7 = icmp eq i32 %6, 0, !dbg !16660
  br i1 %7, label %21, label %8, !dbg !16663

8:                                                ; preds = %4
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16664
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 0, !dbg !16664
  %11 = load i32*, i32** %10, align 4, !dbg !16664
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16664
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 4, !dbg !16664
  %14 = load i32*, i32** %13, align 4, !dbg !16664
  %15 = icmp ugt i32* %11, %14, !dbg !16664
  br i1 %15, label %21, label %16, !dbg !16667

16:                                               ; preds = %8
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16668
  %18 = bitcast %struct.tskTaskControlBlock* %17 to i8*, !dbg !16668
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16668
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 5, i32 0, !dbg !16668
  tail call void @vApplicationStackOverflowHook(i8* noundef %18, i8* noundef nonnull %20) #20, !dbg !16668
  br label %21, !dbg !16668

21:                                               ; preds = %8, %16, %4
  %22 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !16670
  %23 = and i32 %22, 1, !dbg !16670
  %24 = icmp eq i32 %23, 0, !dbg !16670
  br i1 %24, label %37, label %25, !dbg !16673

25:                                               ; preds = %21
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16674
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 4, !dbg !16674
  %28 = bitcast i32** %27 to i8**, !dbg !16674
  %29 = load i8*, i8** %28, align 4, !dbg !16674
  %30 = tail call i32 @memcmp(i8* noundef %29, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @vTaskSwitchContext.ucExpectedStackBytes, i32 0, i32 0), i32 noundef 20) #20, !dbg !16674
  %31 = icmp eq i32 %30, 0, !dbg !16674
  br i1 %31, label %37, label %32, !dbg !16677

32:                                               ; preds = %25
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16678
  %34 = bitcast %struct.tskTaskControlBlock* %33 to i8*, !dbg !16678
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16678
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 5, i32 0, !dbg !16678
  tail call void @vApplicationStackOverflowHook(i8* noundef %34, i8* noundef nonnull %36) #20, !dbg !16678
  br label %37, !dbg !16678

37:                                               ; preds = %25, %32, %21
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16680
  call void @llvm.dbg.value(metadata i32 %38, metadata !16681, metadata !DIExpression()) #19, !dbg !16687
  %39 = tail call i8 asm sideeffect "clz $0, $1", "=r,r"(i32 %38) #19, !dbg !16689, !srcloc !16690
  call void @llvm.dbg.value(metadata i8 %39, metadata !16686, metadata !DIExpression()) #19, !dbg !16687
  %40 = zext i8 %39 to i32, !dbg !16680
  %41 = sub nsw i32 31, %40, !dbg !16680
  call void @llvm.dbg.value(metadata i32 %41, metadata !1865, metadata !DIExpression()), !dbg !16691
  %42 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 0, !dbg !16692
  %43 = load i32, i32* %42, align 4, !dbg !16692
  %44 = icmp eq i32 %43, 0, !dbg !16692
  br i1 %44, label %45, label %46, !dbg !16680

45:                                               ; preds = %37
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.14.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2244) #20, !dbg !16694
  br label %46, !dbg !16694

46:                                               ; preds = %45, %37
  call void @llvm.dbg.value(metadata !DIArgList([20 x %struct.xLIST]* @pxReadyTasksLists, i32 %41), metadata !1869, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !16696
  %47 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 1, !dbg !16697
  %48 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %47, align 4, !dbg !16697
  %49 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %48, i32 0, i32 1, !dbg !16697
  %50 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %49, align 4, !dbg !16697
  store %struct.xLIST_ITEM* %50, %struct.xLIST_ITEM** %47, align 4, !dbg !16697
  %51 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 2, !dbg !16698
  %52 = bitcast %struct.xMINI_LIST_ITEM* %51 to %struct.xLIST_ITEM*, !dbg !16698
  %53 = icmp eq %struct.xLIST_ITEM* %50, %52, !dbg !16698
  br i1 %53, label %54, label %57, !dbg !16697

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %50, i32 0, i32 1, !dbg !16700
  %56 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %55, align 4, !dbg !16700
  store %struct.xLIST_ITEM* %56, %struct.xLIST_ITEM** %47, align 4, !dbg !16700
  br label %57, !dbg !16700

57:                                               ; preds = %54, %46
  %58 = phi %struct.xLIST_ITEM* [ %56, %54 ], [ %50, %46 ], !dbg !16697
  %59 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %58, i32 0, i32 3, !dbg !16697
  %60 = bitcast i8** %59 to %struct.tskTaskControlBlock**, !dbg !16697
  %61 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %60, align 4, !dbg !16697
  store volatile %struct.tskTaskControlBlock* %61, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16697
  br label %62

62:                                               ; preds = %57, %3
  ret void, !dbg !16702
}

; Function Attrs: optsize
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskResume(i8* noundef %0) local_unnamed_addr #0 !dbg !16703 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16705, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata i8* %0, metadata !16706, metadata !DIExpression()), !dbg !16707
  %2 = icmp eq i8* %0, null, !dbg !16708
  br i1 %2, label %3, label %4, !dbg !16708

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1420) #20, !dbg !16709
  br label %29, !dbg !16712

4:                                                ; preds = %1
  %5 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !16714
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %5, metadata !16706, metadata !DIExpression()), !dbg !16707
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16715
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %5, !dbg !16716
  br i1 %7, label %29, label %8, !dbg !16717

8:                                                ; preds = %4
  tail call void @vPortEnterCritical() #20, !dbg !16718
  %9 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef nonnull %0) #22, !dbg !16720
  %10 = icmp eq i32 %9, 1, !dbg !16723
  br i1 %10, label %11, label %28, !dbg !16724

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !16725
  %13 = bitcast i8* %12 to %struct.xLIST_ITEM*, !dbg !16725
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !16727
  %15 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !16728
  %16 = bitcast i8* %15 to i32*, !dbg !16728
  %17 = load i32, i32* %16, align 4, !dbg !16728
  %18 = shl nuw i32 1, %17, !dbg !16728
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16728
  %20 = or i32 %19, %18, !dbg !16728
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !16728
  %21 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %17, !dbg !16728
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %21, %struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !16728
  %22 = load i32, i32* %16, align 4, !dbg !16729
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16731
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 3, !dbg !16732
  %25 = load i32, i32* %24, align 4, !dbg !16732
  %26 = icmp ult i32 %22, %25, !dbg !16733
  br i1 %26, label %28, label %27, !dbg !16734

27:                                               ; preds = %11
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16735
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16735, !srcloc !16738
  tail call void asm sideeffect "isb", ""() #19, !dbg !16735, !srcloc !16739
  br label %28, !dbg !16740

28:                                               ; preds = %8, %27, %11
  tail call void @vPortExitCritical() #20, !dbg !16741
  br label %29, !dbg !16742

29:                                               ; preds = %3, %4, %28
  ret void, !dbg !16743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvTaskIsTaskSuspended(i8* noundef readonly %0) unnamed_addr #0 !dbg !16744 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16749, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i32 0, metadata !16750, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i8* %0, metadata !16751, metadata !DIExpression()), !dbg !16755
  %2 = icmp eq i8* %0, null, !dbg !16756
  br i1 %2, label %3, label %4, !dbg !16758

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1378) #20, !dbg !16759
  br label %4, !dbg !16759

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !16761
  %6 = bitcast i8* %5 to i8**, !dbg !16761
  %7 = load i8*, i8** %6, align 4, !dbg !16761
  %8 = icmp eq i8* %7, bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), !dbg !16761
  br i1 %8, label %9, label %15, !dbg !16763

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !16764
  %11 = bitcast i8* %10 to i8**, !dbg !16764
  %12 = load i8*, i8** %11, align 4, !dbg !16764
  %13 = icmp eq i8* %12, null
  %14 = zext i1 %13 to i32, !dbg !16767
  br label %15, !dbg !16767

15:                                               ; preds = %9, %4
  %16 = phi i32 [ 0, %4 ], [ %14, %9 ], !dbg !16755
  call void @llvm.dbg.value(metadata i32 %16, metadata !16750, metadata !DIExpression()), !dbg !16755
  ret i32 %16, !dbg !16768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !16769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16773, metadata !DIExpression()), !dbg !16777
  call void @llvm.dbg.value(metadata i32 0, metadata !16774, metadata !DIExpression()), !dbg !16777
  call void @llvm.dbg.value(metadata i8* %0, metadata !16775, metadata !DIExpression()), !dbg !16777
  %2 = icmp eq i8* %0, null, !dbg !16778
  br i1 %2, label %3, label %4, !dbg !16780

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1475) #20, !dbg !16781
  br label %4, !dbg !16781

4:                                                ; preds = %3, %1
  tail call void @vPortValidateInterruptPriority() #20, !dbg !16783
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !16784, !srcloc !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()) #19, !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16492, metadata !DIExpression()) #19, !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()), !dbg !16777
  %6 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef %0) #22, !dbg !16787
  %7 = icmp eq i32 %6, 1, !dbg !16790
  br i1 %7, label %8, label %31, !dbg !16791

8:                                                ; preds = %4
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !16792
  %10 = icmp eq i32 %9, 0, !dbg !16795
  br i1 %10, label %11, label %28, !dbg !16796

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !16797
  %13 = bitcast i8* %12 to i32*, !dbg !16797
  %14 = load i32, i32* %13, align 4, !dbg !16797
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16800
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !16801
  %17 = load i32, i32* %16, align 4, !dbg !16801
  %18 = icmp uge i32 %14, %17, !dbg !16802
  %19 = zext i1 %18 to i32, !dbg !16803
  call void @llvm.dbg.value(metadata i32 %19, metadata !16774, metadata !DIExpression()), !dbg !16777
  %20 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !16804
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !16804
  %22 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !16805
  %23 = load i32, i32* %13, align 4, !dbg !16806
  %24 = shl nuw i32 1, %23, !dbg !16806
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !16806
  %26 = or i32 %25, %24, !dbg !16806
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !16806
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !16806
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %21) #20, !dbg !16806
  br label %31, !dbg !16807

28:                                               ; preds = %8
  %29 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !16808
  %30 = bitcast i8* %29 to %struct.xLIST_ITEM*, !dbg !16808
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %30) #20, !dbg !16810
  br label %31

31:                                               ; preds = %4, %11, %28
  %32 = phi i32 [ %19, %11 ], [ 0, %28 ], [ 0, %4 ], !dbg !16777
  %33 = extractvalue { i32, i32 } %5, 0, !dbg !16784
  call void @llvm.dbg.value(metadata i32 %33, metadata !16491, metadata !DIExpression()) #19, !dbg !16786
  call void @llvm.dbg.value(metadata i32 %33, metadata !16776, metadata !DIExpression()), !dbg !16777
  call void @llvm.dbg.value(metadata i32 %32, metadata !16774, metadata !DIExpression()), !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16499, metadata !DIExpression()) #19, !dbg !16811
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #19, !dbg !16813, !srcloc !16505
  ret i32 %32, !dbg !16814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskStartScheduler() local_unnamed_addr #0 !dbg !16815 {
  %1 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.202, i32 0, i32 0), i16 noundef zeroext 256, i8* noundef null, i32 noundef 0, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* undef) #22, !dbg !16818
  call void @llvm.dbg.value(metadata i32 %1, metadata !16817, metadata !DIExpression()), !dbg !16820
  %2 = icmp eq i32 %1, 1, !dbg !16821
  br i1 %2, label %3, label %5, !dbg !16824

3:                                                ; preds = %0
  %4 = tail call i32 @xTimerCreateTimerTask() #20, !dbg !16825
  call void @llvm.dbg.value(metadata i32 %4, metadata !16817, metadata !DIExpression()), !dbg !16820
  br label %5, !dbg !16827

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !16820
  call void @llvm.dbg.value(metadata i32 %6, metadata !16817, metadata !DIExpression()), !dbg !16820
  switch i32 %6, label %11 [
    i32 1, label %7
    i32 0, label %10
  ], !dbg !16828

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !16829, !srcloc !16836
  call void @llvm.dbg.value(metadata i32 %8, metadata !16832, metadata !DIExpression()) #19, !dbg !16837
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !16838
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !16839
  %9 = tail call i32 @xPortStartScheduler() #20, !dbg !16840
  br label %11, !dbg !16842

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1612) #20, !dbg !16843
  br label %11, !dbg !16843

11:                                               ; preds = %5, %10, %7
  ret void, !dbg !16847
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #17 !dbg !16848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16850, metadata !DIExpression()), !dbg !16851
  br label %2, !dbg !16852

2:                                                ; preds = %5, %1
  tail call fastcc void @prvCheckTasksWaitingTermination() #22, !dbg !16853
  %3 = load i32, i32* getelementptr inbounds ([20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0), align 4, !dbg !16857
  %4 = icmp ugt i32 %3, 1, !dbg !16860
  br i1 %4, label %6, label %5, !dbg !16861

5:                                                ; preds = %2, %6
  br label %2, !dbg !16853, !llvm.loop !16862

6:                                                ; preds = %2
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16865
  tail call void asm sideeffect "dsb", ""() #19, !dbg !16865, !srcloc !16868
  tail call void asm sideeffect "isb", ""() #19, !dbg !16865, !srcloc !16869
  br label %5, !dbg !16870
}

; Function Attrs: optsize
declare dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #0 !dbg !16871 {
  %1 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !16879
  %2 = icmp eq i32 %1, 0, !dbg !16880
  br i1 %2, label %21, label %3, !dbg !16881

3:                                                ; preds = %0, %18
  tail call void @vTaskSuspendAll() #22, !dbg !16882
  %4 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 0), align 4, !dbg !16883
  %5 = icmp eq i32 %4, 0, !dbg !16883
  call void @llvm.dbg.value(metadata i1 %5, metadata !16873, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16885
  %6 = tail call i32 @xTaskResumeAll() #22, !dbg !16886
  br i1 %5, label %18, label %7, !dbg !16887

7:                                                ; preds = %3
  tail call void @vPortEnterCritical() #20, !dbg !16888
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1), align 4, !dbg !16889
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !16889
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !16889
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !16889
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !16875, metadata !DIExpression()), !dbg !16891
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !16892
  %13 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #20, !dbg !16893
  %14 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !16894
  %15 = add i32 %14, -1, !dbg !16894
  store volatile i32 %15, i32* @uxCurrentNumberOfTasks, align 4, !dbg !16894
  %16 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !16895
  %17 = add i32 %16, -1, !dbg !16895
  store volatile i32 %17, i32* @uxTasksDeleted, align 4, !dbg !16895
  tail call void @vPortExitCritical() #20, !dbg !16896
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %11) #22, !dbg !16897
  br label %18, !dbg !16898

18:                                               ; preds = %3, %7
  %19 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !16879
  %20 = icmp eq i32 %19, 0, !dbg !16880
  br i1 %20, label %21, label %3, !dbg !16881, !llvm.loop !16899

21:                                               ; preds = %18, %0
  ret void, !dbg !16901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #0 !dbg !16902 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !16906, metadata !DIExpression()), !dbg !16907
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 4, !dbg !16908
  %3 = bitcast i32** %2 to i8**, !dbg !16908
  %4 = load i8*, i8** %3, align 4, !dbg !16908
  tail call void @vPortFree(i8* noundef %4) #20, !dbg !16908
  %5 = bitcast %struct.tskTaskControlBlock* %0 to i8*, !dbg !16910
  tail call void @vPortFree(i8* noundef %5) #20, !dbg !16911
  ret void, !dbg !16912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskEndScheduler() local_unnamed_addr #0 !dbg !16913 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !16914, !srcloc !16836
  call void @llvm.dbg.value(metadata i32 %1, metadata !16832, metadata !DIExpression()) #19, !dbg !16916
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !16917
  tail call void @vPortEndScheduler() #20, !dbg !16918
  ret void, !dbg !16919
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #7 !dbg !16920 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %1, metadata !16924, metadata !DIExpression()), !dbg !16927
  ret i32 %1, !dbg !16928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #0 !dbg !16929 {
  tail call void @vPortValidateInterruptPriority() #20, !dbg !16933
  call void @llvm.dbg.value(metadata i32 0, metadata !16932, metadata !DIExpression()), !dbg !16934
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !16935
  call void @llvm.dbg.value(metadata i32 %1, metadata !16931, metadata !DIExpression()), !dbg !16934
  ret i32 %1, !dbg !16937
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #7 !dbg !16938 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !16941
  ret i32 %1, !dbg !16942
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @pcTaskGetTaskName(i8* noundef readnone %0) local_unnamed_addr #0 !dbg !16943 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16947, metadata !DIExpression()), !dbg !16949
  %2 = icmp eq i8* %0, null, !dbg !16950
  br i1 %2, label %3, label %5, !dbg !16950

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !16950
  br label %7, !dbg !16950

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !16950
  br label %7, !dbg !16950

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !16950
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !16948, metadata !DIExpression()), !dbg !16949
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !16951
  br i1 %9, label %10, label %11, !dbg !16953

10:                                               ; preds = %7
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.204, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 1821) #20, !dbg !16954
  br label %11, !dbg !16954

11:                                               ; preds = %10, %7
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !16956
  ret i8* %12, !dbg !16957
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture noundef writeonly %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !16958 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !16978, metadata !DIExpression()), !dbg !16983
  call void @llvm.dbg.value(metadata i32 %1, metadata !16979, metadata !DIExpression()), !dbg !16983
  call void @llvm.dbg.value(metadata i32* %2, metadata !16980, metadata !DIExpression()), !dbg !16983
  call void @llvm.dbg.value(metadata i32 0, metadata !16981, metadata !DIExpression()), !dbg !16983
  call void @llvm.dbg.value(metadata i32 20, metadata !16982, metadata !DIExpression()), !dbg !16983
  tail call void @vTaskSuspendAll() #22, !dbg !16984
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !16985
  %5 = icmp ugt i32 %4, %1, !dbg !16988
  br i1 %5, label %32, label %6, !dbg !16989

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %3 ], !dbg !16983
  %8 = phi i32 [ %9, %6 ], [ 20, %3 ], !dbg !16983
  call void @llvm.dbg.value(metadata i32 %8, metadata !16982, metadata !DIExpression()), !dbg !16983
  call void @llvm.dbg.value(metadata i32 %7, metadata !16981, metadata !DIExpression()), !dbg !16983
  %9 = add nsw i32 %8, -1, !dbg !16990
  call void @llvm.dbg.value(metadata i32 %9, metadata !16982, metadata !DIExpression()), !dbg !16983
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %7, !dbg !16993
  %11 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !16994
  %12 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %10, %struct.xLIST* noundef nonnull %11, i32 noundef 1) #22, !dbg !16995
  %13 = add i32 %12, %7, !dbg !16996
  call void @llvm.dbg.value(metadata i32 %13, metadata !16981, metadata !DIExpression()), !dbg !16983
  %14 = icmp eq i32 %9, 0, !dbg !16997
  br i1 %14, label %15, label %6, !dbg !16998, !llvm.loop !16999

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %13, !dbg !17002
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !17003
  %18 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %16, %struct.xLIST* noundef %17, i32 noundef 2) #22, !dbg !17004
  %19 = add i32 %18, %13, !dbg !17005
  call void @llvm.dbg.value(metadata i32 %19, metadata !16981, metadata !DIExpression()), !dbg !16983
  %20 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %19, !dbg !17006
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !17007
  %22 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %20, %struct.xLIST* noundef %21, i32 noundef 2) #22, !dbg !17008
  %23 = add i32 %22, %19, !dbg !17009
  call void @llvm.dbg.value(metadata i32 %23, metadata !16981, metadata !DIExpression()), !dbg !16983
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %23, !dbg !17010
  %25 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %24, %struct.xLIST* noundef nonnull @xTasksWaitingTermination, i32 noundef 4) #22, !dbg !17012
  %26 = add i32 %23, %25, !dbg !17013
  call void @llvm.dbg.value(metadata i32 %26, metadata !16981, metadata !DIExpression()), !dbg !16983
  %27 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !17014
  %28 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %27, %struct.xLIST* noundef nonnull @xSuspendedTaskList, i32 noundef 3) #22, !dbg !17016
  %29 = add i32 %26, %28, !dbg !17017
  call void @llvm.dbg.value(metadata i32 %29, metadata !16981, metadata !DIExpression()), !dbg !16983
  %30 = icmp eq i32* %2, null, !dbg !17018
  br i1 %30, label %32, label %31, !dbg !17021

31:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !17022
  br label %32, !dbg !17024

32:                                               ; preds = %3, %15, %31
  %33 = phi i32 [ %29, %31 ], [ %29, %15 ], [ 0, %3 ], !dbg !16983
  call void @llvm.dbg.value(metadata i32 %33, metadata !16981, metadata !DIExpression()), !dbg !16983
  %34 = tail call i32 @xTaskResumeAll() #22, !dbg !17025
  ret i32 %33, !dbg !17026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* nocapture noundef writeonly %0, %struct.xLIST* noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !17027 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !17031, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !17032, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.value(metadata i32 %2, metadata !17033, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.value(metadata i32 0, metadata !17038, metadata !DIExpression()), !dbg !17046
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !17047
  %5 = load i32, i32* %4, align 4, !dbg !17047
  %6 = icmp eq i32 %5, 0, !dbg !17048
  br i1 %6, label %72, label %7, !dbg !17049

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !17039, metadata !DIExpression()), !dbg !17050
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 1, !dbg !17051
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !17051
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !17051
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %10, align 4, !dbg !17051
  store %struct.xLIST_ITEM* %11, %struct.xLIST_ITEM** %8, align 4, !dbg !17051
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, !dbg !17052
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !17052
  %14 = icmp eq %struct.xLIST_ITEM* %11, %13, !dbg !17052
  br i1 %14, label %15, label %18, !dbg !17051

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !17054
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !17054
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %8, align 4, !dbg !17054
  br label %18, !dbg !17054

18:                                               ; preds = %15, %7
  %19 = phi %struct.xLIST_ITEM* [ %17, %15 ], [ %11, %7 ], !dbg !17051
  %20 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 3, !dbg !17051
  %21 = bitcast i8** %20 to %struct.tskTaskControlBlock**, !dbg !17051
  %22 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %21, align 4, !dbg !17051
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %22, metadata !17037, metadata !DIExpression()), !dbg !17046
  %23 = icmp eq i32 %2, 3
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, i32 1
  br label %25, !dbg !17056

25:                                               ; preds = %70, %18
  %26 = phi %struct.xLIST_ITEM* [ %19, %18 ], [ %71, %70 ], !dbg !17057
  %27 = phi i32 [ 0, %18 ], [ %68, %70 ], !dbg !17046
  call void @llvm.dbg.value(metadata i32 %27, metadata !17038, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !17043, metadata !DIExpression()), !dbg !17058
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %26, i32 0, i32 1, !dbg !17057
  %29 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %28, align 4, !dbg !17057
  store %struct.xLIST_ITEM* %29, %struct.xLIST_ITEM** %8, align 4, !dbg !17057
  %30 = icmp eq %struct.xLIST_ITEM* %29, %13, !dbg !17059
  br i1 %30, label %31, label %33, !dbg !17057

31:                                               ; preds = %25
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !17061
  store %struct.xLIST_ITEM* %32, %struct.xLIST_ITEM** %8, align 4, !dbg !17061
  br label %33, !dbg !17061

33:                                               ; preds = %31, %25
  %34 = phi %struct.xLIST_ITEM* [ %32, %31 ], [ %29, %25 ], !dbg !17057
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %34, i32 0, i32 3, !dbg !17057
  %36 = load i8*, i8** %35, align 4, !dbg !17057
  %37 = bitcast i8* %36 to %struct.tskTaskControlBlock*, !dbg !17057
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %37, metadata !17034, metadata !DIExpression()), !dbg !17046
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 0, !dbg !17063
  store i8* %36, i8** %38, align 4, !dbg !17064
  %39 = getelementptr inbounds i8, i8* %36, i32 52, !dbg !17065
  %40 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 1, !dbg !17066
  store i8* %39, i8** %40, align 4, !dbg !17067
  %41 = getelementptr inbounds i8, i8* %36, i32 60, !dbg !17068
  %42 = bitcast i8* %41 to i32*, !dbg !17068
  %43 = load volatile i32, i32* %42, align 4, !dbg !17068
  %44 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 2, !dbg !17069
  store i32 %43, i32* %44, align 4, !dbg !17070
  %45 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 3, !dbg !17071
  store i32 %2, i32* %45, align 4, !dbg !17072
  %46 = getelementptr inbounds i8, i8* %36, i32 44, !dbg !17073
  %47 = bitcast i8* %46 to i32*, !dbg !17073
  %48 = load volatile i32, i32* %47, align 4, !dbg !17073
  %49 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 4, !dbg !17074
  store i32 %48, i32* %49, align 4, !dbg !17075
  br i1 %23, label %50, label %56, !dbg !17076

50:                                               ; preds = %33
  %51 = getelementptr inbounds i8, i8* %36, i32 40, !dbg !17078
  %52 = bitcast i8* %51 to i8**, !dbg !17078
  %53 = load volatile i8*, i8** %52, align 4, !dbg !17078
  %54 = icmp eq i8* %53, null, !dbg !17082
  br i1 %54, label %56, label %55, !dbg !17083

55:                                               ; preds = %50
  store i32 2, i32* %45, align 4, !dbg !17084
  br label %56, !dbg !17086

56:                                               ; preds = %50, %55, %33
  %57 = getelementptr inbounds i8, i8* %36, i32 68, !dbg !17087
  %58 = bitcast i8* %57 to i32*, !dbg !17087
  %59 = load volatile i32, i32* %58, align 4, !dbg !17087
  %60 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 5, !dbg !17089
  store i32 %59, i32* %60, align 4, !dbg !17090
  %61 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 6, !dbg !17091
  store i32 0, i32* %61, align 4, !dbg !17093
  %62 = getelementptr inbounds i8, i8* %36, i32 48, !dbg !17094
  %63 = bitcast i8* %62 to i32**, !dbg !17094
  %64 = load volatile i32*, i32** %63, align 4, !dbg !17094
  %65 = bitcast i32* %64 to i8*, !dbg !17096
  %66 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %65) #22, !dbg !17097
  %67 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 7, !dbg !17098
  store i16 %66, i16* %67, align 4, !dbg !17099
  %68 = add i32 %27, 1, !dbg !17100
  call void @llvm.dbg.value(metadata i32 %68, metadata !17038, metadata !DIExpression()), !dbg !17046
  %69 = icmp eq %struct.tskTaskControlBlock* %22, %37, !dbg !17101
  br i1 %69, label %72, label %70, !dbg !17102, !llvm.loop !17103

70:                                               ; preds = %56
  %71 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !17057
  br label %25, !dbg !17102

72:                                               ; preds = %56, %3
  %73 = phi i32 [ 0, %3 ], [ %68, %56 ], !dbg !17046
  call void @llvm.dbg.value(metadata i32 %73, metadata !17038, metadata !DIExpression()), !dbg !17046
  ret i32 %73, !dbg !17105
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture noundef readonly %0) unnamed_addr #12 !dbg !17106 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17110, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i32 0, metadata !17111, metadata !DIExpression()), !dbg !17112
  %2 = load i8, i8* %0, align 1, !dbg !17113
  %3 = icmp eq i8 %2, -91, !dbg !17114
  br i1 %3, label %4, label %14, !dbg !17115

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !17111, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i8* %6, metadata !17110, metadata !DIExpression()), !dbg !17112
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !17116
  call void @llvm.dbg.value(metadata i8* %7, metadata !17110, metadata !DIExpression()), !dbg !17112
  %8 = add i32 %5, 1, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %8, metadata !17111, metadata !DIExpression()), !dbg !17112
  %9 = load i8, i8* %7, align 1, !dbg !17113
  %10 = icmp eq i8 %9, -91, !dbg !17114
  br i1 %10, label %4, label %11, !dbg !17115, !llvm.loop !17119

11:                                               ; preds = %4
  %12 = lshr i32 %8, 2, !dbg !17121
  %13 = trunc i32 %12 to i16, !dbg !17121
  br label %14, !dbg !17121

14:                                               ; preds = %11, %1
  %15 = phi i16 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !17111, metadata !DIExpression()), !dbg !17112
  ret i16 %15, !dbg !17122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !17123 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !17127, metadata !DIExpression()), !dbg !17130
  call void @llvm.dbg.value(metadata i32 %1, metadata !17128, metadata !DIExpression()), !dbg !17130
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !17131
  br i1 %3, label %4, label %5, !dbg !17133

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2262) #20, !dbg !17134
  br label %5, !dbg !17134

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17136
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !17137
  tail call void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #20, !dbg !17138
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17139
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !17141
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !17142
  %11 = icmp eq i32 %10, 0, !dbg !17143
  br i1 %11, label %12, label %20, !dbg !17144

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17145
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !17145
  %15 = load i32, i32* %14, align 4, !dbg !17145
  %16 = shl nuw i32 1, %15, !dbg !17145
  %17 = xor i32 %16, -1, !dbg !17145
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17145
  %19 = and i32 %18, %17, !dbg !17145
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !17145
  br label %20, !dbg !17147

20:                                               ; preds = %5, %12
  %21 = icmp eq i32 %1, -1, !dbg !17148
  br i1 %21, label %22, label %25, !dbg !17151

22:                                               ; preds = %20
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17152
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 1, !dbg !17154
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %24) #20, !dbg !17155
  br label %28, !dbg !17156

25:                                               ; preds = %20
  %26 = load volatile i32, i32* @xTickCount, align 4, !dbg !17157
  %27 = add i32 %26, %1, !dbg !17159
  call void @llvm.dbg.value(metadata i32 %27, metadata !17129, metadata !DIExpression()), !dbg !17130
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %27) #22, !dbg !17160
  br label %28

28:                                               ; preds = %25, %22
  ret void, !dbg !17161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !17162 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !17166, metadata !DIExpression()), !dbg !17170
  call void @llvm.dbg.value(metadata i32 %1, metadata !17167, metadata !DIExpression()), !dbg !17170
  call void @llvm.dbg.value(metadata i32 %2, metadata !17168, metadata !DIExpression()), !dbg !17170
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !17171
  br i1 %4, label %5, label %6, !dbg !17173

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2321) #20, !dbg !17174
  br label %6, !dbg !17174

6:                                                ; preds = %5, %3
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !17176
  %8 = icmp eq i32 %7, 0, !dbg !17176
  br i1 %8, label %9, label %10, !dbg !17178

9:                                                ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.206, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2325) #20, !dbg !17179
  br label %10, !dbg !17179

10:                                               ; preds = %9, %6
  %11 = or i32 %1, -2147483648, !dbg !17181
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17181
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 2, i32 0, !dbg !17181
  store i32 %11, i32* %13, align 4, !dbg !17181
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17182
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !17183
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %15) #20, !dbg !17184
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17185
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 1, !dbg !17187
  %18 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #20, !dbg !17188
  %19 = icmp eq i32 %18, 0, !dbg !17189
  br i1 %19, label %20, label %28, !dbg !17190

20:                                               ; preds = %10
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17191
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !17191
  %23 = load i32, i32* %22, align 4, !dbg !17191
  %24 = shl nuw i32 1, %23, !dbg !17191
  %25 = xor i32 %24, -1, !dbg !17191
  %26 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17191
  %27 = and i32 %26, %25, !dbg !17191
  store volatile i32 %27, i32* @uxTopReadyPriority, align 4, !dbg !17191
  br label %28, !dbg !17193

28:                                               ; preds = %10, %20
  %29 = icmp eq i32 %2, -1, !dbg !17194
  br i1 %29, label %30, label %33, !dbg !17197

30:                                               ; preds = %28
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17198
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 1, !dbg !17200
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %32) #20, !dbg !17201
  br label %36, !dbg !17202

33:                                               ; preds = %28
  %34 = load volatile i32, i32* @xTickCount, align 4, !dbg !17203
  %35 = add i32 %34, %2, !dbg !17205
  call void @llvm.dbg.value(metadata i32 %35, metadata !17169, metadata !DIExpression()), !dbg !17170
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %35) #22, !dbg !17206
  br label %36

36:                                               ; preds = %33, %30
  ret void, !dbg !17207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !17208 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !17210, metadata !DIExpression()), !dbg !17213
  call void @llvm.dbg.value(metadata i32 %1, metadata !17211, metadata !DIExpression()), !dbg !17213
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !17214
  br i1 %3, label %4, label %5, !dbg !17216

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2389) #20, !dbg !17217
  br label %5, !dbg !17217

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17219
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !17220
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #20, !dbg !17221
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17222
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !17224
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #20, !dbg !17225
  %11 = icmp eq i32 %10, 0, !dbg !17226
  br i1 %11, label %12, label %20, !dbg !17227

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17228
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !17228
  %15 = load i32, i32* %14, align 4, !dbg !17228
  %16 = shl nuw i32 1, %15, !dbg !17228
  %17 = xor i32 %16, -1, !dbg !17228
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17228
  %19 = and i32 %18, %17, !dbg !17228
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !17228
  br label %20, !dbg !17230

20:                                               ; preds = %5, %12
  %21 = load volatile i32, i32* @xTickCount, align 4, !dbg !17231
  %22 = add i32 %21, %1, !dbg !17232
  call void @llvm.dbg.value(metadata i32 %22, metadata !17212, metadata !DIExpression()), !dbg !17213
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %22) #22, !dbg !17233
  ret void, !dbg !17234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !17235 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !17242, metadata !DIExpression()), !dbg !17245
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !17246
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !17246
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !17246
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !17246
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !17246
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !17243, metadata !DIExpression()), !dbg !17245
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !17247
  br i1 %7, label %8, label %9, !dbg !17249

8:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2447) #20, !dbg !17250
  br label %9, !dbg !17250

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !17252
  %11 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %10) #20, !dbg !17253
  %12 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !17254
  %13 = icmp eq i32 %12, 0, !dbg !17256
  br i1 %13, label %14, label %23, !dbg !17257

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !17258
  %16 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %15) #20, !dbg !17260
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !17261
  %18 = load i32, i32* %17, align 4, !dbg !17261
  %19 = shl nuw i32 1, %18, !dbg !17261
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17261
  %21 = or i32 %20, %19, !dbg !17261
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !17261
  %22 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %18, !dbg !17261
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %22, %struct.xLIST_ITEM* noundef nonnull %15) #20, !dbg !17261
  br label %24, !dbg !17262

23:                                               ; preds = %9
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %10) #20, !dbg !17263
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !17265
  %26 = load i32, i32* %25, align 4, !dbg !17265
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17267
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 3, !dbg !17268
  %29 = load i32, i32* %28, align 4, !dbg !17268
  %30 = icmp ugt i32 %26, %29, !dbg !17269
  br i1 %30, label %31, label %32, !dbg !17270

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 1, metadata !17244, metadata !DIExpression()), !dbg !17245
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !17271
  br label %32, !dbg !17273

32:                                               ; preds = %24, %31
  %33 = phi i32 [ 1, %31 ], [ 0, %24 ], !dbg !17274
  call void @llvm.dbg.value(metadata i32 %33, metadata !17244, metadata !DIExpression()), !dbg !17245
  ret i32 %33, !dbg !17275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !17276 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !17280, metadata !DIExpression()), !dbg !17284
  call void @llvm.dbg.value(metadata i32 %1, metadata !17281, metadata !DIExpression()), !dbg !17284
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !17285
  %4 = icmp eq i32 %3, 0, !dbg !17285
  br i1 %4, label %5, label %6, !dbg !17287

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2503) #20, !dbg !17288
  br label %6, !dbg !17288

6:                                                ; preds = %5, %2
  %7 = or i32 %1, -2147483648, !dbg !17290
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !17290
  store i32 %7, i32* %8, align 4, !dbg !17290
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !17291
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !17291
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !17291
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !17282, metadata !DIExpression()), !dbg !17284
  %12 = icmp eq %struct.tskTaskControlBlock* %11, null, !dbg !17292
  br i1 %12, label %13, label %14, !dbg !17294

13:                                               ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2511) #20, !dbg !17295
  br label %14, !dbg !17295

14:                                               ; preds = %13, %6
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %0) #20, !dbg !17297
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !17298
  %17 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %16) #20, !dbg !17299
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 3, !dbg !17300
  %19 = load i32, i32* %18, align 4, !dbg !17300
  %20 = shl nuw i32 1, %19, !dbg !17300
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17300
  %22 = or i32 %21, %20, !dbg !17300
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !17300
  %23 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %19, !dbg !17300
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %23, %struct.xLIST_ITEM* noundef nonnull %16) #20, !dbg !17300
  %24 = load i32, i32* %18, align 4, !dbg !17301
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17303
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !17304
  %27 = load i32, i32* %26, align 4, !dbg !17304
  %28 = icmp ugt i32 %24, %27, !dbg !17305
  br i1 %28, label %29, label %30, !dbg !17306

29:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 1, metadata !17283, metadata !DIExpression()), !dbg !17284
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !17307
  br label %30, !dbg !17309

30:                                               ; preds = %14, %29
  %31 = phi i32 [ 1, %29 ], [ 0, %14 ], !dbg !17310
  call void @llvm.dbg.value(metadata i32 %31, metadata !17283, metadata !DIExpression()), !dbg !17284
  ret i32 %31, !dbg !17311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSetTimeOutState(%struct.gpio_backup_restore_t* noundef writeonly %0) local_unnamed_addr #0 !dbg !17312 {
  call void @llvm.dbg.value(metadata %struct.gpio_backup_restore_t* %0, metadata !17323, metadata !DIExpression()), !dbg !17324
  %2 = icmp eq %struct.gpio_backup_restore_t* %0, null, !dbg !17325
  br i1 %2, label %3, label %4, !dbg !17327

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2543) #20, !dbg !17328
  br label %4, !dbg !17328

4:                                                ; preds = %3, %1
  %5 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !17330
  %6 = getelementptr inbounds %struct.gpio_backup_restore_t, %struct.gpio_backup_restore_t* %0, i32 0, i32 0, !dbg !17331
  store i32 %5, i32* %6, align 4, !dbg !17332
  %7 = load volatile i32, i32* @xTickCount, align 4, !dbg !17333
  %8 = getelementptr inbounds %struct.gpio_backup_restore_t, %struct.gpio_backup_restore_t* %0, i32 0, i32 1, !dbg !17334
  store i32 %7, i32* %8, align 4, !dbg !17335
  ret void, !dbg !17336
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCheckForTimeOut(%struct.gpio_backup_restore_t* noundef %0, i32* noundef %1) local_unnamed_addr #0 !dbg !17337 {
  call void @llvm.dbg.value(metadata %struct.gpio_backup_restore_t* %0, metadata !17341, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata i32* %1, metadata !17342, metadata !DIExpression()), !dbg !17346
  %3 = icmp eq %struct.gpio_backup_restore_t* %0, null, !dbg !17347
  br i1 %3, label %4, label %5, !dbg !17349

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2553) #20, !dbg !17350
  br label %5, !dbg !17350

5:                                                ; preds = %4, %2
  %6 = icmp eq i32* %1, null, !dbg !17352
  br i1 %6, label %7, label %8, !dbg !17354

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 2554) #20, !dbg !17355
  br label %8, !dbg !17355

8:                                                ; preds = %7, %5
  tail call void @vPortEnterCritical() #20, !dbg !17357
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !17358
  call void @llvm.dbg.value(metadata i32 %9, metadata !17344, metadata !DIExpression()), !dbg !17359
  %10 = load i32, i32* %1, align 4, !dbg !17360
  %11 = icmp eq i32 %10, -1, !dbg !17362
  br i1 %11, label %26, label %12, !dbg !17363

12:                                               ; preds = %8
  %13 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !17364
  %14 = getelementptr inbounds %struct.gpio_backup_restore_t, %struct.gpio_backup_restore_t* %0, i32 0, i32 0, !dbg !17366
  %15 = load i32, i32* %14, align 4, !dbg !17366
  %16 = icmp eq i32 %13, %15, !dbg !17367
  %17 = getelementptr inbounds %struct.gpio_backup_restore_t, %struct.gpio_backup_restore_t* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4, !dbg !17368
  %19 = icmp ult i32 %9, %18
  %20 = select i1 %16, i1 true, i1 %19, !dbg !17369
  br i1 %20, label %21, label %26, !dbg !17369

21:                                               ; preds = %12
  %22 = sub i32 %9, %18, !dbg !17370
  %23 = icmp ugt i32 %10, %22, !dbg !17372
  br i1 %23, label %24, label %26, !dbg !17373

24:                                               ; preds = %21
  %25 = sub i32 %10, %22, !dbg !17374
  store i32 %25, i32* %1, align 4, !dbg !17374
  tail call void @vTaskSetTimeOutState(%struct.gpio_backup_restore_t* noundef nonnull %0) #22, !dbg !17376
  call void @llvm.dbg.value(metadata i32 0, metadata !17343, metadata !DIExpression()), !dbg !17346
  br label %26, !dbg !17377

26:                                               ; preds = %12, %21, %8, %24
  %27 = phi i32 [ 0, %24 ], [ 0, %8 ], [ 1, %21 ], [ 1, %12 ], !dbg !17378
  call void @llvm.dbg.value(metadata i32 %27, metadata !17343, metadata !DIExpression()), !dbg !17346
  tail call void @vPortExitCritical() #20, !dbg !17379
  ret i32 %27, !dbg !17380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskMissedYield() local_unnamed_addr #5 !dbg !17381 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !17382
  ret void, !dbg !17383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(i8* noundef readonly %0) local_unnamed_addr #9 !dbg !17384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17386, metadata !DIExpression()), !dbg !17389
  %2 = icmp eq i8* %0, null, !dbg !17390
  br i1 %2, label %7, label %3, !dbg !17392

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17388, metadata !DIExpression()), !dbg !17389
  %4 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !17393
  %5 = bitcast i8* %4 to i32*, !dbg !17393
  %6 = load i32, i32* %5, align 4, !dbg !17393
  call void @llvm.dbg.value(metadata i32 %6, metadata !17387, metadata !DIExpression()), !dbg !17389
  br label %7, !dbg !17395

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ], !dbg !17396
  call void @llvm.dbg.value(metadata i32 %8, metadata !17387, metadata !DIExpression()), !dbg !17389
  ret i32 %8, !dbg !17397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTaskSetTaskNumber(i8* noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !17398 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17402, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.value(metadata i32 %1, metadata !17403, metadata !DIExpression()), !dbg !17405
  %3 = icmp eq i8* %0, null, !dbg !17406
  br i1 %3, label %7, label %4, !dbg !17408

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %0, metadata !17404, metadata !DIExpression()), !dbg !17405
  %5 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !17409
  %6 = bitcast i8* %5 to i32*, !dbg !17409
  store i32 %1, i32* %6, align 4, !dbg !17411
  br label %7, !dbg !17412

7:                                                ; preds = %4, %2
  ret void, !dbg !17413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @uxTaskGetStackHighWaterMark(i8* noundef readonly %0) local_unnamed_addr #5 !dbg !17414 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17416, metadata !DIExpression()), !dbg !17420
  %2 = icmp eq i8* %0, null, !dbg !17421
  br i1 %2, label %3, label %5, !dbg !17421

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17421
  br label %7, !dbg !17421

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !17421
  br label %7, !dbg !17421

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !17421
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !17417, metadata !DIExpression()), !dbg !17420
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !17422
  %10 = bitcast i32** %9 to i8**, !dbg !17422
  %11 = load i8*, i8** %10, align 4, !dbg !17422
  call void @llvm.dbg.value(metadata i8* %11, metadata !17418, metadata !DIExpression()), !dbg !17420
  %12 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %11) #22, !dbg !17424
  %13 = zext i16 %12 to i32, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %13, metadata !17419, metadata !DIExpression()), !dbg !17420
  ret i32 %13, !dbg !17426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @xTaskGetCurrentTaskHandle() local_unnamed_addr #7 !dbg !17427 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17432
  %2 = bitcast %struct.tskTaskControlBlock* %1 to i8*, !dbg !17432
  call void @llvm.dbg.value(metadata i8* %2, metadata !17431, metadata !DIExpression()), !dbg !17433
  ret i8* %2, !dbg !17434
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #7 !dbg !17435 {
  %1 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !17438
  %2 = icmp eq i32 %1, 0, !dbg !17440
  br i1 %2, label %7, label %3, !dbg !17441

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !17442
  %5 = icmp eq i32 %4, 0, !dbg !17445
  %6 = select i1 %5, i32 2, i32 0
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ 1, %0 ], [ %6, %3 ], !dbg !17446
  call void @llvm.dbg.value(metadata i32 %8, metadata !17437, metadata !DIExpression()), !dbg !17447
  ret i32 %8, !dbg !17448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPriorityInherit(i8* noundef %0) local_unnamed_addr #0 !dbg !17449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17453, metadata !DIExpression()), !dbg !17455
  call void @llvm.dbg.value(metadata i8* %0, metadata !17454, metadata !DIExpression()), !dbg !17455
  %2 = icmp eq i8* %0, null, !dbg !17456
  br i1 %2, label %55, label %3, !dbg !17458

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17459
  %5 = bitcast i8* %4 to i32*, !dbg !17459
  %6 = load i32, i32* %5, align 4, !dbg !17459
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17462
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 3, !dbg !17463
  %9 = load i32, i32* %8, align 4, !dbg !17463
  %10 = icmp ult i32 %6, %9, !dbg !17464
  br i1 %10, label %11, label %55, !dbg !17465

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !17466
  %13 = bitcast i8* %12 to i32*, !dbg !17466
  %14 = load i32, i32* %13, align 4, !dbg !17466
  %15 = icmp sgt i32 %14, -1, !dbg !17469
  br i1 %15, label %16, label %21, !dbg !17470

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17471
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !17471
  %19 = load i32, i32* %18, align 4, !dbg !17471
  %20 = sub i32 20, %19, !dbg !17471
  store i32 %20, i32* %13, align 4, !dbg !17471
  br label %21, !dbg !17473

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !17474
  %23 = bitcast i8* %22 to %struct.xLIST_ITEM*, !dbg !17474
  %24 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !17474
  %25 = bitcast i8* %24 to i8**, !dbg !17474
  %26 = load i8*, i8** %25, align 4, !dbg !17474
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !17474
  %28 = bitcast %struct.xLIST* %27 to i8*, !dbg !17474
  %29 = icmp eq i8* %26, %28, !dbg !17474
  br i1 %29, label %30, label %51, !dbg !17476

30:                                               ; preds = %21
  %31 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %23) #20, !dbg !17477
  %32 = icmp eq i32 %31, 0, !dbg !17480
  br i1 %32, label %33, label %43, !dbg !17481

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !17482
  %35 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %34, i32 0, !dbg !17482
  %36 = load i32, i32* %35, align 4, !dbg !17482
  %37 = icmp eq i32 %36, 0, !dbg !17482
  br i1 %37, label %38, label %43, !dbg !17486

38:                                               ; preds = %33
  %39 = shl nuw i32 1, %34, !dbg !17487
  %40 = xor i32 %39, -1, !dbg !17487
  %41 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17487
  %42 = and i32 %41, %40, !dbg !17487
  store volatile i32 %42, i32* @uxTopReadyPriority, align 4, !dbg !17487
  br label %43, !dbg !17487

43:                                               ; preds = %30, %33, %38
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17489
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !17490
  %46 = load i32, i32* %45, align 4, !dbg !17490
  store i32 %46, i32* %5, align 4, !dbg !17491
  %47 = shl nuw i32 1, %46, !dbg !17492
  %48 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17492
  %49 = or i32 %48, %47, !dbg !17492
  store volatile i32 %49, i32* @uxTopReadyPriority, align 4, !dbg !17492
  %50 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %46, !dbg !17492
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %50, %struct.xLIST_ITEM* noundef nonnull %23) #20, !dbg !17492
  br label %55, !dbg !17493

51:                                               ; preds = %21
  %52 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17494
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %52, i32 0, i32 3, !dbg !17496
  %54 = load i32, i32* %53, align 4, !dbg !17496
  store i32 %54, i32* %5, align 4, !dbg !17497
  br label %55

55:                                               ; preds = %1, %51, %43, %3
  ret void, !dbg !17498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityDisinherit(i8* noundef %0) local_unnamed_addr #0 !dbg !17499 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17501, metadata !DIExpression()), !dbg !17504
  call void @llvm.dbg.value(metadata i8* %0, metadata !17502, metadata !DIExpression()), !dbg !17504
  call void @llvm.dbg.value(metadata i32 0, metadata !17503, metadata !DIExpression()), !dbg !17504
  %2 = icmp eq i8* %0, null, !dbg !17505
  br i1 %2, label %46, label %3, !dbg !17507

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !17508
  %5 = bitcast i8* %4 to i32*, !dbg !17508
  %6 = load i32, i32* %5, align 4, !dbg !17508
  %7 = icmp eq i32 %6, 0, !dbg !17508
  br i1 %7, label %8, label %10, !dbg !17511

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 3409) #20, !dbg !17512
  %9 = load i32, i32* %5, align 4, !dbg !17514
  br label %10, !dbg !17512

10:                                               ; preds = %8, %3
  %11 = phi i32 [ %9, %8 ], [ %6, %3 ], !dbg !17514
  %12 = add i32 %11, -1, !dbg !17514
  store i32 %12, i32* %5, align 4, !dbg !17514
  %13 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17515
  %14 = bitcast i8* %13 to i32*, !dbg !17515
  %15 = load i32, i32* %14, align 4, !dbg !17515
  %16 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !17517
  %17 = bitcast i8* %16 to i32*, !dbg !17517
  %18 = load i32, i32* %17, align 4, !dbg !17517
  %19 = icmp ne i32 %15, %18, !dbg !17518
  %20 = icmp eq i32 %12, 0
  %21 = select i1 %19, i1 %20, i1 false, !dbg !17519
  br i1 %21, label %22, label %46, !dbg !17519

22:                                               ; preds = %10
  %23 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !17520
  %24 = bitcast i8* %23 to %struct.xLIST_ITEM*, !dbg !17520
  %25 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #20, !dbg !17525
  %26 = icmp eq i32 %25, 0, !dbg !17526
  br i1 %26, label %27, label %37, !dbg !17527

27:                                               ; preds = %22
  %28 = load i32, i32* %14, align 4, !dbg !17528
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %28, i32 0, !dbg !17528
  %30 = load i32, i32* %29, align 4, !dbg !17528
  %31 = icmp eq i32 %30, 0, !dbg !17528
  br i1 %31, label %32, label %37, !dbg !17532

32:                                               ; preds = %27
  %33 = shl nuw i32 1, %28, !dbg !17533
  %34 = xor i32 %33, -1, !dbg !17533
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17533
  %36 = and i32 %35, %34, !dbg !17533
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !17533
  br label %37, !dbg !17533

37:                                               ; preds = %22, %27, %32
  %38 = load i32, i32* %17, align 4, !dbg !17535
  store i32 %38, i32* %14, align 4, !dbg !17536
  %39 = sub i32 20, %38, !dbg !17537
  %40 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !17537
  %41 = bitcast i8* %40 to i32*, !dbg !17537
  store i32 %39, i32* %41, align 4, !dbg !17537
  %42 = shl nuw i32 1, %38, !dbg !17538
  %43 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17538
  %44 = or i32 %43, %42, !dbg !17538
  store volatile i32 %44, i32* @uxTopReadyPriority, align 4, !dbg !17538
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %38, !dbg !17538
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %45, %struct.xLIST_ITEM* noundef nonnull %24) #20, !dbg !17538
  call void @llvm.dbg.value(metadata i32 1, metadata !17503, metadata !DIExpression()), !dbg !17504
  br label %46, !dbg !17539

46:                                               ; preds = %1, %37, %10
  %47 = phi i32 [ 1, %37 ], [ 0, %10 ], [ 0, %1 ], !dbg !17504
  call void @llvm.dbg.value(metadata i32 %47, metadata !17503, metadata !DIExpression()), !dbg !17504
  ret i32 %47, !dbg !17540
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskList(i8* noundef %0) local_unnamed_addr #0 !dbg !17541 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !17545, metadata !DIExpression()), !dbg !17550
  %4 = bitcast i32* %2 to i8*, !dbg !17551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !17551
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17547, metadata !DIExpression()), !dbg !17552
  %5 = bitcast i32* %3 to i8*, !dbg !17551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !17551
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17548, metadata !DIExpression()), !dbg !17553
  store i8 0, i8* %0, align 1, !dbg !17554
  %6 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !17555
  store volatile i32 %6, i32* %2, align 4, !dbg !17556
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !17557
  %8 = shl i32 %7, 5, !dbg !17558
  %9 = tail call i8* @pvPortMalloc(i32 noundef %8) #20, !dbg !17559
  %10 = bitcast i8* %9 to %struct.xTASK_STATUS*, !dbg !17559
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %10, metadata !17546, metadata !DIExpression()), !dbg !17550
  %11 = icmp eq i8* %9, null, !dbg !17560
  br i1 %11, label %53, label %12, !dbg !17562

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %2, align 4, !dbg !17563
  %14 = tail call i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* noundef nonnull %10, i32 noundef %13, i32* noundef null) #22, !dbg !17565
  store volatile i32 %14, i32* %2, align 4, !dbg !17566
  store volatile i32 0, i32* %3, align 4, !dbg !17567
  call void @llvm.dbg.value(metadata i8* %0, metadata !17545, metadata !DIExpression()), !dbg !17550
  %15 = load volatile i32, i32* %3, align 4, !dbg !17569
  %16 = load volatile i32, i32* %2, align 4, !dbg !17571
  %17 = icmp ult i32 %15, %16, !dbg !17572
  br i1 %17, label %18, label %52, !dbg !17573

18:                                               ; preds = %12, %28
  %19 = phi i8* [ %46, %28 ], [ %0, %12 ]
  call void @llvm.dbg.value(metadata i8* %19, metadata !17545, metadata !DIExpression()), !dbg !17550
  %20 = load volatile i32, i32* %3, align 4, !dbg !17574
  %21 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %20, i32 3, !dbg !17576
  %22 = load i32, i32* %21, align 4, !dbg !17576
  %23 = add i32 %22, -1, !dbg !17577
  %24 = icmp ult i32 %23, 4, !dbg !17577
  br i1 %24, label %25, label %28, !dbg !17577

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.vTaskList, i32 0, i32 %23, !dbg !17577
  %27 = load i32, i32* %26, align 4, !dbg !17577
  br label %28, !dbg !17577

28:                                               ; preds = %18, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17549, metadata !DIExpression()), !dbg !17550
  %30 = load volatile i32, i32* %3, align 4, !dbg !17578
  %31 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %30, i32 1, !dbg !17579
  %32 = load i8*, i8** %31, align 4, !dbg !17579
  %33 = tail call fastcc i8* @prvWriteNameToBuffer(i8* noundef %19, i8* noundef %32) #22, !dbg !17580
  call void @llvm.dbg.value(metadata i8* %33, metadata !17545, metadata !DIExpression()), !dbg !17550
  %34 = load volatile i32, i32* %3, align 4, !dbg !17581
  %35 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %34, i32 4, !dbg !17582
  %36 = load i32, i32* %35, align 4, !dbg !17582
  %37 = load volatile i32, i32* %3, align 4, !dbg !17583
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %37, i32 7, !dbg !17584
  %39 = load i16, i16* %38, align 4, !dbg !17584
  %40 = zext i16 %39 to i32, !dbg !17585
  %41 = load volatile i32, i32* %3, align 4, !dbg !17586
  %42 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %41, i32 2, !dbg !17587
  %43 = load i32, i32* %42, align 4, !dbg !17587
  %44 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %33, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 noundef %29, i32 noundef %36, i32 noundef %40, i32 noundef %43) #20, !dbg !17588
  %45 = tail call i32 @strlen(i8* noundef %33) #20, !dbg !17589
  %46 = getelementptr inbounds i8, i8* %33, i32 %45, !dbg !17590
  call void @llvm.dbg.value(metadata i8* %46, metadata !17545, metadata !DIExpression()), !dbg !17550
  %47 = load volatile i32, i32* %3, align 4, !dbg !17591
  %48 = add i32 %47, 1, !dbg !17591
  store volatile i32 %48, i32* %3, align 4, !dbg !17591
  %49 = load volatile i32, i32* %3, align 4, !dbg !17569
  %50 = load volatile i32, i32* %2, align 4, !dbg !17571
  %51 = icmp ult i32 %49, %50, !dbg !17572
  br i1 %51, label %18, label %52, !dbg !17573, !llvm.loop !17592

52:                                               ; preds = %28, %12
  tail call void @vPortFree(i8* noundef nonnull %9) #20, !dbg !17594
  br label %53, !dbg !17595

53:                                               ; preds = %1, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !17596
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !17596
  ret void, !dbg !17596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prvWriteNameToBuffer(i8* noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !17597 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17601, metadata !DIExpression()), !dbg !17604
  call void @llvm.dbg.value(metadata i8* %1, metadata !17602, metadata !DIExpression()), !dbg !17604
  %3 = tail call i8* @strcpy(i8* noundef %0, i8* noundef %1) #20, !dbg !17605
  %4 = tail call i32 @strlen(i8* noundef %0) #20, !dbg !17606
  call void @llvm.dbg.value(metadata i32 %4, metadata !17603, metadata !DIExpression()), !dbg !17604
  %5 = icmp slt i32 %4, 5, !dbg !17608
  br i1 %5, label %6, label %11, !dbg !17610

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %9, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !17603, metadata !DIExpression()), !dbg !17604
  %8 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !17611
  store i8 32, i8* %8, align 1, !dbg !17613
  %9 = add i32 %7, 1, !dbg !17614
  call void @llvm.dbg.value(metadata i32 %9, metadata !17603, metadata !DIExpression()), !dbg !17604
  %10 = icmp eq i32 %9, 5, !dbg !17608
  br i1 %10, label %11, label %6, !dbg !17610, !llvm.loop !17615

11:                                               ; preds = %6, %2
  %12 = phi i32 [ %4, %2 ], [ 5, %6 ], !dbg !17617
  %13 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !17618
  store i8 0, i8* %13, align 1, !dbg !17619
  ret i8* %13, !dbg !17620
}

; Function Attrs: optsize
declare dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @strlen(i8* noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i8* @strcpy(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #7 !dbg !17621 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17624
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !17624
  %3 = load i32, i32* %2, align 4, !dbg !17624
  call void @llvm.dbg.value(metadata i32 %3, metadata !17623, metadata !DIExpression()), !dbg !17625
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17626
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !17626
  %6 = load i32, i32* %5, align 4, !dbg !17626
  %7 = sub i32 20, %6, !dbg !17626
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17626
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !17626
  store i32 %7, i32* %9, align 4, !dbg !17626
  ret i32 %3, !dbg !17627
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #7 !dbg !17628 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17630
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !17632
  br i1 %2, label %8, label %3, !dbg !17633

3:                                                ; preds = %0
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17634
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 9, !dbg !17636
  %6 = load i32, i32* %5, align 4, !dbg !17637
  %7 = add i32 %6, 1, !dbg !17637
  store i32 %7, i32* %5, align 4, !dbg !17637
  br label %8, !dbg !17638

8:                                                ; preds = %3, %0
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17639
  %10 = bitcast %struct.tskTaskControlBlock* %9 to i8*, !dbg !17639
  ret i8* %10, !dbg !17640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !17641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17645, metadata !DIExpression()), !dbg !17649
  call void @llvm.dbg.value(metadata i32 %1, metadata !17646, metadata !DIExpression()), !dbg !17649
  tail call void @vPortEnterCritical() #20, !dbg !17650
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17651
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, !dbg !17654
  %5 = load volatile i32, i32* %4, align 4, !dbg !17654
  %6 = icmp eq i32 %5, 0, !dbg !17655
  br i1 %6, label %7, label %33, !dbg !17656

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17657
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, !dbg !17659
  store volatile i32 1, i32* %9, align 4, !dbg !17660
  %10 = icmp eq i32 %1, 0, !dbg !17661
  br i1 %10, label %33, label %11, !dbg !17663

11:                                               ; preds = %7
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17664
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !17667
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #20, !dbg !17668
  %15 = icmp eq i32 %14, 0, !dbg !17669
  br i1 %15, label %16, label %24, !dbg !17670

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17671
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !17671
  %19 = load i32, i32* %18, align 4, !dbg !17671
  %20 = shl nuw i32 1, %19, !dbg !17671
  %21 = xor i32 %20, -1, !dbg !17671
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17671
  %23 = and i32 %22, %21, !dbg !17671
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !17671
  br label %24, !dbg !17673

24:                                               ; preds = %11, %16
  %25 = icmp eq i32 %1, -1, !dbg !17674
  br i1 %25, label %26, label %29, !dbg !17677

26:                                               ; preds = %24
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17678
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 1, !dbg !17680
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !17681
  br label %32, !dbg !17682

29:                                               ; preds = %24
  %30 = load volatile i32, i32* @xTickCount, align 4, !dbg !17683
  %31 = add i32 %30, %1, !dbg !17685
  call void @llvm.dbg.value(metadata i32 %31, metadata !17647, metadata !DIExpression()), !dbg !17649
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %31) #22, !dbg !17686
  br label %32

32:                                               ; preds = %29, %26
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !17687
  tail call void asm sideeffect "dsb", ""() #19, !dbg !17687, !srcloc !17689
  tail call void asm sideeffect "isb", ""() #19, !dbg !17687, !srcloc !17690
  br label %33, !dbg !17691

33:                                               ; preds = %2, %32, %7
  tail call void @vPortExitCritical() #20, !dbg !17692
  tail call void @vPortEnterCritical() #20, !dbg !17693
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17694
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 10, !dbg !17696
  %36 = load volatile i32, i32* %35, align 4, !dbg !17696
  call void @llvm.dbg.value(metadata i32 %36, metadata !17648, metadata !DIExpression()), !dbg !17649
  %37 = icmp eq i32 %36, 0, !dbg !17697
  br i1 %37, label %47, label %38, !dbg !17699

38:                                               ; preds = %33
  %39 = icmp eq i32 %0, 0, !dbg !17700
  %40 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17703
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %40, i32 0, i32 10, !dbg !17703
  br i1 %39, label %42, label %45, !dbg !17704

42:                                               ; preds = %38
  %43 = load volatile i32, i32* %41, align 4, !dbg !17705
  %44 = add i32 %43, -1, !dbg !17705
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %38 ]
  store volatile i32 %46, i32* %41, align 4, !dbg !17703
  br label %47, !dbg !17707

47:                                               ; preds = %45, %33
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17707
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 11, !dbg !17708
  store volatile i32 0, i32* %49, align 4, !dbg !17709
  tail call void @vPortExitCritical() #20, !dbg !17710
  ret i32 %36, !dbg !17711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !17712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17716, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata i32 %1, metadata !17717, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata i32* %2, metadata !17718, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata i32 %3, metadata !17719, metadata !DIExpression()), !dbg !17722
  tail call void @vPortEnterCritical() #20, !dbg !17723
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17724
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, !dbg !17727
  %7 = load volatile i32, i32* %6, align 4, !dbg !17727
  %8 = icmp eq i32 %7, 2, !dbg !17728
  br i1 %8, label %40, label %9, !dbg !17729

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !17730
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17732
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 10, !dbg !17733
  %13 = load volatile i32, i32* %12, align 4, !dbg !17734
  %14 = and i32 %13, %10, !dbg !17734
  store volatile i32 %14, i32* %12, align 4, !dbg !17734
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17735
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 11, !dbg !17736
  store volatile i32 1, i32* %16, align 4, !dbg !17737
  %17 = icmp eq i32 %3, 0, !dbg !17738
  br i1 %17, label %40, label %18, !dbg !17740

18:                                               ; preds = %9
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17741
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !17744
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #20, !dbg !17745
  %22 = icmp eq i32 %21, 0, !dbg !17746
  br i1 %22, label %23, label %31, !dbg !17747

23:                                               ; preds = %18
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17748
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 3, !dbg !17748
  %26 = load i32, i32* %25, align 4, !dbg !17748
  %27 = shl nuw i32 1, %26, !dbg !17748
  %28 = xor i32 %27, -1, !dbg !17748
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17748
  %30 = and i32 %29, %28, !dbg !17748
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !17748
  br label %31, !dbg !17750

31:                                               ; preds = %18, %23
  %32 = icmp eq i32 %3, -1, !dbg !17751
  br i1 %32, label %33, label %36, !dbg !17754

33:                                               ; preds = %31
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17755
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !17757
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %35) #20, !dbg !17758
  br label %39, !dbg !17759

36:                                               ; preds = %31
  %37 = load volatile i32, i32* @xTickCount, align 4, !dbg !17760
  %38 = add i32 %37, %3, !dbg !17762
  call void @llvm.dbg.value(metadata i32 %38, metadata !17720, metadata !DIExpression()), !dbg !17722
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %38) #22, !dbg !17763
  br label %39

39:                                               ; preds = %36, %33
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !17764
  tail call void asm sideeffect "dsb", ""() #19, !dbg !17764, !srcloc !17766
  tail call void asm sideeffect "isb", ""() #19, !dbg !17764, !srcloc !17767
  br label %40, !dbg !17768

40:                                               ; preds = %4, %39, %9
  tail call void @vPortExitCritical() #20, !dbg !17769
  tail call void @vPortEnterCritical() #20, !dbg !17770
  %41 = icmp eq i32* %2, null, !dbg !17771
  br i1 %41, label %46, label %42, !dbg !17774

42:                                               ; preds = %40
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17775
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %43, i32 0, i32 10, !dbg !17777
  %45 = load volatile i32, i32* %44, align 4, !dbg !17777
  store i32 %45, i32* %2, align 4, !dbg !17778
  br label %46, !dbg !17779

46:                                               ; preds = %42, %40
  %47 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17780
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %47, i32 0, i32 11, !dbg !17782
  %49 = load volatile i32, i32* %48, align 4, !dbg !17782
  %50 = icmp eq i32 %49, 1, !dbg !17783
  br i1 %50, label %57, label %51, !dbg !17784

51:                                               ; preds = %46
  %52 = xor i32 %1, -1, !dbg !17785
  %53 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17787
  %54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %53, i32 0, i32 10, !dbg !17788
  %55 = load volatile i32, i32* %54, align 4, !dbg !17789
  %56 = and i32 %55, %52, !dbg !17789
  store volatile i32 %56, i32* %54, align 4, !dbg !17789
  call void @llvm.dbg.value(metadata i32 1, metadata !17721, metadata !DIExpression()), !dbg !17722
  br label %57

57:                                               ; preds = %46, %51
  %58 = phi i32 [ 1, %51 ], [ 0, %46 ], !dbg !17790
  call void @llvm.dbg.value(metadata i32 %58, metadata !17721, metadata !DIExpression()), !dbg !17722
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17791
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 11, !dbg !17792
  store volatile i32 0, i32* %60, align 4, !dbg !17793
  tail call void @vPortExitCritical() #20, !dbg !17794
  ret i32 %58, !dbg !17795
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !17796 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17801, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i32 %1, metadata !17802, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i32 %2, metadata !17803, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i32 1, metadata !17806, metadata !DIExpression()), !dbg !17807
  %4 = icmp eq i8* %0, null, !dbg !17808
  br i1 %4, label %5, label %6, !dbg !17810

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 4049) #20, !dbg !17811
  br label %6, !dbg !17811

6:                                                ; preds = %5, %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !17804, metadata !DIExpression()), !dbg !17807
  tail call void @vPortEnterCritical() #20, !dbg !17813
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !17814
  %8 = bitcast i8* %7 to i32*, !dbg !17814
  %9 = load volatile i32, i32* %8, align 4, !dbg !17814
  call void @llvm.dbg.value(metadata i32 %9, metadata !17805, metadata !DIExpression()), !dbg !17807
  store volatile i32 2, i32* %8, align 4, !dbg !17816
  switch i32 %2, label %28 [
    i32 1, label %10
    i32 2, label %15
    i32 3, label %20
    i32 4, label %23
  ], !dbg !17817

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %0, metadata !17804, metadata !DIExpression()), !dbg !17807
  %11 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17818
  %12 = bitcast i8* %11 to i32*, !dbg !17818
  %13 = load volatile i32, i32* %12, align 4, !dbg !17820
  %14 = or i32 %13, %1, !dbg !17820
  store volatile i32 %14, i32* %12, align 4, !dbg !17820
  br label %28, !dbg !17821

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17822
  %17 = bitcast i8* %16 to i32*, !dbg !17822
  %18 = load volatile i32, i32* %17, align 4, !dbg !17823
  %19 = add i32 %18, 1, !dbg !17823
  store volatile i32 %19, i32* %17, align 4, !dbg !17823
  br label %28, !dbg !17824

20:                                               ; preds = %6
  %21 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17825
  %22 = bitcast i8* %21 to i32*, !dbg !17825
  store volatile i32 %1, i32* %22, align 4, !dbg !17826
  br label %28, !dbg !17827

23:                                               ; preds = %6
  %24 = icmp eq i32 %9, 2, !dbg !17828
  br i1 %24, label %53, label %25, !dbg !17830

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17831
  %27 = bitcast i8* %26 to i32*, !dbg !17831
  store volatile i32 %1, i32* %27, align 4, !dbg !17833
  br label %28, !dbg !17834

28:                                               ; preds = %25, %6, %20, %15, %10
  call void @llvm.dbg.value(metadata i32 1, metadata !17806, metadata !DIExpression()), !dbg !17807
  %29 = icmp eq i32 %9, 1, !dbg !17835
  br i1 %29, label %30, label %53, !dbg !17837

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !17838
  %32 = bitcast i8* %31 to %struct.xLIST_ITEM*, !dbg !17838
  %33 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %32) #20, !dbg !17840
  %34 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17841
  %35 = bitcast i8* %34 to i32*, !dbg !17841
  %36 = load i32, i32* %35, align 4, !dbg !17841
  %37 = shl nuw i32 1, %36, !dbg !17841
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17841
  %39 = or i32 %38, %37, !dbg !17841
  store volatile i32 %39, i32* @uxTopReadyPriority, align 4, !dbg !17841
  %40 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %36, !dbg !17841
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %40, %struct.xLIST_ITEM* noundef nonnull %32) #20, !dbg !17841
  %41 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !17842
  %42 = bitcast i8* %41 to i8**, !dbg !17842
  %43 = load i8*, i8** %42, align 4, !dbg !17842
  %44 = icmp eq i8* %43, null, !dbg !17842
  br i1 %44, label %46, label %45, !dbg !17844

45:                                               ; preds = %30
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 4099) #20, !dbg !17845
  br label %46, !dbg !17845

46:                                               ; preds = %45, %30
  %47 = load i32, i32* %35, align 4, !dbg !17847
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17849
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 3, !dbg !17850
  %50 = load i32, i32* %49, align 4, !dbg !17850
  %51 = icmp ugt i32 %47, %50, !dbg !17851
  br i1 %51, label %52, label %53, !dbg !17852

52:                                               ; preds = %46
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !17853
  tail call void asm sideeffect "dsb", ""() #19, !dbg !17853, !srcloc !17856
  tail call void asm sideeffect "isb", ""() #19, !dbg !17853, !srcloc !17857
  br label %53, !dbg !17858

53:                                               ; preds = %23, %28, %52, %46
  %54 = phi i32 [ 1, %28 ], [ 1, %52 ], [ 1, %46 ], [ 0, %23 ]
  tail call void @vPortExitCritical() #20, !dbg !17859
  ret i32 %54, !dbg !17860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #0 !dbg !17861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17866, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i32 %1, metadata !17867, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i32 %2, metadata !17868, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i32* %3, metadata !17869, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i32 1, metadata !17872, metadata !DIExpression()), !dbg !17874
  %5 = icmp eq i8* %0, null, !dbg !17875
  br i1 %5, label %6, label %7, !dbg !17877

6:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 4134) #20, !dbg !17878
  br label %7, !dbg !17878

7:                                                ; preds = %6, %4
  tail call void @vPortValidateInterruptPriority() #20, !dbg !17880
  call void @llvm.dbg.value(metadata i8* %0, metadata !17870, metadata !DIExpression()), !dbg !17874
  %8 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !17881, !srcloc !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()) #19, !dbg !17883
  call void @llvm.dbg.value(metadata i32 undef, metadata !16492, metadata !DIExpression()) #19, !dbg !17883
  call void @llvm.dbg.value(metadata i32 undef, metadata !17873, metadata !DIExpression()), !dbg !17874
  %9 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !17884
  %10 = bitcast i8* %9 to i32*, !dbg !17884
  %11 = load volatile i32, i32* %10, align 4, !dbg !17884
  call void @llvm.dbg.value(metadata i32 %11, metadata !17871, metadata !DIExpression()), !dbg !17874
  store volatile i32 2, i32* %10, align 4, !dbg !17886
  switch i32 %2, label %30 [
    i32 1, label %12
    i32 2, label %17
    i32 3, label %22
    i32 4, label %25
  ], !dbg !17887

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !17870, metadata !DIExpression()), !dbg !17874
  %13 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17888
  %14 = bitcast i8* %13 to i32*, !dbg !17888
  %15 = load volatile i32, i32* %14, align 4, !dbg !17890
  %16 = or i32 %15, %1, !dbg !17890
  store volatile i32 %16, i32* %14, align 4, !dbg !17890
  br label %30, !dbg !17891

17:                                               ; preds = %7
  %18 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17892
  %19 = bitcast i8* %18 to i32*, !dbg !17892
  %20 = load volatile i32, i32* %19, align 4, !dbg !17893
  %21 = add i32 %20, 1, !dbg !17893
  store volatile i32 %21, i32* %19, align 4, !dbg !17893
  br label %30, !dbg !17894

22:                                               ; preds = %7
  %23 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17895
  %24 = bitcast i8* %23 to i32*, !dbg !17895
  store volatile i32 %1, i32* %24, align 4, !dbg !17896
  br label %30, !dbg !17897

25:                                               ; preds = %7
  %26 = icmp eq i32 %11, 2, !dbg !17898
  br i1 %26, label %66, label %27, !dbg !17900

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17901
  %29 = bitcast i8* %28 to i32*, !dbg !17901
  store volatile i32 %1, i32* %29, align 4, !dbg !17903
  br label %30, !dbg !17904

30:                                               ; preds = %27, %7, %22, %17, %12
  call void @llvm.dbg.value(metadata i32 1, metadata !17872, metadata !DIExpression()), !dbg !17874
  %31 = icmp eq i32 %11, 1, !dbg !17905
  br i1 %31, label %32, label %66, !dbg !17907

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !17908
  %34 = bitcast i8* %33 to %struct.xLIST_ITEM*, !dbg !17908
  %35 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !17908
  %36 = bitcast i8* %35 to i8**, !dbg !17908
  %37 = load i8*, i8** %36, align 4, !dbg !17908
  %38 = icmp eq i8* %37, null, !dbg !17908
  br i1 %38, label %40, label %39, !dbg !17911

39:                                               ; preds = %32
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 4200) #20, !dbg !17912
  br label %40, !dbg !17912

40:                                               ; preds = %39, %32
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !17914
  %42 = icmp eq i32 %41, 0, !dbg !17916
  br i1 %42, label %43, label %54, !dbg !17917

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !17918
  %45 = bitcast i8* %44 to %struct.xLIST_ITEM*, !dbg !17918
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #20, !dbg !17920
  %47 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17921
  %48 = bitcast i8* %47 to i32*, !dbg !17921
  %49 = load i32, i32* %48, align 4, !dbg !17921
  %50 = shl nuw i32 1, %49, !dbg !17921
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17921
  %52 = or i32 %51, %50, !dbg !17921
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !17921
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !17921
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %45) #20, !dbg !17921
  br label %55, !dbg !17922

54:                                               ; preds = %40
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %34) #20, !dbg !17923
  br label %55

55:                                               ; preds = %54, %43
  %56 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17925
  %57 = bitcast i8* %56 to i32*, !dbg !17925
  %58 = load i32, i32* %57, align 4, !dbg !17925
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17927
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 3, !dbg !17928
  %61 = load i32, i32* %60, align 4, !dbg !17928
  %62 = icmp ugt i32 %58, %61, !dbg !17929
  %63 = icmp ne i32* %3, null
  %64 = and i1 %63, %62, !dbg !17930
  br i1 %64, label %65, label %66, !dbg !17930

65:                                               ; preds = %55
  store i32 1, i32* %3, align 4, !dbg !17931
  br label %66, !dbg !17935

66:                                               ; preds = %25, %65, %55, %30
  %67 = phi i32 [ 1, %65 ], [ 1, %55 ], [ 1, %30 ], [ 0, %25 ]
  %68 = extractvalue { i32, i32 } %8, 0, !dbg !17881
  call void @llvm.dbg.value(metadata i32 %68, metadata !16491, metadata !DIExpression()) #19, !dbg !17883
  call void @llvm.dbg.value(metadata i32 %68, metadata !17873, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i32 undef, metadata !16499, metadata !DIExpression()) #19, !dbg !17936
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %68) #19, !dbg !17938, !srcloc !16505
  ret i32 %67, !dbg !17939
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !17940 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17944, metadata !DIExpression()), !dbg !17949
  call void @llvm.dbg.value(metadata i32* %1, metadata !17945, metadata !DIExpression()), !dbg !17949
  %3 = icmp eq i8* %0, null, !dbg !17950
  br i1 %3, label %4, label %5, !dbg !17952

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 4245) #20, !dbg !17953
  br label %5, !dbg !17953

5:                                                ; preds = %4, %2
  tail call void @vPortValidateInterruptPriority() #20, !dbg !17955
  call void @llvm.dbg.value(metadata i8* %0, metadata !17946, metadata !DIExpression()), !dbg !17949
  %6 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !17956, !srcloc !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()) #19, !dbg !17958
  call void @llvm.dbg.value(metadata i32 undef, metadata !16492, metadata !DIExpression()) #19, !dbg !17958
  call void @llvm.dbg.value(metadata i32 undef, metadata !17948, metadata !DIExpression()), !dbg !17949
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !17959
  %8 = bitcast i8* %7 to i32*, !dbg !17959
  %9 = load volatile i32, i32* %8, align 4, !dbg !17959
  call void @llvm.dbg.value(metadata i32 %9, metadata !17947, metadata !DIExpression()), !dbg !17949
  store volatile i32 2, i32* %8, align 4, !dbg !17961
  %10 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !17962
  %11 = bitcast i8* %10 to i32*, !dbg !17962
  %12 = load volatile i32, i32* %11, align 4, !dbg !17963
  %13 = add i32 %12, 1, !dbg !17963
  store volatile i32 %13, i32* %11, align 4, !dbg !17963
  %14 = icmp eq i32 %9, 1, !dbg !17964
  br i1 %14, label %15, label %49, !dbg !17966

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !17967
  %17 = bitcast i8* %16 to %struct.xLIST_ITEM*, !dbg !17967
  %18 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !17967
  %19 = bitcast i8* %18 to i8**, !dbg !17967
  %20 = load i8*, i8** %19, align 4, !dbg !17967
  %21 = icmp eq i8* %20, null, !dbg !17967
  br i1 %21, label %23, label %22, !dbg !17970

22:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 4281) #20, !dbg !17971
  br label %23, !dbg !17971

23:                                               ; preds = %22, %15
  %24 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !17973
  %25 = icmp eq i32 %24, 0, !dbg !17975
  br i1 %25, label %26, label %37, !dbg !17976

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !17977
  %28 = bitcast i8* %27 to %struct.xLIST_ITEM*, !dbg !17977
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !17979
  %30 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17980
  %31 = bitcast i8* %30 to i32*, !dbg !17980
  %32 = load i32, i32* %31, align 4, !dbg !17980
  %33 = shl nuw i32 1, %32, !dbg !17980
  %34 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !17980
  %35 = or i32 %34, %33, !dbg !17980
  store volatile i32 %35, i32* @uxTopReadyPriority, align 4, !dbg !17980
  %36 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !17980
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %36, %struct.xLIST_ITEM* noundef nonnull %28) #20, !dbg !17980
  br label %38, !dbg !17981

37:                                               ; preds = %23
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %17) #20, !dbg !17982
  br label %38

38:                                               ; preds = %37, %26
  %39 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17984
  %40 = bitcast i8* %39 to i32*, !dbg !17984
  %41 = load i32, i32* %40, align 4, !dbg !17984
  %42 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !17986
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %42, i32 0, i32 3, !dbg !17987
  %44 = load i32, i32* %43, align 4, !dbg !17987
  %45 = icmp ugt i32 %41, %44, !dbg !17988
  %46 = icmp ne i32* %1, null
  %47 = and i1 %46, %45, !dbg !17989
  br i1 %47, label %48, label %49, !dbg !17989

48:                                               ; preds = %38
  store i32 1, i32* %1, align 4, !dbg !17990
  br label %49, !dbg !17994

49:                                               ; preds = %48, %38, %5
  %50 = extractvalue { i32, i32 } %6, 0, !dbg !17956
  call void @llvm.dbg.value(metadata i32 %50, metadata !16491, metadata !DIExpression()) #19, !dbg !17958
  call void @llvm.dbg.value(metadata i32 %50, metadata !17948, metadata !DIExpression()), !dbg !17949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16499, metadata !DIExpression()) #19, !dbg !17995
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %50) #19, !dbg !17997, !srcloc !16505
  ret void, !dbg !17998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetBottomOfStack(i8* noundef readonly %0) local_unnamed_addr #7 !dbg !17999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18001, metadata !DIExpression()), !dbg !18003
  %2 = icmp eq i8* %0, null, !dbg !18004
  br i1 %2, label %3, label %5, !dbg !18005

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !18006
  br label %7, !dbg !18005

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !18007
  br label %7, !dbg !18005

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !18005
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !18002, metadata !DIExpression()), !dbg !18003
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !18008
  %10 = load i32*, i32** %9, align 4, !dbg !18008
  %11 = ptrtoint i32* %10 to i32, !dbg !18009
  ret i32 %11, !dbg !18010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #4 !dbg !18011 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !18016, metadata !DIExpression()), !dbg !18017
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !18018
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !18019
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !18020
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !18020
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !18021
  store i32 -1, i32* %5, align 4, !dbg !18022
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !18023
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !18024
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !18024
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !18025
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !18026
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !18026
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !18027
  store i32 0, i32* %10, align 4, !dbg !18028
  ret void, !dbg !18029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !18030 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !18035, metadata !DIExpression()), !dbg !18036
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !18037
  store i8* null, i8** %2, align 4, !dbg !18038
  ret void, !dbg !18039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #14 !dbg !18040 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !18044, metadata !DIExpression()), !dbg !18047
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !18045, metadata !DIExpression()), !dbg !18047
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !18048
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !18048
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !18046, metadata !DIExpression()), !dbg !18047
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !18049
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !18050
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !18051
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !18051
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !18052
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !18053
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !18054
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !18055
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !18056
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !18057
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !18058
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !18059
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !18059
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !18060
  %14 = load i32, i32* %13, align 4, !dbg !18061
  %15 = add i32 %14, 1, !dbg !18061
  store i32 %15, i32* %13, align 4, !dbg !18061
  ret void, !dbg !18062
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #13 !dbg !18063 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !18065, metadata !DIExpression()), !dbg !18069
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !18066, metadata !DIExpression()), !dbg !18069
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !18070
  %4 = load i32, i32* %3, align 4, !dbg !18070
  call void @llvm.dbg.value(metadata i32 %4, metadata !18068, metadata !DIExpression()), !dbg !18069
  %5 = icmp eq i32 %4, -1, !dbg !18071
  br i1 %5, label %6, label %11, !dbg !18073

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !18074
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !18074
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !18067, metadata !DIExpression()), !dbg !18069
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %9, align 4, !dbg !18076
  br label %21, !dbg !18077

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !18078
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !18081
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !18067, metadata !DIExpression()), !dbg !18069
  br label %14, !dbg !18082

14:                                               ; preds = %14, %11
  %15 = phi %struct.xLIST_ITEM* [ %13, %11 ], [ %17, %14 ], !dbg !18083
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %15, metadata !18067, metadata !DIExpression()), !dbg !18069
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 1, !dbg !18084
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !18084
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 0, !dbg !18086
  %19 = load i32, i32* %18, align 4, !dbg !18086
  %20 = icmp ugt i32 %19, %4, !dbg !18087
  br i1 %20, label %21, label %14, !dbg !18088, !llvm.loop !18089

21:                                               ; preds = %14, %6
  %22 = phi %struct.xLIST_ITEM* [ %10, %6 ], [ %17, %14 ], !dbg !18076
  %23 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %15, %14 ], !dbg !18091
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %23, metadata !18067, metadata !DIExpression()), !dbg !18069
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %23, i32 0, i32 1, !dbg !18076
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !18092
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %25, align 4, !dbg !18093
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !18094
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %26, align 4, !dbg !18095
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !18096
  store %struct.xLIST_ITEM* %23, %struct.xLIST_ITEM** %27, align 4, !dbg !18097
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !18098
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !18099
  %29 = bitcast i8** %28 to %struct.xLIST**, !dbg !18100
  store %struct.xLIST* %0, %struct.xLIST** %29, align 4, !dbg !18100
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !18101
  %31 = load i32, i32* %30, align 4, !dbg !18102
  %32 = add i32 %31, 1, !dbg !18102
  store i32 %32, i32* %30, align 4, !dbg !18102
  ret void, !dbg !18103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #14 !dbg !18104 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !18108, metadata !DIExpression()), !dbg !18110
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !18111
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !18111
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !18111
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !18109, metadata !DIExpression()), !dbg !18110
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !18112
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !18112
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !18113
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !18113
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !18114
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !18115
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !18116
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !18117
  %12 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !18118
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !18119
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !18120
  %14 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %13, align 4, !dbg !18120
  %15 = icmp eq %struct.xLIST_ITEM* %14, %0, !dbg !18122
  br i1 %15, label %16, label %18, !dbg !18123

16:                                               ; preds = %1
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !18124
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %13, align 4, !dbg !18126
  br label %18, !dbg !18127

18:                                               ; preds = %1, %16
  store i8* null, i8** %2, align 4, !dbg !18128
  %19 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !18129
  %20 = load i32, i32* %19, align 4, !dbg !18130
  %21 = add i32 %20, -1, !dbg !18130
  store i32 %21, i32* %19, align 4, !dbg !18130
  ret i32 %21, !dbg !18131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReset(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !18132 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18136, metadata !DIExpression()), !dbg !18140
  call void @llvm.dbg.value(metadata i32 %1, metadata !18137, metadata !DIExpression()), !dbg !18140
  call void @llvm.dbg.value(metadata i8* %0, metadata !18138, metadata !DIExpression()), !dbg !18140
  %3 = icmp eq i8* %0, null, !dbg !18141
  br i1 %3, label %4, label %5, !dbg !18143

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 264) #20, !dbg !18144
  br label %5, !dbg !18144

5:                                                ; preds = %4, %2
  tail call void @vPortEnterCritical() #20, !dbg !18146
  %6 = bitcast i8* %0 to i8**, !dbg !18147
  %7 = load i8*, i8** %6, align 4, !dbg !18147
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !18149
  %9 = bitcast i8* %8 to i32*, !dbg !18149
  %10 = load i32, i32* %9, align 4, !dbg !18149
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !18150
  %12 = bitcast i8* %11 to i32*, !dbg !18150
  %13 = load i32, i32* %12, align 4, !dbg !18150
  %14 = mul i32 %13, %10, !dbg !18151
  %15 = getelementptr inbounds i8, i8* %7, i32 %14, !dbg !18152
  %16 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !18153
  %17 = bitcast i8* %16 to i8**, !dbg !18153
  store i8* %15, i8** %17, align 4, !dbg !18154
  %18 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !18155
  %19 = bitcast i8* %18 to i32*, !dbg !18155
  store volatile i32 0, i32* %19, align 4, !dbg !18156
  %20 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !18157
  %21 = bitcast i8* %20 to i8**, !dbg !18157
  store i8* %7, i8** %21, align 4, !dbg !18158
  %22 = add i32 %10, -1, !dbg !18159
  %23 = mul i32 %22, %13, !dbg !18160
  %24 = getelementptr inbounds i8, i8* %7, i32 %23, !dbg !18161
  %25 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !18162
  %26 = bitcast i8* %25 to i8**, !dbg !18163
  store i8* %24, i8** %26, align 4, !dbg !18164
  %27 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !18165
  %28 = bitcast i8* %27 to i32*, !dbg !18165
  store volatile i32 -1, i32* %28, align 4, !dbg !18166
  %29 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !18167
  %30 = bitcast i8* %29 to i32*, !dbg !18167
  store volatile i32 -1, i32* %30, align 4, !dbg !18168
  %31 = icmp eq i32 %1, 0, !dbg !18169
  %32 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !18171
  br i1 %31, label %33, label %42, !dbg !18172

33:                                               ; preds = %5
  %34 = bitcast i8* %32 to i32*, !dbg !18173
  %35 = load i32, i32* %34, align 4, !dbg !18173
  %36 = icmp eq i32 %35, 0, !dbg !18173
  br i1 %36, label %46, label %37, !dbg !18176

37:                                               ; preds = %33
  %38 = bitcast i8* %32 to %struct.xLIST*, !dbg !18173
  %39 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %38) #20, !dbg !18177
  %40 = icmp eq i32 %39, 1, !dbg !18180
  br i1 %40, label %41, label %46, !dbg !18181

41:                                               ; preds = %37
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !18182
  tail call void asm sideeffect "dsb", ""() #19, !dbg !18182, !srcloc !18185
  tail call void asm sideeffect "isb", ""() #19, !dbg !18182, !srcloc !18186
  br label %46, !dbg !18187

42:                                               ; preds = %5
  %43 = bitcast i8* %32 to %struct.xLIST*, !dbg !18188
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %43) #20, !dbg !18190
  %44 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !18191
  %45 = bitcast i8* %44 to %struct.xLIST*, !dbg !18191
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %45) #20, !dbg !18192
  br label %46

46:                                               ; preds = %37, %41, %33, %42
  tail call void @vPortExitCritical() #20, !dbg !18193
  ret i32 1, !dbg !18194
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !18195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18199, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.value(metadata i32 %1, metadata !18200, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.value(metadata i8 %2, metadata !18201, metadata !DIExpression()), !dbg !18206
  call void @llvm.dbg.value(metadata i8* null, metadata !18204, metadata !DIExpression()), !dbg !18206
  %4 = icmp eq i32 %0, 0, !dbg !18207
  br i1 %4, label %5, label %6, !dbg !18209

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 324) #20, !dbg !18210
  br label %6, !dbg !18210

6:                                                ; preds = %5, %3
  %7 = icmp eq i32 %1, 0, !dbg !18212
  %8 = mul i32 %1, %0, !dbg !18214
  %9 = add i32 %8, 85, !dbg !18214
  %10 = select i1 %7, i32 84, i32 %9, !dbg !18214
  call void @llvm.dbg.value(metadata i32 undef, metadata !18203, metadata !DIExpression()), !dbg !18206
  %11 = tail call i8* @pvPortMalloc(i32 noundef %10) #20, !dbg !18215
  call void @llvm.dbg.value(metadata i8* %11, metadata !18205, metadata !DIExpression()), !dbg !18206
  %12 = icmp eq i8* %11, null, !dbg !18216
  br i1 %12, label %23, label %13, !dbg !18218

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !18202, metadata !DIExpression()), !dbg !18206
  %14 = select i1 %7, i32 0, i32 84, !dbg !18219
  %15 = getelementptr i8, i8* %11, i32 %14, !dbg !18219
  %16 = bitcast i8* %11 to i8**, !dbg !18221
  store i8* %15, i8** %16, align 4, !dbg !18221
  %17 = getelementptr inbounds i8, i8* %11, i32 60, !dbg !18223
  %18 = bitcast i8* %17 to i32*, !dbg !18223
  store i32 %0, i32* %18, align 4, !dbg !18224
  %19 = getelementptr inbounds i8, i8* %11, i32 64, !dbg !18225
  %20 = bitcast i8* %19 to i32*, !dbg !18225
  store i32 %1, i32* %20, align 4, !dbg !18226
  %21 = tail call i32 @xQueueGenericReset(i8* noundef nonnull %11, i32 noundef 1) #22, !dbg !18227
  %22 = getelementptr inbounds i8, i8* %11, i32 80, !dbg !18228
  store i8 %2, i8* %22, align 4, !dbg !18230
  call void @llvm.dbg.value(metadata i8* %11, metadata !18204, metadata !DIExpression()), !dbg !18206
  br label %24, !dbg !18231

23:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !18204, metadata !DIExpression()), !dbg !18206
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 386) #20, !dbg !18232
  br label %24, !dbg !18232

24:                                               ; preds = %13, %23
  ret i8* %11, !dbg !18235
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateMutex(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !18236 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !18240, metadata !DIExpression()), !dbg !18242
  %2 = tail call i8* @pvPortMalloc(i32 noundef 84) #20, !dbg !18243
  call void @llvm.dbg.value(metadata i8* %2, metadata !18241, metadata !DIExpression()), !dbg !18242
  %3 = icmp eq i8* %2, null, !dbg !18244
  br i1 %3, label %28, label %4, !dbg !18244

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !18241, metadata !DIExpression()), !dbg !18242
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !18245
  %6 = bitcast i8* %5 to i8**, !dbg !18245
  store i8* null, i8** %6, align 4, !dbg !18248
  %7 = bitcast i8* %2 to i8**, !dbg !18249
  store i8* null, i8** %7, align 4, !dbg !18250
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !18251
  %9 = bitcast i8* %8 to i8**, !dbg !18251
  store i8* null, i8** %9, align 4, !dbg !18252
  %10 = getelementptr inbounds i8, i8* %2, i32 12, !dbg !18253
  %11 = bitcast i8* %10 to i8**, !dbg !18254
  store i8* null, i8** %11, align 4, !dbg !18255
  %12 = getelementptr inbounds i8, i8* %2, i32 56, !dbg !18256
  %13 = bitcast i8* %12 to i32*, !dbg !18256
  store volatile i32 0, i32* %13, align 4, !dbg !18257
  %14 = getelementptr inbounds i8, i8* %2, i32 60, !dbg !18258
  %15 = bitcast i8* %14 to i32*, !dbg !18258
  store i32 1, i32* %15, align 4, !dbg !18259
  %16 = getelementptr inbounds i8, i8* %2, i32 64, !dbg !18260
  %17 = bitcast i8* %16 to i32*, !dbg !18260
  store i32 0, i32* %17, align 4, !dbg !18261
  %18 = getelementptr inbounds i8, i8* %2, i32 68, !dbg !18262
  %19 = bitcast i8* %18 to i32*, !dbg !18262
  store volatile i32 -1, i32* %19, align 4, !dbg !18263
  %20 = getelementptr inbounds i8, i8* %2, i32 72, !dbg !18264
  %21 = bitcast i8* %20 to i32*, !dbg !18264
  store volatile i32 -1, i32* %21, align 4, !dbg !18265
  %22 = getelementptr inbounds i8, i8* %2, i32 80, !dbg !18266
  store i8 %0, i8* %22, align 4, !dbg !18268
  %23 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !18269
  %24 = bitcast i8* %23 to %struct.xLIST*, !dbg !18269
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %24) #20, !dbg !18270
  %25 = getelementptr inbounds i8, i8* %2, i32 36, !dbg !18271
  %26 = bitcast i8* %25 to %struct.xLIST*, !dbg !18271
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %26) #20, !dbg !18272
  %27 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %2, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !18273
  br label %29, !dbg !18274

28:                                               ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 450) #20, !dbg !18275
  br label %29, !dbg !18275

29:                                               ; preds = %4, %28
  ret i8* %2, !dbg !18278
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSend(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !18279 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.gpio_backup_restore_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !18285, metadata !DIExpression()), !dbg !18298
  call void @llvm.dbg.value(metadata i8* %1, metadata !18286, metadata !DIExpression()), !dbg !18298
  call void @llvm.dbg.value(metadata i32 %2, metadata !18287, metadata !DIExpression()), !dbg !18298
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !18288, metadata !DIExpression()), !dbg !18298
  call void @llvm.dbg.value(metadata i32 0, metadata !18289, metadata !DIExpression()), !dbg !18298
  %7 = bitcast %struct.gpio_backup_restore_t* %6 to i8*, !dbg !18299
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19, !dbg !18299
  call void @llvm.dbg.declare(metadata %struct.gpio_backup_restore_t* %6, metadata !18291, metadata !DIExpression()), !dbg !18300
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !18301
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !18297, metadata !DIExpression()), !dbg !18298
  %9 = icmp eq i8* %0, null, !dbg !18302
  br i1 %9, label %10, label %11, !dbg !18304

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 619) #20, !dbg !18305
  br label %11, !dbg !18305

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !18307
  br i1 %12, label %13, label %19, !dbg !18307

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !18307
  %15 = bitcast i8* %14 to i32*, !dbg !18307
  %16 = load i32, i32* %15, align 4, !dbg !18307
  %17 = icmp eq i32 %16, 0, !dbg !18307
  br i1 %17, label %19, label %18, !dbg !18309

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 620) #20, !dbg !18310
  br label %19, !dbg !18310

19:                                               ; preds = %11, %18, %13
  %20 = icmp eq i32 %3, 2, !dbg !18312
  br i1 %20, label %21, label %27, !dbg !18312

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !18312
  %23 = bitcast i8* %22 to i32*, !dbg !18312
  %24 = load i32, i32* %23, align 4, !dbg !18312
  %25 = icmp eq i32 %24, 1, !dbg !18312
  br i1 %25, label %27, label %26, !dbg !18314

26:                                               ; preds = %21
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 621) #20, !dbg !18315
  br label %27, !dbg !18315

27:                                               ; preds = %19, %26, %21
  %28 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !18317
  %29 = icmp eq i32 %28, 0, !dbg !18317
  call void @llvm.dbg.value(metadata i32 %2, metadata !18287, metadata !DIExpression()), !dbg !18298
  %30 = icmp ne i32 %2, 0, !dbg !18317
  %31 = and i1 %29, %30, !dbg !18317
  br i1 %31, label %32, label %33, !dbg !18320

32:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 624) #20, !dbg !18321
  br label %33, !dbg !18321

33:                                               ; preds = %32, %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !18289, metadata !DIExpression()), !dbg !18298
  call void @vPortEnterCritical() #20, !dbg !18323
  %34 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !18327
  %35 = bitcast i8* %34 to i32*, !dbg !18327
  %36 = load volatile i32, i32* %35, align 4, !dbg !18327
  %37 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !18330
  %38 = bitcast i8* %37 to i32*, !dbg !18330
  %39 = load i32, i32* %38, align 4, !dbg !18330
  %40 = icmp ult i32 %36, %39, !dbg !18331
  %41 = or i1 %20, %40, !dbg !18332
  br i1 %41, label %50, label %42, !dbg !18332

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %0, i32 68
  %44 = bitcast i8* %43 to i32*
  %45 = getelementptr inbounds i8, i8* %0, i32 72
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %0, i32 16
  %48 = bitcast i8* %47 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !18287, metadata !DIExpression()), !dbg !18298
  %49 = icmp eq i32 %2, 0, !dbg !18333
  br i1 %49, label %65, label %66, !dbg !18336

50:                                               ; preds = %90, %33
  %51 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1, i32 noundef %3) #22, !dbg !18337
  call void @llvm.dbg.value(metadata i32 %51, metadata !18290, metadata !DIExpression()), !dbg !18298
  %52 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !18339
  %53 = bitcast i8* %52 to i32*, !dbg !18339
  %54 = load i32, i32* %53, align 4, !dbg !18339
  %55 = icmp eq i32 %54, 0, !dbg !18339
  br i1 %55, label %61, label %56, !dbg !18342

56:                                               ; preds = %50
  %57 = bitcast i8* %52 to %struct.xLIST*, !dbg !18339
  %58 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %57) #20, !dbg !18343
  %59 = icmp eq i32 %58, 1, !dbg !18346
  br i1 %59, label %60, label %64, !dbg !18347

60:                                               ; preds = %56
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !18348
  call void asm sideeffect "dsb", ""() #19, !dbg !18348, !srcloc !18351
  call void asm sideeffect "isb", ""() #19, !dbg !18348, !srcloc !18352
  br label %64, !dbg !18353

61:                                               ; preds = %50
  %62 = icmp eq i32 %51, 0, !dbg !18354
  br i1 %62, label %64, label %63, !dbg !18356

63:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !18357
  call void asm sideeffect "dsb", ""() #19, !dbg !18357, !srcloc !18360
  call void asm sideeffect "isb", ""() #19, !dbg !18357, !srcloc !18361
  br label %64, !dbg !18362

64:                                               ; preds = %63, %61, %60, %56
  call void @vPortExitCritical() #20, !dbg !18363
  br label %97, !dbg !18364

65:                                               ; preds = %94, %42
  call void @vPortExitCritical() #20, !dbg !18365
  br label %97, !dbg !18367

66:                                               ; preds = %42
  call void @vTaskSetTimeOutState(%struct.gpio_backup_restore_t* noundef nonnull %6) #20, !dbg !18368
  call void @llvm.dbg.value(metadata i32 1, metadata !18289, metadata !DIExpression()), !dbg !18298
  br label %67, !dbg !18371

67:                                               ; preds = %94, %66
  call void @llvm.dbg.value(metadata i32 1, metadata !18289, metadata !DIExpression()), !dbg !18298
  call void @vPortExitCritical() #20, !dbg !18372
  call void @vTaskSuspendAll() #20, !dbg !18373
  call void @vPortEnterCritical() #20, !dbg !18374
  %68 = load volatile i32, i32* %44, align 4, !dbg !18375
  %69 = icmp eq i32 %68, -1, !dbg !18375
  br i1 %69, label %70, label %71, !dbg !18378

70:                                               ; preds = %67
  store volatile i32 0, i32* %44, align 4, !dbg !18379
  br label %71, !dbg !18379

71:                                               ; preds = %70, %67
  %72 = load volatile i32, i32* %46, align 4, !dbg !18381
  %73 = icmp eq i32 %72, -1, !dbg !18381
  br i1 %73, label %74, label %75, !dbg !18378

74:                                               ; preds = %71
  store volatile i32 0, i32* %46, align 4, !dbg !18383
  br label %75, !dbg !18383

75:                                               ; preds = %74, %71
  call void @vPortExitCritical() #20, !dbg !18374
  call void @llvm.dbg.value(metadata i32* %5, metadata !18287, metadata !DIExpression(DW_OP_deref)), !dbg !18298
  %76 = call i32 @xTaskCheckForTimeOut(%struct.gpio_backup_restore_t* noundef nonnull %6, i32* noundef nonnull %5) #20, !dbg !18385
  %77 = icmp eq i32 %76, 0, !dbg !18387
  br i1 %77, label %78, label %88, !dbg !18388

78:                                               ; preds = %75
  %79 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18389
  %80 = icmp eq i32 %79, 0, !dbg !18392
  br i1 %80, label %86, label %81, !dbg !18393

81:                                               ; preds = %78
  %82 = load i32, i32* %5, align 4, !dbg !18394
  call void @llvm.dbg.value(metadata i32 %82, metadata !18287, metadata !DIExpression()), !dbg !18298
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %48, i32 noundef %82) #20, !dbg !18396
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18397
  %83 = call i32 @xTaskResumeAll() #20, !dbg !18398
  %84 = icmp eq i32 %83, 0, !dbg !18400
  br i1 %84, label %85, label %90, !dbg !18401

85:                                               ; preds = %81
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !18402
  call void asm sideeffect "dsb", ""() #19, !dbg !18402, !srcloc !18405
  call void asm sideeffect "isb", ""() #19, !dbg !18402, !srcloc !18406
  br label %90, !dbg !18407

86:                                               ; preds = %78
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18408
  %87 = call i32 @xTaskResumeAll() #20, !dbg !18410
  br label %90

88:                                               ; preds = %75
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18411
  %89 = call i32 @xTaskResumeAll() #20, !dbg !18413
  br label %97, !dbg !18414

90:                                               ; preds = %86, %85, %81
  call void @llvm.dbg.value(metadata i32 undef, metadata !18289, metadata !DIExpression()), !dbg !18298
  call void @vPortEnterCritical() #20, !dbg !18323
  %91 = load volatile i32, i32* %35, align 4, !dbg !18327
  %92 = load i32, i32* %38, align 4, !dbg !18330
  %93 = icmp ult i32 %91, %92, !dbg !18331
  br i1 %93, label %50, label %94, !dbg !18332, !llvm.loop !18415

94:                                               ; preds = %90
  %95 = load i32, i32* %5, align 4, !dbg !18418
  call void @llvm.dbg.value(metadata i32 %95, metadata !18287, metadata !DIExpression()), !dbg !18298
  %96 = icmp eq i32 %95, 0, !dbg !18333
  br i1 %96, label %65, label %67, !dbg !18336

97:                                               ; preds = %88, %65, %64
  %98 = phi i32 [ 1, %64 ], [ 0, %65 ], [ 0, %88 ], !dbg !18419
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19, !dbg !18420
  ret i32 %98, !dbg !18420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !18421 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !18425, metadata !DIExpression()), !dbg !18429
  call void @llvm.dbg.value(metadata i8* %1, metadata !18426, metadata !DIExpression()), !dbg !18429
  call void @llvm.dbg.value(metadata i32 %2, metadata !18427, metadata !DIExpression()), !dbg !18429
  call void @llvm.dbg.value(metadata i32 0, metadata !18428, metadata !DIExpression()), !dbg !18429
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !18430
  %5 = load i32, i32* %4, align 4, !dbg !18430
  %6 = icmp eq i32 %5, 0, !dbg !18432
  br i1 %6, label %7, label %15, !dbg !18433

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !18434
  %9 = load i8*, i8** %8, align 4, !dbg !18434
  %10 = icmp eq i8* %9, null, !dbg !18438
  br i1 %10, label %11, label %54, !dbg !18439

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !18440
  %13 = load i8*, i8** %12, align 4, !dbg !18440
  %14 = tail call i32 @xTaskPriorityDisinherit(i8* noundef %13) #20, !dbg !18442
  call void @llvm.dbg.value(metadata i32 %14, metadata !18428, metadata !DIExpression()), !dbg !18429
  store i8* null, i8** %12, align 4, !dbg !18443
  br label %54, !dbg !18444

15:                                               ; preds = %3
  %16 = icmp eq i32 %2, 0, !dbg !18445
  br i1 %16, label %17, label %30, !dbg !18447

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !18448
  %19 = load i8*, i8** %18, align 4, !dbg !18448
  %20 = tail call i8* @memcpy(i8* noundef %19, i8* noundef %1, i32 noundef %5) #20, !dbg !18450
  %21 = load i32, i32* %4, align 4, !dbg !18451
  %22 = load i8*, i8** %18, align 4, !dbg !18452
  %23 = getelementptr inbounds i8, i8* %22, i32 %21, !dbg !18452
  store i8* %23, i8** %18, align 4, !dbg !18452
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !18453
  %25 = load i8*, i8** %24, align 4, !dbg !18453
  %26 = icmp ult i8* %23, %25, !dbg !18455
  br i1 %26, label %54, label %27, !dbg !18456

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !18457
  %29 = load i8*, i8** %28, align 4, !dbg !18457
  store i8* %29, i8** %18, align 4, !dbg !18459
  br label %54, !dbg !18460

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !18461
  %32 = load i8*, i8** %31, align 4, !dbg !18461
  %33 = tail call i8* @memcpy(i8* noundef %32, i8* noundef %1, i32 noundef %5) #20, !dbg !18463
  %34 = load i32, i32* %4, align 4, !dbg !18464
  %35 = load i8*, i8** %31, align 4, !dbg !18465
  %36 = sub i32 0, %34, !dbg !18465
  %37 = getelementptr inbounds i8, i8* %35, i32 %36, !dbg !18465
  store i8* %37, i8** %31, align 4, !dbg !18465
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !18466
  %39 = load i8*, i8** %38, align 4, !dbg !18466
  %40 = icmp ult i8* %37, %39, !dbg !18468
  br i1 %40, label %41, label %45, !dbg !18469

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !18470
  %43 = load i8*, i8** %42, align 4, !dbg !18470
  %44 = getelementptr inbounds i8, i8* %43, i32 %36, !dbg !18472
  store i8* %44, i8** %31, align 4, !dbg !18473
  br label %45, !dbg !18474

45:                                               ; preds = %30, %41
  %46 = icmp eq i32 %2, 2, !dbg !18475
  br i1 %46, label %47, label %54, !dbg !18477

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !18478
  %49 = load volatile i32, i32* %48, align 4, !dbg !18478
  %50 = icmp eq i32 %49, 0, !dbg !18481
  br i1 %50, label %54, label %51, !dbg !18482

51:                                               ; preds = %47
  %52 = load volatile i32, i32* %48, align 4, !dbg !18483
  %53 = add i32 %52, -1, !dbg !18483
  store volatile i32 %53, i32* %48, align 4, !dbg !18483
  br label %54, !dbg !18485

54:                                               ; preds = %17, %27, %45, %51, %47, %11, %7
  %55 = phi i32 [ %14, %11 ], [ 0, %7 ], [ 0, %27 ], [ 0, %17 ], [ 0, %51 ], [ 0, %47 ], [ 0, %45 ], !dbg !18429
  call void @llvm.dbg.value(metadata i32 %55, metadata !18428, metadata !DIExpression()), !dbg !18429
  %56 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !18486
  %57 = load volatile i32, i32* %56, align 4, !dbg !18487
  %58 = add i32 %57, 1, !dbg !18487
  store volatile i32 %58, i32* %56, align 4, !dbg !18487
  ret i32 %55, !dbg !18488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !18489 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !18495, metadata !DIExpression()), !dbg !18497
  tail call void @vPortEnterCritical() #20, !dbg !18498
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !18499
  %3 = load volatile i32, i32* %2, align 4, !dbg !18499
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !18502
  %5 = load i32, i32* %4, align 4, !dbg !18502
  %6 = icmp eq i32 %3, %5, !dbg !18503
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !18496, metadata !DIExpression()), !dbg !18497
  tail call void @vPortExitCritical() #20, !dbg !18504
  ret i32 %7, !dbg !18505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !18506 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !18510, metadata !DIExpression()), !dbg !18511
  tail call void @vPortEnterCritical() #20, !dbg !18512
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !18513
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !18513
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10
  %5 = load volatile i32, i32* %4, align 4, !dbg !18518
  %6 = icmp sgt i32 %5, 0, !dbg !18519
  br i1 %6, label %7, label %19, !dbg !18520

7:                                                ; preds = %1, %14
  %8 = load i32, i32* %3, align 4, !dbg !18513
  %9 = icmp eq i32 %8, 0, !dbg !18513
  br i1 %9, label %19, label %10, !dbg !18521

10:                                               ; preds = %7
  %11 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %2) #20, !dbg !18522
  %12 = icmp eq i32 %11, 0, !dbg !18525
  br i1 %12, label %14, label %13, !dbg !18526

13:                                               ; preds = %10
  tail call void @vTaskMissedYield() #20, !dbg !18527
  br label %14, !dbg !18529

14:                                               ; preds = %13, %10
  %15 = load volatile i32, i32* %4, align 4, !dbg !18530
  %16 = add nsw i32 %15, -1, !dbg !18530
  store volatile i32 %16, i32* %4, align 4, !dbg !18530
  %17 = load volatile i32, i32* %4, align 4, !dbg !18518
  %18 = icmp sgt i32 %17, 0, !dbg !18519
  br i1 %18, label %7, label %19, !dbg !18520, !llvm.loop !18531

19:                                               ; preds = %14, %7, %1
  store volatile i32 -1, i32* %4, align 4, !dbg !18533
  tail call void @vPortExitCritical() #20, !dbg !18534
  tail call void @vPortEnterCritical() #20, !dbg !18535
  %20 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !18536
  %21 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %20, i32 0, i32 0, !dbg !18536
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %23 = load volatile i32, i32* %22, align 4, !dbg !18540
  %24 = icmp sgt i32 %23, 0, !dbg !18541
  br i1 %24, label %25, label %37, !dbg !18542

25:                                               ; preds = %19, %32
  %26 = load i32, i32* %21, align 4, !dbg !18536
  %27 = icmp eq i32 %26, 0, !dbg !18536
  br i1 %27, label %37, label %28, !dbg !18543

28:                                               ; preds = %25
  %29 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %20) #20, !dbg !18544
  %30 = icmp eq i32 %29, 0, !dbg !18547
  br i1 %30, label %32, label %31, !dbg !18548

31:                                               ; preds = %28
  tail call void @vTaskMissedYield() #20, !dbg !18549
  br label %32, !dbg !18551

32:                                               ; preds = %28, %31
  %33 = load volatile i32, i32* %22, align 4, !dbg !18552
  %34 = add nsw i32 %33, -1, !dbg !18552
  store volatile i32 %34, i32* %22, align 4, !dbg !18552
  %35 = load volatile i32, i32* %22, align 4, !dbg !18540
  %36 = icmp sgt i32 %35, 0, !dbg !18541
  br i1 %36, label %25, label %37, !dbg !18542, !llvm.loop !18553

37:                                               ; preds = %32, %25, %19
  store volatile i32 -1, i32* %22, align 4, !dbg !18555
  tail call void @vPortExitCritical() #20, !dbg !18556
  ret void, !dbg !18557
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveMutexRecursive(i8* noundef %0) local_unnamed_addr #0 !dbg !18558 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18562, metadata !DIExpression()), !dbg !18565
  call void @llvm.dbg.value(metadata i8* %0, metadata !18564, metadata !DIExpression()), !dbg !18565
  %2 = icmp eq i8* %0, null, !dbg !18566
  br i1 %2, label %3, label %4, !dbg !18568

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 494) #20, !dbg !18569
  br label %4, !dbg !18569

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !18571
  %6 = bitcast i8* %5 to i8**, !dbg !18571
  %7 = load i8*, i8** %6, align 4, !dbg !18571
  %8 = tail call i8* @xTaskGetCurrentTaskHandle() #20, !dbg !18573
  %9 = icmp eq i8* %7, %8, !dbg !18574
  br i1 %9, label %10, label %18, !dbg !18575

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !18576
  %12 = bitcast i8* %11 to i32*, !dbg !18578
  %13 = load i32, i32* %12, align 4, !dbg !18579
  %14 = add i32 %13, -1, !dbg !18579
  store i32 %14, i32* %12, align 4, !dbg !18579
  %15 = icmp eq i32 %14, 0, !dbg !18580
  br i1 %15, label %16, label %18, !dbg !18582

16:                                               ; preds = %10
  %17 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #22, !dbg !18583
  br label %18, !dbg !18585

18:                                               ; preds = %4, %16, %10
  %19 = phi i32 [ 1, %10 ], [ 1, %16 ], [ 0, %4 ], !dbg !18586
  call void @llvm.dbg.value(metadata i32 %19, metadata !18563, metadata !DIExpression()), !dbg !18565
  ret i32 %19, !dbg !18587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueTakeMutexRecursive(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !18588 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18592, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i32 %1, metadata !18593, metadata !DIExpression()), !dbg !18596
  call void @llvm.dbg.value(metadata i8* %0, metadata !18595, metadata !DIExpression()), !dbg !18596
  %3 = icmp eq i8* %0, null, !dbg !18597
  br i1 %3, label %4, label %5, !dbg !18599

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 549) #20, !dbg !18600
  br label %5, !dbg !18600

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !18602
  %7 = bitcast i8* %6 to i8**, !dbg !18602
  %8 = load i8*, i8** %7, align 4, !dbg !18602
  %9 = tail call i8* @xTaskGetCurrentTaskHandle() #20, !dbg !18604
  %10 = icmp eq i8* %8, %9, !dbg !18605
  br i1 %10, label %14, label %11, !dbg !18606

11:                                               ; preds = %5
  %12 = tail call i32 @xQueueGenericReceive(i8* noundef nonnull %0, i8* noundef null, i32 noundef %1, i32 noundef 0) #22, !dbg !18607
  call void @llvm.dbg.value(metadata i32 %12, metadata !18594, metadata !DIExpression()), !dbg !18596
  %13 = icmp eq i32 %12, 1, !dbg !18609
  br i1 %13, label %14, label %19, !dbg !18611

14:                                               ; preds = %11, %5
  %15 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !18612
  %16 = bitcast i8* %15 to i32*, !dbg !18612
  %17 = load i32, i32* %16, align 4, !dbg !18612
  %18 = add i32 %17, 1, !dbg !18612
  store i32 %18, i32* %16, align 4, !dbg !18612
  br label %19, !dbg !18613

19:                                               ; preds = %14, %11
  %20 = phi i32 [ %12, %11 ], [ 1, %14 ], !dbg !18612
  call void @llvm.dbg.value(metadata i32 %20, metadata !18594, metadata !DIExpression()), !dbg !18596
  ret i32 %20, !dbg !18613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReceive(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !18614 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.gpio_backup_restore_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !18618, metadata !DIExpression()), !dbg !18626
  call void @llvm.dbg.value(metadata i8* %1, metadata !18619, metadata !DIExpression()), !dbg !18626
  call void @llvm.dbg.value(metadata i32 %2, metadata !18620, metadata !DIExpression()), !dbg !18626
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !18621, metadata !DIExpression()), !dbg !18626
  call void @llvm.dbg.value(metadata i32 0, metadata !18622, metadata !DIExpression()), !dbg !18626
  %7 = bitcast %struct.gpio_backup_restore_t* %6 to i8*, !dbg !18627
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19, !dbg !18627
  call void @llvm.dbg.declare(metadata %struct.gpio_backup_restore_t* %6, metadata !18623, metadata !DIExpression()), !dbg !18628
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !18629
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !18625, metadata !DIExpression()), !dbg !18626
  %9 = icmp eq i8* %0, null, !dbg !18630
  br i1 %9, label %10, label %11, !dbg !18632

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1368) #20, !dbg !18633
  br label %11, !dbg !18633

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !18635
  br i1 %12, label %13, label %19, !dbg !18635

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !18635
  %15 = bitcast i8* %14 to i32*, !dbg !18635
  %16 = load i32, i32* %15, align 4, !dbg !18635
  %17 = icmp eq i32 %16, 0, !dbg !18635
  br i1 %17, label %19, label %18, !dbg !18637

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1369) #20, !dbg !18638
  br label %19, !dbg !18638

19:                                               ; preds = %11, %18, %13
  %20 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !18640
  %21 = icmp eq i32 %20, 0, !dbg !18640
  call void @llvm.dbg.value(metadata i32 %2, metadata !18620, metadata !DIExpression()), !dbg !18626
  %22 = icmp ne i32 %2, 0, !dbg !18640
  %23 = and i1 %21, %22, !dbg !18640
  br i1 %23, label %24, label %25, !dbg !18643

24:                                               ; preds = %19
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1372) #20, !dbg !18644
  br label %25, !dbg !18644

25:                                               ; preds = %24, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !18622, metadata !DIExpression()), !dbg !18626
  call void @vPortEnterCritical() #20, !dbg !18646
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !18650
  %27 = bitcast i8* %26 to i32*, !dbg !18650
  %28 = load volatile i32, i32* %27, align 4, !dbg !18650
  %29 = icmp eq i32 %28, 0, !dbg !18653
  br i1 %29, label %30, label %41, !dbg !18654

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %0, i32 68
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %0, i32 72
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %0 to i8**
  %36 = getelementptr inbounds i8, i8* %0, i32 4
  %37 = bitcast i8* %36 to i8**
  %38 = getelementptr inbounds i8, i8* %0, i32 36
  %39 = bitcast i8* %38 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !18620, metadata !DIExpression()), !dbg !18626
  %40 = icmp eq i32 %2, 0, !dbg !18655
  br i1 %40, label %77, label %78, !dbg !18658

41:                                               ; preds = %107, %25
  %42 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !18659
  %43 = bitcast i8* %42 to i8**, !dbg !18661
  %44 = load i8*, i8** %43, align 4, !dbg !18661
  call void @llvm.dbg.value(metadata i8* %44, metadata !18624, metadata !DIExpression()), !dbg !18626
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1) #22, !dbg !18662
  %45 = icmp eq i32 %3, 0, !dbg !18663
  br i1 %45, label %46, label %66, !dbg !18665

46:                                               ; preds = %41
  %47 = load volatile i32, i32* %27, align 4, !dbg !18666
  %48 = add i32 %47, -1, !dbg !18666
  store volatile i32 %48, i32* %27, align 4, !dbg !18666
  %49 = bitcast i8* %0 to i8**, !dbg !18668
  %50 = load i8*, i8** %49, align 4, !dbg !18668
  %51 = icmp eq i8* %50, null, !dbg !18671
  br i1 %51, label %52, label %56, !dbg !18672

52:                                               ; preds = %46
  %53 = call i8* @pvTaskIncrementMutexHeldCount() #20, !dbg !18673
  %54 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !18675
  %55 = bitcast i8* %54 to i8**, !dbg !18675
  store i8* %53, i8** %55, align 4, !dbg !18676
  br label %56, !dbg !18677

56:                                               ; preds = %46, %52
  %57 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !18678
  %58 = bitcast i8* %57 to i32*, !dbg !18678
  %59 = load i32, i32* %58, align 4, !dbg !18678
  %60 = icmp eq i32 %59, 0, !dbg !18678
  br i1 %60, label %76, label %61, !dbg !18680

61:                                               ; preds = %56
  %62 = bitcast i8* %57 to %struct.xLIST*, !dbg !18678
  %63 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %62) #20, !dbg !18681
  %64 = icmp eq i32 %63, 1, !dbg !18684
  br i1 %64, label %65, label %76, !dbg !18685

65:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !18686
  call void asm sideeffect "dsb", ""() #19, !dbg !18686, !srcloc !18689
  call void asm sideeffect "isb", ""() #19, !dbg !18686, !srcloc !18690
  br label %76, !dbg !18691

66:                                               ; preds = %41
  store i8* %44, i8** %43, align 4, !dbg !18692
  %67 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !18694
  %68 = bitcast i8* %67 to i32*, !dbg !18694
  %69 = load i32, i32* %68, align 4, !dbg !18694
  %70 = icmp eq i32 %69, 0, !dbg !18694
  br i1 %70, label %76, label %71, !dbg !18696

71:                                               ; preds = %66
  %72 = bitcast i8* %67 to %struct.xLIST*, !dbg !18694
  %73 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %72) #20, !dbg !18697
  %74 = icmp eq i32 %73, 0, !dbg !18700
  br i1 %74, label %76, label %75, !dbg !18701

75:                                               ; preds = %71
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !18702
  call void asm sideeffect "dsb", ""() #19, !dbg !18702, !srcloc !18705
  call void asm sideeffect "isb", ""() #19, !dbg !18702, !srcloc !18706
  br label %76, !dbg !18707

76:                                               ; preds = %71, %75, %66, %61, %65, %56
  call void @vPortExitCritical() #20, !dbg !18708
  br label %113, !dbg !18709

77:                                               ; preds = %110, %30
  call void @vPortExitCritical() #20, !dbg !18710
  br label %113, !dbg !18712

78:                                               ; preds = %30
  call void @vTaskSetTimeOutState(%struct.gpio_backup_restore_t* noundef nonnull %6) #20, !dbg !18713
  call void @llvm.dbg.value(metadata i32 1, metadata !18622, metadata !DIExpression()), !dbg !18626
  br label %79, !dbg !18716

79:                                               ; preds = %110, %78
  call void @llvm.dbg.value(metadata i32 1, metadata !18622, metadata !DIExpression()), !dbg !18626
  call void @vPortExitCritical() #20, !dbg !18717
  call void @vTaskSuspendAll() #20, !dbg !18718
  call void @vPortEnterCritical() #20, !dbg !18719
  %80 = load volatile i32, i32* %32, align 4, !dbg !18720
  %81 = icmp eq i32 %80, -1, !dbg !18720
  br i1 %81, label %82, label %83, !dbg !18723

82:                                               ; preds = %79
  store volatile i32 0, i32* %32, align 4, !dbg !18724
  br label %83, !dbg !18724

83:                                               ; preds = %82, %79
  %84 = load volatile i32, i32* %34, align 4, !dbg !18726
  %85 = icmp eq i32 %84, -1, !dbg !18726
  br i1 %85, label %86, label %87, !dbg !18723

86:                                               ; preds = %83
  store volatile i32 0, i32* %34, align 4, !dbg !18728
  br label %87, !dbg !18728

87:                                               ; preds = %86, %83
  call void @vPortExitCritical() #20, !dbg !18719
  call void @llvm.dbg.value(metadata i32* %5, metadata !18620, metadata !DIExpression(DW_OP_deref)), !dbg !18626
  %88 = call i32 @xTaskCheckForTimeOut(%struct.gpio_backup_restore_t* noundef nonnull %6, i32* noundef nonnull %5) #20, !dbg !18730
  %89 = icmp eq i32 %88, 0, !dbg !18732
  br i1 %89, label %90, label %105, !dbg !18733

90:                                               ; preds = %87
  %91 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18734
  %92 = icmp eq i32 %91, 0, !dbg !18737
  br i1 %92, label %103, label %93, !dbg !18738

93:                                               ; preds = %90
  %94 = load i8*, i8** %35, align 4, !dbg !18739
  %95 = icmp eq i8* %94, null, !dbg !18743
  br i1 %95, label %96, label %98, !dbg !18744

96:                                               ; preds = %93
  call void @vPortEnterCritical() #20, !dbg !18745
  %97 = load i8*, i8** %37, align 4, !dbg !18747
  call void @vTaskPriorityInherit(i8* noundef %97) #20, !dbg !18749
  call void @vPortExitCritical() #20, !dbg !18750
  br label %98, !dbg !18751

98:                                               ; preds = %93, %96
  %99 = load i32, i32* %5, align 4, !dbg !18752
  call void @llvm.dbg.value(metadata i32 %99, metadata !18620, metadata !DIExpression()), !dbg !18626
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %39, i32 noundef %99) #20, !dbg !18753
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18754
  %100 = call i32 @xTaskResumeAll() #20, !dbg !18755
  %101 = icmp eq i32 %100, 0, !dbg !18757
  br i1 %101, label %102, label %107, !dbg !18758

102:                                              ; preds = %98
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !18759
  call void asm sideeffect "dsb", ""() #19, !dbg !18759, !srcloc !18762
  call void asm sideeffect "isb", ""() #19, !dbg !18759, !srcloc !18763
  br label %107, !dbg !18764

103:                                              ; preds = %90
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18765
  %104 = call i32 @xTaskResumeAll() #20, !dbg !18767
  br label %107

105:                                              ; preds = %87
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #22, !dbg !18768
  %106 = call i32 @xTaskResumeAll() #20, !dbg !18770
  br label %113, !dbg !18771

107:                                              ; preds = %103, %98, %102
  call void @llvm.dbg.value(metadata i32 undef, metadata !18622, metadata !DIExpression()), !dbg !18626
  call void @vPortEnterCritical() #20, !dbg !18646
  %108 = load volatile i32, i32* %27, align 4, !dbg !18650
  %109 = icmp eq i32 %108, 0, !dbg !18653
  br i1 %109, label %110, label %41, !dbg !18654, !llvm.loop !18772

110:                                              ; preds = %107
  %111 = load i32, i32* %5, align 4, !dbg !18775
  call void @llvm.dbg.value(metadata i32 %111, metadata !18620, metadata !DIExpression()), !dbg !18626
  %112 = icmp eq i32 %111, 0, !dbg !18655
  br i1 %112, label %77, label %79, !dbg !18658

113:                                              ; preds = %105, %77, %76
  %114 = phi i32 [ 1, %76 ], [ 0, %77 ], [ 0, %105 ], !dbg !18776
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19, !dbg !18777
  ret i32 %114, !dbg !18777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !18778 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !18782, metadata !DIExpression()), !dbg !18784
  call void @llvm.dbg.value(metadata i8* %1, metadata !18783, metadata !DIExpression()), !dbg !18784
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !18785
  %4 = load i32, i32* %3, align 4, !dbg !18785
  %5 = icmp eq i32 %4, 0, !dbg !18787
  br i1 %5, label %19, label %6, !dbg !18788

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !18789
  %8 = load i8*, i8** %7, align 4, !dbg !18791
  %9 = getelementptr inbounds i8, i8* %8, i32 %4, !dbg !18791
  store i8* %9, i8** %7, align 4, !dbg !18791
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !18792
  %11 = load i8*, i8** %10, align 4, !dbg !18792
  %12 = icmp ult i8* %9, %11, !dbg !18794
  br i1 %12, label %16, label %13, !dbg !18795

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !18796
  %15 = load i8*, i8** %14, align 4, !dbg !18796
  store i8* %15, i8** %7, align 4, !dbg !18798
  br label %16, !dbg !18799

16:                                               ; preds = %6, %13
  %17 = phi i8* [ %9, %6 ], [ %15, %13 ], !dbg !18800
  %18 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %17, i32 noundef %4) #20, !dbg !18801
  br label %19, !dbg !18802

19:                                               ; preds = %16, %2
  ret void, !dbg !18803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !18804 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !18806, metadata !DIExpression()), !dbg !18808
  tail call void @vPortEnterCritical() #20, !dbg !18809
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !18810
  %3 = load volatile i32, i32* %2, align 4, !dbg !18810
  %4 = icmp eq i32 %3, 0, !dbg !18813
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !18807, metadata !DIExpression()), !dbg !18808
  tail call void @vPortExitCritical() #20, !dbg !18814
  ret i32 %5, !dbg !18815
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateCountingSemaphore(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !18816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18820, metadata !DIExpression()), !dbg !18823
  call void @llvm.dbg.value(metadata i32 %1, metadata !18821, metadata !DIExpression()), !dbg !18823
  %3 = icmp eq i32 %0, 0, !dbg !18824
  br i1 %3, label %4, label %5, !dbg !18826

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 590) #20, !dbg !18827
  br label %5, !dbg !18827

5:                                                ; preds = %4, %2
  %6 = icmp ugt i32 %1, %0, !dbg !18829
  br i1 %6, label %7, label %8, !dbg !18831

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 591) #20, !dbg !18832
  br label %8, !dbg !18832

8:                                                ; preds = %7, %5
  %9 = tail call i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef 0, i8 noundef zeroext 2) #22, !dbg !18834
  call void @llvm.dbg.value(metadata i8* %9, metadata !18822, metadata !DIExpression()), !dbg !18823
  %10 = icmp eq i8* %9, null, !dbg !18835
  br i1 %10, label %14, label %11, !dbg !18835

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %9, i32 56, !dbg !18836
  %13 = bitcast i8* %12 to i32*, !dbg !18836
  store volatile i32 %1, i32* %13, align 4, !dbg !18839
  br label %15, !dbg !18840

14:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 606) #20, !dbg !18841
  br label %15, !dbg !18841

15:                                               ; preds = %11, %14
  ret i8* %9, !dbg !18844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSendFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !18845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18850, metadata !DIExpression()), !dbg !18857
  call void @llvm.dbg.value(metadata i8* %1, metadata !18851, metadata !DIExpression()), !dbg !18857
  call void @llvm.dbg.value(metadata i32* %2, metadata !18852, metadata !DIExpression()), !dbg !18857
  call void @llvm.dbg.value(metadata i32 %3, metadata !18853, metadata !DIExpression()), !dbg !18857
  %5 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !18858
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %5, metadata !18856, metadata !DIExpression()), !dbg !18857
  %6 = icmp eq i8* %0, null, !dbg !18859
  br i1 %6, label %7, label %8, !dbg !18861

7:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1064) #20, !dbg !18862
  br label %8, !dbg !18862

8:                                                ; preds = %7, %4
  %9 = icmp eq i8* %1, null, !dbg !18864
  br i1 %9, label %10, label %16, !dbg !18864

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !18864
  %12 = bitcast i8* %11 to i32*, !dbg !18864
  %13 = load i32, i32* %12, align 4, !dbg !18864
  %14 = icmp eq i32 %13, 0, !dbg !18864
  br i1 %14, label %16, label %15, !dbg !18866

15:                                               ; preds = %10
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1065) #20, !dbg !18867
  br label %16, !dbg !18867

16:                                               ; preds = %8, %15, %10
  %17 = icmp eq i32 %3, 2, !dbg !18869
  br i1 %17, label %18, label %24, !dbg !18869

18:                                               ; preds = %16
  %19 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !18869
  %20 = bitcast i8* %19 to i32*, !dbg !18869
  %21 = load i32, i32* %20, align 4, !dbg !18869
  %22 = icmp eq i32 %21, 1, !dbg !18869
  br i1 %22, label %24, label %23, !dbg !18871

23:                                               ; preds = %18
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1066) #20, !dbg !18872
  br label %24, !dbg !18872

24:                                               ; preds = %16, %23, %18
  tail call void @vPortValidateInterruptPriority() #20, !dbg !18874
  %25 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !18875, !srcloc !18881
  call void @llvm.dbg.value(metadata i32 undef, metadata !18878, metadata !DIExpression()) #19, !dbg !18882
  call void @llvm.dbg.value(metadata i32 undef, metadata !18879, metadata !DIExpression()) #19, !dbg !18882
  call void @llvm.dbg.value(metadata i32 undef, metadata !18855, metadata !DIExpression()), !dbg !18857
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !18883
  %27 = bitcast i8* %26 to i32*, !dbg !18883
  %28 = load volatile i32, i32* %27, align 4, !dbg !18883
  %29 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !18886
  %30 = bitcast i8* %29 to i32*, !dbg !18886
  %31 = load i32, i32* %30, align 4, !dbg !18886
  %32 = icmp ult i32 %28, %31, !dbg !18887
  %33 = or i1 %17, %32, !dbg !18888
  br i1 %33, label %34, label %55, !dbg !18888

34:                                               ; preds = %24
  %35 = tail call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %5, i8* noundef %1, i32 noundef %3) #22, !dbg !18889
  %36 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !18891
  %37 = bitcast i8* %36 to i32*, !dbg !18891
  %38 = load volatile i32, i32* %37, align 4, !dbg !18891
  %39 = icmp eq i32 %38, -1, !dbg !18893
  br i1 %39, label %40, label %52, !dbg !18894

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !18895
  %42 = bitcast i8* %41 to i32*, !dbg !18895
  %43 = load i32, i32* %42, align 4, !dbg !18895
  %44 = icmp eq i32 %43, 0, !dbg !18895
  br i1 %44, label %55, label %45, !dbg !18899

45:                                               ; preds = %40
  %46 = bitcast i8* %41 to %struct.xLIST*, !dbg !18895
  %47 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %46) #20, !dbg !18900
  %48 = icmp ne i32 %47, 0, !dbg !18903
  %49 = icmp ne i32* %2, null
  %50 = and i1 %49, %48, !dbg !18904
  br i1 %50, label %51, label %55, !dbg !18904

51:                                               ; preds = %45
  store i32 1, i32* %2, align 4, !dbg !18905
  br label %55, !dbg !18909

52:                                               ; preds = %34
  %53 = load volatile i32, i32* %37, align 4, !dbg !18910
  %54 = add nsw i32 %53, 1, !dbg !18910
  store volatile i32 %54, i32* %37, align 4, !dbg !18910
  br label %55

55:                                               ; preds = %24, %52, %40, %51, %45
  %56 = phi i32 [ 1, %45 ], [ 1, %51 ], [ 1, %40 ], [ 1, %52 ], [ 0, %24 ], !dbg !18912
  %57 = extractvalue { i32, i32 } %25, 0, !dbg !18875
  call void @llvm.dbg.value(metadata i32 %57, metadata !18878, metadata !DIExpression()) #19, !dbg !18882
  call void @llvm.dbg.value(metadata i32 %57, metadata !18855, metadata !DIExpression()), !dbg !18857
  call void @llvm.dbg.value(metadata i32 %56, metadata !18854, metadata !DIExpression()), !dbg !18857
  call void @llvm.dbg.value(metadata i32 undef, metadata !18913, metadata !DIExpression()) #19, !dbg !18916
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %57) #19, !dbg !18918, !srcloc !18919
  ret i32 %56, !dbg !18920
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !18921 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18925, metadata !DIExpression()), !dbg !18930
  call void @llvm.dbg.value(metadata i32* %1, metadata !18926, metadata !DIExpression()), !dbg !18930
  call void @llvm.dbg.value(metadata i8* %0, metadata !18929, metadata !DIExpression()), !dbg !18930
  %3 = icmp eq i8* %0, null, !dbg !18931
  br i1 %3, label %4, label %5, !dbg !18933

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1213) #20, !dbg !18934
  br label %5, !dbg !18934

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !18936
  %7 = bitcast i8* %6 to i32*, !dbg !18936
  %8 = load i32, i32* %7, align 4, !dbg !18936
  %9 = icmp eq i32 %8, 0, !dbg !18936
  br i1 %9, label %11, label %10, !dbg !18938

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1216) #20, !dbg !18939
  br label %11, !dbg !18939

11:                                               ; preds = %10, %5
  tail call void @vPortValidateInterruptPriority() #20, !dbg !18941
  %12 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !18942, !srcloc !18881
  call void @llvm.dbg.value(metadata i32 undef, metadata !18878, metadata !DIExpression()) #19, !dbg !18944
  call void @llvm.dbg.value(metadata i32 undef, metadata !18879, metadata !DIExpression()) #19, !dbg !18944
  call void @llvm.dbg.value(metadata i32 undef, metadata !18928, metadata !DIExpression()), !dbg !18930
  %13 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !18945
  %14 = bitcast i8* %13 to i32*, !dbg !18945
  %15 = load volatile i32, i32* %14, align 4, !dbg !18945
  %16 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !18948
  %17 = bitcast i8* %16 to i32*, !dbg !18948
  %18 = load i32, i32* %17, align 4, !dbg !18948
  %19 = icmp ult i32 %15, %18, !dbg !18949
  br i1 %19, label %20, label %42, !dbg !18950

20:                                               ; preds = %11
  %21 = load volatile i32, i32* %14, align 4, !dbg !18951
  %22 = add i32 %21, 1, !dbg !18951
  store volatile i32 %22, i32* %14, align 4, !dbg !18951
  %23 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !18953
  %24 = bitcast i8* %23 to i32*, !dbg !18953
  %25 = load volatile i32, i32* %24, align 4, !dbg !18953
  %26 = icmp eq i32 %25, -1, !dbg !18955
  br i1 %26, label %27, label %39, !dbg !18956

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !18957
  %29 = bitcast i8* %28 to i32*, !dbg !18957
  %30 = load i32, i32* %29, align 4, !dbg !18957
  %31 = icmp eq i32 %30, 0, !dbg !18957
  br i1 %31, label %42, label %32, !dbg !18961

32:                                               ; preds = %27
  %33 = bitcast i8* %28 to %struct.xLIST*, !dbg !18957
  %34 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %33) #20, !dbg !18962
  %35 = icmp ne i32 %34, 0, !dbg !18965
  %36 = icmp ne i32* %1, null
  %37 = and i1 %36, %35, !dbg !18966
  br i1 %37, label %38, label %42, !dbg !18966

38:                                               ; preds = %32
  store i32 1, i32* %1, align 4, !dbg !18967
  br label %42, !dbg !18971

39:                                               ; preds = %20
  %40 = load volatile i32, i32* %24, align 4, !dbg !18972
  %41 = add nsw i32 %40, 1, !dbg !18972
  store volatile i32 %41, i32* %24, align 4, !dbg !18972
  br label %42

42:                                               ; preds = %11, %39, %27, %38, %32
  %43 = phi i32 [ 1, %32 ], [ 1, %38 ], [ 1, %27 ], [ 1, %39 ], [ 0, %11 ], !dbg !18974
  %44 = extractvalue { i32, i32 } %12, 0, !dbg !18942
  call void @llvm.dbg.value(metadata i32 %44, metadata !18878, metadata !DIExpression()) #19, !dbg !18944
  call void @llvm.dbg.value(metadata i32 %44, metadata !18928, metadata !DIExpression()), !dbg !18930
  call void @llvm.dbg.value(metadata i32 %43, metadata !18927, metadata !DIExpression()), !dbg !18930
  call void @llvm.dbg.value(metadata i32 undef, metadata !18913, metadata !DIExpression()) #19, !dbg !18975
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %44) #19, !dbg !18977, !srcloc !18919
  ret i32 %43, !dbg !18978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceiveFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !18979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18983, metadata !DIExpression()), !dbg !18989
  call void @llvm.dbg.value(metadata i8* %1, metadata !18984, metadata !DIExpression()), !dbg !18989
  call void @llvm.dbg.value(metadata i32* %2, metadata !18985, metadata !DIExpression()), !dbg !18989
  %4 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !18990
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %4, metadata !18988, metadata !DIExpression()), !dbg !18989
  %5 = icmp eq i8* %0, null, !dbg !18991
  br i1 %5, label %6, label %7, !dbg !18993

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1556) #20, !dbg !18994
  br label %7, !dbg !18994

7:                                                ; preds = %6, %3
  %8 = icmp eq i8* %1, null, !dbg !18996
  br i1 %8, label %9, label %15, !dbg !18996

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !18996
  %11 = bitcast i8* %10 to i32*, !dbg !18996
  %12 = load i32, i32* %11, align 4, !dbg !18996
  %13 = icmp eq i32 %12, 0, !dbg !18996
  br i1 %13, label %15, label %14, !dbg !18998

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1557) #20, !dbg !18999
  br label %15, !dbg !18999

15:                                               ; preds = %7, %14, %9
  tail call void @vPortValidateInterruptPriority() #20, !dbg !19001
  %16 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !19002, !srcloc !18881
  call void @llvm.dbg.value(metadata i32 undef, metadata !18878, metadata !DIExpression()) #19, !dbg !19004
  call void @llvm.dbg.value(metadata i32 undef, metadata !18879, metadata !DIExpression()) #19, !dbg !19004
  call void @llvm.dbg.value(metadata i32 undef, metadata !18987, metadata !DIExpression()), !dbg !18989
  %17 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19005
  %18 = bitcast i8* %17 to i32*, !dbg !19005
  %19 = load volatile i32, i32* %18, align 4, !dbg !19005
  %20 = icmp eq i32 %19, 0, !dbg !19008
  br i1 %20, label %43, label %21, !dbg !19009

21:                                               ; preds = %15
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %4, i8* noundef %1) #22, !dbg !19010
  %22 = load volatile i32, i32* %18, align 4, !dbg !19012
  %23 = add i32 %22, -1, !dbg !19012
  store volatile i32 %23, i32* %18, align 4, !dbg !19012
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !19013
  %25 = bitcast i8* %24 to i32*, !dbg !19013
  %26 = load volatile i32, i32* %25, align 4, !dbg !19013
  %27 = icmp eq i32 %26, -1, !dbg !19015
  br i1 %27, label %28, label %40, !dbg !19016

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !19017
  %30 = bitcast i8* %29 to i32*, !dbg !19017
  %31 = load i32, i32* %30, align 4, !dbg !19017
  %32 = icmp eq i32 %31, 0, !dbg !19017
  br i1 %32, label %43, label %33, !dbg !19020

33:                                               ; preds = %28
  %34 = bitcast i8* %29 to %struct.xLIST*, !dbg !19017
  %35 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %34) #20, !dbg !19021
  %36 = icmp ne i32 %35, 0, !dbg !19024
  %37 = icmp ne i32* %2, null
  %38 = and i1 %37, %36, !dbg !19025
  br i1 %38, label %39, label %43, !dbg !19025

39:                                               ; preds = %33
  store i32 1, i32* %2, align 4, !dbg !19026
  br label %43, !dbg !19030

40:                                               ; preds = %21
  %41 = load volatile i32, i32* %25, align 4, !dbg !19031
  %42 = add nsw i32 %41, 1, !dbg !19031
  store volatile i32 %42, i32* %25, align 4, !dbg !19031
  br label %43

43:                                               ; preds = %15, %40, %28, %39, %33
  %44 = phi i32 [ 1, %33 ], [ 1, %39 ], [ 1, %28 ], [ 1, %40 ], [ 0, %15 ], !dbg !19033
  %45 = extractvalue { i32, i32 } %16, 0, !dbg !19002
  call void @llvm.dbg.value(metadata i32 %45, metadata !18878, metadata !DIExpression()) #19, !dbg !19004
  call void @llvm.dbg.value(metadata i32 %45, metadata !18987, metadata !DIExpression()), !dbg !18989
  call void @llvm.dbg.value(metadata i32 %44, metadata !18986, metadata !DIExpression()), !dbg !18989
  call void @llvm.dbg.value(metadata i32 undef, metadata !18913, metadata !DIExpression()) #19, !dbg !19034
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %45) #19, !dbg !19036, !srcloc !18919
  ret i32 %44, !dbg !19037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeekFromISR(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !19038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19042, metadata !DIExpression()), !dbg !19048
  call void @llvm.dbg.value(metadata i8* %1, metadata !19043, metadata !DIExpression()), !dbg !19048
  %3 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !19049
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %3, metadata !19047, metadata !DIExpression()), !dbg !19048
  %4 = icmp eq i8* %0, null, !dbg !19050
  br i1 %4, label %5, label %6, !dbg !19052

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1644) #20, !dbg !19053
  br label %6, !dbg !19053

6:                                                ; preds = %5, %2
  %7 = icmp eq i8* %1, null, !dbg !19055
  br i1 %7, label %8, label %14, !dbg !19055

8:                                                ; preds = %6
  %9 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !19055
  %10 = bitcast i8* %9 to i32*, !dbg !19055
  %11 = load i32, i32* %10, align 4, !dbg !19055
  %12 = icmp eq i32 %11, 0, !dbg !19055
  br i1 %12, label %14, label %13, !dbg !19057

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1645) #20, !dbg !19058
  br label %14, !dbg !19058

14:                                               ; preds = %6, %13, %8
  %15 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !19060
  %16 = bitcast i8* %15 to i32*, !dbg !19060
  %17 = load i32, i32* %16, align 4, !dbg !19060
  %18 = icmp eq i32 %17, 0, !dbg !19060
  br i1 %18, label %19, label %20, !dbg !19062

19:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1646) #20, !dbg !19063
  br label %20, !dbg !19063

20:                                               ; preds = %19, %14
  tail call void @vPortValidateInterruptPriority() #20, !dbg !19065
  %21 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !19066, !srcloc !18881
  call void @llvm.dbg.value(metadata i32 undef, metadata !18878, metadata !DIExpression()) #19, !dbg !19068
  call void @llvm.dbg.value(metadata i32 undef, metadata !18879, metadata !DIExpression()) #19, !dbg !19068
  call void @llvm.dbg.value(metadata i32 undef, metadata !19045, metadata !DIExpression()), !dbg !19048
  %22 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19069
  %23 = bitcast i8* %22 to i32*, !dbg !19069
  %24 = load volatile i32, i32* %23, align 4, !dbg !19069
  %25 = icmp eq i32 %24, 0, !dbg !19072
  br i1 %25, label %30, label %26, !dbg !19073

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !19074
  %28 = bitcast i8* %27 to i8**, !dbg !19076
  %29 = load i8*, i8** %28, align 4, !dbg !19076
  call void @llvm.dbg.value(metadata i8* %29, metadata !19046, metadata !DIExpression()), !dbg !19048
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %3, i8* noundef %1) #22, !dbg !19077
  store i8* %29, i8** %28, align 4, !dbg !19078
  call void @llvm.dbg.value(metadata i32 1, metadata !19044, metadata !DIExpression()), !dbg !19048
  br label %30, !dbg !19079

30:                                               ; preds = %20, %26
  %31 = phi i32 [ 1, %26 ], [ 0, %20 ], !dbg !19080
  %32 = extractvalue { i32, i32 } %21, 0, !dbg !19066
  call void @llvm.dbg.value(metadata i32 %32, metadata !18878, metadata !DIExpression()) #19, !dbg !19068
  call void @llvm.dbg.value(metadata i32 %32, metadata !19045, metadata !DIExpression()), !dbg !19048
  call void @llvm.dbg.value(metadata i32 %31, metadata !19044, metadata !DIExpression()), !dbg !19048
  call void @llvm.dbg.value(metadata i32 undef, metadata !18913, metadata !DIExpression()) #19, !dbg !19081
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %32) #19, !dbg !19083, !srcloc !18919
  ret i32 %31, !dbg !19084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaiting(i8* noundef %0) local_unnamed_addr #0 !dbg !19085 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19090, metadata !DIExpression()), !dbg !19092
  %2 = icmp eq i8* %0, null, !dbg !19093
  br i1 %2, label %3, label %4, !dbg !19095

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1695) #20, !dbg !19096
  br label %4, !dbg !19096

4:                                                ; preds = %3, %1
  tail call void @vPortEnterCritical() #20, !dbg !19098
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19099
  %6 = bitcast i8* %5 to i32*, !dbg !19099
  %7 = load volatile i32, i32* %6, align 4, !dbg !19099
  call void @llvm.dbg.value(metadata i32 %7, metadata !19091, metadata !DIExpression()), !dbg !19092
  tail call void @vPortExitCritical() #20, !dbg !19101
  ret i32 %7, !dbg !19102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueSpacesAvailable(i8* noundef %0) local_unnamed_addr #0 !dbg !19103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19105, metadata !DIExpression()), !dbg !19108
  call void @llvm.dbg.value(metadata i8* %0, metadata !19107, metadata !DIExpression()), !dbg !19108
  %2 = icmp eq i8* %0, null, !dbg !19109
  br i1 %2, label %3, label %4, !dbg !19111

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1713) #20, !dbg !19112
  br label %4, !dbg !19112

4:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !19107, metadata !DIExpression()), !dbg !19108
  tail call void @vPortEnterCritical() #20, !dbg !19114
  %5 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !19115
  %6 = bitcast i8* %5 to i32*, !dbg !19115
  %7 = load i32, i32* %6, align 4, !dbg !19115
  %8 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19117
  %9 = bitcast i8* %8 to i32*, !dbg !19117
  %10 = load volatile i32, i32* %9, align 4, !dbg !19117
  %11 = sub i32 %7, %10, !dbg !19118
  call void @llvm.dbg.value(metadata i32 %11, metadata !19106, metadata !DIExpression()), !dbg !19108
  tail call void @vPortExitCritical() #20, !dbg !19119
  ret i32 %11, !dbg !19120
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaitingFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !19121 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19123, metadata !DIExpression()), !dbg !19125
  %2 = icmp eq i8* %0, null, !dbg !19126
  br i1 %2, label %3, label %4, !dbg !19128

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1729) #20, !dbg !19129
  br label %4, !dbg !19129

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19131
  %6 = bitcast i8* %5 to i32*, !dbg !19131
  %7 = load volatile i32, i32* %6, align 4, !dbg !19131
  call void @llvm.dbg.value(metadata i32 %7, metadata !19124, metadata !DIExpression()), !dbg !19125
  ret i32 %7, !dbg !19132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !19133 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19137, metadata !DIExpression()), !dbg !19139
  call void @llvm.dbg.value(metadata i8* %0, metadata !19138, metadata !DIExpression()), !dbg !19139
  %2 = icmp eq i8* %0, null, !dbg !19140
  br i1 %2, label %3, label %4, !dbg !19142

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 1741) #20, !dbg !19143
  br label %4, !dbg !19143

4:                                                ; preds = %3, %1
  tail call void @vQueueUnregisterQueue(i8* noundef %0) #22, !dbg !19145
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !19147
  ret void, !dbg !19148
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueUnregisterQueue(i8* noundef readnone %0) local_unnamed_addr #13 !dbg !19149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19151, metadata !DIExpression()), !dbg !19153
  call void @llvm.dbg.value(metadata i32 0, metadata !19152, metadata !DIExpression()), !dbg !19153
  br label %2, !dbg !19154

2:                                                ; preds = %1, %9
  %3 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !19152, metadata !DIExpression()), !dbg !19153
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !19156
  %5 = load i8*, i8** %4, align 4, !dbg !19156
  %6 = icmp eq i8* %5, %0, !dbg !19160
  br i1 %6, label %7, label %9, !dbg !19161

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !19162
  store i8* null, i8** %8, align 4, !dbg !19164
  br label %12, !dbg !19165

9:                                                ; preds = %2
  %10 = add nuw nsw i32 %3, 1, !dbg !19166
  call void @llvm.dbg.value(metadata i32 %10, metadata !19152, metadata !DIExpression()), !dbg !19153
  %11 = icmp eq i32 %10, 8, !dbg !19167
  br i1 %11, label %12, label %2, !dbg !19154, !llvm.loop !19168

12:                                               ; preds = %9, %7
  ret void, !dbg !19170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !19171 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19175, metadata !DIExpression()), !dbg !19176
  %2 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !19177
  %3 = bitcast i8* %2 to i32*, !dbg !19177
  %4 = load i32, i32* %3, align 4, !dbg !19177
  ret i32 %4, !dbg !19178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vQueueSetQueueNumber(i8* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !19179 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19183, metadata !DIExpression()), !dbg !19185
  call void @llvm.dbg.value(metadata i32 %1, metadata !19184, metadata !DIExpression()), !dbg !19185
  %3 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !19186
  %4 = bitcast i8* %3 to i32*, !dbg !19186
  store i32 %1, i32* %4, align 4, !dbg !19187
  ret void, !dbg !19188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !19189 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19193, metadata !DIExpression()), !dbg !19194
  %2 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !19195
  %3 = load i8, i8* %2, align 4, !dbg !19195
  ret i8 %3, !dbg !19196
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueEmptyFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !19197 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19201, metadata !DIExpression()), !dbg !19203
  %2 = icmp eq i8* %0, null, !dbg !19204
  br i1 %2, label %3, label %4, !dbg !19206

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 2015) #20, !dbg !19207
  br label %4, !dbg !19207

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19209
  %6 = bitcast i8* %5 to i32*, !dbg !19209
  %7 = load volatile i32, i32* %6, align 4, !dbg !19209
  %8 = icmp eq i32 %7, 0, !dbg !19211
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !19202, metadata !DIExpression()), !dbg !19203
  ret i32 %9, !dbg !19212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueFullFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !19213 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19215, metadata !DIExpression()), !dbg !19217
  %2 = icmp eq i8* %0, null, !dbg !19218
  br i1 %2, label %3, label %4, !dbg !19220

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.223, i32 0, i32 0), i32 noundef 2054) #20, !dbg !19221
  br label %4, !dbg !19221

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19223
  %6 = bitcast i8* %5 to i32*, !dbg !19223
  %7 = load volatile i32, i32* %6, align 4, !dbg !19223
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !19225
  %9 = bitcast i8* %8 to i32*, !dbg !19225
  %10 = load i32, i32* %9, align 4, !dbg !19225
  %11 = icmp eq i32 %7, %10, !dbg !19226
  %12 = zext i1 %11 to i32
  call void @llvm.dbg.value(metadata i32 %12, metadata !19216, metadata !DIExpression()), !dbg !19217
  ret i32 %12, !dbg !19227
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueAddToRegistry(i8* noundef %0, i8* noundef %1) local_unnamed_addr #13 !dbg !19228 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19232, metadata !DIExpression()), !dbg !19235
  call void @llvm.dbg.value(metadata i8* %1, metadata !19233, metadata !DIExpression()), !dbg !19235
  call void @llvm.dbg.value(metadata i32 0, metadata !19234, metadata !DIExpression()), !dbg !19235
  br label %3, !dbg !19236

3:                                                ; preds = %2, %10
  %4 = phi i32 [ 0, %2 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !19234, metadata !DIExpression()), !dbg !19235
  %5 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 0, !dbg !19238
  %6 = load i8*, i8** %5, align 4, !dbg !19238
  %7 = icmp eq i8* %6, null, !dbg !19242
  br i1 %7, label %8, label %10, !dbg !19243

8:                                                ; preds = %3
  store i8* %1, i8** %5, align 4, !dbg !19244
  %9 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 1, !dbg !19246
  store i8* %0, i8** %9, align 4, !dbg !19247
  br label %13, !dbg !19248

10:                                               ; preds = %3
  %11 = add nuw nsw i32 %4, 1, !dbg !19249
  call void @llvm.dbg.value(metadata i32 %11, metadata !19234, metadata !DIExpression()), !dbg !19235
  %12 = icmp eq i32 %11, 8, !dbg !19250
  br i1 %12, label %13, label %3, !dbg !19236, !llvm.loop !19251

13:                                               ; preds = %10, %8
  ret void, !dbg !19253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueWaitForMessageRestricted(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19254 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19258, metadata !DIExpression()), !dbg !19261
  call void @llvm.dbg.value(metadata i32 %1, metadata !19259, metadata !DIExpression()), !dbg !19261
  call void @llvm.dbg.value(metadata i8* %0, metadata !19260, metadata !DIExpression()), !dbg !19261
  tail call void @vPortEnterCritical() #20, !dbg !19262
  %3 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !19263
  %4 = bitcast i8* %3 to i32*, !dbg !19263
  %5 = load volatile i32, i32* %4, align 4, !dbg !19263
  %6 = icmp eq i32 %5, -1, !dbg !19263
  br i1 %6, label %7, label %8, !dbg !19266

7:                                                ; preds = %2
  store volatile i32 0, i32* %4, align 4, !dbg !19267
  br label %8, !dbg !19267

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !19269
  %10 = bitcast i8* %9 to i32*, !dbg !19269
  %11 = load volatile i32, i32* %10, align 4, !dbg !19269
  %12 = icmp eq i32 %11, -1, !dbg !19269
  br i1 %12, label %13, label %14, !dbg !19266

13:                                               ; preds = %8
  store volatile i32 0, i32* %10, align 4, !dbg !19271
  br label %14, !dbg !19271

14:                                               ; preds = %13, %8
  tail call void @vPortExitCritical() #20, !dbg !19262
  %15 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !19273
  %16 = bitcast i8* %15 to i32*, !dbg !19273
  %17 = load volatile i32, i32* %16, align 4, !dbg !19273
  %18 = icmp eq i32 %17, 0, !dbg !19275
  br i1 %18, label %19, label %22, !dbg !19276

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !19277
  %21 = bitcast i8* %20 to %struct.xLIST*, !dbg !19277
  tail call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef nonnull %21, i32 noundef %1) #20, !dbg !19279
  br label %22, !dbg !19280

22:                                               ; preds = %14, %19
  %23 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !19281
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %23, metadata !19260, metadata !DIExpression()), !dbg !19261
  tail call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %23) #22, !dbg !19282
  ret void, !dbg !19283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #4 !dbg !19284 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !19288, metadata !DIExpression()), !dbg !19291
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !19289, metadata !DIExpression()), !dbg !19291
  call void @llvm.dbg.value(metadata i8* %2, metadata !19290, metadata !DIExpression()), !dbg !19291
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !19292
  call void @llvm.dbg.value(metadata i32* %4, metadata !19288, metadata !DIExpression()), !dbg !19291
  store i32 16777216, i32* %4, align 4, !dbg !19293
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !19294
  call void @llvm.dbg.value(metadata i32* %5, metadata !19288, metadata !DIExpression()), !dbg !19291
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !19295
  store i32 %6, i32* %5, align 4, !dbg !19296
  %7 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !19297
  call void @llvm.dbg.value(metadata i32* %7, metadata !19288, metadata !DIExpression()), !dbg !19291
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %7, align 4, !dbg !19298
  %8 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !19299
  call void @llvm.dbg.value(metadata i32* %8, metadata !19288, metadata !DIExpression()), !dbg !19291
  %9 = ptrtoint i8* %2 to i32, !dbg !19300
  store i32 %9, i32* %8, align 4, !dbg !19301
  %10 = getelementptr inbounds i32, i32* %0, i32 -9, !dbg !19302
  call void @llvm.dbg.value(metadata i32* %10, metadata !19288, metadata !DIExpression()), !dbg !19291
  store i32 -3, i32* %10, align 4, !dbg !19303
  %11 = getelementptr inbounds i32, i32* %0, i32 -17, !dbg !19304
  call void @llvm.dbg.value(metadata i32* %11, metadata !19288, metadata !DIExpression()), !dbg !19291
  ret i32* %11, !dbg !19305
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTaskExitError() #17 !dbg !19306 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !19307
  %2 = icmp eq i32 %1, -1, !dbg !19307
  br i1 %2, label %4, label %3, !dbg !19309

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.241, i32 0, i32 0), i32 noundef 260) #20, !dbg !19310
  br label %4, !dbg !19310

4:                                                ; preds = %3, %0
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !19312, !srcloc !19317
  call void @llvm.dbg.value(metadata i32 %5, metadata !19315, metadata !DIExpression()) #19, !dbg !19318
  br label %6, !dbg !19319

6:                                                ; preds = %6, %4
  br label %6, !dbg !19320, !llvm.loop !19323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortCurrentTaskStackOverflowCheck() local_unnamed_addr #0 !dbg !19326 {
  %1 = tail call i32 @uxTaskGetBottomOfStack(i8* noundef null) #20, !dbg !19330
  call void @llvm.dbg.value(metadata i32 %1, metadata !19328, metadata !DIExpression()), !dbg !19331
  %2 = tail call i32 @hal_dwt_request_watchpoint(i32 noundef 3, i32 noundef %1, i32 noundef 3, i32 noundef 6) #20, !dbg !19332
  call void @llvm.dbg.value(metadata i32 %2, metadata !19329, metadata !DIExpression()), !dbg !19331
  ret void, !dbg !19333
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @SVC_Handler() #18 section ".ramTEXT" !dbg !19334 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\0A\09cpsie i \09\09\09\09\09\09\0A\09bl hal_dwt_init                 \0A\09bl vPortCurrentTaskStackOverflowCheck \0A\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #19, !dbg !19335, !srcloc !19336
  unreachable, !dbg !19337
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #17 !dbg !19338 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !19345
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !19345
  call void @llvm.dbg.declare(metadata i32* %1, metadata !19340, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !19342, metadata !DIExpression()), !dbg !19347
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !19348
  call void @llvm.dbg.declare(metadata i8* %2, metadata !19344, metadata !DIExpression()), !dbg !19349
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !19350
  %5 = zext i8 %4 to i32, !dbg !19350
  store volatile i32 %5, i32* %1, align 4, !dbg !19351
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !19352
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !19353
  store volatile i8 %6, i8* %2, align 1, !dbg !19354
  %7 = load volatile i8, i8* %2, align 1, !dbg !19355
  %8 = and i8 %7, -128, !dbg !19356
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !19357
  %9 = load volatile i8, i8* %2, align 1, !dbg !19358
  %10 = icmp slt i8 %9, 0, !dbg !19359
  br i1 %10, label %11, label %21, !dbg !19360

11:                                               ; preds = %0, %11
  %12 = phi i32 [ %13, %11 ], [ 7, %0 ], !dbg !19361
  %13 = add i32 %12, -1, !dbg !19361
  %14 = load volatile i8, i8* %2, align 1, !dbg !19363
  %15 = shl i8 %14, 1, !dbg !19363
  store volatile i8 %15, i8* %2, align 1, !dbg !19363
  %16 = load volatile i8, i8* %2, align 1, !dbg !19358
  %17 = icmp slt i8 %16, 0, !dbg !19359
  br i1 %17, label %11, label %18, !dbg !19360, !llvm.loop !19364

18:                                               ; preds = %11
  %19 = shl i32 %13, 8, !dbg !19366
  %20 = and i32 %19, 1792, !dbg !19366
  br label %21, !dbg !19366

21:                                               ; preds = %18, %0
  %22 = phi i32 [ %20, %18 ], [ 1792, %0 ]
  store i32 %22, i32* @ulMaxPRIGROUPValue, align 4, !dbg !19367
  %23 = load volatile i32, i32* %1, align 4, !dbg !19368
  %24 = trunc i32 %23 to i8, !dbg !19368
  store volatile i8 %24, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !19369
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !19370
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !19370
  %25 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !19371
  %26 = or i32 %25, 14680064, !dbg !19371
  store volatile i32 %26, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !19371
  %27 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !19372
  %28 = or i32 %27, -2147483648, !dbg !19372
  store volatile i32 %28, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !19372
  tail call void @vPortSetupTimerInterrupt() #22, !dbg !19373
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !19374
  tail call void @vPortEnableVFP() #22, !dbg !19375
  %29 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !19376
  %30 = or i32 %29, -1073741824, !dbg !19376
  store volatile i32 %30, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !19376
  tail call void @prvPortStartFirstTask() #22, !dbg !19377
  tail call void @prvTaskExitError() #22, !dbg !19378
  unreachable, !dbg !19379
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #0 !dbg !19380 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !19381
  %2 = udiv i32 %1, 1000, !dbg !19382
  %3 = add nsw i32 %2, -1, !dbg !19383
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !19384
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !19385
  ret void, !dbg !19386
}

; Function Attrs: naked noinline nounwind optsize
define internal void @vPortEnableVFP() #18 !dbg !19387 {
  tail call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09", ""() #19, !dbg !19388, !srcloc !19389
  unreachable, !dbg !19390
}

; Function Attrs: naked noinline nounwind optsize
define internal void @prvPortStartFirstTask() #18 !dbg !19391 {
  tail call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #19, !dbg !19392, !srcloc !19393
  unreachable, !dbg !19394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEndScheduler() local_unnamed_addr #0 !dbg !19395 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !19396
  %2 = icmp eq i32 %1, 1000, !dbg !19396
  br i1 %2, label %4, label %3, !dbg !19398

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.241, i32 0, i32 0), i32 noundef 421) #20, !dbg !19399
  br label %4, !dbg !19399

4:                                                ; preds = %3, %0
  ret void, !dbg !19401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEnterCritical() local_unnamed_addr #0 !dbg !19402 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !19403, !srcloc !19317
  call void @llvm.dbg.value(metadata i32 %1, metadata !19315, metadata !DIExpression()) #19, !dbg !19405
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !19406
  %3 = add i32 %2, 1, !dbg !19406
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !19406
  %4 = icmp eq i32 %2, 0, !dbg !19407
  br i1 %4, label %5, label %10, !dbg !19409

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !19410
  %7 = and i32 %6, 255, !dbg !19410
  %8 = icmp eq i32 %7, 0, !dbg !19410
  br i1 %8, label %10, label %9, !dbg !19413

9:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.241, i32 0, i32 0), i32 noundef 437) #20, !dbg !19414
  br label %10, !dbg !19414

10:                                               ; preds = %5, %9, %0
  ret void, !dbg !19416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortExitCritical() local_unnamed_addr #0 !dbg !19417 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !19418
  %2 = icmp eq i32 %1, 0, !dbg !19418
  br i1 %2, label %3, label %5, !dbg !19420

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.241, i32 0, i32 0), i32 noundef 444) #20, !dbg !19421
  %4 = load i32, i32* @uxCriticalNesting, align 4, !dbg !19423
  br label %5, !dbg !19421

5:                                                ; preds = %3, %0
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !19423
  %7 = add i32 %6, -1, !dbg !19423
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !19423
  %8 = icmp eq i32 %7, 0, !dbg !19424
  br i1 %8, label %9, label %10, !dbg !19426

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !19427, metadata !DIExpression()) #19, !dbg !19430
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 0) #19, !dbg !19433, !srcloc !19434
  br label %10, !dbg !19435

10:                                               ; preds = %9, %5
  ret void, !dbg !19436
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @PendSV_Handler() #18 section ".ramTEXT" !dbg !19437 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\09\0A\09push {lr}\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\09\0A\09pop  {lr}\09\09\09\09\09\09\09\0A\09cpsie i \09\09\09\09\09\09\09\0A\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3}\09\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A   isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09bl vPortCurrentTaskStackOverflowCheck\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3}\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 128) #19, !dbg !19438, !srcloc !19439
  unreachable, !dbg !19440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SysTick_Handler() local_unnamed_addr #0 section ".ramTEXT" !dbg !19441 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !19444, !srcloc !19450
  call void @llvm.dbg.value(metadata i32 undef, metadata !19447, metadata !DIExpression()) #19, !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !19448, metadata !DIExpression()) #19, !dbg !19451
  call void @llvm.dbg.value(metadata i32 undef, metadata !19443, metadata !DIExpression()), !dbg !19452
  tail call void @Flash_ReturnReady() #20, !dbg !19453
  %2 = tail call i32 @xTaskIncrementTick() #20, !dbg !19455
  %3 = icmp eq i32 %2, 0, !dbg !19457
  br i1 %3, label %5, label %4, !dbg !19458

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !19459
  br label %5, !dbg !19461

5:                                                ; preds = %4, %0
  %6 = extractvalue { i32, i32 } %1, 0, !dbg !19444
  call void @llvm.dbg.value(metadata i32 %6, metadata !19447, metadata !DIExpression()) #19, !dbg !19451
  call void @llvm.dbg.value(metadata i32 %6, metadata !19443, metadata !DIExpression()), !dbg !19452
  call void @llvm.dbg.value(metadata i32 undef, metadata !19427, metadata !DIExpression()) #19, !dbg !19462
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #19, !dbg !19464, !srcloc !19434
  ret void, !dbg !19465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #0 !dbg !19466 {
  %1 = tail call i32 asm sideeffect "mrs $0, ipsr", "=r"() #19, !dbg !19470, !srcloc !19471
  call void @llvm.dbg.value(metadata i32 %1, metadata !19468, metadata !DIExpression()), !dbg !19472
  %2 = icmp ugt i32 %1, 15, !dbg !19473
  br i1 %2, label %3, label %9, !dbg !19475

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !19476
  %5 = load volatile i8, i8* %4, align 1, !dbg !19476
  call void @llvm.dbg.value(metadata i8 %5, metadata !19469, metadata !DIExpression()), !dbg !19472
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !19478
  %7 = icmp ult i8 %5, %6, !dbg !19478
  br i1 %7, label %8, label %9, !dbg !19480

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.241, i32 0, i32 0), i32 noundef 794) #20, !dbg !19481
  br label %9, !dbg !19481

9:                                                ; preds = %3, %8, %0
  %10 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !19483
  %11 = and i32 %10, 1792, !dbg !19483
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !19483
  %13 = icmp ugt i32 %11, %12, !dbg !19483
  br i1 %13, label %14, label %15, !dbg !19485

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.241, i32 0, i32 0), i32 noundef 810) #20, !dbg !19486
  br label %15, !dbg !19486

15:                                               ; preds = %14, %9
  ret void, !dbg !19488
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMalloc(i32 noundef %0) local_unnamed_addr #0 !dbg !19489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19493, metadata !DIExpression()), !dbg !19498
  call void @llvm.dbg.value(metadata i8* null, metadata !19497, metadata !DIExpression()), !dbg !19498
  tail call void @vTaskSuspendAll() #20, !dbg !19499
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !19500
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !19503
  br i1 %3, label %4, label %5, !dbg !19504

4:                                                ; preds = %1
  tail call fastcc void @prvHeapInit() #22, !dbg !19505
  br label %5, !dbg !19507

5:                                                ; preds = %1, %4
  %6 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !19508
  %7 = select i1 %6, i32 -2147483648, i32 0, !dbg !19508
  %8 = and i32 %7, %0, !dbg !19510
  %9 = icmp ne i32 %8, 0, !dbg !19511
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9, !dbg !19512
  br i1 %11, label %84, label %12, !dbg !19512

12:                                               ; preds = %5
  %13 = add i32 %0, 8, !dbg !19513
  call void @llvm.dbg.value(metadata i32 %13, metadata !19493, metadata !DIExpression()), !dbg !19498
  %14 = and i32 %0, 7, !dbg !19517
  %15 = icmp eq i32 %14, 0, !dbg !19519
  %16 = add i32 %0, 16, !dbg !19520
  %17 = and i32 %16, -8, !dbg !19520
  %18 = select i1 %15, i32 %13, i32 %17, !dbg !19520
  call void @llvm.dbg.value(metadata i32 %18, metadata !19493, metadata !DIExpression()), !dbg !19498
  %19 = icmp eq i32 %18, 0, !dbg !19521
  %20 = load i32, i32* @xFreeBytesRemaining, align 4
  %21 = icmp ugt i32 %18, %20
  %22 = select i1 %19, i1 true, i1 %21, !dbg !19523
  br i1 %22, label %84, label %23, !dbg !19523

23:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !19495, metadata !DIExpression()), !dbg !19498
  %24 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !19524
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !19494, metadata !DIExpression()), !dbg !19498
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !19495, metadata !DIExpression()), !dbg !19498
  %25 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 1, !dbg !19526
  %26 = load i32, i32* %25, align 4, !dbg !19526
  %27 = icmp ult i32 %26, %18, !dbg !19527
  br i1 %27, label %28, label %42, !dbg !19528

28:                                               ; preds = %23
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !19495, metadata !DIExpression()), !dbg !19498
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !19494, metadata !DIExpression()), !dbg !19498
  %29 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 0, !dbg !19529
  %30 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %29, align 4, !dbg !19529
  %31 = icmp eq %struct.A_BLOCK_LINK* %30, null, !dbg !19530
  br i1 %31, label %42, label %32, !dbg !19531, !llvm.loop !19532

32:                                               ; preds = %28, %38
  %33 = phi %struct.A_BLOCK_LINK* [ %40, %38 ], [ %30, %28 ]
  %34 = phi %struct.A_BLOCK_LINK* [ %33, %38 ], [ %24, %28 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !19494, metadata !DIExpression()), !dbg !19498
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !19495, metadata !DIExpression()), !dbg !19498
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !19494, metadata !DIExpression()), !dbg !19498
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 1, !dbg !19526
  %36 = load i32, i32* %35, align 4, !dbg !19526
  %37 = icmp ult i32 %36, %18, !dbg !19527
  br i1 %37, label %38, label %42, !dbg !19528, !llvm.loop !19532

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !19495, metadata !DIExpression()), !dbg !19498
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !19494, metadata !DIExpression()), !dbg !19498
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 0, !dbg !19529
  %40 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %39, align 4, !dbg !19529
  %41 = icmp eq %struct.A_BLOCK_LINK* %40, null, !dbg !19530
  br i1 %41, label %42, label %32, !dbg !19531, !llvm.loop !19532

42:                                               ; preds = %32, %38, %28, %23
  %43 = phi %struct.A_BLOCK_LINK* [ %24, %23 ], [ %24, %28 ], [ %33, %38 ], [ %33, %32 ]
  %44 = phi %struct.A_BLOCK_LINK* [ @xStart, %23 ], [ @xStart, %28 ], [ %34, %38 ], [ %34, %32 ], !dbg !19534
  %45 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 1, !dbg !19526
  %46 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !19535
  %47 = icmp eq %struct.A_BLOCK_LINK* %43, %46, !dbg !19537
  br i1 %47, label %84, label %48, !dbg !19538

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %44, i32 0, i32 0, !dbg !19539
  %50 = bitcast %struct.A_BLOCK_LINK* %44 to i8**, !dbg !19539
  %51 = load i8*, i8** %50, align 4, !dbg !19539
  %52 = getelementptr inbounds i8, i8* %51, i32 8, !dbg !19541
  call void @llvm.dbg.value(metadata i8* %52, metadata !19497, metadata !DIExpression()), !dbg !19498
  %53 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 0, !dbg !19542
  %54 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %53, align 4, !dbg !19542
  store %struct.A_BLOCK_LINK* %54, %struct.A_BLOCK_LINK** %49, align 4, !dbg !19543
  %55 = load i32, i32* %45, align 4, !dbg !19544
  %56 = sub i32 %55, %18, !dbg !19546
  %57 = icmp ugt i32 %56, 16, !dbg !19547
  br i1 %57, label %58, label %73, !dbg !19548

58:                                               ; preds = %48
  %59 = bitcast %struct.A_BLOCK_LINK* %43 to i8*, !dbg !19549
  %60 = getelementptr inbounds i8, i8* %59, i32 %18, !dbg !19551
  %61 = bitcast i8* %60 to %struct.A_BLOCK_LINK*, !dbg !19552
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %61, metadata !19496, metadata !DIExpression()), !dbg !19498
  %62 = ptrtoint i8* %60 to i32, !dbg !19553
  %63 = and i32 %62, 7, !dbg !19553
  %64 = icmp eq i32 %63, 0, !dbg !19553
  br i1 %64, label %68, label %65, !dbg !19555

65:                                               ; preds = %58
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.260, i32 0, i32 0), i32 noundef 257) #20, !dbg !19556
  %66 = load i32, i32* %45, align 4, !dbg !19558
  %67 = sub i32 %66, %18, !dbg !19559
  br label %68, !dbg !19556

68:                                               ; preds = %65, %58
  %69 = phi i32 [ %67, %65 ], [ %56, %58 ], !dbg !19559
  %70 = getelementptr inbounds i8, i8* %60, i32 4, !dbg !19560
  %71 = bitcast i8* %70 to i32*, !dbg !19560
  store i32 %69, i32* %71, align 4, !dbg !19561
  store i32 %18, i32* %45, align 4, !dbg !19562
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %61) #22, !dbg !19563
  %72 = load i32, i32* %45, align 4, !dbg !19564
  br label %73, !dbg !19565

73:                                               ; preds = %48, %68
  %74 = phi i32 [ %55, %48 ], [ %72, %68 ], !dbg !19564
  %75 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !19566
  %76 = sub i32 %75, %74, !dbg !19566
  store i32 %76, i32* @xFreeBytesRemaining, align 4, !dbg !19566
  %77 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !19567
  %78 = icmp ult i32 %76, %77, !dbg !19569
  br i1 %78, label %79, label %80, !dbg !19570

79:                                               ; preds = %73
  store i32 %76, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !19571
  br label %80, !dbg !19573

80:                                               ; preds = %73, %79
  %81 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !19574
  %82 = select i1 %81, i32 -2147483648, i32 0, !dbg !19574
  %83 = or i32 %74, %82, !dbg !19575
  store i32 %83, i32* %45, align 4, !dbg !19575
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** %53, align 4, !dbg !19576
  br label %84, !dbg !19577

84:                                               ; preds = %5, %42, %80, %12
  %85 = phi i8* [ %52, %80 ], [ null, %42 ], [ null, %12 ], [ null, %5 ], !dbg !19498
  call void @llvm.dbg.value(metadata i8* %85, metadata !19497, metadata !DIExpression()), !dbg !19498
  %86 = tail call i32 @xTaskResumeAll() #20, !dbg !19578
  %87 = ptrtoint i8* %85 to i32, !dbg !19579
  %88 = and i32 %87, 7, !dbg !19579
  %89 = icmp eq i32 %88, 0, !dbg !19579
  br i1 %89, label %91, label %90, !dbg !19581

90:                                               ; preds = %84
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.260, i32 0, i32 0), i32 noundef 321) #20, !dbg !19582
  br label %91, !dbg !19582

91:                                               ; preds = %90, %84
  ret i8* %85, !dbg !19584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @prvHeapInit() unnamed_addr #14 !dbg !19585 {
  call void @llvm.dbg.value(metadata i32 65536, metadata !19590, metadata !DIExpression()), !dbg !19591
  call void @llvm.dbg.value(metadata i32 ptrtoint ([65536 x i8]* @ucHeap to i32), metadata !19589, metadata !DIExpression()), !dbg !19591
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536), metadata !19590, metadata !DIExpression()), !dbg !19591
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), metadata !19589, metadata !DIExpression()), !dbg !19591
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !19588, metadata !DIExpression()), !dbg !19591
  store %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !19592
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 1), align 4, !dbg !19593
  call void @llvm.dbg.value(metadata i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), metadata !19589, metadata !DIExpression()), !dbg !19591
  call void @llvm.dbg.value(metadata i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), metadata !19589, metadata !DIExpression()), !dbg !19591
  call void @llvm.dbg.value(metadata i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), metadata !19589, metadata !DIExpression()), !dbg !19591
  store %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !19594
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !19595
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 8, !dbg !19596
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !19587, metadata !DIExpression()), !dbg !19591
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !19597
  %1 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !19598
  store %struct.A_BLOCK_LINK* %1, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 4, !dbg !19599
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !19600
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xFreeBytesRemaining, align 4, !dbg !19601
  store i1 true, i1* @xBlockAllocatedBit, align 4, !dbg !19602
  ret void, !dbg !19603
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef %0) unnamed_addr #13 !dbg !19604 {
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %0, metadata !19608, metadata !DIExpression()), !dbg !19611
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !19609, metadata !DIExpression()), !dbg !19611
  br label %2, !dbg !19612

2:                                                ; preds = %2, %1
  %3 = phi %struct.A_BLOCK_LINK* [ @xStart, %1 ], [ %5, %2 ], !dbg !19614
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !19609, metadata !DIExpression()), !dbg !19611
  %4 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !19615
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %4, align 4, !dbg !19615
  %6 = icmp ult %struct.A_BLOCK_LINK* %5, %0, !dbg !19617
  br i1 %6, label %2, label %7, !dbg !19618, !llvm.loop !19619

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !19615
  %9 = bitcast %struct.A_BLOCK_LINK* %3 to i8*, !dbg !19621
  call void @llvm.dbg.value(metadata i8* %9, metadata !19610, metadata !DIExpression()), !dbg !19611
  %10 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 1, !dbg !19622
  %11 = load i32, i32* %10, align 4, !dbg !19622
  %12 = getelementptr inbounds i8, i8* %9, i32 %11, !dbg !19624
  %13 = bitcast %struct.A_BLOCK_LINK* %0 to i8*, !dbg !19625
  %14 = icmp eq i8* %12, %13, !dbg !19626
  %15 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !19611
  br i1 %14, label %17, label %19, !dbg !19627

17:                                               ; preds = %7
  %18 = add i32 %16, %11, !dbg !19628
  store i32 %18, i32* %10, align 4, !dbg !19628
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !19608, metadata !DIExpression()), !dbg !19611
  br label %19, !dbg !19630

19:                                               ; preds = %7, %17
  %20 = phi i8* [ %9, %17 ], [ %13, %7 ], !dbg !19631
  %21 = phi i32 [ %18, %17 ], [ %16, %7 ], !dbg !19632
  %22 = phi %struct.A_BLOCK_LINK* [ %3, %17 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %22, metadata !19608, metadata !DIExpression()), !dbg !19611
  call void @llvm.dbg.value(metadata i8* %20, metadata !19610, metadata !DIExpression()), !dbg !19611
  %23 = getelementptr inbounds i8, i8* %20, i32 %21, !dbg !19634
  %24 = bitcast %struct.A_BLOCK_LINK* %5 to i8*, !dbg !19635
  %25 = icmp ne i8* %23, %24, !dbg !19636
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4
  %27 = icmp eq %struct.A_BLOCK_LINK* %5, %26
  %28 = select i1 %25, i1 true, i1 %27, !dbg !19637
  br i1 %28, label %37, label %29, !dbg !19637

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 1, !dbg !19632
  %31 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 1, !dbg !19638
  %32 = load i32, i32* %31, align 4, !dbg !19638
  %33 = add i32 %32, %21, !dbg !19642
  store i32 %33, i32* %30, align 4, !dbg !19642
  %34 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %8, align 4, !dbg !19643
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %34, i32 0, i32 0, !dbg !19644
  %36 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %35, align 4, !dbg !19644
  br label %37, !dbg !19645

37:                                               ; preds = %19, %29
  %38 = phi %struct.A_BLOCK_LINK* [ %36, %29 ], [ %5, %19 ]
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 0, !dbg !19646
  store %struct.A_BLOCK_LINK* %38, %struct.A_BLOCK_LINK** %39, align 4, !dbg !19646
  %40 = icmp eq %struct.A_BLOCK_LINK* %3, %22, !dbg !19647
  br i1 %40, label %42, label %41, !dbg !19649

41:                                               ; preds = %37
  store %struct.A_BLOCK_LINK* %22, %struct.A_BLOCK_LINK** %8, align 4, !dbg !19650
  br label %42, !dbg !19652

42:                                               ; preds = %37, %41
  ret void, !dbg !19653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFree(i8* noundef %0) local_unnamed_addr #0 !dbg !19654 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19656, metadata !DIExpression()), !dbg !19659
  call void @llvm.dbg.value(metadata i8* %0, metadata !19657, metadata !DIExpression()), !dbg !19659
  %2 = icmp eq i8* %0, null, !dbg !19660
  br i1 %2, label %35, label %3, !dbg !19662

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !19663
  call void @llvm.dbg.value(metadata i8* %4, metadata !19657, metadata !DIExpression()), !dbg !19659
  %5 = bitcast i8* %4 to %struct.A_BLOCK_LINK*, !dbg !19665
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %5, metadata !19658, metadata !DIExpression()), !dbg !19659
  %6 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !19666
  %7 = bitcast i8* %6 to i32*, !dbg !19666
  %8 = load i32, i32* %7, align 4, !dbg !19666
  %9 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !19666
  %10 = select i1 %9, i32 -2147483648, i32 0, !dbg !19666
  %11 = and i32 %10, %8, !dbg !19666
  %12 = icmp eq i32 %11, 0, !dbg !19666
  br i1 %12, label %13, label %14, !dbg !19668

13:                                               ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.260, i32 0, i32 0), i32 noundef 341) #20, !dbg !19669
  br label %14, !dbg !19669

14:                                               ; preds = %13, %3
  %15 = bitcast i8* %4 to %struct.A_BLOCK_LINK**, !dbg !19671
  %16 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !19671
  %17 = icmp eq %struct.A_BLOCK_LINK* %16, null, !dbg !19671
  br i1 %17, label %19, label %18, !dbg !19673

18:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.260, i32 0, i32 0), i32 noundef 342) #20, !dbg !19674
  br label %19, !dbg !19674

19:                                               ; preds = %18, %14
  %20 = load i32, i32* %7, align 4, !dbg !19676
  %21 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !19678
  %22 = select i1 %21, i32 -2147483648, i32 0, !dbg !19678
  %23 = and i32 %22, %20, !dbg !19679
  %24 = icmp eq i32 %23, 0, !dbg !19680
  br i1 %24, label %35, label %25, !dbg !19681

25:                                               ; preds = %19
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !19682
  %27 = icmp eq %struct.A_BLOCK_LINK* %26, null, !dbg !19685
  br i1 %27, label %28, label %35, !dbg !19686

28:                                               ; preds = %25
  %29 = xor i32 %22, -1, !dbg !19687
  %30 = and i32 %20, %29, !dbg !19689
  store i32 %30, i32* %7, align 4, !dbg !19689
  tail call void @vTaskSuspendAll() #20, !dbg !19690
  %31 = load i32, i32* %7, align 4, !dbg !19691
  %32 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !19693
  %33 = add i32 %32, %31, !dbg !19693
  store i32 %33, i32* @xFreeBytesRemaining, align 4, !dbg !19693
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %5) #22, !dbg !19694
  %34 = tail call i32 @xTaskResumeAll() #20, !dbg !19695
  br label %35, !dbg !19696

35:                                               ; preds = %25, %28, %19, %1
  ret void, !dbg !19697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #9 !dbg !19698 {
  %1 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !19701
  ret i32 %1, !dbg !19702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetMinimumEverFreeHeapSize() local_unnamed_addr #9 !dbg !19703 {
  %1 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !19704
  ret i32 %1, !dbg !19705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #8 !dbg !19706 {
  ret void, !dbg !19707
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19712, metadata !DIExpression()), !dbg !19715
  call void @llvm.dbg.value(metadata i32 %1, metadata !19713, metadata !DIExpression()), !dbg !19715
  %3 = mul i32 %1, %0, !dbg !19716
  %4 = tail call i8* @pvPortMalloc(i32 noundef %3) #22, !dbg !19717
  call void @llvm.dbg.value(metadata i8* %4, metadata !19714, metadata !DIExpression()), !dbg !19715
  %5 = icmp eq i8* %4, null, !dbg !19718
  br i1 %5, label %8, label %6, !dbg !19720

6:                                                ; preds = %2
  %7 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef %3) #20, !dbg !19721
  br label %8, !dbg !19723

8:                                                ; preds = %6, %2
  ret i8* %4, !dbg !19724
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19729, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.value(metadata i32 %1, metadata !19730, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.value(metadata i8* null, metadata !19731, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.value(metadata i32 0, metadata !19732, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.value(metadata i8* %0, metadata !19733, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* null, metadata !19734, metadata !DIExpression()), !dbg !19735
  %3 = tail call i8* @pvPortCalloc(i32 noundef %1, i32 noundef 1) #22, !dbg !19736
  call void @llvm.dbg.value(metadata i8* %3, metadata !19731, metadata !DIExpression()), !dbg !19735
  %4 = icmp eq i8* %0, null, !dbg !19737
  br i1 %4, label %29, label %5, !dbg !19739

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !19740
  call void @llvm.dbg.value(metadata i8* %6, metadata !19733, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.value(metadata i8* %6, metadata !19734, metadata !DIExpression()), !dbg !19735
  %7 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !19742
  %8 = bitcast i8* %7 to i32*, !dbg !19742
  %9 = load i32, i32* %8, align 4, !dbg !19742
  %10 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !19742
  %11 = select i1 %10, i32 -2147483648, i32 0, !dbg !19742
  %12 = and i32 %11, %9, !dbg !19742
  %13 = icmp eq i32 %12, 0, !dbg !19742
  br i1 %13, label %14, label %15, !dbg !19744

14:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.260, i32 0, i32 0), i32 noundef 546) #20, !dbg !19745
  br label %15, !dbg !19745

15:                                               ; preds = %14, %5
  %16 = bitcast i8* %6 to %struct.A_BLOCK_LINK**, !dbg !19747
  %17 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %16, align 4, !dbg !19747
  %18 = icmp eq %struct.A_BLOCK_LINK* %17, null, !dbg !19747
  br i1 %18, label %20, label %19, !dbg !19749

19:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.260, i32 0, i32 0), i32 noundef 547) #20, !dbg !19750
  br label %20, !dbg !19750

20:                                               ; preds = %19, %15
  %21 = load i32, i32* %8, align 4, !dbg !19752
  %22 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !19753
  %23 = select i1 %22, i32 2147483647, i32 -1, !dbg !19754
  %24 = and i32 %23, %21, !dbg !19755
  call void @llvm.dbg.value(metadata i32 %24, metadata !19732, metadata !DIExpression()), !dbg !19735
  %25 = add i32 %24, -8, !dbg !19756
  call void @llvm.dbg.value(metadata i32 %25, metadata !19732, metadata !DIExpression()), !dbg !19735
  %26 = icmp ult i32 %25, %1, !dbg !19757
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = tail call i8* @memcpy(i8* noundef %3, i8* noundef nonnull %0, i32 noundef %27) #20, !dbg !19759
  tail call void @vPortFree(i8* noundef nonnull %0) #22, !dbg !19760
  br label %29, !dbg !19761

29:                                               ; preds = %20, %2
  ret i8* %3, !dbg !19762
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMallocNC(i32 noundef %0) local_unnamed_addr #0 !dbg !19763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19765, metadata !DIExpression()), !dbg !19766
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #22, !dbg !19767
  ret i8* %2, !dbg !19768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFreeNC(i8* noundef %0) local_unnamed_addr #0 !dbg !19769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19771, metadata !DIExpression()), !dbg !19772
  tail call void @vPortFree(i8* noundef %0) #22, !dbg !19773
  ret void, !dbg !19774
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_malloc(i32 noundef %0) local_unnamed_addr #0 !dbg !19775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19777, metadata !DIExpression()), !dbg !19778
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #22, !dbg !19779
  ret i8* %2, !dbg !19780
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19783, metadata !DIExpression()), !dbg !19785
  call void @llvm.dbg.value(metadata i32 %1, metadata !19784, metadata !DIExpression()), !dbg !19785
  %3 = tail call i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) #22, !dbg !19786
  ret i8* %3, !dbg !19787
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_realloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19788 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19790, metadata !DIExpression()), !dbg !19792
  call void @llvm.dbg.value(metadata i32 %1, metadata !19791, metadata !DIExpression()), !dbg !19792
  %3 = tail call i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) #22, !dbg !19793
  ret i8* %3, !dbg !19794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__wrap_free(i8* noundef %0) local_unnamed_addr #0 !dbg !19795 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19797, metadata !DIExpression()), !dbg !19798
  tail call void @vPortFree(i8* noundef %0) #22, !dbg !19799
  ret void, !dbg !19800
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @abort() local_unnamed_addr #17 !dbg !19801 {
  tail call void asm sideeffect "cpsid i", ""() #19, !dbg !19802, !srcloc !19803
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !19804
  %2 = or i32 %1, 8, !dbg !19804
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !19804
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !19805
  br label %3, !dbg !19806

3:                                                ; preds = %3, %0
  br label %3, !dbg !19807, !llvm.loop !19810
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @platform_assert(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !19813 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19817, metadata !DIExpression()), !dbg !19820
  call void @llvm.dbg.value(metadata i8* %1, metadata !19818, metadata !DIExpression()), !dbg !19820
  call void @llvm.dbg.value(metadata i32 %2, metadata !19819, metadata !DIExpression()), !dbg !19820
  tail call void asm sideeffect "cpsid i", ""() #19, !dbg !19821, !srcloc !19822
  %4 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !19823
  %5 = or i32 %4, 8, !dbg !19823
  store volatile i32 %5, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !19823
  store i1 true, i1* @assert_expr.0, align 4, !dbg !19824
  store i8* %0, i8** @assert_expr.1, align 4, !dbg !19825
  store i8* %1, i8** @assert_expr.2, align 4, !dbg !19826
  store i32 %2, i32* @assert_expr.3, align 4, !dbg !19827
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !19828
  br label %6, !dbg !19829

6:                                                ; preds = %6, %3
  br label %6, !dbg !19830, !llvm.loop !19833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @exception_dump_config(i32 noundef %0) local_unnamed_addr #4 !dbg !19836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19838, metadata !DIExpression()), !dbg !19839
  store i32 %0, i32* @reboot_flag, align 4, !dbg !19840
  ret void, !dbg !19841
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @exception_register_callbacks(%struct.exception_config_type* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !19842 {
  call void @llvm.dbg.value(metadata %struct.exception_config_type* %0, metadata !19847, metadata !DIExpression()), !dbg !19849
  %2 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !19850
  %3 = icmp sgt i32 %2, 5, !dbg !19852
  br i1 %3, label %30, label %4, !dbg !19853

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !19848, metadata !DIExpression()), !dbg !19849
  %5 = icmp sgt i32 %2, 0, !dbg !19854
  %6 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 0
  %7 = load void ()*, void ()** %6, align 4
  br i1 %5, label %8, label %23, !dbg !19858

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1
  br label %10, !dbg !19858

10:                                               ; preds = %8, %20
  %11 = phi i32 [ 0, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !19848, metadata !DIExpression()), !dbg !19849
  %12 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 0, !dbg !19859
  %13 = load void ()*, void ()** %12, align 4, !dbg !19859
  %14 = icmp eq void ()* %13, %7, !dbg !19862
  br i1 %14, label %15, label %20, !dbg !19863

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 1, !dbg !19864
  %17 = load void ()*, void ()** %16, align 4, !dbg !19864
  %18 = load void ()*, void ()** %9, align 4, !dbg !19865
  %19 = icmp eq void ()* %17, %18, !dbg !19866
  br i1 %19, label %30, label %20, !dbg !19867

20:                                               ; preds = %10, %15
  %21 = add nuw nsw i32 %11, 1, !dbg !19868
  call void @llvm.dbg.value(metadata i32 %21, metadata !19848, metadata !DIExpression()), !dbg !19849
  %22 = icmp eq i32 %21, %2, !dbg !19854
  br i1 %22, label %23, label %10, !dbg !19858, !llvm.loop !19869

23:                                               ; preds = %20, %4
  %24 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 0, !dbg !19871
  store void ()* %7, void ()** %24, align 4, !dbg !19872
  %25 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1, !dbg !19873
  %26 = load void ()*, void ()** %25, align 4, !dbg !19873
  %27 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 1, !dbg !19874
  store void ()* %26, void ()** %27, align 4, !dbg !19875
  %28 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !19876
  %29 = add nsw i32 %28, 1, !dbg !19876
  store i32 %29, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !19876
  br label %30, !dbg !19877

30:                                               ; preds = %15, %1, %23
  %31 = phi i1 [ true, %23 ], [ false, %1 ], [ false, %15 ], !dbg !19878
  ret i1 %31, !dbg !19879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @exception_init() local_unnamed_addr #0 section ".ramTEXT" !dbg !19880 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !19883
  %2 = and i32 %1, -9, !dbg !19883
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !19883
  tail call void @Flash_ReturnReady() #20, !dbg !19884
  call void @llvm.dbg.value(metadata i32 0, metadata !19882, metadata !DIExpression()), !dbg !19885
  %3 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !19886
  %4 = icmp sgt i32 %3, 0, !dbg !19889
  br i1 %4, label %5, label %17, !dbg !19890

5:                                                ; preds = %0, %13
  %6 = phi i32 [ %14, %13 ], [ %3, %0 ]
  %7 = phi i32 [ %15, %13 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !19882, metadata !DIExpression()), !dbg !19885
  %8 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %7, i32 0, !dbg !19891
  %9 = load void ()*, void ()** %8, align 4, !dbg !19891
  %10 = icmp eq void ()* %9, null, !dbg !19894
  br i1 %10, label %13, label %11, !dbg !19895

11:                                               ; preds = %5
  tail call void %9() #20, !dbg !19896
  %12 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !19886
  br label %13, !dbg !19898

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %6, %5 ], [ %12, %11 ], !dbg !19886
  %15 = add nuw nsw i32 %7, 1, !dbg !19899
  call void @llvm.dbg.value(metadata i32 %15, metadata !19882, metadata !DIExpression()), !dbg !19885
  %16 = icmp slt i32 %15, %14, !dbg !19889
  br i1 %16, label %5, label %17, !dbg !19890, !llvm.loop !19900

17:                                               ; preds = %13, %0
  %18 = load i1, i1* @assert_expr.0, align 4, !dbg !19902
  br i1 %18, label %19, label %24, !dbg !19904

19:                                               ; preds = %17
  %20 = load i8*, i8** @assert_expr.1, align 4, !dbg !19905
  %21 = load i8*, i8** @assert_expr.2, align 4, !dbg !19907
  %22 = load i32, i32* @assert_expr.3, align 4, !dbg !19908
  %23 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.268, i32 0, i32 0), i8* noundef %20, i8* noundef %21, i32 noundef %22) #20, !dbg !19909
  br label %24, !dbg !19910

24:                                               ; preds = %19, %17
  ret void, !dbg !19911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @NMI_Handler() local_unnamed_addr #8 !dbg !19912 {
  ret void, !dbg !19913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printUsageErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !19914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19916, metadata !DIExpression()), !dbg !19917
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.269, i32 0, i32 0)) #20, !dbg !19918
  call void @llvm.dbg.value(metadata i32 %0, metadata !19916, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !19917
  %3 = and i32 %0, 33554432, !dbg !19919
  %4 = icmp eq i32 %3, 0, !dbg !19919
  br i1 %4, label %7, label %5, !dbg !19921

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.270, i32 0, i32 0)) #20, !dbg !19922
  br label %7, !dbg !19924

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16777216, !dbg !19925
  %9 = icmp eq i32 %8, 0, !dbg !19925
  br i1 %9, label %12, label %10, !dbg !19927

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.271, i32 0, i32 0)) #20, !dbg !19928
  br label %12, !dbg !19930

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 524288, !dbg !19931
  %14 = icmp eq i32 %13, 0, !dbg !19931
  br i1 %14, label %17, label %15, !dbg !19933

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.272, i32 0, i32 0)) #20, !dbg !19934
  br label %17, !dbg !19936

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 262144, !dbg !19937
  %19 = icmp eq i32 %18, 0, !dbg !19937
  br i1 %19, label %22, label %20, !dbg !19939

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.273, i32 0, i32 0)) #20, !dbg !19940
  br label %22, !dbg !19942

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 131072, !dbg !19943
  %24 = icmp eq i32 %23, 0, !dbg !19943
  br i1 %24, label %27, label %25, !dbg !19945

25:                                               ; preds = %22
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.274, i32 0, i32 0)) #20, !dbg !19946
  br label %27, !dbg !19948

27:                                               ; preds = %25, %22
  %28 = and i32 %0, 65536, !dbg !19949
  %29 = icmp eq i32 %28, 0, !dbg !19949
  br i1 %29, label %32, label %30, !dbg !19951

30:                                               ; preds = %27
  %31 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.275, i32 0, i32 0)) #20, !dbg !19952
  br label %32, !dbg !19954

32:                                               ; preds = %30, %27
  ret void, !dbg !19955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printMemoryManagementErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !19956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19958, metadata !DIExpression()), !dbg !19959
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.276, i32 0, i32 0)) #20, !dbg !19960
  call void @llvm.dbg.value(metadata i32 %0, metadata !19958, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !19959
  %3 = and i32 %0, 32, !dbg !19961
  %4 = icmp eq i32 %3, 0, !dbg !19963
  br i1 %4, label %7, label %5, !dbg !19964

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.9.277, i32 0, i32 0)) #20, !dbg !19965
  br label %7, !dbg !19967

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16, !dbg !19968
  %9 = icmp eq i32 %8, 0, !dbg !19970
  br i1 %9, label %12, label %10, !dbg !19971

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.278, i32 0, i32 0)) #20, !dbg !19972
  br label %12, !dbg !19974

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 8, !dbg !19975
  %14 = icmp eq i32 %13, 0, !dbg !19977
  br i1 %14, label %17, label %15, !dbg !19978

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11.279, i32 0, i32 0)) #20, !dbg !19979
  br label %17, !dbg !19981

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 2, !dbg !19982
  %19 = icmp eq i32 %18, 0, !dbg !19984
  br i1 %19, label %23, label %20, !dbg !19985

20:                                               ; preds = %17
  %21 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !19986
  %22 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.280, i32 0, i32 0), i32 noundef %21) #20, !dbg !19988
  br label %23, !dbg !19989

23:                                               ; preds = %20, %17
  %24 = and i32 %0, 1, !dbg !19990
  %25 = icmp eq i32 %24, 0, !dbg !19992
  br i1 %25, label %28, label %26, !dbg !19993

26:                                               ; preds = %23
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13.281, i32 0, i32 0)) #20, !dbg !19994
  br label %28, !dbg !19996

28:                                               ; preds = %26, %23
  %29 = and i32 %0, 128, !dbg !19997
  %30 = icmp eq i32 %29, 0, !dbg !19999
  br i1 %30, label %34, label %31, !dbg !20000

31:                                               ; preds = %28
  %32 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !20001
  %33 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.282, i32 0, i32 0), i32 noundef %32) #20, !dbg !20003
  br label %34, !dbg !20004

34:                                               ; preds = %31, %28
  ret void, !dbg !20005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printBusFaultErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !20006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20008, metadata !DIExpression()), !dbg !20009
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.283, i32 0, i32 0)) #20, !dbg !20010
  call void @llvm.dbg.value(metadata i32 %0, metadata !20008, metadata !DIExpression(DW_OP_constu, 65280, DW_OP_and, DW_OP_stack_value)), !dbg !20009
  call void @llvm.dbg.value(metadata i32 %0, metadata !20008, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !20009
  %3 = and i32 %0, 8192, !dbg !20011
  %4 = icmp eq i32 %3, 0, !dbg !20011
  br i1 %4, label %7, label %5, !dbg !20013

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.284, i32 0, i32 0)) #20, !dbg !20014
  br label %7, !dbg !20016

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 4096, !dbg !20017
  %9 = icmp eq i32 %8, 0, !dbg !20017
  br i1 %9, label %12, label %10, !dbg !20019

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.17.285, i32 0, i32 0)) #20, !dbg !20020
  br label %12, !dbg !20022

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 2048, !dbg !20023
  %14 = icmp eq i32 %13, 0, !dbg !20023
  br i1 %14, label %17, label %15, !dbg !20025

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18.286, i32 0, i32 0)) #20, !dbg !20026
  br label %17, !dbg !20028

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 1024, !dbg !20029
  %19 = icmp eq i32 %18, 0, !dbg !20029
  br i1 %19, label %22, label %20, !dbg !20031

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.287, i32 0, i32 0)) #20, !dbg !20032
  br label %22, !dbg !20034

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 512, !dbg !20035
  %24 = icmp eq i32 %23, 0, !dbg !20035
  br i1 %24, label %28, label %25, !dbg !20037

25:                                               ; preds = %22
  %26 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !20038
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20.288, i32 0, i32 0), i32 noundef %26) #20, !dbg !20040
  br label %28, !dbg !20041

28:                                               ; preds = %25, %22
  %29 = and i32 %0, 256, !dbg !20042
  %30 = icmp eq i32 %29, 0, !dbg !20042
  br i1 %30, label %33, label %31, !dbg !20044

31:                                               ; preds = %28
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21.289, i32 0, i32 0)) #20, !dbg !20045
  br label %33, !dbg !20047

33:                                               ; preds = %31, %28
  %34 = and i32 %0, 32768, !dbg !20048
  %35 = icmp eq i32 %34, 0, !dbg !20048
  br i1 %35, label %39, label %36, !dbg !20050

36:                                               ; preds = %33
  %37 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !20051
  %38 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.290, i32 0, i32 0), i32 noundef %37) #20, !dbg !20053
  br label %39, !dbg !20054

39:                                               ; preds = %36, %33
  ret void, !dbg !20055
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @exception_reboot() local_unnamed_addr #0 !dbg !20056 {
  ret void, !dbg !20057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stackDump(i32* noundef %0) local_unnamed_addr #0 !dbg !20058 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !20062, metadata !DIExpression()), !dbg !20063
  %2 = load i32, i32* %0, align 4, !dbg !20064
  store i32 %2, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 0), align 4, !dbg !20065
  %3 = getelementptr inbounds i32, i32* %0, i32 1, !dbg !20066
  %4 = load i32, i32* %3, align 4, !dbg !20066
  store i32 %4, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !20067
  %5 = getelementptr inbounds i32, i32* %0, i32 2, !dbg !20068
  %6 = load i32, i32* %5, align 4, !dbg !20068
  store i32 %6, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !20069
  %7 = getelementptr inbounds i32, i32* %0, i32 3, !dbg !20070
  %8 = load i32, i32* %7, align 4, !dbg !20070
  store i32 %8, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !20071
  %9 = getelementptr inbounds i32, i32* %0, i32 4, !dbg !20072
  %10 = load i32, i32* %9, align 4, !dbg !20072
  store i32 %10, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !20073
  %11 = ptrtoint i32* %0 to i32, !dbg !20074
  %12 = add i32 %11, 32, !dbg !20075
  store i32 %12, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !20076
  %13 = getelementptr inbounds i32, i32* %0, i32 5, !dbg !20077
  %14 = load i32, i32* %13, align 4, !dbg !20077
  store i32 %14, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !20078
  %15 = getelementptr inbounds i32, i32* %0, i32 6, !dbg !20079
  %16 = load i32, i32* %15, align 4, !dbg !20079
  store i32 %16, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !20080
  %17 = getelementptr inbounds i32, i32* %0, i32 7, !dbg !20081
  %18 = load i32, i32* %17, align 4, !dbg !20081
  store i32 %18, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !20082
  %19 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !20083
  %20 = and i32 %19, 16, !dbg !20085
  %21 = icmp eq i32 %20, 0, !dbg !20086
  br i1 %21, label %22, label %58, !dbg !20087

22:                                               ; preds = %1
  %23 = getelementptr inbounds i32, i32* %0, i32 8, !dbg !20088
  %24 = load i32, i32* %23, align 4, !dbg !20088
  store i32 %24, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !20090
  %25 = getelementptr inbounds i32, i32* %0, i32 9, !dbg !20091
  %26 = load i32, i32* %25, align 4, !dbg !20091
  store i32 %26, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !20092
  %27 = getelementptr inbounds i32, i32* %0, i32 10, !dbg !20093
  %28 = load i32, i32* %27, align 4, !dbg !20093
  store i32 %28, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !20094
  %29 = getelementptr inbounds i32, i32* %0, i32 11, !dbg !20095
  %30 = load i32, i32* %29, align 4, !dbg !20095
  store i32 %30, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !20096
  %31 = getelementptr inbounds i32, i32* %0, i32 12, !dbg !20097
  %32 = load i32, i32* %31, align 4, !dbg !20097
  store i32 %32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !20098
  %33 = getelementptr inbounds i32, i32* %0, i32 13, !dbg !20099
  %34 = load i32, i32* %33, align 4, !dbg !20099
  store i32 %34, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !20100
  %35 = getelementptr inbounds i32, i32* %0, i32 14, !dbg !20101
  %36 = load i32, i32* %35, align 4, !dbg !20101
  store i32 %36, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !20102
  %37 = getelementptr inbounds i32, i32* %0, i32 15, !dbg !20103
  %38 = load i32, i32* %37, align 4, !dbg !20103
  store i32 %38, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !20104
  %39 = getelementptr inbounds i32, i32* %0, i32 16, !dbg !20105
  %40 = load i32, i32* %39, align 4, !dbg !20105
  store i32 %40, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !20106
  %41 = getelementptr inbounds i32, i32* %0, i32 17, !dbg !20107
  %42 = load i32, i32* %41, align 4, !dbg !20107
  store i32 %42, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !20108
  %43 = getelementptr inbounds i32, i32* %0, i32 18, !dbg !20109
  %44 = load i32, i32* %43, align 4, !dbg !20109
  store i32 %44, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !20110
  %45 = getelementptr inbounds i32, i32* %0, i32 19, !dbg !20111
  %46 = load i32, i32* %45, align 4, !dbg !20111
  store i32 %46, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !20112
  %47 = getelementptr inbounds i32, i32* %0, i32 20, !dbg !20113
  %48 = load i32, i32* %47, align 4, !dbg !20113
  store i32 %48, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !20114
  %49 = getelementptr inbounds i32, i32* %0, i32 21, !dbg !20115
  %50 = load i32, i32* %49, align 4, !dbg !20115
  store i32 %50, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !20116
  %51 = getelementptr inbounds i32, i32* %0, i32 22, !dbg !20117
  %52 = load i32, i32* %51, align 4, !dbg !20117
  store i32 %52, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !20118
  %53 = getelementptr inbounds i32, i32* %0, i32 23, !dbg !20119
  %54 = load i32, i32* %53, align 4, !dbg !20119
  store i32 %54, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !20120
  %55 = getelementptr inbounds i32, i32* %0, i32 24, !dbg !20121
  %56 = load i32, i32* %55, align 4, !dbg !20121
  store i32 %56, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !20122
  %57 = add i32 %11, 104, !dbg !20123
  store i32 %57, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !20123
  br label %58, !dbg !20124

58:                                               ; preds = %22, %1
  %59 = phi i32 [ %57, %22 ], [ %12, %1 ]
  %60 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !20125
  %61 = and i32 %60, 512, !dbg !20127
  %62 = icmp eq i32 %61, 0, !dbg !20127
  %63 = and i32 %18, 512
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %62, i1 true, i1 %64, !dbg !20128
  br i1 %65, label %68, label %66, !dbg !20128

66:                                               ; preds = %58
  %67 = add i32 %59, 4, !dbg !20129
  store i32 %67, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !20129
  br label %68, !dbg !20131

68:                                               ; preds = %66, %58
  %69 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.291, i32 0, i32 0), i32 noundef %2) #20, !dbg !20132
  %70 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !20133
  %71 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.292, i32 0, i32 0), i32 noundef %70) #20, !dbg !20134
  %72 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !20135
  %73 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.293, i32 0, i32 0), i32 noundef %72) #20, !dbg !20136
  %74 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !20137
  %75 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i32 noundef %74) #20, !dbg !20138
  %76 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 4), align 4, !dbg !20139
  %77 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i32 noundef %76) #20, !dbg !20140
  %78 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 5), align 4, !dbg !20141
  %79 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.294, i32 0, i32 0), i32 noundef %78) #20, !dbg !20142
  %80 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 6), align 4, !dbg !20143
  %81 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 noundef %80) #20, !dbg !20144
  %82 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 7), align 4, !dbg !20145
  %83 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0), i32 noundef %82) #20, !dbg !20146
  %84 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 8), align 4, !dbg !20147
  %85 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i32 noundef %84) #20, !dbg !20148
  %86 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 9), align 4, !dbg !20149
  %87 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i32 noundef %86) #20, !dbg !20150
  %88 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 10), align 4, !dbg !20151
  %89 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 noundef %88) #20, !dbg !20152
  %90 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 11), align 4, !dbg !20153
  %91 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i32 noundef %90) #20, !dbg !20154
  %92 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !20155
  %93 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i32 noundef %92) #20, !dbg !20156
  %94 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !20157
  %95 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i32 noundef %94) #20, !dbg !20158
  %96 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !20159
  %97 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i32 noundef %96) #20, !dbg !20160
  %98 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !20161
  %99 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 noundef %98) #20, !dbg !20162
  %100 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !20163
  %101 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i32 noundef %100) #20, !dbg !20164
  %102 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !20165
  %103 = and i32 %102, 4, !dbg !20167
  %104 = icmp eq i32 %103, 0, !dbg !20167
  br i1 %104, label %108, label %105, !dbg !20168

105:                                              ; preds = %68
  %106 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !20169
  %107 = or i32 %106, 2, !dbg !20169
  store i32 %107, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !20169
  br label %108, !dbg !20171

108:                                              ; preds = %68, %105
  %109 = phi i32* [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), %105 ], [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), %68 ]
  %110 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !20172
  store i32 %110, i32* %109, align 4, !dbg !20172
  %111 = and i32 %102, 16, !dbg !20173
  %112 = icmp eq i32 %111, 0, !dbg !20175
  br i1 %112, label %113, label %182, !dbg !20176

113:                                              ; preds = %108
  %114 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !20177
  %115 = or i32 %114, 4, !dbg !20177
  store i32 %115, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !20177
  %116 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !20179
  %117 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), i32 noundef %116) #20, !dbg !20180
  %118 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !20181
  %119 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0), i32 noundef %118) #20, !dbg !20182
  %120 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !20183
  %121 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i32 noundef %120) #20, !dbg !20184
  %122 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !20185
  %123 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i32 noundef %122) #20, !dbg !20186
  %124 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !20187
  %125 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 noundef %124) #20, !dbg !20188
  %126 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !20189
  %127 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i32 noundef %126) #20, !dbg !20190
  %128 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !20191
  %129 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i32 noundef %128) #20, !dbg !20192
  %130 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !20193
  %131 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i32 noundef %130) #20, !dbg !20194
  %132 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !20195
  %133 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 noundef %132) #20, !dbg !20196
  %134 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !20197
  %135 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0), i32 noundef %134) #20, !dbg !20198
  %136 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !20199
  %137 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i32 noundef %136) #20, !dbg !20200
  %138 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !20201
  %139 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i32 noundef %138) #20, !dbg !20202
  %140 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !20203
  %141 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i32 noundef %140) #20, !dbg !20204
  %142 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !20205
  %143 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i32 noundef %142) #20, !dbg !20206
  %144 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !20207
  %145 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i32 noundef %144) #20, !dbg !20208
  %146 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !20209
  %147 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i32 noundef %146) #20, !dbg !20210
  %148 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 38), align 4, !dbg !20211
  %149 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i32 0, i32 0), i32 noundef %148) #20, !dbg !20212
  %150 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 39), align 4, !dbg !20213
  %151 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i32 noundef %150) #20, !dbg !20214
  %152 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 40), align 4, !dbg !20215
  %153 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i32 noundef %152) #20, !dbg !20216
  %154 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 41), align 4, !dbg !20217
  %155 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i32 0, i32 0), i32 noundef %154) #20, !dbg !20218
  %156 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 42), align 4, !dbg !20219
  %157 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i32 noundef %156) #20, !dbg !20220
  %158 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 43), align 4, !dbg !20221
  %159 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i32 noundef %158) #20, !dbg !20222
  %160 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 44), align 4, !dbg !20223
  %161 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i32 noundef %160) #20, !dbg !20224
  %162 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 45), align 4, !dbg !20225
  %163 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i32 noundef %162) #20, !dbg !20226
  %164 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 46), align 4, !dbg !20227
  %165 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i32 noundef %164) #20, !dbg !20228
  %166 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 47), align 4, !dbg !20229
  %167 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 noundef %166) #20, !dbg !20230
  %168 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 48), align 4, !dbg !20231
  %169 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i32 noundef %168) #20, !dbg !20232
  %170 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 49), align 4, !dbg !20233
  %171 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i32 noundef %170) #20, !dbg !20234
  %172 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 50), align 4, !dbg !20235
  %173 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i32 noundef %172) #20, !dbg !20236
  %174 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 51), align 4, !dbg !20237
  %175 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i32 noundef %174) #20, !dbg !20238
  %176 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 52), align 4, !dbg !20239
  %177 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70.295, i32 0, i32 0), i32 noundef %176) #20, !dbg !20240
  %178 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 53), align 4, !dbg !20241
  %179 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i32 0, i32 0), i32 noundef %178) #20, !dbg !20242
  %180 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !20243
  %181 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.296, i32 0, i32 0), i32 noundef %180) #20, !dbg !20244
  br label %182, !dbg !20245

182:                                              ; preds = %113, %108
  %183 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !20246
  %184 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i32 0, i32 0), i32 noundef %183) #20, !dbg !20247
  %185 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), align 4, !dbg !20248
  %186 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i32 0, i32 0), i32 noundef %185) #20, !dbg !20249
  %187 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), align 4, !dbg !20250
  %188 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i32 0, i32 0), i32 noundef %187) #20, !dbg !20251
  %189 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !20252
  %190 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), i32 noundef %189) #20, !dbg !20253
  %191 = tail call fastcc zeroext i1 @reboot_check() #22, !dbg !20254
  br i1 %191, label %192, label %193, !dbg !20256

192:                                              ; preds = %182
  tail call void @exception_reboot() #22, !dbg !20257
  br label %193, !dbg !20259

193:                                              ; preds = %192, %182
  ret void, !dbg !20260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @reboot_check() unnamed_addr #9 !dbg !20261 {
  %1 = load i32, i32* @reboot_flag, align 4, !dbg !20264
  %2 = icmp eq i32 %1, -559038737, !dbg !20265
  ret i1 %2, !dbg !20266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @memoryDumpAll() local_unnamed_addr #0 !dbg !20267 {
  call void @llvm.dbg.value(metadata i32 0, metadata !20271, metadata !DIExpression()), !dbg !20272
  %1 = load i8*, i8** getelementptr inbounds ([6 x %struct.memory_region_type], [6 x %struct.memory_region_type]* @memory_regions, i32 0, i32 0, i32 0), align 4, !dbg !20273
  %2 = icmp eq i8* %1, null, !dbg !20278
  br i1 %2, label %3, label %6, !dbg !20279

3:                                                ; preds = %44, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !20271, metadata !DIExpression()), !dbg !20272
  %4 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !20280
  %5 = icmp eq i32 %4, 0, !dbg !20283
  br i1 %5, label %61, label %49, !dbg !20284

6:                                                ; preds = %0, %44
  %7 = phi i32 [ %45, %44 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !20271, metadata !DIExpression()), !dbg !20272
  %8 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 3, !dbg !20285
  %9 = load i32, i32* %8, align 4, !dbg !20285
  %10 = icmp eq i32 %9, 0, !dbg !20287
  br i1 %10, label %44, label %11, !dbg !20288

11:                                               ; preds = %6
  %12 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 1, !dbg !20289
  %13 = load i32*, i32** %12, align 4, !dbg !20289
  call void @llvm.dbg.value(metadata i32* %13, metadata !20269, metadata !DIExpression()), !dbg !20272
  %14 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 2, !dbg !20290
  %15 = load i32*, i32** %14, align 4, !dbg !20290
  call void @llvm.dbg.value(metadata i32* %15, metadata !20270, metadata !DIExpression()), !dbg !20272
  %16 = icmp ult i32* %13, %15, !dbg !20291
  br i1 %16, label %17, label %44, !dbg !20294

17:                                               ; preds = %11, %41
  %18 = phi i32* [ %42, %41 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32* %18, metadata !20269, metadata !DIExpression()), !dbg !20272
  %19 = load i32, i32* %18, align 4, !dbg !20295
  %20 = icmp eq i32 %19, 0, !dbg !20298
  %21 = getelementptr inbounds i32, i32* %18, i32 1
  %22 = load i32, i32* %21, align 4, !dbg !20299
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %20, i1 %23, i1 false, !dbg !20300
  br i1 %24, label %25, label %33, !dbg !20300

25:                                               ; preds = %17
  %26 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !20301
  %27 = load i32, i32* %26, align 4, !dbg !20302
  %28 = icmp eq i32 %27, 0, !dbg !20303
  br i1 %28, label %29, label %33, !dbg !20304

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !20305
  %31 = load i32, i32* %30, align 4, !dbg !20306
  %32 = icmp eq i32 %31, 0, !dbg !20307
  br i1 %32, label %41, label %33, !dbg !20308

33:                                               ; preds = %17, %29, %25
  %34 = phi i32 [ 0, %29 ], [ 0, %25 ], [ %22, %17 ], !dbg !20309
  %35 = ptrtoint i32* %18 to i32, !dbg !20310
  %36 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !20311
  %37 = load i32, i32* %36, align 4, !dbg !20312
  %38 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !20313
  %39 = load i32, i32* %38, align 4, !dbg !20314
  %40 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i32 0, i32 0), i32 noundef %35, i32 noundef %19, i32 noundef %34, i32 noundef %37, i32 noundef %39) #20, !dbg !20315
  br label %41, !dbg !20316

41:                                               ; preds = %29, %33
  %42 = getelementptr inbounds i32, i32* %18, i32 4, !dbg !20317
  call void @llvm.dbg.value(metadata i32* %42, metadata !20269, metadata !DIExpression()), !dbg !20272
  %43 = icmp ult i32* %42, %15, !dbg !20291
  br i1 %43, label %17, label %44, !dbg !20294, !llvm.loop !20318

44:                                               ; preds = %41, %11, %6
  %45 = add i32 %7, 1, !dbg !20320
  call void @llvm.dbg.value(metadata i32 %45, metadata !20271, metadata !DIExpression()), !dbg !20272
  %46 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %45, i32 0, !dbg !20273
  %47 = load i8*, i8** %46, align 4, !dbg !20273
  %48 = icmp eq i8* %47, null, !dbg !20278
  br i1 %48, label %3, label %6, !dbg !20279, !llvm.loop !20321

49:                                               ; preds = %3, %57
  %50 = phi i32 [ %58, %57 ], [ %4, %3 ]
  %51 = phi i32 [ %59, %57 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !20271, metadata !DIExpression()), !dbg !20272
  %52 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %51, i32 1, !dbg !20324
  %53 = load void ()*, void ()** %52, align 4, !dbg !20324
  %54 = icmp eq void ()* %53, null, !dbg !20327
  br i1 %54, label %57, label %55, !dbg !20328

55:                                               ; preds = %49
  tail call void %53() #20, !dbg !20329
  %56 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !20280
  br label %57, !dbg !20331

57:                                               ; preds = %49, %55
  %58 = phi i32 [ %50, %49 ], [ %56, %55 ], !dbg !20280
  %59 = add nuw i32 %51, 1, !dbg !20332
  call void @llvm.dbg.value(metadata i32 %59, metadata !20271, metadata !DIExpression()), !dbg !20272
  %60 = icmp ult i32 %59, %58, !dbg !20283
  br i1 %60, label %49, label %61, !dbg !20284, !llvm.loop !20333

61:                                               ; preds = %57, %3
  %62 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i32 0, i32 0)) #20, !dbg !20335
  ret void, !dbg !20336
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Hard_Fault_Handler(i32* noundef %0) local_unnamed_addr #17 !dbg !20337 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !20339, metadata !DIExpression()), !dbg !20340
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i32 0, i32 0)) #20, !dbg !20341
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !20342
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i32 0, i32 0), i32 noundef %3) #20, !dbg !20343
  %5 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !20344
  %6 = and i32 %5, 1073741824, !dbg !20346
  %7 = icmp eq i32 %6, 0, !dbg !20347
  br i1 %7, label %28, label %8, !dbg !20348

8:                                                ; preds = %1
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81.297, i32 0, i32 0)) #20, !dbg !20349
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20351
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %10) #20, !dbg !20352
  %12 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20353
  %13 = icmp ult i32 %12, 65536, !dbg !20355
  br i1 %13, label %16, label %14, !dbg !20356

14:                                               ; preds = %8
  %15 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20357
  tail call void @printUsageErrorMsg(i32 noundef %15) #22, !dbg !20359
  br label %16, !dbg !20360

16:                                               ; preds = %14, %8
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20361
  %18 = and i32 %17, 65280, !dbg !20363
  %19 = icmp eq i32 %18, 0, !dbg !20364
  br i1 %19, label %22, label %20, !dbg !20365

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20366
  tail call void @printBusFaultErrorMsg(i32 noundef %21) #22, !dbg !20368
  br label %22, !dbg !20369

22:                                               ; preds = %20, %16
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20370
  %24 = and i32 %23, 255, !dbg !20372
  %25 = icmp eq i32 %24, 0, !dbg !20373
  br i1 %25, label %28, label %26, !dbg !20374

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20375
  tail call void @printMemoryManagementErrorMsg(i32 noundef %27) #22, !dbg !20377
  br label %28, !dbg !20378

28:                                               ; preds = %22, %26, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !20379
  tail call void @memoryDumpAll() #22, !dbg !20380
  br label %29, !dbg !20381

29:                                               ; preds = %28, %29
  br label %29, !dbg !20381, !llvm.loop !20382
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @MemManage_Fault_Handler(i32* noundef %0) local_unnamed_addr #17 !dbg !20384 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !20386, metadata !DIExpression()), !dbg !20387
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i32 0, i32 0)) #20, !dbg !20388
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20389
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #20, !dbg !20390
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20391
  %6 = and i32 %5, 255, !dbg !20393
  %7 = icmp eq i32 %6, 0, !dbg !20394
  br i1 %7, label %10, label %8, !dbg !20395

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20396
  tail call void @printMemoryManagementErrorMsg(i32 noundef %9) #22, !dbg !20398
  br label %10, !dbg !20399

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !20400
  tail call void @memoryDumpAll() #22, !dbg !20401
  br label %11, !dbg !20402

11:                                               ; preds = %10, %11
  br label %11, !dbg !20402, !llvm.loop !20403
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Bus_Fault_Handler(i32* noundef %0) local_unnamed_addr #17 !dbg !20405 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !20407, metadata !DIExpression()), !dbg !20408
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i32 0, i32 0)) #20, !dbg !20409
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20410
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #20, !dbg !20411
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20412
  %6 = and i32 %5, 65280, !dbg !20414
  %7 = icmp eq i32 %6, 0, !dbg !20415
  br i1 %7, label %10, label %8, !dbg !20416

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20417
  tail call void @printBusFaultErrorMsg(i32 noundef %9) #22, !dbg !20419
  br label %10, !dbg !20420

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !20421
  tail call void @memoryDumpAll() #22, !dbg !20422
  br label %11, !dbg !20423

11:                                               ; preds = %10, %11
  br label %11, !dbg !20423, !llvm.loop !20424
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Usage_Fault_Handler(i32* noundef %0) local_unnamed_addr #17 !dbg !20426 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !20428, metadata !DIExpression()), !dbg !20429
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85, i32 0, i32 0)) #20, !dbg !20430
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20431
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #20, !dbg !20432
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20433
  %6 = icmp ult i32 %5, 65536, !dbg !20435
  br i1 %6, label %9, label %7, !dbg !20436

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !20437
  tail call void @printUsageErrorMsg(i32 noundef %8) #22, !dbg !20439
  br label %9, !dbg !20440

9:                                                ; preds = %7, %1
  tail call void @stackDump(i32* noundef %0) #22, !dbg !20441
  tail call void @memoryDumpAll() #22, !dbg !20442
  br label %10, !dbg !20443

10:                                               ; preds = %9, %10
  br label %10, !dbg !20443, !llvm.loop !20444
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Debug_Monitor_Handler(i32* noundef %0) local_unnamed_addr #17 !dbg !20446 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !20448, metadata !DIExpression()), !dbg !20452
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i32 0, i32 0)) #20, !dbg !20453
  call void @llvm.dbg.value(metadata i32 12, metadata !20449, metadata !DIExpression()), !dbg !20452
  %3 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !20454
  call void @llvm.dbg.value(metadata i32 %3, metadata !20451, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !20452
  %4 = load volatile i32, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !20456
  call void @llvm.dbg.value(metadata i32 %4, metadata !20450, metadata !DIExpression()), !dbg !20452
  %5 = and i32 %3, 16777216, !dbg !20457
  %6 = icmp eq i32 %5, 0, !dbg !20457
  %7 = select i1 %6, i32 78, i32 89, !dbg !20457
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.87, i32 0, i32 0), i32 noundef %7, i32 noundef %4) #20, !dbg !20458
  tail call void @stackDump(i32* noundef %0) #22, !dbg !20459
  tail call void @memoryDumpAll() #22, !dbg !20460
  br label %9, !dbg !20461

9:                                                ; preds = %9, %1
  br label %9, !dbg !20461, !llvm.loop !20462
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @CommonFault_Handler() #18 section ".ramTEXT" !dbg !20464 {
  tail call void asm sideeffect "cpsid i                       \0Aldr r3, =pxExceptionStack     \0Aldr r3, [r3]                  \0Aldr r0, =pTaskContext         \0Aldr r0, [r0]                  \0Aadd r0, r0, #16               \0Astmia r0!, {r4-r11}           \0Amov r5, r12                   \0Aadd r0, r0, #20               \0Amrs r1, control               \0Astr r1, [r0], #4              \0Astr r5, [r0], #4              \0Amrs r4, msp                   \0Astr r4, [r0], #4              \0Amrs r1, psp                   \0Astr r1, [r0]                  \0Atst r5, #0x10                 \0Aitt eq                        \0Aaddeq r0, r0, #68             \0Avstmeq r0, {s16-s31}          \0Acmp r3, #0                    \0Ait ne                         \0Amovne sp, r3                  \0Apush {lr}                     \0Abl exception_init             \0Apop {lr}                      \0Atst r5, #4                    \0Aite eq                        \0Amoveq r0, r4                  \0Amrsne r0, psp                 \0Abx lr                         \0A", ""() #19, !dbg !20465, !srcloc !20466
  unreachable, !dbg !20467
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @HardFault_Handler() #18 section ".ramTEXT" !dbg !20468 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Hard_Fault_Handler         \0A", ""() #19, !dbg !20469, !srcloc !20470
  unreachable, !dbg !20471
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @MemManage_Handler() #18 section ".ramTEXT" !dbg !20472 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl MemManage_Fault_Handler    \0A", ""() #19, !dbg !20473, !srcloc !20474
  unreachable, !dbg !20475
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @BusFault_Handler() #18 section ".ramTEXT" !dbg !20476 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Bus_Fault_Handler          \0A", ""() #19, !dbg !20477, !srcloc !20478
  unreachable, !dbg !20479
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @UsageFault_Handler() #18 section ".ramTEXT" !dbg !20480 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Usage_Fault_Handler        \0A", ""() #19, !dbg !20481, !srcloc !20482
  unreachable, !dbg !20483
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @DebugMon_Handler() #18 section ".ramTEXT" !dbg !20484 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Debug_Monitor_Handler      \0A", ""() #19, !dbg !20485, !srcloc !20486
  unreachable, !dbg !20487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vApplicationStackOverflowHook(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !20488 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !20492, metadata !DIExpression()), !dbg !20494
  call void @llvm.dbg.value(metadata i8* %1, metadata !20493, metadata !DIExpression()), !dbg !20494
  %3 = ptrtoint i8* %0 to i32, !dbg !20495
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.300, i32 0, i32 0), i32 noundef %3, i8* noundef %1) #20, !dbg !20496
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 103) #20, !dbg !20497
  ret void, !dbg !20500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, ...) #0 !dbg !20501 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !20503, metadata !DIExpression()), !dbg !20515
  call void @llvm.dbg.value(metadata i8* %1, metadata !20504, metadata !DIExpression()), !dbg !20515
  call void @llvm.dbg.value(metadata i32 %2, metadata !20505, metadata !DIExpression()), !dbg !20515
  call void @llvm.dbg.value(metadata i32 %3, metadata !20506, metadata !DIExpression()), !dbg !20515
  call void @llvm.dbg.value(metadata i8* %4, metadata !20507, metadata !DIExpression()), !dbg !20515
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !20516
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !20516
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !20508, metadata !DIExpression()), !dbg !20517
  call void @llvm.va_start(i8* nonnull %7), !dbg !20518
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !20519
  %9 = load i32, i32* %8, align 4, !dbg !20519
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !20519
  call void @vprint_module_log(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %10) #22, !dbg !20519
  call void @llvm.va_end(i8* nonnull %7), !dbg !20520
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !20521
  ret void, !dbg !20521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, ...) #0 !dbg !20522 {
  %8 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !20524, metadata !DIExpression()), !dbg !20532
  call void @llvm.dbg.value(metadata i8* %1, metadata !20525, metadata !DIExpression()), !dbg !20532
  call void @llvm.dbg.value(metadata i32 %2, metadata !20526, metadata !DIExpression()), !dbg !20532
  call void @llvm.dbg.value(metadata i32 %3, metadata !20527, metadata !DIExpression()), !dbg !20532
  call void @llvm.dbg.value(metadata i8* %4, metadata !20528, metadata !DIExpression()), !dbg !20532
  call void @llvm.dbg.value(metadata i32 %5, metadata !20529, metadata !DIExpression()), !dbg !20532
  call void @llvm.dbg.value(metadata i8* %6, metadata !20530, metadata !DIExpression()), !dbg !20532
  %9 = bitcast %struct.__va_list* %8 to i8*, !dbg !20533
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !20533
  call void @llvm.dbg.declare(metadata %struct.__va_list* %8, metadata !20531, metadata !DIExpression()), !dbg !20534
  call void @llvm.va_start(i8* nonnull %9), !dbg !20535
  %10 = bitcast %struct.__va_list* %8 to i32*, !dbg !20536
  %11 = load i32, i32* %10, align 4, !dbg !20536
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !20536
  call void @vdump_module_buffer(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %12) #22, !dbg !20536
  call void @llvm.va_end(i8* nonnull %9), !dbg !20537
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !20538
  ret void, !dbg !20538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vdump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %7) local_unnamed_addr #0 !dbg !20539 {
  %9 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !20550, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i8* %0, metadata !20543, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i8* %1, metadata !20544, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i32 %2, metadata !20545, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i32 %3, metadata !20546, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i8* %4, metadata !20547, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i32 %5, metadata !20548, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i8* %6, metadata !20549, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i8* %0, metadata !20551, metadata !DIExpression()), !dbg !20565
  %10 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !20566
  %11 = bitcast i8* %10 to i32*, !dbg !20566
  %12 = load i32, i32* %11, align 4, !dbg !20566
  %13 = icmp eq i32 %12, 0, !dbg !20567
  br i1 %13, label %14, label %101, !dbg !20568

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !20569
  %16 = bitcast i8* %15 to i32*, !dbg !20569
  %17 = load i32, i32* %16, align 4, !dbg !20569
  %18 = icmp ugt i32 %17, %3, !dbg !20570
  br i1 %18, label %101, label %19, !dbg !20571

19:                                               ; preds = %14
  %20 = load i1, i1* @syslog_task_ready, align 4, !dbg !20572
  br i1 %20, label %21, label %28, !dbg !20573

21:                                               ; preds = %19
  %22 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !20574
  %23 = icmp eq i32 %22, 0, !dbg !20575
  br i1 %23, label %24, label %50, !dbg !20576

24:                                               ; preds = %21
  %25 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !20577
  %26 = and i32 %25, 255, !dbg !20578
  %27 = icmp eq i32 %26, 0, !dbg !20579
  br i1 %27, label %28, label %50, !dbg !20580

28:                                               ; preds = %24, %19
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !20581
  %30 = icmp eq i32 %29, 0, !dbg !20582
  br i1 %30, label %101, label %31, !dbg !20583

31:                                               ; preds = %28
  %32 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !20584, !srcloc !20590
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !20584
  call void @llvm.dbg.value(metadata i32 %33, metadata !20587, metadata !DIExpression()) #19, !dbg !20591
  call void @llvm.dbg.value(metadata i32 undef, metadata !20588, metadata !DIExpression()) #19, !dbg !20591
  call void @llvm.dbg.value(metadata i32 %33, metadata !20553, metadata !DIExpression()), !dbg !20592
  %34 = load i32, i32* @syslog_init_done, align 4, !dbg !20593
  %35 = icmp ugt i32 %34, 1, !dbg !20595
  br i1 %35, label %36, label %47, !dbg !20596

36:                                               ; preds = %31
  %37 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !20597
  %38 = bitcast i8* %0 to i8**, !dbg !20599
  %39 = load i8*, i8** %38, align 4, !dbg !20599
  %40 = icmp ult i32 %3, 4, !dbg !20600
  br i1 %40, label %41, label %44, !dbg !20600

41:                                               ; preds = %36
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !20600
  %43 = load i8*, i8** %42, align 4, !dbg !20600
  br label %44, !dbg !20600

44:                                               ; preds = %36, %41
  %45 = phi i8* [ %43, %41 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.312, i32 0, i32 0), %36 ], !dbg !20600
  %46 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef %37, i8* noundef %39, i8* noundef %45, i8* noundef %1, i32 noundef %2) #20, !dbg !20601
  br label %47, !dbg !20602

47:                                               ; preds = %44, %31
  %48 = tail call i32 @vprintf(i8* noundef %6, [1 x i32] %7) #20, !dbg !20603
  %49 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.314, i32 0, i32 0)) #20, !dbg !20604
  tail call void @hex_dump_data(i8* noundef %4, i32 noundef %5) #22, !dbg !20605
  call void @llvm.dbg.value(metadata i32 %33, metadata !20606, metadata !DIExpression()) #19, !dbg !20609
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #19, !dbg !20611, !srcloc !20612
  br label %101, !dbg !20613

50:                                               ; preds = %24, %21
  %51 = bitcast %struct.syslog_buffer_t** %9 to i8*, !dbg !20614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #19, !dbg !20614
  %52 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #22, !dbg !20615
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %52, metadata !20560, metadata !DIExpression()), !dbg !20616
  store %struct.syslog_buffer_t* %52, %struct.syslog_buffer_t** %9, align 4, !dbg !20617
  %53 = icmp eq %struct.syslog_buffer_t* %52, null, !dbg !20618
  br i1 %53, label %100, label %54, !dbg !20620

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 0, !dbg !20621
  call void @llvm.dbg.value(metadata i8* %55, metadata !20562, metadata !DIExpression()), !dbg !20616
  %56 = bitcast i8* %55 to i32*, !dbg !20622
  store i32 1, i32* %56, align 4, !dbg !20623
  %57 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 4, !dbg !20624
  call void @llvm.dbg.value(metadata i8* %57, metadata !20563, metadata !DIExpression()), !dbg !20616
  %58 = bitcast i8* %0 to i8**, !dbg !20625
  %59 = load i8*, i8** %58, align 4, !dbg !20625
  %60 = bitcast i8* %57 to i8**, !dbg !20626
  store i8* %59, i8** %60, align 4, !dbg !20627
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 8, !dbg !20628
  %62 = bitcast i8* %61 to i32*, !dbg !20628
  store i32 %3, i32* %62, align 4, !dbg !20629
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 12, !dbg !20630
  %64 = bitcast i8* %63 to i8**, !dbg !20630
  store i8* %1, i8** %64, align 4, !dbg !20631
  %65 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 16, !dbg !20632
  %66 = bitcast i8* %65 to i32*, !dbg !20632
  store i32 %2, i32* %66, align 4, !dbg !20633
  %67 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !20634
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 20, !dbg !20635
  %69 = bitcast i8* %68 to i32*, !dbg !20635
  store i32 %67, i32* %69, align 4, !dbg !20636
  %70 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 24, !dbg !20637
  %71 = tail call i32 @vsnprintf(i8* noundef nonnull %70, i32 noundef 128, i8* noundef %6, [1 x i32] %7) #20, !dbg !20638
  %72 = icmp slt i32 %5, 2048, !dbg !20639
  %73 = select i1 %72, i32 %5, i32 2048, !dbg !20639
  call void @llvm.dbg.value(metadata i32 %73, metadata !20548, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i32 0, metadata !20552, metadata !DIExpression()), !dbg !20565
  %74 = icmp sgt i32 %73, 128, !dbg !20640
  br i1 %74, label %75, label %81, !dbg !20642

75:                                               ; preds = %54
  %76 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !20643
  %77 = and i32 %76, 255, !dbg !20646
  %78 = icmp eq i32 %77, 0, !dbg !20647
  %79 = add nsw i32 %73, -128
  call void @llvm.dbg.value(metadata i32 undef, metadata !20552, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i32 128, metadata !20548, metadata !DIExpression()), !dbg !20565
  %80 = select i1 %78, i32 %79, i32 0, !dbg !20648
  br label %81, !dbg !20648

81:                                               ; preds = %75, %54
  %82 = phi i32 [ 0, %54 ], [ %80, %75 ], !dbg !20616
  %83 = phi i32 [ %5, %54 ], [ 128, %75 ], !dbg !20616
  call void @llvm.dbg.value(metadata i32 %83, metadata !20548, metadata !DIExpression()), !dbg !20565
  call void @llvm.dbg.value(metadata i32 %82, metadata !20552, metadata !DIExpression()), !dbg !20565
  %84 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 160, !dbg !20649
  %85 = tail call i8* @memcpy(i8* noundef nonnull %84, i8* noundef %4, i32 noundef %83) #20, !dbg !20650
  %86 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 156, !dbg !20651
  %87 = bitcast i8* %86 to i32*, !dbg !20651
  store i32 %83, i32* %87, align 4, !dbg !20652
  %88 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 288, !dbg !20653
  %89 = bitcast i8* %88 to i8**, !dbg !20653
  store i8* null, i8** %89, align 4, !dbg !20654
  %90 = icmp eq i32 %82, 0, !dbg !20655
  br i1 %90, label %99, label %91, !dbg !20657

91:                                               ; preds = %81
  %92 = tail call i8* @pvPortMalloc(i32 noundef %82) #20, !dbg !20658
  store i8* %92, i8** %89, align 4, !dbg !20661
  %93 = icmp eq i8* %92, null, !dbg !20662
  br i1 %93, label %99, label %94, !dbg !20663

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %4, i32 %83, !dbg !20664
  %96 = tail call i8* @memcpy(i8* noundef nonnull %92, i8* noundef %95, i32 noundef %82) #20, !dbg !20666
  %97 = load i32, i32* %87, align 4, !dbg !20667
  %98 = add i32 %97, %82, !dbg !20667
  store i32 %98, i32* %87, align 4, !dbg !20667
  br label %99, !dbg !20668

99:                                               ; preds = %91, %94, %81
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %9, metadata !20560, metadata !DIExpression(DW_OP_deref)), !dbg !20616
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %9) #22, !dbg !20669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #19, !dbg !20670
  br label %101

100:                                              ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #19, !dbg !20670
  br label %101

101:                                              ; preds = %99, %8, %14, %28, %47, %100
  ret void, !dbg !20671
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_current_time_in_ms() unnamed_addr #0 !dbg !20672 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !20678
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !20678
  call void @llvm.dbg.value(metadata i32 0, metadata !20676, metadata !DIExpression()), !dbg !20679
  store i32 0, i32* %1, align 4, !dbg !20680
  call void @llvm.dbg.value(metadata i64 0, metadata !20677, metadata !DIExpression()), !dbg !20679
  call void @llvm.dbg.value(metadata i32* %1, metadata !20676, metadata !DIExpression(DW_OP_deref)), !dbg !20679
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #20, !dbg !20681
  %4 = load i32, i32* %1, align 4, !dbg !20682
  call void @llvm.dbg.value(metadata i32 %4, metadata !20676, metadata !DIExpression()), !dbg !20679
  %5 = zext i32 %4 to i64, !dbg !20683
  %6 = mul nuw nsw i64 %5, 1000, !dbg !20684
  %7 = lshr i64 %6, 15, !dbg !20685
  call void @llvm.dbg.value(metadata i64 %7, metadata !20677, metadata !DIExpression()), !dbg !20679
  %8 = trunc i64 %7 to i32, !dbg !20686
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !20687
  ret i32 %8, !dbg !20688
}

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hex_dump_data(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !20689 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !20693, metadata !DIExpression()), !dbg !20696
  call void @llvm.dbg.value(metadata i32 %1, metadata !20694, metadata !DIExpression()), !dbg !20696
  call void @llvm.dbg.value(metadata i32 0, metadata !20695, metadata !DIExpression()), !dbg !20696
  call void @llvm.dbg.value(metadata i32 0, metadata !20695, metadata !DIExpression()), !dbg !20696
  %3 = icmp sgt i32 %1, 0, !dbg !20697
  br i1 %3, label %4, label %25, !dbg !20700

4:                                                ; preds = %2, %18
  %5 = phi i32 [ %10, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !20695, metadata !DIExpression()), !dbg !20696
  %6 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !20701
  %7 = load i8, i8* %6, align 1, !dbg !20701
  %8 = zext i8 %7 to i32, !dbg !20703
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.315, i32 0, i32 0), i32 noundef %8) #20, !dbg !20704
  %10 = add nuw nsw i32 %5, 1, !dbg !20705
  %11 = and i32 %10, 15, !dbg !20707
  %12 = icmp eq i32 %11, 0, !dbg !20708
  br i1 %12, label %15, label %13, !dbg !20709

13:                                               ; preds = %4
  %14 = icmp eq i32 %10, %1, !dbg !20710
  br i1 %14, label %18, label %15, !dbg !20712

15:                                               ; preds = %13, %4
  %16 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.314, i32 0, i32 0), %4 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.316, i32 0, i32 0), %13 ]
  %17 = tail call i32 (i8*, ...) @printf(i8* noundef %16) #20, !dbg !20713
  br label %18, !dbg !20697

18:                                               ; preds = %15, %13
  call void @llvm.dbg.value(metadata i32 %10, metadata !20695, metadata !DIExpression()), !dbg !20696
  %19 = icmp eq i32 %10, %1, !dbg !20697
  br i1 %19, label %20, label %4, !dbg !20700, !llvm.loop !20714

20:                                               ; preds = %18
  %21 = and i32 %1, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !dbg !20716

23:                                               ; preds = %20
  %24 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.314, i32 0, i32 0)) #20, !dbg !20718
  br label %25, !dbg !20720

25:                                               ; preds = %2, %23, %20
  ret void, !dbg !20721
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.syslog_buffer_t* @buffer_pool_alloc() local_unnamed_addr #0 !dbg !20722 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !20728, !srcloc !20590
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !20728
  call void @llvm.dbg.value(metadata i32 %2, metadata !20587, metadata !DIExpression()) #19, !dbg !20730
  call void @llvm.dbg.value(metadata i32 undef, metadata !20588, metadata !DIExpression()) #19, !dbg !20730
  call void @llvm.dbg.value(metadata i32 %2, metadata !20726, metadata !DIExpression()), !dbg !20731
  call void @llvm.dbg.value(metadata i32 0, metadata !20727, metadata !DIExpression()), !dbg !20731
  br label %6, !dbg !20732

3:                                                ; preds = %6
  %4 = add nuw nsw i32 %7, 1, !dbg !20734
  call void @llvm.dbg.value(metadata i32 %4, metadata !20727, metadata !DIExpression()), !dbg !20731
  call void @llvm.dbg.value(metadata i32 %7, metadata !20727, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20731
  %5 = icmp eq i32 %4, 16, !dbg !20736
  br i1 %5, label %14, label %6, !dbg !20732, !llvm.loop !20737

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %0 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !20727, metadata !DIExpression()), !dbg !20731
  %8 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %7, !dbg !20739
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !20742
  %10 = load i32, i32* %9, align 4, !dbg !20742
  %11 = icmp eq i32 %10, 0, !dbg !20739
  call void @llvm.dbg.value(metadata i32 %7, metadata !20727, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20731
  br i1 %11, label %12, label %3, !dbg !20743

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !20742
  store i32 1, i32* %13, align 4, !dbg !20744
  call void @llvm.dbg.value(metadata i32 %2, metadata !20606, metadata !DIExpression()) #19, !dbg !20746
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #19, !dbg !20748, !srcloc !20612
  br label %17, !dbg !20749

14:                                               ; preds = %3
  %15 = load i32, i32* @syslog_drop_count, align 4, !dbg !20750
  %16 = add i32 %15, 1, !dbg !20750
  store i32 %16, i32* @syslog_drop_count, align 4, !dbg !20750
  call void @llvm.dbg.value(metadata i32 %2, metadata !20606, metadata !DIExpression()) #19, !dbg !20751
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #19, !dbg !20753, !srcloc !20612
  br label %17, !dbg !20754

17:                                               ; preds = %14, %12
  %18 = phi %struct.syslog_buffer_t* [ %8, %12 ], [ null, %14 ], !dbg !20731
  ret %struct.syslog_buffer_t* %18, !dbg !20755
}

; Function Attrs: optsize
declare dso_local i32 @vsnprintf(i8* noundef, i32 noundef, i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_send(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !20756 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !20761, metadata !DIExpression()), !dbg !20765
  %3 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !20766
  %4 = and i32 %3, 255, !dbg !20767
  %5 = icmp eq i32 %4, 0, !dbg !20767
  br i1 %5, label %19, label %6, !dbg !20768

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !20769
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !20769
  call void @llvm.dbg.value(metadata i32 0, metadata !20762, metadata !DIExpression()), !dbg !20770
  store i32 0, i32* %2, align 4, !dbg !20771
  %8 = load i8*, i8** @g_log_queue, align 4, !dbg !20772
  %9 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !20772
  call void @llvm.dbg.value(metadata i32* %2, metadata !20762, metadata !DIExpression(DW_OP_deref)), !dbg !20770
  %10 = call i32 @xQueueGenericSendFromISR(i8* noundef %8, i8* noundef %9, i32* noundef nonnull %2, i32 noundef 0) #20, !dbg !20772
  %11 = icmp eq i32 %10, 0, !dbg !20774
  br i1 %11, label %12, label %14, !dbg !20775

12:                                               ; preds = %6
  %13 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %0, align 4, !dbg !20776
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %13) #22, !dbg !20778
  br label %18, !dbg !20779

14:                                               ; preds = %6
  %15 = load i32, i32* %2, align 4, !dbg !20780
  call void @llvm.dbg.value(metadata i32 %15, metadata !20762, metadata !DIExpression()), !dbg !20770
  %16 = icmp eq i32 %15, 0, !dbg !20780
  br i1 %16, label %18, label %17, !dbg !20783

17:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !20784
  call void asm sideeffect "dsb", ""() #19, !dbg !20784, !srcloc !20786
  call void asm sideeffect "isb", ""() #19, !dbg !20784, !srcloc !20787
  br label %18, !dbg !20784

18:                                               ; preds = %14, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !20788
  br label %23, !dbg !20789

19:                                               ; preds = %1
  %20 = load i8*, i8** @g_log_queue, align 4, !dbg !20790
  %21 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !20790
  %22 = tail call i32 @xQueueGenericSend(i8* noundef %20, i8* noundef %21, i32 noundef -1, i32 noundef 0) #20, !dbg !20790
  br label %23

23:                                               ; preds = %19, %18
  ret void, !dbg !20792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_release(%struct.syslog_buffer_t* nocapture noundef %0) local_unnamed_addr #0 !dbg !20793 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !20797, metadata !DIExpression()), !dbg !20800
  %2 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 0, !dbg !20801
  call void @llvm.dbg.value(metadata i8* %2, metadata !20799, metadata !DIExpression()), !dbg !20800
  %3 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !20802, !srcloc !20590
  call void @llvm.dbg.value(metadata i32 undef, metadata !20587, metadata !DIExpression()) #19, !dbg !20804
  call void @llvm.dbg.value(metadata i32 undef, metadata !20588, metadata !DIExpression()) #19, !dbg !20804
  call void @llvm.dbg.value(metadata i32 undef, metadata !20798, metadata !DIExpression()), !dbg !20800
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !20805
  store i32 0, i32* %4, align 4, !dbg !20806
  %5 = bitcast i8* %2 to i32*, !dbg !20807
  %6 = load i32, i32* %5, align 4, !dbg !20807
  %7 = icmp eq i32 %6, 1, !dbg !20809
  br i1 %7, label %8, label %14, !dbg !20810

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !20799, metadata !DIExpression()), !dbg !20800
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 288, !dbg !20811
  %10 = bitcast i8* %9 to i8**, !dbg !20811
  %11 = load i8*, i8** %10, align 4, !dbg !20811
  %12 = icmp eq i8* %11, null, !dbg !20812
  br i1 %12, label %14, label %13, !dbg !20813

13:                                               ; preds = %8
  tail call void @vPortFree(i8* noundef nonnull %11) #20, !dbg !20814
  br label %14, !dbg !20816

14:                                               ; preds = %13, %8, %1
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !20802
  call void @llvm.dbg.value(metadata i32 %15, metadata !20587, metadata !DIExpression()) #19, !dbg !20804
  call void @llvm.dbg.value(metadata i32 %15, metadata !20798, metadata !DIExpression()), !dbg !20800
  call void @llvm.dbg.value(metadata i32 undef, metadata !20606, metadata !DIExpression()) #19, !dbg !20817
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %15) #19, !dbg !20819, !srcloc !20612
  ret void, !dbg !20820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprint_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %5) local_unnamed_addr #0 !dbg !20821 {
  %7 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !20830, metadata !DIExpression()), !dbg !20844
  call void @llvm.dbg.value(metadata i8* %0, metadata !20825, metadata !DIExpression()), !dbg !20844
  call void @llvm.dbg.value(metadata i8* %1, metadata !20826, metadata !DIExpression()), !dbg !20844
  call void @llvm.dbg.value(metadata i32 %2, metadata !20827, metadata !DIExpression()), !dbg !20844
  call void @llvm.dbg.value(metadata i32 %3, metadata !20828, metadata !DIExpression()), !dbg !20844
  call void @llvm.dbg.value(metadata i8* %4, metadata !20829, metadata !DIExpression()), !dbg !20844
  call void @llvm.dbg.value(metadata i8* %0, metadata !20831, metadata !DIExpression()), !dbg !20844
  %8 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !20845
  %9 = bitcast i8* %8 to i32*, !dbg !20845
  %10 = load i32, i32* %9, align 4, !dbg !20845
  %11 = icmp eq i32 %10, 0, !dbg !20846
  br i1 %11, label %12, label %71, !dbg !20847

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !20848
  %14 = bitcast i8* %13 to i32*, !dbg !20848
  %15 = load i32, i32* %14, align 4, !dbg !20848
  %16 = icmp ugt i32 %15, %3, !dbg !20849
  br i1 %16, label %71, label %17, !dbg !20850

17:                                               ; preds = %12
  %18 = load i1, i1* @syslog_task_ready, align 4, !dbg !20851
  br i1 %18, label %19, label %26, !dbg !20852

19:                                               ; preds = %17
  %20 = tail call i32 @xTaskGetSchedulerState() #20, !dbg !20853
  %21 = icmp eq i32 %20, 0, !dbg !20854
  br i1 %21, label %22, label %48, !dbg !20855

22:                                               ; preds = %19
  %23 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !20856
  %24 = and i32 %23, 255, !dbg !20857
  %25 = icmp eq i32 %24, 0, !dbg !20858
  br i1 %25, label %26, label %48, !dbg !20859

26:                                               ; preds = %22, %17
  %27 = load i32, i32* @syslog_init_done, align 4, !dbg !20860
  %28 = icmp eq i32 %27, 0, !dbg !20861
  br i1 %28, label %71, label %29, !dbg !20862

29:                                               ; preds = %26
  %30 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !20863, !srcloc !20590
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !20863
  call void @llvm.dbg.value(metadata i32 %31, metadata !20587, metadata !DIExpression()) #19, !dbg !20865
  call void @llvm.dbg.value(metadata i32 undef, metadata !20588, metadata !DIExpression()) #19, !dbg !20865
  call void @llvm.dbg.value(metadata i32 %31, metadata !20832, metadata !DIExpression()), !dbg !20866
  %32 = load i32, i32* @syslog_init_done, align 4, !dbg !20867
  %33 = icmp ugt i32 %32, 1, !dbg !20869
  br i1 %33, label %34, label %45, !dbg !20870

34:                                               ; preds = %29
  %35 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !20871
  %36 = bitcast i8* %0 to i8**, !dbg !20873
  %37 = load i8*, i8** %36, align 4, !dbg !20873
  %38 = icmp ult i32 %3, 4, !dbg !20874
  br i1 %38, label %39, label %42, !dbg !20874

39:                                               ; preds = %34
  %40 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !20874
  %41 = load i8*, i8** %40, align 4, !dbg !20874
  br label %42, !dbg !20874

42:                                               ; preds = %34, %39
  %43 = phi i8* [ %41, %39 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.312, i32 0, i32 0), %34 ], !dbg !20874
  %44 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef %35, i8* noundef %37, i8* noundef %43, i8* noundef %1, i32 noundef %2) #20, !dbg !20875
  br label %45, !dbg !20876

45:                                               ; preds = %42, %29
  %46 = tail call i32 @vprintf(i8* noundef %4, [1 x i32] %5) #20, !dbg !20877
  %47 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.314, i32 0, i32 0)) #20, !dbg !20878
  call void @llvm.dbg.value(metadata i32 %31, metadata !20606, metadata !DIExpression()) #19, !dbg !20879
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %31) #19, !dbg !20881, !srcloc !20612
  br label %71, !dbg !20882

48:                                               ; preds = %22, %19
  %49 = bitcast %struct.syslog_buffer_t** %7 to i8*, !dbg !20883
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #19, !dbg !20883
  %50 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #22, !dbg !20884
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %50, metadata !20839, metadata !DIExpression()), !dbg !20885
  store %struct.syslog_buffer_t* %50, %struct.syslog_buffer_t** %7, align 4, !dbg !20886
  %51 = icmp eq %struct.syslog_buffer_t* %50, null, !dbg !20887
  br i1 %51, label %70, label %52, !dbg !20889

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 0, !dbg !20890
  call void @llvm.dbg.value(metadata i8* %53, metadata !20841, metadata !DIExpression()), !dbg !20885
  %54 = bitcast i8* %53 to i32*, !dbg !20891
  store i32 0, i32* %54, align 4, !dbg !20892
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 4, !dbg !20893
  call void @llvm.dbg.value(metadata i8* %55, metadata !20842, metadata !DIExpression()), !dbg !20885
  %56 = bitcast i8* %0 to i8**, !dbg !20894
  %57 = load i8*, i8** %56, align 4, !dbg !20894
  %58 = bitcast i8* %55 to i8**, !dbg !20895
  store i8* %57, i8** %58, align 4, !dbg !20896
  %59 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 8, !dbg !20897
  %60 = bitcast i8* %59 to i32*, !dbg !20897
  store i32 %3, i32* %60, align 4, !dbg !20898
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 12, !dbg !20899
  %62 = bitcast i8* %61 to i8**, !dbg !20899
  store i8* %1, i8** %62, align 4, !dbg !20900
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 16, !dbg !20901
  %64 = bitcast i8* %63 to i32*, !dbg !20901
  store i32 %2, i32* %64, align 4, !dbg !20902
  %65 = tail call fastcc i32 @get_current_time_in_ms() #22, !dbg !20903
  %66 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 20, !dbg !20904
  %67 = bitcast i8* %66 to i32*, !dbg !20904
  store i32 %65, i32* %67, align 4, !dbg !20905
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 24, !dbg !20906
  %69 = tail call i32 @vsnprintf(i8* noundef nonnull %68, i32 noundef 256, i8* noundef %4, [1 x i32] %5) #20, !dbg !20907
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %7, metadata !20839, metadata !DIExpression(DW_OP_deref)), !dbg !20885
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %7) #22, !dbg !20908
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #19, !dbg !20909
  br label %71

70:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #19, !dbg !20909
  br label %71

71:                                               ; preds = %52, %6, %12, %26, %45, %70
  ret void, !dbg !20910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_uart_init(i32 noundef %0) local_unnamed_addr #0 !dbg !20911 {
  %2 = alloca %struct.hal_eint_gpio_map_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !20913, metadata !DIExpression()), !dbg !20923
  %3 = bitcast %struct.hal_eint_gpio_map_t* %2 to i8*, !dbg !20924
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #19, !dbg !20924
  call void @llvm.dbg.declare(metadata %struct.hal_eint_gpio_map_t* %2, metadata !20914, metadata !DIExpression()), !dbg !20925
  %4 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %2, i32 0, i32 0, !dbg !20926
  store i32 9, i32* %4, align 4, !dbg !20927
  %5 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %2, i32 0, i32 3, !dbg !20928
  store i32 0, i32* %5, align 4, !dbg !20929
  %6 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %2, i32 0, i32 2, !dbg !20930
  store i32 0, i32* %6, align 4, !dbg !20931
  %7 = getelementptr inbounds %struct.hal_eint_gpio_map_t, %struct.hal_eint_gpio_map_t* %2, i32 0, i32 1, !dbg !20932
  store i32 3, i32* %7, align 4, !dbg !20933
  store i32 %0, i32* @g_log_uart_port, align 4, !dbg !20934
  %8 = call i32 @hal_uart_init(i32 noundef %0, %struct.hal_eint_gpio_map_t* noundef nonnull %2) #20, !dbg !20935
  call void @llvm.dbg.value(metadata i32 %8, metadata !20922, metadata !DIExpression()), !dbg !20923
  %9 = load i32, i32* @syslog_init_done, align 4, !dbg !20936
  %10 = or i32 %9, 1, !dbg !20936
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !20936
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #19, !dbg !20937
  ret i32 %8, !dbg !20938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_putchar(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !20939 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !20943, metadata !DIExpression()), !dbg !20944
  %2 = load i32, i32* @g_log_uart_port, align 4, !dbg !20945
  tail call void @hal_uart_put_char(i32 noundef %2, i8 noundef zeroext %0) #20, !dbg !20946
  ret void, !dbg !20947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_init() local_unnamed_addr #0 !dbg !20948 {
  %1 = tail call i8* @memset(i8* noundef bitcast ([16 x %struct.syslog_buffer_t]* @syslog_buffer_pool to i8*), i32 noundef 0, i32 noundef 4736) #20, !dbg !20949
  ret void, !dbg !20950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_create() local_unnamed_addr #0 !dbg !20951 {
  %1 = tail call i8* @xQueueGenericCreate(i32 noundef 8, i32 noundef 4, i8 noundef zeroext 0) #20, !dbg !20952
  store i8* %1, i8** @g_log_queue, align 4, !dbg !20953
  %2 = icmp eq i8* %1, null, !dbg !20954
  br i1 %2, label %3, label %5, !dbg !20956

3:                                                ; preds = %0
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.324, i32 0, i32 0)) #20, !dbg !20957
  br label %5, !dbg !20959

5:                                                ; preds = %3, %0
  ret void, !dbg !20960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_queue_receive(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !20961 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !20965, metadata !DIExpression()), !dbg !20967
  %2 = load i8*, i8** @g_log_queue, align 4, !dbg !20968
  %3 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !20968
  %4 = tail call i32 @xQueueGenericReceive(i8* noundef %2, i8* noundef %3, i32 noundef -1, i32 noundef 0) #20, !dbg !20968
  call void @llvm.dbg.value(metadata i32 %4, metadata !20966, metadata !DIExpression()), !dbg !20967
  %5 = icmp ne i32 %4, 1, !dbg !20969
  %6 = sext i1 %5 to i32, !dbg !20970
  ret i32 %6, !dbg !20971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_normal_log(%struct.normal_log_message_t* noundef %0) local_unnamed_addr #0 !dbg !20972 {
  call void @llvm.dbg.value(metadata %struct.normal_log_message_t* %0, metadata !20978, metadata !DIExpression()), !dbg !20979
  %2 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 4, !dbg !20980
  %3 = load i32, i32* %2, align 4, !dbg !20980
  %4 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 0, !dbg !20981
  %5 = load i8*, i8** %4, align 4, !dbg !20981
  %6 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 1, !dbg !20982
  %7 = load i32, i32* %6, align 4, !dbg !20982
  %8 = icmp ult i32 %7, 4, !dbg !20982
  br i1 %8, label %9, label %12, !dbg !20982

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !20982
  %11 = load i8*, i8** %10, align 4, !dbg !20982
  br label %12, !dbg !20982

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.312, i32 0, i32 0), %1 ], !dbg !20982
  %14 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 2, !dbg !20983
  %15 = load i8*, i8** %14, align 4, !dbg !20983
  %16 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 3, !dbg !20984
  %17 = load i32, i32* %16, align 4, !dbg !20984
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #20, !dbg !20985
  %19 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 5, i32 0, !dbg !20986
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.325, i32 0, i32 0), i8* noundef nonnull %19) #20, !dbg !20987
  ret void, !dbg !20988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_hex_dump(%struct.hex_dump_message_t* noundef %0) local_unnamed_addr #0 !dbg !20989 {
  call void @llvm.dbg.value(metadata %struct.hex_dump_message_t* %0, metadata !20995, metadata !DIExpression()), !dbg !20996
  %2 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 4, !dbg !20997
  %3 = load i32, i32* %2, align 4, !dbg !20997
  %4 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 0, !dbg !20998
  %5 = load i8*, i8** %4, align 4, !dbg !20998
  %6 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 1, !dbg !20999
  %7 = load i32, i32* %6, align 4, !dbg !20999
  %8 = icmp ult i32 %7, 4, !dbg !20999
  br i1 %8, label %9, label %12, !dbg !20999

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !20999
  %11 = load i8*, i8** %10, align 4, !dbg !20999
  br label %12, !dbg !20999

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.312, i32 0, i32 0), %1 ], !dbg !20999
  %14 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 2, !dbg !21000
  %15 = load i8*, i8** %14, align 4, !dbg !21000
  %16 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 3, !dbg !21001
  %17 = load i32, i32* %16, align 4, !dbg !21001
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #20, !dbg !21002
  %19 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 5, i32 0, !dbg !21003
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.325, i32 0, i32 0), i8* noundef nonnull %19) #20, !dbg !21004
  %21 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 6, !dbg !21005
  %22 = load i32, i32* %21, align 4, !dbg !21005
  %23 = icmp ugt i32 %22, 128, !dbg !21007
  %24 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 7, i32 0, !dbg !21008
  br i1 %23, label %25, label %30, !dbg !21009

25:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef 128) #22, !dbg !21010
  %26 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 8, !dbg !21012
  %27 = load i8*, i8** %26, align 4, !dbg !21012
  %28 = load i32, i32* %21, align 4, !dbg !21013
  %29 = add i32 %28, -128, !dbg !21014
  tail call void @hex_dump_data(i8* noundef %27, i32 noundef %29) #22, !dbg !21015
  br label %31, !dbg !21016

30:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef %22) #22, !dbg !21017
  br label %31

31:                                               ; preds = %30, %25
  ret void, !dbg !21019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @process_log_message(%struct.log_message_t* noundef %0) local_unnamed_addr #0 !dbg !21020 {
  call void @llvm.dbg.value(metadata %struct.log_message_t* %0, metadata !21026, metadata !DIExpression()), !dbg !21030
  %2 = load i32, i32* @syslog_drop_count, align 4, !dbg !21031
  %3 = icmp eq i32 %2, 0, !dbg !21031
  br i1 %3, label %9, label %4, !dbg !21032

4:                                                ; preds = %1
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !21033, !srcloc !20590
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !21033
  call void @llvm.dbg.value(metadata i32 %6, metadata !20587, metadata !DIExpression()) #19, !dbg !21035
  call void @llvm.dbg.value(metadata i32 undef, metadata !20588, metadata !DIExpression()) #19, !dbg !21035
  call void @llvm.dbg.value(metadata i32 %6, metadata !21027, metadata !DIExpression()), !dbg !21036
  %7 = load i32, i32* @syslog_drop_count, align 4, !dbg !21037
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.326, i32 0, i32 0), i32 noundef %7) #20, !dbg !21038
  store i32 0, i32* @syslog_drop_count, align 4, !dbg !21039
  call void @llvm.dbg.value(metadata i32 %6, metadata !20606, metadata !DIExpression()) #19, !dbg !21040
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #19, !dbg !21042, !srcloc !20612
  br label %9, !dbg !21043

9:                                                ; preds = %4, %1
  %10 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 0, !dbg !21044
  %11 = load i32, i32* %10, align 4, !dbg !21044
  %12 = icmp eq i32 %11, 0, !dbg !21046
  br i1 %12, label %13, label %16, !dbg !21047

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, !dbg !21048
  %15 = bitcast %union.anon* %14 to %struct.normal_log_message_t*, !dbg !21050
  tail call void @print_normal_log(%struct.normal_log_message_t* noundef nonnull %15) #22, !dbg !21051
  br label %18, !dbg !21052

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, i32 0, !dbg !21053
  tail call void @print_hex_dump(%struct.hex_dump_message_t* noundef nonnull %17) #22, !dbg !21055
  br label %18

18:                                               ; preds = %16, %13
  ret void, !dbg !21056
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @syslog_task_entry(i8* nocapture readnone %0) #17 !dbg !21057 {
  %2 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i8* undef, metadata !21059, metadata !DIExpression()), !dbg !21064
  store i1 true, i1* @syslog_task_ready, align 4, !dbg !21065
  tail call void @vTaskPrioritySet(i8* noundef null, i32 noundef 1) #20, !dbg !21066
  %3 = bitcast %struct.syslog_buffer_t** %2 to i8*
  br label %4, !dbg !21067

4:                                                ; preds = %12, %1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !21068
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !21060, metadata !DIExpression()), !dbg !21069
  store %struct.syslog_buffer_t* null, %struct.syslog_buffer_t** %2, align 4, !dbg !21070
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %2, metadata !21060, metadata !DIExpression(DW_OP_deref)), !dbg !21069
  %5 = call i32 @log_queue_receive(%struct.syslog_buffer_t** noundef nonnull %2) #22, !dbg !21071
  %6 = icmp eq i32 %5, 0, !dbg !21073
  br i1 %6, label %7, label %12, !dbg !21074

7:                                                ; preds = %4
  %8 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !21075
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %8, metadata !21060, metadata !DIExpression()), !dbg !21069
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 1, i32 0, !dbg !21077
  %10 = bitcast i8* %9 to %struct.log_message_t*, !dbg !21078
  call void @process_log_message(%struct.log_message_t* noundef nonnull %10) #22, !dbg !21079
  %11 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !21080
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !21060, metadata !DIExpression()), !dbg !21069
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %11) #22, !dbg !21081
  br label %12, !dbg !21082

12:                                               ; preds = %7, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !21083
  br label %4, !dbg !21084, !llvm.loop !21085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_init(void (%struct.syslog_config_s*)* noundef %0, i32 (%struct.syslog_config_s*)* noundef readonly %1, %struct.log_control_block_t** noundef %2) local_unnamed_addr #0 !dbg !21088 {
  %4 = alloca %struct.exception_config_type, align 4
  call void @llvm.dbg.value(metadata void (%struct.syslog_config_s*)* %0, metadata !21097, metadata !DIExpression()), !dbg !21106
  call void @llvm.dbg.value(metadata i32 (%struct.syslog_config_s*)* %1, metadata !21098, metadata !DIExpression()), !dbg !21106
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %2, metadata !21099, metadata !DIExpression()), !dbg !21106
  %5 = bitcast %struct.exception_config_type* %4 to i8*, !dbg !21107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19, !dbg !21107
  call void @llvm.dbg.declare(metadata %struct.exception_config_type* %4, metadata !21100, metadata !DIExpression()), !dbg !21108
  %6 = load i32, i32* @syslog_init_done, align 4, !dbg !21109
  %7 = and i32 %6, 2, !dbg !21111
  %8 = icmp eq i32 %7, 0, !dbg !21111
  br i1 %8, label %9, label %31, !dbg !21112

9:                                                ; preds = %3
  %10 = or i32 %6, 1, !dbg !21113
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !21113
  tail call void @buffer_pool_init() #22, !dbg !21114
  tail call void @log_queue_create() #22, !dbg !21115
  store i1 false, i1* @syslog_task_ready, align 4, !dbg !21116
  %11 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 0, !dbg !21117
  store void ()* @syslog_exception_cb, void ()** %11, align 4, !dbg !21118
  %12 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 1, !dbg !21119
  store void ()* null, void ()** %12, align 4, !dbg !21120
  %13 = call zeroext i1 @exception_register_callbacks(%struct.exception_config_type* noundef nonnull %4) #20, !dbg !21121
  %14 = call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @syslog_task_entry, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.329, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef null, i32 noundef 8, i8** noundef nonnull @syslog_task_handle, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #20, !dbg !21122
  %15 = icmp eq i32 %14, 1, !dbg !21124
  br i1 %15, label %18, label %16, !dbg !21125

16:                                               ; preds = %9
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.330, i32 0, i32 0)) #20, !dbg !21126
  br label %18, !dbg !21128

18:                                               ; preds = %16, %9
  %19 = call fastcc i32 @get_current_time_in_ms() #22, !dbg !21129
  %20 = load i32, i32* @syslog_init_done, align 4, !dbg !21130
  %21 = or i32 %20, 2, !dbg !21130
  store i32 %21, i32* @syslog_init_done, align 4, !dbg !21130
  store void (%struct.syslog_config_s*)* %0, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !21131
  store %struct.log_control_block_t** %2, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21132
  %22 = icmp eq i32 (%struct.syslog_config_s*)* %1, null, !dbg !21133
  br i1 %22, label %28, label %23, !dbg !21135

23:                                               ; preds = %18
  %24 = call i32 %1(%struct.syslog_config_s* noundef nonnull @syslog_config) #20, !dbg !21136
  %25 = icmp eq i32 %24, 0, !dbg !21139
  br i1 %25, label %28, label %26, !dbg !21140

26:                                               ; preds = %23
  %27 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !21141
  call void (i8*, i8*, i32, i32, i8*, ...) %27(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.log_init, i32 0, i32 0), i32 noundef 1040, i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.331, i32 0, i32 0)) #20, !dbg !21141
  br label %28, !dbg !21144

28:                                               ; preds = %23, %26, %18
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !21145
  %30 = or i32 %29, 4, !dbg !21145
  store i32 %30, i32* @syslog_init_done, align 4, !dbg !21145
  br label %31, !dbg !21146

31:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19, !dbg !21146
  ret void, !dbg !21146
}

; Function Attrs: noinline nounwind optsize
define internal void @syslog_exception_cb() #0 !dbg !21147 {
  tail call fastcc void @syslog_buffer_dump() #22, !dbg !21148
  ret void, !dbg !21149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @syslog_buffer_dump() unnamed_addr #0 !dbg !21150 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !21153, metadata !DIExpression()), !dbg !21155
  call void @llvm.dbg.value(metadata i32 0, metadata !21152, metadata !DIExpression()), !dbg !21155
  br label %1, !dbg !21156

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 0, %0 ], [ %12, %10 ]
  %3 = phi %struct.syslog_buffer_t* [ null, %0 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !21152, metadata !DIExpression()), !dbg !21155
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %3, metadata !21153, metadata !DIExpression()), !dbg !21155
  %4 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %2, !dbg !21158
  %5 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %4, i32 0, i32 0, !dbg !21162
  %6 = load i32, i32* %5, align 4, !dbg !21162
  %7 = icmp eq i32 %6, 0, !dbg !21158
  br i1 %7, label %10, label %8, !dbg !21163

8:                                                ; preds = %1
  %9 = ptrtoint %struct.syslog_buffer_t* %3 to i32, !dbg !21164
  store i32 %9, i32* %5, align 4, !dbg !21166
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %4, metadata !21153, metadata !DIExpression()), !dbg !21155
  br label %10, !dbg !21167

10:                                               ; preds = %1, %8
  %11 = phi %struct.syslog_buffer_t* [ %4, %8 ], [ %3, %1 ], !dbg !21155
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !21153, metadata !DIExpression()), !dbg !21155
  %12 = add nuw nsw i32 %2, 1, !dbg !21168
  call void @llvm.dbg.value(metadata i32 %12, metadata !21152, metadata !DIExpression()), !dbg !21155
  %13 = icmp eq i32 %12, 16, !dbg !21169
  br i1 %13, label %14, label %1, !dbg !21156, !llvm.loop !21170

14:                                               ; preds = %10
  %15 = tail call fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %11) #22, !dbg !21172
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !21153, metadata !DIExpression()), !dbg !21155
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.332, i32 0, i32 0)) #20, !dbg !21173
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !21153, metadata !DIExpression()), !dbg !21155
  %17 = icmp eq %struct.syslog_buffer_t* %15, null, !dbg !21174
  br i1 %17, label %26, label %18, !dbg !21174

18:                                               ; preds = %14, %18
  %19 = phi %struct.syslog_buffer_t* [ %22, %18 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !21153, metadata !DIExpression()), !dbg !21155
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !21154, metadata !DIExpression()), !dbg !21155
  %20 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 0, !dbg !21175
  %21 = load i32, i32* %20, align 4, !dbg !21175
  %22 = inttoptr i32 %21 to %struct.syslog_buffer_t*, !dbg !21177
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %22, metadata !21153, metadata !DIExpression()), !dbg !21155
  store i32 1, i32* %20, align 4, !dbg !21178
  %23 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 1, i32 0, !dbg !21179
  %24 = bitcast i8* %23 to %struct.log_message_t*, !dbg !21180
  tail call void @process_log_message(%struct.log_message_t* noundef nonnull %24) #22, !dbg !21181
  %25 = icmp eq i32 %21, 0, !dbg !21174
  br i1 %25, label %26, label %18, !dbg !21174, !llvm.loop !21182

26:                                               ; preds = %18, %14
  ret void, !dbg !21184
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %0) unnamed_addr #13 !dbg !21185 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !21189, metadata !DIExpression()), !dbg !21193
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !21190, metadata !DIExpression()), !dbg !21193
  %2 = icmp eq %struct.syslog_buffer_t* %0, null, !dbg !21194
  br i1 %2, label %44, label %3, !dbg !21196

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !21197
  %5 = load i32, i32* %4, align 4, !dbg !21197
  %6 = icmp eq i32 %5, 0, !dbg !21198
  br i1 %6, label %44, label %7, !dbg !21199

7:                                                ; preds = %3, %41
  %8 = phi i32 [ %43, %41 ], [ %5, %3 ], !dbg !21200
  %9 = phi %struct.syslog_buffer_t* [ %38, %41 ], [ null, %3 ]
  %10 = phi %struct.syslog_buffer_t* [ %12, %41 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %9, metadata !21190, metadata !DIExpression()), !dbg !21193
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !21189, metadata !DIExpression()), !dbg !21193
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !21191, metadata !DIExpression()), !dbg !21193
  %11 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 0, !dbg !21200
  %12 = inttoptr i32 %8 to %struct.syslog_buffer_t*, !dbg !21202
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !21189, metadata !DIExpression()), !dbg !21193
  %13 = icmp eq %struct.syslog_buffer_t* %9, null, !dbg !21203
  br i1 %13, label %35, label %14, !dbg !21205

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 1, i32 20, !dbg !21206
  %16 = bitcast i8* %15 to i32*, !dbg !21206
  %17 = load i32, i32* %16, align 4, !dbg !21206
  %18 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %9, i32 0, i32 1, i32 20, !dbg !21207
  %19 = bitcast i8* %18 to i32*, !dbg !21207
  %20 = load i32, i32* %19, align 4, !dbg !21207
  %21 = icmp ult i32 %17, %20, !dbg !21208
  br i1 %21, label %35, label %22, !dbg !21209

22:                                               ; preds = %14, %27
  %23 = phi %struct.syslog_buffer_t* [ %28, %27 ], [ %9, %14 ], !dbg !21210
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %23, metadata !21192, metadata !DIExpression()), !dbg !21193
  %24 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !21212
  %25 = load i32, i32* %24, align 4, !dbg !21212
  %26 = icmp eq i32 %25, 0, !dbg !21215
  br i1 %26, label %33, label %27, !dbg !21216

27:                                               ; preds = %22
  %28 = inttoptr i32 %25 to %struct.syslog_buffer_t*, !dbg !21217
  %29 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %28, i32 0, i32 1, i32 20, !dbg !21217
  %30 = bitcast i8* %29 to i32*, !dbg !21217
  %31 = load i32, i32* %30, align 4, !dbg !21217
  %32 = icmp ult i32 %17, %31, !dbg !21218
  br i1 %32, label %33, label %22, !dbg !21219, !llvm.loop !21220

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !21212
  store i32 %25, i32* %11, align 4, !dbg !21223
  br label %35, !dbg !21225

35:                                               ; preds = %7, %14, %33
  %36 = phi %struct.syslog_buffer_t* [ %10, %33 ], [ %9, %14 ], [ %9, %7 ]
  %37 = phi i32* [ %34, %33 ], [ %11, %14 ], [ %11, %7 ]
  %38 = phi %struct.syslog_buffer_t* [ %9, %33 ], [ %10, %14 ], [ %10, %7 ], !dbg !21193
  %39 = ptrtoint %struct.syslog_buffer_t* %36 to i32, !dbg !21226
  store i32 %39, i32* %37, align 4, !dbg !21226
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %38, metadata !21190, metadata !DIExpression()), !dbg !21193
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !21189, metadata !DIExpression()), !dbg !21193
  %40 = icmp eq i32 %8, 0, !dbg !21227
  br i1 %40, label %44, label %41, !dbg !21228, !llvm.loop !21229

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %12, i32 0, i32 0
  %43 = load i32, i32* %42, align 4, !dbg !21200
  br label %7, !dbg !21228

44:                                               ; preds = %35, %1, %3
  %45 = phi %struct.syslog_buffer_t* [ %0, %3 ], [ null, %1 ], [ %38, %35 ], !dbg !21193
  ret %struct.syslog_buffer_t* %45, !dbg !21231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @syslog_get_config(%struct.syslog_config_s* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !21232 {
  call void @llvm.dbg.value(metadata %struct.syslog_config_s* %0, metadata !21236, metadata !DIExpression()), !dbg !21237
  %2 = bitcast %struct.syslog_config_s* %0 to i64*, !dbg !21238
  %3 = load i64, i64* bitcast (%struct.syslog_config_s* @syslog_config to i64*), align 8, !dbg !21238
  store i64 %3, i64* %2, align 4, !dbg !21238
  ret void, !dbg !21239
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_set_filter(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !21240 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !21244, metadata !DIExpression()), !dbg !21251
  call void @llvm.dbg.value(metadata i8* %1, metadata !21245, metadata !DIExpression()), !dbg !21251
  call void @llvm.dbg.value(metadata i8* %2, metadata !21246, metadata !DIExpression()), !dbg !21251
  call void @llvm.dbg.value(metadata i32 %3, metadata !21247, metadata !DIExpression()), !dbg !21251
  %5 = tail call i32 @str_to_log_switch(i8* noundef %1) #22, !dbg !21252
  call void @llvm.dbg.value(metadata i32 %5, metadata !21249, metadata !DIExpression()), !dbg !21251
  %6 = icmp slt i32 %5, 0, !dbg !21253
  br i1 %6, label %47, label %7, !dbg !21255

7:                                                ; preds = %4
  %8 = tail call i32 @str_to_print_level(i8* noundef %2) #22, !dbg !21256
  call void @llvm.dbg.value(metadata i32 %8, metadata !21250, metadata !DIExpression()), !dbg !21251
  %9 = icmp slt i32 %8, 0, !dbg !21257
  br i1 %9, label %47, label %10, !dbg !21259

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.333, i32 0, i32 0)) #20, !dbg !21260
  %12 = icmp eq i32 %11, 0, !dbg !21262
  %13 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21263
  br i1 %12, label %14, label %31, !dbg !21264

14:                                               ; preds = %10
  %15 = icmp eq %struct.log_control_block_t** %13, null, !dbg !21265
  br i1 %15, label %47, label %16, !dbg !21268

16:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 0, metadata !21248, metadata !DIExpression()), !dbg !21251
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %13, align 4, !dbg !21269
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !21270
  br i1 %18, label %43, label %19, !dbg !21270

19:                                               ; preds = %16, %19
  %20 = phi %struct.log_control_block_t* [ %29, %19 ], [ %17, %16 ]
  %21 = phi i32 [ %27, %19 ], [ 0, %16 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !21248, metadata !DIExpression()), !dbg !21251
  %22 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %20, i32 0, i32 1, !dbg !21271
  store i32 %5, i32* %22, align 4, !dbg !21273
  %23 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21274
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %21, !dbg !21275
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !21275
  %26 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %25, i32 0, i32 2, !dbg !21276
  store i32 %8, i32* %26, align 4, !dbg !21277
  %27 = add nuw nsw i32 %21, 1, !dbg !21278
  call void @llvm.dbg.value(metadata i32 %27, metadata !21248, metadata !DIExpression()), !dbg !21251
  %28 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %27, !dbg !21269
  %29 = load %struct.log_control_block_t*, %struct.log_control_block_t** %28, align 4, !dbg !21269
  %30 = icmp eq %struct.log_control_block_t* %29, null, !dbg !21270
  br i1 %30, label %43, label %19, !dbg !21270, !llvm.loop !21279

31:                                               ; preds = %10
  %32 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %13, i8* noundef %0) #22, !dbg !21281
  call void @llvm.dbg.value(metadata i32 %32, metadata !21248, metadata !DIExpression()), !dbg !21251
  %33 = icmp slt i32 %32, 0, !dbg !21283
  br i1 %33, label %47, label %34, !dbg !21285

34:                                               ; preds = %31
  %35 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21286
  %36 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %35, i32 %32, !dbg !21287
  %37 = load %struct.log_control_block_t*, %struct.log_control_block_t** %36, align 4, !dbg !21287
  %38 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %37, i32 0, i32 1, !dbg !21288
  store i32 %5, i32* %38, align 4, !dbg !21289
  %39 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21290
  %40 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %39, i32 %32, !dbg !21291
  %41 = load %struct.log_control_block_t*, %struct.log_control_block_t** %40, align 4, !dbg !21291
  %42 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %41, i32 0, i32 2, !dbg !21292
  store i32 %8, i32* %42, align 4, !dbg !21293
  br label %43

43:                                               ; preds = %19, %16, %34
  %44 = icmp eq i32 %3, 0, !dbg !21294
  br i1 %44, label %47, label %45, !dbg !21296

45:                                               ; preds = %43
  %46 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !21297
  tail call void %46(%struct.syslog_config_s* noundef nonnull @syslog_config) #20, !dbg !21299
  br label %47, !dbg !21300

47:                                               ; preds = %43, %45, %31, %14, %7, %4
  %48 = phi i32 [ -1, %4 ], [ -1, %7 ], [ -1, %14 ], [ -1, %31 ], [ 0, %45 ], [ 0, %43 ], !dbg !21251
  ret i32 %48, !dbg !21301
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_log_switch(i8* noundef %0) local_unnamed_addr #0 !dbg !21302 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !21306, metadata !DIExpression()), !dbg !21308
  call void @llvm.dbg.value(metadata i32 0, metadata !21307, metadata !DIExpression()), !dbg !21308
  br label %2, !dbg !21309

2:                                                ; preds = %2, %1
  %3 = phi i1 [ false, %1 ], [ true, %2 ]
  %4 = phi i32 [ 0, %1 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !21307, metadata !DIExpression()), !dbg !21308
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %4, !dbg !21311
  %6 = load i8*, i8** %5, align 4, !dbg !21311
  %7 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %6) #20, !dbg !21315
  %8 = icmp eq i32 %7, 0, !dbg !21315
  %9 = or i1 %8, %3, !dbg !21316
  br i1 %9, label %10, label %2, !dbg !21316

10:                                               ; preds = %2
  %11 = select i1 %8, i32 %4, i32 -1, !dbg !21316
  ret i32 %11, !dbg !21317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_print_level(i8* noundef %0) local_unnamed_addr #0 !dbg !21318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !21320, metadata !DIExpression()), !dbg !21322
  call void @llvm.dbg.value(metadata i32 0, metadata !21321, metadata !DIExpression()), !dbg !21322
  br label %2, !dbg !21323

2:                                                ; preds = %1, %8
  %3 = phi i32 [ 0, %1 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !21321, metadata !DIExpression()), !dbg !21322
  %4 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !21325
  %5 = load i8*, i8** %4, align 4, !dbg !21325
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #20, !dbg !21329
  %7 = icmp eq i32 %6, 0, !dbg !21329
  br i1 %7, label %11, label %8, !dbg !21330

8:                                                ; preds = %2
  %9 = add nuw nsw i32 %3, 1, !dbg !21331
  call void @llvm.dbg.value(metadata i32 %9, metadata !21321, metadata !DIExpression()), !dbg !21322
  %10 = icmp eq i32 %9, 4, !dbg !21332
  br i1 %10, label %11, label %2, !dbg !21323, !llvm.loop !21333

11:                                               ; preds = %8, %2
  %12 = phi i32 [ %3, %2 ], [ -1, %8 ], !dbg !21322
  ret i32 %12, !dbg !21335
}

; Function Attrs: optsize
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) unnamed_addr #0 !dbg !21336 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !21340, metadata !DIExpression()), !dbg !21343
  call void @llvm.dbg.value(metadata i8* %1, metadata !21341, metadata !DIExpression()), !dbg !21343
  call void @llvm.dbg.value(metadata i32 0, metadata !21342, metadata !DIExpression()), !dbg !21343
  %3 = icmp eq %struct.log_control_block_t** %0, null, !dbg !21344
  br i1 %3, label %19, label %4, !dbg !21346

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !21342, metadata !DIExpression()), !dbg !21343
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !21347
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !21348
  br i1 %6, label %19, label %7, !dbg !21348

7:                                                ; preds = %4, %14
  %8 = phi %struct.log_control_block_t* [ %17, %14 ], [ %5, %4 ]
  %9 = phi i32 [ %15, %14 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !21342, metadata !DIExpression()), !dbg !21343
  %10 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !21349
  %11 = load i8*, i8** %10, align 4, !dbg !21349
  %12 = tail call i32 @strcmp(i8* noundef %11, i8* noundef %1) #20, !dbg !21352
  %13 = icmp eq i32 %12, 0, !dbg !21352
  br i1 %13, label %19, label %14, !dbg !21353

14:                                               ; preds = %7
  %15 = add nuw nsw i32 %9, 1, !dbg !21354
  call void @llvm.dbg.value(metadata i32 %15, metadata !21342, metadata !DIExpression()), !dbg !21343
  %16 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %15, !dbg !21347
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %16, align 4, !dbg !21347
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !21348
  br i1 %18, label %19, label %7, !dbg !21348, !llvm.loop !21355

19:                                               ; preds = %7, %14, %4, %2
  %20 = phi i32 [ -1, %2 ], [ -1, %4 ], [ %9, %7 ], [ -1, %14 ], !dbg !21343
  ret i32 %20, !dbg !21357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_at_set_filter(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !21358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !21362, metadata !DIExpression()), !dbg !21367
  call void @llvm.dbg.value(metadata i32 %1, metadata !21363, metadata !DIExpression()), !dbg !21367
  call void @llvm.dbg.value(metadata i32 %2, metadata !21364, metadata !DIExpression()), !dbg !21367
  call void @llvm.dbg.value(metadata i32 %3, metadata !21365, metadata !DIExpression()), !dbg !21367
  %5 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.333, i32 0, i32 0)) #20, !dbg !21368
  %6 = icmp eq i32 %5, 0, !dbg !21370
  %7 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21371
  br i1 %6, label %8, label %25, !dbg !21372

8:                                                ; preds = %4
  %9 = icmp eq %struct.log_control_block_t** %7, null, !dbg !21373
  br i1 %9, label %41, label %10, !dbg !21376

10:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !21366, metadata !DIExpression()), !dbg !21367
  %11 = load %struct.log_control_block_t*, %struct.log_control_block_t** %7, align 4, !dbg !21377
  %12 = icmp eq %struct.log_control_block_t* %11, null, !dbg !21378
  br i1 %12, label %37, label %13, !dbg !21378

13:                                               ; preds = %10, %13
  %14 = phi %struct.log_control_block_t* [ %23, %13 ], [ %11, %10 ]
  %15 = phi i32 [ %21, %13 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !21366, metadata !DIExpression()), !dbg !21367
  %16 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %14, i32 0, i32 1, !dbg !21379
  store i32 %1, i32* %16, align 4, !dbg !21381
  %17 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21382
  %18 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %15, !dbg !21383
  %19 = load %struct.log_control_block_t*, %struct.log_control_block_t** %18, align 4, !dbg !21383
  %20 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %19, i32 0, i32 2, !dbg !21384
  store i32 %2, i32* %20, align 4, !dbg !21385
  %21 = add nuw nsw i32 %15, 1, !dbg !21386
  call void @llvm.dbg.value(metadata i32 %21, metadata !21366, metadata !DIExpression()), !dbg !21367
  %22 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %21, !dbg !21377
  %23 = load %struct.log_control_block_t*, %struct.log_control_block_t** %22, align 4, !dbg !21377
  %24 = icmp eq %struct.log_control_block_t* %23, null, !dbg !21378
  br i1 %24, label %37, label %13, !dbg !21378, !llvm.loop !21387

25:                                               ; preds = %4
  %26 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %7, i8* noundef %0) #22, !dbg !21389
  call void @llvm.dbg.value(metadata i32 %26, metadata !21366, metadata !DIExpression()), !dbg !21367
  %27 = icmp slt i32 %26, 0, !dbg !21391
  br i1 %27, label %41, label %28, !dbg !21393

28:                                               ; preds = %25
  %29 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21394
  %30 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %29, i32 %26, !dbg !21395
  %31 = load %struct.log_control_block_t*, %struct.log_control_block_t** %30, align 4, !dbg !21395
  %32 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %31, i32 0, i32 1, !dbg !21396
  store i32 %1, i32* %32, align 4, !dbg !21397
  %33 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !21398
  %34 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %33, i32 %26, !dbg !21399
  %35 = load %struct.log_control_block_t*, %struct.log_control_block_t** %34, align 4, !dbg !21399
  %36 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %35, i32 0, i32 2, !dbg !21400
  store i32 %2, i32* %36, align 4, !dbg !21401
  br label %37

37:                                               ; preds = %13, %10, %28
  %38 = icmp eq i32 %3, 0, !dbg !21402
  br i1 %38, label %41, label %39, !dbg !21404

39:                                               ; preds = %37
  %40 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !21405
  tail call void %40(%struct.syslog_config_s* noundef nonnull @syslog_config) #20, !dbg !21407
  br label %41, !dbg !21408

41:                                               ; preds = %37, %39, %25, %8
  %42 = phi i32 [ -1, %8 ], [ -1, %25 ], [ 0, %39 ], [ 0, %37 ], !dbg !21367
  ret i32 %42, !dbg !21409
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_str2val(%struct.log_control_block_t** noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !21410 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !21414, metadata !DIExpression()), !dbg !21425
  call void @llvm.dbg.value(metadata i8* %1, metadata !21415, metadata !DIExpression()), !dbg !21425
  call void @llvm.dbg.value(metadata i32 0, metadata !21416, metadata !DIExpression()), !dbg !21425
  %7 = bitcast i8** %3 to i8*, !dbg !21426
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !21426
  %8 = bitcast i8** %4 to i8*, !dbg !21427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !21427
  %9 = bitcast i8** %5 to i8*, !dbg !21428
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !21428
  call void @llvm.dbg.value(metadata i8 0, metadata !21421, metadata !DIExpression()), !dbg !21425
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #19, !dbg !21429
  call void @llvm.dbg.value(metadata i8 poison, metadata !21421, metadata !DIExpression()), !dbg !21425
  call void @llvm.dbg.value(metadata i32 0, metadata !21416, metadata !DIExpression()), !dbg !21425
  br label %10, !dbg !21430

10:                                               ; preds = %2, %51
  %11 = phi i32 [ 0, %2 ], [ %37, %51 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !21416, metadata !DIExpression()), !dbg !21425
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !21431
  call void @llvm.dbg.value(metadata i8** %3, metadata !21418, metadata !DIExpression(DW_OP_deref)), !dbg !21425
  %13 = call fastcc i32 @syslog_get_a_string(i8* noundef %12, i8** noundef nonnull %3) #22, !dbg !21433
  call void @llvm.dbg.value(metadata i32 %13, metadata !21417, metadata !DIExpression()), !dbg !21425
  %14 = icmp eq i32 %13, 0, !dbg !21434
  br i1 %14, label %61, label %15, !dbg !21436

15:                                               ; preds = %10
  %16 = add i32 %13, %11, !dbg !21437
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !21438
  %18 = load i8, i8* %17, align 1, !dbg !21438
  %19 = icmp eq i8 %18, 0, !dbg !21439
  br i1 %19, label %61, label %20, !dbg !21440

20:                                               ; preds = %15
  store i8 0, i8* %17, align 1, !dbg !21441
  %21 = add i32 %16, 1, !dbg !21442
  call void @llvm.dbg.value(metadata i32 %21, metadata !21416, metadata !DIExpression()), !dbg !21425
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !21443
  call void @llvm.dbg.value(metadata i8** %4, metadata !21419, metadata !DIExpression(DW_OP_deref)), !dbg !21425
  %23 = call fastcc i32 @syslog_get_a_string(i8* noundef %22, i8** noundef nonnull %4) #22, !dbg !21444
  call void @llvm.dbg.value(metadata i32 %23, metadata !21417, metadata !DIExpression()), !dbg !21425
  %24 = icmp eq i32 %23, 0, !dbg !21445
  br i1 %24, label %61, label %25, !dbg !21447

25:                                               ; preds = %20
  %26 = add i32 %23, %21, !dbg !21448
  %27 = getelementptr inbounds i8, i8* %1, i32 %26, !dbg !21449
  call void @llvm.dbg.value(metadata i1 undef, metadata !21421, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !21425
  store i8 0, i8* %27, align 1, !dbg !21450
  %28 = add i32 %26, 1, !dbg !21451
  call void @llvm.dbg.value(metadata i32 %28, metadata !21416, metadata !DIExpression()), !dbg !21425
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !21452
  call void @llvm.dbg.value(metadata i8** %5, metadata !21420, metadata !DIExpression(DW_OP_deref)), !dbg !21425
  %30 = call fastcc i32 @syslog_get_a_string(i8* noundef %29, i8** noundef nonnull %5) #22, !dbg !21453
  call void @llvm.dbg.value(metadata i32 %30, metadata !21417, metadata !DIExpression()), !dbg !21425
  %31 = icmp eq i32 %30, 0, !dbg !21454
  br i1 %31, label %61, label %32, !dbg !21456

32:                                               ; preds = %25
  %33 = add i32 %30, %28, !dbg !21457
  %34 = getelementptr inbounds i8, i8* %1, i32 %33, !dbg !21458
  %35 = load i8, i8* %34, align 1, !dbg !21458
  %36 = icmp eq i8 %35, 0, !dbg !21459
  call void @llvm.dbg.value(metadata i1 %36, metadata !21421, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !21425
  store i8 0, i8* %34, align 1, !dbg !21460
  %37 = add i32 %33, 1, !dbg !21461
  call void @llvm.dbg.value(metadata i32 %37, metadata !21416, metadata !DIExpression()), !dbg !21425
  %38 = load i8*, i8** %3, align 4, !dbg !21462
  call void @llvm.dbg.value(metadata i8* %38, metadata !21418, metadata !DIExpression()), !dbg !21425
  %39 = call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %0, i8* noundef %38) #22, !dbg !21463
  call void @llvm.dbg.value(metadata i32 %39, metadata !21417, metadata !DIExpression()), !dbg !21425
  %40 = icmp slt i32 %39, 0, !dbg !21464
  br i1 %40, label %61, label %41, !dbg !21466

41:                                               ; preds = %32
  %42 = load i8*, i8** %4, align 4, !dbg !21467
  call void @llvm.dbg.value(metadata i8* %42, metadata !21419, metadata !DIExpression()), !dbg !21425
  call void @llvm.dbg.value(metadata i8* %6, metadata !21424, metadata !DIExpression(DW_OP_deref)), !dbg !21425
  %43 = call i32 @toi(i8* noundef %42, i8* noundef nonnull %6) #20, !dbg !21468
  call void @llvm.dbg.value(metadata i32 %43, metadata !21422, metadata !DIExpression()), !dbg !21425
  %44 = load i8, i8* %6, align 1, !dbg !21469
  call void @llvm.dbg.value(metadata i8 %44, metadata !21424, metadata !DIExpression()), !dbg !21425
  %45 = icmp eq i8 %44, 4, !dbg !21471
  br i1 %45, label %61, label %46, !dbg !21472

46:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 undef, metadata !21422, metadata !DIExpression()), !dbg !21425
  %47 = load i8*, i8** %5, align 4, !dbg !21473
  call void @llvm.dbg.value(metadata i8* %47, metadata !21420, metadata !DIExpression()), !dbg !21425
  call void @llvm.dbg.value(metadata i8* %6, metadata !21424, metadata !DIExpression(DW_OP_deref)), !dbg !21425
  %48 = call i32 @toi(i8* noundef %47, i8* noundef nonnull %6) #20, !dbg !21474
  call void @llvm.dbg.value(metadata i32 %48, metadata !21423, metadata !DIExpression()), !dbg !21425
  %49 = load i8, i8* %6, align 1, !dbg !21475
  call void @llvm.dbg.value(metadata i8 %49, metadata !21424, metadata !DIExpression()), !dbg !21425
  %50 = icmp eq i8 %49, 4, !dbg !21477
  br i1 %50, label %61, label %51, !dbg !21478

51:                                               ; preds = %46
  %52 = icmp ne i32 %43, 0, !dbg !21479
  %53 = zext i1 %52 to i32, !dbg !21479
  call void @llvm.dbg.value(metadata i32 %53, metadata !21422, metadata !DIExpression()), !dbg !21425
  %54 = icmp ult i32 %48, 3, !dbg !21480
  %55 = select i1 %54, i32 %48, i32 3, !dbg !21480
  call void @llvm.dbg.value(metadata i32 %55, metadata !21423, metadata !DIExpression()), !dbg !21425
  %56 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %39, !dbg !21481
  %57 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !21481
  %58 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %57, i32 0, i32 1, !dbg !21482
  store i32 %53, i32* %58, align 4, !dbg !21483
  %59 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !21484
  %60 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %59, i32 0, i32 2, !dbg !21485
  store i32 %55, i32* %60, align 4, !dbg !21486
  call void @llvm.dbg.value(metadata i8 poison, metadata !21421, metadata !DIExpression()), !dbg !21425
  call void @llvm.dbg.value(metadata i32 %37, metadata !21416, metadata !DIExpression()), !dbg !21425
  br i1 %36, label %61, label %10, !dbg !21430, !llvm.loop !21487

61:                                               ; preds = %51, %46, %41, %32, %25, %20, %10, %15
  %62 = phi i32 [ -1, %15 ], [ -1, %10 ], [ -2, %20 ], [ -2, %25 ], [ -3, %32 ], [ -4, %41 ], [ -4, %46 ], [ 0, %51 ], !dbg !21425
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #19, !dbg !21489
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !21489
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !21489
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !21489
  ret i32 %62, !dbg !21489
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @syslog_get_a_string(i8* noundef %0, i8** nocapture noundef writeonly %1) unnamed_addr #13 !dbg !21490 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !21495, metadata !DIExpression()), !dbg !21498
  call void @llvm.dbg.value(metadata i8** %1, metadata !21496, metadata !DIExpression()), !dbg !21498
  br label %3, !dbg !21499

3:                                                ; preds = %6, %2
  %4 = phi i8* [ %0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !21495, metadata !DIExpression()), !dbg !21498
  %5 = load i8, i8* %4, align 1, !dbg !21500
  switch i8 %5, label %9 [
    i8 32, label %6
    i8 0, label %8
  ], !dbg !21499

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !21501
  call void @llvm.dbg.value(metadata i8* %7, metadata !21495, metadata !DIExpression()), !dbg !21498
  br label %3, !dbg !21499, !llvm.loop !21503

8:                                                ; preds = %3
  store i8* null, i8** %1, align 4, !dbg !21505
  br label %19, !dbg !21508

9:                                                ; preds = %3
  store i8* %4, i8** %1, align 4, !dbg !21509
  br label %10, !dbg !21510

10:                                               ; preds = %13, %9
  %11 = phi i8* [ %4, %9 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !21495, metadata !DIExpression()), !dbg !21498
  %12 = load i8, i8* %11, align 1, !dbg !21511
  switch i8 %12, label %13 [
    i8 32, label %15
    i8 0, label %15
  ], !dbg !21512

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !21513
  call void @llvm.dbg.value(metadata i8* %14, metadata !21495, metadata !DIExpression()), !dbg !21498
  br label %10, !dbg !21510, !llvm.loop !21515

15:                                               ; preds = %10, %10
  %16 = ptrtoint i8* %11 to i32, !dbg !21517
  %17 = ptrtoint i8* %4 to i32, !dbg !21517
  %18 = sub i32 %16, %17, !dbg !21517
  br label %19, !dbg !21518

19:                                               ; preds = %15, %8
  %20 = phi i32 [ 0, %8 ], [ %18, %15 ], !dbg !21498
  ret i32 %20, !dbg !21519
}

; Function Attrs: optsize
declare dso_local i32 @toi(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_val2str(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 !dbg !21520 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !21527, metadata !DIExpression()), !dbg !21532
  call void @llvm.dbg.value(metadata i8* %1, metadata !21528, metadata !DIExpression()), !dbg !21532
  call void @llvm.dbg.value(metadata i32 0, metadata !21529, metadata !DIExpression()), !dbg !21532
  call void @llvm.dbg.value(metadata i32 0, metadata !21530, metadata !DIExpression()), !dbg !21532
  %3 = icmp eq %struct.log_control_block_t** %0, null
  call void @llvm.dbg.value(metadata i32 0, metadata !21529, metadata !DIExpression()), !dbg !21532
  call void @llvm.dbg.value(metadata i32 0, metadata !21530, metadata !DIExpression()), !dbg !21532
  br i1 %3, label %31, label %4, !dbg !21533

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !21529, metadata !DIExpression()), !dbg !21532
  call void @llvm.dbg.value(metadata i32 0, metadata !21530, metadata !DIExpression()), !dbg !21532
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !21534
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !21533
  br i1 %6, label %27, label %7, !dbg !21535

7:                                                ; preds = %4, %7
  %8 = phi %struct.log_control_block_t* [ %25, %7 ], [ %5, %4 ]
  %9 = phi i32 [ %22, %7 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %7 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !21530, metadata !DIExpression()), !dbg !21532
  call void @llvm.dbg.value(metadata i32 %10, metadata !21529, metadata !DIExpression()), !dbg !21532
  %11 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !21536
  %12 = sub nsw i32 256, %9, !dbg !21538
  %13 = icmp eq i32 %10, 0, !dbg !21539
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.336, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.316, i32 0, i32 0), !dbg !21540
  %15 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !21541
  %16 = load i8*, i8** %15, align 4, !dbg !21541
  %17 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 1, !dbg !21542
  %18 = load i32, i32* %17, align 4, !dbg !21542
  %19 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 2, !dbg !21543
  %20 = load i32, i32* %19, align 4, !dbg !21543
  %21 = tail call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef %11, i32 noundef %12, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.337, i32 0, i32 0), i8* noundef %14, i8* noundef %16, i32 noundef %18, i32 noundef %20) #20, !dbg !21544
  call void @llvm.dbg.value(metadata i32 %21, metadata !21531, metadata !DIExpression()), !dbg !21532
  %22 = add nsw i32 %21, %9, !dbg !21545
  call void @llvm.dbg.value(metadata i32 %22, metadata !21530, metadata !DIExpression()), !dbg !21532
  %23 = add nuw nsw i32 %10, 1, !dbg !21546
  call void @llvm.dbg.value(metadata i32 %23, metadata !21529, metadata !DIExpression()), !dbg !21532
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %23, !dbg !21534
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !21534
  %26 = icmp eq %struct.log_control_block_t* %25, null, !dbg !21533
  br i1 %26, label %27, label %7, !dbg !21535, !llvm.loop !21547

27:                                               ; preds = %7, %4
  %28 = phi i32 [ 0, %4 ], [ %22, %7 ]
  %29 = icmp sgt i32 %28, 255, !dbg !21549
  br i1 %29, label %30, label %31, !dbg !21551

30:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.339, i32 0, i32 0), i32 noundef 1467) #20, !dbg !21552
  br label %31, !dbg !21552

31:                                               ; preds = %2, %30, %27
  %32 = phi i32 [ %28, %30 ], [ %28, %27 ], [ 0, %2 ]
  ret i32 %32, !dbg !21554
}

; Function Attrs: optsize
declare dso_local i32 @snprintf(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i8* @log_switch_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !21555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21559, metadata !DIExpression()), !dbg !21560
  %2 = icmp ugt i32 %0, 1, !dbg !21561
  br i1 %2, label %3, label %4, !dbg !21563

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.339, i32 0, i32 0), i32 noundef 1474) #20, !dbg !21564
  br label %4, !dbg !21564

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %0, !dbg !21566
  %6 = load i8*, i8** %5, align 4, !dbg !21566
  ret i8* %6, !dbg !21567
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @print_level_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !21568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21572, metadata !DIExpression()), !dbg !21573
  %2 = icmp ugt i32 %0, 3, !dbg !21574
  br i1 %2, label %3, label %4, !dbg !21576

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.339, i32 0, i32 0), i32 noundef 1480) #20, !dbg !21577
  br label %4, !dbg !21577

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %0, !dbg !21579
  %6 = load i8*, i8** %5, align 4, !dbg !21579
  ret i8* %6, !dbg !21580
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__wrap_printf(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !21581 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !21585, metadata !DIExpression()), !dbg !21589
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !21590
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !21590
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !21586, metadata !DIExpression()), !dbg !21591
  %4 = load i32, i32* @syslog_init_done, align 4, !dbg !21592
  %5 = icmp eq i32 %4, 0, !dbg !21592
  br i1 %5, label %13, label %6, !dbg !21594

6:                                                ; preds = %1
  %7 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !21595, !srcloc !20590
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !21595
  call void @llvm.dbg.value(metadata i32 %8, metadata !20587, metadata !DIExpression()) #19, !dbg !21597
  call void @llvm.dbg.value(metadata i32 undef, metadata !20588, metadata !DIExpression()) #19, !dbg !21597
  call void @llvm.dbg.value(metadata i32 %8, metadata !21588, metadata !DIExpression()), !dbg !21589
  call void @llvm.va_start(i8* nonnull %3), !dbg !21598
  %9 = bitcast %struct.__va_list* %2 to i32*, !dbg !21599
  %10 = load i32, i32* %9, align 4, !dbg !21599
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !21599
  %12 = call i32 @vprintf(i8* noundef %0, [1 x i32] %11) #20, !dbg !21599
  call void @llvm.dbg.value(metadata i32 %12, metadata !21587, metadata !DIExpression()), !dbg !21589
  call void @llvm.va_end(i8* nonnull %3), !dbg !21600
  call void @llvm.dbg.value(metadata i32 %8, metadata !20606, metadata !DIExpression()) #19, !dbg !21601
  call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %8) #19, !dbg !21603, !srcloc !20612
  br label %13, !dbg !21604

13:                                               ; preds = %1, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %1 ], !dbg !21589
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !21605
  ret i32 %14, !dbg !21605
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { naked noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #19 = { nounwind }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #22 = { nobuiltin optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !83, !164, !2379, !394, !2383, !409, !2393, !2438, !455, !474, !564, !2441, !613, !624, !671, !708, !791, !844, !2444, !2458, !912, !951, !1052, !1168, !1218, !2483, !1244, !1427, !1435, !1451, !2222, !1514, !2486, !1765, !1776, !2491, !1922, !1985, !2008, !2038, !2517, !2236, !2365}
!llvm.ident = !{!2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520, !2520}
!llvm.module.flags = !{!2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2, file: !3, line: 74, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !50, globals: !63, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!4 = !{!5, !20, !28, !35, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!10 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!11 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!12 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!13 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!14 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!15 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!16 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!17 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!18 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!19 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 387, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!24 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!25 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!26 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!27 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 666, baseType: !30, size: 32, elements: !31)
!29 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!30 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!33 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!34 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 73, baseType: !30, size: 32, elements: !36)
!36 = !{!37, !38, !39, !40, !41, !42, !43}
!37 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!38 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!39 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!40 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!41 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!42 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!43 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 123, baseType: !30, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!48 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!49 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!50 = !{!51, !52, !59}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !54)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !55, line: 24, baseType: !56)
!55 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !57, line: 43, baseType: !58)
!57 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!58 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !55, line: 48, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !57, line: 79, baseType: !30)
!63 = !{!64, !0, !67, !70, !72, !74, !76, !78}
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !2, file: !3, line: 72, type: !66, isLocal: false, isDefinition: true)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !6, line: 64, baseType: !5)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2, file: !3, line: 75, type: !69, isLocal: false, isDefinition: true)
!69 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !2, file: !3, line: 77, type: !61, isLocal: false, isDefinition: true)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "suspend_time", scope: !2, file: !3, line: 82, type: !61, isLocal: false, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !2, file: !3, line: 83, type: !61, isLocal: false, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !2, file: !3, line: 84, type: !61, isLocal: false, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !2, file: !3, line: 78, type: !7, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !83, file: !84, line: 71, type: !158, isLocal: false, isDefinition: true)
!83 = distinct !DICompileUnit(language: DW_LANG_C99, file: !84, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !85, retainedTypes: !136, globals: !141, splitDebugInlining: false, nameTableKind: None)
!84 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!85 = !{!86, !91}
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 121, baseType: !30, size: 32, elements: !88)
!87 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!90 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !92, line: 47, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "../../../../..//driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!94 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!95 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!96 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!97 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!98 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!99 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!100 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!101 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!102 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!103 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!104 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!105 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!106 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!107 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!108 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!109 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!110 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!111 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!112 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!113 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!114 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!115 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!116 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!117 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!118 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!119 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!120 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!121 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!122 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!123 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!124 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!125 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!126 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!127 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!128 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!129 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!130 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!131 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!132 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!133 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!134 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!135 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!136 = !{!137, !140}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !87, line: 116, baseType: !30)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !92, line: 95, baseType: !91)
!141 = !{!81, !142}
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !83, file: !84, line: 67, type: !144, isLocal: true, isDefinition: true)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !145, line: 111, baseType: !146)
!145 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 109, size: 96, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !146, file: !145, line: 110, baseType: !149, size: 96)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !145, line: 106, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 102, size: 96, elements: !151)
!151 = !{!152, !156, !157}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !150, file: !145, line: 103, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DISubroutineType(types: !155)
!155 = !{null}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !150, file: !145, line: 104, baseType: !153, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !150, file: !145, line: 105, baseType: !153, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !87, line: 62, baseType: !30)
!160 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!161 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "LISR", scope: !164, file: !165, line: 565, type: !381, isLocal: true, isDefinition: true)
!164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !166, retainedTypes: !280, globals: !357, splitDebugInlining: false, nameTableKind: None)
!165 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/hal_gpio_7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!166 = !{!167, !91, !172, !203}
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 1209, baseType: !30, size: 32, elements: !169)
!168 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/hal_gpio_7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!169 = !{!170, !171}
!170 = !DIEnumerator(name: "ePAD_CONTROL_BY_N9", value: 0)
!171 = !DIEnumerator(name: "ePAD_CONTROL_BY_CM4", value: 1)
!172 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !173, line: 55, baseType: !30, size: 32, elements: !174)
!173 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/pinmux.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!174 = !{!175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202}
!175 = !DIEnumerator(name: "eIOT_GPIO_IDX_0", value: 0)
!176 = !DIEnumerator(name: "eIOT_GPIO_IDX_1", value: 1)
!177 = !DIEnumerator(name: "eIOT_GPIO_IDX_2", value: 2)
!178 = !DIEnumerator(name: "eIOT_GPIO_IDX_3", value: 3)
!179 = !DIEnumerator(name: "eIOT_GPIO_IDX_4", value: 4)
!180 = !DIEnumerator(name: "eIOT_GPIO_IDX_5", value: 5)
!181 = !DIEnumerator(name: "eIOT_GPIO_IDX_6", value: 6)
!182 = !DIEnumerator(name: "eIOT_GPIO_IDX_7", value: 7)
!183 = !DIEnumerator(name: "eIOT_GPIO_IDX_24", value: 24)
!184 = !DIEnumerator(name: "eIOT_GPIO_IDX_25", value: 25)
!185 = !DIEnumerator(name: "eIOT_GPIO_IDX_26", value: 26)
!186 = !DIEnumerator(name: "eIOT_GPIO_IDX_27", value: 27)
!187 = !DIEnumerator(name: "eIOT_GPIO_IDX_28", value: 28)
!188 = !DIEnumerator(name: "eIOT_GPIO_IDX_29", value: 29)
!189 = !DIEnumerator(name: "eIOT_GPIO_IDX_30", value: 30)
!190 = !DIEnumerator(name: "eIOT_GPIO_IDX_31", value: 31)
!191 = !DIEnumerator(name: "eIOT_GPIO_IDX_32", value: 32)
!192 = !DIEnumerator(name: "eIOT_GPIO_IDX_33", value: 33)
!193 = !DIEnumerator(name: "eIOT_GPIO_IDX_34", value: 34)
!194 = !DIEnumerator(name: "eIOT_GPIO_IDX_35", value: 35)
!195 = !DIEnumerator(name: "eIOT_GPIO_IDX_36", value: 36)
!196 = !DIEnumerator(name: "eIOT_GPIO_IDX_37", value: 37)
!197 = !DIEnumerator(name: "eIOT_GPIO_IDX_38", value: 38)
!198 = !DIEnumerator(name: "eIOT_GPIO_IDX_39", value: 39)
!199 = !DIEnumerator(name: "eIOT_GPIO_IDX_57", value: 57)
!200 = !DIEnumerator(name: "eIOT_GPIO_IDX_58", value: 58)
!201 = !DIEnumerator(name: "eIOT_GPIO_IDX_59", value: 59)
!202 = !DIEnumerator(name: "eIOT_GPIO_IDX_60", value: 60)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !204, line: 150, baseType: !30, size: 32, elements: !205)
!204 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/hal_pinmux.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!205 = !{!206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279}
!206 = !DIEnumerator(name: "ePAD_ANTSEL0", value: 0)
!207 = !DIEnumerator(name: "ePAD_ANTSEL1", value: 1)
!208 = !DIEnumerator(name: "ePAD_ANTSEL2", value: 2)
!209 = !DIEnumerator(name: "ePAD_ANTSEL3", value: 3)
!210 = !DIEnumerator(name: "ePAD_ANTSEL4", value: 4)
!211 = !DIEnumerator(name: "ePAD_ANTSEL5", value: 5)
!212 = !DIEnumerator(name: "ePAD_ANTSEL6", value: 6)
!213 = !DIEnumerator(name: "ePAD_ANTSEL7", value: 7)
!214 = !DIEnumerator(name: "ePAD_IN_GPIO8", value: 8)
!215 = !DIEnumerator(name: "ePAD_IN_GPIO9", value: 9)
!216 = !DIEnumerator(name: "ePAD_IN_GPIO10", value: 10)
!217 = !DIEnumerator(name: "ePAD_IN_GPIO11", value: 11)
!218 = !DIEnumerator(name: "ePAD_IN_GPIO12", value: 12)
!219 = !DIEnumerator(name: "ePAD_IN_GPIO13", value: 13)
!220 = !DIEnumerator(name: "ePAD_IN_GPIO14", value: 14)
!221 = !DIEnumerator(name: "ePAD_IN_GPIO15", value: 15)
!222 = !DIEnumerator(name: "ePAD_IN_GPIO16", value: 16)
!223 = !DIEnumerator(name: "ePAD_IN_GPIO17", value: 17)
!224 = !DIEnumerator(name: "ePAD_IN_GPIO18", value: 18)
!225 = !DIEnumerator(name: "ePAD_IN_GPIO19", value: 19)
!226 = !DIEnumerator(name: "ePAD_IN_GPIO20", value: 20)
!227 = !DIEnumerator(name: "ePAD_IN_GPIO21", value: 21)
!228 = !DIEnumerator(name: "ePAD_IN_GPIO22", value: 22)
!229 = !DIEnumerator(name: "ePAD_IN_UART0_TXD", value: 23)
!230 = !DIEnumerator(name: "ePAD_PERST_N", value: 24)
!231 = !DIEnumerator(name: "ePAD_WAKE_N", value: 25)
!232 = !DIEnumerator(name: "ePAD_CLK_REQ_N", value: 26)
!233 = !DIEnumerator(name: "ePAD_SDIO_CLK", value: 27)
!234 = !DIEnumerator(name: "ePAD_SDIO_CMD", value: 28)
!235 = !DIEnumerator(name: "ePAD_SDIO_DAT3", value: 29)
!236 = !DIEnumerator(name: "ePAD_SDIO_DAT2", value: 30)
!237 = !DIEnumerator(name: "ePAD_SDIO_DAT1", value: 31)
!238 = !DIEnumerator(name: "ePAD_SDIO_DAT0", value: 32)
!239 = !DIEnumerator(name: "ePAD_GPIO0", value: 33)
!240 = !DIEnumerator(name: "ePAD_GPIO1", value: 34)
!241 = !DIEnumerator(name: "ePAD_UART_DBG", value: 35)
!242 = !DIEnumerator(name: "ePAD_UART_RX", value: 36)
!243 = !DIEnumerator(name: "ePAD_UART_TX", value: 37)
!244 = !DIEnumerator(name: "ePAD_UART_RTS", value: 38)
!245 = !DIEnumerator(name: "ePAD_UART_CTS", value: 39)
!246 = !DIEnumerator(name: "ePAD_IN_GPIO44", value: 40)
!247 = !DIEnumerator(name: "ePAD_IN_GPIO45", value: 41)
!248 = !DIEnumerator(name: "ePAD_IN_GPIO46", value: 42)
!249 = !DIEnumerator(name: "ePAD_IN_GPIO47", value: 43)
!250 = !DIEnumerator(name: "ePAD_IN_GPIO48", value: 44)
!251 = !DIEnumerator(name: "ePAD_IN_GPIO49", value: 45)
!252 = !DIEnumerator(name: "ePAD_IN_GPIO50", value: 46)
!253 = !DIEnumerator(name: "ePAD_IN_GPIO51", value: 47)
!254 = !DIEnumerator(name: "ePAD_IN_GPIO52", value: 48)
!255 = !DIEnumerator(name: "ePAD_IN_GPIO53", value: 49)
!256 = !DIEnumerator(name: "ePAD_IN_GPIO54", value: 50)
!257 = !DIEnumerator(name: "ePAD_IN_PWM2", value: 51)
!258 = !DIEnumerator(name: "ePAD_IN_PWM3", value: 52)
!259 = !DIEnumerator(name: "ePAD_IN_PWM4", value: 53)
!260 = !DIEnumerator(name: "ePAD_IN_PWM5", value: 54)
!261 = !DIEnumerator(name: "ePAD_IN_PWM6", value: 55)
!262 = !DIEnumerator(name: "ePAD_IN_PWM7", value: 56)
!263 = !DIEnumerator(name: "ePAD_WF_RF_DIS_B", value: 57)
!264 = !DIEnumerator(name: "ePAD_BT_RF_DIS_B", value: 58)
!265 = !DIEnumerator(name: "ePAD_WF_LED_B", value: 59)
!266 = !DIEnumerator(name: "ePAD_BT_LED_B", value: 60)
!267 = !DIEnumerator(name: "ePAD_IN_ADC4", value: 61)
!268 = !DIEnumerator(name: "ePAD_IN_ADC5", value: 62)
!269 = !DIEnumerator(name: "ePAD_IN_ADC6", value: 63)
!270 = !DIEnumerator(name: "ePAD_IN_ADC7", value: 64)
!271 = !DIEnumerator(name: "ePAD_IN_ADC8", value: 65)
!272 = !DIEnumerator(name: "ePAD_IN_ADC9", value: 66)
!273 = !DIEnumerator(name: "ePAD_IN_ADC10", value: 67)
!274 = !DIEnumerator(name: "ePAD_IN_ADC11", value: 68)
!275 = !DIEnumerator(name: "ePAD_IN_ADC12", value: 69)
!276 = !DIEnumerator(name: "ePAD_IN_ADC13", value: 70)
!277 = !DIEnumerator(name: "ePAD_IN_ADC14", value: 71)
!278 = !DIEnumerator(name: "ePAD_IN_ADC15", value: 72)
!279 = !DIEnumerator(name: "ePAD_NUM", value: 73)
!280 = !{!137, !139, !281, !140, !282, !61, !283, !316, !355}
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_IOT_GPIO_NAME_T", file: !173, line: 87, baseType: !172)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_PAD_NAME_T", file: !204, line: 225, baseType: !203)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !285, line: 378, baseType: !286)
!285 = !DIFile(filename: "../../../../..//driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 363, size: 28704, elements: !287)
!287 = !{!288, !292, !296, !297, !298, !299, !300, !301, !302, !303, !307, !311, !315}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !286, file: !285, line: 365, baseType: !289, size: 256)
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !290)
!290 = !{!291}
!291 = !DISubrange(count: 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !286, file: !285, line: 366, baseType: !293, size: 768, offset: 256)
!293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !294)
!294 = !{!295}
!295 = !DISubrange(count: 24)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !286, file: !285, line: 367, baseType: !289, size: 256, offset: 1024)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !286, file: !285, line: 368, baseType: !293, size: 768, offset: 1280)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !286, file: !285, line: 369, baseType: !289, size: 256, offset: 2048)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !286, file: !285, line: 370, baseType: !293, size: 768, offset: 2304)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !286, file: !285, line: 371, baseType: !289, size: 256, offset: 3072)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !286, file: !285, line: 372, baseType: !293, size: 768, offset: 3328)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !286, file: !285, line: 373, baseType: !289, size: 256, offset: 4096)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !286, file: !285, line: 374, baseType: !304, size: 1792, offset: 4352)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 56)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !286, file: !285, line: 375, baseType: !308, size: 1920, offset: 6144)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1920, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: 240)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !286, file: !285, line: 376, baseType: !312, size: 20608, offset: 8064)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !313)
!313 = !{!314}
!314 = !DISubrange(count: 644)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !286, file: !285, line: 377, baseType: !60, size: 32, offset: 28672)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !285, line: 418, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 395, size: 1120, elements: !319)
!319 = !{!320, !322, !323, !324, !325, !326, !327, !331, !332, !333, !334, !335, !336, !337, !338, !342, !343, !344, !348, !352, !354}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !318, file: !285, line: 397, baseType: !321, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !318, file: !285, line: 398, baseType: !60, size: 32, offset: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !318, file: !285, line: 399, baseType: !60, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !318, file: !285, line: 400, baseType: !60, size: 32, offset: 96)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !318, file: !285, line: 401, baseType: !60, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !318, file: !285, line: 402, baseType: !60, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !318, file: !285, line: 403, baseType: !328, size: 96, offset: 192)
!328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 96, elements: !329)
!329 = !{!330}
!330 = !DISubrange(count: 12)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !318, file: !285, line: 404, baseType: !60, size: 32, offset: 288)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !318, file: !285, line: 405, baseType: !60, size: 32, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !318, file: !285, line: 406, baseType: !60, size: 32, offset: 352)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !318, file: !285, line: 407, baseType: !60, size: 32, offset: 384)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !318, file: !285, line: 408, baseType: !60, size: 32, offset: 416)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !318, file: !285, line: 409, baseType: !60, size: 32, offset: 448)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !318, file: !285, line: 410, baseType: !60, size: 32, offset: 480)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !318, file: !285, line: 411, baseType: !339, size: 64, offset: 512)
!339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 64, elements: !340)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !318, file: !285, line: 412, baseType: !321, size: 32, offset: 576)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !318, file: !285, line: 413, baseType: !321, size: 32, offset: 608)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !318, file: !285, line: 414, baseType: !345, size: 128, offset: 640)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 128, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 4)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !318, file: !285, line: 415, baseType: !349, size: 160, offset: 768)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 160, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 5)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !318, file: !285, line: 416, baseType: !353, size: 160, offset: 928)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !350)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !318, file: !285, line: 417, baseType: !60, size: 32, offset: 1088)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !55, line: 44, baseType: !356)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !57, line: 77, baseType: !7)
!357 = !{!162, !358, !366}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "eint_dbc_register", scope: !164, file: !165, line: 52, type: !360, isLocal: true, isDefinition: true)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_DEBOUCE_REGISTER_T", file: !168, line: 1231, baseType: !362)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 1229, size: 128, elements: !363)
!363 = !{!364}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_IRQ_SENS", scope: !362, file: !168, line: 1230, baseType: !365, size: 128)
!365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 128, elements: !346)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "eint_con_register", scope: !164, file: !165, line: 51, type: !368, isLocal: true, isDefinition: true)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_CON_REGISTER_T", file: !168, line: 1224, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 1220, size: 10272, elements: !371)
!371 = !{!372, !376, !380}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_EINT_CON", scope: !370, file: !168, line: 1221, baseType: !373, size: 2112)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 2112, elements: !374)
!374 = !{!375}
!375 = !DISubrange(count: 66)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !370, file: !168, line: 1222, baseType: !377, size: 8032, offset: 2112)
!377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 8032, elements: !378)
!378 = !{!379}
!379 = !DISubrange(count: 251)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_IRQ_SENS", scope: !370, file: !168, line: 1223, baseType: !365, size: 128, offset: 10144)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPI_LISR_Struct", file: !168, line: 1250, baseType: !382)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 1248, size: 32, elements: !383)
!383 = !{!384}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "gpiLisr_func", scope: !382, file: !168, line: 1249, baseType: !385, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPI_LISR_func", file: !168, line: 1216, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 1214, size: 32, elements: !387)
!387 = !{!388}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IDX_EINT_WIC_LISR", scope: !386, file: !168, line: 1215, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 32)
!390 = !DISubroutineType(types: !391)
!391 = !{null, !281}
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "halspim_isr", scope: !394, file: !395, line: 51, type: !405, isLocal: false, isDefinition: true)
!394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !395, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !396, retainedTypes: !397, globals: !404, splitDebugInlining: false, nameTableKind: None)
!395 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/hal_spim.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!396 = !{!91, !86}
!397 = !{!398, !402, !137, !51, !403, !59}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !400)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "ULONG", file: !87, line: 68, baseType: !401)
!401 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !87, line: 59, baseType: !58)
!404 = !{!392}
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "HALSPIM_ISR", file: !406, line: 45, baseType: !153)
!406 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/hal_spim.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "gpio_bakup_table", scope: !409, file: !410, line: 62, type: !445, isLocal: true, isDefinition: true)
!409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !410, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !411, retainedTypes: !443, globals: !444, splitDebugInlining: false, nameTableKind: None)
!410 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/low_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!411 = !{!172, !412, !417, !421, !425, !429, !433, !167}
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !413, line: 57, baseType: !30, size: 32, elements: !414)
!413 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/low_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!414 = !{!415, !416}
!415 = !DIEnumerator(name: "eDirection_IN", value: 0)
!416 = !DIEnumerator(name: "eDirection_OUT", value: 1)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !413, line: 69, baseType: !30, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIEnumerator(name: "eEdge_Trigger", value: 0)
!420 = !DIEnumerator(name: "eLevel_Trigger", value: 1)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !413, line: 74, baseType: !30, size: 32, elements: !422)
!422 = !{!423, !424}
!423 = !DIEnumerator(name: "eDebounce_Disable", value: 0)
!424 = !DIEnumerator(name: "eDebounce_Enable", value: 1)
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !413, line: 79, baseType: !30, size: 32, elements: !426)
!426 = !{!427, !428}
!427 = !DIEnumerator(name: "eDebounce_Negative_Pol", value: 0)
!428 = !DIEnumerator(name: "eDebounce_Positive_Pol", value: 1)
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !413, line: 84, baseType: !30, size: 32, elements: !430)
!430 = !{!431, !432}
!431 = !DIEnumerator(name: "eDebounce_Dual_No", value: 0)
!432 = !DIEnumerator(name: "eDebounce_Dual_Yes", value: 1)
!433 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !413, line: 89, baseType: !30, size: 32, elements: !434)
!434 = !{!435, !436, !437, !438, !439, !440, !441, !442}
!435 = !DIEnumerator(name: "eDebounce_Prescaler_8K", value: 0)
!436 = !DIEnumerator(name: "eDebounce_Prescaler_4K", value: 1)
!437 = !DIEnumerator(name: "eDebounce_Prescaler_2K", value: 2)
!438 = !DIEnumerator(name: "eDebounce_Prescaler_1K", value: 3)
!439 = !DIEnumerator(name: "eDebounce_Prescaler_Dot5K", value: 4)
!440 = !DIEnumerator(name: "eDebounce_Prescaler_Dot25K", value: 5)
!441 = !DIEnumerator(name: "eDebounce_Prescaler_Dot125K", value: 6)
!442 = !DIEnumerator(name: "eDebounce_Prescaler_Dot0625K", value: 7)
!443 = !{!137}
!444 = !{!407}
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 1408, elements: !451)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_backup_restore_t", file: !410, line: 60, baseType: !447)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 57, size: 64, elements: !448)
!448 = !{!449, !450}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "reg_data", scope: !447, file: !410, line: 58, baseType: !61, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_addr", scope: !447, file: !410, line: 59, baseType: !61, size: 32, offset: 32)
!451 = !{!452}
!452 = !DISubrange(count: 22)
!453 = !DIGlobalVariableExpression(var: !454, expr: !DIExpression())
!454 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !455, file: !456, line: 58, type: !30, isLocal: false, isDefinition: true)
!455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !456, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !457, retainedTypes: !464, globals: !471, splitDebugInlining: false, nameTableKind: None)
!456 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!457 = !{!458}
!458 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 45, baseType: !30, size: 32, elements: !459)
!459 = !{!460, !461, !462, !463}
!460 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!461 = !DIEnumerator(name: "SPI", value: 1)
!462 = !DIEnumerator(name: "SPIQ", value: 2)
!463 = !DIEnumerator(name: "QPI", value: 3)
!464 = !{!137, !465, !30, !466, !468, !469}
!465 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !30)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 32)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !58)
!471 = !{!453}
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !474, file: !475, line: 67, type: !30, isLocal: false, isDefinition: true)
!474 = distinct !DICompileUnit(language: DW_LANG_C99, file: !475, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !476, retainedTypes: !483, globals: !501, splitDebugInlining: false, nameTableKind: None)
!475 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!476 = !{!35, !5, !458, !477}
!477 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 66, baseType: !7, size: 32, elements: !478)
!478 = !{!479, !480, !481, !482}
!479 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!480 = !DIEnumerator(name: "FLASH_READY", value: 0)
!481 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!482 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!483 = !{!484, !401, !486, !30, !51, !500, !61, !139}
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 32)
!485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !6, line: 137, size: 192, elements: !489)
!489 = !{!490, !493, !494, !495, !496, !497, !498, !499}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !488, file: !6, line: 138, baseType: !491, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !488, file: !6, line: 139, baseType: !58, size: 8, offset: 32)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !488, file: !6, line: 140, baseType: !401, size: 32, offset: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !488, file: !6, line: 141, baseType: !401, size: 32, offset: 96)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !488, file: !6, line: 142, baseType: !30, size: 32, offset: 128)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !488, file: !6, line: 144, baseType: !58, size: 8, offset: 160)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !488, file: !6, line: 145, baseType: !58, size: 8, offset: 168)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !488, file: !6, line: 146, baseType: !58, size: 8, offset: 176)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 32)
!501 = !{!472, !502, !505, !508, !513, !516, !518, !521, !523, !525, !527, !529, !531, !533, !535, !537, !539, !541, !543, !548, !550, !552, !554, !557}
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !474, file: !475, line: 70, type: !504, isLocal: false, isDefinition: true)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 96, elements: !329)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !474, file: !475, line: 73, type: !507, isLocal: false, isDefinition: true)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 32, elements: !346)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !474, file: !475, line: 76, type: !510, isLocal: false, isDefinition: true)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 72, elements: !511)
!511 = !{!512}
!512 = !DISubrange(count: 9)
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !474, file: !475, line: 79, type: !515, isLocal: false, isDefinition: true)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32, elements: !346)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !474, file: !475, line: 82, type: !515, isLocal: false, isDefinition: true)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !474, file: !475, line: 87, type: !520, isLocal: false, isDefinition: true)
!520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 64, elements: !290)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !474, file: !475, line: 91, type: !520, isLocal: false, isDefinition: true)
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !474, file: !475, line: 95, type: !520, isLocal: false, isDefinition: true)
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !474, file: !475, line: 100, type: !510, isLocal: false, isDefinition: true)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !474, file: !475, line: 104, type: !510, isLocal: false, isDefinition: true)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !474, file: !475, line: 108, type: !510, isLocal: false, isDefinition: true)
!531 = !DIGlobalVariableExpression(var: !532, expr: !DIExpression())
!532 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !474, file: !475, line: 112, type: !520, isLocal: false, isDefinition: true)
!533 = !DIGlobalVariableExpression(var: !534, expr: !DIExpression())
!534 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !474, file: !475, line: 115, type: !520, isLocal: false, isDefinition: true)
!535 = !DIGlobalVariableExpression(var: !536, expr: !DIExpression())
!536 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !474, file: !475, line: 119, type: !520, isLocal: false, isDefinition: true)
!537 = !DIGlobalVariableExpression(var: !538, expr: !DIExpression())
!538 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !474, file: !475, line: 123, type: !520, isLocal: false, isDefinition: true)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !474, file: !475, line: 126, type: !520, isLocal: false, isDefinition: true)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !474, file: !475, line: 130, type: !520, isLocal: false, isDefinition: true)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !474, file: !475, line: 135, type: !545, isLocal: false, isDefinition: true)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 56, elements: !546)
!546 = !{!547}
!547 = !DISubrange(count: 7)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !474, file: !475, line: 138, type: !545, isLocal: false, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !474, file: !475, line: 142, type: !486, isLocal: false, isDefinition: true)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !474, file: !475, line: 161, type: !7, isLocal: false, isDefinition: true)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !474, file: !475, line: 162, type: !556, isLocal: false, isDefinition: true)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !6, line: 81, baseType: !35)
!557 = !DIGlobalVariableExpression(var: !558, expr: !DIExpression())
!558 = distinct !DIGlobalVariable(name: "chips_data", scope: !474, file: !475, line: 144, type: !559, isLocal: true, isDefinition: true)
!559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 2496, elements: !560)
!560 = !{!561}
!561 = !DISubrange(count: 13)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "spi_ok_cnt", scope: !564, file: !565, line: 51, type: !610, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !566, retainedTypes: !576, globals: !577, splitDebugInlining: false, nameTableKind: None)
!565 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/spim.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!566 = !{!567, !572}
!567 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !568, line: 217, baseType: !30, size: 32, elements: !569)
!568 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!569 = !{!570, !571}
!570 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!571 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!572 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !568, line: 210, baseType: !30, size: 32, elements: !573)
!573 = !{!574, !575}
!574 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!575 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!576 = !{!355, !137}
!577 = !{!578, !592, !594, !562, !608}
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "remainder", scope: !580, file: !565, line: 109, type: !61, isLocal: true, isDefinition: true)
!580 = distinct !DISubprogram(name: "spim_write", scope: !565, file: !565, line: 103, type: !581, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !584)
!581 = !DISubroutineType(types: !582)
!582 = !{!355, !500, !583}
!583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!584 = !{!585, !586, !587, !589, !590, !591}
!585 = !DILocalVariable(name: "buf", arg: 1, scope: !580, file: !565, line: 103, type: !500)
!586 = !DILocalVariable(name: "buf_cnt", arg: 2, scope: !580, file: !565, line: 103, type: !583)
!587 = !DILocalVariable(name: "ret", scope: !580, file: !565, line: 105, type: !588)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !87, line: 56, baseType: !7)
!589 = !DILocalVariable(name: "op_addr", scope: !580, file: !565, line: 106, type: !61)
!590 = !DILocalVariable(name: "n_cmd_byte", scope: !580, file: !565, line: 107, type: !61)
!591 = !DILocalVariable(name: "i", scope: !580, file: !565, line: 108, type: !61)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "regVal", scope: !580, file: !565, line: 109, type: !61, isLocal: true, isDefinition: true)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "remainder", scope: !596, file: !565, line: 152, type: !61, isLocal: true, isDefinition: true)
!596 = distinct !DISubprogram(name: "spim_read", scope: !565, file: !565, line: 146, type: !597, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !599)
!597 = !DISubroutineType(types: !598)
!598 = !{!355, !583, !583, !500, !583}
!599 = !{!600, !601, !602, !603, !604, !605, !606, !607}
!600 = !DILocalVariable(name: "cmd", arg: 1, scope: !596, file: !565, line: 146, type: !583)
!601 = !DILocalVariable(name: "n_cmd_byte", arg: 2, scope: !596, file: !565, line: 146, type: !583)
!602 = !DILocalVariable(name: "buf", arg: 3, scope: !596, file: !565, line: 146, type: !500)
!603 = !DILocalVariable(name: "buf_cnt", arg: 4, scope: !596, file: !565, line: 146, type: !583)
!604 = !DILocalVariable(name: "ret", scope: !596, file: !565, line: 148, type: !588)
!605 = !DILocalVariable(name: "fake_op", scope: !596, file: !565, line: 149, type: !61)
!606 = !DILocalVariable(name: "fake_cmd_byte", scope: !596, file: !565, line: 150, type: !61)
!607 = !DILocalVariable(name: "i", scope: !596, file: !565, line: 151, type: !61)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "quotient", scope: !564, file: !565, line: 52, type: !61, isLocal: true, isDefinition: true)
!610 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !355)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !613, file: !614, line: 43, type: !61, isLocal: true, isDefinition: true)
!613 = distinct !DICompileUnit(language: DW_LANG_C99, file: !614, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !615, globals: !619, splitDebugInlining: false, nameTableKind: None)
!614 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!615 = !{!466, !159, !59, !402, !616, !618}
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !618)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !87, line: 133, baseType: !30)
!619 = !{!611, !620}
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !613, file: !614, line: 44, type: !61, isLocal: true, isDefinition: true)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !624, file: !625, line: 54, type: !61, isLocal: false, isDefinition: true)
!624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !626, retainedTypes: !650, globals: !657, splitDebugInlining: false, nameTableKind: None)
!625 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!626 = !{!91, !627, !633}
!627 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !628, line: 71, baseType: !30, size: 32, elements: !629)
!628 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!629 = !{!630, !631, !632}
!630 = !DIEnumerator(name: "UART_PORT0", value: 0)
!631 = !DIEnumerator(name: "UART_PORT1", value: 1)
!632 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!633 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !634, line: 129, baseType: !30, size: 32, elements: !635)
!634 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!635 = !{!636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649}
!636 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!637 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!638 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!639 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!640 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!641 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!642 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!643 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!644 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!645 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!646 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!647 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!648 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!649 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!650 = !{!466, !61, !651, !653, !403, !655, !159}
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !87, line: 113, baseType: !654)
!654 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !403)
!657 = !{!658, !664, !622}
!658 = !DIGlobalVariableExpression(var: !659, expr: !DIExpression())
!659 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !624, file: !625, line: 57, type: !660, isLocal: false, isDefinition: true)
!660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !661, size: 64, elements: !340)
!661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !624, file: !625, line: 58, type: !666, isLocal: false, isDefinition: true)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 64, elements: !340)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !92, line: 97, baseType: !140)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "log_control_block_hal", scope: !671, file: !672, line: 127, type: !686, isLocal: false, isDefinition: true)
!671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !673, globals: !685, splitDebugInlining: false, nameTableKind: None)
!672 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!673 = !{!674, !679}
!674 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !675, line: 65, baseType: !30, size: 32, elements: !676)
!675 = !DIFile(filename: "../../../../..//kernel/service/inc/syslog.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!676 = !{!677, !678}
!677 = !DIEnumerator(name: "DEBUG_LOG_ON", value: 0)
!678 = !DIEnumerator(name: "DEBUG_LOG_OFF", value: 1)
!679 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !675, line: 74, baseType: !30, size: 32, elements: !680)
!680 = !{!681, !682, !683, !684}
!681 = !DIEnumerator(name: "PRINT_LEVEL_DEBUG", value: 0)
!682 = !DIEnumerator(name: "PRINT_LEVEL_INFO", value: 1)
!683 = !DIEnumerator(name: "PRINT_LEVEL_WARNING", value: 2)
!684 = !DIEnumerator(name: "PRINT_LEVEL_ERROR", value: 3)
!685 = !{!669}
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !675, line: 95, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !675, line: 89, size: 160, elements: !688)
!688 = !{!689, !690, !692, !694, !699}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !687, file: !675, line: 90, baseType: !662, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !687, file: !675, line: 91, baseType: !691, size: 32, offset: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_switch_t", file: !675, line: 68, baseType: !674)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !687, file: !675, line: 92, baseType: !693, size: 32, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "print_level_t", file: !675, line: 79, baseType: !679)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !687, file: !675, line: 93, baseType: !695, size: 32, offset: 96)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_print_t", file: !675, line: 82, baseType: !696)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DISubroutineType(types: !698)
!698 = !{null, !51, !662, !7, !693, !662, null}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !687, file: !675, line: 94, baseType: !700, size: 32, offset: 128)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_dump_buffer_t", file: !675, line: 83, baseType: !701)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!702 = !DISubroutineType(types: !703)
!703 = !{null, !51, !662, !7, !693, !704, !7, !662, null}
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !708, file: !709, line: 51, type: !788, isLocal: false, isDefinition: true)
!708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !709, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !710, retainedTypes: !757, globals: !787, splitDebugInlining: false, nameTableKind: None)
!709 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!710 = !{!711, !722, !741, !748}
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !712, line: 163, baseType: !7, size: 32, elements: !713)
!712 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!713 = !{!714, !715, !716, !717, !718, !719, !720, !721}
!714 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!715 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!716 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!717 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!718 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!719 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!720 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!721 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!722 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !712, line: 186, baseType: !30, size: 32, elements: !723)
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740}
!724 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!725 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!726 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!727 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!728 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!729 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!730 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!731 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!732 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!733 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!734 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!735 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!736 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!737 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!738 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!739 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!740 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!741 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !712, line: 176, baseType: !30, size: 32, elements: !742)
!742 = !{!743, !744, !745, !746, !747}
!743 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!744 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!745 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!746 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!747 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !749, line: 99, baseType: !30, size: 32, elements: !750)
!749 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!750 = !{!751, !752, !753, !754, !755, !756}
!751 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!752 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!753 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!754 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!755 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!756 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!757 = !{!758, !51}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 32)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !760, line: 72, baseType: !761)
!760 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !760, line: 56, size: 525312, elements: !762)
!762 = !{!763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !777, !778, !782, !786}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !761, file: !760, line: 57, baseType: !60, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !761, file: !760, line: 58, baseType: !60, size: 32, offset: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !761, file: !760, line: 59, baseType: !60, size: 32, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !761, file: !760, line: 60, baseType: !60, size: 32, offset: 96)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !761, file: !760, line: 61, baseType: !60, size: 32, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !761, file: !760, line: 62, baseType: !60, size: 32, offset: 160)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !761, file: !760, line: 63, baseType: !60, size: 32, offset: 192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !761, file: !760, line: 64, baseType: !60, size: 32, offset: 224)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !761, file: !760, line: 65, baseType: !60, size: 32, offset: 256)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !761, file: !760, line: 66, baseType: !60, size: 32, offset: 288)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !761, file: !760, line: 67, baseType: !774, size: 32, offset: 320)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !775)
!775 = !{!776}
!776 = !DISubrange(count: 1)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !761, file: !760, line: 68, baseType: !60, size: 32, offset: 352)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !761, file: !760, line: 69, baseType: !779, size: 523904, offset: 384)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !780)
!780 = !{!781}
!781 = !DISubrange(count: 16372)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !761, file: !760, line: 70, baseType: !783, size: 512, offset: 524288)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !784)
!784 = !{!785}
!785 = !DISubrange(count: 16)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !761, file: !760, line: 71, baseType: !783, size: 512, offset: 524800)
!787 = !{!706}
!788 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !69)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !791, file: !792, line: 48, type: !826, isLocal: false, isDefinition: true)
!791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !793, splitDebugInlining: false, nameTableKind: None)
!792 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!793 = !{!789, !794, !797}
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !791, file: !792, line: 49, type: !796, isLocal: false, isDefinition: true)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !749, line: 66, baseType: !61)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !791, file: !792, line: 50, type: !799, isLocal: false, isDefinition: true)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 1024, elements: !784)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !749, line: 90, baseType: !801)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !749, line: 87, size: 64, elements: !802)
!802 = !{!803, !816}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !801, file: !749, line: 88, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !749, line: 77, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !749, line: 68, size: 32, elements: !806)
!806 = !{!807, !815}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !805, file: !749, line: 75, baseType: !808, size: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !805, file: !749, line: 69, size: 32, elements: !809)
!809 = !{!810, !811, !812, !813, !814}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !808, file: !749, line: 70, baseType: !61, size: 5, flags: DIFlagBitField, extraData: i64 0)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !808, file: !749, line: 71, baseType: !61, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !808, file: !749, line: 72, baseType: !61, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !808, file: !749, line: 73, baseType: !61, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !808, file: !749, line: 74, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !805, file: !749, line: 76, baseType: !61, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !801, file: !749, line: 89, baseType: !817, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !749, line: 85, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !749, line: 79, size: 32, elements: !819)
!819 = !{!820, !825}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !818, file: !749, line: 83, baseType: !821, size: 32)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !818, file: !749, line: 80, size: 32, elements: !822)
!822 = !{!823, !824}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !821, file: !749, line: 81, baseType: !61, size: 12, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !821, file: !749, line: 82, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !818, file: !749, line: 84, baseType: !61, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !749, line: 64, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !749, line: 51, size: 32, elements: !828)
!828 = !{!829, !841}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !827, file: !749, line: 62, baseType: !830, size: 32)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !827, file: !749, line: 52, size: 32, elements: !831)
!831 = !{!832, !833, !834, !835, !836, !837, !838, !839, !840}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !830, file: !749, line: 53, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !830, file: !749, line: 54, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !830, file: !749, line: 55, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !830, file: !749, line: 56, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !830, file: !749, line: 57, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !830, file: !749, line: 58, baseType: !61, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !830, file: !749, line: 59, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !830, file: !749, line: 60, baseType: !61, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !830, file: !749, line: 61, baseType: !61, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !827, file: !749, line: 63, baseType: !61, size: 32)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !844, file: !845, line: 53, type: !899, isLocal: false, isDefinition: true)
!844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !845, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !846, retainedTypes: !855, globals: !898, splitDebugInlining: false, nameTableKind: None)
!845 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!846 = !{!847, !91}
!847 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !848, line: 152, baseType: !7, size: 32, elements: !849)
!848 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!849 = !{!850, !851, !852, !853, !854}
!850 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!851 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!852 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!853 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!854 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!855 = !{!668, !51, !61, !355, !856, !873}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !285, line: 378, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 363, size: 28704, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !858, file: !285, line: 365, baseType: !289, size: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !858, file: !285, line: 366, baseType: !293, size: 768, offset: 256)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !858, file: !285, line: 367, baseType: !289, size: 256, offset: 1024)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !858, file: !285, line: 368, baseType: !293, size: 768, offset: 1280)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !858, file: !285, line: 369, baseType: !289, size: 256, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !858, file: !285, line: 370, baseType: !293, size: 768, offset: 2304)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !858, file: !285, line: 371, baseType: !289, size: 256, offset: 3072)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !858, file: !285, line: 372, baseType: !293, size: 768, offset: 3328)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !858, file: !285, line: 373, baseType: !289, size: 256, offset: 4096)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !858, file: !285, line: 374, baseType: !304, size: 1792, offset: 4352)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !858, file: !285, line: 375, baseType: !308, size: 1920, offset: 6144)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !858, file: !285, line: 376, baseType: !312, size: 20608, offset: 8064)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !858, file: !285, line: 377, baseType: !60, size: 32, offset: 28672)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !285, line: 418, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 395, size: 1120, elements: !876)
!876 = !{!877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !875, file: !285, line: 397, baseType: !321, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !875, file: !285, line: 398, baseType: !60, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !875, file: !285, line: 399, baseType: !60, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !875, file: !285, line: 400, baseType: !60, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !875, file: !285, line: 401, baseType: !60, size: 32, offset: 128)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !875, file: !285, line: 402, baseType: !60, size: 32, offset: 160)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !875, file: !285, line: 403, baseType: !328, size: 96, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !875, file: !285, line: 404, baseType: !60, size: 32, offset: 288)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !875, file: !285, line: 405, baseType: !60, size: 32, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !875, file: !285, line: 406, baseType: !60, size: 32, offset: 352)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !875, file: !285, line: 407, baseType: !60, size: 32, offset: 384)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !875, file: !285, line: 408, baseType: !60, size: 32, offset: 416)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !875, file: !285, line: 409, baseType: !60, size: 32, offset: 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !875, file: !285, line: 410, baseType: !60, size: 32, offset: 480)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !875, file: !285, line: 411, baseType: !339, size: 64, offset: 512)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !875, file: !285, line: 412, baseType: !321, size: 32, offset: 576)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !875, file: !285, line: 413, baseType: !321, size: 32, offset: 608)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !875, file: !285, line: 414, baseType: !345, size: 128, offset: 640)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !875, file: !285, line: 415, baseType: !349, size: 160, offset: 768)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !875, file: !285, line: 416, baseType: !353, size: 160, offset: 928)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !875, file: !285, line: 417, baseType: !60, size: 32, offset: 1088)
!898 = !{!842}
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 6144, elements: !908)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !845, line: 50, baseType: !901)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !845, line: 47, size: 64, elements: !902)
!902 = !{!903, !907}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !901, file: !845, line: 48, baseType: !904, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !668}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !901, file: !845, line: 49, baseType: !61, size: 32, offset: 32)
!908 = !{!909}
!909 = !DISubrange(count: 96)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !912, file: !913, line: 61, type: !932, isLocal: true, isDefinition: true)
!912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !914, retainedTypes: !930, globals: !931, splitDebugInlining: false, nameTableKind: None)
!913 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!914 = !{!20, !915, !922, !28, !926}
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 657, baseType: !30, size: 32, elements: !916)
!916 = !{!917, !918, !919, !920, !921}
!917 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!918 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!919 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!920 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!921 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!922 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 397, baseType: !30, size: 32, elements: !923)
!923 = !{!924, !925}
!924 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!925 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 380, baseType: !30, size: 32, elements: !927)
!927 = !{!928, !929}
!928 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!929 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!930 = !{!51, !61}
!931 = !{!910}
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 640, elements: !350)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !913, line: 55, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 51, size: 128, elements: !935)
!935 = !{!936, !938, !948}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !934, file: !913, line: 52, baseType: !937, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !21, line: 400, baseType: !922)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !934, file: !913, line: 53, baseType: !939, size: 64, offset: 32)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !913, line: 49, baseType: !940)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 46, size: 64, elements: !941)
!941 = !{!942, !947}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !940, file: !913, line: 47, baseType: !943, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !21, line: 371, baseType: !944)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{null, !51}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !940, file: !913, line: 48, baseType: !51, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !934, file: !913, line: 54, baseType: !69, size: 8, offset: 96)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "spim_sleep_handler", scope: !951, file: !952, line: 52, type: !1049, isLocal: false, isDefinition: true)
!951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !953, retainedTypes: !1018, globals: !1019, splitDebugInlining: false, nameTableKind: None)
!952 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_spi_master.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!953 = !{!954, !962, !966, !971, !975, !979, !567, !983, !987}
!954 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !955, line: 550, baseType: !7, size: 32, elements: !956)
!955 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_spi_master.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!956 = !{!957, !958, !959, !960, !961}
!957 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR", value: -4)
!958 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR_BUSY", value: -3)
!959 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR_PORT", value: -2)
!960 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_INVALID_PARAMETER", value: -1)
!961 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_OK", value: 0)
!962 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 459, baseType: !30, size: 32, elements: !963)
!963 = !{!964, !965}
!964 = !DIEnumerator(name: "HAL_SPI_MASTER_0", value: 0)
!965 = !DIEnumerator(name: "HAL_SPI_MASTER_MAX", value: 1)
!966 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 466, baseType: !30, size: 32, elements: !967)
!967 = !{!968, !969, !970}
!968 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_0", value: 0)
!969 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_1", value: 1)
!970 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_MAX", value: 2)
!971 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 487, baseType: !30, size: 32, elements: !972)
!972 = !{!973, !974}
!973 = !DIEnumerator(name: "HAL_SPI_MASTER_LSB_FIRST", value: 0)
!974 = !DIEnumerator(name: "HAL_SPI_MASTER_MSB_FIRST", value: 1)
!975 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 473, baseType: !30, size: 32, elements: !976)
!976 = !{!977, !978}
!977 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_POLARITY0", value: 0)
!978 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_POLARITY1", value: 1)
!979 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 480, baseType: !30, size: 32, elements: !980)
!980 = !{!981, !982}
!981 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_PHASE0", value: 0)
!982 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_PHASE1", value: 1)
!983 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !955, line: 560, baseType: !30, size: 32, elements: !984)
!984 = !{!985, !986}
!985 = !DIEnumerator(name: "HAL_SPI_MASTER_BUSY", value: 0)
!986 = !DIEnumerator(name: "HAL_SPI_MASTER_IDLE", value: 1)
!987 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 249, baseType: !30, size: 32, elements: !988)
!988 = !{!989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017}
!989 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!990 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!991 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!992 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!993 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!994 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!995 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!996 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!997 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!998 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!999 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!1000 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!1001 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!1002 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!1003 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!1004 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!1005 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!1006 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!1007 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!1008 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!1009 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!1010 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!1011 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!1012 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!1013 = !DIEnumerator(name: "HAL_GPIO_57", value: 57)
!1014 = !DIEnumerator(name: "HAL_GPIO_58", value: 58)
!1015 = !DIEnumerator(name: "HAL_GPIO_59", value: 59)
!1016 = !DIEnumerator(name: "HAL_GPIO_60", value: 60)
!1017 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 61)
!1018 = !{!51, !398, !59, !61}
!1019 = !{!949, !1020, !1034, !1036, !1039, !1046}
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "g_spi_master_context", scope: !951, file: !952, line: 49, type: !1022, isLocal: true, isDefinition: true)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !955, line: 580, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !955, line: 574, size: 160, elements: !1024)
!1024 = !{!1025, !1026, !1028, !1030, !1032}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !1023, file: !955, line: 575, baseType: !61, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !1023, file: !955, line: 576, baseType: !1027, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_slave_port_t", file: !29, line: 470, baseType: !966)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !1023, file: !955, line: 577, baseType: !1029, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_bit_order_t", file: !29, line: 490, baseType: !971)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !1023, file: !955, line: 578, baseType: !1031, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_clock_polarity_t", file: !29, line: 476, baseType: !975)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !1023, file: !955, line: 579, baseType: !1033, size: 32, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_clock_phase_t", file: !29, line: 483, baseType: !979)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "g_spi_master_status", scope: !951, file: !952, line: 57, type: !53, isLocal: true, isDefinition: true)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "g_spi_master_cs_n", scope: !951, file: !952, line: 58, type: !1038, isLocal: false, isDefinition: true)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !29, line: 281, baseType: !987)
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(name: "hal_spi_source_clock", scope: !1041, file: !952, line: 96, type: !583, isLocal: true, isDefinition: true)
!1041 = distinct !DISubprogram(name: "hal_spi_master_calc_divisor", scope: !952, file: !952, line: 91, type: !1042, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !1044)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!61, !61}
!1044 = !{!1045}
!1045 = !DILocalVariable(name: "frequency", arg: 1, scope: !1041, file: !952, line: 91, type: !61)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "spim_lock_sleep_name", scope: !951, file: !952, line: 53, type: !1048, isLocal: true, isDefinition: true)
!1048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 32, elements: !775)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 8, elements: !775)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !1052, file: !1053, line: 80, type: !1154, isLocal: true, isDefinition: true)
!1052 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1053, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1054, retainedTypes: !1104, globals: !1105, splitDebugInlining: false, nameTableKind: None)
!1053 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1054 = !{!627, !1055, !1063, !1068, !1084, !1090, !1094, !633, !1099}
!1055 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1056, line: 345, baseType: !7, size: 32, elements: !1057)
!1056 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1057 = !{!1058, !1059, !1060, !1061, !1062}
!1058 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!1059 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!1060 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!1061 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!1062 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!1063 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 109, baseType: !30, size: 32, elements: !1064)
!1064 = !{!1065, !1066, !1067}
!1065 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!1066 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!1067 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!1068 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1056, line: 302, baseType: !30, size: 32, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083}
!1070 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!1071 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!1072 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!1073 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!1074 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!1075 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!1076 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!1077 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!1078 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!1079 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!1080 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!1081 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!1082 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!1083 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!1084 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1056, line: 321, baseType: !30, size: 32, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089}
!1086 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!1087 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!1088 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!1089 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!1090 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1056, line: 330, baseType: !30, size: 32, elements: !1091)
!1091 = !{!1092, !1093}
!1092 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!1093 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!1094 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1056, line: 337, baseType: !30, size: 32, elements: !1095)
!1095 = !{!1096, !1097, !1098}
!1096 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!1097 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!1098 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!1099 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1056, line: 355, baseType: !7, size: 32, elements: !1100)
!1100 = !{!1101, !1102, !1103}
!1101 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!1102 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!1103 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!1104 = !{!491, !30, !51, !58, !492, !54}
!1105 = !{!1106, !1149, !1050, !1152, !1155}
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !1052, file: !1053, line: 77, type: !1108, isLocal: true, isDefinition: true)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1109, size: 1024, elements: !340)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !1053, line: 75, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1053, line: 68, size: 512, elements: !1111)
!1111 = !{!1112, !1113, !1125, !1126, !1137, !1138}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !1110, file: !1053, line: 69, baseType: !69, size: 8)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !1110, file: !1053, line: 70, baseType: !1114, size: 128, offset: 32)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !1056, line: 378, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1056, line: 373, size: 128, elements: !1116)
!1116 = !{!1117, !1119, !1121, !1123}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1115, file: !1056, line: 374, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !1056, line: 317, baseType: !1068)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !1115, file: !1056, line: 375, baseType: !1120, size: 32, offset: 32)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !1056, line: 326, baseType: !1084)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !1115, file: !1056, line: 376, baseType: !1122, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !1056, line: 333, baseType: !1090)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1115, file: !1056, line: 377, baseType: !1124, size: 32, offset: 96)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !1056, line: 341, baseType: !1094)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !1110, file: !1053, line: 71, baseType: !69, size: 8, offset: 160)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !1110, file: !1053, line: 72, baseType: !1127, size: 64, offset: 192)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !1053, line: 66, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1053, line: 63, size: 64, elements: !1129)
!1129 = !{!1130, !1136}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1128, file: !1053, line: 64, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !1056, line: 410, baseType: !1132)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{null, !1135, !51}
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !1056, line: 359, baseType: !1099)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1128, file: !1053, line: 65, baseType: !51, size: 32, offset: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !1110, file: !1053, line: 73, baseType: !69, size: 8, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !1110, file: !1053, line: 74, baseType: !1139, size: 224, offset: 288)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !1056, line: 390, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1056, line: 382, size: 224, elements: !1141)
!1141 = !{!1142, !1143, !1144, !1145, !1146, !1147, !1148}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !1140, file: !1056, line: 383, baseType: !500, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !1140, file: !1056, line: 384, baseType: !61, size: 32, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !1140, file: !1056, line: 385, baseType: !61, size: 32, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !1140, file: !1056, line: 386, baseType: !500, size: 32, offset: 96)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !1140, file: !1056, line: 387, baseType: !61, size: 32, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !1140, file: !1056, line: 388, baseType: !61, size: 32, offset: 160)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !1140, file: !1056, line: 389, baseType: !61, size: 32, offset: 192)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !1052, file: !1053, line: 82, type: !1151, isLocal: true, isDefinition: true)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 16, elements: !340)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !1052, file: !1053, line: 81, type: !1154, isLocal: true, isDefinition: true)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 16, elements: !340)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "func_tbl", scope: !1157, file: !1053, line: 536, type: !1164, isLocal: true, isDefinition: true)
!1157 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !1053, file: !1053, line: 534, type: !1158, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !1162)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!1160, !1161}
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !634, line: 197, baseType: !153)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !29, line: 113, baseType: !1063)
!1162 = !{!1163}
!1163 = !DILocalVariable(name: "uart_port", arg: 1, scope: !1157, file: !1053, line: 534, type: !1161)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1165, size: 64, elements: !340)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "DWT_NUMCOMP", scope: !1168, file: !1169, line: 44, type: !7, isLocal: true, isDefinition: true)
!1168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1170, retainedTypes: !1179, globals: !1215, splitDebugInlining: false, nameTableKind: None)
!1169 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_dwt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1170 = !{!1171}
!1171 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1172, line: 42, baseType: !30, size: 32, elements: !1173)
!1172 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_dwt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1173 = !{!1174, !1175, !1176, !1177, !1178}
!1174 = !DIEnumerator(name: "COMP_DISABLE", value: 0)
!1175 = !DIEnumerator(name: "WDE_INST", value: 4)
!1176 = !DIEnumerator(name: "WDE_DATA_RO", value: 5)
!1177 = !DIEnumerator(name: "WDE_DATA_WO", value: 6)
!1178 = !DIEnumerator(name: "WDE_DATA_RW", value: 7)
!1179 = !{!1180, !1207}
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !285, line: 826, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 801, size: 736, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1182, file: !285, line: 803, baseType: !60, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !1182, file: !285, line: 804, baseType: !60, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !1182, file: !285, line: 805, baseType: !60, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !1182, file: !285, line: 806, baseType: !60, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !1182, file: !285, line: 807, baseType: !60, size: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !1182, file: !285, line: 808, baseType: !60, size: 32, offset: 160)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !1182, file: !285, line: 809, baseType: !60, size: 32, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !1182, file: !285, line: 810, baseType: !321, size: 32, offset: 224)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !1182, file: !285, line: 811, baseType: !60, size: 32, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !1182, file: !285, line: 812, baseType: !60, size: 32, offset: 288)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !1182, file: !285, line: 813, baseType: !60, size: 32, offset: 320)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1182, file: !285, line: 814, baseType: !774, size: 32, offset: 352)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !1182, file: !285, line: 815, baseType: !60, size: 32, offset: 384)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !1182, file: !285, line: 816, baseType: !60, size: 32, offset: 416)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !1182, file: !285, line: 817, baseType: !60, size: 32, offset: 448)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1182, file: !285, line: 818, baseType: !774, size: 32, offset: 480)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !1182, file: !285, line: 819, baseType: !60, size: 32, offset: 512)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !1182, file: !285, line: 820, baseType: !60, size: 32, offset: 544)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !1182, file: !285, line: 821, baseType: !60, size: 32, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1182, file: !285, line: 822, baseType: !774, size: 32, offset: 608)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !1182, file: !285, line: 823, baseType: !60, size: 32, offset: 640)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !1182, file: !285, line: 824, baseType: !60, size: 32, offset: 672)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !1182, file: !285, line: 825, baseType: !60, size: 32, offset: 704)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoreDebug_Type", file: !285, line: 1304, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 1298, size: 128, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "DHCSR", scope: !1209, file: !285, line: 1300, baseType: !60, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "DCRSR", scope: !1209, file: !285, line: 1301, baseType: !60, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "DCRDR", scope: !1209, file: !285, line: 1302, baseType: !60, size: 32, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "DEMCR", scope: !1209, file: !285, line: 1303, baseType: !60, size: 32, offset: 96)
!1215 = !{!1166}
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !1218, file: !1219, line: 164, type: !504, isLocal: false, isDefinition: true)
!1218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1220, globals: !1235, splitDebugInlining: false, nameTableKind: None)
!1219 = !DIFile(filename: "../../../../..//driver/board/mt76x7_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1220 = !{!1221, !51}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !1224, line: 48, baseType: !1225)
!1224 = !DIFile(filename: "../../../../..//driver/board/mt76x7_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1224, line: 38, size: 192, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1225, file: !1224, line: 39, baseType: !491, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1225, file: !1224, line: 40, baseType: !58, size: 8, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !1225, file: !1224, line: 41, baseType: !401, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !1225, file: !1224, line: 42, baseType: !401, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !1225, file: !1224, line: 43, baseType: !30, size: 32, offset: 128)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !1225, file: !1224, line: 45, baseType: !58, size: 8, offset: 160)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !1225, file: !1224, line: 46, baseType: !58, size: 8, offset: 168)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !1225, file: !1224, line: 47, baseType: !58, size: 8, offset: 176)
!1235 = !{!1216, !1236, !1238, !1240}
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !1218, file: !1219, line: 167, type: !507, isLocal: false, isDefinition: true)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !1218, file: !1219, line: 170, type: !510, isLocal: false, isDefinition: true)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !1218, file: !1219, line: 174, type: !1222, isLocal: false, isDefinition: true)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "FatFs", scope: !1244, file: !1245, line: 525, type: !1424, isLocal: true, isDefinition: true)
!1244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1245, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1246, retainedTypes: !1278, globals: !1293, splitDebugInlining: false, nameTableKind: None)
!1245 = !DIFile(filename: "../../../../..//middleware/third_party/fatfs/src/ff.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1246 = !{!1247, !1270}
!1247 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1248, line: 220, baseType: !30, size: 32, elements: !1249)
!1248 = !DIFile(filename: "../../../../..//middleware/third_party/fatfs/src/ff.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269}
!1250 = !DIEnumerator(name: "FR_OK", value: 0)
!1251 = !DIEnumerator(name: "FR_DISK_ERR", value: 1)
!1252 = !DIEnumerator(name: "FR_INT_ERR", value: 2)
!1253 = !DIEnumerator(name: "FR_NOT_READY", value: 3)
!1254 = !DIEnumerator(name: "FR_NO_FILE", value: 4)
!1255 = !DIEnumerator(name: "FR_NO_PATH", value: 5)
!1256 = !DIEnumerator(name: "FR_INVALID_NAME", value: 6)
!1257 = !DIEnumerator(name: "FR_DENIED", value: 7)
!1258 = !DIEnumerator(name: "FR_EXIST", value: 8)
!1259 = !DIEnumerator(name: "FR_INVALID_OBJECT", value: 9)
!1260 = !DIEnumerator(name: "FR_WRITE_PROTECTED", value: 10)
!1261 = !DIEnumerator(name: "FR_INVALID_DRIVE", value: 11)
!1262 = !DIEnumerator(name: "FR_NOT_ENABLED", value: 12)
!1263 = !DIEnumerator(name: "FR_NO_FILESYSTEM", value: 13)
!1264 = !DIEnumerator(name: "FR_MKFS_ABORTED", value: 14)
!1265 = !DIEnumerator(name: "FR_TIMEOUT", value: 15)
!1266 = !DIEnumerator(name: "FR_LOCKED", value: 16)
!1267 = !DIEnumerator(name: "FR_NOT_ENOUGH_CORE", value: 17)
!1268 = !DIEnumerator(name: "FR_TOO_MANY_OPEN_FILES", value: 18)
!1269 = !DIEnumerator(name: "FR_INVALID_PARAMETER", value: 19)
!1270 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1271, line: 25, baseType: !30, size: 32, elements: !1272)
!1271 = !DIFile(filename: "../../../../..//middleware/third_party/fatfs/src/diskio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1272 = !{!1273, !1274, !1275, !1276, !1277}
!1273 = !DIEnumerator(name: "RES_OK", value: 0)
!1274 = !DIEnumerator(name: "RES_ERROR", value: 1)
!1275 = !DIEnumerator(name: "RES_WRPRT", value: 2)
!1276 = !DIEnumerator(name: "RES_NOTRDY", value: 3)
!1277 = !DIEnumerator(name: "RES_PARERR", value: 4)
!1278 = !{!1279, !1281, !1282, !1284, !1283, !1285, !1287, !1291, !1292, !1290, !465, !7}
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWORD", file: !1280, line: 31, baseType: !401)
!1280 = !DIFile(filename: "../../../../..//middleware/third_party/fatfs/src/integer.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1280, line: 19, baseType: !30)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1280, line: 22, baseType: !58)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "FRESULT", file: !1248, line: 241, baseType: !1247)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1283)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCHAR", file: !1248, line: 69, baseType: !492)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "FSIZE_t", file: !1248, line: 85, baseType: !1279)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1280, line: 26, baseType: !654)
!1293 = !{!1294, !1358, !1400, !1242, !1402, !1417, !1419}
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "badchr", scope: !1296, file: !1245, line: 4933, type: !1357, isLocal: true, isDefinition: true)
!1296 = distinct !DISubprogram(name: "f_setlabel", scope: !1245, file: !1245, line: 4923, type: !1297, scopeLine: 4926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !1299)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!1284, !1288}
!1299 = !{!1300, !1301, !1302, !1349, !1350, !1352, !1353, !1354, !1355}
!1300 = !DILocalVariable(name: "label", arg: 1, scope: !1296, file: !1245, line: 4924, type: !1288)
!1301 = !DILocalVariable(name: "res", scope: !1296, file: !1245, line: 4927, type: !1284)
!1302 = !DILocalVariable(name: "dj", scope: !1296, file: !1245, line: 4928, type: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !1248, line: 197, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 184, size: 384, elements: !1305)
!1305 = !{!1306, !1342, !1343, !1344, !1345, !1346, !1348}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !1304, file: !1248, line: 185, baseType: !1307, size: 128)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "_FDID", file: !1248, line: 155, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 139, size: 128, elements: !1309)
!1309 = !{!1310, !1337, !1338, !1339, !1340, !1341}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1308, file: !1248, line: 140, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "FATFS", file: !1248, line: 133, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 92, size: 4512, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "fs_type", scope: !1313, file: !1248, line: 93, baseType: !1283, size: 8)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !1313, file: !1248, line: 94, baseType: !1283, size: 8, offset: 8)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "n_fats", scope: !1313, file: !1248, line: 95, baseType: !1283, size: 8, offset: 16)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "wflag", scope: !1313, file: !1248, line: 96, baseType: !1283, size: 8, offset: 24)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "fsi_flag", scope: !1313, file: !1248, line: 97, baseType: !1283, size: 8, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1313, file: !1248, line: 98, baseType: !1292, size: 16, offset: 48)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "n_rootdir", scope: !1313, file: !1248, line: 99, baseType: !1292, size: 16, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "csize", scope: !1313, file: !1248, line: 100, baseType: !1292, size: 16, offset: 80)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "last_clst", scope: !1313, file: !1248, line: 114, baseType: !1279, size: 32, offset: 96)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "free_clst", scope: !1313, file: !1248, line: 115, baseType: !1279, size: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "cdir", scope: !1313, file: !1248, line: 118, baseType: !1279, size: 32, offset: 160)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "n_fatent", scope: !1313, file: !1248, line: 125, baseType: !1279, size: 32, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1313, file: !1248, line: 126, baseType: !1279, size: 32, offset: 224)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "volbase", scope: !1313, file: !1248, line: 127, baseType: !1279, size: 32, offset: 256)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "fatbase", scope: !1313, file: !1248, line: 128, baseType: !1279, size: 32, offset: 288)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dirbase", scope: !1313, file: !1248, line: 129, baseType: !1279, size: 32, offset: 320)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "database", scope: !1313, file: !1248, line: 130, baseType: !1279, size: 32, offset: 352)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "winsect", scope: !1313, file: !1248, line: 131, baseType: !1279, size: 32, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1313, file: !1248, line: 132, baseType: !1334, size: 4096, offset: 416)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 4096, elements: !1335)
!1335 = !{!1336}
!1336 = !DISubrange(count: 512)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1308, file: !1248, line: 141, baseType: !1292, size: 16, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1308, file: !1248, line: 142, baseType: !1283, size: 8, offset: 48)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1308, file: !1248, line: 143, baseType: !1283, size: 8, offset: 56)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "sclust", scope: !1308, file: !1248, line: 144, baseType: !1279, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "objsize", scope: !1308, file: !1248, line: 145, baseType: !1291, size: 32, offset: 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "dptr", scope: !1304, file: !1248, line: 186, baseType: !1279, size: 32, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "clust", scope: !1304, file: !1248, line: 187, baseType: !1279, size: 32, offset: 160)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1304, file: !1248, line: 188, baseType: !1279, size: 32, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1304, file: !1248, line: 189, baseType: !1282, size: 32, offset: 224)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1304, file: !1248, line: 190, baseType: !1347, size: 96, offset: 256)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 96, elements: !329)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pat", scope: !1304, file: !1248, line: 195, baseType: !1288, size: 32, offset: 352)
!1349 = !DILocalVariable(name: "fs", scope: !1296, file: !1245, line: 4929, type: !1311)
!1350 = !DILocalVariable(name: "dirvn", scope: !1296, file: !1245, line: 4930, type: !1351)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 176, elements: !451)
!1352 = !DILocalVariable(name: "i", scope: !1296, file: !1245, line: 4931, type: !1281)
!1353 = !DILocalVariable(name: "j", scope: !1296, file: !1245, line: 4931, type: !1281)
!1354 = !DILocalVariable(name: "slen", scope: !1296, file: !1245, line: 4931, type: !1281)
!1355 = !DILocalVariable(name: "w", scope: !1296, file: !1245, line: 4932, type: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "WCHAR", file: !1280, line: 27, baseType: !654)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, size: 128, elements: !784)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "cst", scope: !1360, file: !1245, line: 5221, type: !1398, isLocal: true, isDefinition: true)
!1360 = distinct !DISubprogram(name: "f_mkfs", scope: !1245, file: !1245, line: 5211, type: !1361, scopeLine: 5218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !1363)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{!1284, !1288, !1283, !1279, !51, !1281}
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396}
!1364 = !DILocalVariable(name: "path", arg: 1, scope: !1360, file: !1245, line: 5212, type: !1288)
!1365 = !DILocalVariable(name: "opt", arg: 2, scope: !1360, file: !1245, line: 5213, type: !1283)
!1366 = !DILocalVariable(name: "au", arg: 3, scope: !1360, file: !1245, line: 5214, type: !1279)
!1367 = !DILocalVariable(name: "work", arg: 4, scope: !1360, file: !1245, line: 5215, type: !51)
!1368 = !DILocalVariable(name: "len", arg: 5, scope: !1360, file: !1245, line: 5216, type: !1281)
!1369 = !DILocalVariable(name: "n_fats", scope: !1360, file: !1245, line: 5219, type: !1370)
!1370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1281)
!1371 = !DILocalVariable(name: "n_rootdir", scope: !1360, file: !1245, line: 5220, type: !1370)
!1372 = !DILocalVariable(name: "fmt", scope: !1360, file: !1245, line: 5223, type: !1283)
!1373 = !DILocalVariable(name: "sys", scope: !1360, file: !1245, line: 5223, type: !1283)
!1374 = !DILocalVariable(name: "buf", scope: !1360, file: !1245, line: 5223, type: !1282)
!1375 = !DILocalVariable(name: "pte", scope: !1360, file: !1245, line: 5223, type: !1282)
!1376 = !DILocalVariable(name: "pdrv", scope: !1360, file: !1245, line: 5223, type: !1283)
!1377 = !DILocalVariable(name: "part", scope: !1360, file: !1245, line: 5223, type: !1283)
!1378 = !DILocalVariable(name: "ss", scope: !1360, file: !1245, line: 5224, type: !1292)
!1379 = !DILocalVariable(name: "szb_buf", scope: !1360, file: !1245, line: 5225, type: !1279)
!1380 = !DILocalVariable(name: "sz_buf", scope: !1360, file: !1245, line: 5225, type: !1279)
!1381 = !DILocalVariable(name: "sz_blk", scope: !1360, file: !1245, line: 5225, type: !1279)
!1382 = !DILocalVariable(name: "n_clst", scope: !1360, file: !1245, line: 5225, type: !1279)
!1383 = !DILocalVariable(name: "pau", scope: !1360, file: !1245, line: 5225, type: !1279)
!1384 = !DILocalVariable(name: "sect", scope: !1360, file: !1245, line: 5225, type: !1279)
!1385 = !DILocalVariable(name: "nsect", scope: !1360, file: !1245, line: 5225, type: !1279)
!1386 = !DILocalVariable(name: "n", scope: !1360, file: !1245, line: 5225, type: !1279)
!1387 = !DILocalVariable(name: "b_vol", scope: !1360, file: !1245, line: 5226, type: !1279)
!1388 = !DILocalVariable(name: "b_fat", scope: !1360, file: !1245, line: 5226, type: !1279)
!1389 = !DILocalVariable(name: "b_data", scope: !1360, file: !1245, line: 5226, type: !1279)
!1390 = !DILocalVariable(name: "sz_vol", scope: !1360, file: !1245, line: 5227, type: !1279)
!1391 = !DILocalVariable(name: "sz_rsv", scope: !1360, file: !1245, line: 5227, type: !1279)
!1392 = !DILocalVariable(name: "sz_fat", scope: !1360, file: !1245, line: 5227, type: !1279)
!1393 = !DILocalVariable(name: "sz_dir", scope: !1360, file: !1245, line: 5227, type: !1279)
!1394 = !DILocalVariable(name: "i", scope: !1360, file: !1245, line: 5228, type: !1281)
!1395 = !DILocalVariable(name: "vol", scope: !1360, file: !1245, line: 5229, type: !7)
!1396 = !DILocalVariable(name: "stat", scope: !1360, file: !1245, line: 5230, type: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "DSTATUS", file: !1271, line: 19, baseType: !1283)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 112, elements: !546)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1292)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "cst32", scope: !1360, file: !1245, line: 5222, type: !1398, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "str", scope: !1404, file: !1245, line: 2861, type: !1416, isLocal: true, isDefinition: true)
!1404 = distinct !DISubprogram(name: "get_ldnumber", scope: !1245, file: !1245, line: 2853, type: !1405, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !1407)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!7, !1287}
!1407 = !{!1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415}
!1408 = !DILocalVariable(name: "path", arg: 1, scope: !1404, file: !1245, line: 2854, type: !1287)
!1409 = !DILocalVariable(name: "tp", scope: !1404, file: !1245, line: 2857, type: !1288)
!1410 = !DILocalVariable(name: "tt", scope: !1404, file: !1245, line: 2857, type: !1288)
!1411 = !DILocalVariable(name: "i", scope: !1404, file: !1245, line: 2858, type: !1281)
!1412 = !DILocalVariable(name: "vol", scope: !1404, file: !1245, line: 2859, type: !7)
!1413 = !DILocalVariable(name: "sp", scope: !1404, file: !1245, line: 2862, type: !662)
!1414 = !DILocalVariable(name: "c", scope: !1404, file: !1245, line: 2863, type: !492)
!1415 = !DILocalVariable(name: "tc", scope: !1404, file: !1245, line: 2864, type: !1290)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !661, size: 32, elements: !775)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "Fsid", scope: !1244, file: !1245, line: 526, type: !1292, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "ExCvt", scope: !1244, file: !1245, line: 582, type: !1421, isLocal: true, isDefinition: true)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1286, size: 1024, elements: !1422)
!1422 = !{!1423}
!1423 = !DISubrange(count: 128)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1311, size: 32, elements: !775)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "Drive1_Stat", scope: !1427, file: !1428, line: 23, type: !1397, isLocal: false, isDefinition: true)
!1427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1428, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1429, globals: !1430, splitDebugInlining: false, nameTableKind: None)
!1428 = !DIFile(filename: "../../../../..//middleware/third_party/fatfs/src/portable/mt7687/src/diskio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1429 = !{!1270}
!1430 = !{!1431, !1425}
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "Drive0_Stat", scope: !1427, file: !1428, line: 22, type: !1397, isLocal: false, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "spi_mosi_pin", scope: !1435, file: !1436, line: 56, type: !61, isLocal: true, isDefinition: true)
!1435 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1436, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1437, retainedTypes: !1438, globals: !1441, splitDebugInlining: false, nameTableKind: None)
!1436 = !DIFile(filename: "../../../../..//middleware/third_party/fatfs/src/portable/mt7687/src/diskio_sd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1437 = !{!987, !28, !966, !971, !975, !979, !954, !962, !572, !567, !1270}
!1438 = !{!59, !1038, !1292, !1279, !1439, !1440, !1283, !500}
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1441 = !{!1442, !1433, !1444, !1446}
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "CardType", scope: !1435, file: !1436, line: 55, type: !1283, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "spi_mosi_pin_func_mosi", scope: !1435, file: !1436, line: 57, type: !54, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "spi_mosi_pin_func_gpio", scope: !1435, file: !1436, line: 58, type: !54, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "log_control_block_fatfs", scope: !1451, file: !1452, line: 61, type: !1504, isLocal: false, isDefinition: true)
!1451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1453, globals: !1454, splitDebugInlining: false, nameTableKind: None)
!1452 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/fatfs_read_write_file/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1453 = !{!674, !679, !1247}
!1454 = !{!1449, !1455, !1502}
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "fdst", scope: !1451, file: !1452, line: 58, type: !1457, isLocal: false, isDefinition: true)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "FIL", file: !1248, line: 178, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 161, size: 4448, elements: !1459)
!1459 = !{!1460, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !1458, file: !1248, line: 162, baseType: !1461, size: 128)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "_FDID", file: !1248, line: 155, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 139, size: 128, elements: !1463)
!1463 = !{!1464, !1488, !1489, !1490, !1491, !1492}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1462, file: !1248, line: 140, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "FATFS", file: !1248, line: 133, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 92, size: 4512, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "fs_type", scope: !1467, file: !1248, line: 93, baseType: !1283, size: 8)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !1467, file: !1248, line: 94, baseType: !1283, size: 8, offset: 8)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "n_fats", scope: !1467, file: !1248, line: 95, baseType: !1283, size: 8, offset: 16)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "wflag", scope: !1467, file: !1248, line: 96, baseType: !1283, size: 8, offset: 24)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "fsi_flag", scope: !1467, file: !1248, line: 97, baseType: !1283, size: 8, offset: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1467, file: !1248, line: 98, baseType: !1292, size: 16, offset: 48)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "n_rootdir", scope: !1467, file: !1248, line: 99, baseType: !1292, size: 16, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "csize", scope: !1467, file: !1248, line: 100, baseType: !1292, size: 16, offset: 80)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "last_clst", scope: !1467, file: !1248, line: 114, baseType: !1279, size: 32, offset: 96)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "free_clst", scope: !1467, file: !1248, line: 115, baseType: !1279, size: 32, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "cdir", scope: !1467, file: !1248, line: 118, baseType: !1279, size: 32, offset: 160)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "n_fatent", scope: !1467, file: !1248, line: 125, baseType: !1279, size: 32, offset: 192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1467, file: !1248, line: 126, baseType: !1279, size: 32, offset: 224)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "volbase", scope: !1467, file: !1248, line: 127, baseType: !1279, size: 32, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "fatbase", scope: !1467, file: !1248, line: 128, baseType: !1279, size: 32, offset: 288)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "dirbase", scope: !1467, file: !1248, line: 129, baseType: !1279, size: 32, offset: 320)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "database", scope: !1467, file: !1248, line: 130, baseType: !1279, size: 32, offset: 352)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "winsect", scope: !1467, file: !1248, line: 131, baseType: !1279, size: 32, offset: 384)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1467, file: !1248, line: 132, baseType: !1334, size: 4096, offset: 416)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1462, file: !1248, line: 141, baseType: !1292, size: 16, offset: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1462, file: !1248, line: 142, baseType: !1283, size: 8, offset: 48)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1462, file: !1248, line: 143, baseType: !1283, size: 8, offset: 56)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "sclust", scope: !1462, file: !1248, line: 144, baseType: !1279, size: 32, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "objsize", scope: !1462, file: !1248, line: 145, baseType: !1291, size: 32, offset: 96)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1458, file: !1248, line: 163, baseType: !1283, size: 8, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !1458, file: !1248, line: 164, baseType: !1283, size: 8, offset: 136)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "fptr", scope: !1458, file: !1248, line: 165, baseType: !1291, size: 32, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "clust", scope: !1458, file: !1248, line: 166, baseType: !1279, size: 32, offset: 192)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1458, file: !1248, line: 167, baseType: !1279, size: 32, offset: 224)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "dir_sect", scope: !1458, file: !1248, line: 169, baseType: !1279, size: 32, offset: 256)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "dir_ptr", scope: !1458, file: !1248, line: 170, baseType: !1282, size: 32, offset: 288)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "cltbl", scope: !1458, file: !1248, line: 173, baseType: !1439, size: 32, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1458, file: !1248, line: 176, baseType: !1334, size: 4096, offset: 352)
!1502 = !DIGlobalVariableExpression(var: !1503, expr: !DIExpression())
!1503 = distinct !DIGlobalVariable(name: "fatfs", scope: !1451, file: !1452, line: 59, type: !1466, isLocal: false, isDefinition: true)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !675, line: 95, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !675, line: 89, size: 160, elements: !1506)
!1506 = !{!1507, !1508, !1509, !1510, !1511}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1505, file: !675, line: 90, baseType: !662, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1505, file: !675, line: 91, baseType: !691, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1505, file: !675, line: 92, baseType: !693, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1505, file: !675, line: 93, baseType: !695, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1505, file: !675, line: 94, baseType: !700, size: 32, offset: 128)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !1514, file: !1515, line: 61, type: !60, isLocal: true, isDefinition: true)
!1514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1516, globals: !1569, splitDebugInlining: false, nameTableKind: None)
!1515 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/fatfs_read_write_file/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1516 = !{!1517, !1525, !1550}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !285, line: 656, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 650, size: 128, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1519, file: !285, line: 652, baseType: !60, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1519, file: !285, line: 653, baseType: !60, size: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1519, file: !285, line: 654, baseType: !60, size: 32, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1519, file: !285, line: 655, baseType: !321, size: 32, offset: 96)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !285, line: 418, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 395, size: 1120, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1527, file: !285, line: 397, baseType: !321, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1527, file: !285, line: 398, baseType: !60, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1527, file: !285, line: 399, baseType: !60, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1527, file: !285, line: 400, baseType: !60, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1527, file: !285, line: 401, baseType: !60, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1527, file: !285, line: 402, baseType: !60, size: 32, offset: 160)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1527, file: !285, line: 403, baseType: !328, size: 96, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1527, file: !285, line: 404, baseType: !60, size: 32, offset: 288)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1527, file: !285, line: 405, baseType: !60, size: 32, offset: 320)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1527, file: !285, line: 406, baseType: !60, size: 32, offset: 352)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1527, file: !285, line: 407, baseType: !60, size: 32, offset: 384)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1527, file: !285, line: 408, baseType: !60, size: 32, offset: 416)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1527, file: !285, line: 409, baseType: !60, size: 32, offset: 448)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1527, file: !285, line: 410, baseType: !60, size: 32, offset: 480)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1527, file: !285, line: 411, baseType: !339, size: 64, offset: 512)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1527, file: !285, line: 412, baseType: !321, size: 32, offset: 576)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1527, file: !285, line: 413, baseType: !321, size: 32, offset: 608)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1527, file: !285, line: 414, baseType: !345, size: 128, offset: 640)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1527, file: !285, line: 415, baseType: !349, size: 160, offset: 768)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1527, file: !285, line: 416, baseType: !353, size: 160, offset: 928)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1527, file: !285, line: 417, baseType: !60, size: 32, offset: 1088)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !760, line: 72, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !760, line: 56, size: 525312, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !1552, file: !760, line: 57, baseType: !60, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !1552, file: !760, line: 58, baseType: !60, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !1552, file: !760, line: 59, baseType: !60, size: 32, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !1552, file: !760, line: 60, baseType: !60, size: 32, offset: 96)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !1552, file: !760, line: 61, baseType: !60, size: 32, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !1552, file: !760, line: 62, baseType: !60, size: 32, offset: 160)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !1552, file: !760, line: 63, baseType: !60, size: 32, offset: 192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !1552, file: !760, line: 64, baseType: !60, size: 32, offset: 224)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !1552, file: !760, line: 65, baseType: !60, size: 32, offset: 256)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !1552, file: !760, line: 66, baseType: !60, size: 32, offset: 288)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1552, file: !760, line: 67, baseType: !774, size: 32, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !1552, file: !760, line: 68, baseType: !60, size: 32, offset: 352)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1552, file: !760, line: 69, baseType: !779, size: 523904, offset: 384)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !1552, file: !760, line: 70, baseType: !783, size: 512, offset: 524288)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !1552, file: !760, line: 71, baseType: !783, size: 512, offset: 524800)
!1569 = !{!1570, !1512}
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1514, file: !1515, line: 59, type: !61, isLocal: false, isDefinition: true)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "heap_end", scope: !1574, file: !1575, line: 101, type: !491, isLocal: true, isDefinition: true)
!1574 = distinct !DISubprogram(name: "_sbrk_r", scope: !1575, file: !1575, line: 98, type: !1576, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !1769)
!1575 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/fatfs_read_write_file/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!1578, !1580, !1764}
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !1579, line: 123, baseType: !491)
!1579 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1582, line: 377, size: 1920, elements: !1583)
!1582 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!1583 = !{!1584, !1585, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1663, !1683, !1687, !1688, !1689, !1690, !1700, !1713, !1714, !1719, !1738, !1739, !1746, !1747, !1763}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !1581, file: !1582, line: 381, baseType: !7, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !1581, file: !1582, line: 386, baseType: !1586, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1582, line: 292, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1582, line: 186, size: 832, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593, !1595, !1596, !1601, !1602, !1603, !1604, !1608, !1612, !1618, !1622, !1623, !1624, !1625, !1629, !1631, !1632, !1633, !1635, !1641, !1653}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1588, file: !1582, line: 187, baseType: !468, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1588, file: !1582, line: 188, baseType: !7, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1588, file: !1582, line: 189, baseType: !7, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1588, file: !1582, line: 190, baseType: !1594, size: 16, offset: 96)
!1594 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1588, file: !1582, line: 191, baseType: !1594, size: 16, offset: 112)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1588, file: !1582, line: 192, baseType: !1597, size: 64, offset: 128)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1582, line: 122, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1597, file: !1582, line: 123, baseType: !468, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1597, file: !1582, line: 124, baseType: !7, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1588, file: !1582, line: 193, baseType: !7, size: 32, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1588, file: !1582, line: 196, baseType: !1580, size: 32, offset: 224)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1588, file: !1582, line: 200, baseType: !51, size: 32, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1588, file: !1582, line: 202, baseType: !1605, size: 32, offset: 288)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!7, !1580, !51, !491, !7}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1588, file: !1582, line: 204, baseType: !1609, size: 32, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!7, !1580, !51, !662, !7}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1588, file: !1582, line: 207, baseType: !1613, size: 32, offset: 352)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!1616, !1580, !51, !1616, !7}
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !1617, line: 116, baseType: !465)
!1617 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1588, file: !1582, line: 208, baseType: !1619, size: 32, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!7, !1580, !51}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1588, file: !1582, line: 211, baseType: !1597, size: 64, offset: 416)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1588, file: !1582, line: 212, baseType: !468, size: 32, offset: 480)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1588, file: !1582, line: 213, baseType: !7, size: 32, offset: 512)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1588, file: !1582, line: 216, baseType: !1626, size: 24, offset: 544)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 24, elements: !1627)
!1627 = !{!1628}
!1628 = !DISubrange(count: 3)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1588, file: !1582, line: 217, baseType: !1630, size: 8, offset: 568)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 8, elements: !775)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1588, file: !1582, line: 220, baseType: !1597, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1588, file: !1582, line: 223, baseType: !7, size: 32, offset: 640)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1588, file: !1582, line: 224, baseType: !1634, size: 32, offset: 672)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !1617, line: 46, baseType: !465)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1588, file: !1582, line: 231, baseType: !1636, size: 32, offset: 704)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1582, line: 35, baseType: !1637)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1638, line: 34, baseType: !1639)
!1638 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1638, line: 33, flags: DIFlagFwdDecl)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1588, file: !1582, line: 233, baseType: !1642, size: 64, offset: 736)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !1617, line: 170, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1617, line: 162, size: 64, elements: !1644)
!1644 = !{!1645, !1646}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1643, file: !1617, line: 164, baseType: !7, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1643, file: !1617, line: 169, baseType: !1647, size: 32, offset: 32)
!1647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1643, file: !1617, line: 165, size: 32, elements: !1648)
!1648 = !{!1649, !1652}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1647, file: !1617, line: 167, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1651, line: 116, baseType: !7)
!1651 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1647, file: !1617, line: 168, baseType: !515, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1588, file: !1582, line: 234, baseType: !7, size: 32, offset: 800)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !1581, file: !1582, line: 386, baseType: !1586, size: 32, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !1581, file: !1582, line: 386, baseType: !1586, size: 32, offset: 96)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !1581, file: !1582, line: 388, baseType: !7, size: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !1581, file: !1582, line: 390, baseType: !491, size: 32, offset: 160)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !1581, file: !1582, line: 392, baseType: !7, size: 32, offset: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !1581, file: !1582, line: 394, baseType: !7, size: 32, offset: 224)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !1581, file: !1582, line: 395, baseType: !1661, size: 32, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !1582, line: 45, flags: DIFlagFwdDecl)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !1581, file: !1582, line: 397, baseType: !1664, size: 32, offset: 288)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !1582, line: 349, size: 128, elements: !1666)
!1666 = !{!1667, !1679, !1680, !1681}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1665, file: !1582, line: 352, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !1582, line: 52, size: 192, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1674, !1675, !1676}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1669, file: !1582, line: 54, baseType: !1668, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1669, file: !1582, line: 55, baseType: !7, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1669, file: !1582, line: 55, baseType: !7, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1669, file: !1582, line: 55, baseType: !7, size: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1669, file: !1582, line: 55, baseType: !7, size: 32, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1669, file: !1582, line: 56, baseType: !1677, size: 32, offset: 160)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 32, elements: !775)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !1582, line: 22, baseType: !401)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1665, file: !1582, line: 353, baseType: !7, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1665, file: !1582, line: 354, baseType: !1668, size: 32, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1665, file: !1582, line: 355, baseType: !1682, size: 32, offset: 96)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !1581, file: !1582, line: 399, baseType: !1684, size: 32, offset: 320)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{null, !1580}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !1581, file: !1582, line: 401, baseType: !7, size: 32, offset: 352)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !1581, file: !1582, line: 404, baseType: !7, size: 32, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !1581, file: !1582, line: 405, baseType: !491, size: 32, offset: 416)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !1581, file: !1582, line: 407, baseType: !1691, size: 32, offset: 448)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !1582, line: 324, size: 192, elements: !1693)
!1693 = !{!1694, !1696, !1697, !1698}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1692, file: !1582, line: 325, baseType: !1695, size: 48)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 48, elements: !1627)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1692, file: !1582, line: 326, baseType: !1695, size: 48, offset: 48)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1692, file: !1582, line: 327, baseType: !654, size: 16, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1692, file: !1582, line: 330, baseType: !1699, size: 64, offset: 128)
!1699 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !1581, file: !1582, line: 408, baseType: !1701, size: 32, offset: 480)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !1582, line: 60, size: 288, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1702, file: !1582, line: 62, baseType: !7, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1702, file: !1582, line: 63, baseType: !7, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1702, file: !1582, line: 64, baseType: !7, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1702, file: !1582, line: 65, baseType: !7, size: 32, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1702, file: !1582, line: 66, baseType: !7, size: 32, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1702, file: !1582, line: 67, baseType: !7, size: 32, offset: 160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1702, file: !1582, line: 68, baseType: !7, size: 32, offset: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1702, file: !1582, line: 69, baseType: !7, size: 32, offset: 224)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1702, file: !1582, line: 70, baseType: !7, size: 32, offset: 256)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !1581, file: !1582, line: 409, baseType: !491, size: 32, offset: 512)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !1581, file: !1582, line: 412, baseType: !1715, size: 32, offset: 544)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{null, !7}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !1581, file: !1582, line: 416, baseType: !1720, size: 32, offset: 576)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !1582, line: 90, size: 1120, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1729}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1721, file: !1582, line: 91, baseType: !1720, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1721, file: !1582, line: 92, baseType: !7, size: 32, offset: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1721, file: !1582, line: 93, baseType: !1726, size: 1024, offset: 64)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 1024, elements: !1727)
!1727 = !{!1728}
!1728 = !DISubrange(count: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !1721, file: !1582, line: 94, baseType: !1730, size: 32, offset: 1088)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !1582, line: 79, size: 2112, elements: !1732)
!1732 = !{!1733, !1735, !1736, !1737}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1731, file: !1582, line: 80, baseType: !1734, size: 1024)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 1024, elements: !1727)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1731, file: !1582, line: 81, baseType: !1734, size: 1024, offset: 1024)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1731, file: !1582, line: 83, baseType: !1678, size: 32, offset: 2048)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1731, file: !1582, line: 86, baseType: !1678, size: 32, offset: 2080)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !1581, file: !1582, line: 417, baseType: !1721, size: 1120, offset: 608)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !1581, file: !1582, line: 420, baseType: !1740, size: 96, offset: 1728)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !1582, line: 296, size: 96, elements: !1741)
!1741 = !{!1742, !1744, !1745}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1740, file: !1582, line: 298, baseType: !1743, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1740, file: !1582, line: 299, baseType: !7, size: 32, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1740, file: !1582, line: 300, baseType: !1586, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !1581, file: !1582, line: 421, baseType: !1586, size: 32, offset: 1824)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !1581, file: !1582, line: 422, baseType: !1748, size: 32, offset: 1856)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !1582, line: 359, size: 640, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1757, !1758, !1759, !1760, !1761, !1762}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1749, file: !1582, line: 362, baseType: !491, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1749, file: !1582, line: 363, baseType: !1642, size: 64, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1749, file: !1582, line: 364, baseType: !1642, size: 64, offset: 96)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1749, file: !1582, line: 365, baseType: !1642, size: 64, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1749, file: !1582, line: 366, baseType: !1756, size: 64, offset: 224)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 64, elements: !290)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1749, file: !1582, line: 367, baseType: !7, size: 32, offset: 288)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1749, file: !1582, line: 368, baseType: !1642, size: 64, offset: 320)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1749, file: !1582, line: 369, baseType: !1642, size: 64, offset: 384)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1749, file: !1582, line: 370, baseType: !1642, size: 64, offset: 448)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1749, file: !1582, line: 371, baseType: !1642, size: 64, offset: 512)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1749, file: !1582, line: 372, baseType: !1642, size: 64, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !1581, file: !1582, line: 423, baseType: !491, size: 32, offset: 1888)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1651, line: 46, baseType: !30)
!1765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1767, globals: !1768, splitDebugInlining: false, nameTableKind: None)
!1766 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1767 = !{!491, !1578}
!1768 = !{!1572}
!1769 = !{!1770, !1771, !1772, !1773}
!1770 = !DILocalVariable(name: "r", arg: 1, scope: !1574, file: !1575, line: 98, type: !1580)
!1771 = !DILocalVariable(name: "nbytes", arg: 2, scope: !1574, file: !1575, line: 98, type: !1764)
!1772 = !DILocalVariable(name: "prev_heap_end", scope: !1574, file: !1575, line: 102, type: !491)
!1773 = !DILocalVariable(name: "stack", scope: !1574, file: !1575, line: 103, type: !491)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !1776, file: !1777, line: 208, type: !1919, isLocal: false, isDefinition: true)
!1776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1777, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1778, retainedTypes: !1799, globals: !1860, splitDebugInlining: false, nameTableKind: None)
!1777 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1778 = !{!1779, !1784, !1792}
!1779 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1777, line: 122, baseType: !30, size: 32, elements: !1780)
!1780 = !{!1781, !1782, !1783}
!1781 = !DIEnumerator(name: "eNotWaitingNotification", value: 0)
!1782 = !DIEnumerator(name: "eWaitingNotification", value: 1)
!1783 = !DIEnumerator(name: "eNotified", value: 2)
!1784 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1785, line: 112, baseType: !30, size: 32, elements: !1786)
!1785 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1786 = !{!1787, !1788, !1789, !1790, !1791}
!1787 = !DIEnumerator(name: "eRunning", value: 0)
!1788 = !DIEnumerator(name: "eReady", value: 1)
!1789 = !DIEnumerator(name: "eBlocked", value: 2)
!1790 = !DIEnumerator(name: "eSuspended", value: 3)
!1791 = !DIEnumerator(name: "eDeleted", value: 4)
!1792 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1785, line: 122, baseType: !30, size: 32, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1797, !1798}
!1794 = !DIEnumerator(name: "eNoAction", value: 0)
!1795 = !DIEnumerator(name: "eSetBits", value: 1)
!1796 = !DIEnumerator(name: "eIncrement", value: 2)
!1797 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!1798 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!1799 = !{!1800, !51, !1802, !1804, !61, !1806, !1807, !59, !1808, !1822, !654, !1843, !500, !30, !1857, !7, !662, !54}
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !1801, line: 99, baseType: !401)
!1801 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !55, line: 36, baseType: !1803)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !57, line: 57, baseType: !654)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !1801, line: 97, baseType: !61)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !1785, line: 103, baseType: !51)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !1801, line: 98, baseType: !465)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !1777, line: 195, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !1777, line: 191, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !1777, line: 134, size: 672, elements: !1812)
!1812 = !{!1813, !1816, !1828, !1829, !1830, !1831, !1835, !1836, !1837, !1838, !1839, !1840}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !1811, file: !1777, line: 136, baseType: !1814, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1805)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "xGenericListItem", scope: !1811, file: !1777, line: 143, baseType: !1817, size: 160, offset: 32)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1818, line: 191, baseType: !1819)
!1818 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1818, line: 181, size: 160, elements: !1820)
!1820 = !{!1821, !1823, !1825, !1826, !1827}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1819, file: !1818, line: 184, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !1801, line: 105, baseType: !61)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1819, file: !1818, line: 185, baseType: !1824, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1819, file: !1818, line: 186, baseType: !1824, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1819, file: !1818, line: 187, baseType: !51, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1819, file: !1818, line: 188, baseType: !51, size: 32, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !1811, file: !1777, line: 144, baseType: !1817, size: 160, offset: 192)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !1811, file: !1777, line: 145, baseType: !1800, size: 32, offset: 352)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !1811, file: !1777, line: 146, baseType: !1804, size: 32, offset: 384)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !1811, file: !1777, line: 147, baseType: !1832, size: 48, offset: 416)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 48, elements: !1833)
!1833 = !{!1834}
!1834 = !DISubrange(count: 6)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "uxTCBNumber", scope: !1811, file: !1777, line: 158, baseType: !1800, size: 32, offset: 480)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "uxTaskNumber", scope: !1811, file: !1777, line: 159, baseType: !1800, size: 32, offset: 512)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !1811, file: !1777, line: 163, baseType: !1800, size: 32, offset: 544)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "uxMutexesHeld", scope: !1811, file: !1777, line: 164, baseType: !1800, size: 32, offset: 576)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !1811, file: !1777, line: 187, baseType: !60, size: 32, offset: 608)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "eNotifyState", scope: !1811, file: !1777, line: 188, baseType: !1841, size: 32, offset: 640)
!1841 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyValue", file: !1777, line: 127, baseType: !1779)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1818, line: 212, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1818, line: 205, size: 160, elements: !1846)
!1846 = !{!1847, !1848, !1850}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1845, file: !1818, line: 208, baseType: !1800, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1845, file: !1818, line: 209, baseType: !1849, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1845, file: !1818, line: 210, baseType: !1851, size: 96, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1818, line: 200, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1818, line: 193, size: 96, elements: !1853)
!1853 = !{!1854, !1855, !1856}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1852, file: !1818, line: 196, baseType: !1822, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1852, file: !1818, line: 197, baseType: !1824, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1852, file: !1818, line: 198, baseType: !1824, size: 32, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1858, line: 40, baseType: !1859)
!1858 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration")
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !1617, line: 131, baseType: !30)
!1860 = !{!1774, !1861, !1876, !1879, !1882, !1884, !1886, !1888, !1890, !1893, !1896, !1898, !1900, !1902, !1904, !1907, !1909, !1911, !1913, !1915, !1917}
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "ucExpectedStackBytes", scope: !1863, file: !1777, line: 2240, type: !1872, isLocal: true, isDefinition: true)
!1863 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !1777, file: !1777, line: 2198, type: !154, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !1864)
!1864 = !{!1865, !1869}
!1865 = !DILocalVariable(name: "uxTopPriority", scope: !1866, file: !1777, line: 2244, type: !1800)
!1866 = distinct !DILexicalBlock(scope: !1867, file: !1777, line: 2244, column: 3)
!1867 = distinct !DILexicalBlock(scope: !1868, file: !1777, line: 2207, column: 2)
!1868 = distinct !DILexicalBlock(scope: !1863, file: !1777, line: 2200, column: 6)
!1869 = !DILocalVariable(name: "pxConstList", scope: !1870, file: !1777, line: 2244, type: !1871)
!1870 = distinct !DILexicalBlock(scope: !1866, file: !1777, line: 2244, column: 3)
!1871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1873, size: 160, elements: !1874)
!1873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!1874 = !{!1875}
!1875 = !DISubrange(count: 20)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !1776, file: !1777, line: 211, type: !1878, isLocal: true, isDefinition: true)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 3200, elements: !1874)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !1776, file: !1777, line: 214, type: !1881, isLocal: true, isDefinition: true)
!1881 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1843)
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !1776, file: !1777, line: 215, type: !1881, isLocal: true, isDefinition: true)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !1776, file: !1777, line: 216, type: !1844, isLocal: true, isDefinition: true)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "xTasksWaitingTermination", scope: !1776, file: !1777, line: 220, type: !1844, isLocal: true, isDefinition: true)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "xSuspendedTaskList", scope: !1776, file: !1777, line: 227, type: !1844, isLocal: true, isDefinition: true)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !1776, file: !1777, line: 238, type: !1892, isLocal: true, isDefinition: true)
!1892 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1800)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !1776, file: !1777, line: 241, type: !1895, isLocal: true, isDefinition: true)
!1895 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1807)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !1776, file: !1777, line: 245, type: !1800, isLocal: true, isDefinition: true)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !1776, file: !1777, line: 240, type: !1892, isLocal: true, isDefinition: true)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "uxTasksDeleted", scope: !1776, file: !1777, line: 221, type: !1892, isLocal: true, isDefinition: true)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !1776, file: !1777, line: 256, type: !1892, isLocal: true, isDefinition: true)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "xTickCount", scope: !1776, file: !1777, line: 239, type: !1906, isLocal: true, isDefinition: true)
!1906 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1822)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !1776, file: !1777, line: 243, type: !1895, isLocal: true, isDefinition: true)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !1776, file: !1777, line: 242, type: !1892, isLocal: true, isDefinition: true)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !1776, file: !1777, line: 244, type: !1895, isLocal: true, isDefinition: true)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !1776, file: !1777, line: 246, type: !1906, isLocal: true, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !1776, file: !1777, line: 212, type: !1844, isLocal: true, isDefinition: true)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !1776, file: !1777, line: 213, type: !1844, isLocal: true, isDefinition: true)
!1919 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1808)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "xQueueRegistry", scope: !1922, file: !1923, line: 192, type: !1974, isLocal: false, isDefinition: true)
!1922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1924, globals: !1973, splitDebugInlining: false, nameTableKind: None)
!1923 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/queue.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1924 = !{!1925, !1800, !1807, !59, !51, !1857, !1931, !1822, !54}
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "Queue_t", file: !1923, line: 165, baseType: !1927)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQUEUE", file: !1923, line: 161, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !1923, line: 130, size: 672, elements: !1929)
!1929 = !{!1930, !1935, !1936, !1937, !1942, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "pcHead", scope: !1928, file: !1923, line: 132, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !55, line: 20, baseType: !1933)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !57, line: 41, baseType: !1934)
!1934 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "pcTail", scope: !1928, file: !1923, line: 133, baseType: !1931, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "pcWriteTo", scope: !1928, file: !1923, line: 134, baseType: !1931, size: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1928, file: !1923, line: 140, baseType: !1938, size: 32, offset: 96)
!1938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1923, line: 136, size: 32, elements: !1939)
!1939 = !{!1940, !1941}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "pcReadFrom", scope: !1938, file: !1923, line: 138, baseType: !1931, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "uxRecursiveCallCount", scope: !1938, file: !1923, line: 139, baseType: !1800, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToSend", scope: !1928, file: !1923, line: 142, baseType: !1943, size: 160, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1818, line: 212, baseType: !1944)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1818, line: 205, size: 160, elements: !1945)
!1945 = !{!1946, !1947, !1958}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1944, file: !1818, line: 208, baseType: !1800, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1944, file: !1818, line: 209, baseType: !1948, size: 32, offset: 32)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1818, line: 191, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1818, line: 181, size: 160, elements: !1951)
!1951 = !{!1952, !1953, !1955, !1956, !1957}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1950, file: !1818, line: 184, baseType: !1822, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1950, file: !1818, line: 185, baseType: !1954, size: 32, offset: 32)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1950, file: !1818, line: 186, baseType: !1954, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1950, file: !1818, line: 187, baseType: !51, size: 32, offset: 96)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1950, file: !1818, line: 188, baseType: !51, size: 32, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1944, file: !1818, line: 210, baseType: !1959, size: 96, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1818, line: 200, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1818, line: 193, size: 96, elements: !1961)
!1961 = !{!1962, !1963, !1964}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1960, file: !1818, line: 196, baseType: !1822, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1960, file: !1818, line: 197, baseType: !1954, size: 32, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1960, file: !1818, line: 198, baseType: !1954, size: 32, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToReceive", scope: !1928, file: !1923, line: 143, baseType: !1943, size: 160, offset: 288)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "uxMessagesWaiting", scope: !1928, file: !1923, line: 145, baseType: !1892, size: 32, offset: 448)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "uxLength", scope: !1928, file: !1923, line: 146, baseType: !1800, size: 32, offset: 480)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "uxItemSize", scope: !1928, file: !1923, line: 147, baseType: !1800, size: 32, offset: 512)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "xRxLock", scope: !1928, file: !1923, line: 149, baseType: !1895, size: 32, offset: 544)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "xTxLock", scope: !1928, file: !1923, line: 150, baseType: !1895, size: 32, offset: 576)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "uxQueueNumber", scope: !1928, file: !1923, line: 153, baseType: !1800, size: 32, offset: 608)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ucQueueType", scope: !1928, file: !1923, line: 154, baseType: !54, size: 8, offset: 640)
!1973 = !{!1920}
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1975, size: 512, elements: !290)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueRegistryItem_t", file: !1923, line: 187, baseType: !1976)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQueueRegistryItem", file: !1923, line: 182, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QUEUE_REGISTRY_ITEM", file: !1923, line: 178, size: 64, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "pcQueueName", scope: !1977, file: !1923, line: 180, baseType: !662, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !1977, file: !1923, line: 181, baseType: !1981, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !1982, line: 88, baseType: !51)
!1982 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/queue.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !1985, file: !1986, line: 212, type: !54, isLocal: true, isDefinition: true)
!1985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1986, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1987, retainedTypes: !1995, globals: !1996, splitDebugInlining: false, nameTableKind: None)
!1986 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!1987 = !{!1988, !1171}
!1988 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1172, line: 50, baseType: !30, size: 32, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994}
!1990 = !DIEnumerator(name: "HAL_DWT_0", value: 0)
!1991 = !DIEnumerator(name: "HAL_DWT_1", value: 1)
!1992 = !DIEnumerator(name: "HAL_DWT_2", value: 2)
!1993 = !DIEnumerator(name: "HAL_DWT_3", value: 3)
!1994 = !DIEnumerator(name: "HAL_DWT_MAX", value: 4)
!1995 = !{!1805, !51, !52, !54, !61, !59, !1807, !1822}
!1996 = !{!1997, !1983, !2002, !2004}
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !1985, file: !1986, line: 214, type: !1999, isLocal: true, isDefinition: true)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !1985, file: !1986, line: 213, type: !61, isLocal: true, isDefinition: true)
!2004 = !DIGlobalVariableExpression(var: !2005, expr: !DIExpression())
!2005 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !1985, file: !1986, line: 150, type: !1800, isLocal: true, isDefinition: true)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "pxEnd", scope: !2008, file: !2009, line: 142, type: !2011, isLocal: true, isDefinition: true)
!2008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2010, globals: !2018, splitDebugInlining: false, nameTableKind: None)
!2009 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2010 = !{!51, !500, !1857, !61, !2011}
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockLink_t", file: !2009, line: 117, baseType: !2013)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "A_BLOCK_LINK", file: !2009, line: 110, size: 64, elements: !2014)
!2014 = !{!2015, !2017}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pxNextFreeBlock", scope: !2013, file: !2009, line: 112, baseType: !2016, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "xBlockSize", scope: !2013, file: !2009, line: 113, baseType: !1857, size: 32, offset: 32)
!2018 = !{!2019, !2022, !2006, !2024, !2026, !2028, !2030}
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression(DW_OP_constu, 8, DW_OP_stack_value))
!2020 = distinct !DIGlobalVariable(name: "xHeapStructSize", scope: !2008, file: !2009, line: 139, type: !2021, isLocal: true, isDefinition: true)
!2021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "xStart", scope: !2008, file: !2009, line: 142, type: !2012, isLocal: true, isDefinition: true)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "xBlockAllocatedBit", scope: !2008, file: !2009, line: 153, type: !1857, isLocal: true, isDefinition: true)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "xFreeBytesRemaining", scope: !2008, file: !2009, line: 146, type: !1857, isLocal: true, isDefinition: true)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "xMinimumEverFreeBytesRemaining", scope: !2008, file: !2009, line: 147, type: !1857, isLocal: true, isDefinition: true)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "ucHeap", scope: !2008, file: !2009, line: 105, type: !2032, isLocal: true, isDefinition: true)
!2032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 524288, elements: !2033)
!2033 = !{!2034}
!2034 = !DISubrange(count: 65536)
!2035 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 2147483648, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "xExceptionStack", scope: !2038, file: !2039, line: 78, type: !2213, isLocal: true, isDefinition: true)
!2038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2039, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2040, retainedTypes: !2068, globals: !2121, splitDebugInlining: false, nameTableKind: None)
!2039 = !DIFile(filename: "../../../../..//kernel/service/src/exception_handler.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2040 = !{!2041, !1988}
!2041 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2039, line: 276, baseType: !30, size: 32, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067}
!2043 = !DIEnumerator(name: "r0", value: 0)
!2044 = !DIEnumerator(name: "r1", value: 1)
!2045 = !DIEnumerator(name: "r2", value: 2)
!2046 = !DIEnumerator(name: "r3", value: 3)
!2047 = !DIEnumerator(name: "r12", value: 4)
!2048 = !DIEnumerator(name: "lr", value: 5)
!2049 = !DIEnumerator(name: "pc", value: 6)
!2050 = !DIEnumerator(name: "psr", value: 7)
!2051 = !DIEnumerator(name: "s0", value: 8)
!2052 = !DIEnumerator(name: "s1", value: 9)
!2053 = !DIEnumerator(name: "s2", value: 10)
!2054 = !DIEnumerator(name: "s3", value: 11)
!2055 = !DIEnumerator(name: "s4", value: 12)
!2056 = !DIEnumerator(name: "s5", value: 13)
!2057 = !DIEnumerator(name: "s6", value: 14)
!2058 = !DIEnumerator(name: "s7", value: 15)
!2059 = !DIEnumerator(name: "s8", value: 16)
!2060 = !DIEnumerator(name: "s9", value: 17)
!2061 = !DIEnumerator(name: "s10", value: 18)
!2062 = !DIEnumerator(name: "s11", value: 19)
!2063 = !DIEnumerator(name: "s12", value: 20)
!2064 = !DIEnumerator(name: "s13", value: 21)
!2065 = !DIEnumerator(name: "s14", value: 22)
!2066 = !DIEnumerator(name: "s15", value: 23)
!2067 = !DIEnumerator(name: "fpscr", value: 24)
!2068 = !{!2069, !466, !30, !61, !2094}
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !285, line: 418, baseType: !2071)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 395, size: 1120, elements: !2072)
!2072 = !{!2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2071, file: !285, line: 397, baseType: !321, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2071, file: !285, line: 398, baseType: !60, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2071, file: !285, line: 399, baseType: !60, size: 32, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2071, file: !285, line: 400, baseType: !60, size: 32, offset: 96)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2071, file: !285, line: 401, baseType: !60, size: 32, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2071, file: !285, line: 402, baseType: !60, size: 32, offset: 160)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2071, file: !285, line: 403, baseType: !328, size: 96, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2071, file: !285, line: 404, baseType: !60, size: 32, offset: 288)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2071, file: !285, line: 405, baseType: !60, size: 32, offset: 320)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2071, file: !285, line: 406, baseType: !60, size: 32, offset: 352)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2071, file: !285, line: 407, baseType: !60, size: 32, offset: 384)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2071, file: !285, line: 408, baseType: !60, size: 32, offset: 416)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2071, file: !285, line: 409, baseType: !60, size: 32, offset: 448)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2071, file: !285, line: 410, baseType: !60, size: 32, offset: 480)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2071, file: !285, line: 411, baseType: !339, size: 64, offset: 512)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2071, file: !285, line: 412, baseType: !321, size: 32, offset: 576)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2071, file: !285, line: 413, baseType: !321, size: 32, offset: 608)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2071, file: !285, line: 414, baseType: !345, size: 128, offset: 640)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2071, file: !285, line: 415, baseType: !349, size: 160, offset: 768)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2071, file: !285, line: 416, baseType: !353, size: 160, offset: 928)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2071, file: !285, line: 417, baseType: !60, size: 32, offset: 1088)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !285, line: 826, baseType: !2096)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 801, size: 736, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2096, file: !285, line: 803, baseType: !60, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !2096, file: !285, line: 804, baseType: !60, size: 32, offset: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !2096, file: !285, line: 805, baseType: !60, size: 32, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !2096, file: !285, line: 806, baseType: !60, size: 32, offset: 96)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !2096, file: !285, line: 807, baseType: !60, size: 32, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !2096, file: !285, line: 808, baseType: !60, size: 32, offset: 160)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !2096, file: !285, line: 809, baseType: !60, size: 32, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !2096, file: !285, line: 810, baseType: !321, size: 32, offset: 224)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !2096, file: !285, line: 811, baseType: !60, size: 32, offset: 256)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !2096, file: !285, line: 812, baseType: !60, size: 32, offset: 288)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !2096, file: !285, line: 813, baseType: !60, size: 32, offset: 320)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2096, file: !285, line: 814, baseType: !774, size: 32, offset: 352)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !2096, file: !285, line: 815, baseType: !60, size: 32, offset: 384)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !2096, file: !285, line: 816, baseType: !60, size: 32, offset: 416)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !2096, file: !285, line: 817, baseType: !60, size: 32, offset: 448)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2096, file: !285, line: 818, baseType: !774, size: 32, offset: 480)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !2096, file: !285, line: 819, baseType: !60, size: 32, offset: 512)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !2096, file: !285, line: 820, baseType: !60, size: 32, offset: 544)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !2096, file: !285, line: 821, baseType: !60, size: 32, offset: 576)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2096, file: !285, line: 822, baseType: !774, size: 32, offset: 608)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !2096, file: !285, line: 823, baseType: !60, size: 32, offset: 640)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !2096, file: !285, line: 824, baseType: !60, size: 32, offset: 672)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !2096, file: !285, line: 825, baseType: !60, size: 32, offset: 704)
!2121 = !{!2122, !2125, !2036, !2185, !2194, !2196, !2211}
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(name: "pxExceptionStack", scope: !2038, file: !2039, line: 79, type: !2124, isLocal: false, isDefinition: true)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 32)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "pTaskContext", scope: !2038, file: !2039, line: 340, type: !2127, isLocal: false, isDefinition: true)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskContext", file: !2039, line: 337, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TaskContextType", file: !2039, line: 282, size: 1728, elements: !2130)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2129, file: !2039, line: 283, baseType: !30, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2129, file: !2039, line: 284, baseType: !30, size: 32, offset: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2129, file: !2039, line: 285, baseType: !30, size: 32, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2129, file: !2039, line: 286, baseType: !30, size: 32, offset: 96)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !2129, file: !2039, line: 287, baseType: !30, size: 32, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !2129, file: !2039, line: 288, baseType: !30, size: 32, offset: 160)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !2129, file: !2039, line: 289, baseType: !30, size: 32, offset: 192)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !2129, file: !2039, line: 290, baseType: !30, size: 32, offset: 224)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2129, file: !2039, line: 291, baseType: !30, size: 32, offset: 256)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2129, file: !2039, line: 292, baseType: !30, size: 32, offset: 288)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2129, file: !2039, line: 293, baseType: !30, size: 32, offset: 320)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2129, file: !2039, line: 294, baseType: !30, size: 32, offset: 352)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2129, file: !2039, line: 295, baseType: !30, size: 32, offset: 384)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2129, file: !2039, line: 296, baseType: !30, size: 32, offset: 416)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2129, file: !2039, line: 297, baseType: !30, size: 32, offset: 448)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2129, file: !2039, line: 298, baseType: !30, size: 32, offset: 480)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "psr", scope: !2129, file: !2039, line: 299, baseType: !30, size: 32, offset: 512)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2129, file: !2039, line: 300, baseType: !30, size: 32, offset: 544)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "exc_return", scope: !2129, file: !2039, line: 301, baseType: !30, size: 32, offset: 576)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "msp", scope: !2129, file: !2039, line: 302, baseType: !30, size: 32, offset: 608)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2129, file: !2039, line: 303, baseType: !30, size: 32, offset: 640)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "fpscr", scope: !2129, file: !2039, line: 304, baseType: !30, size: 32, offset: 672)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "s0", scope: !2129, file: !2039, line: 305, baseType: !30, size: 32, offset: 704)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "s1", scope: !2129, file: !2039, line: 306, baseType: !30, size: 32, offset: 736)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !2129, file: !2039, line: 307, baseType: !30, size: 32, offset: 768)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !2129, file: !2039, line: 308, baseType: !30, size: 32, offset: 800)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "s4", scope: !2129, file: !2039, line: 309, baseType: !30, size: 32, offset: 832)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "s5", scope: !2129, file: !2039, line: 310, baseType: !30, size: 32, offset: 864)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "s6", scope: !2129, file: !2039, line: 311, baseType: !30, size: 32, offset: 896)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "s7", scope: !2129, file: !2039, line: 312, baseType: !30, size: 32, offset: 928)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "s8", scope: !2129, file: !2039, line: 313, baseType: !30, size: 32, offset: 960)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "s9", scope: !2129, file: !2039, line: 314, baseType: !30, size: 32, offset: 992)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "s10", scope: !2129, file: !2039, line: 315, baseType: !30, size: 32, offset: 1024)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "s11", scope: !2129, file: !2039, line: 316, baseType: !30, size: 32, offset: 1056)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "s12", scope: !2129, file: !2039, line: 317, baseType: !30, size: 32, offset: 1088)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "s13", scope: !2129, file: !2039, line: 318, baseType: !30, size: 32, offset: 1120)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "s14", scope: !2129, file: !2039, line: 319, baseType: !30, size: 32, offset: 1152)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "s15", scope: !2129, file: !2039, line: 320, baseType: !30, size: 32, offset: 1184)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "s16", scope: !2129, file: !2039, line: 321, baseType: !30, size: 32, offset: 1216)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "s17", scope: !2129, file: !2039, line: 322, baseType: !30, size: 32, offset: 1248)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "s18", scope: !2129, file: !2039, line: 323, baseType: !30, size: 32, offset: 1280)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "s19", scope: !2129, file: !2039, line: 324, baseType: !30, size: 32, offset: 1312)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "s20", scope: !2129, file: !2039, line: 325, baseType: !30, size: 32, offset: 1344)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "s21", scope: !2129, file: !2039, line: 326, baseType: !30, size: 32, offset: 1376)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "s22", scope: !2129, file: !2039, line: 327, baseType: !30, size: 32, offset: 1408)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "s23", scope: !2129, file: !2039, line: 328, baseType: !30, size: 32, offset: 1440)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "s24", scope: !2129, file: !2039, line: 329, baseType: !30, size: 32, offset: 1472)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "s25", scope: !2129, file: !2039, line: 330, baseType: !30, size: 32, offset: 1504)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "s26", scope: !2129, file: !2039, line: 331, baseType: !30, size: 32, offset: 1536)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "s27", scope: !2129, file: !2039, line: 332, baseType: !30, size: 32, offset: 1568)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "s28", scope: !2129, file: !2039, line: 333, baseType: !30, size: 32, offset: 1600)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "s29", scope: !2129, file: !2039, line: 334, baseType: !30, size: 32, offset: 1632)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "s30", scope: !2129, file: !2039, line: 335, baseType: !30, size: 32, offset: 1664)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "s31", scope: !2129, file: !2039, line: 336, baseType: !30, size: 32, offset: 1696)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "assert_expr", scope: !2038, file: !2039, line: 99, type: !2187, isLocal: true, isDefinition: true)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "assert_expr_t", file: !2039, line: 95, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2039, line: 89, size: 128, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "is_valid", scope: !2188, file: !2039, line: 91, baseType: !69, size: 8)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2188, file: !2039, line: 92, baseType: !662, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2188, file: !2039, line: 93, baseType: !662, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !2188, file: !2039, line: 94, baseType: !7, size: 32, offset: 96)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "reboot_flag", scope: !2038, file: !2039, line: 101, type: !7, isLocal: true, isDefinition: true)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "exception_config", scope: !2038, file: !2039, line: 97, type: !2198, isLocal: true, isDefinition: true)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_t", file: !2039, line: 87, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2039, line: 83, size: 416, elements: !2200)
!2200 = !{!2201, !2202}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2199, file: !2039, line: 85, baseType: !7, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "configs", scope: !2199, file: !2039, line: 86, baseType: !2203, size: 384, offset: 32)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2204, size: 384, elements: !1833)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !2205, line: 99, baseType: !2206)
!2205 = !DIFile(filename: "../../../../..//kernel/service/inc/exception_handler.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2205, line: 95, size: 64, elements: !2207)
!2207 = !{!2208, !2210}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !2206, file: !2205, line: 97, baseType: !2209, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_exception_callback_t", file: !2205, line: 93, baseType: !153)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !2206, file: !2205, line: 98, baseType: !2209, size: 32, offset: 32)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "taskContext", scope: !2038, file: !2039, line: 339, type: !2128, isLocal: true, isDefinition: true)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 6144, elements: !2214)
!2214 = !{!2215}
!2215 = !DISubrange(count: 192)
!2216 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 0, 8))
!2217 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!2218 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 32))
!2219 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression(DW_OP_LLVM_fragment, 96, 32))
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "memory_regions", scope: !2222, file: !2223, line: 51, type: !2225, isLocal: false, isDefinition: true)
!2222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2224, splitDebugInlining: false, nameTableKind: None)
!2223 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/fatfs_read_write_file/src/regions_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2224 = !{!2220}
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2226, size: 768, elements: !1833)
!2226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2227)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "memory_region_type", file: !2205, line: 91, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2205, line: 85, size: 128, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "region_name", scope: !2228, file: !2205, line: 87, baseType: !491, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "start_address", scope: !2228, file: !2205, line: 88, baseType: !2124, size: 32, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "end_address", scope: !2228, file: !2205, line: 89, baseType: !2124, size: 32, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "is_dumped", scope: !2228, file: !2205, line: 90, baseType: !30, size: 32, offset: 96)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "log_control_block_common", scope: !2236, file: !2237, line: 158, type: !2305, isLocal: false, isDefinition: true)
!2236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2237, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2238, retainedTypes: !2264, globals: !2324, splitDebugInlining: false, nameTableKind: None)
!2237 = !DIFile(filename: "../../../../..//kernel/service/src/syslog.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2238 = !{!674, !679, !1055, !1063, !1068, !1084, !1090, !1094, !2239, !2243, !2256, !28}
!2239 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2237, line: 96, baseType: !30, size: 32, elements: !2240)
!2240 = !{!2241, !2242}
!2241 = !DIEnumerator(name: "MESSAGE_TYPE_NORMAL_LOG", value: 0)
!2242 = !DIEnumerator(name: "MESSAGE_TYPE_HEX_DUMP", value: 1)
!2243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2244, line: 40, baseType: !30, size: 32, elements: !2245)
!2244 = !DIFile(filename: "../inc/task_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2245 = !{!2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!2246 = !DIEnumerator(name: "TASK_PRIORITY_IDLE", value: 0)
!2247 = !DIEnumerator(name: "TASK_PRIORITY_SYSLOG", value: 1)
!2248 = !DIEnumerator(name: "TASK_PRIORITY_LOW", value: 2)
!2249 = !DIEnumerator(name: "TASK_PRIORITY_BELOW_NORMAL", value: 3)
!2250 = !DIEnumerator(name: "TASK_PRIORITY_NORMAL", value: 4)
!2251 = !DIEnumerator(name: "TASK_PRIORITY_ABOVE_NORMAL", value: 5)
!2252 = !DIEnumerator(name: "TASK_PRIORITY_HIGH", value: 6)
!2253 = !DIEnumerator(name: "TASK_PRIORITY_SOFT_REALTIME", value: 7)
!2254 = !DIEnumerator(name: "TASK_PRIORITY_HARD_REALTIME", value: 8)
!2255 = !DIEnumerator(name: "TASK_PRIORITY_TIMER", value: 19)
!2256 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2257, line: 50, baseType: !30, size: 32, elements: !2258)
!2257 = !DIFile(filename: "../../../../..//kernel/service/inc/toi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2258 = !{!2259, !2260, !2261, !2262, !2263}
!2259 = !DIEnumerator(name: "TOI_BIN", value: 0)
!2260 = !DIEnumerator(name: "TOI_OCT", value: 1)
!2261 = !DIEnumerator(name: "TOI_DEC", value: 2)
!2262 = !DIEnumerator(name: "TOI_HEX", value: 3)
!2263 = !DIEnumerator(name: "TOI_ERR", value: 4)
!2264 = !{!2265, !54, !51, !59, !1807, !1822, !30, !491, !7, !2304, !691, !693, !61, !2313, !2322}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_message_t", file: !2237, line: 130, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2237, line: 124, size: 2336, elements: !2268)
!2268 = !{!2269, !2271}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !2267, file: !2237, line: 125, baseType: !2270, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "message_type_t", file: !2237, line: 99, baseType: !2239)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2267, file: !2237, line: 129, baseType: !2272, size: 2304, offset: 32)
!2272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2267, file: !2237, line: 126, size: 2304, elements: !2273)
!2273 = !{!2274, !2287}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "normal_log_message", scope: !2272, file: !2237, line: 127, baseType: !2275, size: 2240)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "normal_log_message_t", file: !2237, line: 108, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2237, line: 101, size: 2240, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !2276, file: !2237, line: 102, baseType: !662, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !2276, file: !2237, line: 103, baseType: !693, size: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !2276, file: !2237, line: 104, baseType: !662, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !2276, file: !2237, line: 105, baseType: !7, size: 32, offset: 96)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2276, file: !2237, line: 106, baseType: !61, size: 32, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2276, file: !2237, line: 107, baseType: !2284, size: 2056, offset: 160)
!2284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 2056, elements: !2285)
!2285 = !{!2286}
!2286 = !DISubrange(count: 257)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "hex_dump_message", scope: !2272, file: !2237, line: 128, baseType: !2288, size: 2304)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "hex_dump_message_t", file: !2237, line: 120, baseType: !2289)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2237, line: 110, size: 2304, elements: !2290)
!2290 = !{!2291, !2292, !2293, !2294, !2295, !2296, !2300, !2301, !2303}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !2289, file: !2237, line: 111, baseType: !662, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !2289, file: !2237, line: 112, baseType: !693, size: 32, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !2289, file: !2237, line: 113, baseType: !662, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !2289, file: !2237, line: 114, baseType: !7, size: 32, offset: 96)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2289, file: !2237, line: 115, baseType: !61, size: 32, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2289, file: !2237, line: 116, baseType: !2297, size: 1032, offset: 160)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 1032, elements: !2298)
!2298 = !{!2299}
!2299 = !DISubrange(count: 129)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !2289, file: !2237, line: 117, baseType: !61, size: 32, offset: 1216)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2289, file: !2237, line: 118, baseType: !2302, size: 1024, offset: 1248)
!2302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 1024, elements: !1422)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "additional_data", scope: !2289, file: !2237, line: 119, baseType: !491, size: 32, offset: 2272)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !675, line: 95, baseType: !2306)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !675, line: 89, size: 160, elements: !2307)
!2307 = !{!2308, !2309, !2310, !2311, !2312}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !2306, file: !675, line: 90, baseType: !662, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !2306, file: !675, line: 91, baseType: !691, size: 32, offset: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !2306, file: !675, line: 92, baseType: !693, size: 32, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !2306, file: !675, line: 93, baseType: !695, size: 32, offset: 96)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !2306, file: !675, line: 94, baseType: !700, size: 32, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_buffer_t", file: !2237, line: 135, baseType: !2315)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2237, line: 132, size: 2368, elements: !2316)
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "occupied", scope: !2315, file: !2237, line: 133, baseType: !61, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2315, file: !2237, line: 134, baseType: !2319, size: 2336, offset: 32)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 2336, elements: !2320)
!2320 = !{!2321}
!2321 = !DISubrange(count: 292)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !55, line: 60, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !57, line: 105, baseType: !1699)
!2324 = !{!2234, !2325, !2327, !2330, !2344, !2346, !2348, !2350, !2352, !2355, !2357, !2359}
!2325 = !DIGlobalVariableExpression(var: !2326, expr: !DIExpression())
!2326 = distinct !DIGlobalVariable(name: "syslog_task_handle", scope: !2236, file: !2237, line: 138, type: !1806, isLocal: true, isDefinition: true)
!2327 = !DIGlobalVariableExpression(var: !2328, expr: !DIExpression())
!2328 = distinct !DIGlobalVariable(name: "syslog_buffer_pool", scope: !2236, file: !2237, line: 141, type: !2329, isLocal: true, isDefinition: true)
!2329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2314, size: 37888, elements: !784)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "syslog_config", scope: !2236, file: !2237, line: 160, type: !2332, isLocal: true, isDefinition: true)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_config_t", file: !675, line: 97, baseType: !2333)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syslog_config_s", file: !675, line: 122, size: 64, elements: !2334)
!2334 = !{!2335, !2342}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "save_fn", scope: !2333, file: !675, line: 123, baseType: !2336, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_save_fn", file: !675, line: 107, baseType: !2337)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{null, !2340}
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2332)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !2333, file: !675, line: 124, baseType: !2343, size: 32, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 32)
!2344 = !DIGlobalVariableExpression(var: !2345, expr: !DIExpression())
!2345 = distinct !DIGlobalVariable(name: "g_log_uart_port", scope: !2236, file: !2237, line: 166, type: !1161, isLocal: true, isDefinition: true)
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "syslog_init_done", scope: !2236, file: !2237, line: 153, type: !61, isLocal: true, isDefinition: true)
!2348 = !DIGlobalVariableExpression(var: !2349, expr: !DIExpression())
!2349 = distinct !DIGlobalVariable(name: "syslog_drop_count", scope: !2236, file: !2237, line: 155, type: !61, isLocal: true, isDefinition: true)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "g_log_queue", scope: !2236, file: !2237, line: 144, type: !1981, isLocal: true, isDefinition: true)
!2352 = !DIGlobalVariableExpression(var: !2353, expr: !DIExpression())
!2353 = distinct !DIGlobalVariable(name: "print_level_table", scope: !2236, file: !2237, line: 164, type: !2354, isLocal: true, isDefinition: true)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 128, elements: !346)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "syslog_task_ready", scope: !2236, file: !2237, line: 154, type: !61, isLocal: true, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "syslog_init_time", scope: !2236, file: !2237, line: 152, type: !61, isLocal: true, isDefinition: true)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "log_switch_table", scope: !2236, file: !2237, line: 162, type: !2361, isLocal: true, isDefinition: true)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 64, elements: !340)
!2362 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2363 = !DIGlobalVariableExpression(var: !2364, expr: !DIExpression())
!2364 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2365, file: !2370, line: 4, type: !2376, isLocal: false, isDefinition: true)
!2365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2366, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2367, splitDebugInlining: false, nameTableKind: None)
!2366 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC/Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2367 = !{!2363, !2368, !2374}
!2368 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression())
!2369 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2365, file: !2370, line: 5, type: !2371, isLocal: false, isDefinition: true)
!2370 = !DIFile(filename: "Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 88, elements: !2372)
!2372 = !{!2373}
!2373 = !DISubrange(count: 11)
!2374 = !DIGlobalVariableExpression(var: !2375, expr: !DIExpression())
!2375 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2365, file: !2370, line: 6, type: !2371, isLocal: false, isDefinition: true)
!2376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 248, elements: !2377)
!2377 = !{!2378}
!2378 = !DISubrange(count: 31)
!2379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2381, retainedTypes: !2382, splitDebugInlining: false, nameTableKind: None)
!2380 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/hal_pinmux.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2381 = !{!203}
!2382 = !{!137, !159}
!2383 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2384, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2385, retainedTypes: !2392, splitDebugInlining: false, nameTableKind: None)
!2384 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/hal_trng.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2385 = !{!2386}
!2386 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2387, line: 92, baseType: !7, size: 32, elements: !2388)
!2387 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_trng.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2388 = !{!2389, !2390, !2391}
!2389 = !DIEnumerator(name: "HAL_TRNG_STATUS_ERROR", value: -2)
!2390 = !DIEnumerator(name: "HAL_TRNG_STATUS_INVALID_PARAMETER", value: -1)
!2391 = !DIEnumerator(name: "HAL_TRNG_STATUS_OK", value: 0)
!2392 = !{!616, !618}
!2393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2394, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2395, splitDebugInlining: false, nameTableKind: None)
!2394 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2395 = !{!2396, !2421}
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !285, line: 418, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 395, size: 1120, elements: !2399)
!2399 = !{!2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2398, file: !285, line: 397, baseType: !321, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2398, file: !285, line: 398, baseType: !60, size: 32, offset: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2398, file: !285, line: 399, baseType: !60, size: 32, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2398, file: !285, line: 400, baseType: !60, size: 32, offset: 96)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2398, file: !285, line: 401, baseType: !60, size: 32, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2398, file: !285, line: 402, baseType: !60, size: 32, offset: 160)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2398, file: !285, line: 403, baseType: !328, size: 96, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2398, file: !285, line: 404, baseType: !60, size: 32, offset: 288)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2398, file: !285, line: 405, baseType: !60, size: 32, offset: 320)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2398, file: !285, line: 406, baseType: !60, size: 32, offset: 352)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2398, file: !285, line: 407, baseType: !60, size: 32, offset: 384)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2398, file: !285, line: 408, baseType: !60, size: 32, offset: 416)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2398, file: !285, line: 409, baseType: !60, size: 32, offset: 448)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2398, file: !285, line: 410, baseType: !60, size: 32, offset: 480)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2398, file: !285, line: 411, baseType: !339, size: 64, offset: 512)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2398, file: !285, line: 412, baseType: !321, size: 32, offset: 576)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2398, file: !285, line: 413, baseType: !321, size: 32, offset: 608)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2398, file: !285, line: 414, baseType: !345, size: 128, offset: 640)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2398, file: !285, line: 415, baseType: !349, size: 160, offset: 768)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2398, file: !285, line: 416, baseType: !353, size: 160, offset: 928)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2398, file: !285, line: 417, baseType: !60, size: 32, offset: 1088)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !285, line: 378, baseType: !2423)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 363, size: 28704, elements: !2424)
!2424 = !{!2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2423, file: !285, line: 365, baseType: !289, size: 256)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2423, file: !285, line: 366, baseType: !293, size: 768, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2423, file: !285, line: 367, baseType: !289, size: 256, offset: 1024)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2423, file: !285, line: 368, baseType: !293, size: 768, offset: 1280)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2423, file: !285, line: 369, baseType: !289, size: 256, offset: 2048)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2423, file: !285, line: 370, baseType: !293, size: 768, offset: 2304)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2423, file: !285, line: 371, baseType: !289, size: 256, offset: 3072)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2423, file: !285, line: 372, baseType: !293, size: 768, offset: 3328)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2423, file: !285, line: 373, baseType: !289, size: 256, offset: 4096)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2423, file: !285, line: 374, baseType: !304, size: 1792, offset: 4352)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2423, file: !285, line: 375, baseType: !308, size: 1920, offset: 6144)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2423, file: !285, line: 376, baseType: !312, size: 20608, offset: 8064)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2423, file: !285, line: 377, baseType: !60, size: 32, offset: 28672)
!2438 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2439, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2440, splitDebugInlining: false, nameTableKind: None)
!2439 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/pinmux.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2440 = !{!172, !203}
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2443, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2443 = !{!465, !137}
!2444 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2445, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2446, retainedTypes: !2457, splitDebugInlining: false, nameTableKind: None)
!2445 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2446 = !{!2447, !44}
!2447 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 110, baseType: !7, size: 32, elements: !2448)
!2448 = !{!2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456}
!2449 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!2450 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!2451 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!2452 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!2453 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!2454 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!2455 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!2456 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!2457 = !{!51}
!2458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2460, retainedTypes: !2479, splitDebugInlining: false, nameTableKind: None)
!2459 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2460 = !{!2461, !987, !172, !2467, !567, !572, !2473, !412}
!2461 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !568, line: 233, baseType: !7, size: 32, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2466}
!2463 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!2464 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!2465 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!2466 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!2467 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !568, line: 224, baseType: !7, size: 32, elements: !2468)
!2468 = !{!2469, !2470, !2471, !2472}
!2469 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!2470 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!2471 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!2472 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!2473 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !568, line: 242, baseType: !30, size: 32, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478}
!2475 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!2476 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!2477 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!2478 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!2479 = !{!281, !51, !2480, !54, !2481, !2482}
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !568, line: 220, baseType: !567)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !568, line: 247, baseType: !2473)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_DIR_T", file: !413, line: 60, baseType: !412)
!2483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2484, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2485, splitDebugInlining: false, nameTableKind: None)
!2484 = !DIFile(filename: "../../../../..//driver/board/mt76x7_hdk/ept/src/bsp_gpio_ept_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2485 = !{!61, !59}
!2486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2488, retainedTypes: !2489, splitDebugInlining: false, nameTableKind: None)
!2487 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/fatfs_read_write_file/src/sys_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2488 = !{!1063, !741, !679, !722, !2386}
!2489 = !{!2490, !30}
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !712, line: 204, baseType: !722)
!2491 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2492, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2493, splitDebugInlining: false, nameTableKind: None)
!2492 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2493 = !{!2494, !1822, !1800, !51, !2504}
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1818, line: 191, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1818, line: 181, size: 160, elements: !2497)
!2497 = !{!2498, !2499, !2501, !2502, !2503}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !2496, file: !1818, line: 184, baseType: !1822, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !2496, file: !1818, line: 185, baseType: !2500, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !2496, file: !1818, line: 186, baseType: !2500, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !2496, file: !1818, line: 187, baseType: !51, size: 32, offset: 96)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !2496, file: !1818, line: 188, baseType: !51, size: 32, offset: 128)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1818, line: 212, baseType: !2506)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1818, line: 205, size: 160, elements: !2507)
!2507 = !{!2508, !2509, !2510}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !2506, file: !1818, line: 208, baseType: !1800, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !2506, file: !1818, line: 209, baseType: !2494, size: 32, offset: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !2506, file: !1818, line: 210, baseType: !2511, size: 96, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1818, line: 200, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1818, line: 193, size: 96, elements: !2513)
!2513 = !{!2514, !2515, !2516}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !2512, file: !1818, line: 196, baseType: !1822, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !2512, file: !1818, line: 197, baseType: !2500, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !2512, file: !1818, line: 198, baseType: !2500, size: 32, offset: 64)
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2519, splitDebugInlining: false, nameTableKind: None)
!2518 = !DIFile(filename: "../../../../..//kernel/service/src/os_port_callback.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!2519 = !{!30, !491}
!2520 = !{!"Ubuntu clang version 14.0.6"}
!2521 = !{i32 7, !"Dwarf Version", i32 2}
!2522 = !{i32 2, !"Debug Info Version", i32 3}
!2523 = !{i32 1, !"wchar_size", i32 4}
!2524 = !{i32 1, !"min_enum_size", i32 4}
!2525 = !{i32 1, !"branch-target-enforcement", i32 0}
!2526 = !{i32 1, !"sign-return-address", i32 0}
!2527 = !{i32 1, !"sign-return-address-all", i32 0}
!2528 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2529 = !{i32 7, !"frame-pointer", i32 2}
!2530 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !3, file: !3, line: 86, type: !2531, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2533)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{!61}
!2533 = !{!2534, !2535}
!2534 = !DILocalVariable(name: "counter", scope: !2530, file: !3, line: 88, type: !61)
!2535 = !DILocalVariable(name: "ret", scope: !2530, file: !3, line: 89, type: !2536)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !21, line: 393, baseType: !20)
!2537 = !DILocation(line: 88, column: 5, scope: !2530)
!2538 = !DILocation(line: 0, scope: !2530)
!2539 = !DILocation(line: 88, column: 14, scope: !2530)
!2540 = !DILocation(line: 90, column: 11, scope: !2530)
!2541 = !DILocation(line: 91, column: 13, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 91, column: 9)
!2543 = !DILocation(line: 91, column: 9, scope: !2530)
!2544 = !DILocation(line: 92, column: 9, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2542, file: !3, line: 91, column: 35)
!2546 = !DILocation(line: 94, column: 12, scope: !2530)
!2547 = !DILocation(line: 95, column: 1, scope: !2530)
!2548 = !DILocation(line: 94, column: 5, scope: !2530)
!2549 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !3, file: !3, line: 97, type: !154, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2550)
!2550 = !{}
!2551 = !DILocation(line: 99, column: 20, scope: !2549)
!2552 = !DILocation(line: 100, column: 1, scope: !2549)
!2553 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !3, file: !3, line: 101, type: !154, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2550)
!2554 = !DILocation(line: 103, column: 20, scope: !2553)
!2555 = !DILocation(line: 104, column: 1, scope: !2553)
!2556 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !3, file: !3, line: 105, type: !154, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2550)
!2557 = !DILocation(line: 107, column: 25, scope: !2556)
!2558 = !DILocation(line: 108, column: 1, scope: !2556)
!2559 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !3, file: !3, line: 109, type: !154, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2550)
!2560 = !DILocation(line: 111, column: 25, scope: !2559)
!2561 = !DILocation(line: 112, column: 1, scope: !2559)
!2562 = distinct !DISubprogram(name: "get_sf_lock", scope: !3, file: !3, line: 114, type: !2563, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2565)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!355}
!2565 = !{!2566}
!2566 = !DILocalVariable(name: "savedMask", scope: !2562, file: !3, line: 116, type: !61)
!2567 = !DILocation(line: 117, column: 17, scope: !2562)
!2568 = !DILocation(line: 0, scope: !2562)
!2569 = !DILocation(line: 118, column: 9, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 118, column: 9)
!2571 = !DILocation(line: 118, column: 9, scope: !2562)
!2572 = !DILocation(line: 119, column: 17, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 118, column: 24)
!2574 = !DILocation(line: 121, column: 9, scope: !2573)
!2575 = !DILocation(line: 0, scope: !2570)
!2576 = !DILocation(line: 130, column: 1, scope: !2562)
!2577 = distinct !DISubprogram(name: "free_sf_lock", scope: !3, file: !3, line: 132, type: !154, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2578)
!2578 = !{!2579}
!2579 = !DILocalVariable(name: "savedMask", scope: !2577, file: !3, line: 134, type: !61)
!2580 = !DILocation(line: 135, column: 17, scope: !2577)
!2581 = !DILocation(line: 0, scope: !2577)
!2582 = !DILocation(line: 136, column: 9, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 136, column: 9)
!2584 = !DILocation(line: 136, column: 9, scope: !2577)
!2585 = !DILocation(line: 137, column: 17, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2583, file: !3, line: 136, column: 24)
!2587 = !DILocation(line: 138, column: 9, scope: !2586)
!2588 = !DILocation(line: 143, column: 1, scope: !2577)
!2589 = !DILocation(line: 140, column: 9, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2583, file: !3, line: 139, column: 12)
!2591 = !DILocation(line: 141, column: 9, scope: !2590)
!2592 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !3, file: !3, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2593)
!2593 = !{!2594}
!2594 = !DILocalVariable(name: "Result", scope: !2592, file: !3, line: 147, type: !355)
!2595 = !DILocation(line: 148, column: 5, scope: !2592)
!2596 = !DILocation(line: 149, column: 18, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 148, column: 8)
!2598 = !DILocation(line: 0, scope: !2592)
!2599 = !DILocation(line: 150, column: 21, scope: !2592)
!2600 = !DILocation(line: 150, column: 5, scope: !2597)
!2601 = distinct !{!2601, !2595, !2602}
!2602 = !DILocation(line: 150, column: 25, scope: !2592)
!2603 = !DILocation(line: 151, column: 1, scope: !2592)
!2604 = distinct !DISubprogram(name: "release_sf_lock", scope: !3, file: !3, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2550)
!2605 = !DILocation(line: 160, column: 5, scope: !2604)
!2606 = !DILocation(line: 161, column: 1, scope: !2604)
!2607 = distinct !DISubprogram(name: "flash_sfc_config", scope: !3, file: !3, line: 186, type: !2608, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2610)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!355, !54}
!2610 = !{!2611, !2612}
!2611 = !DILocalVariable(name: "mode", arg: 1, scope: !2607, file: !3, line: 186, type: !54)
!2612 = !DILocalVariable(name: "ret", scope: !2607, file: !3, line: 188, type: !588)
!2613 = !DILocation(line: 0, scope: !2607)
!2614 = !DILocation(line: 189, column: 5, scope: !2607)
!2615 = !DILocation(line: 190, column: 5, scope: !2607)
!2616 = !DILocation(line: 191, column: 9, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2607, file: !3, line: 191, column: 9)
!2618 = !DILocation(line: 191, column: 35, scope: !2617)
!2619 = !DILocation(line: 191, column: 9, scope: !2607)
!2620 = !DILocation(line: 193, column: 26, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 191, column: 44)
!2622 = !DILocation(line: 194, column: 5, scope: !2621)
!2623 = !DILocation(line: 195, column: 5, scope: !2607)
!2624 = !DILocation(line: 197, column: 5, scope: !2607)
!2625 = distinct !DISubprogram(name: "sfc_pad_config", scope: !3, file: !3, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2626)
!2626 = !{!2627}
!2627 = !DILocalVariable(name: "pad_io_setting", scope: !2625, file: !3, line: 166, type: !61)
!2628 = !DILocation(line: 0, scope: !2625)
!2629 = !DILocation(line: 168, column: 22, scope: !2625)
!2630 = !DILocation(line: 169, column: 20, scope: !2625)
!2631 = !DILocation(line: 170, column: 39, scope: !2625)
!2632 = !DILocation(line: 185, column: 1, scope: !2625)
!2633 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !3, file: !3, line: 200, type: !2634, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2636)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{null, !51, !500, !61}
!2636 = !{!2637, !2638, !2639}
!2637 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !2633, file: !3, line: 200, type: !51)
!2638 = !DILocalVariable(name: "buffer", arg: 2, scope: !2633, file: !3, line: 200, type: !500)
!2639 = !DILocalVariable(name: "length", arg: 3, scope: !2633, file: !3, line: 200, type: !61)
!2640 = !DILocation(line: 0, scope: !2633)
!2641 = !DILocation(line: 202, column: 5, scope: !2633)
!2642 = !DILocation(line: 203, column: 5, scope: !2633)
!2643 = !DILocation(line: 204, column: 5, scope: !2633)
!2644 = !DILocation(line: 205, column: 1, scope: !2633)
!2645 = distinct !DISubprogram(name: "flash_sfc_read", scope: !3, file: !3, line: 207, type: !2646, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2648)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!355, !61, !61, !500}
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654}
!2649 = !DILocalVariable(name: "address", arg: 1, scope: !2645, file: !3, line: 207, type: !61)
!2650 = !DILocalVariable(name: "length", arg: 2, scope: !2645, file: !3, line: 207, type: !61)
!2651 = !DILocalVariable(name: "buffer", arg: 3, scope: !2645, file: !3, line: 207, type: !500)
!2652 = !DILocalVariable(name: "ret", scope: !2645, file: !3, line: 209, type: !588)
!2653 = !DILocalVariable(name: "u4Redidual", scope: !2645, file: !3, line: 210, type: !159)
!2654 = !DILocalVariable(name: "u4ReadLen", scope: !2645, file: !3, line: 211, type: !159)
!2655 = !DILocation(line: 0, scope: !2645)
!2656 = !DILocation(line: 213, column: 5, scope: !2645)
!2657 = !DILocation(line: 214, column: 31, scope: !2645)
!2658 = !DILocation(line: 214, column: 5, scope: !2645)
!2659 = !DILocation(line: 216, column: 31, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 216, column: 13)
!2661 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 214, column: 46)
!2662 = !DILocation(line: 216, column: 13, scope: !2661)
!2663 = !DILocation(line: 217, column: 13, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 216, column: 48)
!2665 = !DILocation(line: 218, column: 9, scope: !2664)
!2666 = !DILocation(line: 219, column: 13, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 218, column: 55)
!2668 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 218, column: 20)
!2669 = !DILocation(line: 220, column: 9, scope: !2667)
!2670 = !DILocation(line: 222, column: 25, scope: !2661)
!2671 = !DILocation(line: 223, column: 27, scope: !2661)
!2672 = !DILocation(line: 224, column: 33, scope: !2661)
!2673 = distinct !{!2673, !2658, !2674}
!2674 = !DILocation(line: 225, column: 5, scope: !2645)
!2675 = !DILocation(line: 227, column: 27, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 227, column: 9)
!2677 = !DILocation(line: 227, column: 9, scope: !2645)
!2678 = !DILocation(line: 228, column: 9, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 227, column: 44)
!2680 = !DILocation(line: 229, column: 5, scope: !2679)
!2681 = !DILocation(line: 230, column: 9, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 229, column: 51)
!2683 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 229, column: 16)
!2684 = !DILocation(line: 231, column: 5, scope: !2682)
!2685 = !DILocation(line: 232, column: 22, scope: !2645)
!2686 = !DILocation(line: 233, column: 5, scope: !2645)
!2687 = !DILocation(line: 234, column: 5, scope: !2645)
!2688 = distinct !DISubprogram(name: "flash_sfc_write", scope: !3, file: !3, line: 238, type: !2689, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2692)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!355, !61, !61, !2691}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!2692 = !{!2693, !2694, !2695, !2696}
!2693 = !DILocalVariable(name: "address", arg: 1, scope: !2688, file: !3, line: 238, type: !61)
!2694 = !DILocalVariable(name: "length", arg: 2, scope: !2688, file: !3, line: 238, type: !61)
!2695 = !DILocalVariable(name: "buffer", arg: 3, scope: !2688, file: !3, line: 238, type: !2691)
!2696 = !DILocalVariable(name: "ret", scope: !2688, file: !3, line: 240, type: !588)
!2697 = !DILocation(line: 0, scope: !2688)
!2698 = !DILocation(line: 242, column: 5, scope: !2688)
!2699 = !DILocation(line: 244, column: 5, scope: !2688)
!2700 = !DILocation(line: 245, column: 5, scope: !2688)
!2701 = !DILocation(line: 247, column: 11, scope: !2688)
!2702 = !DILocation(line: 248, column: 22, scope: !2688)
!2703 = !DILocation(line: 250, column: 5, scope: !2688)
!2704 = !DILocation(line: 252, column: 5, scope: !2688)
!2705 = !DILocation(line: 253, column: 5, scope: !2688)
!2706 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !3, file: !3, line: 256, type: !2707, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2709)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!355, !61, !61}
!2709 = !{!2710, !2711, !2712}
!2710 = !DILocalVariable(name: "address", arg: 1, scope: !2706, file: !3, line: 256, type: !61)
!2711 = !DILocalVariable(name: "type", arg: 2, scope: !2706, file: !3, line: 256, type: !61)
!2712 = !DILocalVariable(name: "ret", scope: !2706, file: !3, line: 258, type: !588)
!2713 = !DILocation(line: 0, scope: !2706)
!2714 = !DILocation(line: 259, column: 5, scope: !2706)
!2715 = !DILocation(line: 261, column: 5, scope: !2706)
!2716 = !DILocation(line: 262, column: 5, scope: !2706)
!2717 = !DILocation(line: 264, column: 5, scope: !2706)
!2718 = !DILocation(line: 265, column: 5, scope: !2706)
!2719 = !DILocation(line: 267, column: 9, scope: !2706)
!2720 = !DILocation(line: 268, column: 22, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 268, column: 13)
!2722 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 267, column: 37)
!2723 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 267, column: 9)
!2724 = !DILocation(line: 268, column: 31, scope: !2721)
!2725 = !DILocation(line: 268, column: 13, scope: !2722)
!2726 = !DILocation(line: 275, column: 15, scope: !2722)
!2727 = !DILocation(line: 276, column: 5, scope: !2722)
!2728 = !DILocation(line: 277, column: 22, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 277, column: 13)
!2730 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 276, column: 45)
!2731 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 276, column: 16)
!2732 = !DILocation(line: 277, column: 32, scope: !2729)
!2733 = !DILocation(line: 277, column: 13, scope: !2730)
!2734 = !DILocation(line: 284, column: 15, scope: !2730)
!2735 = !DILocation(line: 285, column: 5, scope: !2730)
!2736 = !DILocation(line: 286, column: 22, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 286, column: 13)
!2738 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 285, column: 45)
!2739 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 285, column: 16)
!2740 = !DILocation(line: 286, column: 32, scope: !2737)
!2741 = !DILocation(line: 286, column: 13, scope: !2738)
!2742 = !DILocation(line: 293, column: 15, scope: !2738)
!2743 = !DILocation(line: 294, column: 5, scope: !2738)
!2744 = !DILocation(line: 301, column: 1, scope: !2706)
!2745 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !3, file: !3, line: 304, type: !154, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2746)
!2746 = !{!2747, !2748}
!2747 = !DILocalVariable(name: "sr", scope: !2745, file: !3, line: 306, type: !54)
!2748 = !DILocalVariable(name: "savedMask", scope: !2745, file: !3, line: 307, type: !61)
!2749 = !DILocation(line: 306, column: 5, scope: !2745)
!2750 = !DILocation(line: 0, scope: !2745)
!2751 = !DILocation(line: 306, column: 13, scope: !2745)
!2752 = !DILocation(line: 329, column: 17, scope: !2745)
!2753 = !DILocation(line: 330, column: 11, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 330, column: 9)
!2755 = !{i8 0, i8 2}
!2756 = !DILocation(line: 330, column: 30, scope: !2754)
!2757 = !DILocation(line: 331, column: 13, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 331, column: 13)
!2759 = distinct !DILexicalBlock(scope: !2754, file: !3, line: 330, column: 53)
!2760 = !DILocation(line: 331, column: 32, scope: !2758)
!2761 = !DILocation(line: 331, column: 13, scope: !2759)
!2762 = !DILocation(line: 333, column: 13, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 331, column: 37)
!2764 = !DILocation(line: 337, column: 19, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 337, column: 13)
!2766 = !DILocation(line: 337, column: 22, scope: !2765)
!2767 = !DILocation(line: 337, column: 15, scope: !2765)
!2768 = !DILocation(line: 337, column: 13, scope: !2759)
!2769 = !DILocation(line: 339, column: 13, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 337, column: 44)
!2771 = !DILocation(line: 341, column: 13, scope: !2770)
!2772 = !DILocation(line: 342, column: 21, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 342, column: 21)
!2774 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 341, column: 23)
!2775 = !DILocation(line: 342, column: 40, scope: !2773)
!2776 = !DILocation(line: 342, column: 21, scope: !2774)
!2777 = !DILocation(line: 344, column: 21, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 342, column: 45)
!2779 = !DILocation(line: 346, column: 27, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 346, column: 21)
!2781 = !DILocation(line: 346, column: 30, scope: !2780)
!2782 = !DILocation(line: 346, column: 23, scope: !2780)
!2783 = !DILocation(line: 346, column: 21, scope: !2774)
!2784 = distinct !{!2784, !2771, !2785}
!2785 = !DILocation(line: 349, column: 13, scope: !2770)
!2786 = !DILocation(line: 350, column: 13, scope: !2770)
!2787 = !DILocation(line: 352, column: 9, scope: !2770)
!2788 = !DILocation(line: 353, column: 13, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 352, column: 16)
!2790 = !DILocation(line: 356, column: 5, scope: !2745)
!2791 = !DILocation(line: 357, column: 1, scope: !2745)
!2792 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !3, file: !3, line: 359, type: !2793, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2795)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!355, !51, !61}
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2796 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2792, file: !3, line: 359, type: !51)
!2797 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2792, file: !3, line: 359, type: !61)
!2798 = !DILocalVariable(name: "result", scope: !2792, file: !3, line: 361, type: !355)
!2799 = !DILocalVariable(name: "savedMask", scope: !2792, file: !3, line: 362, type: !61)
!2800 = !DILocalVariable(name: "status_busy", scope: !2792, file: !3, line: 363, type: !54)
!2801 = !DILocalVariable(name: "status_suspend", scope: !2792, file: !3, line: 363, type: !54)
!2802 = !DILocalVariable(name: "sr", scope: !2792, file: !3, line: 364, type: !54)
!2803 = !DILocalVariable(name: "sr1", scope: !2792, file: !3, line: 365, type: !54)
!2804 = !DILocalVariable(name: "check_status", scope: !2805, file: !3, line: 383, type: !54)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 382, column: 49)
!2806 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 382, column: 9)
!2807 = !DILocation(line: 0, scope: !2792)
!2808 = !DILocation(line: 364, column: 5, scope: !2792)
!2809 = !DILocation(line: 364, column: 13, scope: !2792)
!2810 = !DILocation(line: 365, column: 5, scope: !2792)
!2811 = !DILocation(line: 365, column: 13, scope: !2792)
!2812 = !DILocation(line: 367, column: 9, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 367, column: 9)
!2814 = !DILocation(line: 367, column: 28, scope: !2813)
!2815 = !DILocation(line: 367, column: 9, scope: !2792)
!2816 = !DILocation(line: 368, column: 9, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 367, column: 33)
!2818 = !DILocation(line: 370, column: 23, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 369, column: 12)
!2820 = !DILocation(line: 373, column: 9, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 373, column: 9)
!2822 = !DILocation(line: 373, column: 30, scope: !2821)
!2823 = !DILocation(line: 373, column: 9, scope: !2792)
!2824 = !DILocation(line: 374, column: 9, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 373, column: 35)
!2826 = !DILocation(line: 376, column: 26, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 375, column: 12)
!2828 = !DILocation(line: 380, column: 17, scope: !2792)
!2829 = !DILocation(line: 382, column: 27, scope: !2806)
!2830 = !DILocation(line: 382, column: 11, scope: !2806)
!2831 = !DILocation(line: 382, column: 9, scope: !2792)
!2832 = !DILocation(line: 0, scope: !2805)
!2833 = !DILocation(line: 385, column: 13, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 385, column: 13)
!2835 = !DILocation(line: 385, column: 49, scope: !2834)
!2836 = !DILocation(line: 388, column: 17, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 388, column: 17)
!2838 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 385, column: 84)
!2839 = !DILocation(line: 388, column: 32, scope: !2837)
!2840 = !DILocation(line: 388, column: 17, scope: !2838)
!2841 = !DILocation(line: 399, column: 9, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 396, column: 56)
!2843 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 396, column: 20)
!2844 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 393, column: 20)
!2845 = !DILocation(line: 401, column: 28, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 399, column: 58)
!2847 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 399, column: 20)
!2848 = !DILocation(line: 402, column: 9, scope: !2846)
!2849 = !DILocation(line: 405, column: 20, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 405, column: 13)
!2851 = !DILocation(line: 405, column: 35, scope: !2850)
!2852 = !DILocation(line: 405, column: 16, scope: !2850)
!2853 = !DILocation(line: 405, column: 52, scope: !2850)
!2854 = !DILocation(line: 406, column: 21, scope: !2850)
!2855 = !DILocation(line: 406, column: 38, scope: !2850)
!2856 = !DILocation(line: 407, column: 13, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 406, column: 61)
!2858 = !DILocation(line: 410, column: 13, scope: !2857)
!2859 = !DILocation(line: 413, column: 9, scope: !2857)
!2860 = !DILocation(line: 414, column: 13, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 413, column: 16)
!2862 = !DILocation(line: 0, scope: !2850)
!2863 = !DILocation(line: 434, column: 5, scope: !2792)
!2864 = !DILocation(line: 0, scope: !2806)
!2865 = !DILocation(line: 436, column: 1, scope: !2792)
!2866 = !DILocation(line: 435, column: 5, scope: !2792)
!2867 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !3, file: !3, line: 439, type: !2868, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2870)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!355, !51, !61, !54}
!2870 = !{!2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878}
!2871 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2867, file: !3, line: 439, type: !51)
!2872 = !DILocalVariable(name: "addr", arg: 2, scope: !2867, file: !3, line: 439, type: !61)
!2873 = !DILocalVariable(name: "data", arg: 3, scope: !2867, file: !3, line: 439, type: !54)
!2874 = !DILocalVariable(name: "savedMask", scope: !2867, file: !3, line: 441, type: !61)
!2875 = !DILocalVariable(name: "result", scope: !2867, file: !3, line: 442, type: !355)
!2876 = !DILocalVariable(name: "check_data", scope: !2867, file: !3, line: 443, type: !54)
!2877 = !DILocalVariable(name: "status_busy", scope: !2867, file: !3, line: 444, type: !1802)
!2878 = !DILocalVariable(name: "sr", scope: !2867, file: !3, line: 445, type: !54)
!2879 = !DILocation(line: 0, scope: !2867)
!2880 = !DILocation(line: 445, column: 5, scope: !2867)
!2881 = !DILocation(line: 445, column: 23, scope: !2867)
!2882 = !DILocation(line: 448, column: 9, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 448, column: 9)
!2884 = !DILocation(line: 448, column: 28, scope: !2883)
!2885 = !DILocation(line: 448, column: 9, scope: !2867)
!2886 = !DILocation(line: 449, column: 9, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 448, column: 33)
!2888 = !DILocation(line: 451, column: 23, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 450, column: 12)
!2890 = !DILocation(line: 454, column: 17, scope: !2867)
!2891 = !DILocation(line: 457, column: 9, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 457, column: 9)
!2893 = !DILocation(line: 457, column: 9, scope: !2867)
!2894 = !DILocation(line: 458, column: 9, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 457, column: 28)
!2896 = !DILocation(line: 459, column: 9, scope: !2895)
!2897 = !DILocation(line: 460, column: 9, scope: !2895)
!2898 = !DILocation(line: 461, column: 9, scope: !2895)
!2899 = !DILocation(line: 462, column: 5, scope: !2895)
!2900 = !DILocation(line: 464, column: 33, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 464, column: 15)
!2902 = !DILocation(line: 464, column: 17, scope: !2901)
!2903 = !DILocation(line: 464, column: 15, scope: !2892)
!2904 = !DILocation(line: 465, column: 9, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 464, column: 55)
!2906 = !DILocation(line: 467, column: 23, scope: !2905)
!2907 = !DILocation(line: 467, column: 22, scope: !2905)
!2908 = !DILocation(line: 468, column: 24, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 468, column: 13)
!2910 = !DILocation(line: 474, column: 5, scope: !2867)
!2911 = !DILocation(line: 477, column: 1, scope: !2867)
!2912 = !DILocation(line: 476, column: 5, scope: !2867)
!2913 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !84, file: !84, line: 73, type: !2914, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2916)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{null, !139, !139, !69}
!2916 = !{!2917, !2918, !2919}
!2917 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2913, file: !84, line: 73, type: !139)
!2918 = !DILocalVariable(name: "countValue", arg: 2, scope: !2913, file: !84, line: 73, type: !139)
!2919 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !2913, file: !84, line: 73, type: !69)
!2920 = !DILocation(line: 0, scope: !2913)
!2921 = !DILocation(line: 75, column: 5, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2913, file: !84, line: 75, column: 5)
!2923 = !DILocation(line: 75, column: 5, scope: !2913)
!2924 = !DILocation(line: 75, column: 5, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2922, file: !84, line: 75, column: 5)
!2926 = distinct !{!2926, !2924, !2924}
!2927 = !DILocation(line: 77, column: 9, scope: !2913)
!2928 = !DILocation(line: 78, column: 30, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2930, file: !84, line: 77, column: 24)
!2930 = distinct !DILexicalBlock(scope: !2913, file: !84, line: 77, column: 9)
!2931 = !DILocation(line: 0, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2929, file: !84, line: 79, column: 13)
!2933 = !DILocation(line: 79, column: 13, scope: !2929)
!2934 = !DILocation(line: 80, column: 34, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2932, file: !84, line: 79, column: 37)
!2936 = !DILocation(line: 81, column: 9, scope: !2935)
!2937 = !DILocation(line: 82, column: 34, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2932, file: !84, line: 81, column: 16)
!2939 = !DILocation(line: 85, column: 30, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2941, file: !84, line: 84, column: 31)
!2941 = distinct !DILexicalBlock(scope: !2930, file: !84, line: 84, column: 16)
!2942 = !DILocation(line: 0, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2940, file: !84, line: 86, column: 13)
!2944 = !DILocation(line: 86, column: 13, scope: !2940)
!2945 = !DILocation(line: 87, column: 34, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2943, file: !84, line: 86, column: 37)
!2947 = !DILocation(line: 88, column: 9, scope: !2946)
!2948 = !DILocation(line: 89, column: 34, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2943, file: !84, line: 88, column: 16)
!2950 = !DILocation(line: 92, column: 1, scope: !2913)
!2951 = distinct !DISubprogram(name: "GPT_Start", scope: !84, file: !84, line: 94, type: !2952, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2954)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{null, !139}
!2954 = !{!2955}
!2955 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2951, file: !84, line: 94, type: !139)
!2956 = !DILocation(line: 0, scope: !2951)
!2957 = !DILocation(line: 96, column: 5, scope: !2951)
!2958 = !DILocation(line: 96, column: 5, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2960, file: !84, line: 96, column: 5)
!2960 = distinct !DILexicalBlock(scope: !2951, file: !84, line: 96, column: 5)
!2961 = distinct !{!2961, !2958, !2958}
!2962 = !DILocation(line: 99, column: 30, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !84, line: 98, column: 24)
!2964 = distinct !DILexicalBlock(scope: !2951, file: !84, line: 98, column: 9)
!2965 = !DILocation(line: 100, column: 9, scope: !2963)
!2966 = !DILocation(line: 101, column: 5, scope: !2963)
!2967 = !DILocation(line: 102, column: 30, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !84, line: 101, column: 31)
!2969 = distinct !DILexicalBlock(scope: !2964, file: !84, line: 101, column: 16)
!2970 = !DILocation(line: 103, column: 9, scope: !2968)
!2971 = !DILocation(line: 104, column: 5, scope: !2968)
!2972 = !DILocation(line: 105, column: 30, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !84, line: 104, column: 31)
!2974 = distinct !DILexicalBlock(scope: !2969, file: !84, line: 104, column: 16)
!2975 = !DILocation(line: 106, column: 5, scope: !2973)
!2976 = !DILocation(line: 108, column: 1, scope: !2951)
!2977 = distinct !DISubprogram(name: "GPT_Stop", scope: !84, file: !84, line: 110, type: !2952, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2978)
!2978 = !{!2979}
!2979 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2977, file: !84, line: 110, type: !139)
!2980 = !DILocation(line: 0, scope: !2977)
!2981 = !DILocation(line: 112, column: 9, scope: !2977)
!2982 = !DILocation(line: 113, column: 30, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !84, line: 112, column: 24)
!2984 = distinct !DILexicalBlock(scope: !2977, file: !84, line: 112, column: 9)
!2985 = !DILocation(line: 114, column: 30, scope: !2983)
!2986 = !DILocation(line: 115, column: 31, scope: !2983)
!2987 = !DILocation(line: 117, column: 5, scope: !2983)
!2988 = !DILocation(line: 118, column: 30, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !84, line: 117, column: 31)
!2990 = distinct !DILexicalBlock(scope: !2984, file: !84, line: 117, column: 16)
!2991 = !DILocation(line: 119, column: 30, scope: !2989)
!2992 = !DILocation(line: 120, column: 31, scope: !2989)
!2993 = !DILocation(line: 121, column: 5, scope: !2989)
!2994 = !DILocation(line: 122, column: 30, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !84, line: 121, column: 31)
!2996 = distinct !DILexicalBlock(scope: !2990, file: !84, line: 121, column: 16)
!2997 = !DILocation(line: 123, column: 5, scope: !2995)
!2998 = !DILocation(line: 124, column: 30, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !3000, file: !84, line: 123, column: 31)
!3000 = distinct !DILexicalBlock(scope: !2996, file: !84, line: 123, column: 16)
!3001 = !DILocation(line: 125, column: 5, scope: !2999)
!3002 = !DILocation(line: 128, column: 1, scope: !2977)
!3003 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !84, file: !84, line: 130, type: !905, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !3004)
!3004 = !{!3005, !3006}
!3005 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3003, file: !84, line: 130, type: !668)
!3006 = !DILocalVariable(name: "GPT_Status", scope: !3003, file: !84, line: 132, type: !653)
!3007 = !DILocation(line: 0, scope: !3003)
!3008 = !DILocation(line: 135, column: 18, scope: !3003)
!3009 = !DILocation(line: 136, column: 26, scope: !3003)
!3010 = !DILocation(line: 136, column: 24, scope: !3003)
!3011 = !DILocation(line: 138, column: 20, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3003, file: !84, line: 138, column: 9)
!3013 = !DILocation(line: 138, column: 9, scope: !3003)
!3014 = !DILocation(line: 141, column: 27, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3012, file: !84, line: 141, column: 16)
!3016 = !DILocation(line: 141, column: 16, scope: !3012)
!3017 = !DILocation(line: 0, scope: !3012)
!3018 = !DILocation(line: 145, column: 1, scope: !3003)
!3019 = distinct !DISubprogram(name: "GPT_init", scope: !84, file: !84, line: 147, type: !3020, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !3022)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{null, !139, !139, !153}
!3022 = !{!3023, !3024, !3025}
!3023 = !DILocalVariable(name: "timerNum", arg: 1, scope: !3019, file: !84, line: 147, type: !139)
!3024 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !3019, file: !84, line: 147, type: !139)
!3025 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !3019, file: !84, line: 147, type: !153)
!3026 = !DILocation(line: 0, scope: !3019)
!3027 = !DILocation(line: 149, column: 5, scope: !3019)
!3028 = !DILocation(line: 149, column: 5, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !84, line: 149, column: 5)
!3030 = distinct !DILexicalBlock(scope: !3019, file: !84, line: 149, column: 5)
!3031 = distinct !{!3031, !3028, !3028}
!3032 = !DILocation(line: 149, column: 5, scope: !3030)
!3033 = !DILocation(line: 151, column: 23, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3019, file: !84, line: 151, column: 9)
!3035 = !DILocation(line: 152, column: 9, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3034, file: !84, line: 151, column: 41)
!3037 = !DILocation(line: 153, column: 9, scope: !3036)
!3038 = !DILocation(line: 154, column: 9, scope: !3036)
!3039 = !DILocation(line: 155, column: 5, scope: !3036)
!3040 = !DILocation(line: 157, column: 9, scope: !3019)
!3041 = !DILocation(line: 158, column: 37, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !84, line: 157, column: 24)
!3043 = distinct !DILexicalBlock(scope: !3019, file: !84, line: 157, column: 9)
!3044 = !DILocation(line: 159, column: 30, scope: !3042)
!3045 = !DILocation(line: 160, column: 45, scope: !3042)
!3046 = !DILocation(line: 160, column: 30, scope: !3042)
!3047 = !DILocation(line: 161, column: 5, scope: !3042)
!3048 = !DILocation(line: 162, column: 37, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !84, line: 161, column: 31)
!3050 = distinct !DILexicalBlock(scope: !3043, file: !84, line: 161, column: 16)
!3051 = !DILocation(line: 163, column: 30, scope: !3049)
!3052 = !DILocation(line: 164, column: 45, scope: !3049)
!3053 = !DILocation(line: 164, column: 30, scope: !3049)
!3054 = !DILocation(line: 165, column: 5, scope: !3049)
!3055 = !DILocation(line: 166, column: 59, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3057, file: !84, line: 165, column: 31)
!3057 = distinct !DILexicalBlock(scope: !3050, file: !84, line: 165, column: 16)
!3058 = !DILocation(line: 166, column: 45, scope: !3056)
!3059 = !DILocation(line: 166, column: 30, scope: !3056)
!3060 = !DILocation(line: 167, column: 5, scope: !3056)
!3061 = !DILocation(line: 168, column: 59, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !84, line: 167, column: 31)
!3063 = distinct !DILexicalBlock(scope: !3057, file: !84, line: 167, column: 16)
!3064 = !DILocation(line: 168, column: 45, scope: !3062)
!3065 = !DILocation(line: 168, column: 30, scope: !3062)
!3066 = !DILocation(line: 169, column: 30, scope: !3062)
!3067 = !DILocation(line: 170, column: 5, scope: !3062)
!3068 = !DILocation(line: 171, column: 1, scope: !3019)
!3069 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !84, file: !84, line: 173, type: !3070, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !3072)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!139, !139}
!3072 = !{!3073, !3074}
!3073 = !DILocalVariable(name: "timerNum", arg: 1, scope: !3069, file: !84, line: 173, type: !139)
!3074 = !DILocalVariable(name: "current_count", scope: !3069, file: !84, line: 175, type: !139)
!3075 = !DILocation(line: 0, scope: !3069)
!3076 = !DILocation(line: 177, column: 5, scope: !3069)
!3077 = !DILocation(line: 177, column: 5, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !84, line: 177, column: 5)
!3079 = distinct !DILexicalBlock(scope: !3069, file: !84, line: 177, column: 5)
!3080 = distinct !{!3080, !3077, !3077}
!3081 = !DILocation(line: 183, column: 5, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !84, line: 181, column: 31)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !84, line: 181, column: 16)
!3084 = distinct !DILexicalBlock(scope: !3069, file: !84, line: 179, column: 9)
!3085 = !DILocation(line: 185, column: 5, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !84, line: 183, column: 31)
!3087 = distinct !DILexicalBlock(scope: !3083, file: !84, line: 183, column: 16)
!3088 = !DILocation(line: 187, column: 5, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3090, file: !84, line: 185, column: 31)
!3090 = distinct !DILexicalBlock(scope: !3087, file: !84, line: 185, column: 16)
!3091 = !DILocation(line: 0, scope: !3084)
!3092 = !DILocation(line: 189, column: 5, scope: !3069)
!3093 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !84, file: !84, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2550)
!3094 = !DILocation(line: 195, column: 5, scope: !3093)
!3095 = !DILocation(line: 196, column: 1, scope: !3093)
!3096 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !84, file: !84, line: 198, type: !154, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2550)
!3097 = !DILocation(line: 200, column: 5, scope: !3096)
!3098 = !DILocation(line: 201, column: 1, scope: !3096)
!3099 = distinct !DISubprogram(name: "halGPIO_ConfDirection", scope: !165, file: !165, line: 54, type: !3100, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3102)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!588, !159, !403}
!3102 = !{!3103, !3104, !3105, !3107}
!3103 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3099, file: !165, line: 54, type: !159)
!3104 = !DILocalVariable(name: "outEnable", arg: 2, scope: !3099, file: !165, line: 54, type: !403)
!3105 = !DILocalVariable(name: "no", scope: !3099, file: !165, line: 57, type: !3106)
!3106 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !87, line: 60, baseType: !654)
!3107 = !DILocalVariable(name: "remainder", scope: !3099, file: !165, line: 58, type: !3106)
!3108 = !DILocation(line: 0, scope: !3099)
!3109 = !DILocation(line: 59, column: 19, scope: !3099)
!3110 = !DILocation(line: 60, column: 17, scope: !3099)
!3111 = !DILocation(line: 61, column: 5, scope: !3099)
!3112 = !DILocation(line: 65, column: 27, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3114, file: !165, line: 65, column: 17)
!3114 = distinct !DILexicalBlock(scope: !3099, file: !165, line: 61, column: 17)
!3115 = !DILocation(line: 0, scope: !3113)
!3116 = !DILocation(line: 65, column: 17, scope: !3114)
!3117 = !DILocation(line: 66, column: 21, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3113, file: !165, line: 65, column: 33)
!3119 = !DILocation(line: 67, column: 73, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !165, line: 66, column: 38)
!3121 = distinct !DILexicalBlock(scope: !3118, file: !165, line: 66, column: 21)
!3122 = !DILocation(line: 67, column: 69, scope: !3120)
!3123 = !DILocation(line: 67, column: 66, scope: !3120)
!3124 = !DILocation(line: 68, column: 17, scope: !3120)
!3125 = !DILocation(line: 68, column: 28, scope: !3121)
!3126 = !DILocation(line: 69, column: 77, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3128, file: !165, line: 68, column: 45)
!3128 = distinct !DILexicalBlock(scope: !3121, file: !165, line: 68, column: 28)
!3129 = !DILocation(line: 70, column: 77, scope: !3127)
!3130 = !DILocation(line: 71, column: 17, scope: !3127)
!3131 = !DILocation(line: 72, column: 77, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !165, line: 71, column: 45)
!3133 = distinct !DILexicalBlock(scope: !3128, file: !165, line: 71, column: 28)
!3134 = !DILocation(line: 73, column: 77, scope: !3132)
!3135 = !DILocation(line: 74, column: 17, scope: !3132)
!3136 = !DILocation(line: 75, column: 79, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !165, line: 74, column: 45)
!3138 = distinct !DILexicalBlock(scope: !3133, file: !165, line: 74, column: 28)
!3139 = !DILocation(line: 76, column: 79, scope: !3137)
!3140 = !DILocation(line: 77, column: 17, scope: !3137)
!3141 = !DILocation(line: 78, column: 79, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3143, file: !165, line: 77, column: 45)
!3143 = distinct !DILexicalBlock(scope: !3138, file: !165, line: 77, column: 28)
!3144 = !DILocation(line: 79, column: 79, scope: !3142)
!3145 = !DILocation(line: 80, column: 17, scope: !3142)
!3146 = !DILocation(line: 81, column: 79, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3148, file: !165, line: 80, column: 45)
!3148 = distinct !DILexicalBlock(scope: !3143, file: !165, line: 80, column: 28)
!3149 = !DILocation(line: 82, column: 79, scope: !3147)
!3150 = !DILocation(line: 83, column: 17, scope: !3147)
!3151 = !DILocation(line: 85, column: 17, scope: !3118)
!3152 = !DILocation(line: 86, column: 13, scope: !3118)
!3153 = !DILocation(line: 88, column: 21, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3113, file: !165, line: 86, column: 20)
!3155 = !DILocation(line: 89, column: 72, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !165, line: 88, column: 38)
!3157 = distinct !DILexicalBlock(scope: !3154, file: !165, line: 88, column: 21)
!3158 = !DILocation(line: 89, column: 66, scope: !3156)
!3159 = !DILocation(line: 90, column: 17, scope: !3156)
!3160 = !DILocation(line: 90, column: 28, scope: !3157)
!3161 = !DILocation(line: 91, column: 77, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3163, file: !165, line: 90, column: 45)
!3163 = distinct !DILexicalBlock(scope: !3157, file: !165, line: 90, column: 28)
!3164 = !DILocation(line: 92, column: 17, scope: !3162)
!3165 = !DILocation(line: 93, column: 77, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !165, line: 92, column: 45)
!3167 = distinct !DILexicalBlock(scope: !3163, file: !165, line: 92, column: 28)
!3168 = !DILocation(line: 94, column: 17, scope: !3166)
!3169 = !DILocation(line: 95, column: 79, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3171, file: !165, line: 94, column: 45)
!3171 = distinct !DILexicalBlock(scope: !3167, file: !165, line: 94, column: 28)
!3172 = !DILocation(line: 96, column: 17, scope: !3170)
!3173 = !DILocation(line: 97, column: 79, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3175, file: !165, line: 96, column: 45)
!3175 = distinct !DILexicalBlock(scope: !3171, file: !165, line: 96, column: 28)
!3176 = !DILocation(line: 98, column: 17, scope: !3174)
!3177 = !DILocation(line: 99, column: 79, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !165, line: 98, column: 45)
!3179 = distinct !DILexicalBlock(scope: !3175, file: !165, line: 98, column: 28)
!3180 = !DILocation(line: 100, column: 17, scope: !3178)
!3181 = !DILocation(line: 103, column: 17, scope: !3154)
!3182 = !DILocation(line: 109, column: 27, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3114, file: !165, line: 109, column: 17)
!3184 = !DILocation(line: 0, scope: !3183)
!3185 = !DILocation(line: 109, column: 17, scope: !3114)
!3186 = !DILocation(line: 110, column: 21, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3183, file: !165, line: 109, column: 33)
!3188 = !DILocation(line: 111, column: 73, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3190, file: !165, line: 110, column: 36)
!3190 = distinct !DILexicalBlock(scope: !3187, file: !165, line: 110, column: 21)
!3191 = !DILocation(line: 111, column: 69, scope: !3189)
!3192 = !DILocation(line: 111, column: 66, scope: !3189)
!3193 = !DILocation(line: 112, column: 17, scope: !3189)
!3194 = !DILocation(line: 113, column: 79, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3190, file: !165, line: 112, column: 24)
!3196 = !DILocation(line: 114, column: 79, scope: !3195)
!3197 = !DILocation(line: 117, column: 17, scope: !3187)
!3198 = !DILocation(line: 118, column: 13, scope: !3187)
!3199 = !DILocation(line: 120, column: 21, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3183, file: !165, line: 118, column: 20)
!3201 = !DILocation(line: 121, column: 72, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3203, file: !165, line: 120, column: 36)
!3203 = distinct !DILexicalBlock(scope: !3200, file: !165, line: 120, column: 21)
!3204 = !DILocation(line: 121, column: 66, scope: !3202)
!3205 = !DILocation(line: 122, column: 17, scope: !3202)
!3206 = !DILocation(line: 123, column: 79, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3203, file: !165, line: 122, column: 24)
!3208 = !DILocation(line: 126, column: 17, scope: !3200)
!3209 = !DILocation(line: 133, column: 1, scope: !3099)
!3210 = distinct !DISubprogram(name: "halGPO_Write", scope: !165, file: !165, line: 136, type: !3100, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3211)
!3211 = !{!3212, !3213, !3214, !3215}
!3212 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3210, file: !165, line: 136, type: !159)
!3213 = !DILocalVariable(name: "writeValue", arg: 2, scope: !3210, file: !165, line: 136, type: !403)
!3214 = !DILocalVariable(name: "no", scope: !3210, file: !165, line: 138, type: !3106)
!3215 = !DILocalVariable(name: "remainder", scope: !3210, file: !165, line: 139, type: !3106)
!3216 = !DILocation(line: 0, scope: !3210)
!3217 = !DILocation(line: 140, column: 19, scope: !3210)
!3218 = !DILocation(line: 141, column: 17, scope: !3210)
!3219 = !DILocation(line: 142, column: 5, scope: !3210)
!3220 = !DILocation(line: 145, column: 17, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !165, line: 145, column: 17)
!3222 = distinct !DILexicalBlock(scope: !3210, file: !165, line: 142, column: 17)
!3223 = !DILocation(line: 0, scope: !3221)
!3224 = !DILocation(line: 145, column: 17, scope: !3222)
!3225 = !DILocation(line: 146, column: 17, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !165, line: 145, column: 29)
!3227 = !DILocation(line: 147, column: 13, scope: !3226)
!3228 = !DILocation(line: 148, column: 17, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3221, file: !165, line: 147, column: 20)
!3230 = !DILocation(line: 153, column: 17, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3222, file: !165, line: 153, column: 17)
!3232 = !DILocation(line: 0, scope: !3231)
!3233 = !DILocation(line: 153, column: 17, scope: !3222)
!3234 = !DILocation(line: 154, column: 17, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3231, file: !165, line: 153, column: 29)
!3236 = !DILocation(line: 155, column: 13, scope: !3235)
!3237 = !DILocation(line: 156, column: 17, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3231, file: !165, line: 155, column: 20)
!3239 = !DILocation(line: 163, column: 1, scope: !3210)
!3240 = distinct !DISubprogram(name: "halgetGPIO_DOUT", scope: !165, file: !165, line: 169, type: !3241, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3243)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!403, !159}
!3243 = !{!3244, !3245, !3246, !3247}
!3244 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3240, file: !165, line: 169, type: !159)
!3245 = !DILocalVariable(name: "no", scope: !3240, file: !165, line: 171, type: !3106)
!3246 = !DILocalVariable(name: "remainder", scope: !3240, file: !165, line: 172, type: !3106)
!3247 = !DILocalVariable(name: "dout", scope: !3240, file: !165, line: 175, type: !403)
!3248 = !DILocation(line: 0, scope: !3240)
!3249 = !DILocation(line: 173, column: 19, scope: !3240)
!3250 = !DILocation(line: 174, column: 17, scope: !3240)
!3251 = !DILocation(line: 177, column: 5, scope: !3240)
!3252 = !DILocation(line: 183, column: 13, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3240, file: !165, line: 177, column: 17)
!3254 = !DILocation(line: 0, scope: !3253)
!3255 = !DILocation(line: 187, column: 5, scope: !3240)
!3256 = !DILocation(line: 188, column: 1, scope: !3240)
!3257 = distinct !DISubprogram(name: "halgetGPIO_DIN", scope: !165, file: !165, line: 189, type: !3241, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3258)
!3258 = !{!3259, !3260, !3261, !3262}
!3259 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3257, file: !165, line: 189, type: !159)
!3260 = !DILocalVariable(name: "no", scope: !3257, file: !165, line: 191, type: !3106)
!3261 = !DILocalVariable(name: "remainder", scope: !3257, file: !165, line: 192, type: !3106)
!3262 = !DILocalVariable(name: "din", scope: !3257, file: !165, line: 195, type: !403)
!3263 = !DILocation(line: 0, scope: !3257)
!3264 = !DILocation(line: 193, column: 19, scope: !3257)
!3265 = !DILocation(line: 194, column: 17, scope: !3257)
!3266 = !DILocation(line: 196, column: 5, scope: !3257)
!3267 = !DILocation(line: 203, column: 13, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3257, file: !165, line: 196, column: 17)
!3269 = !DILocation(line: 0, scope: !3268)
!3270 = !DILocation(line: 208, column: 5, scope: !3257)
!3271 = !DILocation(line: 209, column: 1, scope: !3257)
!3272 = distinct !DISubprogram(name: "halgetGPIO_OutEnable", scope: !165, file: !165, line: 210, type: !3241, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3273)
!3273 = !{!3274, !3275, !3276, !3277}
!3274 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3272, file: !165, line: 210, type: !159)
!3275 = !DILocalVariable(name: "no", scope: !3272, file: !165, line: 212, type: !3106)
!3276 = !DILocalVariable(name: "remainder", scope: !3272, file: !165, line: 213, type: !3106)
!3277 = !DILocalVariable(name: "outEnable", scope: !3272, file: !165, line: 216, type: !403)
!3278 = !DILocation(line: 0, scope: !3272)
!3279 = !DILocation(line: 214, column: 19, scope: !3272)
!3280 = !DILocation(line: 215, column: 17, scope: !3272)
!3281 = !DILocation(line: 218, column: 5, scope: !3272)
!3282 = !DILocation(line: 224, column: 13, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3272, file: !165, line: 218, column: 17)
!3284 = !DILocation(line: 0, scope: !3283)
!3285 = !DILocation(line: 228, column: 5, scope: !3272)
!3286 = !DILocation(line: 229, column: 1, scope: !3272)
!3287 = distinct !DISubprogram(name: "halGPIO_PullUp_SET", scope: !165, file: !165, line: 232, type: !3288, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!588, !159}
!3290 = !{!3291, !3292, !3293}
!3291 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3287, file: !165, line: 232, type: !159)
!3292 = !DILocalVariable(name: "no", scope: !3287, file: !165, line: 234, type: !3106)
!3293 = !DILocalVariable(name: "remainder", scope: !3287, file: !165, line: 235, type: !3106)
!3294 = !DILocation(line: 0, scope: !3287)
!3295 = !DILocation(line: 236, column: 19, scope: !3287)
!3296 = !DILocation(line: 237, column: 17, scope: !3287)
!3297 = !DILocation(line: 238, column: 5, scope: !3287)
!3298 = !DILocation(line: 239, column: 5, scope: !3287)
!3299 = !DILocation(line: 241, column: 27, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !165, line: 241, column: 17)
!3301 = distinct !DILexicalBlock(scope: !3287, file: !165, line: 239, column: 17)
!3302 = !DILocation(line: 241, column: 17, scope: !3301)
!3303 = !DILocation(line: 241, column: 17, scope: !3300)
!3304 = !DILocation(line: 242, column: 17, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !165, line: 241, column: 34)
!3306 = !DILocation(line: 243, column: 13, scope: !3305)
!3307 = !DILocation(line: 243, column: 24, scope: !3300)
!3308 = !DILocation(line: 244, column: 73, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !165, line: 243, column: 41)
!3310 = distinct !DILexicalBlock(scope: !3300, file: !165, line: 243, column: 24)
!3311 = !DILocation(line: 245, column: 73, scope: !3309)
!3312 = !DILocation(line: 246, column: 13, scope: !3309)
!3313 = !DILocation(line: 247, column: 73, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !165, line: 246, column: 41)
!3315 = distinct !DILexicalBlock(scope: !3310, file: !165, line: 246, column: 24)
!3316 = !DILocation(line: 248, column: 73, scope: !3314)
!3317 = !DILocation(line: 249, column: 13, scope: !3314)
!3318 = !DILocation(line: 250, column: 75, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !165, line: 249, column: 41)
!3320 = distinct !DILexicalBlock(scope: !3315, file: !165, line: 249, column: 24)
!3321 = !DILocation(line: 251, column: 75, scope: !3319)
!3322 = !DILocation(line: 252, column: 13, scope: !3319)
!3323 = !DILocation(line: 253, column: 75, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !165, line: 252, column: 41)
!3325 = distinct !DILexicalBlock(scope: !3320, file: !165, line: 252, column: 24)
!3326 = !DILocation(line: 254, column: 75, scope: !3324)
!3327 = !DILocation(line: 255, column: 13, scope: !3324)
!3328 = !DILocation(line: 256, column: 75, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !165, line: 255, column: 41)
!3330 = distinct !DILexicalBlock(scope: !3325, file: !165, line: 255, column: 24)
!3331 = !DILocation(line: 257, column: 75, scope: !3329)
!3332 = !DILocation(line: 258, column: 13, scope: !3329)
!3333 = !DILocation(line: 261, column: 18, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3301, file: !165, line: 261, column: 17)
!3335 = !DILocation(line: 261, column: 17, scope: !3301)
!3336 = !DILocation(line: 262, column: 75, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3334, file: !165, line: 261, column: 29)
!3338 = !DILocation(line: 263, column: 75, scope: !3337)
!3339 = !DILocation(line: 264, column: 13, scope: !3337)
!3340 = !DILocation(line: 265, column: 17, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3334, file: !165, line: 264, column: 20)
!3342 = !DILocation(line: 272, column: 1, scope: !3287)
!3343 = distinct !DISubprogram(name: "halGPIO_PullDown_RESET", scope: !165, file: !165, line: 359, type: !3288, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3344)
!3344 = !{!3345, !3346, !3347}
!3345 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3343, file: !165, line: 359, type: !159)
!3346 = !DILocalVariable(name: "no", scope: !3343, file: !165, line: 362, type: !3106)
!3347 = !DILocalVariable(name: "remainder", scope: !3343, file: !165, line: 363, type: !3106)
!3348 = !DILocation(line: 0, scope: !3343)
!3349 = !DILocation(line: 364, column: 19, scope: !3343)
!3350 = !DILocation(line: 365, column: 17, scope: !3343)
!3351 = !DILocation(line: 367, column: 5, scope: !3343)
!3352 = !DILocation(line: 369, column: 27, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !165, line: 369, column: 17)
!3354 = distinct !DILexicalBlock(scope: !3343, file: !165, line: 367, column: 17)
!3355 = !DILocation(line: 369, column: 17, scope: !3354)
!3356 = !DILocation(line: 369, column: 17, scope: !3353)
!3357 = !DILocation(line: 370, column: 17, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3353, file: !165, line: 369, column: 34)
!3359 = !DILocation(line: 371, column: 13, scope: !3358)
!3360 = !DILocation(line: 371, column: 24, scope: !3353)
!3361 = !DILocation(line: 372, column: 73, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !165, line: 371, column: 41)
!3363 = distinct !DILexicalBlock(scope: !3353, file: !165, line: 371, column: 24)
!3364 = !DILocation(line: 373, column: 73, scope: !3362)
!3365 = !DILocation(line: 374, column: 13, scope: !3362)
!3366 = !DILocation(line: 375, column: 73, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !165, line: 374, column: 41)
!3368 = distinct !DILexicalBlock(scope: !3363, file: !165, line: 374, column: 24)
!3369 = !DILocation(line: 376, column: 73, scope: !3367)
!3370 = !DILocation(line: 377, column: 13, scope: !3367)
!3371 = !DILocation(line: 378, column: 75, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !165, line: 377, column: 41)
!3373 = distinct !DILexicalBlock(scope: !3368, file: !165, line: 377, column: 24)
!3374 = !DILocation(line: 379, column: 75, scope: !3372)
!3375 = !DILocation(line: 380, column: 13, scope: !3372)
!3376 = !DILocation(line: 381, column: 75, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !165, line: 380, column: 41)
!3378 = distinct !DILexicalBlock(scope: !3373, file: !165, line: 380, column: 24)
!3379 = !DILocation(line: 382, column: 75, scope: !3377)
!3380 = !DILocation(line: 383, column: 13, scope: !3377)
!3381 = !DILocation(line: 384, column: 75, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !165, line: 383, column: 41)
!3383 = distinct !DILexicalBlock(scope: !3378, file: !165, line: 383, column: 24)
!3384 = !DILocation(line: 385, column: 75, scope: !3382)
!3385 = !DILocation(line: 386, column: 13, scope: !3382)
!3386 = !DILocation(line: 389, column: 18, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3354, file: !165, line: 389, column: 17)
!3388 = !DILocation(line: 389, column: 17, scope: !3354)
!3389 = !DILocation(line: 390, column: 75, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3387, file: !165, line: 389, column: 29)
!3391 = !DILocation(line: 391, column: 75, scope: !3390)
!3392 = !DILocation(line: 392, column: 13, scope: !3390)
!3393 = !DILocation(line: 393, column: 17, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3387, file: !165, line: 392, column: 20)
!3395 = !DILocation(line: 401, column: 1, scope: !3343)
!3396 = distinct !DISubprogram(name: "halGPIO_PullUp_RESET", scope: !165, file: !165, line: 274, type: !3288, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3397)
!3397 = !{!3398, !3399, !3400}
!3398 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3396, file: !165, line: 274, type: !159)
!3399 = !DILocalVariable(name: "no", scope: !3396, file: !165, line: 276, type: !3106)
!3400 = !DILocalVariable(name: "remainder", scope: !3396, file: !165, line: 277, type: !3106)
!3401 = !DILocation(line: 0, scope: !3396)
!3402 = !DILocation(line: 278, column: 19, scope: !3396)
!3403 = !DILocation(line: 279, column: 17, scope: !3396)
!3404 = !DILocation(line: 281, column: 5, scope: !3396)
!3405 = !DILocation(line: 283, column: 27, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3407, file: !165, line: 283, column: 17)
!3407 = distinct !DILexicalBlock(scope: !3396, file: !165, line: 281, column: 17)
!3408 = !DILocation(line: 283, column: 17, scope: !3407)
!3409 = !DILocation(line: 283, column: 17, scope: !3406)
!3410 = !DILocation(line: 284, column: 17, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3406, file: !165, line: 283, column: 34)
!3412 = !DILocation(line: 285, column: 13, scope: !3411)
!3413 = !DILocation(line: 285, column: 24, scope: !3406)
!3414 = !DILocation(line: 286, column: 73, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !165, line: 285, column: 41)
!3416 = distinct !DILexicalBlock(scope: !3406, file: !165, line: 285, column: 24)
!3417 = !DILocation(line: 287, column: 73, scope: !3415)
!3418 = !DILocation(line: 288, column: 13, scope: !3415)
!3419 = !DILocation(line: 289, column: 73, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !165, line: 288, column: 41)
!3421 = distinct !DILexicalBlock(scope: !3416, file: !165, line: 288, column: 24)
!3422 = !DILocation(line: 290, column: 73, scope: !3420)
!3423 = !DILocation(line: 291, column: 13, scope: !3420)
!3424 = !DILocation(line: 292, column: 75, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !165, line: 291, column: 41)
!3426 = distinct !DILexicalBlock(scope: !3421, file: !165, line: 291, column: 24)
!3427 = !DILocation(line: 293, column: 75, scope: !3425)
!3428 = !DILocation(line: 294, column: 13, scope: !3425)
!3429 = !DILocation(line: 295, column: 75, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !165, line: 294, column: 41)
!3431 = distinct !DILexicalBlock(scope: !3426, file: !165, line: 294, column: 24)
!3432 = !DILocation(line: 296, column: 75, scope: !3430)
!3433 = !DILocation(line: 297, column: 13, scope: !3430)
!3434 = !DILocation(line: 298, column: 75, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !165, line: 297, column: 41)
!3436 = distinct !DILexicalBlock(scope: !3431, file: !165, line: 297, column: 24)
!3437 = !DILocation(line: 299, column: 75, scope: !3435)
!3438 = !DILocation(line: 300, column: 13, scope: !3435)
!3439 = !DILocation(line: 303, column: 18, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3407, file: !165, line: 303, column: 17)
!3441 = !DILocation(line: 303, column: 17, scope: !3407)
!3442 = !DILocation(line: 304, column: 75, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3440, file: !165, line: 303, column: 29)
!3444 = !DILocation(line: 305, column: 75, scope: !3443)
!3445 = !DILocation(line: 306, column: 13, scope: !3443)
!3446 = !DILocation(line: 307, column: 17, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3440, file: !165, line: 306, column: 20)
!3448 = !DILocation(line: 314, column: 1, scope: !3396)
!3449 = distinct !DISubprogram(name: "halGPIO_PullDown_SET", scope: !165, file: !165, line: 316, type: !3288, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3450)
!3450 = !{!3451, !3452, !3453}
!3451 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3449, file: !165, line: 316, type: !159)
!3452 = !DILocalVariable(name: "no", scope: !3449, file: !165, line: 318, type: !3106)
!3453 = !DILocalVariable(name: "remainder", scope: !3449, file: !165, line: 319, type: !3106)
!3454 = !DILocation(line: 0, scope: !3449)
!3455 = !DILocation(line: 320, column: 19, scope: !3449)
!3456 = !DILocation(line: 321, column: 17, scope: !3449)
!3457 = !DILocation(line: 322, column: 5, scope: !3449)
!3458 = !DILocation(line: 323, column: 5, scope: !3449)
!3459 = !DILocation(line: 325, column: 27, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !165, line: 325, column: 17)
!3461 = distinct !DILexicalBlock(scope: !3449, file: !165, line: 323, column: 17)
!3462 = !DILocation(line: 325, column: 17, scope: !3461)
!3463 = !DILocation(line: 325, column: 17, scope: !3460)
!3464 = !DILocation(line: 326, column: 17, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3460, file: !165, line: 325, column: 34)
!3466 = !DILocation(line: 327, column: 13, scope: !3465)
!3467 = !DILocation(line: 327, column: 24, scope: !3460)
!3468 = !DILocation(line: 328, column: 73, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !165, line: 327, column: 41)
!3470 = distinct !DILexicalBlock(scope: !3460, file: !165, line: 327, column: 24)
!3471 = !DILocation(line: 329, column: 73, scope: !3469)
!3472 = !DILocation(line: 330, column: 13, scope: !3469)
!3473 = !DILocation(line: 331, column: 73, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !165, line: 330, column: 41)
!3475 = distinct !DILexicalBlock(scope: !3470, file: !165, line: 330, column: 24)
!3476 = !DILocation(line: 332, column: 73, scope: !3474)
!3477 = !DILocation(line: 333, column: 13, scope: !3474)
!3478 = !DILocation(line: 334, column: 75, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !165, line: 333, column: 41)
!3480 = distinct !DILexicalBlock(scope: !3475, file: !165, line: 333, column: 24)
!3481 = !DILocation(line: 335, column: 75, scope: !3479)
!3482 = !DILocation(line: 336, column: 13, scope: !3479)
!3483 = !DILocation(line: 337, column: 75, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !165, line: 336, column: 41)
!3485 = distinct !DILexicalBlock(scope: !3480, file: !165, line: 336, column: 24)
!3486 = !DILocation(line: 338, column: 75, scope: !3484)
!3487 = !DILocation(line: 339, column: 13, scope: !3484)
!3488 = !DILocation(line: 340, column: 75, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !165, line: 339, column: 41)
!3490 = distinct !DILexicalBlock(scope: !3485, file: !165, line: 339, column: 24)
!3491 = !DILocation(line: 341, column: 75, scope: !3489)
!3492 = !DILocation(line: 342, column: 13, scope: !3489)
!3493 = !DILocation(line: 345, column: 18, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3461, file: !165, line: 345, column: 17)
!3495 = !DILocation(line: 345, column: 17, scope: !3461)
!3496 = !DILocation(line: 346, column: 75, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3494, file: !165, line: 345, column: 29)
!3498 = !DILocation(line: 347, column: 75, scope: !3497)
!3499 = !DILocation(line: 348, column: 13, scope: !3497)
!3500 = !DILocation(line: 349, column: 17, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3494, file: !165, line: 348, column: 20)
!3502 = !DILocation(line: 357, column: 1, scope: !3449)
!3503 = distinct !DISubprogram(name: "halGPIO_SetDriving", scope: !165, file: !165, line: 404, type: !3100, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3504)
!3504 = !{!3505, !3506, !3507, !3508}
!3505 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3503, file: !165, line: 404, type: !159)
!3506 = !DILocalVariable(name: "GPIO_driving", arg: 2, scope: !3503, file: !165, line: 404, type: !403)
!3507 = !DILocalVariable(name: "no", scope: !3503, file: !165, line: 406, type: !3106)
!3508 = !DILocalVariable(name: "remainder", scope: !3503, file: !165, line: 407, type: !3106)
!3509 = !DILocation(line: 0, scope: !3503)
!3510 = !DILocation(line: 408, column: 19, scope: !3503)
!3511 = !DILocation(line: 409, column: 17, scope: !3503)
!3512 = !DILocation(line: 411, column: 5, scope: !3503)
!3513 = !DILocation(line: 413, column: 84, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3503, file: !165, line: 411, column: 17)
!3515 = !DILocation(line: 413, column: 70, scope: !3514)
!3516 = !DILocation(line: 413, column: 64, scope: !3514)
!3517 = !DILocation(line: 413, column: 61, scope: !3514)
!3518 = !DILocation(line: 414, column: 79, scope: !3514)
!3519 = !DILocation(line: 414, column: 83, scope: !3514)
!3520 = !DILocation(line: 414, column: 88, scope: !3514)
!3521 = !DILocation(line: 414, column: 61, scope: !3514)
!3522 = !DILocation(line: 415, column: 13, scope: !3514)
!3523 = !DILocation(line: 417, column: 27, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3514, file: !165, line: 417, column: 17)
!3525 = !DILocation(line: 417, column: 17, scope: !3514)
!3526 = !DILocation(line: 418, column: 88, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3524, file: !165, line: 417, column: 33)
!3528 = !DILocation(line: 418, column: 74, scope: !3527)
!3529 = !DILocation(line: 418, column: 68, scope: !3527)
!3530 = !DILocation(line: 418, column: 65, scope: !3527)
!3531 = !DILocation(line: 419, column: 83, scope: !3527)
!3532 = !DILocation(line: 419, column: 87, scope: !3527)
!3533 = !DILocation(line: 419, column: 92, scope: !3527)
!3534 = !DILocation(line: 419, column: 65, scope: !3527)
!3535 = !DILocation(line: 420, column: 13, scope: !3527)
!3536 = !DILocation(line: 420, column: 24, scope: !3524)
!3537 = !DILocation(line: 421, column: 73, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !165, line: 420, column: 41)
!3539 = distinct !DILexicalBlock(scope: !3524, file: !165, line: 420, column: 24)
!3540 = !DILocation(line: 422, column: 91, scope: !3538)
!3541 = !DILocation(line: 422, column: 100, scope: !3538)
!3542 = !DILocation(line: 422, column: 73, scope: !3538)
!3543 = !DILocation(line: 423, column: 73, scope: !3538)
!3544 = !DILocation(line: 424, column: 13, scope: !3538)
!3545 = !DILocation(line: 425, column: 73, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !165, line: 424, column: 41)
!3547 = distinct !DILexicalBlock(scope: !3539, file: !165, line: 424, column: 24)
!3548 = !DILocation(line: 426, column: 91, scope: !3546)
!3549 = !DILocation(line: 426, column: 100, scope: !3546)
!3550 = !DILocation(line: 426, column: 73, scope: !3546)
!3551 = !DILocation(line: 427, column: 73, scope: !3546)
!3552 = !DILocation(line: 428, column: 13, scope: !3546)
!3553 = !DILocation(line: 429, column: 75, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !165, line: 428, column: 41)
!3555 = distinct !DILexicalBlock(scope: !3547, file: !165, line: 428, column: 24)
!3556 = !DILocation(line: 430, column: 93, scope: !3554)
!3557 = !DILocation(line: 430, column: 102, scope: !3554)
!3558 = !DILocation(line: 430, column: 75, scope: !3554)
!3559 = !DILocation(line: 431, column: 75, scope: !3554)
!3560 = !DILocation(line: 432, column: 13, scope: !3554)
!3561 = !DILocation(line: 433, column: 75, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !165, line: 432, column: 41)
!3563 = distinct !DILexicalBlock(scope: !3555, file: !165, line: 432, column: 24)
!3564 = !DILocation(line: 434, column: 93, scope: !3562)
!3565 = !DILocation(line: 434, column: 102, scope: !3562)
!3566 = !DILocation(line: 434, column: 75, scope: !3562)
!3567 = !DILocation(line: 435, column: 75, scope: !3562)
!3568 = !DILocation(line: 436, column: 13, scope: !3562)
!3569 = !DILocation(line: 437, column: 75, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !165, line: 436, column: 41)
!3571 = distinct !DILexicalBlock(scope: !3563, file: !165, line: 436, column: 24)
!3572 = !DILocation(line: 438, column: 93, scope: !3570)
!3573 = !DILocation(line: 438, column: 102, scope: !3570)
!3574 = !DILocation(line: 438, column: 75, scope: !3570)
!3575 = !DILocation(line: 439, column: 75, scope: !3570)
!3576 = !DILocation(line: 440, column: 13, scope: !3570)
!3577 = !DILocation(line: 443, column: 18, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3514, file: !165, line: 443, column: 17)
!3579 = !DILocation(line: 443, column: 17, scope: !3514)
!3580 = !DILocation(line: 444, column: 75, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3578, file: !165, line: 443, column: 29)
!3582 = !DILocation(line: 445, column: 93, scope: !3581)
!3583 = !DILocation(line: 445, column: 102, scope: !3581)
!3584 = !DILocation(line: 445, column: 75, scope: !3581)
!3585 = !DILocation(line: 446, column: 75, scope: !3581)
!3586 = !DILocation(line: 447, column: 13, scope: !3581)
!3587 = !DILocation(line: 448, column: 88, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3578, file: !165, line: 447, column: 20)
!3589 = !DILocation(line: 448, column: 74, scope: !3588)
!3590 = !DILocation(line: 448, column: 68, scope: !3588)
!3591 = !DILocation(line: 448, column: 65, scope: !3588)
!3592 = !DILocation(line: 449, column: 83, scope: !3588)
!3593 = !DILocation(line: 449, column: 87, scope: !3588)
!3594 = !DILocation(line: 449, column: 92, scope: !3588)
!3595 = !DILocation(line: 449, column: 65, scope: !3588)
!3596 = !DILocation(line: 453, column: 84, scope: !3514)
!3597 = !DILocation(line: 453, column: 70, scope: !3514)
!3598 = !DILocation(line: 453, column: 64, scope: !3514)
!3599 = !DILocation(line: 453, column: 61, scope: !3514)
!3600 = !DILocation(line: 454, column: 79, scope: !3514)
!3601 = !DILocation(line: 454, column: 83, scope: !3514)
!3602 = !DILocation(line: 454, column: 88, scope: !3514)
!3603 = !DILocation(line: 454, column: 61, scope: !3514)
!3604 = !DILocation(line: 455, column: 13, scope: !3514)
!3605 = !DILocation(line: 460, column: 1, scope: !3503)
!3606 = distinct !DISubprogram(name: "halGPIO_GetDriving", scope: !165, file: !165, line: 463, type: !3607, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3610)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{!588, !159, !3609}
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!3610 = !{!3611, !3612, !3613, !3614, !3615}
!3611 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3606, file: !165, line: 463, type: !159)
!3612 = !DILocalVariable(name: "GPIO_driving", arg: 2, scope: !3606, file: !165, line: 463, type: !3609)
!3613 = !DILocalVariable(name: "no", scope: !3606, file: !165, line: 465, type: !3106)
!3614 = !DILocalVariable(name: "remainder", scope: !3606, file: !165, line: 466, type: !3106)
!3615 = !DILocalVariable(name: "temp", scope: !3606, file: !165, line: 467, type: !159)
!3616 = !DILocation(line: 0, scope: !3606)
!3617 = !DILocation(line: 468, column: 19, scope: !3606)
!3618 = !DILocation(line: 469, column: 17, scope: !3606)
!3619 = !DILocation(line: 471, column: 5, scope: !3606)
!3620 = !DILocation(line: 473, column: 20, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3606, file: !165, line: 471, column: 17)
!3622 = !DILocation(line: 474, column: 40, scope: !3621)
!3623 = !DILocation(line: 474, column: 26, scope: !3621)
!3624 = !DILocation(line: 474, column: 18, scope: !3621)
!3625 = !DILocation(line: 475, column: 40, scope: !3621)
!3626 = !DILocation(line: 475, column: 29, scope: !3621)
!3627 = !DILocation(line: 476, column: 13, scope: !3621)
!3628 = !DILocation(line: 478, column: 27, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3621, file: !165, line: 478, column: 17)
!3630 = !DILocation(line: 478, column: 17, scope: !3621)
!3631 = !DILocation(line: 479, column: 24, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3629, file: !165, line: 478, column: 33)
!3633 = !DILocation(line: 480, column: 44, scope: !3632)
!3634 = !DILocation(line: 480, column: 30, scope: !3632)
!3635 = !DILocation(line: 480, column: 22, scope: !3632)
!3636 = !DILocation(line: 481, column: 44, scope: !3632)
!3637 = !DILocation(line: 481, column: 33, scope: !3632)
!3638 = !DILocation(line: 482, column: 13, scope: !3632)
!3639 = !DILocation(line: 482, column: 24, scope: !3629)
!3640 = !DILocation(line: 483, column: 24, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !165, line: 482, column: 41)
!3642 = distinct !DILexicalBlock(scope: !3629, file: !165, line: 482, column: 24)
!3643 = !DILocation(line: 485, column: 53, scope: !3641)
!3644 = !DILocation(line: 485, column: 33, scope: !3641)
!3645 = !DILocation(line: 486, column: 13, scope: !3641)
!3646 = !DILocation(line: 487, column: 24, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !165, line: 486, column: 41)
!3648 = distinct !DILexicalBlock(scope: !3642, file: !165, line: 486, column: 24)
!3649 = !DILocation(line: 489, column: 53, scope: !3647)
!3650 = !DILocation(line: 489, column: 33, scope: !3647)
!3651 = !DILocation(line: 490, column: 13, scope: !3647)
!3652 = !DILocation(line: 491, column: 24, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !165, line: 490, column: 41)
!3654 = distinct !DILexicalBlock(scope: !3648, file: !165, line: 490, column: 24)
!3655 = !DILocation(line: 493, column: 53, scope: !3653)
!3656 = !DILocation(line: 493, column: 33, scope: !3653)
!3657 = !DILocation(line: 494, column: 13, scope: !3653)
!3658 = !DILocation(line: 495, column: 24, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !165, line: 494, column: 41)
!3660 = distinct !DILexicalBlock(scope: !3654, file: !165, line: 494, column: 24)
!3661 = !DILocation(line: 497, column: 53, scope: !3659)
!3662 = !DILocation(line: 497, column: 33, scope: !3659)
!3663 = !DILocation(line: 498, column: 13, scope: !3659)
!3664 = !DILocation(line: 499, column: 24, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !165, line: 498, column: 41)
!3666 = distinct !DILexicalBlock(scope: !3660, file: !165, line: 498, column: 24)
!3667 = !DILocation(line: 501, column: 53, scope: !3665)
!3668 = !DILocation(line: 501, column: 33, scope: !3665)
!3669 = !DILocation(line: 502, column: 13, scope: !3665)
!3670 = !DILocation(line: 505, column: 18, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3621, file: !165, line: 505, column: 17)
!3672 = !DILocation(line: 505, column: 17, scope: !3621)
!3673 = !DILocation(line: 506, column: 24, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3671, file: !165, line: 505, column: 29)
!3675 = !DILocation(line: 508, column: 53, scope: !3674)
!3676 = !DILocation(line: 508, column: 33, scope: !3674)
!3677 = !DILocation(line: 509, column: 13, scope: !3674)
!3678 = !DILocation(line: 510, column: 24, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3671, file: !165, line: 509, column: 20)
!3680 = !DILocation(line: 511, column: 44, scope: !3679)
!3681 = !DILocation(line: 511, column: 30, scope: !3679)
!3682 = !DILocation(line: 511, column: 22, scope: !3679)
!3683 = !DILocation(line: 512, column: 44, scope: !3679)
!3684 = !DILocation(line: 512, column: 33, scope: !3679)
!3685 = !DILocation(line: 516, column: 20, scope: !3621)
!3686 = !DILocation(line: 517, column: 40, scope: !3621)
!3687 = !DILocation(line: 517, column: 26, scope: !3621)
!3688 = !DILocation(line: 517, column: 18, scope: !3621)
!3689 = !DILocation(line: 518, column: 40, scope: !3621)
!3690 = !DILocation(line: 518, column: 29, scope: !3621)
!3691 = !DILocation(line: 519, column: 13, scope: !3621)
!3692 = !DILocation(line: 0, scope: !3621)
!3693 = !DILocation(line: 524, column: 1, scope: !3606)
!3694 = distinct !DISubprogram(name: "topPAD_Control_GPIO", scope: !165, file: !165, line: 526, type: !3695, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3698)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{null, !159, !3697}
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_TOP_PAD_CONTROL_T", file: !168, line: 1212, baseType: !167)
!3698 = !{!3699, !3700, !3701, !3702}
!3699 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !3694, file: !165, line: 526, type: !159)
!3700 = !DILocalVariable(name: "ePadControl", arg: 2, scope: !3694, file: !165, line: 526, type: !3697)
!3701 = !DILocalVariable(name: "no", scope: !3694, file: !165, line: 529, type: !3106)
!3702 = !DILocalVariable(name: "remainder", scope: !3694, file: !165, line: 530, type: !3106)
!3703 = !DILocation(line: 0, scope: !3694)
!3704 = !DILocation(line: 531, column: 19, scope: !3694)
!3705 = !DILocation(line: 532, column: 17, scope: !3694)
!3706 = !DILocation(line: 534, column: 9, scope: !3694)
!3707 = !DILocation(line: 536, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !165, line: 534, column: 45)
!3709 = distinct !DILexicalBlock(scope: !3694, file: !165, line: 534, column: 9)
!3710 = !DILocation(line: 538, column: 56, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3708, file: !165, line: 536, column: 21)
!3712 = !DILocation(line: 538, column: 53, scope: !3711)
!3713 = !DILocation(line: 538, column: 47, scope: !3711)
!3714 = !DILocation(line: 539, column: 17, scope: !3711)
!3715 = !DILocation(line: 541, column: 56, scope: !3711)
!3716 = !DILocation(line: 541, column: 53, scope: !3711)
!3717 = !DILocation(line: 541, column: 47, scope: !3711)
!3718 = !DILocation(line: 542, column: 17, scope: !3711)
!3719 = !DILocation(line: 548, column: 9, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !165, line: 547, column: 51)
!3721 = distinct !DILexicalBlock(scope: !3709, file: !165, line: 547, column: 16)
!3722 = !DILocation(line: 550, column: 57, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3720, file: !165, line: 548, column: 21)
!3724 = !DILocation(line: 550, column: 54, scope: !3723)
!3725 = !DILocation(line: 550, column: 50, scope: !3723)
!3726 = !DILocation(line: 550, column: 47, scope: !3723)
!3727 = !DILocation(line: 551, column: 17, scope: !3723)
!3728 = !DILocation(line: 553, column: 57, scope: !3723)
!3729 = !DILocation(line: 553, column: 54, scope: !3723)
!3730 = !DILocation(line: 553, column: 50, scope: !3723)
!3731 = !DILocation(line: 553, column: 47, scope: !3723)
!3732 = !DILocation(line: 554, column: 17, scope: !3723)
!3733 = !DILocation(line: 560, column: 1, scope: !3694)
!3734 = distinct !DISubprogram(name: "drvGPIO_IDX_EINT_WIC_LISR", scope: !165, file: !165, line: 567, type: !905, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3735)
!3735 = !{!3736, !3737, !3738}
!3736 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3734, file: !165, line: 567, type: !668)
!3737 = !DILocalVariable(name: "i", scope: !3734, file: !165, line: 569, type: !61)
!3738 = !DILocalVariable(name: "pin_number", scope: !3734, file: !165, line: 570, type: !61)
!3739 = !DILocation(line: 0, scope: !3734)
!3740 = !DILocation(line: 572, column: 19, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !165, line: 572, column: 5)
!3742 = distinct !DILexicalBlock(scope: !3734, file: !165, line: 572, column: 5)
!3743 = !DILocation(line: 572, column: 5, scope: !3742)
!3744 = !DILocation(line: 573, column: 32, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !165, line: 573, column: 13)
!3746 = distinct !DILexicalBlock(scope: !3741, file: !165, line: 572, column: 46)
!3747 = !DILocation(line: 573, column: 43, scope: !3745)
!3748 = !DILocation(line: 573, column: 13, scope: !3746)
!3749 = !DILocation(line: 574, column: 45, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3745, file: !165, line: 573, column: 58)
!3751 = !DILocation(line: 575, column: 13, scope: !3750)
!3752 = !DILocation(line: 577, column: 38, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3746, file: !165, line: 577, column: 13)
!3754 = !DILocation(line: 577, column: 13, scope: !3746)
!3755 = !DILocation(line: 578, column: 13, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3753, file: !165, line: 577, column: 44)
!3757 = !DILocation(line: 579, column: 13, scope: !3756)
!3758 = !DILocation(line: 572, column: 42, scope: !3741)
!3759 = distinct !{!3759, !3743, !3760}
!3760 = !DILocation(line: 581, column: 5, scope: !3742)
!3761 = !DILocation(line: 583, column: 23, scope: !3734)
!3762 = !DILocation(line: 583, column: 5, scope: !3734)
!3763 = !DILocation(line: 584, column: 1, scope: !3734)
!3764 = distinct !DISubprogram(name: "halRegGPInterrupt", scope: !165, file: !165, line: 587, type: !3765, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3767)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!588, !159, !403, !403, !403, !403, !403, !403, !389}
!3767 = !{!3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783}
!3768 = !DILocalVariable(name: "pad_name", arg: 1, scope: !3764, file: !165, line: 587, type: !159)
!3769 = !DILocalVariable(name: "edgeLevelTrig", arg: 2, scope: !3764, file: !165, line: 588, type: !403)
!3770 = !DILocalVariable(name: "debounceEnable", arg: 3, scope: !3764, file: !165, line: 589, type: !403)
!3771 = !DILocalVariable(name: "polarity", arg: 4, scope: !3764, file: !165, line: 590, type: !403)
!3772 = !DILocalVariable(name: "dual", arg: 5, scope: !3764, file: !165, line: 591, type: !403)
!3773 = !DILocalVariable(name: "prescaler", arg: 6, scope: !3764, file: !165, line: 592, type: !403)
!3774 = !DILocalVariable(name: "u1PrescalerCount", arg: 7, scope: !3764, file: !165, line: 593, type: !403)
!3775 = !DILocalVariable(name: "USER_GPI_Handler", arg: 8, scope: !3764, file: !165, line: 594, type: !389)
!3776 = !DILocalVariable(name: "i", scope: !3764, file: !165, line: 596, type: !61)
!3777 = !DILocalVariable(name: "irq_number", scope: !3764, file: !165, line: 597, type: !61)
!3778 = !DILocalVariable(name: "priority_number", scope: !3764, file: !165, line: 598, type: !61)
!3779 = !DILocalVariable(name: "int_index", scope: !3764, file: !165, line: 599, type: !61)
!3780 = !DILocalVariable(name: "wdata", scope: !3764, file: !165, line: 600, type: !61)
!3781 = !DILocalVariable(name: "rdata", scope: !3764, file: !165, line: 601, type: !61)
!3782 = !DILocalVariable(name: "reg_index", scope: !3764, file: !165, line: 602, type: !61)
!3783 = !DILocalVariable(name: "reg_shift", scope: !3764, file: !165, line: 603, type: !61)
!3784 = !DILocation(line: 0, scope: !3764)
!3785 = !DILocation(line: 605, column: 19, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !165, line: 605, column: 5)
!3787 = distinct !DILexicalBlock(scope: !3764, file: !165, line: 605, column: 5)
!3788 = !DILocation(line: 605, column: 5, scope: !3787)
!3789 = !DILocation(line: 606, column: 32, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !165, line: 606, column: 13)
!3791 = distinct !DILexicalBlock(scope: !3786, file: !165, line: 605, column: 46)
!3792 = !DILocation(line: 606, column: 41, scope: !3790)
!3793 = !DILocation(line: 606, column: 13, scope: !3791)
!3794 = !DILocation(line: 607, column: 50, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3790, file: !165, line: 606, column: 54)
!3796 = !DILocation(line: 608, column: 50, scope: !3795)
!3797 = !DILocation(line: 609, column: 13, scope: !3795)
!3798 = !DILocation(line: 611, column: 38, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3791, file: !165, line: 611, column: 13)
!3800 = !DILocation(line: 611, column: 13, scope: !3791)
!3801 = !DILocation(line: 612, column: 13, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3799, file: !165, line: 611, column: 44)
!3803 = !DILocation(line: 613, column: 13, scope: !3802)
!3804 = !DILocation(line: 605, column: 42, scope: !3786)
!3805 = distinct !{!3805, !3788, !3806}
!3806 = !DILocation(line: 615, column: 5, scope: !3787)
!3807 = !DILocation(line: 617, column: 5, scope: !3764)
!3808 = !DILocation(line: 618, column: 5, scope: !3764)
!3809 = !DILocation(line: 621, column: 27, scope: !3764)
!3810 = !DILocation(line: 622, column: 27, scope: !3764)
!3811 = !DILocation(line: 623, column: 13, scope: !3764)
!3812 = !DILocation(line: 624, column: 17, scope: !3764)
!3813 = !DILocation(line: 624, column: 14, scope: !3764)
!3814 = !DILocation(line: 624, column: 11, scope: !3764)
!3815 = !DILocation(line: 625, column: 15, scope: !3764)
!3816 = !DILocation(line: 625, column: 28, scope: !3764)
!3817 = !DILocation(line: 625, column: 11, scope: !3764)
!3818 = !DILocation(line: 626, column: 48, scope: !3764)
!3819 = !DILocation(line: 628, column: 28, scope: !3764)
!3820 = !DILocation(line: 630, column: 13, scope: !3764)
!3821 = !DILocation(line: 630, column: 33, scope: !3764)
!3822 = !DILocation(line: 630, column: 42, scope: !3764)
!3823 = !DILocation(line: 630, column: 50, scope: !3764)
!3824 = !DILocation(line: 630, column: 54, scope: !3764)
!3825 = !DILocation(line: 630, column: 62, scope: !3764)
!3826 = !DILocation(line: 630, column: 70, scope: !3764)
!3827 = !DILocation(line: 630, column: 78, scope: !3764)
!3828 = !DILocation(line: 630, column: 92, scope: !3764)
!3829 = !DILocation(line: 630, column: 30, scope: !3764)
!3830 = !DILocation(line: 630, column: 47, scope: !3764)
!3831 = !DILocation(line: 630, column: 59, scope: !3764)
!3832 = !DILocation(line: 630, column: 75, scope: !3764)
!3833 = !DILocation(line: 631, column: 5, scope: !3764)
!3834 = !DILocation(line: 631, column: 48, scope: !3764)
!3835 = !DILocation(line: 632, column: 5, scope: !3764)
!3836 = !DILocation(line: 641, column: 5, scope: !3764)
!3837 = !DILocation(line: 643, column: 46, scope: !3764)
!3838 = !DILocation(line: 644, column: 5, scope: !3764)
!3839 = !DILocation(line: 645, column: 5, scope: !3764)
!3840 = !DILocation(line: 647, column: 5, scope: !3764)
!3841 = !DILocation(line: 648, column: 1, scope: !3764)
!3842 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !285, file: !285, line: 1507, type: !3843, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3845)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{null, !140}
!3845 = !{!3846}
!3846 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3842, file: !285, line: 1507, type: !140)
!3847 = !DILocation(line: 0, scope: !3842)
!3848 = !DILocation(line: 1509, column: 65, scope: !3842)
!3849 = !DILocation(line: 1509, column: 44, scope: !3842)
!3850 = !DILocation(line: 1509, column: 32, scope: !3842)
!3851 = !DILocation(line: 1509, column: 3, scope: !3842)
!3852 = !DILocation(line: 1509, column: 39, scope: !3842)
!3853 = !DILocation(line: 1510, column: 1, scope: !3842)
!3854 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !285, file: !285, line: 1547, type: !3843, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3855)
!3855 = !{!3856}
!3856 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3854, file: !285, line: 1547, type: !140)
!3857 = !DILocation(line: 0, scope: !3854)
!3858 = !DILocation(line: 1549, column: 65, scope: !3854)
!3859 = !DILocation(line: 1549, column: 44, scope: !3854)
!3860 = !DILocation(line: 1549, column: 32, scope: !3854)
!3861 = !DILocation(line: 1549, column: 3, scope: !3854)
!3862 = !DILocation(line: 1549, column: 39, scope: !3854)
!3863 = !DILocation(line: 1550, column: 1, scope: !3854)
!3864 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !285, file: !285, line: 1577, type: !3865, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3867)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{null, !140, !61}
!3867 = !{!3868, !3869}
!3868 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3864, file: !285, line: 1577, type: !140)
!3869 = !DILocalVariable(name: "priority", arg: 2, scope: !3864, file: !285, line: 1577, type: !61)
!3870 = !DILocation(line: 0, scope: !3864)
!3871 = !DILocation(line: 1579, column: 11, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3864, file: !285, line: 1579, column: 6)
!3873 = !DILocation(line: 0, scope: !3872)
!3874 = !DILocation(line: 1579, column: 6, scope: !3864)
!3875 = !DILocation(line: 1583, column: 1, scope: !3864)
!3876 = distinct !DISubprogram(name: "halRegGPInterrupt_set_triggermode", scope: !165, file: !165, line: 651, type: !3877, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3879)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!588, !159, !403, !403, !403}
!3879 = !{!3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890}
!3880 = !DILocalVariable(name: "pad_name", arg: 1, scope: !3876, file: !165, line: 651, type: !159)
!3881 = !DILocalVariable(name: "edgeLevelTrig", arg: 2, scope: !3876, file: !165, line: 651, type: !403)
!3882 = !DILocalVariable(name: "polarity", arg: 3, scope: !3876, file: !165, line: 651, type: !403)
!3883 = !DILocalVariable(name: "dual", arg: 4, scope: !3876, file: !165, line: 651, type: !403)
!3884 = !DILocalVariable(name: "i", scope: !3876, file: !165, line: 654, type: !61)
!3885 = !DILocalVariable(name: "irq_number", scope: !3876, file: !165, line: 655, type: !61)
!3886 = !DILocalVariable(name: "int_index", scope: !3876, file: !165, line: 656, type: !61)
!3887 = !DILocalVariable(name: "wdata", scope: !3876, file: !165, line: 657, type: !61)
!3888 = !DILocalVariable(name: "rdata", scope: !3876, file: !165, line: 658, type: !61)
!3889 = !DILocalVariable(name: "reg_index", scope: !3876, file: !165, line: 659, type: !61)
!3890 = !DILocalVariable(name: "reg_shift", scope: !3876, file: !165, line: 660, type: !61)
!3891 = !DILocation(line: 0, scope: !3876)
!3892 = !DILocation(line: 662, column: 19, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !165, line: 662, column: 5)
!3894 = distinct !DILexicalBlock(scope: !3876, file: !165, line: 662, column: 5)
!3895 = !DILocation(line: 662, column: 5, scope: !3894)
!3896 = !DILocation(line: 663, column: 32, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !165, line: 663, column: 13)
!3898 = distinct !DILexicalBlock(scope: !3893, file: !165, line: 662, column: 46)
!3899 = !DILocation(line: 663, column: 41, scope: !3897)
!3900 = !DILocation(line: 663, column: 13, scope: !3898)
!3901 = !DILocation(line: 664, column: 50, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3897, file: !165, line: 663, column: 54)
!3903 = !DILocation(line: 665, column: 13, scope: !3902)
!3904 = !DILocation(line: 667, column: 38, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3898, file: !165, line: 667, column: 13)
!3906 = !DILocation(line: 667, column: 13, scope: !3898)
!3907 = !DILocation(line: 668, column: 13, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3905, file: !165, line: 667, column: 44)
!3909 = !DILocation(line: 669, column: 13, scope: !3908)
!3910 = !DILocation(line: 662, column: 42, scope: !3893)
!3911 = distinct !{!3911, !3895, !3912}
!3912 = !DILocation(line: 671, column: 5, scope: !3894)
!3913 = !DILocation(line: 673, column: 5, scope: !3876)
!3914 = !DILocation(line: 676, column: 27, scope: !3876)
!3915 = !DILocation(line: 677, column: 27, scope: !3876)
!3916 = !DILocation(line: 678, column: 13, scope: !3876)
!3917 = !DILocation(line: 679, column: 17, scope: !3876)
!3918 = !DILocation(line: 679, column: 14, scope: !3876)
!3919 = !DILocation(line: 679, column: 11, scope: !3876)
!3920 = !DILocation(line: 680, column: 14, scope: !3876)
!3921 = !DILocation(line: 680, column: 27, scope: !3876)
!3922 = !DILocation(line: 680, column: 11, scope: !3876)
!3923 = !DILocation(line: 681, column: 48, scope: !3876)
!3924 = !DILocation(line: 683, column: 14, scope: !3876)
!3925 = !DILocation(line: 683, column: 18, scope: !3876)
!3926 = !DILocation(line: 683, column: 26, scope: !3876)
!3927 = !DILocation(line: 683, column: 34, scope: !3876)
!3928 = !DILocation(line: 683, column: 23, scope: !3876)
!3929 = !DILocation(line: 684, column: 28, scope: !3876)
!3930 = !DILocation(line: 685, column: 5, scope: !3876)
!3931 = !DILocation(line: 685, column: 48, scope: !3876)
!3932 = !DILocation(line: 686, column: 5, scope: !3876)
!3933 = !DILocation(line: 688, column: 5, scope: !3876)
!3934 = !DILocation(line: 690, column: 5, scope: !3876)
!3935 = !DILocation(line: 691, column: 1, scope: !3876)
!3936 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !285, file: !285, line: 1494, type: !3843, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3937)
!3937 = !{!3938}
!3938 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3936, file: !285, line: 1494, type: !140)
!3939 = !DILocation(line: 0, scope: !3936)
!3940 = !DILocation(line: 1497, column: 91, scope: !3936)
!3941 = !DILocation(line: 1497, column: 61, scope: !3936)
!3942 = !DILocation(line: 1497, column: 40, scope: !3936)
!3943 = !DILocation(line: 1497, column: 3, scope: !3936)
!3944 = !DILocation(line: 1497, column: 46, scope: !3936)
!3945 = !DILocation(line: 1498, column: 1, scope: !3936)
!3946 = distinct !DISubprogram(name: "halRegGPInterrupt_set_debounce", scope: !165, file: !165, line: 694, type: !3947, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3949)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!588, !159, !403, !403, !54}
!3949 = !{!3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957}
!3950 = !DILocalVariable(name: "pad_name", arg: 1, scope: !3946, file: !165, line: 694, type: !159)
!3951 = !DILocalVariable(name: "debounceEnable", arg: 2, scope: !3946, file: !165, line: 694, type: !403)
!3952 = !DILocalVariable(name: "prescaler", arg: 3, scope: !3946, file: !165, line: 694, type: !403)
!3953 = !DILocalVariable(name: "u1PrescalerCount", arg: 4, scope: !3946, file: !165, line: 694, type: !54)
!3954 = !DILocalVariable(name: "i", scope: !3946, file: !165, line: 697, type: !61)
!3955 = !DILocalVariable(name: "irq_number", scope: !3946, file: !165, line: 698, type: !61)
!3956 = !DILocalVariable(name: "int_index", scope: !3946, file: !165, line: 699, type: !61)
!3957 = !DILocalVariable(name: "wdata", scope: !3946, file: !165, line: 700, type: !61)
!3958 = !DILocation(line: 0, scope: !3946)
!3959 = !DILocation(line: 702, column: 19, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !165, line: 702, column: 5)
!3961 = distinct !DILexicalBlock(scope: !3946, file: !165, line: 702, column: 5)
!3962 = !DILocation(line: 702, column: 5, scope: !3961)
!3963 = !DILocation(line: 703, column: 32, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !165, line: 703, column: 13)
!3965 = distinct !DILexicalBlock(scope: !3960, file: !165, line: 702, column: 46)
!3966 = !DILocation(line: 703, column: 41, scope: !3964)
!3967 = !DILocation(line: 703, column: 13, scope: !3965)
!3968 = !DILocation(line: 704, column: 50, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3964, file: !165, line: 703, column: 54)
!3970 = !DILocation(line: 705, column: 13, scope: !3969)
!3971 = !DILocation(line: 707, column: 38, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3965, file: !165, line: 707, column: 13)
!3973 = !DILocation(line: 707, column: 13, scope: !3965)
!3974 = !DILocation(line: 708, column: 13, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3972, file: !165, line: 707, column: 44)
!3976 = !DILocation(line: 709, column: 13, scope: !3975)
!3977 = !DILocation(line: 702, column: 42, scope: !3960)
!3978 = distinct !{!3978, !3962, !3979}
!3979 = !DILocation(line: 711, column: 5, scope: !3961)
!3980 = !DILocation(line: 713, column: 5, scope: !3946)
!3981 = !DILocation(line: 715, column: 13, scope: !3946)
!3982 = !DILocation(line: 715, column: 33, scope: !3946)
!3983 = !DILocation(line: 715, column: 42, scope: !3946)
!3984 = !DILocation(line: 715, column: 53, scope: !3946)
!3985 = !DILocation(line: 715, column: 67, scope: !3946)
!3986 = !DILocation(line: 715, column: 30, scope: !3946)
!3987 = !DILocation(line: 715, column: 47, scope: !3946)
!3988 = !DILocation(line: 716, column: 28, scope: !3946)
!3989 = !DILocation(line: 717, column: 5, scope: !3946)
!3990 = !DILocation(line: 717, column: 48, scope: !3946)
!3991 = !DILocation(line: 718, column: 5, scope: !3946)
!3992 = !DILocation(line: 719, column: 5, scope: !3946)
!3993 = !DILocation(line: 722, column: 5, scope: !3946)
!3994 = !DILocation(line: 723, column: 1, scope: !3946)
!3995 = distinct !DISubprogram(name: "halRegGPInterrupt_mask", scope: !165, file: !165, line: 726, type: !3288, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3996)
!3996 = !{!3997, !3998, !3999}
!3997 = !DILocalVariable(name: "pad_name", arg: 1, scope: !3995, file: !165, line: 726, type: !159)
!3998 = !DILocalVariable(name: "i", scope: !3995, file: !165, line: 728, type: !61)
!3999 = !DILocalVariable(name: "irq_number", scope: !3995, file: !165, line: 729, type: !61)
!4000 = !DILocation(line: 0, scope: !3995)
!4001 = !DILocation(line: 731, column: 19, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !165, line: 731, column: 5)
!4003 = distinct !DILexicalBlock(scope: !3995, file: !165, line: 731, column: 5)
!4004 = !DILocation(line: 731, column: 5, scope: !4003)
!4005 = !DILocation(line: 732, column: 32, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !165, line: 732, column: 13)
!4007 = distinct !DILexicalBlock(scope: !4002, file: !165, line: 731, column: 46)
!4008 = !DILocation(line: 732, column: 41, scope: !4006)
!4009 = !DILocation(line: 732, column: 13, scope: !4007)
!4010 = !DILocation(line: 733, column: 45, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4006, file: !165, line: 732, column: 54)
!4012 = !DILocation(line: 734, column: 13, scope: !4011)
!4013 = !DILocation(line: 736, column: 38, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4007, file: !165, line: 736, column: 13)
!4015 = !DILocation(line: 736, column: 13, scope: !4007)
!4016 = !DILocation(line: 737, column: 13, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4014, file: !165, line: 736, column: 44)
!4018 = !DILocation(line: 738, column: 13, scope: !4017)
!4019 = !DILocation(line: 731, column: 42, scope: !4002)
!4020 = distinct !{!4020, !4004, !4021}
!4021 = !DILocation(line: 740, column: 5, scope: !4003)
!4022 = !DILocation(line: 742, column: 5, scope: !3995)
!4023 = !DILocation(line: 744, column: 5, scope: !3995)
!4024 = !DILocation(line: 745, column: 1, scope: !3995)
!4025 = distinct !DISubprogram(name: "halRegGPInterrupt_unmask", scope: !165, file: !165, line: 747, type: !3288, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !4026)
!4026 = !{!4027, !4028, !4029}
!4027 = !DILocalVariable(name: "pad_name", arg: 1, scope: !4025, file: !165, line: 747, type: !159)
!4028 = !DILocalVariable(name: "i", scope: !4025, file: !165, line: 749, type: !61)
!4029 = !DILocalVariable(name: "irq_number", scope: !4025, file: !165, line: 750, type: !61)
!4030 = !DILocation(line: 0, scope: !4025)
!4031 = !DILocation(line: 752, column: 19, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !165, line: 752, column: 5)
!4033 = distinct !DILexicalBlock(scope: !4025, file: !165, line: 752, column: 5)
!4034 = !DILocation(line: 752, column: 5, scope: !4033)
!4035 = !DILocation(line: 753, column: 32, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !165, line: 753, column: 13)
!4037 = distinct !DILexicalBlock(scope: !4032, file: !165, line: 752, column: 46)
!4038 = !DILocation(line: 753, column: 41, scope: !4036)
!4039 = !DILocation(line: 753, column: 13, scope: !4037)
!4040 = !DILocation(line: 754, column: 45, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4036, file: !165, line: 753, column: 54)
!4042 = !DILocation(line: 755, column: 13, scope: !4041)
!4043 = !DILocation(line: 757, column: 38, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4037, file: !165, line: 757, column: 13)
!4045 = !DILocation(line: 757, column: 13, scope: !4037)
!4046 = !DILocation(line: 758, column: 13, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4044, file: !165, line: 757, column: 44)
!4048 = !DILocation(line: 759, column: 13, scope: !4047)
!4049 = !DILocation(line: 752, column: 42, scope: !4032)
!4050 = distinct !{!4050, !4034, !4051}
!4051 = !DILocation(line: 761, column: 5, scope: !4033)
!4052 = !DILocation(line: 763, column: 5, scope: !4025)
!4053 = !DILocation(line: 765, column: 5, scope: !4025)
!4054 = !DILocation(line: 766, column: 1, scope: !4025)
!4055 = distinct !DISubprogram(name: "halRegGP_set_software_trigger", scope: !165, file: !165, line: 773, type: !3288, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !4056)
!4056 = !{!4057, !4058, !4059}
!4057 = !DILocalVariable(name: "pad_name", arg: 1, scope: !4055, file: !165, line: 773, type: !159)
!4058 = !DILocalVariable(name: "i", scope: !4055, file: !165, line: 776, type: !61)
!4059 = !DILocalVariable(name: "irq_number", scope: !4055, file: !165, line: 777, type: !61)
!4060 = !DILocation(line: 0, scope: !4055)
!4061 = !DILocation(line: 779, column: 19, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !165, line: 779, column: 5)
!4063 = distinct !DILexicalBlock(scope: !4055, file: !165, line: 779, column: 5)
!4064 = !DILocation(line: 779, column: 5, scope: !4063)
!4065 = !DILocation(line: 780, column: 32, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !165, line: 780, column: 13)
!4067 = distinct !DILexicalBlock(scope: !4062, file: !165, line: 779, column: 46)
!4068 = !DILocation(line: 780, column: 41, scope: !4066)
!4069 = !DILocation(line: 780, column: 13, scope: !4067)
!4070 = !DILocation(line: 781, column: 45, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4066, file: !165, line: 780, column: 54)
!4072 = !DILocation(line: 782, column: 13, scope: !4071)
!4073 = !DILocation(line: 784, column: 38, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4067, file: !165, line: 784, column: 13)
!4075 = !DILocation(line: 784, column: 13, scope: !4067)
!4076 = !DILocation(line: 785, column: 13, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4074, file: !165, line: 784, column: 44)
!4078 = !DILocation(line: 786, column: 13, scope: !4077)
!4079 = !DILocation(line: 779, column: 42, scope: !4062)
!4080 = distinct !{!4080, !4064, !4081}
!4081 = !DILocation(line: 788, column: 5, scope: !4063)
!4082 = !DILocation(line: 791, column: 5, scope: !4055)
!4083 = !DILocation(line: 793, column: 5, scope: !4055)
!4084 = !DILocation(line: 795, column: 1, scope: !4055)
!4085 = distinct !DISubprogram(name: "software_trigger_irq", scope: !165, file: !165, line: 768, type: !4086, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !4088)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{null, !159}
!4088 = !{!4089}
!4089 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4085, file: !165, line: 768, type: !159)
!4090 = !DILocation(line: 0, scope: !4085)
!4091 = !DILocation(line: 770, column: 54, scope: !4085)
!4092 = !DILocation(line: 770, column: 16, scope: !4085)
!4093 = !DILocation(line: 771, column: 1, scope: !4085)
!4094 = distinct !DISubprogram(name: "halRegGP_clear_software_trigger", scope: !165, file: !165, line: 797, type: !3288, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !4095)
!4095 = !{!4096, !4097, !4098}
!4096 = !DILocalVariable(name: "pad_name", arg: 1, scope: !4094, file: !165, line: 797, type: !159)
!4097 = !DILocalVariable(name: "i", scope: !4094, file: !165, line: 799, type: !61)
!4098 = !DILocalVariable(name: "irq_number", scope: !4094, file: !165, line: 800, type: !61)
!4099 = !DILocation(line: 0, scope: !4094)
!4100 = !DILocation(line: 802, column: 19, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !165, line: 802, column: 5)
!4102 = distinct !DILexicalBlock(scope: !4094, file: !165, line: 802, column: 5)
!4103 = !DILocation(line: 802, column: 5, scope: !4102)
!4104 = !DILocation(line: 803, column: 32, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !165, line: 803, column: 13)
!4106 = distinct !DILexicalBlock(scope: !4101, file: !165, line: 802, column: 46)
!4107 = !DILocation(line: 803, column: 41, scope: !4105)
!4108 = !DILocation(line: 803, column: 13, scope: !4106)
!4109 = !DILocation(line: 804, column: 45, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4105, file: !165, line: 803, column: 54)
!4111 = !DILocation(line: 805, column: 13, scope: !4110)
!4112 = !DILocation(line: 807, column: 38, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4106, file: !165, line: 807, column: 13)
!4114 = !DILocation(line: 807, column: 13, scope: !4106)
!4115 = !DILocation(line: 808, column: 13, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4113, file: !165, line: 807, column: 44)
!4117 = !DILocation(line: 809, column: 13, scope: !4116)
!4118 = !DILocation(line: 802, column: 42, scope: !4101)
!4119 = distinct !{!4119, !4103, !4120}
!4120 = !DILocation(line: 811, column: 5, scope: !4102)
!4121 = !DILocation(line: 813, column: 5, scope: !4094)
!4122 = !DILocation(line: 815, column: 5, scope: !4094)
!4123 = !DILocation(line: 816, column: 1, scope: !4094)
!4124 = distinct !DISubprogram(name: "halPinmuxTopOnPadFunc", scope: !2380, file: !2380, line: 85, type: !4125, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !4128)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!4127, !282, !403}
!4127 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID", file: !87, line: 79, baseType: null)
!4128 = !{!4129, !4130, !4131}
!4129 = !DILocalVariable(name: "ePadIndex", arg: 1, scope: !4124, file: !2380, line: 85, type: !282)
!4130 = !DILocalVariable(name: "ucFunc", arg: 2, scope: !4124, file: !2380, line: 85, type: !403)
!4131 = !DILocalVariable(name: "temp", scope: !4124, file: !2380, line: 87, type: !61)
!4132 = !DILocation(line: 0, scope: !4124)
!4133 = !DILocation(line: 88, column: 5, scope: !4124)
!4134 = !DILocation(line: 91, column: 20, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4124, file: !2380, line: 88, column: 24)
!4136 = !DILocation(line: 92, column: 18, scope: !4135)
!4137 = !DILocation(line: 93, column: 66, scope: !4135)
!4138 = !DILocation(line: 93, column: 63, scope: !4135)
!4139 = !DILocation(line: 93, column: 56, scope: !4135)
!4140 = !DILocation(line: 94, column: 13, scope: !4135)
!4141 = !DILocation(line: 97, column: 20, scope: !4135)
!4142 = !DILocation(line: 98, column: 18, scope: !4135)
!4143 = !DILocation(line: 99, column: 67, scope: !4135)
!4144 = !DILocation(line: 99, column: 74, scope: !4135)
!4145 = !DILocation(line: 99, column: 64, scope: !4135)
!4146 = !DILocation(line: 99, column: 56, scope: !4135)
!4147 = !DILocation(line: 100, column: 13, scope: !4135)
!4148 = !DILocation(line: 103, column: 20, scope: !4135)
!4149 = !DILocation(line: 104, column: 18, scope: !4135)
!4150 = !DILocation(line: 105, column: 67, scope: !4135)
!4151 = !DILocation(line: 105, column: 74, scope: !4135)
!4152 = !DILocation(line: 105, column: 64, scope: !4135)
!4153 = !DILocation(line: 105, column: 56, scope: !4135)
!4154 = !DILocation(line: 106, column: 13, scope: !4135)
!4155 = !DILocation(line: 109, column: 20, scope: !4135)
!4156 = !DILocation(line: 110, column: 18, scope: !4135)
!4157 = !DILocation(line: 111, column: 67, scope: !4135)
!4158 = !DILocation(line: 111, column: 74, scope: !4135)
!4159 = !DILocation(line: 111, column: 64, scope: !4135)
!4160 = !DILocation(line: 111, column: 56, scope: !4135)
!4161 = !DILocation(line: 112, column: 13, scope: !4135)
!4162 = !DILocation(line: 115, column: 20, scope: !4135)
!4163 = !DILocation(line: 116, column: 18, scope: !4135)
!4164 = !DILocation(line: 117, column: 67, scope: !4135)
!4165 = !DILocation(line: 117, column: 74, scope: !4135)
!4166 = !DILocation(line: 117, column: 64, scope: !4135)
!4167 = !DILocation(line: 117, column: 56, scope: !4135)
!4168 = !DILocation(line: 118, column: 13, scope: !4135)
!4169 = !DILocation(line: 121, column: 20, scope: !4135)
!4170 = !DILocation(line: 122, column: 18, scope: !4135)
!4171 = !DILocation(line: 123, column: 67, scope: !4135)
!4172 = !DILocation(line: 123, column: 74, scope: !4135)
!4173 = !DILocation(line: 123, column: 64, scope: !4135)
!4174 = !DILocation(line: 123, column: 56, scope: !4135)
!4175 = !DILocation(line: 124, column: 13, scope: !4135)
!4176 = !DILocation(line: 127, column: 20, scope: !4135)
!4177 = !DILocation(line: 128, column: 18, scope: !4135)
!4178 = !DILocation(line: 129, column: 67, scope: !4135)
!4179 = !DILocation(line: 129, column: 74, scope: !4135)
!4180 = !DILocation(line: 129, column: 64, scope: !4135)
!4181 = !DILocation(line: 129, column: 56, scope: !4135)
!4182 = !DILocation(line: 130, column: 13, scope: !4135)
!4183 = !DILocation(line: 133, column: 20, scope: !4135)
!4184 = !DILocation(line: 134, column: 18, scope: !4135)
!4185 = !DILocation(line: 135, column: 67, scope: !4135)
!4186 = !DILocation(line: 135, column: 74, scope: !4135)
!4187 = !DILocation(line: 135, column: 64, scope: !4135)
!4188 = !DILocation(line: 135, column: 56, scope: !4135)
!4189 = !DILocation(line: 136, column: 13, scope: !4135)
!4190 = !DILocation(line: 139, column: 20, scope: !4135)
!4191 = !DILocation(line: 140, column: 18, scope: !4135)
!4192 = !DILocation(line: 141, column: 67, scope: !4135)
!4193 = !DILocation(line: 141, column: 64, scope: !4135)
!4194 = !DILocation(line: 141, column: 56, scope: !4135)
!4195 = !DILocation(line: 142, column: 13, scope: !4135)
!4196 = !DILocation(line: 145, column: 20, scope: !4135)
!4197 = !DILocation(line: 146, column: 18, scope: !4135)
!4198 = !DILocation(line: 147, column: 67, scope: !4135)
!4199 = !DILocation(line: 147, column: 74, scope: !4135)
!4200 = !DILocation(line: 147, column: 64, scope: !4135)
!4201 = !DILocation(line: 147, column: 56, scope: !4135)
!4202 = !DILocation(line: 148, column: 13, scope: !4135)
!4203 = !DILocation(line: 151, column: 20, scope: !4135)
!4204 = !DILocation(line: 152, column: 18, scope: !4135)
!4205 = !DILocation(line: 153, column: 67, scope: !4135)
!4206 = !DILocation(line: 153, column: 74, scope: !4135)
!4207 = !DILocation(line: 153, column: 64, scope: !4135)
!4208 = !DILocation(line: 153, column: 56, scope: !4135)
!4209 = !DILocation(line: 154, column: 13, scope: !4135)
!4210 = !DILocation(line: 157, column: 20, scope: !4135)
!4211 = !DILocation(line: 158, column: 18, scope: !4135)
!4212 = !DILocation(line: 159, column: 67, scope: !4135)
!4213 = !DILocation(line: 159, column: 74, scope: !4135)
!4214 = !DILocation(line: 159, column: 64, scope: !4135)
!4215 = !DILocation(line: 159, column: 56, scope: !4135)
!4216 = !DILocation(line: 160, column: 29, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4135, file: !2380, line: 160, column: 17)
!4218 = !DILocation(line: 161, column: 17, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4217, file: !2380, line: 160, column: 60)
!4220 = !DILocation(line: 162, column: 13, scope: !4219)
!4221 = !DILocation(line: 166, column: 20, scope: !4135)
!4222 = !DILocation(line: 167, column: 18, scope: !4135)
!4223 = !DILocation(line: 168, column: 67, scope: !4135)
!4224 = !DILocation(line: 168, column: 74, scope: !4135)
!4225 = !DILocation(line: 168, column: 64, scope: !4135)
!4226 = !DILocation(line: 168, column: 56, scope: !4135)
!4227 = !DILocation(line: 169, column: 29, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4135, file: !2380, line: 169, column: 17)
!4229 = !DILocation(line: 170, column: 17, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4228, file: !2380, line: 169, column: 45)
!4231 = !DILocation(line: 171, column: 13, scope: !4230)
!4232 = !DILocation(line: 175, column: 20, scope: !4135)
!4233 = !DILocation(line: 176, column: 18, scope: !4135)
!4234 = !DILocation(line: 177, column: 67, scope: !4135)
!4235 = !DILocation(line: 177, column: 74, scope: !4135)
!4236 = !DILocation(line: 177, column: 64, scope: !4135)
!4237 = !DILocation(line: 177, column: 56, scope: !4135)
!4238 = !DILocation(line: 178, column: 19, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4135, file: !2380, line: 178, column: 17)
!4240 = !DILocation(line: 178, column: 17, scope: !4135)
!4241 = !DILocation(line: 179, column: 17, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4239, file: !2380, line: 178, column: 30)
!4243 = !DILocation(line: 180, column: 13, scope: !4242)
!4244 = !DILocation(line: 184, column: 20, scope: !4135)
!4245 = !DILocation(line: 185, column: 18, scope: !4135)
!4246 = !DILocation(line: 186, column: 67, scope: !4135)
!4247 = !DILocation(line: 186, column: 74, scope: !4135)
!4248 = !DILocation(line: 186, column: 64, scope: !4135)
!4249 = !DILocation(line: 186, column: 56, scope: !4135)
!4250 = !DILocation(line: 187, column: 29, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4135, file: !2380, line: 187, column: 17)
!4252 = !DILocation(line: 188, column: 17, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4251, file: !2380, line: 187, column: 45)
!4254 = !DILocation(line: 189, column: 13, scope: !4253)
!4255 = !DILocation(line: 193, column: 20, scope: !4135)
!4256 = !DILocation(line: 194, column: 18, scope: !4135)
!4257 = !DILocation(line: 195, column: 67, scope: !4135)
!4258 = !DILocation(line: 195, column: 74, scope: !4135)
!4259 = !DILocation(line: 195, column: 64, scope: !4135)
!4260 = !DILocation(line: 195, column: 56, scope: !4135)
!4261 = !DILocation(line: 196, column: 29, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4135, file: !2380, line: 196, column: 17)
!4263 = !DILocation(line: 197, column: 17, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4262, file: !2380, line: 196, column: 45)
!4265 = !DILocation(line: 198, column: 13, scope: !4264)
!4266 = !DILocation(line: 202, column: 20, scope: !4135)
!4267 = !DILocation(line: 203, column: 18, scope: !4135)
!4268 = !DILocation(line: 204, column: 67, scope: !4135)
!4269 = !DILocation(line: 204, column: 64, scope: !4135)
!4270 = !DILocation(line: 204, column: 56, scope: !4135)
!4271 = !DILocation(line: 205, column: 29, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4135, file: !2380, line: 205, column: 17)
!4273 = !DILocation(line: 206, column: 17, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4272, file: !2380, line: 205, column: 45)
!4275 = !DILocation(line: 207, column: 13, scope: !4274)
!4276 = !DILocation(line: 211, column: 20, scope: !4135)
!4277 = !DILocation(line: 212, column: 18, scope: !4135)
!4278 = !DILocation(line: 213, column: 67, scope: !4135)
!4279 = !DILocation(line: 213, column: 74, scope: !4135)
!4280 = !DILocation(line: 213, column: 64, scope: !4135)
!4281 = !DILocation(line: 213, column: 56, scope: !4135)
!4282 = !DILocation(line: 214, column: 13, scope: !4135)
!4283 = !DILocation(line: 217, column: 20, scope: !4135)
!4284 = !DILocation(line: 218, column: 18, scope: !4135)
!4285 = !DILocation(line: 219, column: 67, scope: !4135)
!4286 = !DILocation(line: 219, column: 74, scope: !4135)
!4287 = !DILocation(line: 219, column: 64, scope: !4135)
!4288 = !DILocation(line: 219, column: 56, scope: !4135)
!4289 = !DILocation(line: 220, column: 13, scope: !4135)
!4290 = !DILocation(line: 223, column: 20, scope: !4135)
!4291 = !DILocation(line: 224, column: 18, scope: !4135)
!4292 = !DILocation(line: 225, column: 67, scope: !4135)
!4293 = !DILocation(line: 225, column: 74, scope: !4135)
!4294 = !DILocation(line: 225, column: 64, scope: !4135)
!4295 = !DILocation(line: 225, column: 56, scope: !4135)
!4296 = !DILocation(line: 226, column: 13, scope: !4135)
!4297 = !DILocation(line: 229, column: 20, scope: !4135)
!4298 = !DILocation(line: 230, column: 18, scope: !4135)
!4299 = !DILocation(line: 231, column: 67, scope: !4135)
!4300 = !DILocation(line: 231, column: 74, scope: !4135)
!4301 = !DILocation(line: 231, column: 64, scope: !4135)
!4302 = !DILocation(line: 231, column: 56, scope: !4135)
!4303 = !DILocation(line: 232, column: 13, scope: !4135)
!4304 = !DILocation(line: 235, column: 20, scope: !4135)
!4305 = !DILocation(line: 236, column: 18, scope: !4135)
!4306 = !DILocation(line: 237, column: 66, scope: !4135)
!4307 = !DILocation(line: 237, column: 73, scope: !4135)
!4308 = !DILocation(line: 237, column: 63, scope: !4135)
!4309 = !DILocation(line: 237, column: 56, scope: !4135)
!4310 = !DILocation(line: 238, column: 13, scope: !4135)
!4311 = !DILocation(line: 241, column: 20, scope: !4135)
!4312 = !DILocation(line: 242, column: 18, scope: !4135)
!4313 = !DILocation(line: 243, column: 67, scope: !4135)
!4314 = !DILocation(line: 243, column: 74, scope: !4135)
!4315 = !DILocation(line: 243, column: 64, scope: !4135)
!4316 = !DILocation(line: 243, column: 56, scope: !4135)
!4317 = !DILocation(line: 244, column: 13, scope: !4135)
!4318 = !DILocation(line: 247, column: 20, scope: !4135)
!4319 = !DILocation(line: 248, column: 18, scope: !4135)
!4320 = !DILocation(line: 249, column: 67, scope: !4135)
!4321 = !DILocation(line: 249, column: 74, scope: !4135)
!4322 = !DILocation(line: 249, column: 64, scope: !4135)
!4323 = !DILocation(line: 249, column: 56, scope: !4135)
!4324 = !DILocation(line: 250, column: 13, scope: !4135)
!4325 = !DILocation(line: 253, column: 20, scope: !4135)
!4326 = !DILocation(line: 254, column: 18, scope: !4135)
!4327 = !DILocation(line: 255, column: 67, scope: !4135)
!4328 = !DILocation(line: 255, column: 74, scope: !4135)
!4329 = !DILocation(line: 255, column: 64, scope: !4135)
!4330 = !DILocation(line: 255, column: 56, scope: !4135)
!4331 = !DILocation(line: 256, column: 13, scope: !4135)
!4332 = !DILocation(line: 259, column: 20, scope: !4135)
!4333 = !DILocation(line: 260, column: 18, scope: !4135)
!4334 = !DILocation(line: 261, column: 67, scope: !4135)
!4335 = !DILocation(line: 261, column: 74, scope: !4135)
!4336 = !DILocation(line: 261, column: 64, scope: !4135)
!4337 = !DILocation(line: 261, column: 56, scope: !4135)
!4338 = !DILocation(line: 262, column: 13, scope: !4135)
!4339 = !DILocation(line: 265, column: 20, scope: !4135)
!4340 = !DILocation(line: 266, column: 18, scope: !4135)
!4341 = !DILocation(line: 267, column: 67, scope: !4135)
!4342 = !DILocation(line: 267, column: 74, scope: !4135)
!4343 = !DILocation(line: 267, column: 64, scope: !4135)
!4344 = !DILocation(line: 267, column: 56, scope: !4135)
!4345 = !DILocation(line: 268, column: 13, scope: !4135)
!4346 = !DILocation(line: 271, column: 20, scope: !4135)
!4347 = !DILocation(line: 272, column: 18, scope: !4135)
!4348 = !DILocation(line: 273, column: 67, scope: !4135)
!4349 = !DILocation(line: 273, column: 74, scope: !4135)
!4350 = !DILocation(line: 273, column: 64, scope: !4135)
!4351 = !DILocation(line: 273, column: 56, scope: !4135)
!4352 = !DILocation(line: 274, column: 13, scope: !4135)
!4353 = !DILocation(line: 278, column: 1, scope: !4124)
!4354 = distinct !DISubprogram(name: "spim_irqhandler", scope: !395, file: !395, line: 52, type: !905, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !4355)
!4355 = !{!4356, !4357}
!4356 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4354, file: !395, line: 52, type: !668)
!4357 = !DILocalVariable(name: "reg", scope: !4354, file: !395, line: 54, type: !158)
!4358 = !DILocation(line: 0, scope: !4354)
!4359 = !DILocation(line: 54, column: 5, scope: !4354)
!4360 = !DILocation(line: 54, column: 21, scope: !4354)
!4361 = !DILocation(line: 56, column: 5, scope: !4354)
!4362 = !DILocation(line: 57, column: 11, scope: !4354)
!4363 = !DILocation(line: 57, column: 9, scope: !4354)
!4364 = !DILocation(line: 58, column: 11, scope: !4354)
!4365 = !DILocation(line: 58, column: 9, scope: !4354)
!4366 = !DILocation(line: 60, column: 1, scope: !4354)
!4367 = distinct !DISubprogram(name: "spim_isr_Register", scope: !395, file: !395, line: 62, type: !4368, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !4370)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{null, !405}
!4370 = !{!4371}
!4371 = !DILocalVariable(name: "spim_isr", arg: 1, scope: !4367, file: !395, line: 62, type: !405)
!4372 = !DILocation(line: 0, scope: !4367)
!4373 = !DILocation(line: 64, column: 17, scope: !4367)
!4374 = !DILocation(line: 65, column: 1, scope: !4367)
!4375 = distinct !DISubprogram(name: "halSpim_init", scope: !395, file: !395, line: 75, type: !4376, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!588, !400, !400}
!4378 = !{!4379, !4380, !4381, !4382}
!4379 = !DILocalVariable(name: "setting", arg: 1, scope: !4375, file: !395, line: 75, type: !400)
!4380 = !DILocalVariable(name: "clock", arg: 2, scope: !4375, file: !395, line: 75, type: !400)
!4381 = !DILocalVariable(name: "reg", scope: !4375, file: !395, line: 78, type: !158)
!4382 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4375, file: !395, line: 79, type: !402)
!4383 = !DILocation(line: 0, scope: !4375)
!4384 = !DILocation(line: 78, column: 5, scope: !4375)
!4385 = !DILocation(line: 78, column: 21, scope: !4375)
!4386 = !DILocation(line: 80, column: 11, scope: !4375)
!4387 = !DILocation(line: 80, column: 9, scope: !4375)
!4388 = !DILocation(line: 81, column: 12, scope: !4375)
!4389 = !DILocation(line: 81, column: 16, scope: !4375)
!4390 = !DILocation(line: 81, column: 39, scope: !4375)
!4391 = !DILocation(line: 81, column: 9, scope: !4375)
!4392 = !DILocation(line: 83, column: 9, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4375, file: !395, line: 83, column: 9)
!4394 = !DILocation(line: 83, column: 13, scope: !4393)
!4395 = !DILocation(line: 83, column: 9, scope: !4375)
!4396 = !DILocation(line: 84, column: 9, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4393, file: !395, line: 83, column: 45)
!4398 = !DILocation(line: 85, column: 5, scope: !4397)
!4399 = !DILocation(line: 87, column: 38, scope: !4375)
!4400 = !DILocation(line: 89, column: 5, scope: !4375)
!4401 = !DILocation(line: 90, column: 5, scope: !4375)
!4402 = !DILocation(line: 92, column: 5, scope: !4375)
!4403 = !DILocation(line: 95, column: 5, scope: !4375)
!4404 = !DILocation(line: 96, column: 5, scope: !4375)
!4405 = !DILocation(line: 98, column: 1, scope: !4375)
!4406 = !DILocation(line: 97, column: 5, scope: !4375)
!4407 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !4408, file: !4408, line: 176, type: !4409, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !4413)
!4408 = !DIFile(filename: "../../../../..//driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!61, !4411}
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 32)
!4412 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4413 = !{!4414}
!4414 = !DILocalVariable(name: "Register", arg: 1, scope: !4407, file: !4408, line: 176, type: !4411)
!4415 = !DILocation(line: 0, scope: !4407)
!4416 = !DILocation(line: 178, column: 12, scope: !4407)
!4417 = !DILocation(line: 178, column: 5, scope: !4407)
!4418 = distinct !DISubprogram(name: "spim_busy_wait", scope: !395, file: !395, line: 102, type: !4419, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !4421)
!4419 = !DISubroutineType(types: !4420)
!4420 = !{!588}
!4421 = !{!4422}
!4422 = !DILocalVariable(name: "n", scope: !4418, file: !395, line: 104, type: !7)
!4423 = !DILocation(line: 0, scope: !4418)
!4424 = !DILocation(line: 105, column: 5, scope: !4418)
!4425 = !DILocation(line: 106, column: 14, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !395, line: 106, column: 13)
!4427 = distinct !DILexicalBlock(scope: !4418, file: !395, line: 105, column: 8)
!4428 = !DILocation(line: 106, column: 39, scope: !4426)
!4429 = !DILocation(line: 106, column: 55, scope: !4426)
!4430 = !DILocation(line: 106, column: 13, scope: !4427)
!4431 = !DILocation(line: 109, column: 14, scope: !4418)
!4432 = !DILocation(line: 109, column: 18, scope: !4418)
!4433 = !DILocation(line: 109, column: 5, scope: !4427)
!4434 = distinct !{!4434, !4424, !4435}
!4435 = !DILocation(line: 109, column: 21, scope: !4418)
!4436 = !DILocation(line: 113, column: 1, scope: !4418)
!4437 = distinct !DISubprogram(name: "spim_more_buf_trans_gpio", scope: !395, file: !395, line: 115, type: !4438, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !394, retainedNodes: !4444)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!588, !4440, !4441, !3609, !4441, !4443}
!4440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!4441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4442)
!4442 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !87, line: 51, baseType: !30)
!4443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !400)
!4444 = !{!4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455}
!4445 = !DILocalVariable(name: "op_addr", arg: 1, scope: !4437, file: !395, line: 115, type: !4440)
!4446 = !DILocalVariable(name: "n_cmd_byte", arg: 2, scope: !4437, file: !395, line: 115, type: !4441)
!4447 = !DILocalVariable(name: "buf", arg: 3, scope: !4437, file: !395, line: 115, type: !3609)
!4448 = !DILocalVariable(name: "buf_cnt", arg: 4, scope: !4437, file: !395, line: 115, type: !4441)
!4449 = !DILocalVariable(name: "flag", arg: 5, scope: !4437, file: !395, line: 115, type: !4443)
!4450 = !DILocalVariable(name: "reg", scope: !4437, file: !395, line: 117, type: !159)
!4451 = !DILocalVariable(name: "i", scope: !4437, file: !395, line: 118, type: !7)
!4452 = !DILocalVariable(name: "q", scope: !4437, file: !395, line: 118, type: !7)
!4453 = !DILocalVariable(name: "r", scope: !4437, file: !395, line: 118, type: !7)
!4454 = !DILocalVariable(name: "rc", scope: !4437, file: !395, line: 119, type: !7)
!4455 = !DILabel(scope: !4437, name: "RET_MB_TRANS", file: !395, line: 187)
!4456 = !DILocation(line: 0, scope: !4437)
!4457 = !DILocation(line: 122, column: 5, scope: !4437)
!4458 = !DILocation(line: 124, column: 5, scope: !4437)
!4459 = !DILocation(line: 125, column: 5, scope: !4437)
!4460 = !DILocation(line: 128, column: 5, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4437, file: !395, line: 128, column: 5)
!4462 = !DILocation(line: 129, column: 9, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !395, line: 128, column: 29)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !395, line: 128, column: 5)
!4465 = !DILocation(line: 128, column: 25, scope: !4464)
!4466 = !DILocation(line: 128, column: 19, scope: !4464)
!4467 = distinct !{!4467, !4460, !4468}
!4468 = !DILocation(line: 130, column: 5, scope: !4461)
!4469 = !DILocation(line: 133, column: 14, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4437, file: !395, line: 133, column: 9)
!4471 = !DILocation(line: 133, column: 9, scope: !4437)
!4472 = !DILocation(line: 134, column: 17, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !395, line: 134, column: 13)
!4474 = distinct !DILexicalBlock(scope: !4470, file: !395, line: 133, column: 32)
!4475 = !DILocation(line: 134, column: 13, scope: !4474)
!4476 = !DILocation(line: 138, column: 23, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !395, line: 138, column: 9)
!4478 = distinct !DILexicalBlock(scope: !4474, file: !395, line: 138, column: 9)
!4479 = !DILocation(line: 138, column: 9, scope: !4478)
!4480 = !DILocation(line: 140, column: 19, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4477, file: !395, line: 138, column: 39)
!4482 = !DILocation(line: 141, column: 19, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4481, file: !395, line: 141, column: 17)
!4484 = !DILocation(line: 0, scope: !4481)
!4485 = !DILocation(line: 141, column: 17, scope: !4481)
!4486 = !DILocation(line: 142, column: 17, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4483, file: !395, line: 141, column: 25)
!4488 = !DILocation(line: 143, column: 13, scope: !4487)
!4489 = !DILocation(line: 145, column: 13, scope: !4481)
!4490 = !DILocation(line: 138, column: 35, scope: !4477)
!4491 = distinct !{!4491, !4479, !4492}
!4492 = !DILocation(line: 146, column: 9, scope: !4478)
!4493 = !DILocation(line: 150, column: 5, scope: !4437)
!4494 = !DILocation(line: 0, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4437, file: !395, line: 151, column: 9)
!4496 = !DILocation(line: 160, column: 5, scope: !4437)
!4497 = !DILocation(line: 162, column: 5, scope: !4437)
!4498 = !DILocation(line: 165, column: 9, scope: !4437)
!4499 = !DILocation(line: 172, column: 17, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !395, line: 172, column: 13)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !395, line: 171, column: 31)
!4502 = distinct !DILexicalBlock(scope: !4437, file: !395, line: 171, column: 9)
!4503 = !DILocation(line: 172, column: 13, scope: !4501)
!4504 = !DILocation(line: 177, column: 23, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !395, line: 177, column: 9)
!4506 = distinct !DILexicalBlock(scope: !4501, file: !395, line: 177, column: 9)
!4507 = !DILocation(line: 177, column: 9, scope: !4506)
!4508 = !DILocation(line: 180, column: 19, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !395, line: 177, column: 39)
!4510 = !DILocation(line: 181, column: 44, scope: !4509)
!4511 = !DILocation(line: 181, column: 38, scope: !4509)
!4512 = !DILocation(line: 181, column: 26, scope: !4509)
!4513 = !DILocation(line: 181, column: 19, scope: !4509)
!4514 = !DILocation(line: 181, column: 24, scope: !4509)
!4515 = !DILocation(line: 177, column: 35, scope: !4505)
!4516 = distinct !{!4516, !4507, !4517}
!4517 = !DILocation(line: 182, column: 9, scope: !4506)
!4518 = !DILocation(line: 187, column: 1, scope: !4437)
!4519 = !DILocation(line: 189, column: 5, scope: !4437)
!4520 = !DILocation(line: 190, column: 5, scope: !4437)
!4521 = !DILocation(line: 191, column: 1, scope: !4437)
!4522 = distinct !DISubprogram(name: "hal_trng_init", scope: !2384, file: !2384, line: 59, type: !4523, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2383, retainedNodes: !2550)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!4525}
!4525 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_trng_status_t", file: !2387, line: 96, baseType: !2386)
!4526 = !DILocation(line: 61, column: 5, scope: !4522)
!4527 = distinct !DISubprogram(name: "hal_trng_deinit", scope: !2384, file: !2384, line: 71, type: !4523, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2383, retainedNodes: !2550)
!4528 = !DILocation(line: 73, column: 5, scope: !4527)
!4529 = distinct !DISubprogram(name: "hal_trng_get_generated_random_number", scope: !2384, file: !2384, line: 85, type: !4530, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2383, retainedNodes: !4533)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!4525, !4532}
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!4533 = !{!4534, !4535, !4536, !4538, !4540}
!4534 = !DILocalVariable(name: "random_number", arg: 1, scope: !4529, file: !2384, line: 85, type: !4532)
!4535 = !DILocalVariable(name: "cnt", scope: !4529, file: !2384, line: 87, type: !3106)
!4536 = !DILocalVariable(name: "addr", scope: !4537, file: !2384, line: 89, type: !616)
!4537 = distinct !DILexicalBlock(scope: !4529, file: !2384, line: 89, column: 5)
!4538 = !DILocalVariable(name: "addr", scope: !4539, file: !2384, line: 100, type: !616)
!4539 = distinct !DILexicalBlock(scope: !4529, file: !2384, line: 100, column: 5)
!4540 = !DILocalVariable(name: "addr", scope: !4541, file: !2384, line: 101, type: !616)
!4541 = distinct !DILexicalBlock(scope: !4529, file: !2384, line: 101, column: 5)
!4542 = !DILocation(line: 0, scope: !4529)
!4543 = !DILocation(line: 0, scope: !4537)
!4544 = !DILocation(line: 89, column: 5, scope: !4537)
!4545 = !DILocation(line: 91, column: 5, scope: !4529)
!4546 = !DILocation(line: 92, column: 13, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2384, line: 92, column: 13)
!4548 = distinct !DILexicalBlock(scope: !4529, file: !2384, line: 91, column: 23)
!4549 = !DILocation(line: 92, column: 50, scope: !4547)
!4550 = !DILocation(line: 92, column: 13, scope: !4548)
!4551 = !DILocation(line: 95, column: 9, scope: !4548)
!4552 = !DILocation(line: 96, column: 12, scope: !4548)
!4553 = !DILocation(line: 91, column: 16, scope: !4529)
!4554 = distinct !{!4554, !4545, !4555}
!4555 = !DILocation(line: 97, column: 5, scope: !4529)
!4556 = !DILocation(line: 99, column: 22, scope: !4529)
!4557 = !DILocation(line: 99, column: 20, scope: !4529)
!4558 = !DILocation(line: 0, scope: !4539)
!4559 = !DILocation(line: 100, column: 5, scope: !4539)
!4560 = !DILocation(line: 0, scope: !4541)
!4561 = !DILocation(line: 101, column: 5, scope: !4541)
!4562 = !DILocation(line: 103, column: 13, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4529, file: !2384, line: 103, column: 9)
!4564 = !DILocation(line: 103, column: 9, scope: !4529)
!4565 = !DILocation(line: 104, column: 24, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !2384, line: 103, column: 21)
!4567 = !DILocation(line: 105, column: 9, scope: !4566)
!4568 = !DILocation(line: 0, scope: !4563)
!4569 = !DILocation(line: 109, column: 1, scope: !4529)
!4570 = distinct !DISubprogram(name: "gpio_direction", scope: !410, file: !410, line: 107, type: !4571, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4573)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!355, !281, !2482}
!4573 = !{!4574, !4575}
!4574 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4570, file: !410, line: 107, type: !281)
!4575 = !DILocalVariable(name: "direction", arg: 2, scope: !4570, file: !410, line: 107, type: !2482)
!4576 = !DILocation(line: 0, scope: !4570)
!4577 = !DILocation(line: 109, column: 45, scope: !4570)
!4578 = !DILocation(line: 109, column: 12, scope: !4570)
!4579 = !DILocation(line: 109, column: 5, scope: !4570)
!4580 = distinct !DISubprogram(name: "gpio_write", scope: !410, file: !410, line: 113, type: !4581, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4583)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!355, !281, !54}
!4583 = !{!4584, !4585}
!4584 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4580, file: !410, line: 113, type: !281)
!4585 = !DILocalVariable(name: "data", arg: 2, scope: !4580, file: !410, line: 113, type: !54)
!4586 = !DILocation(line: 0, scope: !4580)
!4587 = !DILocation(line: 115, column: 12, scope: !4580)
!4588 = !DILocation(line: 115, column: 5, scope: !4580)
!4589 = distinct !DISubprogram(name: "gpio_int", scope: !410, file: !410, line: 120, type: !4590, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4597)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!355, !281, !4592, !4593, !4594, !4595, !4596, !54, !389}
!4592 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_NVIC_SENSE_T", file: !413, line: 72, baseType: !417)
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_DEBOUNCE_EN_T", file: !413, line: 77, baseType: !421)
!4594 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_DEBOUNCE_POL_T", file: !413, line: 82, baseType: !425)
!4595 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_DEBOUNCE_DUAL_T", file: !413, line: 87, baseType: !429)
!4596 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_DEBOUNCE_PRESCALER_T", file: !413, line: 98, baseType: !433)
!4597 = !{!4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605}
!4598 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4589, file: !410, line: 120, type: !281)
!4599 = !DILocalVariable(name: "edgeLevelTrig", arg: 2, scope: !4589, file: !410, line: 121, type: !4592)
!4600 = !DILocalVariable(name: "debounceEnable", arg: 3, scope: !4589, file: !410, line: 122, type: !4593)
!4601 = !DILocalVariable(name: "polarity", arg: 4, scope: !4589, file: !410, line: 123, type: !4594)
!4602 = !DILocalVariable(name: "dual", arg: 5, scope: !4589, file: !410, line: 124, type: !4595)
!4603 = !DILocalVariable(name: "prescaler", arg: 6, scope: !4589, file: !410, line: 125, type: !4596)
!4604 = !DILocalVariable(name: "u1PrescalerCount", arg: 7, scope: !4589, file: !410, line: 126, type: !54)
!4605 = !DILocalVariable(name: "callback", arg: 8, scope: !4589, file: !410, line: 127, type: !389)
!4606 = !DILocation(line: 0, scope: !4589)
!4607 = !DILocation(line: 129, column: 41, scope: !4589)
!4608 = !DILocation(line: 129, column: 56, scope: !4589)
!4609 = !DILocation(line: 129, column: 73, scope: !4589)
!4610 = !DILocation(line: 129, column: 84, scope: !4589)
!4611 = !DILocation(line: 129, column: 91, scope: !4589)
!4612 = !DILocation(line: 129, column: 12, scope: !4589)
!4613 = !DILocation(line: 129, column: 5, scope: !4589)
!4614 = distinct !DISubprogram(name: "eint_set_trigger_mode", scope: !410, file: !410, line: 132, type: !4615, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4617)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{!355, !281, !4592, !4594, !4595}
!4617 = !{!4618, !4619, !4620, !4621}
!4618 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4614, file: !410, line: 132, type: !281)
!4619 = !DILocalVariable(name: "edgeLevelTrig", arg: 2, scope: !4614, file: !410, line: 133, type: !4592)
!4620 = !DILocalVariable(name: "polarity", arg: 3, scope: !4614, file: !410, line: 134, type: !4594)
!4621 = !DILocalVariable(name: "dual", arg: 4, scope: !4614, file: !410, line: 135, type: !4595)
!4622 = !DILocation(line: 0, scope: !4614)
!4623 = !DILocation(line: 137, column: 56, scope: !4614)
!4624 = !DILocation(line: 137, column: 71, scope: !4614)
!4625 = !DILocation(line: 137, column: 81, scope: !4614)
!4626 = !DILocation(line: 137, column: 12, scope: !4614)
!4627 = !DILocation(line: 137, column: 5, scope: !4614)
!4628 = distinct !DISubprogram(name: "eint_set_debounce", scope: !410, file: !410, line: 140, type: !4629, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4631)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!355, !281, !4593, !4596, !54}
!4631 = !{!4632, !4633, !4634, !4635}
!4632 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4628, file: !410, line: 140, type: !281)
!4633 = !DILocalVariable(name: "debounceEnable", arg: 2, scope: !4628, file: !410, line: 141, type: !4593)
!4634 = !DILocalVariable(name: "prescaler", arg: 3, scope: !4628, file: !410, line: 142, type: !4596)
!4635 = !DILocalVariable(name: "u1PrescalerCount", arg: 4, scope: !4628, file: !410, line: 143, type: !54)
!4636 = !DILocation(line: 0, scope: !4628)
!4637 = !DILocation(line: 145, column: 53, scope: !4628)
!4638 = !DILocation(line: 145, column: 69, scope: !4628)
!4639 = !DILocation(line: 145, column: 12, scope: !4628)
!4640 = !DILocation(line: 145, column: 5, scope: !4628)
!4641 = distinct !DISubprogram(name: "eint_set_mask", scope: !410, file: !410, line: 148, type: !4642, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4644)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{!355, !281}
!4644 = !{!4645}
!4645 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4641, file: !410, line: 148, type: !281)
!4646 = !DILocation(line: 0, scope: !4641)
!4647 = !DILocation(line: 150, column: 12, scope: !4641)
!4648 = !DILocation(line: 150, column: 5, scope: !4641)
!4649 = distinct !DISubprogram(name: "eint_set_unmask", scope: !410, file: !410, line: 153, type: !4642, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4650)
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4649, file: !410, line: 153, type: !281)
!4652 = !DILocation(line: 0, scope: !4649)
!4653 = !DILocation(line: 155, column: 12, scope: !4649)
!4654 = !DILocation(line: 155, column: 5, scope: !4649)
!4655 = distinct !DISubprogram(name: "eint_set_software_trigger", scope: !410, file: !410, line: 158, type: !4642, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4656)
!4656 = !{!4657}
!4657 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4655, file: !410, line: 158, type: !281)
!4658 = !DILocation(line: 0, scope: !4655)
!4659 = !DILocation(line: 160, column: 12, scope: !4655)
!4660 = !DILocation(line: 160, column: 5, scope: !4655)
!4661 = distinct !DISubprogram(name: "eint_clear_software_trigger", scope: !410, file: !410, line: 163, type: !4642, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4662)
!4662 = !{!4663}
!4663 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4661, file: !410, line: 163, type: !281)
!4664 = !DILocation(line: 0, scope: !4661)
!4665 = !DILocation(line: 165, column: 12, scope: !4661)
!4666 = !DILocation(line: 165, column: 5, scope: !4661)
!4667 = distinct !DISubprogram(name: "gpio_get_status", scope: !410, file: !410, line: 169, type: !4668, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4677)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!4670, !281}
!4670 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_status", file: !413, line: 67, baseType: !4671)
!4671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !413, line: 62, size: 64, elements: !4672)
!4672 = !{!4673, !4674, !4675, !4676}
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PIN", scope: !4671, file: !413, line: 63, baseType: !61, size: 32)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OUTEN", scope: !4671, file: !413, line: 64, baseType: !54, size: 8, offset: 32)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "GPI_DIN", scope: !4671, file: !413, line: 65, baseType: !54, size: 8, offset: 40)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "GPO_DOUT", scope: !4671, file: !413, line: 66, baseType: !54, size: 8, offset: 48)
!4677 = !{!4678, !4679}
!4678 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4667, file: !410, line: 169, type: !281)
!4679 = !DILocalVariable(name: "p", scope: !4667, file: !410, line: 171, type: !4670)
!4680 = !DILocation(line: 0, scope: !4667)
!4681 = !DILocation(line: 171, column: 17, scope: !4667)
!4682 = !DILocation(line: 172, column: 7, scope: !4667)
!4683 = !DILocation(line: 172, column: 16, scope: !4667)
!4684 = !DILocation(line: 173, column: 20, scope: !4667)
!4685 = !DILocation(line: 173, column: 7, scope: !4667)
!4686 = !DILocation(line: 173, column: 18, scope: !4667)
!4687 = !DILocation(line: 174, column: 17, scope: !4667)
!4688 = !DILocation(line: 174, column: 7, scope: !4667)
!4689 = !DILocation(line: 174, column: 15, scope: !4667)
!4690 = !DILocation(line: 175, column: 18, scope: !4667)
!4691 = !DILocation(line: 175, column: 7, scope: !4667)
!4692 = !DILocation(line: 175, column: 16, scope: !4667)
!4693 = !DILocation(line: 176, column: 5, scope: !4667)
!4694 = distinct !DISubprogram(name: "gpio_PullUp", scope: !410, file: !410, line: 179, type: !4642, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4695)
!4695 = !{!4696, !4697}
!4696 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4694, file: !410, line: 179, type: !281)
!4697 = !DILocalVariable(name: "ret", scope: !4694, file: !410, line: 181, type: !588)
!4698 = !DILocation(line: 0, scope: !4694)
!4699 = !DILocation(line: 182, column: 5, scope: !4694)
!4700 = !DILocation(line: 183, column: 11, scope: !4694)
!4701 = !DILocation(line: 184, column: 5, scope: !4694)
!4702 = distinct !DISubprogram(name: "gpio_PullDown", scope: !410, file: !410, line: 187, type: !4642, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4703)
!4703 = !{!4704, !4705}
!4704 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4702, file: !410, line: 187, type: !281)
!4705 = !DILocalVariable(name: "ret", scope: !4702, file: !410, line: 189, type: !588)
!4706 = !DILocation(line: 0, scope: !4702)
!4707 = !DILocation(line: 190, column: 5, scope: !4702)
!4708 = !DILocation(line: 191, column: 11, scope: !4702)
!4709 = !DILocation(line: 192, column: 5, scope: !4702)
!4710 = distinct !DISubprogram(name: "gpio_PullDisable", scope: !410, file: !410, line: 194, type: !4642, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4711)
!4711 = !{!4712, !4713}
!4712 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4710, file: !410, line: 194, type: !281)
!4713 = !DILocalVariable(name: "ret", scope: !4710, file: !410, line: 196, type: !588)
!4714 = !DILocation(line: 0, scope: !4710)
!4715 = !DILocation(line: 197, column: 5, scope: !4710)
!4716 = !DILocation(line: 198, column: 11, scope: !4710)
!4717 = !DILocation(line: 199, column: 11, scope: !4710)
!4718 = !DILocation(line: 200, column: 5, scope: !4710)
!4719 = distinct !DISubprogram(name: "gpio_SetDriving", scope: !410, file: !410, line: 202, type: !4581, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4720)
!4720 = !{!4721, !4722, !4723}
!4721 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4719, file: !410, line: 202, type: !281)
!4722 = !DILocalVariable(name: "driving", arg: 2, scope: !4719, file: !410, line: 202, type: !54)
!4723 = !DILocalVariable(name: "ret", scope: !4719, file: !410, line: 204, type: !588)
!4724 = !DILocation(line: 0, scope: !4719)
!4725 = !DILocation(line: 205, column: 11, scope: !4719)
!4726 = !DILocation(line: 206, column: 5, scope: !4719)
!4727 = distinct !DISubprogram(name: "gpio_GetDriving", scope: !410, file: !410, line: 209, type: !4728, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4730)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!355, !281, !500}
!4730 = !{!4731, !4732, !4733}
!4731 = !DILocalVariable(name: "gpio_name", arg: 1, scope: !4727, file: !410, line: 209, type: !281)
!4732 = !DILocalVariable(name: "driving", arg: 2, scope: !4727, file: !410, line: 209, type: !500)
!4733 = !DILocalVariable(name: "ret", scope: !4727, file: !410, line: 211, type: !588)
!4734 = !DILocation(line: 0, scope: !4727)
!4735 = !DILocation(line: 212, column: 11, scope: !4727)
!4736 = !DILocation(line: 213, column: 5, scope: !4727)
!4737 = distinct !DISubprogram(name: "gpio_backup_all_registers", scope: !410, file: !410, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4738)
!4738 = !{!4739}
!4739 = !DILocalVariable(name: "i", scope: !4737, file: !410, line: 218, type: !61)
!4740 = !DILocation(line: 0, scope: !4737)
!4741 = !DILocation(line: 220, column: 5, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4737, file: !410, line: 220, column: 5)
!4743 = !DILocation(line: 221, column: 40, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !410, line: 220, column: 78)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !410, line: 220, column: 5)
!4746 = !DILocation(line: 221, column: 29, scope: !4744)
!4747 = !DILocation(line: 221, column: 38, scope: !4744)
!4748 = !DILocation(line: 220, column: 74, scope: !4745)
!4749 = !DILocation(line: 220, column: 15, scope: !4745)
!4750 = distinct !{!4750, !4741, !4751}
!4751 = !DILocation(line: 222, column: 5, scope: !4742)
!4752 = !DILocation(line: 224, column: 1, scope: !4737)
!4753 = distinct !DISubprogram(name: "gpio_restore_all_registers", scope: !410, file: !410, line: 226, type: !154, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !4754)
!4754 = !{!4755}
!4755 = !DILocalVariable(name: "i", scope: !4753, file: !410, line: 228, type: !61)
!4756 = !DILocation(line: 0, scope: !4753)
!4757 = !DILocation(line: 230, column: 5, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4753, file: !410, line: 230, column: 5)
!4759 = !DILocation(line: 231, column: 71, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !410, line: 230, column: 78)
!4761 = distinct !DILexicalBlock(scope: !4758, file: !410, line: 230, column: 5)
!4762 = !DILocation(line: 231, column: 9, scope: !4760)
!4763 = !DILocation(line: 231, column: 49, scope: !4760)
!4764 = !DILocation(line: 230, column: 74, scope: !4761)
!4765 = !DILocation(line: 230, column: 15, scope: !4761)
!4766 = distinct !{!4766, !4757, !4767}
!4767 = !DILocation(line: 233, column: 5, scope: !4758)
!4768 = !DILocation(line: 234, column: 1, scope: !4753)
!4769 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !2394, file: !2394, line: 47, type: !4770, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !4772)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{null, !61}
!4772 = !{!4773}
!4773 = !DILocalVariable(name: "addr", arg: 1, scope: !4769, file: !2394, line: 47, type: !61)
!4774 = !DILocation(line: 0, scope: !4769)
!4775 = !DILocation(line: 49, column: 15, scope: !4769)
!4776 = !DILocation(line: 51, column: 5, scope: !4769)
!4777 = !{i64 2624}
!4778 = !DILocation(line: 52, column: 5, scope: !4769)
!4779 = !{i64 2651}
!4780 = !DILocation(line: 53, column: 1, scope: !4769)
!4781 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !2394, file: !2394, line: 56, type: !4782, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !4784)
!4782 = !DISubroutineType(types: !4783)
!4783 = !{null, !30}
!4784 = !{!4785}
!4785 = !DILocalVariable(name: "source", arg: 1, scope: !4781, file: !2394, line: 56, type: !30)
!4786 = !DILocation(line: 0, scope: !4781)
!4787 = !DILocation(line: 58, column: 16, scope: !4781)
!4788 = !DILocation(line: 59, column: 1, scope: !4781)
!4789 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2394, file: !2394, line: 61, type: !2531, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !4790)
!4790 = !{!4791}
!4791 = !DILocalVariable(name: "mask", scope: !4789, file: !2394, line: 63, type: !61)
!4792 = !DILocation(line: 470, column: 3, scope: !4793, inlinedAt: !4797)
!4793 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !4794, file: !4794, line: 466, type: !2531, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !4795)
!4794 = !DIFile(filename: "../../../../..//driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!4795 = !{!4796}
!4796 = !DILocalVariable(name: "result", scope: !4793, file: !4794, line: 468, type: !61)
!4797 = distinct !DILocation(line: 64, column: 5, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4789, file: !2394, line: 64, column: 5)
!4799 = !{i64 302193}
!4800 = !DILocation(line: 0, scope: !4793, inlinedAt: !4797)
!4801 = !DILocation(line: 0, scope: !4789)
!4802 = !DILocation(line: 330, column: 3, scope: !4803, inlinedAt: !4804)
!4803 = distinct !DISubprogram(name: "__disable_irq", scope: !4794, file: !4794, line: 328, type: !154, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !2550)
!4804 = distinct !DILocation(line: 64, column: 5, scope: !4798)
!4805 = !{i64 298857}
!4806 = !DILocation(line: 65, column: 5, scope: !4789)
!4807 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2394, file: !2394, line: 68, type: !4770, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !4808)
!4808 = !{!4809}
!4809 = !DILocalVariable(name: "mask", arg: 1, scope: !4807, file: !2394, line: 68, type: !61)
!4810 = !DILocation(line: 0, scope: !4807)
!4811 = !DILocalVariable(name: "priMask", arg: 1, scope: !4812, file: !4794, line: 481, type: !61)
!4812 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !4794, file: !4794, line: 481, type: !4770, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !4813)
!4813 = !{!4811}
!4814 = !DILocation(line: 0, scope: !4812, inlinedAt: !4815)
!4815 = distinct !DILocation(line: 70, column: 5, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4807, file: !2394, line: 70, column: 5)
!4817 = !DILocation(line: 483, column: 3, scope: !4812, inlinedAt: !4815)
!4818 = !{i64 302511}
!4819 = !DILocation(line: 71, column: 1, scope: !4807)
!4820 = distinct !DISubprogram(name: "pinmux_config", scope: !2439, file: !2439, line: 54, type: !4821, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !4823)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!355, !281, !61}
!4823 = !{!4824, !4825, !4826}
!4824 = !DILocalVariable(name: "gpio_index", arg: 1, scope: !4820, file: !2439, line: 54, type: !281)
!4825 = !DILocalVariable(name: "function", arg: 2, scope: !4820, file: !2439, line: 54, type: !61)
!4826 = !DILocalVariable(name: "ePadIndex", scope: !4820, file: !2439, line: 56, type: !282)
!4827 = !DILocation(line: 0, scope: !4820)
!4828 = !DILocation(line: 60, column: 5, scope: !4820)
!4829 = !DILocation(line: 205, column: 38, scope: !4820)
!4830 = !DILocation(line: 205, column: 5, scope: !4820)
!4831 = !DILocation(line: 207, column: 5, scope: !4820)
!4832 = !DILocation(line: 208, column: 1, scope: !4820)
!4833 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !456, file: !456, line: 60, type: !4834, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4836)
!4834 = !DISubroutineType(types: !4835)
!4835 = !{!139}
!4836 = !{!4837}
!4837 = !DILocalVariable(name: "current_count", scope: !4833, file: !456, line: 62, type: !139)
!4838 = !DILocation(line: 64, column: 21, scope: !4833)
!4839 = !DILocation(line: 0, scope: !4833)
!4840 = !DILocation(line: 66, column: 5, scope: !4833)
!4841 = distinct !DISubprogram(name: "sfc_get_systime", scope: !456, file: !456, line: 69, type: !4834, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !2550)
!4842 = !DILocation(line: 71, column: 12, scope: !4841)
!4843 = !DILocation(line: 71, column: 5, scope: !4841)
!4844 = distinct !DISubprogram(name: "sfc_delay_time", scope: !456, file: !456, line: 74, type: !2952, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4845)
!4845 = !{!4846, !4847, !4848}
!4846 = !DILocalVariable(name: "count", arg: 1, scope: !4844, file: !456, line: 74, type: !139)
!4847 = !DILocalVariable(name: "end_count", scope: !4844, file: !456, line: 76, type: !139)
!4848 = !DILocalVariable(name: "current", scope: !4844, file: !456, line: 76, type: !139)
!4849 = !DILocation(line: 0, scope: !4844)
!4850 = !DILocation(line: 78, column: 17, scope: !4844)
!4851 = !DILocation(line: 78, column: 35, scope: !4844)
!4852 = !DILocation(line: 78, column: 43, scope: !4844)
!4853 = !DILocation(line: 79, column: 15, scope: !4844)
!4854 = !DILocation(line: 80, column: 12, scope: !4844)
!4855 = !DILocation(line: 80, column: 5, scope: !4844)
!4856 = !DILocation(line: 81, column: 19, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4844, file: !456, line: 80, column: 49)
!4858 = distinct !{!4858, !4855, !4859}
!4859 = !DILocation(line: 82, column: 5, scope: !4844)
!4860 = !DILocation(line: 83, column: 1, scope: !4844)
!4861 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !456, file: !456, line: 85, type: !4782, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4862)
!4862 = !{!4863}
!4863 = !DILocalVariable(name: "ms", arg: 1, scope: !4861, file: !456, line: 85, type: !30)
!4864 = !DILocation(line: 0, scope: !4861)
!4865 = !DILocation(line: 87, column: 23, scope: !4861)
!4866 = !DILocation(line: 87, column: 5, scope: !4861)
!4867 = !DILocation(line: 88, column: 1, scope: !4861)
!4868 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !456, file: !456, line: 90, type: !4869, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !2550)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{!7}
!4871 = !DILocation(line: 92, column: 5, scope: !4868)
!4872 = distinct !DISubprogram(name: "sfc_Init", scope: !456, file: !456, line: 121, type: !1717, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4873)
!4873 = !{!4874, !4875}
!4874 = !DILocalVariable(name: "security_enable", arg: 1, scope: !4872, file: !456, line: 121, type: !7)
!4875 = !DILocalVariable(name: "reg", scope: !4872, file: !456, line: 123, type: !30)
!4876 = !DILocation(line: 0, scope: !4872)
!4877 = !DILocation(line: 125, column: 27, scope: !4872)
!4878 = !DILocation(line: 141, column: 5, scope: !4872)
!4879 = !DILocation(line: 142, column: 5, scope: !4872)
!4880 = !DILocation(line: 143, column: 5, scope: !4872)
!4881 = !DILocation(line: 144, column: 5, scope: !4872)
!4882 = !DILocation(line: 145, column: 5, scope: !4872)
!4883 = !DILocation(line: 147, column: 5, scope: !4872)
!4884 = !DILocation(line: 150, column: 11, scope: !4872)
!4885 = !DILocation(line: 151, column: 9, scope: !4872)
!4886 = !DILocation(line: 152, column: 5, scope: !4872)
!4887 = !DILocation(line: 153, column: 5, scope: !4872)
!4888 = !DILocation(line: 155, column: 11, scope: !4872)
!4889 = !DILocation(line: 156, column: 9, scope: !4872)
!4890 = !DILocation(line: 157, column: 5, scope: !4872)
!4891 = !DILocation(line: 158, column: 5, scope: !4872)
!4892 = !DILocation(line: 160, column: 11, scope: !4872)
!4893 = !DILocation(line: 161, column: 9, scope: !4872)
!4894 = !DILocation(line: 162, column: 5, scope: !4872)
!4895 = !DILocation(line: 163, column: 5, scope: !4872)
!4896 = !DILocation(line: 165, column: 11, scope: !4872)
!4897 = !DILocation(line: 166, column: 9, scope: !4872)
!4898 = !DILocation(line: 167, column: 5, scope: !4872)
!4899 = !DILocation(line: 168, column: 5, scope: !4872)
!4900 = !DILocation(line: 173, column: 9, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4872, file: !456, line: 173, column: 9)
!4902 = !DILocation(line: 173, column: 9, scope: !4872)
!4903 = !DILocation(line: 174, column: 31, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4901, file: !456, line: 173, column: 26)
!4905 = !DILocation(line: 184, column: 9, scope: !4904)
!4906 = !DILocation(line: 185, column: 9, scope: !4904)
!4907 = !DILocation(line: 187, column: 9, scope: !4904)
!4908 = !DILocation(line: 188, column: 9, scope: !4904)
!4909 = !DILocation(line: 189, column: 9, scope: !4904)
!4910 = !DILocation(line: 190, column: 9, scope: !4904)
!4911 = !DILocation(line: 192, column: 9, scope: !4904)
!4912 = !DILocation(line: 193, column: 5, scope: !4904)
!4913 = !DILocation(line: 194, column: 1, scope: !4872)
!4914 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !456, file: !456, line: 196, type: !4869, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4915)
!4915 = !{!4916, !4917}
!4916 = !DILocalVariable(name: "qpi_en", scope: !4914, file: !456, line: 198, type: !401)
!4917 = !DILocalVariable(name: "sfc_read_mode", scope: !4914, file: !456, line: 199, type: !401)
!4918 = !DILocation(line: 198, column: 29, scope: !4914)
!4919 = !DILocation(line: 0, scope: !4914)
!4920 = !DILocation(line: 199, column: 36, scope: !4914)
!4921 = !DILocation(line: 199, column: 89, scope: !4914)
!4922 = !DILocation(line: 204, column: 23, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4914, file: !456, line: 204, column: 9)
!4924 = !DILocation(line: 204, column: 9, scope: !4914)
!4925 = !DILocation(line: 218, column: 1, scope: !4914)
!4926 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !456, file: !456, line: 221, type: !4927, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4929)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !401, !7}
!4929 = !{!4930, !4931, !4932}
!4930 = !DILocalVariable(name: "reg", arg: 1, scope: !4926, file: !456, line: 221, type: !401)
!4931 = !DILocalVariable(name: "mode", arg: 2, scope: !4926, file: !456, line: 221, type: !7)
!4932 = !DILocalVariable(name: "tmp", scope: !4926, file: !456, line: 223, type: !401)
!4933 = !DILocation(line: 0, scope: !4926)
!4934 = !DILocation(line: 224, column: 5, scope: !4926)
!4935 = !DILocation(line: 236, column: 9, scope: !4926)
!4936 = !DILocation(line: 237, column: 5, scope: !4926)
!4937 = !DILocation(line: 238, column: 1, scope: !4926)
!4938 = distinct !DISubprogram(name: "sfc_Command_List", scope: !456, file: !456, line: 296, type: !4939, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4941)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{null, !484}
!4941 = !{!4942, !4943, !4944, !4945}
!4942 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !4938, file: !456, line: 296, type: !484)
!4943 = !DILocalVariable(name: "i", scope: !4938, file: !456, line: 298, type: !30)
!4944 = !DILocalVariable(name: "val", scope: !4938, file: !456, line: 299, type: !30)
!4945 = !DILocalVariable(name: "force_qpi", scope: !4938, file: !456, line: 299, type: !30)
!4946 = !DILocation(line: 0, scope: !4938)
!4947 = !DILocation(line: 301, column: 10, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4938, file: !456, line: 301, column: 9)
!4949 = !DILocation(line: 301, column: 9, scope: !4938)
!4950 = !DILocation(line: 305, column: 11, scope: !4938)
!4951 = !DILocation(line: 310, column: 5, scope: !4938)
!4952 = !DILocation(line: 311, column: 17, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4938, file: !456, line: 310, column: 17)
!4954 = !DILocation(line: 311, column: 9, scope: !4953)
!4955 = !DILocation(line: 319, column: 17, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4953, file: !456, line: 311, column: 29)
!4957 = !DILocation(line: 321, column: 17, scope: !4956)
!4958 = !DILocation(line: 322, column: 17, scope: !4956)
!4959 = !DILocation(line: 325, column: 33, scope: !4953)
!4960 = !DILocation(line: 325, column: 23, scope: !4953)
!4961 = !DILocation(line: 325, column: 49, scope: !4953)
!4962 = !DILocation(line: 325, column: 39, scope: !4953)
!4963 = !DILocation(line: 325, column: 9, scope: !4953)
!4964 = !DILocation(line: 327, column: 15, scope: !4953)
!4965 = !DILocation(line: 327, column: 11, scope: !4953)
!4966 = !DILocation(line: 329, column: 9, scope: !4953)
!4967 = distinct !{!4967, !4951, !4968}
!4968 = !DILocation(line: 330, column: 5, scope: !4938)
!4969 = !DILocation(line: 331, column: 1, scope: !4938)
!4970 = distinct !DISubprogram(name: "sfc_transfer", scope: !456, file: !456, line: 417, type: !4971, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !4974)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!7, !484, !4973, !468, !4973, !30}
!4973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !401)
!4974 = !{!4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984, !4985}
!4975 = !DILocalVariable(name: "cmd", arg: 1, scope: !4970, file: !456, line: 417, type: !484)
!4976 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !4970, file: !456, line: 417, type: !4973)
!4977 = !DILocalVariable(name: "data", arg: 3, scope: !4970, file: !456, line: 417, type: !468)
!4978 = !DILocalVariable(name: "data_len", arg: 4, scope: !4970, file: !456, line: 417, type: !4973)
!4979 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !4970, file: !456, line: 417, type: !30)
!4980 = !DILocalVariable(name: "tmp", scope: !4970, file: !456, line: 419, type: !30)
!4981 = !DILocalVariable(name: "i", scope: !4970, file: !456, line: 419, type: !30)
!4982 = !DILocalVariable(name: "j", scope: !4970, file: !456, line: 419, type: !30)
!4983 = !DILocalVariable(name: "p_data", scope: !4970, file: !456, line: 420, type: !468)
!4984 = !DILocalVariable(name: "p_tmp", scope: !4970, file: !456, line: 420, type: !468)
!4985 = !DILocalVariable(name: "savedMask", scope: !4970, file: !456, line: 421, type: !30)
!4986 = !DILocation(line: 0, scope: !4970)
!4987 = !DILocation(line: 419, column: 5, scope: !4970)
!4988 = !DILocation(line: 423, column: 18, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4970, file: !456, line: 423, column: 9)
!4990 = !DILocation(line: 423, column: 30, scope: !4989)
!4991 = !DILocation(line: 423, column: 9, scope: !4970)
!4992 = !DILocation(line: 430, column: 19, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !456, line: 430, column: 5)
!4994 = distinct !DILexicalBlock(scope: !4970, file: !456, line: 430, column: 5)
!4995 = !DILocation(line: 430, column: 5, scope: !4994)
!4996 = !DILocation(line: 431, column: 25, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !456, line: 431, column: 9)
!4998 = distinct !DILexicalBlock(scope: !4993, file: !456, line: 430, column: 43)
!4999 = !DILocation(line: 431, column: 32, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4997, file: !456, line: 431, column: 9)
!5001 = !DILocation(line: 431, column: 9, scope: !4997)
!5002 = !DILocation(line: 432, column: 24, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5000, file: !456, line: 431, column: 62)
!5004 = !DILocation(line: 432, column: 13, scope: !5003)
!5005 = !DILocation(line: 432, column: 22, scope: !5003)
!5006 = !DILocation(line: 431, column: 53, scope: !5000)
!5007 = !DILocation(line: 431, column: 58, scope: !5000)
!5008 = !DILocation(line: 431, column: 42, scope: !5000)
!5009 = distinct !{!5009, !5001, !5010}
!5010 = !DILocation(line: 433, column: 9, scope: !4997)
!5011 = !DILocation(line: 434, column: 9, scope: !4998)
!5012 = !DILocation(line: 0, scope: !4994)
!5013 = !DILocation(line: 436, column: 15, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4998, file: !456, line: 436, column: 13)
!5015 = !DILocation(line: 436, column: 20, scope: !5014)
!5016 = !DILocation(line: 437, column: 13, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !456, line: 436, column: 46)
!5018 = !DILocation(line: 438, column: 13, scope: !5017)
!5019 = !DILocation(line: 440, column: 9, scope: !5017)
!5020 = !DILocation(line: 430, column: 37, scope: !4993)
!5021 = distinct !{!5021, !4995, !5022}
!5022 = !DILocation(line: 441, column: 5, scope: !4994)
!5023 = !DILocation(line: 443, column: 17, scope: !4970)
!5024 = !DILocation(line: 444, column: 9, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4970, file: !456, line: 444, column: 9)
!5026 = !DILocation(line: 444, column: 9, scope: !4970)
!5027 = !DILocation(line: 445, column: 9, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5025, file: !456, line: 444, column: 32)
!5029 = !DILocation(line: 446, column: 9, scope: !5028)
!5030 = !DILocation(line: 447, column: 5, scope: !5028)
!5031 = !DILocation(line: 449, column: 5, scope: !4970)
!5032 = !DILocation(line: 450, column: 5, scope: !4970)
!5033 = !DILocation(line: 452, column: 5, scope: !4970)
!5034 = !DILocation(line: 453, column: 5, scope: !4970)
!5035 = !DILocation(line: 454, column: 5, scope: !4970)
!5036 = !DILocation(line: 456, column: 76, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !456, line: 456, column: 5)
!5038 = distinct !DILexicalBlock(scope: !4970, file: !456, line: 456, column: 5)
!5039 = !DILocation(line: 456, column: 5, scope: !5038)
!5040 = !DILocation(line: 456, column: 62, scope: !5038)
!5041 = !DILocation(line: 457, column: 17, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5037, file: !456, line: 456, column: 111)
!5043 = !DILocation(line: 457, column: 15, scope: !5042)
!5044 = !DILocation(line: 456, column: 88, scope: !5037)
!5045 = !DILocation(line: 456, column: 93, scope: !5037)
!5046 = !DILocation(line: 456, column: 101, scope: !5037)
!5047 = distinct !{!5047, !5039, !5048}
!5048 = !DILocation(line: 458, column: 5, scope: !5038)
!5049 = !DILocation(line: 461, column: 1, scope: !4970)
!5050 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !456, file: !456, line: 402, type: !1717, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5051)
!5051 = !{!5052, !5053}
!5052 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !5050, file: !456, line: 402, type: !7)
!5053 = !DILocalVariable(name: "val", scope: !5050, file: !456, line: 404, type: !401)
!5054 = !DILocation(line: 0, scope: !5050)
!5055 = !DILocation(line: 406, column: 11, scope: !5050)
!5056 = !DILocation(line: 408, column: 9, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5050, file: !456, line: 408, column: 9)
!5058 = !DILocation(line: 408, column: 25, scope: !5057)
!5059 = !DILocation(line: 412, column: 9, scope: !5050)
!5060 = !DILocation(line: 414, column: 5, scope: !5050)
!5061 = !DILocation(line: 415, column: 1, scope: !5050)
!5062 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !456, file: !456, line: 384, type: !154, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !2550)
!5063 = !DILocation(line: 396, column: 5, scope: !5062)
!5064 = !DILocation(line: 397, column: 5, scope: !5062)
!5065 = !DILocation(line: 399, column: 1, scope: !5062)
!5066 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !456, file: !456, line: 339, type: !5067, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5069)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!401}
!5069 = !{!5070, !5071}
!5070 = !DILocalVariable(name: "val", scope: !5066, file: !456, line: 341, type: !401)
!5071 = !DILocalVariable(name: "misc_ctl", scope: !5066, file: !456, line: 342, type: !401)
!5072 = !DILocation(line: 0, scope: !5066)
!5073 = !DILocation(line: 344, column: 11, scope: !5066)
!5074 = !DILocation(line: 347, column: 9, scope: !5066)
!5075 = !DILocation(line: 349, column: 5, scope: !5066)
!5076 = !DILocation(line: 352, column: 5, scope: !5066)
!5077 = !DILocation(line: 352, column: 14, scope: !5066)
!5078 = !DILocation(line: 352, column: 44, scope: !5066)
!5079 = !DILocation(line: 352, column: 12, scope: !5066)
!5080 = distinct !{!5080, !5076, !5081}
!5081 = !DILocation(line: 353, column: 9, scope: !5066)
!5082 = !DILocation(line: 354, column: 13, scope: !5066)
!5083 = !DILocation(line: 354, column: 43, scope: !5066)
!5084 = !DILocation(line: 354, column: 5, scope: !5066)
!5085 = distinct !{!5085, !5084, !5086}
!5086 = !DILocation(line: 355, column: 9, scope: !5066)
!5087 = !DILocation(line: 357, column: 5, scope: !5066)
!5088 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !456, file: !456, line: 366, type: !154, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5089)
!5089 = !{!5090}
!5090 = !DILocalVariable(name: "val", scope: !5088, file: !456, line: 368, type: !401)
!5091 = !DILocation(line: 371, column: 11, scope: !5088)
!5092 = !DILocation(line: 0, scope: !5088)
!5093 = !DILocation(line: 372, column: 9, scope: !5088)
!5094 = !DILocation(line: 373, column: 5, scope: !5088)
!5095 = !DILocation(line: 378, column: 11, scope: !5088)
!5096 = !DILocation(line: 379, column: 9, scope: !5088)
!5097 = !DILocation(line: 380, column: 5, scope: !5088)
!5098 = !DILocation(line: 381, column: 1, scope: !5088)
!5099 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !456, file: !456, line: 463, type: !154, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5100)
!5100 = !{!5101, !5102}
!5101 = !DILocalVariable(name: "i", scope: !5099, file: !456, line: 465, type: !30)
!5102 = !DILocalVariable(name: "p_data", scope: !5099, file: !456, line: 466, type: !468)
!5103 = !DILocation(line: 0, scope: !5099)
!5104 = !DILocation(line: 470, column: 5, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5099, file: !456, line: 470, column: 5)
!5106 = !DILocation(line: 471, column: 9, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !456, line: 470, column: 63)
!5108 = distinct !DILexicalBlock(scope: !5105, file: !456, line: 470, column: 5)
!5109 = !DILocation(line: 470, column: 52, scope: !5108)
!5110 = !DILocation(line: 470, column: 59, scope: !5108)
!5111 = !DILocation(line: 470, column: 19, scope: !5108)
!5112 = distinct !{!5112, !5104, !5113}
!5113 = !DILocation(line: 472, column: 5, scope: !5105)
!5114 = !DILocation(line: 475, column: 1, scope: !5099)
!5115 = distinct !DISubprogram(name: "sfc_read", scope: !456, file: !456, line: 478, type: !5116, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5118)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!7, !484, !4973, !468, !4973}
!5118 = !{!5119, !5120, !5121, !5122}
!5119 = !DILocalVariable(name: "cmd", arg: 1, scope: !5115, file: !456, line: 478, type: !484)
!5120 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !5115, file: !456, line: 478, type: !4973)
!5121 = !DILocalVariable(name: "data", arg: 3, scope: !5115, file: !456, line: 478, type: !468)
!5122 = !DILocalVariable(name: "data_len", arg: 4, scope: !5115, file: !456, line: 478, type: !4973)
!5123 = !DILocation(line: 0, scope: !5115)
!5124 = !DILocation(line: 480, column: 12, scope: !5115)
!5125 = !DILocation(line: 480, column: 5, scope: !5115)
!5126 = distinct !DISubprogram(name: "sfc_write", scope: !456, file: !456, line: 490, type: !5127, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5129)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!7, !484, !4973, !484, !4973}
!5129 = !{!5130, !5131, !5132, !5133, !5134, !5138}
!5130 = !DILocalVariable(name: "cmd", arg: 1, scope: !5126, file: !456, line: 490, type: !484)
!5131 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !5126, file: !456, line: 490, type: !4973)
!5132 = !DILocalVariable(name: "data", arg: 3, scope: !5126, file: !456, line: 490, type: !484)
!5133 = !DILocalVariable(name: "data_len", arg: 4, scope: !5126, file: !456, line: 490, type: !4973)
!5134 = !DILocalVariable(name: "tmp", scope: !5126, file: !456, line: 492, type: !5135)
!5135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 1280, elements: !5136)
!5136 = !{!5137}
!5137 = !DISubrange(count: 160)
!5138 = !DILocalVariable(name: "total", scope: !5126, file: !456, line: 493, type: !7)
!5139 = !DILocation(line: 0, scope: !5126)
!5140 = !DILocation(line: 492, column: 5, scope: !5126)
!5141 = !DILocation(line: 492, column: 19, scope: !5126)
!5142 = !DILocation(line: 493, column: 25, scope: !5126)
!5143 = !DILocation(line: 495, column: 15, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5126, file: !456, line: 495, column: 9)
!5145 = !DILocation(line: 495, column: 9, scope: !5126)
!5146 = !DILocation(line: 496, column: 9, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5148, file: !456, line: 496, column: 9)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !456, line: 496, column: 9)
!5149 = distinct !DILexicalBlock(scope: !5144, file: !456, line: 495, column: 31)
!5150 = distinct !{!5150, !5146, !5146}
!5151 = !DILocation(line: 498, column: 5, scope: !5126)
!5152 = !DILocation(line: 500, column: 9, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5126, file: !456, line: 500, column: 9)
!5154 = !DILocation(line: 500, column: 14, scope: !5153)
!5155 = !DILocation(line: 501, column: 17, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5153, file: !456, line: 500, column: 27)
!5157 = !DILocation(line: 501, column: 9, scope: !5156)
!5158 = !DILocation(line: 502, column: 5, scope: !5156)
!5159 = !DILocation(line: 503, column: 12, scope: !5126)
!5160 = !DILocation(line: 504, column: 1, scope: !5126)
!5161 = !DILocation(line: 503, column: 5, scope: !5126)
!5162 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !456, file: !456, line: 506, type: !5163, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5165)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!7, !484, !4973}
!5165 = !{!5166, !5167, !5168, !5169, !5170}
!5166 = !DILocalVariable(name: "cmd", arg: 1, scope: !5162, file: !456, line: 506, type: !484)
!5167 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !5162, file: !456, line: 506, type: !4973)
!5168 = !DILocalVariable(name: "tmp", scope: !5162, file: !456, line: 508, type: !5135)
!5169 = !DILocalVariable(name: "crc", scope: !5162, file: !456, line: 509, type: !401)
!5170 = !DILocalVariable(name: "total", scope: !5162, file: !456, line: 510, type: !7)
!5171 = !DILocation(line: 0, scope: !5162)
!5172 = !DILocation(line: 508, column: 5, scope: !5162)
!5173 = !DILocation(line: 508, column: 19, scope: !5162)
!5174 = !DILocation(line: 509, column: 5, scope: !5162)
!5175 = !DILocation(line: 509, column: 25, scope: !5162)
!5176 = !DILocation(line: 509, column: 19, scope: !5162)
!5177 = !DILocation(line: 510, column: 25, scope: !5162)
!5178 = !DILocation(line: 514, column: 5, scope: !5162)
!5179 = !DILocation(line: 515, column: 13, scope: !5162)
!5180 = !DILocation(line: 515, column: 5, scope: !5162)
!5181 = !DILocation(line: 517, column: 12, scope: !5162)
!5182 = !DILocation(line: 518, column: 1, scope: !5162)
!5183 = !DILocation(line: 517, column: 5, scope: !5162)
!5184 = distinct !DISubprogram(name: "__sfc_write", scope: !456, file: !456, line: 538, type: !4971, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !5185)
!5185 = !{!5186, !5187, !5188, !5189, !5190, !5191, !5192}
!5186 = !DILocalVariable(name: "cmd", arg: 1, scope: !5184, file: !456, line: 538, type: !484)
!5187 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !5184, file: !456, line: 538, type: !4973)
!5188 = !DILocalVariable(name: "data", arg: 3, scope: !5184, file: !456, line: 538, type: !468)
!5189 = !DILocalVariable(name: "data_len", arg: 4, scope: !5184, file: !456, line: 538, type: !4973)
!5190 = !DILocalVariable(name: "security_enable", arg: 5, scope: !5184, file: !456, line: 538, type: !30)
!5191 = !DILocalVariable(name: "tmp", scope: !5184, file: !456, line: 540, type: !5135)
!5192 = !DILocalVariable(name: "total", scope: !5184, file: !456, line: 541, type: !7)
!5193 = !DILocation(line: 0, scope: !5184)
!5194 = !DILocation(line: 540, column: 5, scope: !5184)
!5195 = !DILocation(line: 540, column: 19, scope: !5184)
!5196 = !DILocation(line: 541, column: 25, scope: !5184)
!5197 = !DILocation(line: 543, column: 15, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5184, file: !456, line: 543, column: 9)
!5199 = !DILocation(line: 543, column: 9, scope: !5184)
!5200 = !DILocation(line: 544, column: 9, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !456, line: 544, column: 9)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !456, line: 544, column: 9)
!5203 = distinct !DILexicalBlock(scope: !5198, file: !456, line: 543, column: 30)
!5204 = distinct !{!5204, !5200, !5200}
!5205 = !DILocation(line: 546, column: 5, scope: !5184)
!5206 = !DILocation(line: 548, column: 9, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5184, file: !456, line: 548, column: 9)
!5208 = !DILocation(line: 548, column: 14, scope: !5207)
!5209 = !DILocation(line: 549, column: 17, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5207, file: !456, line: 548, column: 27)
!5211 = !DILocation(line: 549, column: 9, scope: !5210)
!5212 = !DILocation(line: 550, column: 5, scope: !5210)
!5213 = !DILocation(line: 551, column: 12, scope: !5184)
!5214 = !DILocation(line: 552, column: 1, scope: !5184)
!5215 = !DILocation(line: 551, column: 5, scope: !5184)
!5216 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !475, file: !475, line: 186, type: !154, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !2550)
!5217 = !DILocation(line: 188, column: 5, scope: !5216)
!5218 = !DILocation(line: 189, column: 5, scope: !5216)
!5219 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !475, file: !475, line: 195, type: !154, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !2550)
!5220 = !DILocation(line: 197, column: 5, scope: !5219)
!5221 = !DILocation(line: 198, column: 5, scope: !5219)
!5222 = distinct !DISubprogram(name: "flash_check_device", scope: !475, file: !475, line: 276, type: !4869, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5223)
!5223 = !{!5224, !5225, !5226, !5228}
!5224 = !DILocalVariable(name: "i", scope: !5222, file: !475, line: 278, type: !7)
!5225 = !DILocalVariable(name: "jedec", scope: !5222, file: !475, line: 279, type: !401)
!5226 = !DILocalVariable(name: "buf", scope: !5222, file: !475, line: 280, type: !5227)
!5227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 40, elements: !350)
!5228 = !DILocalVariable(name: "info", scope: !5222, file: !475, line: 281, type: !486)
!5229 = !DILocation(line: 280, column: 5, scope: !5222)
!5230 = !DILocation(line: 280, column: 19, scope: !5222)
!5231 = !DILocation(line: 283, column: 5, scope: !5222)
!5232 = !DILocation(line: 284, column: 45, scope: !5222)
!5233 = !DILocation(line: 284, column: 30, scope: !5222)
!5234 = !DILocation(line: 284, column: 52, scope: !5222)
!5235 = !DILocation(line: 284, column: 77, scope: !5222)
!5236 = !DILocation(line: 284, column: 62, scope: !5222)
!5237 = !DILocation(line: 284, column: 84, scope: !5222)
!5238 = !DILocation(line: 284, column: 59, scope: !5222)
!5239 = !DILocation(line: 0, scope: !5222)
!5240 = !DILocation(line: 286, column: 23, scope: !5222)
!5241 = !DILocation(line: 286, column: 21, scope: !5222)
!5242 = !DILocation(line: 288, column: 5, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5222, file: !475, line: 288, column: 5)
!5244 = !DILocation(line: 290, column: 19, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !475, line: 290, column: 13)
!5246 = distinct !DILexicalBlock(scope: !5247, file: !475, line: 288, column: 70)
!5247 = distinct !DILexicalBlock(scope: !5243, file: !475, line: 288, column: 5)
!5248 = !DILocation(line: 290, column: 22, scope: !5245)
!5249 = !DILocation(line: 290, column: 32, scope: !5245)
!5250 = !DILocation(line: 290, column: 41, scope: !5245)
!5251 = !DILocation(line: 290, column: 50, scope: !5245)
!5252 = !DILocation(line: 290, column: 13, scope: !5246)
!5253 = !DILocation(line: 289, column: 17, scope: !5246)
!5254 = !DILocation(line: 291, column: 27, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5245, file: !475, line: 290, column: 60)
!5256 = !DILocation(line: 292, column: 26, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5255, file: !475, line: 292, column: 17)
!5258 = !DILocation(line: 292, column: 17, scope: !5255)
!5259 = !DILocation(line: 294, column: 33, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5257, file: !475, line: 294, column: 24)
!5261 = !DILocation(line: 294, column: 24, scope: !5257)
!5262 = !DILocation(line: 296, column: 33, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5260, file: !475, line: 296, column: 24)
!5264 = !DILocation(line: 296, column: 24, scope: !5260)
!5265 = !DILocation(line: 298, column: 31, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !475, line: 298, column: 20)
!5267 = distinct !DILexicalBlock(scope: !5263, file: !475, line: 296, column: 48)
!5268 = !DILocation(line: 298, column: 49, scope: !5266)
!5269 = !DILocation(line: 0, scope: !5266)
!5270 = !DILocation(line: 303, column: 13, scope: !5267)
!5271 = !DILocation(line: 303, column: 33, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5263, file: !475, line: 303, column: 24)
!5273 = !DILocation(line: 303, column: 24, scope: !5263)
!5274 = !DILocation(line: 0, scope: !5257)
!5275 = !DILocation(line: 308, column: 30, scope: !5255)
!5276 = !DILocation(line: 288, column: 66, scope: !5247)
!5277 = !DILocation(line: 288, column: 19, scope: !5247)
!5278 = distinct !{!5278, !5242, !5279}
!5279 = !DILocation(line: 311, column: 5, scope: !5243)
!5280 = !DILocation(line: 313, column: 19, scope: !5222)
!5281 = !DILocation(line: 315, column: 9, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5222, file: !475, line: 315, column: 9)
!5283 = !DILocation(line: 315, column: 26, scope: !5282)
!5284 = !DILocation(line: 315, column: 9, scope: !5222)
!5285 = !DILocation(line: 316, column: 51, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !475, line: 315, column: 47)
!5287 = !DILocation(line: 316, column: 23, scope: !5286)
!5288 = !DILocation(line: 318, column: 19, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5286, file: !475, line: 318, column: 13)
!5290 = !DILocation(line: 318, column: 25, scope: !5289)
!5291 = !DILocation(line: 318, column: 22, scope: !5289)
!5292 = !DILocation(line: 318, column: 32, scope: !5289)
!5293 = !DILocation(line: 318, column: 41, scope: !5289)
!5294 = !DILocation(line: 318, column: 50, scope: !5289)
!5295 = !DILocation(line: 318, column: 13, scope: !5286)
!5296 = !DILocation(line: 322, column: 13, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5289, file: !475, line: 321, column: 16)
!5298 = !DILocation(line: 323, column: 13, scope: !5297)
!5299 = !DILocation(line: 325, column: 5, scope: !5286)
!5300 = !DILocation(line: 329, column: 1, scope: !5222)
!5301 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !475, file: !475, line: 495, type: !5302, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5304)
!5302 = !DISubroutineType(types: !5303)
!5303 = !{!7, !468, !7}
!5304 = !{!5305, !5306, !5307, !5308}
!5305 = !DILocalVariable(name: "buf", arg: 1, scope: !5301, file: !475, line: 495, type: !468)
!5306 = !DILocalVariable(name: "buf_size", arg: 2, scope: !5301, file: !475, line: 495, type: !7)
!5307 = !DILocalVariable(name: "code", scope: !5301, file: !475, line: 497, type: !58)
!5308 = !DILocalVariable(name: "rc", scope: !5301, file: !475, line: 498, type: !7)
!5309 = !DILocation(line: 0, scope: !5301)
!5310 = !DILocation(line: 497, column: 5, scope: !5301)
!5311 = !DILocation(line: 499, column: 10, scope: !5301)
!5312 = !DILocation(line: 500, column: 10, scope: !5301)
!5313 = !DILocation(line: 503, column: 1, scope: !5301)
!5314 = !DILocation(line: 502, column: 5, scope: !5301)
!5315 = distinct !DISubprogram(name: "flash_switch_mode", scope: !475, file: !475, line: 331, type: !5316, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5318)
!5316 = !DISubroutineType(types: !5317)
!5317 = !{null, !401}
!5318 = !{!5319}
!5319 = !DILocalVariable(name: "mode", arg: 1, scope: !5315, file: !475, line: 331, type: !401)
!5320 = !DILocation(line: 0, scope: !5315)
!5321 = !DILocation(line: 333, column: 9, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5315, file: !475, line: 333, column: 9)
!5323 = !DILocation(line: 333, column: 34, scope: !5322)
!5324 = !DILocation(line: 333, column: 9, scope: !5315)
!5325 = !DILocation(line: 335, column: 26, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5322, file: !475, line: 333, column: 43)
!5327 = !DILocation(line: 336, column: 5, scope: !5326)
!5328 = !DILocation(line: 338, column: 5, scope: !5315)
!5329 = !DILocation(line: 339, column: 5, scope: !5315)
!5330 = !DILocation(line: 341, column: 9, scope: !5315)
!5331 = !DILocation(line: 342, column: 9, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5333, file: !475, line: 341, column: 22)
!5333 = distinct !DILexicalBlock(scope: !5315, file: !475, line: 341, column: 9)
!5334 = !DILocation(line: 343, column: 5, scope: !5332)
!5335 = !DILocation(line: 344, column: 12, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !475, line: 344, column: 12)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !475, line: 343, column: 30)
!5338 = distinct !DILexicalBlock(scope: !5333, file: !475, line: 343, column: 16)
!5339 = !DILocation(line: 344, column: 29, scope: !5336)
!5340 = !DILocation(line: 344, column: 12, scope: !5337)
!5341 = !DILocation(line: 345, column: 13, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5336, file: !475, line: 344, column: 48)
!5343 = !DILocation(line: 346, column: 9, scope: !5342)
!5344 = !DILocation(line: 347, column: 13, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5336, file: !475, line: 346, column: 16)
!5346 = !DILocation(line: 350, column: 9, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !475, line: 349, column: 29)
!5348 = distinct !DILexicalBlock(scope: !5338, file: !475, line: 349, column: 16)
!5349 = !DILocation(line: 352, column: 9, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !475, line: 352, column: 9)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !475, line: 352, column: 9)
!5352 = distinct !DILexicalBlock(scope: !5348, file: !475, line: 351, column: 12)
!5353 = distinct !{!5353, !5349, !5349}
!5354 = !DILocation(line: 354, column: 21, scope: !5315)
!5355 = !DILocation(line: 355, column: 1, scope: !5315)
!5356 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !475, file: !475, line: 215, type: !4770, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5357)
!5357 = !{!5358, !5359}
!5358 = !DILocalVariable(name: "mode", arg: 1, scope: !5356, file: !475, line: 215, type: !61)
!5359 = !DILocalVariable(name: "ptr", scope: !5356, file: !475, line: 217, type: !484)
!5360 = !DILocation(line: 0, scope: !5356)
!5361 = !DILocation(line: 220, column: 5, scope: !5356)
!5362 = !DILocation(line: 223, column: 17, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !475, line: 223, column: 17)
!5364 = distinct !DILexicalBlock(scope: !5356, file: !475, line: 220, column: 19)
!5365 = !DILocation(line: 223, column: 17, scope: !5364)
!5366 = !DILocation(line: 227, column: 22, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !475, line: 227, column: 22)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !475, line: 225, column: 55)
!5369 = distinct !DILexicalBlock(scope: !5363, file: !475, line: 225, column: 23)
!5370 = !DILocation(line: 227, column: 37, scope: !5367)
!5371 = !DILocation(line: 227, column: 22, scope: !5368)
!5372 = !DILocation(line: 230, column: 13, scope: !5368)
!5373 = !DILocation(line: 232, column: 13, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !475, line: 230, column: 59)
!5375 = distinct !DILexicalBlock(scope: !5369, file: !475, line: 230, column: 24)
!5376 = !DILocation(line: 233, column: 23, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5378, file: !475, line: 232, column: 61)
!5378 = distinct !DILexicalBlock(scope: !5375, file: !475, line: 232, column: 24)
!5379 = !DILocation(line: 234, column: 13, scope: !5377)
!5380 = !DILocation(line: 239, column: 17, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5364, file: !475, line: 239, column: 17)
!5382 = !DILocation(line: 239, column: 17, scope: !5364)
!5383 = !DILocation(line: 243, column: 22, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !475, line: 243, column: 22)
!5385 = distinct !DILexicalBlock(scope: !5386, file: !475, line: 241, column: 55)
!5386 = distinct !DILexicalBlock(scope: !5381, file: !475, line: 241, column: 23)
!5387 = !DILocation(line: 243, column: 37, scope: !5384)
!5388 = !DILocation(line: 243, column: 22, scope: !5385)
!5389 = !DILocation(line: 246, column: 13, scope: !5385)
!5390 = !DILocation(line: 248, column: 13, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !475, line: 246, column: 59)
!5392 = distinct !DILexicalBlock(scope: !5386, file: !475, line: 246, column: 24)
!5393 = !DILocation(line: 249, column: 23, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !475, line: 248, column: 61)
!5395 = distinct !DILexicalBlock(scope: !5392, file: !475, line: 248, column: 24)
!5396 = !DILocation(line: 250, column: 13, scope: !5394)
!5397 = !DILocation(line: 254, column: 17, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5364, file: !475, line: 254, column: 17)
!5399 = !DILocation(line: 254, column: 17, scope: !5364)
!5400 = !DILocation(line: 258, column: 22, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5402, file: !475, line: 258, column: 22)
!5402 = distinct !DILexicalBlock(scope: !5403, file: !475, line: 256, column: 55)
!5403 = distinct !DILexicalBlock(scope: !5398, file: !475, line: 256, column: 23)
!5404 = !DILocation(line: 258, column: 37, scope: !5401)
!5405 = !DILocation(line: 258, column: 22, scope: !5402)
!5406 = !DILocation(line: 261, column: 13, scope: !5402)
!5407 = !DILocation(line: 263, column: 13, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !475, line: 261, column: 59)
!5409 = distinct !DILexicalBlock(scope: !5403, file: !475, line: 261, column: 24)
!5410 = !DILocation(line: 264, column: 23, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !475, line: 263, column: 61)
!5412 = distinct !DILexicalBlock(scope: !5409, file: !475, line: 263, column: 24)
!5413 = !DILocation(line: 265, column: 13, scope: !5411)
!5414 = !DILocation(line: 268, column: 13, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !475, line: 268, column: 13)
!5416 = distinct !DILexicalBlock(scope: !5364, file: !475, line: 268, column: 13)
!5417 = distinct !{!5417, !5414, !5414}
!5418 = !DILocation(line: 272, column: 5, scope: !5356)
!5419 = !DILocation(line: 0, scope: !5364)
!5420 = !DILocation(line: 273, column: 1, scope: !5356)
!5421 = distinct !DISubprogram(name: "flash_config", scope: !475, file: !475, line: 357, type: !154, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5422)
!5422 = !{!5423, !5424, !5425, !5426}
!5423 = !DILocalVariable(name: "i", scope: !5421, file: !475, line: 360, type: !7)
!5424 = !DILocalVariable(name: "jedec", scope: !5421, file: !475, line: 361, type: !401)
!5425 = !DILocalVariable(name: "buf", scope: !5421, file: !475, line: 362, type: !5227)
!5426 = !DILocalVariable(name: "info", scope: !5421, file: !475, line: 363, type: !486)
!5427 = !DILocation(line: 362, column: 5, scope: !5421)
!5428 = !DILocation(line: 362, column: 19, scope: !5421)
!5429 = !DILocation(line: 377, column: 26, scope: !5421)
!5430 = !DILocation(line: 377, column: 24, scope: !5421)
!5431 = !DILocation(line: 380, column: 19, scope: !5421)
!5432 = !DILocation(line: 382, column: 5, scope: !5421)
!5433 = !DILocation(line: 383, column: 45, scope: !5421)
!5434 = !DILocation(line: 383, column: 30, scope: !5421)
!5435 = !DILocation(line: 383, column: 52, scope: !5421)
!5436 = !DILocation(line: 383, column: 77, scope: !5421)
!5437 = !DILocation(line: 383, column: 62, scope: !5421)
!5438 = !DILocation(line: 383, column: 84, scope: !5421)
!5439 = !DILocation(line: 383, column: 59, scope: !5421)
!5440 = !DILocation(line: 0, scope: !5421)
!5441 = !DILocation(line: 385, column: 5, scope: !5421)
!5442 = !DILocation(line: 387, column: 5, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5421, file: !475, line: 387, column: 5)
!5444 = !DILocation(line: 388, column: 17, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !475, line: 387, column: 70)
!5446 = distinct !DILexicalBlock(scope: !5443, file: !475, line: 387, column: 5)
!5447 = !DILocation(line: 389, column: 19, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5445, file: !475, line: 389, column: 13)
!5449 = !DILocation(line: 389, column: 25, scope: !5448)
!5450 = !DILocation(line: 389, column: 22, scope: !5448)
!5451 = !DILocation(line: 389, column: 32, scope: !5448)
!5452 = !DILocation(line: 389, column: 41, scope: !5448)
!5453 = !DILocation(line: 389, column: 50, scope: !5448)
!5454 = !DILocation(line: 389, column: 13, scope: !5445)
!5455 = !DILocation(line: 390, column: 13, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5448, file: !475, line: 389, column: 60)
!5457 = !DILocation(line: 391, column: 27, scope: !5456)
!5458 = !DILocation(line: 392, column: 26, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !475, line: 392, column: 17)
!5460 = !DILocation(line: 392, column: 17, scope: !5456)
!5461 = !DILocation(line: 394, column: 33, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5459, file: !475, line: 394, column: 24)
!5463 = !DILocation(line: 394, column: 24, scope: !5459)
!5464 = !DILocation(line: 396, column: 33, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5462, file: !475, line: 396, column: 24)
!5466 = !DILocation(line: 396, column: 24, scope: !5462)
!5467 = !DILocation(line: 398, column: 33, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5465, file: !475, line: 398, column: 24)
!5469 = !DILocation(line: 398, column: 24, scope: !5465)
!5470 = !DILocation(line: 399, column: 34, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5468, file: !475, line: 398, column: 52)
!5472 = !DILocation(line: 404, column: 9, scope: !5421)
!5473 = !DILocation(line: 0, scope: !5459)
!5474 = !DILocation(line: 387, column: 66, scope: !5446)
!5475 = !DILocation(line: 387, column: 19, scope: !5446)
!5476 = distinct !{!5476, !5442, !5477}
!5477 = !DILocation(line: 402, column: 5, scope: !5443)
!5478 = !DILocation(line: 404, column: 9, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5421, file: !475, line: 404, column: 9)
!5480 = !DILocation(line: 404, column: 26, scope: !5479)
!5481 = !DILocation(line: 405, column: 51, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5479, file: !475, line: 404, column: 47)
!5483 = !DILocation(line: 405, column: 23, scope: !5482)
!5484 = !DILocation(line: 407, column: 19, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5482, file: !475, line: 407, column: 13)
!5486 = !DILocation(line: 407, column: 25, scope: !5485)
!5487 = !DILocation(line: 407, column: 22, scope: !5485)
!5488 = !DILocation(line: 407, column: 32, scope: !5485)
!5489 = !DILocation(line: 407, column: 41, scope: !5485)
!5490 = !DILocation(line: 407, column: 50, scope: !5485)
!5491 = !DILocation(line: 407, column: 13, scope: !5482)
!5492 = !DILocation(line: 411, column: 13, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5485, file: !475, line: 410, column: 16)
!5494 = !DILocation(line: 412, column: 13, scope: !5493)
!5495 = !DILocation(line: 414, column: 5, scope: !5482)
!5496 = !DILocation(line: 416, column: 10, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5421, file: !475, line: 416, column: 9)
!5498 = !DILocation(line: 416, column: 9, scope: !5421)
!5499 = !DILocation(line: 417, column: 9, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5497, file: !475, line: 416, column: 25)
!5501 = !DILocation(line: 419, column: 23, scope: !5500)
!5502 = !DILocation(line: 420, column: 5, scope: !5500)
!5503 = !DILocation(line: 422, column: 1, scope: !5421)
!5504 = distinct !DISubprogram(name: "flash_init", scope: !475, file: !475, line: 425, type: !1717, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5505)
!5505 = !{!5506, !5507, !5508, !5509, !5510}
!5506 = !DILocalVariable(name: "security_enable", arg: 1, scope: !5504, file: !475, line: 425, type: !7)
!5507 = !DILocalVariable(name: "i", scope: !5504, file: !475, line: 427, type: !7)
!5508 = !DILocalVariable(name: "jedec", scope: !5504, file: !475, line: 428, type: !401)
!5509 = !DILocalVariable(name: "buf", scope: !5504, file: !475, line: 429, type: !5227)
!5510 = !DILocalVariable(name: "info", scope: !5504, file: !475, line: 430, type: !486)
!5511 = !DILocation(line: 0, scope: !5504)
!5512 = !DILocation(line: 429, column: 5, scope: !5504)
!5513 = !DILocation(line: 429, column: 19, scope: !5504)
!5514 = !DILocation(line: 436, column: 5, scope: !5504)
!5515 = !DILocation(line: 438, column: 26, scope: !5504)
!5516 = !DILocation(line: 438, column: 24, scope: !5504)
!5517 = !DILocation(line: 440, column: 5, scope: !5504)
!5518 = !DILocation(line: 442, column: 19, scope: !5504)
!5519 = !DILocation(line: 444, column: 5, scope: !5504)
!5520 = !DILocation(line: 445, column: 45, scope: !5504)
!5521 = !DILocation(line: 445, column: 30, scope: !5504)
!5522 = !DILocation(line: 445, column: 52, scope: !5504)
!5523 = !DILocation(line: 445, column: 77, scope: !5504)
!5524 = !DILocation(line: 445, column: 62, scope: !5504)
!5525 = !DILocation(line: 445, column: 84, scope: !5504)
!5526 = !DILocation(line: 445, column: 59, scope: !5504)
!5527 = !DILocation(line: 447, column: 5, scope: !5504)
!5528 = !DILocation(line: 449, column: 5, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5504, file: !475, line: 449, column: 5)
!5530 = !DILocation(line: 450, column: 17, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5532, file: !475, line: 449, column: 70)
!5532 = distinct !DILexicalBlock(scope: !5529, file: !475, line: 449, column: 5)
!5533 = !DILocation(line: 451, column: 19, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5531, file: !475, line: 451, column: 13)
!5535 = !DILocation(line: 451, column: 25, scope: !5534)
!5536 = !DILocation(line: 451, column: 22, scope: !5534)
!5537 = !DILocation(line: 451, column: 32, scope: !5534)
!5538 = !DILocation(line: 451, column: 41, scope: !5534)
!5539 = !DILocation(line: 451, column: 50, scope: !5534)
!5540 = !DILocation(line: 451, column: 13, scope: !5531)
!5541 = !DILocation(line: 452, column: 13, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5534, file: !475, line: 451, column: 60)
!5543 = !DILocation(line: 453, column: 27, scope: !5542)
!5544 = !DILocation(line: 454, column: 9, scope: !5542)
!5545 = !DILocation(line: 449, column: 66, scope: !5532)
!5546 = !DILocation(line: 449, column: 19, scope: !5532)
!5547 = distinct !{!5547, !5528, !5548}
!5548 = !DILocation(line: 455, column: 5, scope: !5529)
!5549 = !DILocation(line: 457, column: 10, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5504, file: !475, line: 457, column: 9)
!5551 = !DILocation(line: 457, column: 9, scope: !5504)
!5552 = !DILocation(line: 458, column: 9, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5550, file: !475, line: 457, column: 25)
!5554 = !DILocation(line: 460, column: 23, scope: !5553)
!5555 = !DILocation(line: 461, column: 5, scope: !5553)
!5556 = !DILocation(line: 462, column: 1, scope: !5504)
!5557 = distinct !DISubprogram(name: "flash_reset", scope: !475, file: !475, line: 170, type: !154, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !2550)
!5558 = !DILocation(line: 172, column: 5, scope: !5557)
!5559 = !DILocation(line: 173, column: 5, scope: !5557)
!5560 = !DILocation(line: 176, column: 5, scope: !5557)
!5561 = !DILocation(line: 177, column: 5, scope: !5557)
!5562 = !DILocation(line: 179, column: 5, scope: !5557)
!5563 = distinct !DISubprogram(name: "flash_wait_ready", scope: !475, file: !475, line: 469, type: !5564, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5566)
!5564 = !DISubroutineType(types: !5565)
!5565 = !{!7, !7}
!5566 = !{!5567, !5568, !5569}
!5567 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !5563, file: !475, line: 469, type: !7)
!5568 = !DILocalVariable(name: "count", scope: !5563, file: !475, line: 471, type: !7)
!5569 = !DILocalVariable(name: "sr", scope: !5563, file: !475, line: 472, type: !58)
!5570 = !DILocation(line: 0, scope: !5563)
!5571 = !DILocation(line: 472, column: 5, scope: !5563)
!5572 = !DILocation(line: 472, column: 19, scope: !5563)
!5573 = !DILocation(line: 479, column: 28, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5575, file: !475, line: 479, column: 5)
!5575 = distinct !DILexicalBlock(scope: !5563, file: !475, line: 479, column: 5)
!5576 = !DILocation(line: 479, column: 5, scope: !5575)
!5577 = !DILocation(line: 480, column: 14, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !475, line: 480, column: 13)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !475, line: 479, column: 64)
!5580 = !DILocation(line: 480, column: 34, scope: !5578)
!5581 = !DILocation(line: 480, column: 13, scope: !5579)
!5582 = !DILocation(line: 482, column: 22, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5578, file: !475, line: 482, column: 20)
!5584 = !DILocation(line: 482, column: 25, scope: !5583)
!5585 = !DILocation(line: 482, column: 20, scope: !5578)
!5586 = !DILocation(line: 493, column: 1, scope: !5563)
!5587 = !DILocation(line: 483, column: 13, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5583, file: !475, line: 482, column: 36)
!5589 = !DILocation(line: 486, column: 9, scope: !5579)
!5590 = !DILocation(line: 479, column: 60, scope: !5574)
!5591 = distinct !{!5591, !5576, !5592}
!5592 = !DILocation(line: 488, column: 5, scope: !5575)
!5593 = !DILocation(line: 491, column: 5, scope: !5563)
!5594 = distinct !DISubprogram(name: "flash_read_sr", scope: !475, file: !475, line: 623, type: !5595, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5597)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!7, !468}
!5597 = !{!5598, !5599, !5600}
!5598 = !DILocalVariable(name: "val", arg: 1, scope: !5594, file: !475, line: 623, type: !468)
!5599 = !DILocalVariable(name: "retval", scope: !5594, file: !475, line: 625, type: !7)
!5600 = !DILocalVariable(name: "code", scope: !5594, file: !475, line: 626, type: !58)
!5601 = !DILocation(line: 0, scope: !5594)
!5602 = !DILocation(line: 626, column: 5, scope: !5594)
!5603 = !DILocation(line: 626, column: 19, scope: !5594)
!5604 = !DILocation(line: 628, column: 14, scope: !5594)
!5605 = !DILocation(line: 629, column: 16, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5594, file: !475, line: 629, column: 9)
!5607 = !DILocation(line: 634, column: 1, scope: !5594)
!5608 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !475, file: !475, line: 505, type: !5302, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5609)
!5609 = !{!5610, !5611, !5612, !5613}
!5610 = !DILocalVariable(name: "buf", arg: 1, scope: !5608, file: !475, line: 505, type: !468)
!5611 = !DILocalVariable(name: "buf_size", arg: 2, scope: !5608, file: !475, line: 505, type: !7)
!5612 = !DILocalVariable(name: "code", scope: !5608, file: !475, line: 507, type: !515)
!5613 = !DILocalVariable(name: "rc", scope: !5608, file: !475, line: 508, type: !7)
!5614 = !DILocation(line: 0, scope: !5608)
!5615 = !DILocation(line: 507, column: 5, scope: !5608)
!5616 = !DILocation(line: 507, column: 19, scope: !5608)
!5617 = !DILocation(line: 510, column: 10, scope: !5608)
!5618 = !DILocation(line: 513, column: 1, scope: !5608)
!5619 = !DILocation(line: 512, column: 5, scope: !5608)
!5620 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !475, file: !475, line: 515, type: !5302, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5621)
!5621 = !{!5622, !5623, !5624, !5625}
!5622 = !DILocalVariable(name: "buf", arg: 1, scope: !5620, file: !475, line: 515, type: !468)
!5623 = !DILocalVariable(name: "buf_size", arg: 2, scope: !5620, file: !475, line: 515, type: !7)
!5624 = !DILocalVariable(name: "code", scope: !5620, file: !475, line: 517, type: !515)
!5625 = !DILocalVariable(name: "rc", scope: !5620, file: !475, line: 518, type: !7)
!5626 = !DILocation(line: 0, scope: !5620)
!5627 = !DILocation(line: 517, column: 5, scope: !5620)
!5628 = !DILocation(line: 517, column: 19, scope: !5620)
!5629 = !DILocation(line: 520, column: 10, scope: !5620)
!5630 = !DILocation(line: 523, column: 1, scope: !5620)
!5631 = !DILocation(line: 522, column: 5, scope: !5620)
!5632 = distinct !DISubprogram(name: "flash_read", scope: !475, file: !475, line: 526, type: !5633, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5635)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!7, !468, !30, !7}
!5635 = !{!5636, !5637, !5638, !5639, !5640}
!5636 = !DILocalVariable(name: "buf", arg: 1, scope: !5632, file: !475, line: 526, type: !468)
!5637 = !DILocalVariable(name: "from", arg: 2, scope: !5632, file: !475, line: 526, type: !30)
!5638 = !DILocalVariable(name: "len", arg: 3, scope: !5632, file: !475, line: 526, type: !7)
!5639 = !DILocalVariable(name: "cmd", scope: !5632, file: !475, line: 528, type: !515)
!5640 = !DILocalVariable(name: "rdlen", scope: !5632, file: !475, line: 529, type: !7)
!5641 = !DILocation(line: 0, scope: !5632)
!5642 = !DILocation(line: 528, column: 5, scope: !5632)
!5643 = !DILocation(line: 528, column: 19, scope: !5632)
!5644 = !DILocation(line: 532, column: 13, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5632, file: !475, line: 532, column: 9)
!5646 = !DILocation(line: 532, column: 9, scope: !5632)
!5647 = !DILocation(line: 537, column: 9, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5632, file: !475, line: 537, column: 9)
!5649 = !DILocation(line: 542, column: 22, scope: !5632)
!5650 = !DILocation(line: 543, column: 12, scope: !5632)
!5651 = !DILocation(line: 544, column: 19, scope: !5632)
!5652 = !DILocation(line: 544, column: 14, scope: !5632)
!5653 = !DILocation(line: 544, column: 5, scope: !5632)
!5654 = !DILocation(line: 544, column: 12, scope: !5632)
!5655 = !DILocation(line: 545, column: 19, scope: !5632)
!5656 = !DILocation(line: 545, column: 14, scope: !5632)
!5657 = !DILocation(line: 545, column: 5, scope: !5632)
!5658 = !DILocation(line: 545, column: 12, scope: !5632)
!5659 = !DILocation(line: 546, column: 14, scope: !5632)
!5660 = !DILocation(line: 546, column: 5, scope: !5632)
!5661 = !DILocation(line: 546, column: 12, scope: !5632)
!5662 = !DILocation(line: 548, column: 13, scope: !5632)
!5663 = !DILocation(line: 553, column: 5, scope: !5632)
!5664 = !DILocation(line: 554, column: 1, scope: !5632)
!5665 = distinct !DISubprogram(name: "flash_fast_read", scope: !475, file: !475, line: 557, type: !5666, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5668)
!5666 = !DISubroutineType(types: !5667)
!5667 = !{!7, !468, !30, !7, !7}
!5668 = !{!5669, !5670, !5671, !5672, !5673, !5675, !5676, !5677}
!5669 = !DILocalVariable(name: "buf", arg: 1, scope: !5665, file: !475, line: 557, type: !468)
!5670 = !DILocalVariable(name: "from", arg: 2, scope: !5665, file: !475, line: 557, type: !30)
!5671 = !DILocalVariable(name: "len", arg: 3, scope: !5665, file: !475, line: 557, type: !7)
!5672 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !5665, file: !475, line: 557, type: !7)
!5673 = !DILocalVariable(name: "cmd", scope: !5665, file: !475, line: 559, type: !5674)
!5674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 256, elements: !1727)
!5675 = !DILocalVariable(name: "cmd_len", scope: !5665, file: !475, line: 560, type: !7)
!5676 = !DILocalVariable(name: "rdlen", scope: !5665, file: !475, line: 561, type: !7)
!5677 = !DILocalVariable(name: "i", scope: !5665, file: !475, line: 561, type: !7)
!5678 = !DILocation(line: 0, scope: !5665)
!5679 = !DILocation(line: 559, column: 5, scope: !5665)
!5680 = !DILocation(line: 559, column: 19, scope: !5665)
!5681 = !DILocation(line: 564, column: 13, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5665, file: !475, line: 564, column: 9)
!5683 = !DILocation(line: 564, column: 9, scope: !5665)
!5684 = !DILocation(line: 569, column: 9, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5665, file: !475, line: 569, column: 9)
!5686 = !DILocation(line: 574, column: 12, scope: !5665)
!5687 = !DILocation(line: 575, column: 19, scope: !5665)
!5688 = !DILocation(line: 575, column: 14, scope: !5665)
!5689 = !DILocation(line: 575, column: 5, scope: !5665)
!5690 = !DILocation(line: 575, column: 12, scope: !5665)
!5691 = !DILocation(line: 576, column: 19, scope: !5665)
!5692 = !DILocation(line: 576, column: 14, scope: !5665)
!5693 = !DILocation(line: 576, column: 5, scope: !5665)
!5694 = !DILocation(line: 576, column: 12, scope: !5665)
!5695 = !DILocation(line: 577, column: 14, scope: !5665)
!5696 = !DILocation(line: 577, column: 5, scope: !5665)
!5697 = !DILocation(line: 577, column: 12, scope: !5665)
!5698 = !DILocation(line: 580, column: 19, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !475, line: 580, column: 5)
!5700 = distinct !DILexicalBlock(scope: !5665, file: !475, line: 580, column: 5)
!5701 = !DILocation(line: 580, column: 5, scope: !5700)
!5702 = !DILocation(line: 581, column: 15, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5699, file: !475, line: 580, column: 62)
!5704 = !DILocation(line: 581, column: 9, scope: !5703)
!5705 = !DILocation(line: 581, column: 20, scope: !5703)
!5706 = !DILocation(line: 580, column: 58, scope: !5699)
!5707 = !DILocation(line: 580, column: 33, scope: !5699)
!5708 = distinct !{!5708, !5701, !5709}
!5709 = !DILocation(line: 583, column: 5, scope: !5700)
!5710 = !DILocation(line: 585, column: 13, scope: !5665)
!5711 = !DILocation(line: 590, column: 5, scope: !5665)
!5712 = !DILocation(line: 591, column: 1, scope: !5665)
!5713 = distinct !DISubprogram(name: "flash_read_sr2", scope: !475, file: !475, line: 636, type: !5595, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5714)
!5714 = !{!5715, !5716, !5717}
!5715 = !DILocalVariable(name: "val", arg: 1, scope: !5713, file: !475, line: 636, type: !468)
!5716 = !DILocalVariable(name: "retval", scope: !5713, file: !475, line: 638, type: !7)
!5717 = !DILocalVariable(name: "code", scope: !5713, file: !475, line: 639, type: !58)
!5718 = !DILocation(line: 0, scope: !5713)
!5719 = !DILocation(line: 639, column: 5, scope: !5713)
!5720 = !DILocation(line: 641, column: 9, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5713, file: !475, line: 641, column: 9)
!5722 = !DILocation(line: 641, column: 45, scope: !5721)
!5723 = !DILocation(line: 643, column: 14, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5721, file: !475, line: 641, column: 80)
!5725 = !DILocation(line: 644, column: 5, scope: !5724)
!5726 = !DILocation(line: 646, column: 14, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5728, file: !475, line: 644, column: 50)
!5728 = distinct !DILexicalBlock(scope: !5721, file: !475, line: 644, column: 16)
!5729 = !DILocation(line: 647, column: 5, scope: !5727)
!5730 = !DILocation(line: 649, column: 14, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !475, line: 647, column: 52)
!5732 = distinct !DILexicalBlock(scope: !5728, file: !475, line: 647, column: 16)
!5733 = !DILocation(line: 650, column: 5, scope: !5731)
!5734 = !DILocation(line: 652, column: 16, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !475, line: 650, column: 54)
!5736 = distinct !DILexicalBlock(scope: !5732, file: !475, line: 650, column: 16)
!5737 = !DILocation(line: 652, column: 14, scope: !5735)
!5738 = !DILocation(line: 653, column: 5, scope: !5735)
!5739 = !DILocation(line: 655, column: 9, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5736, file: !475, line: 654, column: 10)
!5741 = !DILocation(line: 656, column: 14, scope: !5740)
!5742 = !DILocation(line: 659, column: 14, scope: !5713)
!5743 = !DILocation(line: 660, column: 16, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5713, file: !475, line: 660, column: 9)
!5745 = !DILocation(line: 665, column: 1, scope: !5713)
!5746 = distinct !DISubprogram(name: "flash_unprotect", scope: !475, file: !475, line: 667, type: !4869, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5747)
!5747 = !{!5748}
!5748 = !DILocalVariable(name: "sr", scope: !5746, file: !475, line: 669, type: !58)
!5749 = !DILocation(line: 669, column: 5, scope: !5746)
!5750 = !DILocation(line: 0, scope: !5746)
!5751 = !DILocation(line: 669, column: 19, scope: !5746)
!5752 = !DILocation(line: 671, column: 9, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5746, file: !475, line: 671, column: 9)
!5754 = !DILocation(line: 671, column: 28, scope: !5753)
!5755 = !DILocation(line: 671, column: 9, scope: !5746)
!5756 = !DILocation(line: 676, column: 10, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5746, file: !475, line: 676, column: 9)
!5758 = !DILocation(line: 676, column: 13, scope: !5757)
!5759 = !DILocation(line: 676, column: 43, scope: !5757)
!5760 = !DILocation(line: 676, column: 9, scope: !5746)
!5761 = !DILocation(line: 677, column: 12, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5757, file: !475, line: 676, column: 49)
!5763 = !DILocation(line: 678, column: 9, scope: !5762)
!5764 = !DILocation(line: 679, column: 5, scope: !5762)
!5765 = !DILocation(line: 681, column: 1, scope: !5746)
!5766 = distinct !DISubprogram(name: "flash_write_sr", scope: !475, file: !475, line: 609, type: !5595, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5767)
!5767 = !{!5768, !5769, !5770}
!5768 = !DILocalVariable(name: "val", arg: 1, scope: !5766, file: !475, line: 609, type: !468)
!5769 = !DILocalVariable(name: "retval", scope: !5766, file: !475, line: 611, type: !7)
!5770 = !DILocalVariable(name: "code", scope: !5766, file: !475, line: 612, type: !58)
!5771 = !DILocation(line: 0, scope: !5766)
!5772 = !DILocation(line: 612, column: 5, scope: !5766)
!5773 = !DILocation(line: 612, column: 20, scope: !5766)
!5774 = !DILocation(line: 614, column: 14, scope: !5766)
!5775 = !DILocation(line: 621, column: 1, scope: !5766)
!5776 = distinct !DISubprogram(name: "flash_protect", scope: !475, file: !475, line: 686, type: !4869, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5777)
!5777 = !{!5778}
!5778 = !DILocalVariable(name: "sr", scope: !5776, file: !475, line: 688, type: !58)
!5779 = !DILocation(line: 688, column: 5, scope: !5776)
!5780 = !DILocation(line: 0, scope: !5776)
!5781 = !DILocation(line: 688, column: 19, scope: !5776)
!5782 = !DILocation(line: 690, column: 9, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5776, file: !475, line: 690, column: 9)
!5784 = !DILocation(line: 690, column: 28, scope: !5783)
!5785 = !DILocation(line: 690, column: 9, scope: !5776)
!5786 = !DILocation(line: 695, column: 8, scope: !5776)
!5787 = !DILocation(line: 696, column: 5, scope: !5776)
!5788 = !DILocation(line: 697, column: 5, scope: !5776)
!5789 = !DILocation(line: 698, column: 1, scope: !5776)
!5790 = distinct !DISubprogram(name: "flash_write_enable", scope: !475, file: !475, line: 701, type: !4869, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5791)
!5791 = !{!5792}
!5792 = !DILocalVariable(name: "code", scope: !5790, file: !475, line: 703, type: !58)
!5793 = !DILocation(line: 703, column: 5, scope: !5790)
!5794 = !DILocation(line: 0, scope: !5790)
!5795 = !DILocation(line: 703, column: 19, scope: !5790)
!5796 = !DILocation(line: 704, column: 12, scope: !5790)
!5797 = !DILocation(line: 705, column: 1, scope: !5790)
!5798 = !DILocation(line: 704, column: 5, scope: !5790)
!5799 = distinct !DISubprogram(name: "flash_write_disable", scope: !475, file: !475, line: 707, type: !4869, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5800)
!5800 = !{!5801}
!5801 = !DILocalVariable(name: "code", scope: !5799, file: !475, line: 709, type: !58)
!5802 = !DILocation(line: 709, column: 5, scope: !5799)
!5803 = !DILocation(line: 0, scope: !5799)
!5804 = !DILocation(line: 709, column: 19, scope: !5799)
!5805 = !DILocation(line: 710, column: 12, scope: !5799)
!5806 = !DILocation(line: 711, column: 1, scope: !5799)
!5807 = !DILocation(line: 710, column: 5, scope: !5799)
!5808 = distinct !DISubprogram(name: "flash_erase_sector", scope: !475, file: !475, line: 713, type: !5809, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5811)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!7, !30}
!5811 = !{!5812, !5813, !5814, !5815}
!5812 = !DILocalVariable(name: "offset", arg: 1, scope: !5808, file: !475, line: 713, type: !30)
!5813 = !DILocalVariable(name: "buf", scope: !5808, file: !475, line: 715, type: !5227)
!5814 = !DILocalVariable(name: "savedMask", scope: !5808, file: !475, line: 716, type: !61)
!5815 = !DILocalVariable(name: "result", scope: !5808, file: !475, line: 717, type: !355)
!5816 = !DILocation(line: 0, scope: !5808)
!5817 = !DILocation(line: 715, column: 5, scope: !5808)
!5818 = !DILocation(line: 715, column: 19, scope: !5808)
!5819 = !DILocation(line: 720, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5808, file: !475, line: 720, column: 9)
!5821 = !DILocation(line: 724, column: 22, scope: !5808)
!5822 = !DILocation(line: 725, column: 5, scope: !5808)
!5823 = !DILocation(line: 726, column: 18, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5808, file: !475, line: 725, column: 8)
!5825 = !DILocation(line: 727, column: 19, scope: !5808)
!5826 = !DILocation(line: 727, column: 5, scope: !5824)
!5827 = distinct !{!5827, !5822, !5828}
!5828 = !DILocation(line: 727, column: 28, scope: !5808)
!5829 = !DILocation(line: 729, column: 17, scope: !5808)
!5830 = !DILocation(line: 732, column: 12, scope: !5808)
!5831 = !DILocation(line: 733, column: 21, scope: !5808)
!5832 = !DILocation(line: 733, column: 14, scope: !5808)
!5833 = !DILocation(line: 733, column: 5, scope: !5808)
!5834 = !DILocation(line: 733, column: 12, scope: !5808)
!5835 = !DILocation(line: 734, column: 21, scope: !5808)
!5836 = !DILocation(line: 734, column: 14, scope: !5808)
!5837 = !DILocation(line: 734, column: 5, scope: !5808)
!5838 = !DILocation(line: 734, column: 12, scope: !5808)
!5839 = !DILocation(line: 735, column: 14, scope: !5808)
!5840 = !DILocation(line: 735, column: 5, scope: !5808)
!5841 = !DILocation(line: 735, column: 12, scope: !5808)
!5842 = !DILocation(line: 736, column: 5, scope: !5808)
!5843 = !DILocation(line: 737, column: 5, scope: !5808)
!5844 = !DILocation(line: 738, column: 5, scope: !5808)
!5845 = !DILocation(line: 740, column: 5, scope: !5808)
!5846 = !DILocation(line: 741, column: 18, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5808, file: !475, line: 740, column: 8)
!5848 = !DILocation(line: 742, column: 19, scope: !5808)
!5849 = !DILocation(line: 742, column: 5, scope: !5847)
!5850 = distinct !{!5850, !5845, !5851}
!5851 = !DILocation(line: 742, column: 28, scope: !5808)
!5852 = !DILocation(line: 744, column: 5, scope: !5808)
!5853 = !DILocation(line: 746, column: 1, scope: !5808)
!5854 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !475, file: !475, line: 748, type: !5809, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5855)
!5855 = !{!5856, !5857, !5858, !5859}
!5856 = !DILocalVariable(name: "offset", arg: 1, scope: !5854, file: !475, line: 748, type: !30)
!5857 = !DILocalVariable(name: "buf", scope: !5854, file: !475, line: 750, type: !5227)
!5858 = !DILocalVariable(name: "savedMask", scope: !5854, file: !475, line: 751, type: !61)
!5859 = !DILocalVariable(name: "result", scope: !5854, file: !475, line: 752, type: !355)
!5860 = !DILocation(line: 0, scope: !5854)
!5861 = !DILocation(line: 750, column: 5, scope: !5854)
!5862 = !DILocation(line: 750, column: 19, scope: !5854)
!5863 = !DILocation(line: 755, column: 9, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5854, file: !475, line: 755, column: 9)
!5865 = !DILocation(line: 759, column: 22, scope: !5854)
!5866 = !DILocation(line: 760, column: 5, scope: !5854)
!5867 = !DILocation(line: 761, column: 18, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5854, file: !475, line: 760, column: 8)
!5869 = !DILocation(line: 762, column: 19, scope: !5854)
!5870 = !DILocation(line: 762, column: 5, scope: !5868)
!5871 = distinct !{!5871, !5866, !5872}
!5872 = !DILocation(line: 762, column: 28, scope: !5854)
!5873 = !DILocation(line: 764, column: 17, scope: !5854)
!5874 = !DILocation(line: 765, column: 12, scope: !5854)
!5875 = !DILocation(line: 766, column: 21, scope: !5854)
!5876 = !DILocation(line: 766, column: 14, scope: !5854)
!5877 = !DILocation(line: 766, column: 5, scope: !5854)
!5878 = !DILocation(line: 766, column: 12, scope: !5854)
!5879 = !DILocation(line: 767, column: 21, scope: !5854)
!5880 = !DILocation(line: 767, column: 14, scope: !5854)
!5881 = !DILocation(line: 767, column: 5, scope: !5854)
!5882 = !DILocation(line: 767, column: 12, scope: !5854)
!5883 = !DILocation(line: 768, column: 14, scope: !5854)
!5884 = !DILocation(line: 768, column: 5, scope: !5854)
!5885 = !DILocation(line: 768, column: 12, scope: !5854)
!5886 = !DILocation(line: 769, column: 5, scope: !5854)
!5887 = !DILocation(line: 770, column: 5, scope: !5854)
!5888 = !DILocation(line: 771, column: 5, scope: !5854)
!5889 = !DILocation(line: 772, column: 18, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5854, file: !475, line: 771, column: 8)
!5891 = !DILocation(line: 773, column: 19, scope: !5854)
!5892 = !DILocation(line: 773, column: 5, scope: !5890)
!5893 = distinct !{!5893, !5888, !5894}
!5894 = !DILocation(line: 773, column: 28, scope: !5854)
!5895 = !DILocation(line: 775, column: 5, scope: !5854)
!5896 = !DILocation(line: 777, column: 5, scope: !5854)
!5897 = !DILocation(line: 779, column: 1, scope: !5854)
!5898 = distinct !DISubprogram(name: "flash_erase_page", scope: !475, file: !475, line: 781, type: !5809, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5899)
!5899 = !{!5900, !5901, !5902, !5903}
!5900 = !DILocalVariable(name: "offset", arg: 1, scope: !5898, file: !475, line: 781, type: !30)
!5901 = !DILocalVariable(name: "buf", scope: !5898, file: !475, line: 783, type: !5227)
!5902 = !DILocalVariable(name: "savedMask", scope: !5898, file: !475, line: 784, type: !61)
!5903 = !DILocalVariable(name: "result", scope: !5898, file: !475, line: 785, type: !355)
!5904 = !DILocation(line: 0, scope: !5898)
!5905 = !DILocation(line: 783, column: 5, scope: !5898)
!5906 = !DILocation(line: 783, column: 19, scope: !5898)
!5907 = !DILocation(line: 788, column: 9, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5898, file: !475, line: 788, column: 9)
!5909 = !DILocation(line: 792, column: 22, scope: !5898)
!5910 = !DILocation(line: 793, column: 5, scope: !5898)
!5911 = !DILocation(line: 794, column: 18, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5898, file: !475, line: 793, column: 8)
!5913 = !DILocation(line: 795, column: 19, scope: !5898)
!5914 = !DILocation(line: 795, column: 5, scope: !5912)
!5915 = distinct !{!5915, !5910, !5916}
!5916 = !DILocation(line: 795, column: 28, scope: !5898)
!5917 = !DILocation(line: 798, column: 17, scope: !5898)
!5918 = !DILocation(line: 799, column: 12, scope: !5898)
!5919 = !DILocation(line: 800, column: 21, scope: !5898)
!5920 = !DILocation(line: 800, column: 14, scope: !5898)
!5921 = !DILocation(line: 800, column: 5, scope: !5898)
!5922 = !DILocation(line: 800, column: 12, scope: !5898)
!5923 = !DILocation(line: 801, column: 21, scope: !5898)
!5924 = !DILocation(line: 801, column: 14, scope: !5898)
!5925 = !DILocation(line: 801, column: 5, scope: !5898)
!5926 = !DILocation(line: 801, column: 12, scope: !5898)
!5927 = !DILocation(line: 802, column: 14, scope: !5898)
!5928 = !DILocation(line: 802, column: 5, scope: !5898)
!5929 = !DILocation(line: 802, column: 12, scope: !5898)
!5930 = !DILocation(line: 803, column: 5, scope: !5898)
!5931 = !DILocation(line: 805, column: 5, scope: !5898)
!5932 = !DILocation(line: 806, column: 5, scope: !5898)
!5933 = !DILocation(line: 808, column: 5, scope: !5898)
!5934 = !DILocation(line: 809, column: 18, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5898, file: !475, line: 808, column: 8)
!5936 = !DILocation(line: 810, column: 19, scope: !5898)
!5937 = !DILocation(line: 810, column: 5, scope: !5935)
!5938 = distinct !{!5938, !5933, !5939}
!5939 = !DILocation(line: 810, column: 28, scope: !5898)
!5940 = !DILocation(line: 812, column: 5, scope: !5898)
!5941 = !DILocation(line: 814, column: 1, scope: !5898)
!5942 = distinct !DISubprogram(name: "flash_erase_chip", scope: !475, file: !475, line: 816, type: !4869, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5943)
!5943 = !{!5944}
!5944 = !DILocalVariable(name: "buf", scope: !5942, file: !475, line: 818, type: !5227)
!5945 = !DILocation(line: 818, column: 5, scope: !5942)
!5946 = !DILocation(line: 818, column: 19, scope: !5942)
!5947 = !DILocation(line: 821, column: 9, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !475, line: 821, column: 9)
!5949 = !DILocation(line: 825, column: 22, scope: !5942)
!5950 = !DILocation(line: 827, column: 5, scope: !5942)
!5951 = !DILocation(line: 828, column: 5, scope: !5942)
!5952 = !DILocation(line: 830, column: 12, scope: !5942)
!5953 = !DILocation(line: 832, column: 5, scope: !5942)
!5954 = !DILocation(line: 834, column: 9, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5942, file: !475, line: 834, column: 9)
!5956 = !DILocation(line: 838, column: 5, scope: !5942)
!5957 = !DILocation(line: 839, column: 22, scope: !5942)
!5958 = !DILocation(line: 841, column: 1, scope: !5942)
!5959 = distinct !DISubprogram(name: "flash_erase", scope: !475, file: !475, line: 844, type: !5960, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5962)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!7, !30, !7}
!5962 = !{!5963, !5964}
!5963 = !DILocalVariable(name: "offs", arg: 1, scope: !5959, file: !475, line: 844, type: !30)
!5964 = !DILocalVariable(name: "len", arg: 2, scope: !5959, file: !475, line: 844, type: !7)
!5965 = !DILocation(line: 0, scope: !5959)
!5966 = !DILocation(line: 849, column: 9, scope: !5959)
!5967 = !DILocation(line: 855, column: 13, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !475, line: 855, column: 13)
!5969 = distinct !DILexicalBlock(scope: !5959, file: !475, line: 854, column: 21)
!5970 = !DILocation(line: 859, column: 17, scope: !5969)
!5971 = !DILocation(line: 859, column: 32, scope: !5969)
!5972 = !DILocation(line: 859, column: 14, scope: !5969)
!5973 = !DILocation(line: 860, column: 13, scope: !5969)
!5974 = !DILocation(line: 854, column: 16, scope: !5959)
!5975 = !DILocation(line: 854, column: 5, scope: !5959)
!5976 = distinct !{!5976, !5975, !5977}
!5977 = !DILocation(line: 861, column: 5, scope: !5959)
!5978 = !DILocation(line: 864, column: 1, scope: !5959)
!5979 = distinct !DISubprogram(name: "flash_write", scope: !475, file: !475, line: 868, type: !5980, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !5982)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!7, !484, !30, !7}
!5982 = !{!5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996}
!5983 = !DILocalVariable(name: "buf", arg: 1, scope: !5979, file: !475, line: 868, type: !484)
!5984 = !DILocalVariable(name: "to", arg: 2, scope: !5979, file: !475, line: 868, type: !30)
!5985 = !DILocalVariable(name: "len", arg: 3, scope: !5979, file: !475, line: 868, type: !7)
!5986 = !DILocalVariable(name: "page_offset", scope: !5979, file: !475, line: 870, type: !401)
!5987 = !DILocalVariable(name: "page_size", scope: !5979, file: !475, line: 870, type: !401)
!5988 = !DILocalVariable(name: "rc", scope: !5979, file: !475, line: 871, type: !7)
!5989 = !DILocalVariable(name: "retlen", scope: !5979, file: !475, line: 871, type: !7)
!5990 = !DILocalVariable(name: "mode", scope: !5979, file: !475, line: 872, type: !7)
!5991 = !DILocalVariable(name: "cmd", scope: !5979, file: !475, line: 873, type: !5227)
!5992 = !DILocalVariable(name: "result", scope: !5979, file: !475, line: 874, type: !355)
!5993 = !DILocalVariable(name: "savedMask", scope: !5979, file: !475, line: 875, type: !61)
!5994 = !DILocalVariable(name: "To", scope: !5979, file: !475, line: 877, type: !61)
!5995 = !DILocalVariable(name: "Buf", scope: !5979, file: !475, line: 878, type: !2691)
!5996 = !DILocalVariable(name: "p_data_first", scope: !5979, file: !475, line: 879, type: !2691)
!5997 = !DILocation(line: 0, scope: !5979)
!5998 = !DILocation(line: 873, column: 5, scope: !5979)
!5999 = !DILocation(line: 873, column: 19, scope: !5979)
!6000 = !DILocation(line: 882, column: 13, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5979, file: !475, line: 882, column: 9)
!6002 = !DILocation(line: 882, column: 9, scope: !5979)
!6003 = !DILocation(line: 886, column: 12, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5979, file: !475, line: 886, column: 9)
!6005 = !DILocation(line: 886, column: 20, scope: !6004)
!6006 = !DILocation(line: 886, column: 35, scope: !6004)
!6007 = !DILocation(line: 886, column: 62, scope: !6004)
!6008 = !DILocation(line: 886, column: 45, scope: !6004)
!6009 = !DILocation(line: 886, column: 18, scope: !6004)
!6010 = !DILocation(line: 886, column: 9, scope: !5979)
!6011 = !DILocation(line: 891, column: 9, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5979, file: !475, line: 891, column: 9)
!6013 = !DILocation(line: 896, column: 18, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5979, file: !475, line: 895, column: 8)
!6015 = !DILocation(line: 897, column: 19, scope: !5979)
!6016 = !DILocation(line: 897, column: 5, scope: !6014)
!6017 = distinct !{!6017, !6018, !6019}
!6018 = !DILocation(line: 895, column: 5, scope: !5979)
!6019 = !DILocation(line: 897, column: 28, scope: !5979)
!6020 = !DILocation(line: 899, column: 22, scope: !5979)
!6021 = !DILocation(line: 901, column: 12, scope: !5979)
!6022 = !DILocation(line: 903, column: 15, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !5979, file: !475, line: 903, column: 9)
!6024 = !DILocation(line: 903, column: 24, scope: !6023)
!6025 = !DILocation(line: 903, column: 27, scope: !6023)
!6026 = !DILocation(line: 903, column: 43, scope: !6023)
!6027 = !DILocation(line: 903, column: 9, scope: !5979)
!6028 = !DILocation(line: 0, scope: !6023)
!6029 = !DILocation(line: 913, column: 16, scope: !5979)
!6030 = !DILocation(line: 913, column: 5, scope: !5979)
!6031 = !DILocation(line: 910, column: 24, scope: !5979)
!6032 = !DILocation(line: 910, column: 22, scope: !5979)
!6033 = !DILocation(line: 952, column: 5, scope: !5979)
!6034 = !DILocation(line: 914, column: 21, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !5979, file: !475, line: 913, column: 21)
!6036 = !DILocation(line: 919, column: 21, scope: !6035)
!6037 = !DILocation(line: 919, column: 18, scope: !6035)
!6038 = !DILocation(line: 919, column: 16, scope: !6035)
!6039 = !DILocation(line: 920, column: 21, scope: !6035)
!6040 = !DILocation(line: 920, column: 18, scope: !6035)
!6041 = !DILocation(line: 920, column: 16, scope: !6035)
!6042 = !DILocation(line: 921, column: 18, scope: !6035)
!6043 = !DILocation(line: 921, column: 16, scope: !6035)
!6044 = !DILocation(line: 923, column: 13, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6035, file: !475, line: 923, column: 13)
!6046 = !DILocation(line: 927, column: 9, scope: !6035)
!6047 = !DILocation(line: 928, column: 21, scope: !6035)
!6048 = !DILocation(line: 929, column: 9, scope: !6035)
!6049 = !DILocation(line: 930, column: 14, scope: !6035)
!6050 = !DILocation(line: 931, column: 9, scope: !6035)
!6051 = !DILocation(line: 933, column: 9, scope: !6035)
!6052 = !DILocation(line: 934, column: 86, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6035, file: !475, line: 933, column: 12)
!6054 = !DILocation(line: 934, column: 22, scope: !6053)
!6055 = !DILocation(line: 935, column: 20, scope: !6035)
!6056 = !DILocation(line: 935, column: 9, scope: !6053)
!6057 = distinct !{!6057, !6051, !6058}
!6058 = !DILocation(line: 935, column: 29, scope: !6035)
!6059 = !DILocation(line: 937, column: 16, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6035, file: !475, line: 937, column: 13)
!6061 = !DILocation(line: 937, column: 13, scope: !6035)
!6062 = !DILocation(line: 938, column: 20, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6060, file: !475, line: 937, column: 21)
!6064 = !DILocation(line: 939, column: 20, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6063, file: !475, line: 939, column: 17)
!6066 = !DILocation(line: 939, column: 17, scope: !6063)
!6067 = !DILocation(line: 941, column: 17, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6065, file: !475, line: 939, column: 33)
!6069 = !DILocation(line: 942, column: 17, scope: !6068)
!6070 = !DILocation(line: 947, column: 13, scope: !6035)
!6071 = distinct !{!6071, !6030, !6072}
!6072 = !DILocation(line: 950, column: 5, scope: !5979)
!6073 = !DILocation(line: 949, column: 13, scope: !6035)
!6074 = !DILocation(line: 948, column: 12, scope: !6035)
!6075 = !DILocation(line: 953, column: 18, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !5979, file: !475, line: 952, column: 8)
!6077 = !DILocation(line: 954, column: 19, scope: !5979)
!6078 = !DILocation(line: 954, column: 5, scope: !6076)
!6079 = distinct !{!6079, !6033, !6080}
!6080 = !DILocation(line: 954, column: 28, scope: !5979)
!6081 = !DILocation(line: 956, column: 5, scope: !5979)
!6082 = !DILocation(line: 957, column: 5, scope: !5979)
!6083 = !DILocation(line: 958, column: 1, scope: !5979)
!6084 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !475, file: !475, line: 963, type: !5809, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !6085)
!6085 = !{!6086, !6087, !6088, !6089}
!6086 = !DILocalVariable(name: "to", arg: 1, scope: !6084, file: !475, line: 963, type: !30)
!6087 = !DILocalVariable(name: "len", scope: !6084, file: !475, line: 965, type: !7)
!6088 = !DILocalVariable(name: "rc", scope: !6084, file: !475, line: 965, type: !7)
!6089 = !DILocalVariable(name: "cmd", scope: !6084, file: !475, line: 966, type: !5227)
!6090 = !DILocation(line: 0, scope: !6084)
!6091 = !DILocation(line: 966, column: 5, scope: !6084)
!6092 = !DILocation(line: 966, column: 19, scope: !6084)
!6093 = !DILocation(line: 968, column: 12, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6084, file: !475, line: 968, column: 9)
!6095 = !DILocation(line: 968, column: 9, scope: !6084)
!6096 = !DILocation(line: 972, column: 12, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6084, file: !475, line: 972, column: 9)
!6098 = !DILocation(line: 972, column: 20, scope: !6097)
!6099 = !DILocation(line: 972, column: 35, scope: !6097)
!6100 = !DILocation(line: 972, column: 62, scope: !6097)
!6101 = !DILocation(line: 972, column: 45, scope: !6097)
!6102 = !DILocation(line: 972, column: 18, scope: !6097)
!6103 = !DILocation(line: 972, column: 9, scope: !6084)
!6104 = !DILocation(line: 976, column: 22, scope: !6084)
!6105 = !DILocation(line: 979, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6084, file: !475, line: 979, column: 9)
!6107 = !DILocation(line: 983, column: 5, scope: !6084)
!6108 = !DILocation(line: 985, column: 12, scope: !6084)
!6109 = !DILocation(line: 986, column: 17, scope: !6084)
!6110 = !DILocation(line: 986, column: 14, scope: !6084)
!6111 = !DILocation(line: 986, column: 5, scope: !6084)
!6112 = !DILocation(line: 986, column: 12, scope: !6084)
!6113 = !DILocation(line: 987, column: 17, scope: !6084)
!6114 = !DILocation(line: 987, column: 14, scope: !6084)
!6115 = !DILocation(line: 987, column: 5, scope: !6084)
!6116 = !DILocation(line: 987, column: 12, scope: !6084)
!6117 = !DILocation(line: 988, column: 14, scope: !6084)
!6118 = !DILocation(line: 988, column: 5, scope: !6084)
!6119 = !DILocation(line: 988, column: 12, scope: !6084)
!6120 = !DILocation(line: 990, column: 5, scope: !6084)
!6121 = !DILocation(line: 991, column: 5, scope: !6084)
!6122 = !DILocation(line: 993, column: 10, scope: !6084)
!6123 = !DILocation(line: 994, column: 22, scope: !6084)
!6124 = !DILocation(line: 995, column: 5, scope: !6084)
!6125 = !DILocation(line: 996, column: 1, scope: !6084)
!6126 = distinct !DISubprogram(name: "flash_erase_write", scope: !475, file: !475, line: 998, type: !5980, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !6127)
!6127 = !{!6128, !6129, !6130, !6131, !6135, !6136, !6137, !6141, !6142, !6143}
!6128 = !DILocalVariable(name: "buf", arg: 1, scope: !6126, file: !475, line: 998, type: !484)
!6129 = !DILocalVariable(name: "offs", arg: 2, scope: !6126, file: !475, line: 998, type: !30)
!6130 = !DILocalVariable(name: "count", arg: 3, scope: !6126, file: !475, line: 998, type: !7)
!6131 = !DILocalVariable(name: "block", scope: !6126, file: !475, line: 1000, type: !6132)
!6132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32768, elements: !6133)
!6133 = !{!6134}
!6134 = !DISubrange(count: 4096)
!6135 = !DILocalVariable(name: "blocksize", scope: !6126, file: !475, line: 1002, type: !7)
!6136 = !DILocalVariable(name: "blockmask", scope: !6126, file: !475, line: 1003, type: !7)
!6137 = !DILocalVariable(name: "piece", scope: !6138, file: !475, line: 1008, type: !30)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !475, line: 1007, column: 56)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !475, line: 1007, column: 13)
!6140 = distinct !DILexicalBlock(scope: !6126, file: !475, line: 1005, column: 23)
!6141 = !DILocalVariable(name: "blockaddr", scope: !6138, file: !475, line: 1008, type: !30)
!6142 = !DILocalVariable(name: "piece_size", scope: !6138, file: !475, line: 1009, type: !7)
!6143 = !DILocalVariable(name: "aligned_size", scope: !6144, file: !475, line: 1034, type: !30)
!6144 = distinct !DILexicalBlock(scope: !6139, file: !475, line: 1033, column: 16)
!6145 = !DILocation(line: 0, scope: !6126)
!6146 = !DILocation(line: 1000, column: 5, scope: !6126)
!6147 = !DILocation(line: 1000, column: 19, scope: !6126)
!6148 = !DILocation(line: 1005, column: 18, scope: !6126)
!6149 = !DILocation(line: 1005, column: 5, scope: !6126)
!6150 = !DILocation(line: 1007, column: 13, scope: !6139)
!6151 = !DILocation(line: 1007, column: 32, scope: !6139)
!6152 = !DILocation(line: 1011, column: 30, scope: !6138)
!6153 = !DILocation(line: 0, scope: !6138)
!6154 = !DILocation(line: 1013, column: 17, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6138, file: !475, line: 1013, column: 17)
!6156 = !DILocation(line: 1013, column: 72, scope: !6155)
!6157 = !DILocation(line: 1013, column: 17, scope: !6138)
!6158 = !DILocation(line: 1017, column: 30, scope: !6138)
!6159 = !DILocation(line: 1019, column: 26, scope: !6138)
!6160 = !DILocation(line: 1020, column: 26, scope: !6138)
!6161 = !DILocation(line: 1020, column: 13, scope: !6138)
!6162 = !DILocation(line: 1022, column: 17, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6138, file: !475, line: 1022, column: 17)
!6164 = !DILocation(line: 1026, column: 17, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6138, file: !475, line: 1026, column: 17)
!6166 = !DILocation(line: 1026, column: 58, scope: !6165)
!6167 = !DILocation(line: 1026, column: 17, scope: !6138)
!6168 = !DILocation(line: 1032, column: 19, scope: !6138)
!6169 = !DILocation(line: 1034, column: 47, scope: !6144)
!6170 = !DILocation(line: 0, scope: !6144)
!6171 = !DILocation(line: 1036, column: 17, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6144, file: !475, line: 1036, column: 17)
!6173 = !DILocation(line: 1040, column: 17, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6144, file: !475, line: 1040, column: 17)
!6175 = !DILocation(line: 1040, column: 54, scope: !6174)
!6176 = !DILocation(line: 1040, column: 17, scope: !6144)
!6177 = !DILocation(line: 1047, column: 19, scope: !6144)
!6178 = !DILocation(line: 0, scope: !6139)
!6179 = distinct !{!6179, !6149, !6180}
!6180 = !DILocation(line: 1049, column: 5, scope: !6126)
!6181 = !DILocation(line: 1052, column: 1, scope: !6126)
!6182 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !475, file: !475, line: 1055, type: !6183, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !474, retainedNodes: !2550)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!6185}
!6185 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !6, line: 71, baseType: !477)
!6186 = !DILocation(line: 1057, column: 9, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6182, file: !475, line: 1057, column: 9)
!6188 = !DILocation(line: 1057, column: 9, scope: !6182)
!6189 = !DILocation(line: 1062, column: 9, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !475, line: 1061, column: 43)
!6191 = distinct !DILexicalBlock(scope: !6182, file: !475, line: 1061, column: 9)
!6192 = !DILocation(line: 1065, column: 48, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6182, file: !475, line: 1065, column: 9)
!6194 = !DILocation(line: 0, scope: !6193)
!6195 = !DILocation(line: 0, scope: !6182)
!6196 = !DILocation(line: 1072, column: 1, scope: !6182)
!6197 = distinct !DISubprogram(name: "spim_Lisr", scope: !565, file: !565, line: 54, type: !154, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !2550)
!6198 = !DILocation(line: 56, column: 15, scope: !6197)
!6199 = !DILocation(line: 57, column: 9, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6197, file: !565, line: 57, column: 9)
!6201 = !DILocation(line: 57, column: 24, scope: !6200)
!6202 = !DILocation(line: 57, column: 33, scope: !6200)
!6203 = !DILocation(line: 57, column: 20, scope: !6200)
!6204 = !DILocation(line: 57, column: 9, scope: !6197)
!6205 = !DILocation(line: 58, column: 29, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6200, file: !565, line: 57, column: 39)
!6207 = !DILocation(line: 58, column: 9, scope: !6206)
!6208 = !DILocation(line: 59, column: 20, scope: !6206)
!6209 = !DILocation(line: 60, column: 5, scope: !6206)
!6210 = !DILocation(line: 61, column: 1, scope: !6197)
!6211 = distinct !DISubprogram(name: "spim_init", scope: !565, file: !565, line: 63, type: !2707, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !6212)
!6212 = !{!6213, !6214, !6215}
!6213 = !DILocalVariable(name: "setting", arg: 1, scope: !6211, file: !565, line: 63, type: !61)
!6214 = !DILocalVariable(name: "clock", arg: 2, scope: !6211, file: !565, line: 63, type: !61)
!6215 = !DILocalVariable(name: "ret", scope: !6211, file: !565, line: 65, type: !588)
!6216 = !DILocation(line: 0, scope: !6211)
!6217 = !DILocation(line: 67, column: 5, scope: !6211)
!6218 = !DILocation(line: 69, column: 28, scope: !6211)
!6219 = !DILocation(line: 69, column: 5, scope: !6211)
!6220 = !DILocation(line: 70, column: 89, scope: !6211)
!6221 = !DILocation(line: 71, column: 11, scope: !6211)
!6222 = !DILocation(line: 72, column: 25, scope: !6211)
!6223 = !DILocation(line: 72, column: 5, scope: !6211)
!6224 = !DILocation(line: 73, column: 5, scope: !6211)
!6225 = !DILocation(line: 0, scope: !580)
!6226 = !DILocation(line: 110, column: 24, scope: !580)
!6227 = !DILocation(line: 110, column: 14, scope: !580)
!6228 = !DILocation(line: 111, column: 17, scope: !580)
!6229 = !DILocation(line: 113, column: 14, scope: !580)
!6230 = !DILocation(line: 114, column: 12, scope: !580)
!6231 = !DILocation(line: 116, column: 17, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !580, file: !565, line: 116, column: 9)
!6233 = !DILocation(line: 116, column: 9, scope: !580)
!6234 = !DILocation(line: 120, column: 17, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !580, file: !565, line: 120, column: 9)
!6236 = !DILocation(line: 120, column: 9, scope: !580)
!6237 = !DILocation(line: 126, column: 23, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !565, line: 126, column: 9)
!6239 = distinct !DILexicalBlock(scope: !6240, file: !565, line: 126, column: 9)
!6240 = distinct !DILexicalBlock(scope: !6235, file: !565, line: 124, column: 12)
!6241 = !DILocation(line: 126, column: 9, scope: !6239)
!6242 = !DILocation(line: 127, column: 23, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6238, file: !565, line: 126, column: 40)
!6244 = !DILocation(line: 128, column: 19, scope: !6243)
!6245 = !DILocation(line: 126, column: 25, scope: !6238)
!6246 = distinct !{!6246, !6241, !6247}
!6247 = !DILocation(line: 129, column: 9, scope: !6239)
!6248 = !DILocation(line: 121, column: 19, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6235, file: !565, line: 120, column: 32)
!6250 = !DILocation(line: 122, column: 15, scope: !6249)
!6251 = !DILocation(line: 123, column: 9, scope: !6249)
!6252 = !DILocation(line: 127, column: 49, scope: !6243)
!6253 = !DILocation(line: 128, column: 74, scope: !6243)
!6254 = !DILocation(line: 128, column: 102, scope: !6243)
!6255 = !DILocation(line: 126, column: 36, scope: !6238)
!6256 = !DILocation(line: 131, column: 13, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6240, file: !565, line: 131, column: 13)
!6258 = !DILocation(line: 0, scope: !6239)
!6259 = !DILocation(line: 131, column: 23, scope: !6257)
!6260 = !DILocation(line: 131, column: 13, scope: !6240)
!6261 = !DILocation(line: 132, column: 27, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !565, line: 132, column: 17)
!6263 = distinct !DILexicalBlock(scope: !6257, file: !565, line: 131, column: 38)
!6264 = !DILocation(line: 132, column: 17, scope: !6263)
!6265 = !DILocation(line: 135, column: 49, scope: !6263)
!6266 = !DILocation(line: 135, column: 23, scope: !6263)
!6267 = !DILocation(line: 136, column: 19, scope: !6263)
!6268 = !DILocation(line: 137, column: 13, scope: !6263)
!6269 = !DILocation(line: 139, column: 49, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6257, file: !565, line: 138, column: 16)
!6271 = !DILocation(line: 139, column: 23, scope: !6270)
!6272 = !DILocation(line: 140, column: 70, scope: !6270)
!6273 = !DILocation(line: 140, column: 109, scope: !6270)
!6274 = !DILocation(line: 140, column: 134, scope: !6270)
!6275 = !DILocation(line: 140, column: 19, scope: !6270)
!6276 = !DILocation(line: 141, column: 13, scope: !6270)
!6277 = !DILocation(line: 144, column: 1, scope: !580)
!6278 = distinct !DISubprogram(name: "spim_fill_in_data", scope: !565, file: !565, line: 76, type: !6279, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !6281)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!61, !500, !61, !61, !61}
!6281 = !{!6282, !6283, !6284, !6285, !6286}
!6282 = !DILocalVariable(name: "buf", arg: 1, scope: !6278, file: !565, line: 76, type: !500)
!6283 = !DILocalVariable(name: "write_buf_cnt", arg: 2, scope: !6278, file: !565, line: 76, type: !61)
!6284 = !DILocalVariable(name: "regVal", arg: 3, scope: !6278, file: !565, line: 76, type: !61)
!6285 = !DILocalVariable(name: "remainder", arg: 4, scope: !6278, file: !565, line: 76, type: !61)
!6286 = !DILocalVariable(name: "op_addr", scope: !6278, file: !565, line: 78, type: !61)
!6287 = !DILocation(line: 0, scope: !6278)
!6288 = !DILocation(line: 79, column: 16, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6278, file: !565, line: 79, column: 9)
!6290 = !DILocation(line: 79, column: 9, scope: !6278)
!6291 = !DILocation(line: 80, column: 13, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6289, file: !565, line: 79, column: 44)
!6293 = !DILocation(line: 81, column: 46, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !565, line: 80, column: 29)
!6295 = distinct !DILexicalBlock(scope: !6292, file: !565, line: 80, column: 13)
!6296 = !DILocation(line: 81, column: 30, scope: !6294)
!6297 = !DILocation(line: 81, column: 24, scope: !6294)
!6298 = !DILocation(line: 82, column: 9, scope: !6294)
!6299 = !DILocation(line: 83, column: 46, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !565, line: 82, column: 36)
!6301 = distinct !DILexicalBlock(scope: !6295, file: !565, line: 82, column: 20)
!6302 = !DILocation(line: 83, column: 30, scope: !6300)
!6303 = !DILocation(line: 83, column: 24, scope: !6300)
!6304 = !DILocation(line: 83, column: 79, scope: !6300)
!6305 = !DILocation(line: 83, column: 138, scope: !6300)
!6306 = !DILocation(line: 83, column: 88, scope: !6300)
!6307 = !DILocation(line: 83, column: 85, scope: !6300)
!6308 = !DILocation(line: 84, column: 9, scope: !6300)
!6309 = !DILocation(line: 85, column: 46, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !565, line: 84, column: 36)
!6311 = distinct !DILexicalBlock(scope: !6301, file: !565, line: 84, column: 20)
!6312 = !DILocation(line: 85, column: 30, scope: !6310)
!6313 = !DILocation(line: 85, column: 24, scope: !6310)
!6314 = !DILocation(line: 85, column: 79, scope: !6310)
!6315 = !DILocation(line: 85, column: 139, scope: !6310)
!6316 = !DILocation(line: 85, column: 89, scope: !6310)
!6317 = !DILocation(line: 85, column: 144, scope: !6310)
!6318 = !DILocation(line: 85, column: 86, scope: !6310)
!6319 = !DILocation(line: 85, column: 203, scope: !6310)
!6320 = !DILocation(line: 85, column: 153, scope: !6310)
!6321 = !DILocation(line: 85, column: 150, scope: !6310)
!6322 = !DILocation(line: 86, column: 9, scope: !6310)
!6323 = !DILocation(line: 87, column: 46, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !565, line: 86, column: 36)
!6325 = distinct !DILexicalBlock(scope: !6311, file: !565, line: 86, column: 20)
!6326 = !DILocation(line: 87, column: 30, scope: !6324)
!6327 = !DILocation(line: 87, column: 24, scope: !6324)
!6328 = !DILocation(line: 87, column: 79, scope: !6324)
!6329 = !DILocation(line: 87, column: 139, scope: !6324)
!6330 = !DILocation(line: 87, column: 89, scope: !6324)
!6331 = !DILocation(line: 87, column: 144, scope: !6324)
!6332 = !DILocation(line: 87, column: 86, scope: !6324)
!6333 = !DILocation(line: 87, column: 204, scope: !6324)
!6334 = !DILocation(line: 87, column: 154, scope: !6324)
!6335 = !DILocation(line: 87, column: 209, scope: !6324)
!6336 = !DILocation(line: 87, column: 151, scope: !6324)
!6337 = !DILocation(line: 87, column: 268, scope: !6324)
!6338 = !DILocation(line: 87, column: 218, scope: !6324)
!6339 = !DILocation(line: 87, column: 215, scope: !6324)
!6340 = !DILocation(line: 88, column: 9, scope: !6324)
!6341 = !DILocation(line: 90, column: 13, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6289, file: !565, line: 89, column: 12)
!6343 = !DILocation(line: 91, column: 46, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !565, line: 90, column: 29)
!6345 = distinct !DILexicalBlock(scope: !6342, file: !565, line: 90, column: 13)
!6346 = !DILocation(line: 91, column: 30, scope: !6344)
!6347 = !DILocation(line: 91, column: 24, scope: !6344)
!6348 = !DILocation(line: 92, column: 9, scope: !6344)
!6349 = !DILocation(line: 93, column: 46, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !565, line: 92, column: 36)
!6351 = distinct !DILexicalBlock(scope: !6345, file: !565, line: 92, column: 20)
!6352 = !DILocation(line: 93, column: 30, scope: !6350)
!6353 = !DILocation(line: 93, column: 24, scope: !6350)
!6354 = !DILocation(line: 93, column: 138, scope: !6350)
!6355 = !DILocation(line: 93, column: 88, scope: !6350)
!6356 = !DILocation(line: 93, column: 143, scope: !6350)
!6357 = !DILocation(line: 93, column: 85, scope: !6350)
!6358 = !DILocation(line: 94, column: 9, scope: !6350)
!6359 = !DILocation(line: 95, column: 46, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !565, line: 94, column: 36)
!6361 = distinct !DILexicalBlock(scope: !6351, file: !565, line: 94, column: 20)
!6362 = !DILocation(line: 95, column: 30, scope: !6360)
!6363 = !DILocation(line: 95, column: 24, scope: !6360)
!6364 = !DILocation(line: 95, column: 138, scope: !6360)
!6365 = !DILocation(line: 95, column: 88, scope: !6360)
!6366 = !DILocation(line: 95, column: 143, scope: !6360)
!6367 = !DILocation(line: 95, column: 85, scope: !6360)
!6368 = !DILocation(line: 95, column: 202, scope: !6360)
!6369 = !DILocation(line: 95, column: 152, scope: !6360)
!6370 = !DILocation(line: 95, column: 207, scope: !6360)
!6371 = !DILocation(line: 95, column: 149, scope: !6360)
!6372 = !DILocation(line: 96, column: 9, scope: !6360)
!6373 = !DILocation(line: 97, column: 46, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !565, line: 96, column: 36)
!6375 = distinct !DILexicalBlock(scope: !6361, file: !565, line: 96, column: 20)
!6376 = !DILocation(line: 97, column: 30, scope: !6374)
!6377 = !DILocation(line: 97, column: 24, scope: !6374)
!6378 = !DILocation(line: 97, column: 138, scope: !6374)
!6379 = !DILocation(line: 97, column: 88, scope: !6374)
!6380 = !DILocation(line: 97, column: 143, scope: !6374)
!6381 = !DILocation(line: 97, column: 85, scope: !6374)
!6382 = !DILocation(line: 97, column: 202, scope: !6374)
!6383 = !DILocation(line: 97, column: 152, scope: !6374)
!6384 = !DILocation(line: 97, column: 207, scope: !6374)
!6385 = !DILocation(line: 97, column: 149, scope: !6374)
!6386 = !DILocation(line: 97, column: 267, scope: !6374)
!6387 = !DILocation(line: 97, column: 217, scope: !6374)
!6388 = !DILocation(line: 97, column: 272, scope: !6374)
!6389 = !DILocation(line: 97, column: 214, scope: !6374)
!6390 = !DILocation(line: 98, column: 9, scope: !6374)
!6391 = !DILocation(line: 100, column: 5, scope: !6278)
!6392 = !DILocation(line: 0, scope: !596)
!6393 = !DILocation(line: 154, column: 24, scope: !596)
!6394 = !DILocation(line: 154, column: 14, scope: !596)
!6395 = !DILocation(line: 155, column: 27, scope: !596)
!6396 = !DILocation(line: 155, column: 17, scope: !596)
!6397 = !DILocation(line: 157, column: 18, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !596, file: !565, line: 157, column: 9)
!6399 = !DILocation(line: 157, column: 9, scope: !596)
!6400 = !DILocation(line: 158, column: 15, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6398, file: !565, line: 157, column: 24)
!6402 = !DILocation(line: 159, column: 9, scope: !6401)
!6403 = !DILocation(line: 162, column: 9, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6398, file: !565, line: 160, column: 12)
!6405 = !DILocation(line: 163, column: 25, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !565, line: 163, column: 9)
!6407 = distinct !DILexicalBlock(scope: !6404, file: !565, line: 163, column: 9)
!6408 = !DILocation(line: 163, column: 23, scope: !6406)
!6409 = !DILocation(line: 163, column: 9, scope: !6407)
!6410 = !DILocation(line: 164, column: 77, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !565, line: 163, column: 40)
!6412 = !DILocation(line: 164, column: 73, scope: !6411)
!6413 = !DILocation(line: 164, column: 19, scope: !6411)
!6414 = !DILocation(line: 163, column: 36, scope: !6406)
!6415 = distinct !{!6415, !6409, !6416}
!6416 = !DILocation(line: 165, column: 9, scope: !6407)
!6417 = !DILocation(line: 166, column: 13, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6404, file: !565, line: 166, column: 13)
!6419 = !DILocation(line: 166, column: 23, scope: !6418)
!6420 = !DILocation(line: 166, column: 13, scope: !6404)
!6421 = !DILocation(line: 167, column: 84, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6418, file: !565, line: 166, column: 29)
!6423 = !DILocation(line: 167, column: 73, scope: !6422)
!6424 = !DILocation(line: 167, column: 19, scope: !6422)
!6425 = !DILocation(line: 168, column: 9, scope: !6422)
!6426 = !DILocation(line: 0, scope: !6398)
!6427 = !DILocation(line: 171, column: 1, scope: !596)
!6428 = distinct !DISubprogram(name: "get_current_count", scope: !2442, file: !2442, line: 56, type: !2531, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2550)
!6429 = !DILocation(line: 58, column: 12, scope: !6428)
!6430 = !DILocation(line: 58, column: 5, scope: !6428)
!6431 = distinct !DISubprogram(name: "delay_time", scope: !2442, file: !2442, line: 62, type: !2952, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6432)
!6432 = !{!6433, !6434, !6435}
!6433 = !DILocalVariable(name: "count", arg: 1, scope: !6431, file: !2442, line: 62, type: !139)
!6434 = !DILocalVariable(name: "end_count", scope: !6431, file: !2442, line: 64, type: !139)
!6435 = !DILocalVariable(name: "current", scope: !6431, file: !2442, line: 64, type: !139)
!6436 = !DILocation(line: 0, scope: !6431)
!6437 = !DILocation(line: 66, column: 17, scope: !6431)
!6438 = !DILocation(line: 66, column: 37, scope: !6431)
!6439 = !DILocation(line: 66, column: 45, scope: !6431)
!6440 = !DILocation(line: 67, column: 15, scope: !6431)
!6441 = !DILocation(line: 68, column: 12, scope: !6431)
!6442 = !DILocation(line: 68, column: 5, scope: !6431)
!6443 = !DILocation(line: 69, column: 19, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6431, file: !2442, line: 68, column: 45)
!6445 = distinct !{!6445, !6442, !6446}
!6446 = !DILocation(line: 70, column: 5, scope: !6431)
!6447 = !DILocation(line: 72, column: 1, scope: !6431)
!6448 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !2442, file: !2442, line: 75, type: !2952, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6449)
!6449 = !{!6450, !6451, !6452}
!6450 = !DILocalVariable(name: "count", arg: 1, scope: !6448, file: !2442, line: 75, type: !139)
!6451 = !DILocalVariable(name: "end_count", scope: !6448, file: !2442, line: 77, type: !139)
!6452 = !DILocalVariable(name: "current", scope: !6448, file: !2442, line: 77, type: !139)
!6453 = !DILocation(line: 0, scope: !6448)
!6454 = !DILocation(line: 79, column: 17, scope: !6448)
!6455 = !DILocation(line: 79, column: 42, scope: !6448)
!6456 = !DILocation(line: 79, column: 50, scope: !6448)
!6457 = !DILocation(line: 80, column: 15, scope: !6448)
!6458 = !DILocation(line: 81, column: 12, scope: !6448)
!6459 = !DILocation(line: 81, column: 5, scope: !6448)
!6460 = !DILocation(line: 82, column: 19, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6448, file: !2442, line: 81, column: 45)
!6462 = distinct !{!6462, !6459, !6463}
!6463 = !DILocation(line: 83, column: 5, scope: !6448)
!6464 = !DILocation(line: 85, column: 1, scope: !6448)
!6465 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !2442, file: !2442, line: 95, type: !2531, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2550)
!6466 = !DILocation(line: 97, column: 13, scope: !6465)
!6467 = !DILocation(line: 97, column: 5, scope: !6465)
!6468 = distinct !DISubprogram(name: "delay_ms", scope: !2442, file: !2442, line: 107, type: !4770, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6469)
!6469 = !{!6470, !6471}
!6470 = !DILocalVariable(name: "ms", arg: 1, scope: !6468, file: !2442, line: 107, type: !61)
!6471 = !DILocalVariable(name: "count", scope: !6468, file: !2442, line: 109, type: !61)
!6472 = !DILocation(line: 0, scope: !6468)
!6473 = !DILocation(line: 111, column: 17, scope: !6468)
!6474 = !DILocation(line: 112, column: 17, scope: !6468)
!6475 = !DILocation(line: 112, column: 23, scope: !6468)
!6476 = !DILocation(line: 112, column: 11, scope: !6468)
!6477 = !DILocation(line: 113, column: 17, scope: !6468)
!6478 = !DILocation(line: 113, column: 23, scope: !6468)
!6479 = !DILocation(line: 113, column: 11, scope: !6468)
!6480 = !DILocation(line: 114, column: 17, scope: !6468)
!6481 = !DILocation(line: 114, column: 23, scope: !6468)
!6482 = !DILocation(line: 114, column: 11, scope: !6468)
!6483 = !DILocation(line: 115, column: 5, scope: !6468)
!6484 = !DILocation(line: 116, column: 1, scope: !6468)
!6485 = distinct !DISubprogram(name: "delay_us", scope: !2442, file: !2442, line: 120, type: !4770, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6486)
!6486 = !{!6487, !6488, !6489}
!6487 = !DILocalVariable(name: "us", arg: 1, scope: !6485, file: !2442, line: 120, type: !61)
!6488 = !DILocalVariable(name: "count", scope: !6485, file: !2442, line: 122, type: !61)
!6489 = !DILocalVariable(name: "ticks_per_us", scope: !6485, file: !2442, line: 123, type: !61)
!6490 = !DILocation(line: 0, scope: !6485)
!6491 = !DILocation(line: 125, column: 20, scope: !6485)
!6492 = !DILocation(line: 125, column: 39, scope: !6485)
!6493 = !DILocation(line: 126, column: 26, scope: !6485)
!6494 = !DILocation(line: 128, column: 5, scope: !6485)
!6495 = !DILocation(line: 129, column: 1, scope: !6485)
!6496 = distinct !DISubprogram(name: "drvTMR_init", scope: !2442, file: !2442, line: 133, type: !6497, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6499)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{null, !61, !61, !69, !153}
!6499 = !{!6500, !6501, !6502, !6503}
!6500 = !DILocalVariable(name: "timerNum", arg: 1, scope: !6496, file: !2442, line: 133, type: !61)
!6501 = !DILocalVariable(name: "countValue", arg: 2, scope: !6496, file: !2442, line: 133, type: !61)
!6502 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !6496, file: !2442, line: 133, type: !69)
!6503 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !6496, file: !2442, line: 133, type: !153)
!6504 = !DILocation(line: 0, scope: !6496)
!6505 = !DILocation(line: 136, column: 5, scope: !6496)
!6506 = !DILocation(line: 138, column: 18, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6496, file: !2442, line: 138, column: 9)
!6508 = !DILocation(line: 138, column: 9, scope: !6496)
!6509 = !DILocation(line: 139, column: 30, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6507, file: !2442, line: 138, column: 27)
!6511 = !DILocation(line: 141, column: 5, scope: !6510)
!6512 = !DILocation(line: 142, column: 30, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6507, file: !2442, line: 141, column: 12)
!6514 = !DILocation(line: 0, scope: !6507)
!6515 = !DILocation(line: 146, column: 5, scope: !6496)
!6516 = !DILocation(line: 147, column: 1, scope: !6496)
!6517 = distinct !DISubprogram(name: "TMR_Start", scope: !2442, file: !2442, line: 149, type: !4770, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6518)
!6518 = !{!6519}
!6519 = !DILocalVariable(name: "timerNum", arg: 1, scope: !6517, file: !2442, line: 149, type: !61)
!6520 = !DILocation(line: 0, scope: !6517)
!6521 = !DILocation(line: 151, column: 5, scope: !6517)
!6522 = !DILocation(line: 152, column: 1, scope: !6517)
!6523 = distinct !DISubprogram(name: "TMR_Stop", scope: !2442, file: !2442, line: 154, type: !4770, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6524)
!6524 = !{!6525}
!6525 = !DILocalVariable(name: "timerNum", arg: 1, scope: !6523, file: !2442, line: 154, type: !61)
!6526 = !DILocation(line: 0, scope: !6523)
!6527 = !DILocation(line: 156, column: 5, scope: !6523)
!6528 = !DILocation(line: 157, column: 1, scope: !6523)
!6529 = distinct !DISubprogram(name: "drvGPT2Init", scope: !2442, file: !2442, line: 160, type: !154, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2550)
!6530 = !DILocation(line: 162, column: 5, scope: !6529)
!6531 = !DILocation(line: 163, column: 1, scope: !6529)
!6532 = distinct !DISubprogram(name: "drvGPT4Init", scope: !2442, file: !2442, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2550)
!6533 = !DILocation(line: 167, column: 5, scope: !6532)
!6534 = !DILocation(line: 168, column: 1, scope: !6532)
!6535 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !2442, file: !2442, line: 170, type: !4770, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6536)
!6536 = !{!6537}
!6537 = !DILocalVariable(name: "timerNum", arg: 1, scope: !6535, file: !2442, line: 170, type: !61)
!6538 = !DILocation(line: 0, scope: !6535)
!6539 = !DILocation(line: 172, column: 9, scope: !6535)
!6540 = !DILocation(line: 177, column: 5, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6542, file: !2442, line: 175, column: 27)
!6542 = distinct !DILexicalBlock(scope: !6535, file: !2442, line: 175, column: 9)
!6543 = !DILocation(line: 178, column: 1, scope: !6535)
!6544 = distinct !DISubprogram(name: "top_xtal_init", scope: !614, file: !614, line: 52, type: !154, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6545)
!6545 = !{!6546, !6547}
!6546 = !DILocalVariable(name: "u4RegVal", scope: !6544, file: !614, line: 54, type: !61)
!6547 = !DILocalVariable(name: "reg", scope: !6544, file: !614, line: 55, type: !401)
!6548 = !DILocation(line: 0, scope: !6544)
!6549 = !DILocation(line: 55, column: 25, scope: !6544)
!6550 = !DILocation(line: 56, column: 16, scope: !6544)
!6551 = !DILocation(line: 56, column: 23, scope: !6544)
!6552 = !DILocation(line: 58, column: 16, scope: !6544)
!6553 = !DILocation(line: 61, column: 5, scope: !6544)
!6554 = !DILocation(line: 59, column: 14, scope: !6544)
!6555 = !DILocation(line: 0, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6544, file: !614, line: 61, column: 18)
!6557 = !DILocation(line: 87, column: 38, scope: !6544)
!6558 = !DILocation(line: 88, column: 21, scope: !6544)
!6559 = !DILocation(line: 88, column: 19, scope: !6544)
!6560 = !DILocation(line: 89, column: 5, scope: !6544)
!6561 = !DILocation(line: 90, column: 17, scope: !6544)
!6562 = !DILocation(line: 90, column: 33, scope: !6544)
!6563 = !DILocation(line: 90, column: 5, scope: !6544)
!6564 = !DILocation(line: 91, column: 1, scope: !6544)
!6565 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !614, file: !614, line: 98, type: !2531, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !2550)
!6566 = !DILocation(line: 100, column: 12, scope: !6565)
!6567 = !DILocation(line: 100, column: 5, scope: !6565)
!6568 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !614, file: !614, line: 108, type: !2531, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !2550)
!6569 = !DILocation(line: 110, column: 12, scope: !6568)
!6570 = !DILocation(line: 110, column: 5, scope: !6568)
!6571 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !614, file: !614, line: 118, type: !154, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6572)
!6572 = !{!6573, !6574}
!6573 = !DILocalVariable(name: "reg", scope: !6571, file: !614, line: 120, type: !60)
!6574 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !6571, file: !614, line: 121, type: !59)
!6575 = !DILocation(line: 120, column: 5, scope: !6571)
!6576 = !DILocation(line: 120, column: 23, scope: !6571)
!6577 = !DILocation(line: 0, scope: !6571)
!6578 = !DILocation(line: 123, column: 11, scope: !6571)
!6579 = !DILocation(line: 123, column: 9, scope: !6571)
!6580 = !DILocation(line: 124, column: 12, scope: !6571)
!6581 = !DILocation(line: 124, column: 16, scope: !6571)
!6582 = !DILocation(line: 124, column: 39, scope: !6571)
!6583 = !DILocation(line: 124, column: 9, scope: !6571)
!6584 = !DILocation(line: 126, column: 9, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6571, file: !614, line: 126, column: 9)
!6586 = !DILocation(line: 126, column: 13, scope: !6585)
!6587 = !DILocation(line: 126, column: 9, scope: !6571)
!6588 = !DILocation(line: 127, column: 15, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6585, file: !614, line: 126, column: 47)
!6590 = !DILocation(line: 127, column: 13, scope: !6589)
!6591 = !DILocation(line: 128, column: 15, scope: !6589)
!6592 = !DILocation(line: 128, column: 19, scope: !6589)
!6593 = !DILocation(line: 128, column: 13, scope: !6589)
!6594 = !DILocation(line: 129, column: 15, scope: !6589)
!6595 = !DILocation(line: 129, column: 19, scope: !6589)
!6596 = !DILocation(line: 129, column: 13, scope: !6589)
!6597 = !DILocation(line: 130, column: 46, scope: !6589)
!6598 = !DILocation(line: 130, column: 9, scope: !6589)
!6599 = !DILocation(line: 132, column: 9, scope: !6589)
!6600 = !DILocation(line: 133, column: 19, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6589, file: !614, line: 132, column: 12)
!6602 = !DILocation(line: 133, column: 17, scope: !6601)
!6603 = !DILocation(line: 134, column: 19, scope: !6601)
!6604 = !DILocation(line: 134, column: 23, scope: !6601)
!6605 = !DILocation(line: 134, column: 17, scope: !6601)
!6606 = !DILocation(line: 135, column: 19, scope: !6589)
!6607 = !DILocation(line: 135, column: 18, scope: !6589)
!6608 = !DILocation(line: 135, column: 9, scope: !6601)
!6609 = distinct !{!6609, !6599, !6610}
!6610 = !DILocation(line: 135, column: 22, scope: !6589)
!6611 = !DILocation(line: 138, column: 1, scope: !6571)
!6612 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !4408, file: !4408, line: 176, type: !4409, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6613)
!6613 = !{!6614}
!6614 = !DILocalVariable(name: "Register", arg: 1, scope: !6612, file: !4408, line: 176, type: !4411)
!6615 = !DILocation(line: 0, scope: !6612)
!6616 = !DILocation(line: 178, column: 13, scope: !6612)
!6617 = !DILocation(line: 178, column: 12, scope: !6612)
!6618 = !DILocation(line: 178, column: 5, scope: !6612)
!6619 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !4408, file: !4408, line: 171, type: !6620, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6622)
!6620 = !DISubroutineType(types: !6621)
!6621 = !{null, !4411, !61}
!6622 = !{!6623, !6624}
!6623 = !DILocalVariable(name: "Register", arg: 1, scope: !6619, file: !4408, line: 171, type: !4411)
!6624 = !DILocalVariable(name: "Value", arg: 2, scope: !6619, file: !4408, line: 171, type: !61)
!6625 = !DILocation(line: 0, scope: !6619)
!6626 = !DILocation(line: 173, column: 6, scope: !6619)
!6627 = !DILocation(line: 173, column: 36, scope: !6619)
!6628 = !DILocation(line: 174, column: 1, scope: !6619)
!6629 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !614, file: !614, line: 145, type: !6630, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6632)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{null, !54}
!6632 = !{!6633, !6634, !6635}
!6633 = !DILocalVariable(name: "fg960M", arg: 1, scope: !6629, file: !614, line: 145, type: !54)
!6634 = !DILocalVariable(name: "reg", scope: !6629, file: !614, line: 147, type: !60)
!6635 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !6629, file: !614, line: 148, type: !59)
!6636 = !DILocation(line: 0, scope: !6629)
!6637 = !DILocation(line: 147, column: 5, scope: !6629)
!6638 = !DILocation(line: 147, column: 23, scope: !6629)
!6639 = !DILocation(line: 150, column: 11, scope: !6629)
!6640 = !DILocation(line: 150, column: 9, scope: !6629)
!6641 = !DILocation(line: 151, column: 12, scope: !6629)
!6642 = !DILocation(line: 151, column: 16, scope: !6629)
!6643 = !DILocation(line: 151, column: 39, scope: !6629)
!6644 = !DILocation(line: 151, column: 9, scope: !6629)
!6645 = !DILocation(line: 153, column: 9, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6629, file: !614, line: 153, column: 9)
!6647 = !DILocation(line: 153, column: 13, scope: !6646)
!6648 = !DILocation(line: 153, column: 9, scope: !6629)
!6649 = !DILocation(line: 154, column: 15, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6646, file: !614, line: 153, column: 45)
!6651 = !DILocation(line: 154, column: 13, scope: !6650)
!6652 = !DILocation(line: 155, column: 15, scope: !6650)
!6653 = !DILocation(line: 155, column: 19, scope: !6650)
!6654 = !DILocation(line: 155, column: 13, scope: !6650)
!6655 = !DILocation(line: 156, column: 15, scope: !6650)
!6656 = !DILocation(line: 156, column: 19, scope: !6650)
!6657 = !DILocation(line: 156, column: 13, scope: !6650)
!6658 = !DILocation(line: 157, column: 15, scope: !6650)
!6659 = !DILocation(line: 157, column: 13, scope: !6650)
!6660 = !DILocation(line: 158, column: 46, scope: !6650)
!6661 = !DILocation(line: 158, column: 9, scope: !6650)
!6662 = !DILocation(line: 160, column: 15, scope: !6650)
!6663 = !DILocation(line: 160, column: 13, scope: !6650)
!6664 = !DILocation(line: 161, column: 15, scope: !6650)
!6665 = !DILocation(line: 161, column: 19, scope: !6650)
!6666 = !DILocation(line: 161, column: 13, scope: !6650)
!6667 = !DILocation(line: 162, column: 15, scope: !6650)
!6668 = !DILocation(line: 162, column: 19, scope: !6650)
!6669 = !DILocation(line: 162, column: 13, scope: !6650)
!6670 = !DILocation(line: 163, column: 15, scope: !6650)
!6671 = !DILocation(line: 163, column: 19, scope: !6650)
!6672 = !DILocation(line: 163, column: 13, scope: !6650)
!6673 = !DILocation(line: 164, column: 46, scope: !6650)
!6674 = !DILocation(line: 164, column: 9, scope: !6650)
!6675 = !DILocation(line: 166, column: 9, scope: !6650)
!6676 = !DILocation(line: 167, column: 19, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6650, file: !614, line: 166, column: 12)
!6678 = !DILocation(line: 167, column: 17, scope: !6677)
!6679 = !DILocation(line: 168, column: 19, scope: !6677)
!6680 = !DILocation(line: 168, column: 23, scope: !6677)
!6681 = !DILocation(line: 168, column: 17, scope: !6677)
!6682 = !DILocation(line: 169, column: 19, scope: !6650)
!6683 = !DILocation(line: 169, column: 18, scope: !6650)
!6684 = !DILocation(line: 169, column: 9, scope: !6677)
!6685 = distinct !{!6685, !6675, !6686}
!6686 = !DILocation(line: 169, column: 22, scope: !6650)
!6687 = !DILocation(line: 171, column: 15, scope: !6650)
!6688 = !DILocation(line: 171, column: 13, scope: !6650)
!6689 = !DILocation(line: 172, column: 15, scope: !6650)
!6690 = !DILocation(line: 172, column: 19, scope: !6650)
!6691 = !DILocation(line: 172, column: 13, scope: !6650)
!6692 = !DILocation(line: 173, column: 15, scope: !6650)
!6693 = !DILocation(line: 173, column: 19, scope: !6650)
!6694 = !DILocation(line: 173, column: 13, scope: !6650)
!6695 = !DILocation(line: 174, column: 5, scope: !6650)
!6696 = !DILocation(line: 176, column: 11, scope: !6629)
!6697 = !DILocation(line: 176, column: 9, scope: !6629)
!6698 = !DILocation(line: 177, column: 9, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6629, file: !614, line: 177, column: 9)
!6700 = !DILocation(line: 0, scope: !6699)
!6701 = !DILocation(line: 177, column: 9, scope: !6629)
!6702 = !DILocation(line: 178, column: 19, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6699, file: !614, line: 177, column: 17)
!6704 = !DILocation(line: 178, column: 13, scope: !6703)
!6705 = !DILocation(line: 179, column: 5, scope: !6703)
!6706 = !DILocation(line: 180, column: 13, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6699, file: !614, line: 179, column: 12)
!6708 = !DILocation(line: 182, column: 42, scope: !6629)
!6709 = !DILocation(line: 182, column: 5, scope: !6629)
!6710 = !DILocation(line: 184, column: 1, scope: !6629)
!6711 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !614, file: !614, line: 191, type: !154, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6712)
!6712 = !{!6713, !6714}
!6713 = !DILocalVariable(name: "reg", scope: !6711, file: !614, line: 193, type: !60)
!6714 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !6711, file: !614, line: 194, type: !59)
!6715 = !DILocation(line: 193, column: 5, scope: !6711)
!6716 = !DILocation(line: 193, column: 23, scope: !6711)
!6717 = !DILocation(line: 0, scope: !6711)
!6718 = !DILocation(line: 196, column: 11, scope: !6711)
!6719 = !DILocation(line: 196, column: 9, scope: !6711)
!6720 = !DILocation(line: 197, column: 11, scope: !6711)
!6721 = !DILocation(line: 197, column: 15, scope: !6711)
!6722 = !DILocation(line: 197, column: 9, scope: !6711)
!6723 = !DILocation(line: 198, column: 11, scope: !6711)
!6724 = !DILocation(line: 198, column: 15, scope: !6711)
!6725 = !DILocation(line: 198, column: 9, scope: !6711)
!6726 = !DILocation(line: 199, column: 11, scope: !6711)
!6727 = !DILocation(line: 199, column: 9, scope: !6711)
!6728 = !DILocation(line: 200, column: 42, scope: !6711)
!6729 = !DILocation(line: 200, column: 5, scope: !6711)
!6730 = !DILocation(line: 202, column: 11, scope: !6711)
!6731 = !DILocation(line: 202, column: 9, scope: !6711)
!6732 = !DILocation(line: 203, column: 11, scope: !6711)
!6733 = !DILocation(line: 203, column: 15, scope: !6711)
!6734 = !DILocation(line: 203, column: 9, scope: !6711)
!6735 = !DILocation(line: 204, column: 11, scope: !6711)
!6736 = !DILocation(line: 204, column: 15, scope: !6711)
!6737 = !DILocation(line: 204, column: 9, scope: !6711)
!6738 = !DILocation(line: 205, column: 11, scope: !6711)
!6739 = !DILocation(line: 205, column: 9, scope: !6711)
!6740 = !DILocation(line: 206, column: 42, scope: !6711)
!6741 = !DILocation(line: 206, column: 5, scope: !6711)
!6742 = !DILocation(line: 209, column: 1, scope: !6711)
!6743 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !614, file: !614, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6744)
!6744 = !{!6745, !6746}
!6745 = !DILocalVariable(name: "reg", scope: !6743, file: !614, line: 218, type: !60)
!6746 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !6743, file: !614, line: 219, type: !59)
!6747 = !DILocation(line: 218, column: 5, scope: !6743)
!6748 = !DILocation(line: 218, column: 23, scope: !6743)
!6749 = !DILocation(line: 0, scope: !6743)
!6750 = !DILocation(line: 222, column: 11, scope: !6743)
!6751 = !DILocation(line: 222, column: 9, scope: !6743)
!6752 = !DILocation(line: 223, column: 11, scope: !6743)
!6753 = !DILocation(line: 223, column: 15, scope: !6743)
!6754 = !DILocation(line: 223, column: 9, scope: !6743)
!6755 = !DILocation(line: 224, column: 11, scope: !6743)
!6756 = !DILocation(line: 224, column: 9, scope: !6743)
!6757 = !DILocation(line: 225, column: 39, scope: !6743)
!6758 = !DILocation(line: 225, column: 5, scope: !6743)
!6759 = !DILocation(line: 228, column: 11, scope: !6743)
!6760 = !DILocation(line: 228, column: 9, scope: !6743)
!6761 = !DILocation(line: 229, column: 11, scope: !6743)
!6762 = !DILocation(line: 229, column: 15, scope: !6743)
!6763 = !DILocation(line: 229, column: 9, scope: !6743)
!6764 = !DILocation(line: 230, column: 11, scope: !6743)
!6765 = !DILocation(line: 230, column: 9, scope: !6743)
!6766 = !DILocation(line: 231, column: 39, scope: !6743)
!6767 = !DILocation(line: 231, column: 5, scope: !6743)
!6768 = !DILocation(line: 233, column: 5, scope: !6743)
!6769 = !DILocation(line: 233, column: 12, scope: !6743)
!6770 = !DILocation(line: 233, column: 19, scope: !6743)
!6771 = !DILocation(line: 233, column: 16, scope: !6743)
!6772 = distinct !{!6772, !6768, !6773}
!6773 = !DILocation(line: 233, column: 52, scope: !6743)
!6774 = !DILocation(line: 235, column: 21, scope: !6743)
!6775 = !DILocation(line: 235, column: 19, scope: !6743)
!6776 = !DILocation(line: 236, column: 5, scope: !6743)
!6777 = !DILocation(line: 237, column: 17, scope: !6743)
!6778 = !DILocation(line: 237, column: 33, scope: !6743)
!6779 = !DILocation(line: 237, column: 5, scope: !6743)
!6780 = !DILocation(line: 239, column: 1, scope: !6743)
!6781 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !614, file: !614, line: 246, type: !154, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6782)
!6782 = !{!6783, !6784}
!6783 = !DILocalVariable(name: "reg", scope: !6781, file: !614, line: 248, type: !60)
!6784 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !6781, file: !614, line: 249, type: !59)
!6785 = !DILocation(line: 248, column: 5, scope: !6781)
!6786 = !DILocation(line: 248, column: 23, scope: !6781)
!6787 = !DILocation(line: 0, scope: !6781)
!6788 = !DILocation(line: 252, column: 5, scope: !6781)
!6789 = !DILocation(line: 255, column: 11, scope: !6781)
!6790 = !DILocation(line: 255, column: 9, scope: !6781)
!6791 = !DILocation(line: 256, column: 11, scope: !6781)
!6792 = !DILocation(line: 256, column: 15, scope: !6781)
!6793 = !DILocation(line: 256, column: 9, scope: !6781)
!6794 = !DILocation(line: 257, column: 11, scope: !6781)
!6795 = !DILocation(line: 257, column: 15, scope: !6781)
!6796 = !DILocation(line: 257, column: 9, scope: !6781)
!6797 = !DILocation(line: 258, column: 39, scope: !6781)
!6798 = !DILocation(line: 258, column: 5, scope: !6781)
!6799 = !DILocation(line: 260, column: 5, scope: !6781)
!6800 = !DILocation(line: 260, column: 12, scope: !6781)
!6801 = !DILocation(line: 260, column: 19, scope: !6781)
!6802 = !DILocation(line: 260, column: 16, scope: !6781)
!6803 = distinct !{!6803, !6799, !6804}
!6804 = !DILocation(line: 260, column: 52, scope: !6781)
!6805 = !DILocation(line: 263, column: 11, scope: !6781)
!6806 = !DILocation(line: 263, column: 9, scope: !6781)
!6807 = !DILocation(line: 264, column: 11, scope: !6781)
!6808 = !DILocation(line: 264, column: 15, scope: !6781)
!6809 = !DILocation(line: 264, column: 9, scope: !6781)
!6810 = !DILocation(line: 265, column: 11, scope: !6781)
!6811 = !DILocation(line: 265, column: 15, scope: !6781)
!6812 = !DILocation(line: 265, column: 9, scope: !6781)
!6813 = !DILocation(line: 266, column: 39, scope: !6781)
!6814 = !DILocation(line: 266, column: 5, scope: !6781)
!6815 = !DILocation(line: 269, column: 11, scope: !6781)
!6816 = !DILocation(line: 269, column: 9, scope: !6781)
!6817 = !DILocation(line: 270, column: 11, scope: !6781)
!6818 = !DILocation(line: 270, column: 15, scope: !6781)
!6819 = !DILocation(line: 270, column: 9, scope: !6781)
!6820 = !DILocation(line: 271, column: 11, scope: !6781)
!6821 = !DILocation(line: 271, column: 15, scope: !6781)
!6822 = !DILocation(line: 271, column: 9, scope: !6781)
!6823 = !DILocation(line: 272, column: 39, scope: !6781)
!6824 = !DILocation(line: 272, column: 5, scope: !6781)
!6825 = !DILocation(line: 273, column: 19, scope: !6781)
!6826 = !DILocation(line: 274, column: 5, scope: !6781)
!6827 = !DILocation(line: 275, column: 17, scope: !6781)
!6828 = !DILocation(line: 275, column: 33, scope: !6781)
!6829 = !DILocation(line: 275, column: 5, scope: !6781)
!6830 = !DILocation(line: 277, column: 1, scope: !6781)
!6831 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !614, file: !614, line: 284, type: !154, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6832)
!6832 = !{!6833, !6834}
!6833 = !DILocalVariable(name: "reg", scope: !6831, file: !614, line: 286, type: !60)
!6834 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !6831, file: !614, line: 287, type: !59)
!6835 = !DILocation(line: 286, column: 5, scope: !6831)
!6836 = !DILocation(line: 286, column: 23, scope: !6831)
!6837 = !DILocation(line: 0, scope: !6831)
!6838 = !DILocation(line: 290, column: 5, scope: !6831)
!6839 = !DILocation(line: 293, column: 11, scope: !6831)
!6840 = !DILocation(line: 293, column: 9, scope: !6831)
!6841 = !DILocation(line: 294, column: 11, scope: !6831)
!6842 = !DILocation(line: 294, column: 15, scope: !6831)
!6843 = !DILocation(line: 294, column: 9, scope: !6831)
!6844 = !DILocation(line: 295, column: 11, scope: !6831)
!6845 = !DILocation(line: 295, column: 15, scope: !6831)
!6846 = !DILocation(line: 295, column: 9, scope: !6831)
!6847 = !DILocation(line: 296, column: 39, scope: !6831)
!6848 = !DILocation(line: 296, column: 5, scope: !6831)
!6849 = !DILocation(line: 298, column: 5, scope: !6831)
!6850 = !DILocation(line: 298, column: 12, scope: !6831)
!6851 = !DILocation(line: 298, column: 19, scope: !6831)
!6852 = !DILocation(line: 298, column: 16, scope: !6831)
!6853 = distinct !{!6853, !6849, !6854}
!6854 = !DILocation(line: 298, column: 52, scope: !6831)
!6855 = !DILocation(line: 301, column: 11, scope: !6831)
!6856 = !DILocation(line: 301, column: 9, scope: !6831)
!6857 = !DILocation(line: 302, column: 11, scope: !6831)
!6858 = !DILocation(line: 302, column: 15, scope: !6831)
!6859 = !DILocation(line: 302, column: 9, scope: !6831)
!6860 = !DILocation(line: 303, column: 11, scope: !6831)
!6861 = !DILocation(line: 303, column: 15, scope: !6831)
!6862 = !DILocation(line: 303, column: 9, scope: !6831)
!6863 = !DILocation(line: 304, column: 39, scope: !6831)
!6864 = !DILocation(line: 304, column: 5, scope: !6831)
!6865 = !DILocation(line: 307, column: 11, scope: !6831)
!6866 = !DILocation(line: 307, column: 9, scope: !6831)
!6867 = !DILocation(line: 308, column: 11, scope: !6831)
!6868 = !DILocation(line: 308, column: 15, scope: !6831)
!6869 = !DILocation(line: 308, column: 9, scope: !6831)
!6870 = !DILocation(line: 309, column: 11, scope: !6831)
!6871 = !DILocation(line: 309, column: 15, scope: !6831)
!6872 = !DILocation(line: 309, column: 9, scope: !6831)
!6873 = !DILocation(line: 310, column: 39, scope: !6831)
!6874 = !DILocation(line: 310, column: 5, scope: !6831)
!6875 = !DILocation(line: 311, column: 19, scope: !6831)
!6876 = !DILocation(line: 312, column: 5, scope: !6831)
!6877 = !DILocation(line: 313, column: 17, scope: !6831)
!6878 = !DILocation(line: 313, column: 33, scope: !6831)
!6879 = !DILocation(line: 313, column: 5, scope: !6831)
!6880 = !DILocation(line: 315, column: 1, scope: !6831)
!6881 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !614, file: !614, line: 323, type: !154, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6882)
!6882 = !{!6883, !6884}
!6883 = !DILocalVariable(name: "reg", scope: !6881, file: !614, line: 325, type: !60)
!6884 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !6881, file: !614, line: 326, type: !59)
!6885 = !DILocation(line: 325, column: 5, scope: !6881)
!6886 = !DILocation(line: 325, column: 23, scope: !6881)
!6887 = !DILocation(line: 0, scope: !6881)
!6888 = !DILocation(line: 329, column: 5, scope: !6881)
!6889 = !DILocation(line: 332, column: 11, scope: !6881)
!6890 = !DILocation(line: 332, column: 9, scope: !6881)
!6891 = !DILocation(line: 333, column: 11, scope: !6881)
!6892 = !DILocation(line: 333, column: 15, scope: !6881)
!6893 = !DILocation(line: 333, column: 9, scope: !6881)
!6894 = !DILocation(line: 334, column: 11, scope: !6881)
!6895 = !DILocation(line: 334, column: 9, scope: !6881)
!6896 = !DILocation(line: 335, column: 39, scope: !6881)
!6897 = !DILocation(line: 335, column: 5, scope: !6881)
!6898 = !DILocation(line: 337, column: 5, scope: !6881)
!6899 = !DILocation(line: 337, column: 12, scope: !6881)
!6900 = !DILocation(line: 337, column: 19, scope: !6881)
!6901 = !DILocation(line: 337, column: 16, scope: !6881)
!6902 = distinct !{!6902, !6898, !6903}
!6903 = !DILocation(line: 337, column: 52, scope: !6881)
!6904 = !DILocation(line: 340, column: 11, scope: !6881)
!6905 = !DILocation(line: 340, column: 9, scope: !6881)
!6906 = !DILocation(line: 341, column: 11, scope: !6881)
!6907 = !DILocation(line: 341, column: 15, scope: !6881)
!6908 = !DILocation(line: 341, column: 9, scope: !6881)
!6909 = !DILocation(line: 342, column: 11, scope: !6881)
!6910 = !DILocation(line: 342, column: 15, scope: !6881)
!6911 = !DILocation(line: 342, column: 9, scope: !6881)
!6912 = !DILocation(line: 343, column: 39, scope: !6881)
!6913 = !DILocation(line: 343, column: 5, scope: !6881)
!6914 = !DILocation(line: 344, column: 19, scope: !6881)
!6915 = !DILocation(line: 345, column: 5, scope: !6881)
!6916 = !DILocation(line: 346, column: 17, scope: !6881)
!6917 = !DILocation(line: 346, column: 33, scope: !6881)
!6918 = !DILocation(line: 346, column: 5, scope: !6881)
!6919 = !DILocation(line: 348, column: 1, scope: !6881)
!6920 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !614, file: !614, line: 353, type: !154, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6921)
!6921 = !{!6922, !6923}
!6922 = !DILocalVariable(name: "reg", scope: !6920, file: !614, line: 355, type: !158)
!6923 = !DILocalVariable(name: "pTopCfgHclk", scope: !6920, file: !614, line: 356, type: !402)
!6924 = !DILocation(line: 355, column: 5, scope: !6920)
!6925 = !DILocation(line: 355, column: 21, scope: !6920)
!6926 = !DILocation(line: 0, scope: !6920)
!6927 = !DILocation(line: 358, column: 11, scope: !6920)
!6928 = !DILocation(line: 358, column: 9, scope: !6920)
!6929 = !DILocation(line: 359, column: 11, scope: !6920)
!6930 = !DILocation(line: 359, column: 15, scope: !6920)
!6931 = !DILocation(line: 359, column: 9, scope: !6920)
!6932 = !DILocation(line: 360, column: 11, scope: !6920)
!6933 = !DILocation(line: 360, column: 9, scope: !6920)
!6934 = !DILocation(line: 361, column: 37, scope: !6920)
!6935 = !DILocation(line: 361, column: 5, scope: !6920)
!6936 = !DILocation(line: 362, column: 1, scope: !6920)
!6937 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !614, file: !614, line: 368, type: !154, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !613, retainedNodes: !6938)
!6938 = !{!6939, !6940, !6941, !6943, !6945}
!6939 = !DILocalVariable(name: "reg", scope: !6937, file: !614, line: 370, type: !158)
!6940 = !DILocalVariable(name: "pTopCfgHclk", scope: !6937, file: !614, line: 371, type: !402)
!6941 = !DILocalVariable(name: "addr", scope: !6942, file: !614, line: 383, type: !616)
!6942 = distinct !DILexicalBlock(scope: !6937, file: !614, line: 383, column: 5)
!6943 = !DILocalVariable(name: "addr", scope: !6944, file: !614, line: 384, type: !616)
!6944 = distinct !DILexicalBlock(scope: !6937, file: !614, line: 384, column: 5)
!6945 = !DILocalVariable(name: "addr", scope: !6946, file: !614, line: 385, type: !616)
!6946 = distinct !DILexicalBlock(scope: !6937, file: !614, line: 385, column: 5)
!6947 = !DILocation(line: 370, column: 5, scope: !6937)
!6948 = !DILocation(line: 370, column: 21, scope: !6937)
!6949 = !DILocation(line: 0, scope: !6937)
!6950 = !DILocation(line: 374, column: 5, scope: !6937)
!6951 = !DILocation(line: 377, column: 11, scope: !6937)
!6952 = !DILocation(line: 377, column: 9, scope: !6937)
!6953 = !DILocation(line: 378, column: 11, scope: !6937)
!6954 = !DILocation(line: 378, column: 15, scope: !6937)
!6955 = !DILocation(line: 378, column: 9, scope: !6937)
!6956 = !DILocation(line: 379, column: 11, scope: !6937)
!6957 = !DILocation(line: 379, column: 15, scope: !6937)
!6958 = !DILocation(line: 379, column: 9, scope: !6937)
!6959 = !DILocation(line: 380, column: 37, scope: !6937)
!6960 = !DILocation(line: 380, column: 5, scope: !6937)
!6961 = !DILocation(line: 0, scope: !6942)
!6962 = !DILocation(line: 383, column: 5, scope: !6942)
!6963 = !DILocation(line: 0, scope: !6944)
!6964 = !DILocation(line: 384, column: 5, scope: !6944)
!6965 = !DILocation(line: 0, scope: !6946)
!6966 = !DILocation(line: 385, column: 5, scope: !6946)
!6967 = !DILocation(line: 388, column: 1, scope: !6937)
!6968 = distinct !DISubprogram(name: "getc", scope: !625, file: !625, line: 68, type: !4869, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !6969)
!6969 = !{!6970}
!6970 = !DILocalVariable(name: "rc", scope: !6968, file: !625, line: 71, type: !7)
!6971 = !DILocation(line: 71, column: 14, scope: !6968)
!6972 = !DILocation(line: 0, scope: !6968)
!6973 = !DILocation(line: 72, column: 5, scope: !6968)
!6974 = distinct !DISubprogram(name: "getc_nowait", scope: !625, file: !625, line: 80, type: !4869, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !6975)
!6975 = !{!6976}
!6976 = !DILocalVariable(name: "c", scope: !6974, file: !625, line: 82, type: !492)
!6977 = !DILocation(line: 84, column: 9, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6974, file: !625, line: 84, column: 9)
!6979 = !DILocation(line: 84, column: 40, scope: !6978)
!6980 = !DILocation(line: 84, column: 9, scope: !6974)
!6981 = !DILocation(line: 85, column: 13, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6978, file: !625, line: 84, column: 47)
!6983 = !DILocation(line: 86, column: 16, scope: !6982)
!6984 = !DILocation(line: 0, scope: !6974)
!6985 = !DILocation(line: 86, column: 9, scope: !6982)
!6986 = !DILocation(line: 0, scope: !6978)
!6987 = !DILocation(line: 90, column: 1, scope: !6974)
!6988 = distinct !DISubprogram(name: "uart_output_char", scope: !625, file: !625, line: 93, type: !6989, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !6992)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{null, !6991, !58}
!6991 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !628, line: 75, baseType: !627)
!6992 = !{!6993, !6994, !6995}
!6993 = !DILocalVariable(name: "port_no", arg: 1, scope: !6988, file: !625, line: 93, type: !6991)
!6994 = !DILocalVariable(name: "c", arg: 2, scope: !6988, file: !625, line: 93, type: !58)
!6995 = !DILocalVariable(name: "base", scope: !6988, file: !625, line: 95, type: !30)
!6996 = !DILocation(line: 0, scope: !6988)
!6997 = !DILocation(line: 95, column: 25, scope: !6988)
!6998 = !DILocation(line: 97, column: 5, scope: !6988)
!6999 = !DILocation(line: 97, column: 14, scope: !6988)
!7000 = !DILocation(line: 97, column: 42, scope: !6988)
!7001 = !DILocation(line: 97, column: 12, scope: !6988)
!7002 = distinct !{!7002, !6998, !7003}
!7003 = !DILocation(line: 98, column: 9, scope: !6988)
!7004 = !DILocation(line: 99, column: 35, scope: !6988)
!7005 = !DILocation(line: 99, column: 5, scope: !6988)
!7006 = !DILocation(line: 99, column: 33, scope: !6988)
!7007 = !DILocation(line: 102, column: 1, scope: !6988)
!7008 = distinct !DISubprogram(name: "uart_input_char", scope: !625, file: !625, line: 106, type: !7009, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7011)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{!54, !6991}
!7011 = !{!7012, !7013, !7014}
!7012 = !DILocalVariable(name: "port_no", arg: 1, scope: !7008, file: !625, line: 106, type: !6991)
!7013 = !DILocalVariable(name: "base", scope: !7008, file: !625, line: 108, type: !30)
!7014 = !DILocalVariable(name: "c", scope: !7008, file: !625, line: 109, type: !492)
!7015 = !DILocation(line: 0, scope: !7008)
!7016 = !DILocation(line: 108, column: 25, scope: !7008)
!7017 = !DILocation(line: 111, column: 5, scope: !7008)
!7018 = !DILocation(line: 111, column: 14, scope: !7008)
!7019 = !DILocation(line: 111, column: 42, scope: !7008)
!7020 = !DILocation(line: 111, column: 12, scope: !7008)
!7021 = distinct !{!7021, !7017, !7022}
!7022 = !DILocation(line: 112, column: 9, scope: !7008)
!7023 = !DILocation(line: 114, column: 9, scope: !7008)
!7024 = !DILocation(line: 116, column: 5, scope: !7008)
!7025 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !625, file: !625, line: 120, type: !7026, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7028)
!7026 = !DISubroutineType(types: !7027)
!7027 = !{!61, !6991}
!7028 = !{!7029, !7030, !7031}
!7029 = !DILocalVariable(name: "port_no", arg: 1, scope: !7025, file: !625, line: 120, type: !6991)
!7030 = !DILocalVariable(name: "base", scope: !7025, file: !625, line: 122, type: !30)
!7031 = !DILocalVariable(name: "c", scope: !7025, file: !625, line: 123, type: !492)
!7032 = !DILocation(line: 0, scope: !7025)
!7033 = !DILocation(line: 122, column: 25, scope: !7025)
!7034 = !DILocation(line: 125, column: 9, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7025, file: !625, line: 125, column: 9)
!7036 = !DILocation(line: 125, column: 37, scope: !7035)
!7037 = !DILocation(line: 125, column: 9, scope: !7025)
!7038 = !DILocation(line: 126, column: 13, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7035, file: !625, line: 125, column: 44)
!7040 = !DILocation(line: 127, column: 16, scope: !7039)
!7041 = !DILocation(line: 127, column: 9, scope: !7039)
!7042 = !DILocation(line: 0, scope: !7035)
!7043 = !DILocation(line: 131, column: 1, scope: !7025)
!7044 = distinct !DISubprogram(name: "halUART_HWInit", scope: !625, file: !625, line: 136, type: !7045, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7047)
!7045 = !DISubroutineType(types: !7046)
!7046 = !{null, !6991}
!7047 = !{!7048}
!7048 = !DILocalVariable(name: "u_port", arg: 1, scope: !7044, file: !625, line: 136, type: !6991)
!7049 = !DILocation(line: 0, scope: !7044)
!7050 = !DILocation(line: 139, column: 5, scope: !7044)
!7051 = !DILocation(line: 140, column: 9, scope: !7044)
!7052 = !DILocation(line: 153, column: 5, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !625, line: 147, column: 38)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !625, line: 147, column: 16)
!7055 = distinct !DILexicalBlock(scope: !7044, file: !625, line: 140, column: 9)
!7056 = !DILocation(line: 0, scope: !7055)
!7057 = !DILocation(line: 155, column: 1, scope: !7044)
!7058 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !625, file: !625, line: 158, type: !7059, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7061)
!7059 = !DISubroutineType(types: !7060)
!7060 = !{null, !6991, !61, !1802, !1802, !1802}
!7061 = !{!7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7077, !7078}
!7062 = !DILocalVariable(name: "u_port", arg: 1, scope: !7058, file: !625, line: 158, type: !6991)
!7063 = !DILocalVariable(name: "baudrate", arg: 2, scope: !7058, file: !625, line: 158, type: !61)
!7064 = !DILocalVariable(name: "databit", arg: 3, scope: !7058, file: !625, line: 158, type: !1802)
!7065 = !DILocalVariable(name: "parity", arg: 4, scope: !7058, file: !625, line: 158, type: !1802)
!7066 = !DILocalVariable(name: "stopbit", arg: 5, scope: !7058, file: !625, line: 158, type: !1802)
!7067 = !DILocalVariable(name: "control_word", scope: !7058, file: !625, line: 160, type: !1802)
!7068 = !DILocalVariable(name: "UART_BASE", scope: !7058, file: !625, line: 161, type: !61)
!7069 = !DILocalVariable(name: "data", scope: !7058, file: !625, line: 162, type: !61)
!7070 = !DILocalVariable(name: "uart_lcr", scope: !7058, file: !625, line: 162, type: !61)
!7071 = !DILocalVariable(name: "high_speed_div", scope: !7058, file: !625, line: 162, type: !61)
!7072 = !DILocalVariable(name: "sample_count", scope: !7058, file: !625, line: 162, type: !61)
!7073 = !DILocalVariable(name: "sample_point", scope: !7058, file: !625, line: 162, type: !61)
!7074 = !DILocalVariable(name: "fraction", scope: !7058, file: !625, line: 162, type: !61)
!7075 = !DILocalVariable(name: "fraction_L_mapping", scope: !7058, file: !625, line: 163, type: !7076)
!7076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 176, elements: !2372)
!7077 = !DILocalVariable(name: "fraction_M_mapping", scope: !7058, file: !625, line: 164, type: !7076)
!7078 = !DILocalVariable(name: "status", scope: !7058, file: !625, line: 165, type: !355)
!7079 = !DILocation(line: 0, scope: !7058)
!7080 = !DILocation(line: 163, column: 15, scope: !7058)
!7081 = !DILocation(line: 164, column: 15, scope: !7058)
!7082 = !DILocation(line: 166, column: 20, scope: !7058)
!7083 = !DILocation(line: 166, column: 18, scope: !7058)
!7084 = !DILocation(line: 168, column: 9, scope: !7058)
!7085 = !DILocation(line: 176, column: 5, scope: !7058)
!7086 = !DILocation(line: 176, column: 44, scope: !7058)
!7087 = !DILocation(line: 177, column: 16, scope: !7058)
!7088 = !DILocation(line: 178, column: 50, scope: !7058)
!7089 = !DILocation(line: 178, column: 38, scope: !7058)
!7090 = !DILocation(line: 179, column: 12, scope: !7058)
!7091 = !DILocation(line: 179, column: 25, scope: !7058)
!7092 = !DILocation(line: 180, column: 28, scope: !7058)
!7093 = !DILocation(line: 180, column: 34, scope: !7058)
!7094 = !DILocation(line: 182, column: 29, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7058, file: !625, line: 181, column: 5)
!7096 = !DILocation(line: 182, column: 46, scope: !7095)
!7097 = !DILocation(line: 183, column: 26, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7095, file: !625, line: 183, column: 13)
!7099 = !DILocation(line: 183, column: 13, scope: !7095)
!7100 = !DILocation(line: 192, column: 30, scope: !7058)
!7101 = !DILocation(line: 192, column: 35, scope: !7058)
!7102 = !DILocation(line: 192, column: 46, scope: !7058)
!7103 = !DILocation(line: 192, column: 74, scope: !7058)
!7104 = !DILocation(line: 192, column: 53, scope: !7058)
!7105 = !DILocation(line: 192, column: 80, scope: !7058)
!7106 = !DILocation(line: 193, column: 56, scope: !7058)
!7107 = !DILocation(line: 193, column: 5, scope: !7058)
!7108 = !DILocation(line: 193, column: 38, scope: !7058)
!7109 = !DILocation(line: 194, column: 57, scope: !7058)
!7110 = !DILocation(line: 194, column: 63, scope: !7058)
!7111 = !DILocation(line: 194, column: 5, scope: !7058)
!7112 = !DILocation(line: 194, column: 38, scope: !7058)
!7113 = !DILocation(line: 195, column: 5, scope: !7058)
!7114 = !DILocation(line: 195, column: 45, scope: !7058)
!7115 = !DILocation(line: 196, column: 5, scope: !7058)
!7116 = !DILocation(line: 196, column: 47, scope: !7058)
!7117 = !DILocation(line: 197, column: 46, scope: !7058)
!7118 = !DILocation(line: 197, column: 5, scope: !7058)
!7119 = !DILocation(line: 197, column: 44, scope: !7058)
!7120 = !DILocation(line: 198, column: 46, scope: !7058)
!7121 = !DILocation(line: 198, column: 5, scope: !7058)
!7122 = !DILocation(line: 198, column: 44, scope: !7058)
!7123 = !DILocation(line: 199, column: 38, scope: !7058)
!7124 = !DILocation(line: 200, column: 5, scope: !7058)
!7125 = !DILocation(line: 200, column: 38, scope: !7058)
!7126 = !DILocation(line: 202, column: 20, scope: !7058)
!7127 = !DILocation(line: 203, column: 18, scope: !7058)
!7128 = !DILocation(line: 205, column: 18, scope: !7058)
!7129 = !DILocation(line: 207, column: 18, scope: !7058)
!7130 = !DILocation(line: 208, column: 18, scope: !7058)
!7131 = !DILocation(line: 209, column: 5, scope: !7058)
!7132 = !DILocation(line: 213, column: 1, scope: !7058)
!7133 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !625, file: !625, line: 215, type: !7134, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7136)
!7134 = !DISubroutineType(types: !7135)
!7135 = !{null, !6991, !355, !4532}
!7136 = !{!7137, !7138, !7139}
!7137 = !DILocalVariable(name: "u_port", arg: 1, scope: !7133, file: !625, line: 215, type: !6991)
!7138 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7133, file: !625, line: 215, type: !355)
!7139 = !DILocalVariable(name: "length", arg: 3, scope: !7133, file: !625, line: 215, type: !4532)
!7140 = !DILocation(line: 0, scope: !7133)
!7141 = !DILocation(line: 217, column: 16, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7133, file: !625, line: 217, column: 9)
!7143 = !DILocation(line: 0, scope: !7142)
!7144 = !DILocation(line: 217, column: 9, scope: !7133)
!7145 = !DILocation(line: 218, column: 13, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7142, file: !625, line: 217, column: 31)
!7147 = !DILocation(line: 219, column: 23, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !625, line: 218, column: 20)
!7149 = distinct !DILexicalBlock(scope: !7146, file: !625, line: 218, column: 13)
!7150 = !DILocation(line: 220, column: 9, scope: !7148)
!7151 = !DILocation(line: 221, column: 23, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7149, file: !625, line: 220, column: 16)
!7153 = !DILocation(line: 221, column: 21, scope: !7152)
!7154 = !DILocation(line: 222, column: 24, scope: !7152)
!7155 = !DILocation(line: 222, column: 21, scope: !7152)
!7156 = !DILocation(line: 225, column: 13, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7142, file: !625, line: 224, column: 12)
!7158 = !DILocation(line: 226, column: 23, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !625, line: 225, column: 20)
!7160 = distinct !DILexicalBlock(scope: !7157, file: !625, line: 225, column: 13)
!7161 = !DILocation(line: 227, column: 9, scope: !7159)
!7162 = !DILocation(line: 228, column: 23, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !625, line: 227, column: 16)
!7164 = !DILocation(line: 228, column: 21, scope: !7163)
!7165 = !DILocation(line: 229, column: 24, scope: !7163)
!7166 = !DILocation(line: 229, column: 21, scope: !7163)
!7167 = !DILocation(line: 233, column: 5, scope: !7133)
!7168 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !625, file: !625, line: 236, type: !7169, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7171)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{null, !6991, !500, !61}
!7171 = !{!7172, !7173, !7174, !7175}
!7172 = !DILocalVariable(name: "u_port", arg: 1, scope: !7168, file: !625, line: 236, type: !6991)
!7173 = !DILocalVariable(name: "data", arg: 2, scope: !7168, file: !625, line: 236, type: !500)
!7174 = !DILocalVariable(name: "length", arg: 3, scope: !7168, file: !625, line: 236, type: !61)
!7175 = !DILocalVariable(name: "idx", scope: !7168, file: !625, line: 238, type: !159)
!7176 = !DILocation(line: 0, scope: !7168)
!7177 = !DILocation(line: 239, column: 23, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !625, line: 239, column: 5)
!7179 = distinct !DILexicalBlock(scope: !7168, file: !625, line: 239, column: 5)
!7180 = !DILocation(line: 239, column: 5, scope: !7179)
!7181 = !DILocation(line: 240, column: 13, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !625, line: 239, column: 40)
!7183 = !DILocation(line: 244, column: 9, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !625, line: 242, column: 42)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !625, line: 242, column: 20)
!7186 = distinct !DILexicalBlock(scope: !7182, file: !625, line: 240, column: 13)
!7187 = !DILocation(line: 0, scope: !7186)
!7188 = !DILocation(line: 239, column: 36, scope: !7178)
!7189 = distinct !{!7189, !7180, !7190}
!7190 = !DILocation(line: 246, column: 5, scope: !7179)
!7191 = !DILocation(line: 249, column: 1, scope: !7168)
!7192 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !625, file: !625, line: 251, type: !7193, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7195)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{null, !6991, !2691, !61}
!7195 = !{!7196, !7197, !7198, !7199}
!7196 = !DILocalVariable(name: "u_port", arg: 1, scope: !7192, file: !625, line: 251, type: !6991)
!7197 = !DILocalVariable(name: "data", arg: 2, scope: !7192, file: !625, line: 251, type: !2691)
!7198 = !DILocalVariable(name: "length", arg: 3, scope: !7192, file: !625, line: 251, type: !61)
!7199 = !DILocalVariable(name: "idx", scope: !7192, file: !625, line: 253, type: !159)
!7200 = !DILocation(line: 0, scope: !7192)
!7201 = !DILocation(line: 254, column: 23, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !625, line: 254, column: 5)
!7203 = distinct !DILexicalBlock(scope: !7192, file: !625, line: 254, column: 5)
!7204 = !DILocation(line: 254, column: 5, scope: !7203)
!7205 = !DILocation(line: 255, column: 13, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7202, file: !625, line: 254, column: 40)
!7207 = !DILocation(line: 256, column: 61, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !625, line: 255, column: 35)
!7209 = distinct !DILexicalBlock(scope: !7206, file: !625, line: 255, column: 13)
!7210 = !DILocation(line: 256, column: 59, scope: !7208)
!7211 = !DILocation(line: 257, column: 9, scope: !7208)
!7212 = !DILocation(line: 258, column: 61, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !625, line: 257, column: 42)
!7214 = distinct !DILexicalBlock(scope: !7209, file: !625, line: 257, column: 20)
!7215 = !DILocation(line: 258, column: 59, scope: !7213)
!7216 = !DILocation(line: 259, column: 9, scope: !7213)
!7217 = !DILocation(line: 254, column: 36, scope: !7202)
!7218 = distinct !{!7218, !7204, !7219}
!7219 = !DILocation(line: 261, column: 5, scope: !7203)
!7220 = !DILocation(line: 264, column: 1, scope: !7192)
!7221 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !625, file: !625, line: 266, type: !7222, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7224)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{null, !6991, !500, !61, !61}
!7224 = !{!7225, !7226, !7227, !7228}
!7225 = !DILocalVariable(name: "u_port", arg: 1, scope: !7221, file: !625, line: 266, type: !6991)
!7226 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !7221, file: !625, line: 266, type: !500)
!7227 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !7221, file: !625, line: 266, type: !61)
!7228 = !DILocalVariable(name: "threshold", arg: 4, scope: !7221, file: !625, line: 266, type: !61)
!7229 = !DILocation(line: 0, scope: !7221)
!7230 = !DILocation(line: 268, column: 9, scope: !7221)
!7231 = !DILocation(line: 274, column: 5, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !625, line: 271, column: 38)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !625, line: 271, column: 16)
!7234 = distinct !DILexicalBlock(scope: !7221, file: !625, line: 268, column: 9)
!7235 = !DILocation(line: 0, scope: !7234)
!7236 = !DILocation(line: 276, column: 1, scope: !7221)
!7237 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !625, file: !625, line: 278, type: !7238, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7240)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{null, !6991, !500, !61, !61, !61, !61}
!7240 = !{!7241, !7242, !7243, !7244, !7245, !7246}
!7241 = !DILocalVariable(name: "u_port", arg: 1, scope: !7237, file: !625, line: 278, type: !6991)
!7242 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !7237, file: !625, line: 278, type: !500)
!7243 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !7237, file: !625, line: 278, type: !61)
!7244 = !DILocalVariable(name: "alert_length", arg: 4, scope: !7237, file: !625, line: 278, type: !61)
!7245 = !DILocalVariable(name: "threshold", arg: 5, scope: !7237, file: !625, line: 278, type: !61)
!7246 = !DILocalVariable(name: "timeout", arg: 6, scope: !7237, file: !625, line: 278, type: !61)
!7247 = !DILocation(line: 0, scope: !7237)
!7248 = !DILocation(line: 280, column: 9, scope: !7237)
!7249 = !DILocation(line: 286, column: 5, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !625, line: 283, column: 38)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !625, line: 283, column: 16)
!7252 = distinct !DILexicalBlock(scope: !7237, file: !625, line: 280, column: 9)
!7253 = !DILocation(line: 0, scope: !7252)
!7254 = !DILocation(line: 288, column: 1, scope: !7237)
!7255 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !625, file: !625, line: 290, type: !7256, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7258)
!7256 = !DISubroutineType(types: !7257)
!7257 = !{null, !6991, !1160}
!7258 = !{!7259, !7260}
!7259 = !DILocalVariable(name: "u_port", arg: 1, scope: !7255, file: !625, line: 290, type: !6991)
!7260 = !DILocalVariable(name: "func", arg: 2, scope: !7255, file: !625, line: 290, type: !1160)
!7261 = !DILocation(line: 0, scope: !7255)
!7262 = !DILocation(line: 292, column: 9, scope: !7255)
!7263 = !DILocation(line: 296, column: 5, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !625, line: 294, column: 38)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !625, line: 294, column: 16)
!7266 = distinct !DILexicalBlock(scope: !7255, file: !625, line: 292, column: 9)
!7267 = !DILocation(line: 0, scope: !7266)
!7268 = !DILocation(line: 298, column: 1, scope: !7255)
!7269 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !625, file: !625, line: 300, type: !7256, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7270)
!7270 = !{!7271, !7272}
!7271 = !DILocalVariable(name: "u_port", arg: 1, scope: !7269, file: !625, line: 300, type: !6991)
!7272 = !DILocalVariable(name: "func", arg: 2, scope: !7269, file: !625, line: 300, type: !1160)
!7273 = !DILocation(line: 0, scope: !7269)
!7274 = !DILocation(line: 302, column: 9, scope: !7269)
!7275 = !DILocation(line: 306, column: 5, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !625, line: 304, column: 38)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !625, line: 304, column: 16)
!7278 = distinct !DILexicalBlock(scope: !7269, file: !625, line: 302, column: 9)
!7279 = !DILocation(line: 0, scope: !7278)
!7280 = !DILocation(line: 308, column: 1, scope: !7269)
!7281 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !625, file: !625, line: 310, type: !7045, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7282)
!7282 = !{!7283, !7284, !7285, !7286}
!7283 = !DILocalVariable(name: "u_port", arg: 1, scope: !7281, file: !625, line: 310, type: !6991)
!7284 = !DILocalVariable(name: "base", scope: !7281, file: !625, line: 312, type: !30)
!7285 = !DILocalVariable(name: "EFR", scope: !7281, file: !625, line: 313, type: !1802)
!7286 = !DILocalVariable(name: "LCR", scope: !7281, file: !625, line: 313, type: !1802)
!7287 = !DILocation(line: 0, scope: !7281)
!7288 = !DILocation(line: 312, column: 25, scope: !7281)
!7289 = !DILocation(line: 315, column: 11, scope: !7281)
!7290 = !DILocation(line: 317, column: 33, scope: !7281)
!7291 = !DILocation(line: 318, column: 11, scope: !7281)
!7292 = !DILocation(line: 320, column: 35, scope: !7281)
!7293 = !DILocation(line: 320, column: 33, scope: !7281)
!7294 = !DILocation(line: 322, column: 5, scope: !7281)
!7295 = !DILocation(line: 322, column: 39, scope: !7281)
!7296 = !DILocation(line: 324, column: 33, scope: !7281)
!7297 = !DILocation(line: 325, column: 5, scope: !7281)
!7298 = !DILocation(line: 325, column: 33, scope: !7281)
!7299 = !DILocation(line: 327, column: 35, scope: !7281)
!7300 = !DILocation(line: 327, column: 33, scope: !7281)
!7301 = !DILocation(line: 328, column: 1, scope: !7281)
!7302 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !625, file: !625, line: 330, type: !7303, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7305)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{null, !6991, !54, !54, !54}
!7305 = !{!7306, !7307, !7308, !7309, !7310, !7311, !7312}
!7306 = !DILocalVariable(name: "u_port", arg: 1, scope: !7302, file: !625, line: 330, type: !6991)
!7307 = !DILocalVariable(name: "xon", arg: 2, scope: !7302, file: !625, line: 330, type: !54)
!7308 = !DILocalVariable(name: "xoff", arg: 3, scope: !7302, file: !625, line: 330, type: !54)
!7309 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7302, file: !625, line: 330, type: !54)
!7310 = !DILocalVariable(name: "base", scope: !7302, file: !625, line: 332, type: !30)
!7311 = !DILocalVariable(name: "EFR", scope: !7302, file: !625, line: 333, type: !1802)
!7312 = !DILocalVariable(name: "LCR", scope: !7302, file: !625, line: 333, type: !1802)
!7313 = !DILocation(line: 0, scope: !7302)
!7314 = !DILocation(line: 332, column: 25, scope: !7302)
!7315 = !DILocation(line: 335, column: 11, scope: !7302)
!7316 = !DILocation(line: 337, column: 33, scope: !7302)
!7317 = !DILocation(line: 338, column: 36, scope: !7302)
!7318 = !DILocation(line: 338, column: 5, scope: !7302)
!7319 = !DILocation(line: 338, column: 34, scope: !7302)
!7320 = !DILocation(line: 339, column: 5, scope: !7302)
!7321 = !DILocation(line: 339, column: 34, scope: !7302)
!7322 = !DILocation(line: 340, column: 37, scope: !7302)
!7323 = !DILocation(line: 340, column: 5, scope: !7302)
!7324 = !DILocation(line: 340, column: 35, scope: !7302)
!7325 = !DILocation(line: 341, column: 5, scope: !7302)
!7326 = !DILocation(line: 341, column: 35, scope: !7302)
!7327 = !DILocation(line: 343, column: 11, scope: !7302)
!7328 = !DILocation(line: 345, column: 35, scope: !7302)
!7329 = !DILocation(line: 345, column: 33, scope: !7302)
!7330 = !DILocation(line: 347, column: 35, scope: !7302)
!7331 = !DILocation(line: 347, column: 33, scope: !7302)
!7332 = !DILocation(line: 349, column: 43, scope: !7302)
!7333 = !DILocation(line: 349, column: 5, scope: !7302)
!7334 = !DILocation(line: 349, column: 41, scope: !7302)
!7335 = !DILocation(line: 350, column: 5, scope: !7302)
!7336 = !DILocation(line: 350, column: 39, scope: !7302)
!7337 = !DILocation(line: 351, column: 1, scope: !7302)
!7338 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !625, file: !625, line: 353, type: !7045, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7339)
!7339 = !{!7340, !7341, !7342}
!7340 = !DILocalVariable(name: "u_port", arg: 1, scope: !7338, file: !625, line: 353, type: !6991)
!7341 = !DILocalVariable(name: "base", scope: !7338, file: !625, line: 355, type: !30)
!7342 = !DILocalVariable(name: "LCR", scope: !7338, file: !625, line: 356, type: !1802)
!7343 = !DILocation(line: 0, scope: !7338)
!7344 = !DILocation(line: 355, column: 25, scope: !7338)
!7345 = !DILocation(line: 358, column: 11, scope: !7338)
!7346 = !DILocation(line: 360, column: 33, scope: !7338)
!7347 = !DILocation(line: 362, column: 5, scope: !7338)
!7348 = !DILocation(line: 362, column: 33, scope: !7338)
!7349 = !DILocation(line: 364, column: 33, scope: !7338)
!7350 = !DILocation(line: 366, column: 35, scope: !7338)
!7351 = !DILocation(line: 366, column: 33, scope: !7338)
!7352 = !DILocation(line: 367, column: 1, scope: !7338)
!7353 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !625, file: !625, line: 370, type: !7045, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7354)
!7354 = !{!7355, !7356}
!7355 = !DILocalVariable(name: "u_port", arg: 1, scope: !7353, file: !625, line: 370, type: !6991)
!7356 = !DILocalVariable(name: "base", scope: !7353, file: !625, line: 372, type: !30)
!7357 = !DILocation(line: 0, scope: !7353)
!7358 = !DILocation(line: 372, column: 25, scope: !7353)
!7359 = !DILocation(line: 374, column: 5, scope: !7353)
!7360 = !DILocation(line: 374, column: 38, scope: !7353)
!7361 = !DILocation(line: 375, column: 1, scope: !7353)
!7362 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !625, file: !625, line: 377, type: !7045, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7363)
!7363 = !{!7364, !7365, !7366, !7367}
!7364 = !DILocalVariable(name: "u_port", arg: 1, scope: !7362, file: !625, line: 377, type: !6991)
!7365 = !DILocalVariable(name: "base", scope: !7362, file: !625, line: 379, type: !30)
!7366 = !DILocalVariable(name: "IER", scope: !7362, file: !625, line: 380, type: !1802)
!7367 = !DILocalVariable(name: "LCR", scope: !7362, file: !625, line: 380, type: !1802)
!7368 = !DILocation(line: 0, scope: !7362)
!7369 = !DILocation(line: 379, column: 25, scope: !7362)
!7370 = !DILocation(line: 382, column: 11, scope: !7362)
!7371 = !DILocation(line: 383, column: 33, scope: !7362)
!7372 = !DILocation(line: 385, column: 11, scope: !7362)
!7373 = !DILocation(line: 387, column: 35, scope: !7362)
!7374 = !DILocation(line: 387, column: 33, scope: !7362)
!7375 = !DILocation(line: 389, column: 35, scope: !7362)
!7376 = !DILocation(line: 389, column: 33, scope: !7362)
!7377 = !DILocation(line: 391, column: 5, scope: !7362)
!7378 = !DILocation(line: 391, column: 38, scope: !7362)
!7379 = !DILocation(line: 392, column: 1, scope: !7362)
!7380 = distinct !DISubprogram(name: "uart_mask_send_interrupt", scope: !625, file: !625, line: 394, type: !7045, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7381)
!7381 = !{!7382, !7383, !7384, !7385}
!7382 = !DILocalVariable(name: "u_port", arg: 1, scope: !7380, file: !625, line: 394, type: !6991)
!7383 = !DILocalVariable(name: "base", scope: !7380, file: !625, line: 396, type: !30)
!7384 = !DILocalVariable(name: "IER", scope: !7380, file: !625, line: 397, type: !1802)
!7385 = !DILocalVariable(name: "LCR", scope: !7380, file: !625, line: 397, type: !1802)
!7386 = !DILocation(line: 0, scope: !7380)
!7387 = !DILocation(line: 396, column: 25, scope: !7380)
!7388 = !DILocation(line: 399, column: 11, scope: !7380)
!7389 = !DILocation(line: 400, column: 33, scope: !7380)
!7390 = !DILocation(line: 402, column: 11, scope: !7380)
!7391 = !DILocation(line: 403, column: 9, scope: !7380)
!7392 = !DILocation(line: 404, column: 33, scope: !7380)
!7393 = !DILocation(line: 406, column: 35, scope: !7380)
!7394 = !DILocation(line: 406, column: 33, scope: !7380)
!7395 = !DILocation(line: 408, column: 5, scope: !7380)
!7396 = !DILocation(line: 408, column: 38, scope: !7380)
!7397 = !DILocation(line: 409, column: 1, scope: !7380)
!7398 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !625, file: !625, line: 411, type: !905, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7399)
!7399 = !{!7400, !7401, !7402, !7403}
!7400 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7398, file: !625, line: 411, type: !668)
!7401 = !DILocalVariable(name: "u_port", scope: !7398, file: !625, line: 413, type: !6991)
!7402 = !DILocalVariable(name: "base", scope: !7398, file: !625, line: 414, type: !30)
!7403 = !DILocalVariable(name: "IIR", scope: !7398, file: !625, line: 415, type: !1802)
!7404 = !DILocation(line: 0, scope: !7398)
!7405 = !DILocation(line: 417, column: 20, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7398, file: !625, line: 417, column: 9)
!7407 = !DILocation(line: 425, column: 11, scope: !7398)
!7408 = !DILocation(line: 426, column: 17, scope: !7398)
!7409 = !DILocation(line: 426, column: 5, scope: !7398)
!7410 = !DILocation(line: 428, column: 13, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7398, file: !625, line: 426, column: 25)
!7412 = !DILocation(line: 429, column: 13, scope: !7411)
!7413 = !DILocation(line: 433, column: 1, scope: !7398)
!7414 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !625, file: !625, line: 436, type: !7045, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7415)
!7415 = !{!7416, !7417}
!7416 = !DILocalVariable(name: "u_port", arg: 1, scope: !7414, file: !625, line: 436, type: !6991)
!7417 = !DILocalVariable(name: "base", scope: !7414, file: !625, line: 438, type: !30)
!7418 = !DILocation(line: 0, scope: !7414)
!7419 = !DILocation(line: 438, column: 25, scope: !7414)
!7420 = !DILocation(line: 440, column: 5, scope: !7414)
!7421 = !DILocation(line: 440, column: 33, scope: !7414)
!7422 = !DILocation(line: 441, column: 5, scope: !7414)
!7423 = !DILocation(line: 441, column: 33, scope: !7414)
!7424 = !DILocation(line: 442, column: 5, scope: !7414)
!7425 = !DILocation(line: 442, column: 34, scope: !7414)
!7426 = !DILocation(line: 443, column: 5, scope: !7414)
!7427 = !DILocation(line: 443, column: 35, scope: !7414)
!7428 = !DILocation(line: 445, column: 33, scope: !7414)
!7429 = !DILocation(line: 446, column: 5, scope: !7414)
!7430 = !DILocation(line: 446, column: 33, scope: !7414)
!7431 = !DILocation(line: 447, column: 5, scope: !7414)
!7432 = !DILocation(line: 447, column: 33, scope: !7414)
!7433 = !DILocation(line: 449, column: 33, scope: !7414)
!7434 = !DILocation(line: 450, column: 33, scope: !7414)
!7435 = !DILocation(line: 451, column: 33, scope: !7414)
!7436 = !DILocation(line: 453, column: 33, scope: !7414)
!7437 = !DILocation(line: 454, column: 33, scope: !7414)
!7438 = !DILocation(line: 455, column: 33, scope: !7414)
!7439 = !DILocation(line: 457, column: 33, scope: !7414)
!7440 = !DILocation(line: 458, column: 5, scope: !7414)
!7441 = !DILocation(line: 458, column: 33, scope: !7414)
!7442 = !DILocation(line: 459, column: 5, scope: !7414)
!7443 = !DILocation(line: 459, column: 39, scope: !7414)
!7444 = !DILocation(line: 460, column: 5, scope: !7414)
!7445 = !DILocation(line: 460, column: 40, scope: !7414)
!7446 = !DILocation(line: 461, column: 5, scope: !7414)
!7447 = !DILocation(line: 461, column: 42, scope: !7414)
!7448 = !DILocation(line: 462, column: 5, scope: !7414)
!7449 = !DILocation(line: 462, column: 42, scope: !7414)
!7450 = !DILocation(line: 463, column: 5, scope: !7414)
!7451 = !DILocation(line: 463, column: 35, scope: !7414)
!7452 = !DILocation(line: 464, column: 5, scope: !7414)
!7453 = !DILocation(line: 464, column: 41, scope: !7414)
!7454 = !DILocation(line: 465, column: 5, scope: !7414)
!7455 = !DILocation(line: 465, column: 39, scope: !7414)
!7456 = !DILocation(line: 466, column: 5, scope: !7414)
!7457 = !DILocation(line: 466, column: 38, scope: !7414)
!7458 = !DILocation(line: 467, column: 5, scope: !7414)
!7459 = !DILocation(line: 467, column: 42, scope: !7414)
!7460 = !DILocation(line: 468, column: 5, scope: !7414)
!7461 = !DILocation(line: 468, column: 45, scope: !7414)
!7462 = !DILocation(line: 469, column: 5, scope: !7414)
!7463 = !DILocation(line: 469, column: 39, scope: !7414)
!7464 = !DILocation(line: 470, column: 5, scope: !7414)
!7465 = !DILocation(line: 470, column: 39, scope: !7414)
!7466 = !DILocation(line: 471, column: 5, scope: !7414)
!7467 = !DILocation(line: 471, column: 42, scope: !7414)
!7468 = !DILocation(line: 472, column: 1, scope: !7414)
!7469 = distinct !DISubprogram(name: "uart_query_empty", scope: !625, file: !625, line: 474, type: !7045, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !624, retainedNodes: !7470)
!7470 = !{!7471, !7472}
!7471 = !DILocalVariable(name: "u_port", arg: 1, scope: !7469, file: !625, line: 474, type: !6991)
!7472 = !DILocalVariable(name: "base", scope: !7469, file: !625, line: 476, type: !30)
!7473 = !DILocation(line: 0, scope: !7469)
!7474 = !DILocation(line: 476, column: 25, scope: !7469)
!7475 = !DILocation(line: 478, column: 5, scope: !7469)
!7476 = !DILocation(line: 478, column: 14, scope: !7469)
!7477 = !DILocation(line: 478, column: 42, scope: !7469)
!7478 = !DILocation(line: 478, column: 12, scope: !7469)
!7479 = distinct !{!7479, !7475, !7480}
!7480 = !DILocation(line: 478, column: 50, scope: !7469)
!7481 = !DILocation(line: 479, column: 1, scope: !7469)
!7482 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !672, file: !672, line: 129, type: !7483, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !7485)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{null, !662, !7, !662, null}
!7485 = !{!7486, !7487, !7488, !7489}
!7486 = !DILocalVariable(name: "func", arg: 1, scope: !7482, file: !672, line: 129, type: !662)
!7487 = !DILocalVariable(name: "line", arg: 2, scope: !7482, file: !672, line: 129, type: !7)
!7488 = !DILocalVariable(name: "message", arg: 3, scope: !7482, file: !672, line: 129, type: !662)
!7489 = !DILocalVariable(name: "ap", scope: !7482, file: !672, line: 131, type: !7490)
!7490 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7491, line: 46, baseType: !7492)
!7491 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!7492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !7493, line: 32, baseType: !7494)
!7493 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!7494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !672, baseType: !7495)
!7495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7496)
!7496 = !{!7497}
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7495, file: !672, line: 131, baseType: !51, size: 32)
!7498 = !DILocation(line: 0, scope: !7482)
!7499 = !DILocation(line: 131, column: 5, scope: !7482)
!7500 = !DILocation(line: 131, column: 13, scope: !7482)
!7501 = !DILocation(line: 132, column: 5, scope: !7482)
!7502 = !DILocation(line: 133, column: 5, scope: !7482)
!7503 = !DILocation(line: 134, column: 5, scope: !7482)
!7504 = !DILocation(line: 135, column: 1, scope: !7482)
!7505 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !672, file: !672, line: 138, type: !7483, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !7506)
!7506 = !{!7507, !7508, !7509, !7510}
!7507 = !DILocalVariable(name: "func", arg: 1, scope: !7505, file: !672, line: 138, type: !662)
!7508 = !DILocalVariable(name: "line", arg: 2, scope: !7505, file: !672, line: 138, type: !7)
!7509 = !DILocalVariable(name: "message", arg: 3, scope: !7505, file: !672, line: 138, type: !662)
!7510 = !DILocalVariable(name: "ap", scope: !7505, file: !672, line: 140, type: !7490)
!7511 = !DILocation(line: 0, scope: !7505)
!7512 = !DILocation(line: 140, column: 5, scope: !7505)
!7513 = !DILocation(line: 140, column: 13, scope: !7505)
!7514 = !DILocation(line: 141, column: 5, scope: !7505)
!7515 = !DILocation(line: 142, column: 5, scope: !7505)
!7516 = !DILocation(line: 143, column: 5, scope: !7505)
!7517 = !DILocation(line: 144, column: 1, scope: !7505)
!7518 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !672, file: !672, line: 146, type: !7483, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !7519)
!7519 = !{!7520, !7521, !7522, !7523}
!7520 = !DILocalVariable(name: "func", arg: 1, scope: !7518, file: !672, line: 146, type: !662)
!7521 = !DILocalVariable(name: "line", arg: 2, scope: !7518, file: !672, line: 146, type: !7)
!7522 = !DILocalVariable(name: "message", arg: 3, scope: !7518, file: !672, line: 146, type: !662)
!7523 = !DILocalVariable(name: "ap", scope: !7518, file: !672, line: 148, type: !7490)
!7524 = !DILocation(line: 0, scope: !7518)
!7525 = !DILocation(line: 148, column: 5, scope: !7518)
!7526 = !DILocation(line: 148, column: 13, scope: !7518)
!7527 = !DILocation(line: 149, column: 5, scope: !7518)
!7528 = !DILocation(line: 150, column: 5, scope: !7518)
!7529 = !DILocation(line: 151, column: 5, scope: !7518)
!7530 = !DILocation(line: 152, column: 1, scope: !7518)
!7531 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !672, file: !672, line: 154, type: !7483, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !7532)
!7532 = !{!7533, !7534, !7535, !7536}
!7533 = !DILocalVariable(name: "func", arg: 1, scope: !7531, file: !672, line: 154, type: !662)
!7534 = !DILocalVariable(name: "line", arg: 2, scope: !7531, file: !672, line: 154, type: !7)
!7535 = !DILocalVariable(name: "message", arg: 3, scope: !7531, file: !672, line: 154, type: !662)
!7536 = !DILocalVariable(name: "ap", scope: !7531, file: !672, line: 156, type: !7490)
!7537 = !DILocation(line: 0, scope: !7531)
!7538 = !DILocation(line: 156, column: 5, scope: !7531)
!7539 = !DILocation(line: 156, column: 13, scope: !7531)
!7540 = !DILocation(line: 157, column: 5, scope: !7531)
!7541 = !DILocation(line: 158, column: 5, scope: !7531)
!7542 = !DILocation(line: 159, column: 5, scope: !7531)
!7543 = !DILocation(line: 160, column: 1, scope: !7531)
!7544 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !672, file: !672, line: 162, type: !7545, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !7547)
!7545 = !DISubroutineType(types: !7546)
!7546 = !{null, !662, !7, !662, !704, !7, null}
!7547 = !{!7548, !7549, !7550, !7551, !7552, !7553}
!7548 = !DILocalVariable(name: "func", arg: 1, scope: !7544, file: !672, line: 162, type: !662)
!7549 = !DILocalVariable(name: "line", arg: 2, scope: !7544, file: !672, line: 162, type: !7)
!7550 = !DILocalVariable(name: "message", arg: 3, scope: !7544, file: !672, line: 162, type: !662)
!7551 = !DILocalVariable(name: "data", arg: 4, scope: !7544, file: !672, line: 162, type: !704)
!7552 = !DILocalVariable(name: "length", arg: 5, scope: !7544, file: !672, line: 162, type: !7)
!7553 = !DILocalVariable(name: "ap", scope: !7544, file: !672, line: 164, type: !7490)
!7554 = !DILocation(line: 0, scope: !7544)
!7555 = !DILocation(line: 164, column: 5, scope: !7544)
!7556 = !DILocation(line: 164, column: 13, scope: !7544)
!7557 = !DILocation(line: 165, column: 5, scope: !7544)
!7558 = !DILocation(line: 166, column: 5, scope: !7544)
!7559 = !DILocation(line: 167, column: 5, scope: !7544)
!7560 = !DILocation(line: 168, column: 1, scope: !7544)
!7561 = distinct !DISubprogram(name: "hal_cache_init", scope: !709, file: !709, line: 53, type: !7562, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7565)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!7564}
!7564 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !712, line: 172, baseType: !711)
!7565 = !{!7566, !7567}
!7566 = !DILocalVariable(name: "region", scope: !7561, file: !709, line: 55, type: !2490)
!7567 = !DILocalVariable(name: "irq_flag", scope: !7561, file: !709, line: 56, type: !61)
!7568 = !DILocation(line: 59, column: 16, scope: !7561)
!7569 = !DILocation(line: 0, scope: !7561)
!7570 = !DILocation(line: 62, column: 9, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7561, file: !709, line: 62, column: 9)
!7572 = !DILocation(line: 62, column: 9, scope: !7561)
!7573 = !DILocation(line: 64, column: 9, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7571, file: !709, line: 62, column: 39)
!7575 = !DILocation(line: 66, column: 9, scope: !7574)
!7576 = !DILocation(line: 69, column: 24, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7571, file: !709, line: 67, column: 12)
!7578 = !DILocation(line: 72, column: 9, scope: !7577)
!7579 = !DILocation(line: 77, column: 5, scope: !7561)
!7580 = !DILocation(line: 80, column: 22, scope: !7561)
!7581 = !DILocation(line: 81, column: 28, scope: !7561)
!7582 = !DILocation(line: 84, column: 19, scope: !7561)
!7583 = !DILocation(line: 85, column: 23, scope: !7561)
!7584 = !DILocation(line: 88, column: 5, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7561, file: !709, line: 88, column: 5)
!7586 = !DILocation(line: 90, column: 9, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !709, line: 88, column: 81)
!7588 = distinct !DILexicalBlock(scope: !7585, file: !709, line: 88, column: 5)
!7589 = !DILocation(line: 90, column: 38, scope: !7587)
!7590 = !DILocation(line: 91, column: 9, scope: !7587)
!7591 = !DILocation(line: 91, column: 42, scope: !7587)
!7592 = !DILocation(line: 94, column: 45, scope: !7587)
!7593 = !DILocation(line: 94, column: 47, scope: !7587)
!7594 = !DILocation(line: 95, column: 49, scope: !7587)
!7595 = !DILocation(line: 95, column: 51, scope: !7587)
!7596 = !DILocation(line: 88, column: 77, scope: !7588)
!7597 = !DILocation(line: 88, column: 46, scope: !7588)
!7598 = distinct !{!7598, !7584, !7599}
!7599 = !DILocation(line: 96, column: 5, scope: !7585)
!7600 = !DILocation(line: 99, column: 1, scope: !7561)
!7601 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !709, file: !709, line: 327, type: !7562, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7602)
!7602 = !{!7603}
!7603 = !DILocalVariable(name: "irq_flag", scope: !7601, file: !709, line: 329, type: !61)
!7604 = !DILocation(line: 332, column: 16, scope: !7601)
!7605 = !DILocation(line: 0, scope: !7601)
!7606 = !DILocation(line: 335, column: 21, scope: !7601)
!7607 = !DILocation(line: 336, column: 21, scope: !7601)
!7608 = !DILocation(line: 339, column: 21, scope: !7601)
!7609 = !DILocation(line: 340, column: 21, scope: !7601)
!7610 = !DILocation(line: 434, column: 3, scope: !7611, inlinedAt: !7613)
!7611 = distinct !DISubprogram(name: "__ISB", scope: !7612, file: !7612, line: 432, type: !154, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !2550)
!7612 = !DIFile(filename: "../../../../..//driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!7613 = distinct !DILocation(line: 343, column: 5, scope: !7601)
!7614 = !{i64 296606}
!7615 = !DILocation(line: 346, column: 5, scope: !7601)
!7616 = !DILocation(line: 348, column: 5, scope: !7601)
!7617 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !709, file: !709, line: 101, type: !7562, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7618)
!7618 = !{!7619}
!7619 = !DILocalVariable(name: "region", scope: !7617, file: !709, line: 103, type: !2490)
!7620 = !DILocation(line: 107, column: 5, scope: !7617)
!7621 = !DILocation(line: 110, column: 22, scope: !7617)
!7622 = !DILocation(line: 111, column: 28, scope: !7617)
!7623 = !DILocation(line: 114, column: 19, scope: !7617)
!7624 = !DILocation(line: 115, column: 23, scope: !7617)
!7625 = !DILocation(line: 0, scope: !7617)
!7626 = !DILocation(line: 118, column: 5, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7617, file: !709, line: 118, column: 5)
!7628 = !DILocation(line: 120, column: 9, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !709, line: 118, column: 81)
!7630 = distinct !DILexicalBlock(scope: !7627, file: !709, line: 118, column: 5)
!7631 = !DILocation(line: 120, column: 38, scope: !7629)
!7632 = !DILocation(line: 121, column: 9, scope: !7629)
!7633 = !DILocation(line: 121, column: 42, scope: !7629)
!7634 = !DILocation(line: 124, column: 45, scope: !7629)
!7635 = !DILocation(line: 124, column: 47, scope: !7629)
!7636 = !DILocation(line: 125, column: 49, scope: !7629)
!7637 = !DILocation(line: 125, column: 51, scope: !7629)
!7638 = !DILocation(line: 118, column: 77, scope: !7630)
!7639 = !DILocation(line: 118, column: 46, scope: !7630)
!7640 = distinct !{!7640, !7626, !7641}
!7641 = !DILocation(line: 126, column: 5, scope: !7627)
!7642 = !DILocation(line: 129, column: 20, scope: !7617)
!7643 = !DILocation(line: 131, column: 5, scope: !7617)
!7644 = distinct !DISubprogram(name: "hal_cache_enable", scope: !709, file: !709, line: 134, type: !7562, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !2550)
!7645 = !DILocation(line: 137, column: 45, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7644, file: !709, line: 137, column: 9)
!7647 = !DILocation(line: 137, column: 28, scope: !7646)
!7648 = !DILocation(line: 137, column: 9, scope: !7644)
!7649 = !DILocation(line: 142, column: 22, scope: !7644)
!7650 = !DILocation(line: 145, column: 28, scope: !7644)
!7651 = !DILocation(line: 145, column: 19, scope: !7644)
!7652 = !DILocation(line: 147, column: 5, scope: !7644)
!7653 = !DILocation(line: 0, scope: !7644)
!7654 = !DILocation(line: 148, column: 1, scope: !7644)
!7655 = distinct !DISubprogram(name: "hal_cache_disable", scope: !709, file: !709, line: 150, type: !7562, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7656)
!7656 = !{!7657}
!7657 = !DILocalVariable(name: "irq_flag", scope: !7655, file: !709, line: 152, type: !61)
!7658 = !DILocation(line: 155, column: 16, scope: !7655)
!7659 = !DILocation(line: 0, scope: !7655)
!7660 = !DILocation(line: 158, column: 16, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7655, file: !709, line: 158, column: 9)
!7662 = !DILocation(line: 158, column: 26, scope: !7661)
!7663 = !DILocation(line: 158, column: 9, scope: !7655)
!7664 = !DILocation(line: 160, column: 9, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7661, file: !709, line: 158, column: 49)
!7666 = !DILocation(line: 161, column: 5, scope: !7665)
!7667 = !DILocation(line: 164, column: 22, scope: !7655)
!7668 = !DILocation(line: 167, column: 28, scope: !7655)
!7669 = !DILocation(line: 167, column: 19, scope: !7655)
!7670 = !DILocation(line: 170, column: 5, scope: !7655)
!7671 = !DILocation(line: 172, column: 5, scope: !7655)
!7672 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !709, file: !709, line: 175, type: !7673, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7675)
!7673 = !DISubroutineType(types: !7674)
!7674 = !{!7564, !2490}
!7675 = !{!7676}
!7676 = !DILocalVariable(name: "region", arg: 1, scope: !7672, file: !709, line: 175, type: !2490)
!7677 = !DILocation(line: 0, scope: !7672)
!7678 = !DILocation(line: 178, column: 16, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7672, file: !709, line: 178, column: 9)
!7680 = !DILocation(line: 178, column: 9, scope: !7672)
!7681 = !DILocation(line: 183, column: 9, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7672, file: !709, line: 183, column: 9)
!7683 = !DILocation(line: 183, column: 38, scope: !7682)
!7684 = !DILocation(line: 183, column: 9, scope: !7672)
!7685 = !DILocation(line: 184, column: 38, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7682, file: !709, line: 183, column: 62)
!7687 = !DILocation(line: 184, column: 32, scope: !7686)
!7688 = !DILocation(line: 190, column: 32, scope: !7672)
!7689 = !DILocation(line: 190, column: 23, scope: !7672)
!7690 = !DILocation(line: 192, column: 5, scope: !7672)
!7691 = !DILocation(line: 193, column: 1, scope: !7672)
!7692 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !709, file: !709, line: 195, type: !7673, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7693)
!7693 = !{!7694}
!7694 = !DILocalVariable(name: "region", arg: 1, scope: !7692, file: !709, line: 195, type: !2490)
!7695 = !DILocation(line: 0, scope: !7692)
!7696 = !DILocation(line: 198, column: 16, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7692, file: !709, line: 198, column: 9)
!7698 = !DILocation(line: 198, column: 9, scope: !7692)
!7699 = !DILocation(line: 203, column: 35, scope: !7692)
!7700 = !DILocation(line: 203, column: 31, scope: !7692)
!7701 = !DILocation(line: 203, column: 28, scope: !7692)
!7702 = !DILocation(line: 206, column: 32, scope: !7692)
!7703 = !DILocation(line: 206, column: 23, scope: !7692)
!7704 = !DILocation(line: 209, column: 41, scope: !7692)
!7705 = !DILocation(line: 209, column: 43, scope: !7692)
!7706 = !DILocation(line: 210, column: 45, scope: !7692)
!7707 = !DILocation(line: 210, column: 47, scope: !7692)
!7708 = !DILocation(line: 212, column: 5, scope: !7692)
!7709 = !DILocation(line: 213, column: 1, scope: !7692)
!7710 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !709, file: !709, line: 215, type: !7711, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7714)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!7564, !7713}
!7713 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !712, line: 182, baseType: !741)
!7714 = !{!7715}
!7715 = !DILocalVariable(name: "cache_size", arg: 1, scope: !7710, file: !709, line: 215, type: !7713)
!7716 = !DILocation(line: 0, scope: !7710)
!7717 = !DILocation(line: 218, column: 20, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7710, file: !709, line: 218, column: 9)
!7719 = !DILocation(line: 218, column: 9, scope: !7710)
!7720 = !DILocation(line: 223, column: 22, scope: !7710)
!7721 = !DILocation(line: 224, column: 37, scope: !7710)
!7722 = !DILocation(line: 224, column: 22, scope: !7710)
!7723 = !DILocation(line: 227, column: 20, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7710, file: !709, line: 227, column: 9)
!7725 = !DILocation(line: 227, column: 9, scope: !7710)
!7726 = !DILocation(line: 228, column: 26, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7724, file: !709, line: 227, column: 43)
!7728 = !DILocation(line: 229, column: 5, scope: !7727)
!7729 = !DILocation(line: 232, column: 28, scope: !7710)
!7730 = !DILocation(line: 232, column: 19, scope: !7710)
!7731 = !DILocation(line: 234, column: 5, scope: !7710)
!7732 = !DILocation(line: 235, column: 1, scope: !7710)
!7733 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !709, file: !709, line: 237, type: !7734, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7743)
!7734 = !DISubroutineType(types: !7735)
!7735 = !{!7564, !2490, !7736}
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 32)
!7737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7738)
!7738 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !712, line: 222, baseType: !7739)
!7739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !712, line: 219, size: 64, elements: !7740)
!7740 = !{!7741, !7742}
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !7739, file: !712, line: 220, baseType: !61, size: 32)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !7739, file: !712, line: 221, baseType: !61, size: 32, offset: 32)
!7743 = !{!7744, !7745}
!7744 = !DILocalVariable(name: "region", arg: 1, scope: !7733, file: !709, line: 237, type: !2490)
!7745 = !DILocalVariable(name: "region_config", arg: 2, scope: !7733, file: !709, line: 237, type: !7736)
!7746 = !DILocation(line: 0, scope: !7733)
!7747 = !DILocation(line: 240, column: 16, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7733, file: !709, line: 240, column: 9)
!7749 = !DILocation(line: 240, column: 9, scope: !7733)
!7750 = !DILocation(line: 245, column: 23, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7733, file: !709, line: 245, column: 9)
!7752 = !DILocation(line: 245, column: 9, scope: !7733)
!7753 = !DILocation(line: 250, column: 24, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7733, file: !709, line: 250, column: 9)
!7755 = !DILocation(line: 250, column: 45, scope: !7754)
!7756 = !DILocation(line: 250, column: 9, scope: !7733)
!7757 = !DILocation(line: 251, column: 9, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7754, file: !709, line: 250, column: 81)
!7759 = !DILocation(line: 256, column: 24, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7733, file: !709, line: 256, column: 9)
!7761 = !DILocation(line: 256, column: 42, scope: !7760)
!7762 = !DILocation(line: 256, column: 9, scope: !7733)
!7763 = !DILocation(line: 257, column: 9, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !709, line: 256, column: 78)
!7765 = !DILocation(line: 262, column: 5, scope: !7733)
!7766 = !DILocation(line: 262, column: 34, scope: !7733)
!7767 = !DILocation(line: 263, column: 55, scope: !7733)
!7768 = !DILocation(line: 263, column: 93, scope: !7733)
!7769 = !DILocation(line: 263, column: 76, scope: !7733)
!7770 = !DILocation(line: 263, column: 5, scope: !7733)
!7771 = !DILocation(line: 263, column: 38, scope: !7733)
!7772 = !DILocation(line: 266, column: 34, scope: !7733)
!7773 = !DILocation(line: 269, column: 45, scope: !7733)
!7774 = !DILocation(line: 269, column: 41, scope: !7733)
!7775 = !DILocation(line: 269, column: 43, scope: !7733)
!7776 = !DILocation(line: 270, column: 49, scope: !7733)
!7777 = !DILocation(line: 270, column: 45, scope: !7733)
!7778 = !DILocation(line: 270, column: 47, scope: !7733)
!7779 = !DILocation(line: 272, column: 5, scope: !7733)
!7780 = !DILocation(line: 273, column: 1, scope: !7733)
!7781 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !709, file: !709, line: 275, type: !7782, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7784)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{!7564, !61}
!7784 = !{!7785, !7786}
!7785 = !DILocalVariable(name: "address", arg: 1, scope: !7781, file: !709, line: 275, type: !61)
!7786 = !DILocalVariable(name: "irq_flag", scope: !7781, file: !709, line: 277, type: !61)
!7787 = !DILocation(line: 0, scope: !7781)
!7788 = !DILocation(line: 280, column: 17, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7781, file: !709, line: 280, column: 9)
!7790 = !DILocation(line: 280, column: 9, scope: !7781)
!7791 = !DILocation(line: 284, column: 16, scope: !7781)
!7792 = !DILocation(line: 287, column: 32, scope: !7781)
!7793 = !DILocation(line: 287, column: 21, scope: !7781)
!7794 = !DILocation(line: 288, column: 21, scope: !7781)
!7795 = !DILocation(line: 434, column: 3, scope: !7611, inlinedAt: !7796)
!7796 = distinct !DILocation(line: 291, column: 5, scope: !7781)
!7797 = !DILocation(line: 294, column: 5, scope: !7781)
!7798 = !DILocation(line: 296, column: 5, scope: !7781)
!7799 = !DILocation(line: 297, column: 1, scope: !7781)
!7800 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !709, file: !709, line: 299, type: !7801, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7803)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!7564, !61, !61}
!7803 = !{!7804, !7805, !7806, !7807}
!7804 = !DILocalVariable(name: "address", arg: 1, scope: !7800, file: !709, line: 299, type: !61)
!7805 = !DILocalVariable(name: "length", arg: 2, scope: !7800, file: !709, line: 299, type: !61)
!7806 = !DILocalVariable(name: "irq_flag", scope: !7800, file: !709, line: 301, type: !61)
!7807 = !DILocalVariable(name: "end_address", scope: !7800, file: !709, line: 302, type: !61)
!7808 = !DILocation(line: 0, scope: !7800)
!7809 = !DILocation(line: 302, column: 36, scope: !7800)
!7810 = !DILocation(line: 305, column: 47, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7800, file: !709, line: 305, column: 9)
!7812 = !DILocation(line: 310, column: 16, scope: !7800)
!7813 = !DILocation(line: 313, column: 20, scope: !7800)
!7814 = !DILocation(line: 313, column: 5, scope: !7800)
!7815 = !DILocation(line: 314, column: 9, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7800, file: !709, line: 313, column: 35)
!7817 = !DILocation(line: 315, column: 17, scope: !7816)
!7818 = distinct !{!7818, !7814, !7819}
!7819 = !DILocation(line: 316, column: 5, scope: !7800)
!7820 = !DILocation(line: 434, column: 3, scope: !7611, inlinedAt: !7821)
!7821 = distinct !DILocation(line: 319, column: 5, scope: !7800)
!7822 = !DILocation(line: 322, column: 5, scope: !7800)
!7823 = !DILocation(line: 324, column: 5, scope: !7800)
!7824 = !DILocation(line: 325, column: 1, scope: !7800)
!7825 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !709, file: !709, line: 351, type: !7782, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7826)
!7826 = !{!7827, !7828}
!7827 = !DILocalVariable(name: "address", arg: 1, scope: !7825, file: !709, line: 351, type: !61)
!7828 = !DILocalVariable(name: "irq_flag", scope: !7825, file: !709, line: 353, type: !61)
!7829 = !DILocation(line: 0, scope: !7825)
!7830 = !DILocation(line: 356, column: 17, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7825, file: !709, line: 356, column: 9)
!7832 = !DILocation(line: 356, column: 9, scope: !7825)
!7833 = !DILocation(line: 361, column: 16, scope: !7825)
!7834 = !DILocation(line: 364, column: 32, scope: !7825)
!7835 = !DILocation(line: 364, column: 21, scope: !7825)
!7836 = !DILocation(line: 365, column: 21, scope: !7825)
!7837 = !DILocation(line: 434, column: 3, scope: !7611, inlinedAt: !7838)
!7838 = distinct !DILocation(line: 368, column: 5, scope: !7825)
!7839 = !DILocation(line: 371, column: 5, scope: !7825)
!7840 = !DILocation(line: 373, column: 5, scope: !7825)
!7841 = !DILocation(line: 374, column: 1, scope: !7825)
!7842 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !709, file: !709, line: 376, type: !7801, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7843)
!7843 = !{!7844, !7845, !7846, !7847}
!7844 = !DILocalVariable(name: "address", arg: 1, scope: !7842, file: !709, line: 376, type: !61)
!7845 = !DILocalVariable(name: "length", arg: 2, scope: !7842, file: !709, line: 376, type: !61)
!7846 = !DILocalVariable(name: "irq_flag", scope: !7842, file: !709, line: 378, type: !61)
!7847 = !DILocalVariable(name: "end_address", scope: !7842, file: !709, line: 379, type: !61)
!7848 = !DILocation(line: 0, scope: !7842)
!7849 = !DILocation(line: 379, column: 36, scope: !7842)
!7850 = !DILocation(line: 382, column: 47, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7842, file: !709, line: 382, column: 9)
!7852 = !DILocation(line: 387, column: 16, scope: !7842)
!7853 = !DILocation(line: 390, column: 20, scope: !7842)
!7854 = !DILocation(line: 390, column: 5, scope: !7842)
!7855 = !DILocation(line: 391, column: 9, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7842, file: !709, line: 390, column: 35)
!7857 = !DILocation(line: 392, column: 17, scope: !7856)
!7858 = distinct !{!7858, !7854, !7859}
!7859 = !DILocation(line: 393, column: 5, scope: !7842)
!7860 = !DILocation(line: 434, column: 3, scope: !7611, inlinedAt: !7861)
!7861 = distinct !DILocation(line: 396, column: 5, scope: !7842)
!7862 = !DILocation(line: 399, column: 5, scope: !7842)
!7863 = !DILocation(line: 401, column: 5, scope: !7842)
!7864 = !DILocation(line: 402, column: 1, scope: !7842)
!7865 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !709, file: !709, line: 404, type: !7562, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7866)
!7866 = !{!7867}
!7867 = !DILocalVariable(name: "irq_flag", scope: !7865, file: !709, line: 406, type: !61)
!7868 = !DILocation(line: 409, column: 16, scope: !7865)
!7869 = !DILocation(line: 0, scope: !7865)
!7870 = !DILocation(line: 412, column: 21, scope: !7865)
!7871 = !DILocation(line: 413, column: 21, scope: !7865)
!7872 = !DILocation(line: 434, column: 3, scope: !7611, inlinedAt: !7873)
!7873 = distinct !DILocation(line: 416, column: 5, scope: !7865)
!7874 = !DILocation(line: 419, column: 5, scope: !7865)
!7875 = !DILocation(line: 421, column: 5, scope: !7865)
!7876 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !709, file: !709, line: 424, type: !7877, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!69, !61}
!7879 = !{!7880, !7881}
!7880 = !DILocalVariable(name: "address", arg: 1, scope: !7876, file: !709, line: 424, type: !61)
!7881 = !DILocalVariable(name: "region", scope: !7876, file: !709, line: 426, type: !2490)
!7882 = !DILocation(line: 0, scope: !7876)
!7883 = !DILocation(line: 429, column: 18, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7876, file: !709, line: 429, column: 9)
!7885 = !DILocation(line: 429, column: 28, scope: !7884)
!7886 = !DILocation(line: 429, column: 9, scope: !7876)
!7887 = !DILocation(line: 435, column: 20, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !709, line: 435, column: 13)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !709, line: 433, column: 81)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !709, line: 433, column: 5)
!7891 = distinct !DILexicalBlock(scope: !7876, file: !709, line: 433, column: 5)
!7892 = !DILocation(line: 435, column: 41, scope: !7888)
!7893 = !DILocation(line: 435, column: 36, scope: !7888)
!7894 = !DILocation(line: 435, column: 13, scope: !7889)
!7895 = !DILocation(line: 436, column: 30, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !709, line: 436, column: 17)
!7897 = distinct !DILexicalBlock(scope: !7888, file: !709, line: 435, column: 53)
!7898 = !DILocation(line: 436, column: 59, scope: !7896)
!7899 = !DILocation(line: 436, column: 26, scope: !7896)
!7900 = !DILocation(line: 436, column: 85, scope: !7896)
!7901 = !DILocation(line: 436, column: 99, scope: !7896)
!7902 = !DILocation(line: 436, column: 97, scope: !7896)
!7903 = !DILocation(line: 436, column: 17, scope: !7897)
!7904 = !DILocation(line: 433, column: 77, scope: !7890)
!7905 = !DILocation(line: 433, column: 46, scope: !7890)
!7906 = !DILocation(line: 433, column: 5, scope: !7891)
!7907 = distinct !{!7907, !7906, !7908}
!7908 = !DILocation(line: 440, column: 5, scope: !7891)
!7909 = !DILocation(line: 442, column: 1, scope: !7876)
!7910 = distinct !DISubprogram(name: "hal_nvic_init", scope: !845, file: !845, line: 60, type: !7911, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !2550)
!7911 = !DISubroutineType(types: !7912)
!7912 = !{!7913}
!7913 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !848, line: 158, baseType: !847)
!7914 = !DILocation(line: 62, column: 5, scope: !7910)
!7915 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !845, file: !845, line: 65, type: !7916, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7918)
!7916 = !DISubroutineType(types: !7917)
!7917 = !{!7913, !668}
!7918 = !{!7919, !7920}
!7919 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7915, file: !845, line: 65, type: !668)
!7920 = !DILocalVariable(name: "status", scope: !7915, file: !845, line: 67, type: !7913)
!7921 = !DILocation(line: 0, scope: !7915)
!7922 = !DILocation(line: 69, column: 40, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7915, file: !845, line: 69, column: 9)
!7924 = !DILocation(line: 73, column: 9, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7923, file: !845, line: 72, column: 12)
!7926 = !DILocation(line: 77, column: 5, scope: !7915)
!7927 = !DILocation(line: 78, column: 1, scope: !7915)
!7928 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !285, file: !285, line: 1494, type: !3843, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7929)
!7929 = !{!7930}
!7930 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7928, file: !285, line: 1494, type: !140)
!7931 = !DILocation(line: 0, scope: !7928)
!7932 = !DILocation(line: 1497, column: 91, scope: !7928)
!7933 = !DILocation(line: 1497, column: 61, scope: !7928)
!7934 = !DILocation(line: 1497, column: 40, scope: !7928)
!7935 = !DILocation(line: 1497, column: 3, scope: !7928)
!7936 = !DILocation(line: 1497, column: 46, scope: !7928)
!7937 = !DILocation(line: 1498, column: 1, scope: !7928)
!7938 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !845, file: !845, line: 80, type: !7916, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7939)
!7939 = !{!7940, !7941}
!7940 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7938, file: !845, line: 80, type: !668)
!7941 = !DILocalVariable(name: "status", scope: !7938, file: !845, line: 82, type: !7913)
!7942 = !DILocation(line: 0, scope: !7938)
!7943 = !DILocation(line: 84, column: 40, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7938, file: !845, line: 84, column: 9)
!7945 = !DILocation(line: 88, column: 9, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7944, file: !845, line: 87, column: 12)
!7947 = !DILocation(line: 92, column: 5, scope: !7938)
!7948 = !DILocation(line: 93, column: 1, scope: !7938)
!7949 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !285, file: !285, line: 1507, type: !3843, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7950)
!7950 = !{!7951}
!7951 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7949, file: !285, line: 1507, type: !140)
!7952 = !DILocation(line: 0, scope: !7949)
!7953 = !DILocation(line: 1509, column: 65, scope: !7949)
!7954 = !DILocation(line: 1509, column: 44, scope: !7949)
!7955 = !DILocation(line: 1509, column: 32, scope: !7949)
!7956 = !DILocation(line: 1509, column: 3, scope: !7949)
!7957 = !DILocation(line: 1509, column: 39, scope: !7949)
!7958 = !DILocation(line: 1510, column: 1, scope: !7949)
!7959 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !845, file: !845, line: 95, type: !7960, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7962)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{!61, !668}
!7962 = !{!7963, !7964}
!7963 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7959, file: !845, line: 95, type: !668)
!7964 = !DILocalVariable(name: "ret", scope: !7959, file: !845, line: 97, type: !61)
!7965 = !DILocation(line: 0, scope: !7959)
!7966 = !DILocation(line: 99, column: 40, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7959, file: !845, line: 99, column: 9)
!7968 = !DILocation(line: 102, column: 15, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7967, file: !845, line: 101, column: 12)
!7970 = !DILocation(line: 105, column: 5, scope: !7959)
!7971 = !DILocation(line: 106, column: 1, scope: !7959)
!7972 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !285, file: !285, line: 1523, type: !7973, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7975)
!7973 = !DISubroutineType(types: !7974)
!7974 = !{!61, !140}
!7975 = !{!7976}
!7976 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7972, file: !285, line: 1523, type: !140)
!7977 = !DILocation(line: 0, scope: !7972)
!7978 = !DILocation(line: 1525, column: 51, scope: !7972)
!7979 = !DILocation(line: 1525, column: 23, scope: !7972)
!7980 = !DILocation(line: 1525, column: 83, scope: !7972)
!7981 = !DILocation(line: 1525, column: 22, scope: !7972)
!7982 = !DILocation(line: 1525, column: 3, scope: !7972)
!7983 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !845, file: !845, line: 108, type: !7916, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7984)
!7984 = !{!7985, !7986}
!7985 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7983, file: !845, line: 108, type: !668)
!7986 = !DILocalVariable(name: "status", scope: !7983, file: !845, line: 110, type: !7913)
!7987 = !DILocation(line: 0, scope: !7983)
!7988 = !DILocation(line: 112, column: 40, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7983, file: !845, line: 112, column: 9)
!7990 = !DILocation(line: 116, column: 9, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7989, file: !845, line: 115, column: 12)
!7992 = !DILocation(line: 120, column: 5, scope: !7983)
!7993 = !DILocation(line: 121, column: 1, scope: !7983)
!7994 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !285, file: !285, line: 1535, type: !3843, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7995)
!7995 = !{!7996}
!7996 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7994, file: !285, line: 1535, type: !140)
!7997 = !DILocation(line: 0, scope: !7994)
!7998 = !DILocation(line: 1537, column: 65, scope: !7994)
!7999 = !DILocation(line: 1537, column: 44, scope: !7994)
!8000 = !DILocation(line: 1537, column: 32, scope: !7994)
!8001 = !DILocation(line: 1537, column: 3, scope: !7994)
!8002 = !DILocation(line: 1537, column: 39, scope: !7994)
!8003 = !DILocation(line: 1538, column: 1, scope: !7994)
!8004 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !845, file: !845, line: 123, type: !7916, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8005)
!8005 = !{!8006, !8007}
!8006 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8004, file: !845, line: 123, type: !668)
!8007 = !DILocalVariable(name: "status", scope: !8004, file: !845, line: 125, type: !7913)
!8008 = !DILocation(line: 0, scope: !8004)
!8009 = !DILocation(line: 127, column: 40, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8004, file: !845, line: 127, column: 9)
!8011 = !DILocation(line: 131, column: 9, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8010, file: !845, line: 130, column: 12)
!8013 = !DILocation(line: 135, column: 5, scope: !8004)
!8014 = !DILocation(line: 136, column: 1, scope: !8004)
!8015 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !285, file: !285, line: 1547, type: !3843, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8016)
!8016 = !{!8017}
!8017 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8015, file: !285, line: 1547, type: !140)
!8018 = !DILocation(line: 0, scope: !8015)
!8019 = !DILocation(line: 1549, column: 65, scope: !8015)
!8020 = !DILocation(line: 1549, column: 44, scope: !8015)
!8021 = !DILocation(line: 1549, column: 32, scope: !8015)
!8022 = !DILocation(line: 1549, column: 3, scope: !8015)
!8023 = !DILocation(line: 1549, column: 39, scope: !8015)
!8024 = !DILocation(line: 1550, column: 1, scope: !8015)
!8025 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !845, file: !845, line: 138, type: !8026, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8028)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{!7913, !668, !61}
!8028 = !{!8029, !8030, !8031}
!8029 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8025, file: !845, line: 138, type: !668)
!8030 = !DILocalVariable(name: "priority", arg: 2, scope: !8025, file: !845, line: 138, type: !61)
!8031 = !DILocalVariable(name: "status", scope: !8025, file: !845, line: 140, type: !7913)
!8032 = !DILocation(line: 0, scope: !8025)
!8033 = !DILocation(line: 142, column: 40, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8025, file: !845, line: 142, column: 9)
!8035 = !DILocation(line: 146, column: 9, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8034, file: !845, line: 145, column: 12)
!8037 = !DILocation(line: 150, column: 5, scope: !8025)
!8038 = !DILocation(line: 151, column: 1, scope: !8025)
!8039 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !285, file: !285, line: 1577, type: !3865, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8040)
!8040 = !{!8041, !8042}
!8041 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8039, file: !285, line: 1577, type: !140)
!8042 = !DILocalVariable(name: "priority", arg: 2, scope: !8039, file: !285, line: 1577, type: !61)
!8043 = !DILocation(line: 0, scope: !8039)
!8044 = !DILocation(line: 1582, column: 34, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8046, file: !285, line: 1581, column: 8)
!8046 = distinct !DILexicalBlock(scope: !8039, file: !285, line: 1579, column: 6)
!8047 = !DILocation(line: 1582, column: 5, scope: !8045)
!8048 = !DILocation(line: 1582, column: 32, scope: !8045)
!8049 = !DILocation(line: 1583, column: 1, scope: !8039)
!8050 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !845, file: !845, line: 153, type: !7960, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8051)
!8051 = !{!8052, !8053}
!8052 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8050, file: !845, line: 153, type: !668)
!8053 = !DILocalVariable(name: "ret", scope: !8050, file: !845, line: 155, type: !61)
!8054 = !DILocation(line: 0, scope: !8050)
!8055 = !DILocation(line: 157, column: 40, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8050, file: !845, line: 157, column: 9)
!8057 = !DILocation(line: 160, column: 15, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8056, file: !845, line: 159, column: 12)
!8059 = !DILocation(line: 163, column: 5, scope: !8050)
!8060 = !DILocation(line: 164, column: 1, scope: !8050)
!8061 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !285, file: !285, line: 1597, type: !7973, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8062)
!8062 = !{!8063}
!8063 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8061, file: !285, line: 1597, type: !140)
!8064 = !DILocation(line: 0, scope: !8061)
!8065 = !DILocation(line: 1603, column: 23, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !285, line: 1602, column: 8)
!8067 = distinct !DILexicalBlock(scope: !8061, file: !285, line: 1600, column: 6)
!8068 = !DILocation(line: 1603, column: 60, scope: !8066)
!8069 = !DILocation(line: 1604, column: 1, scope: !8061)
!8070 = distinct !DISubprogram(name: "isrC_main", scope: !845, file: !845, line: 178, type: !7911, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8071)
!8071 = !{!8072, !8073}
!8072 = !DILocalVariable(name: "status", scope: !8070, file: !845, line: 180, type: !7913)
!8073 = !DILocalVariable(name: "irq_number", scope: !8070, file: !845, line: 181, type: !668)
!8074 = !DILocation(line: 0, scope: !8070)
!8075 = !DILocation(line: 185, column: 5, scope: !8070)
!8076 = !DILocation(line: 188, column: 34, scope: !8070)
!8077 = !DILocation(line: 189, column: 24, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8070, file: !845, line: 189, column: 9)
!8079 = !DILocation(line: 192, column: 48, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8078, file: !845, line: 192, column: 16)
!8081 = !DILocation(line: 192, column: 62, scope: !8080)
!8082 = !DILocation(line: 192, column: 16, scope: !8078)
!8083 = !DILocation(line: 194, column: 9, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8080, file: !845, line: 192, column: 71)
!8085 = !DILocation(line: 195, column: 9, scope: !8084)
!8086 = !DILocation(line: 197, column: 55, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8080, file: !845, line: 196, column: 12)
!8088 = !DILocation(line: 197, column: 41, scope: !8087)
!8089 = !DILocation(line: 197, column: 53, scope: !8087)
!8090 = !DILocation(line: 198, column: 41, scope: !8087)
!8091 = !DILocation(line: 198, column: 9, scope: !8087)
!8092 = !DILocation(line: 202, column: 5, scope: !8070)
!8093 = !DILocation(line: 203, column: 1, scope: !8070)
!8094 = distinct !DISubprogram(name: "get_current_irq", scope: !845, file: !845, line: 166, type: !2531, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8095)
!8095 = !{!8096}
!8096 = !DILocalVariable(name: "irq_num", scope: !8094, file: !845, line: 168, type: !61)
!8097 = !DILocation(line: 168, column: 31, scope: !8094)
!8098 = !DILocation(line: 168, column: 36, scope: !8094)
!8099 = !DILocation(line: 0, scope: !8094)
!8100 = !DILocation(line: 169, column: 21, scope: !8094)
!8101 = !DILocation(line: 169, column: 5, scope: !8094)
!8102 = distinct !DISubprogram(name: "get_pending_irq", scope: !845, file: !845, line: 55, type: !2531, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !2550)
!8103 = !DILocation(line: 57, column: 19, scope: !8102)
!8104 = !DILocation(line: 57, column: 51, scope: !8102)
!8105 = !DILocation(line: 57, column: 5, scope: !8102)
!8106 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !845, file: !845, line: 205, type: !8107, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8110)
!8107 = !DISubroutineType(types: !8108)
!8108 = !{!7913, !668, !8109}
!8109 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !848, line: 175, baseType: !904)
!8110 = !{!8111, !8112, !8113}
!8111 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8106, file: !845, line: 205, type: !668)
!8112 = !DILocalVariable(name: "callback", arg: 2, scope: !8106, file: !845, line: 205, type: !8109)
!8113 = !DILocalVariable(name: "mask", scope: !8106, file: !845, line: 207, type: !61)
!8114 = !DILocation(line: 0, scope: !8106)
!8115 = !DILocation(line: 209, column: 24, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8106, file: !845, line: 209, column: 9)
!8117 = !DILocation(line: 213, column: 12, scope: !8106)
!8118 = !DILocation(line: 214, column: 5, scope: !8106)
!8119 = !DILocation(line: 215, column: 37, scope: !8106)
!8120 = !DILocation(line: 215, column: 51, scope: !8106)
!8121 = !DILocation(line: 216, column: 37, scope: !8106)
!8122 = !DILocation(line: 216, column: 49, scope: !8106)
!8123 = !DILocation(line: 217, column: 5, scope: !8106)
!8124 = !DILocation(line: 219, column: 5, scope: !8106)
!8125 = !DILocation(line: 220, column: 1, scope: !8106)
!8126 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !845, file: !845, line: 222, type: !8127, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8129)
!8127 = !DISubroutineType(types: !8128)
!8128 = !{!7913, !4532}
!8129 = !{!8130}
!8130 = !DILocalVariable(name: "mask", arg: 1, scope: !8126, file: !845, line: 222, type: !4532)
!8131 = !DILocation(line: 0, scope: !8126)
!8132 = !DILocation(line: 224, column: 13, scope: !8126)
!8133 = !DILocation(line: 224, column: 11, scope: !8126)
!8134 = !DILocation(line: 225, column: 5, scope: !8126)
!8135 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !845, file: !845, line: 228, type: !8136, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !8138)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!7913, !61}
!8138 = !{!8139}
!8139 = !DILocalVariable(name: "mask", arg: 1, scope: !8135, file: !845, line: 228, type: !61)
!8140 = !DILocation(line: 0, scope: !8135)
!8141 = !DILocation(line: 230, column: 5, scope: !8135)
!8142 = !DILocation(line: 231, column: 5, scope: !8135)
!8143 = distinct !DISubprogram(name: "hal_flash_init", scope: !2445, file: !2445, line: 42, type: !8144, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2444, retainedNodes: !8147)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!8146}
!8146 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !45, line: 119, baseType: !2447)
!8147 = !{!8148}
!8148 = !DILocalVariable(name: "ret_value", scope: !8143, file: !2445, line: 44, type: !355)
!8149 = !DILocation(line: 0, scope: !8143)
!8150 = !DILocation(line: 45, column: 17, scope: !8143)
!8151 = !DILocation(line: 46, column: 12, scope: !8143)
!8152 = !DILocation(line: 46, column: 5, scope: !8143)
!8153 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2445, file: !2445, line: 49, type: !8144, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2444, retainedNodes: !2550)
!8154 = !DILocation(line: 51, column: 5, scope: !8153)
!8155 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2445, file: !2445, line: 54, type: !8156, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2444, retainedNodes: !8159)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{!8146, !61, !8158}
!8158 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !45, line: 127, baseType: !44)
!8159 = !{!8160, !8161, !8162}
!8160 = !DILocalVariable(name: "start_address", arg: 1, scope: !8155, file: !2445, line: 54, type: !61)
!8161 = !DILocalVariable(name: "block", arg: 2, scope: !8155, file: !2445, line: 54, type: !8158)
!8162 = !DILocalVariable(name: "ret_value", scope: !8155, file: !2445, line: 56, type: !355)
!8163 = !DILocation(line: 0, scope: !8155)
!8164 = !DILocation(line: 57, column: 17, scope: !8155)
!8165 = !DILocation(line: 58, column: 12, scope: !8155)
!8166 = !DILocation(line: 58, column: 5, scope: !8155)
!8167 = distinct !DISubprogram(name: "hal_flash_read", scope: !2445, file: !2445, line: 62, type: !8168, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2444, retainedNodes: !8170)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!8146, !61, !500, !61}
!8170 = !{!8171, !8172, !8173}
!8171 = !DILocalVariable(name: "start_address", arg: 1, scope: !8167, file: !2445, line: 62, type: !61)
!8172 = !DILocalVariable(name: "buffer", arg: 2, scope: !8167, file: !2445, line: 62, type: !500)
!8173 = !DILocalVariable(name: "length", arg: 3, scope: !8167, file: !2445, line: 62, type: !61)
!8174 = !DILocation(line: 0, scope: !8167)
!8175 = !DILocation(line: 64, column: 50, scope: !8167)
!8176 = !DILocation(line: 64, column: 27, scope: !8167)
!8177 = !DILocation(line: 64, column: 5, scope: !8167)
!8178 = !DILocation(line: 65, column: 5, scope: !8167)
!8179 = distinct !DISubprogram(name: "hal_flash_write", scope: !2445, file: !2445, line: 68, type: !8180, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2444, retainedNodes: !8182)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!8146, !61, !2691, !61}
!8182 = !{!8183, !8184, !8185, !8186}
!8183 = !DILocalVariable(name: "address", arg: 1, scope: !8179, file: !2445, line: 68, type: !61)
!8184 = !DILocalVariable(name: "data", arg: 2, scope: !8179, file: !2445, line: 68, type: !2691)
!8185 = !DILocalVariable(name: "length", arg: 3, scope: !8179, file: !2445, line: 68, type: !61)
!8186 = !DILocalVariable(name: "ret_value", scope: !8179, file: !2445, line: 70, type: !355)
!8187 = !DILocation(line: 0, scope: !8179)
!8188 = !DILocation(line: 70, column: 25, scope: !8179)
!8189 = !DILocation(line: 71, column: 12, scope: !8179)
!8190 = !DILocation(line: 71, column: 5, scope: !8179)
!8191 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !2459, file: !2459, line: 50, type: !8192, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8195)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!8194, !1038, !54}
!8194 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !568, line: 238, baseType: !2461)
!8195 = !{!8196, !8197, !8198}
!8196 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8191, file: !2459, line: 50, type: !1038)
!8197 = !DILocalVariable(name: "function_index", arg: 2, scope: !8191, file: !2459, line: 50, type: !54)
!8198 = !DILocalVariable(name: "ret_value", scope: !8191, file: !2459, line: 52, type: !355)
!8199 = !DILocation(line: 0, scope: !8191)
!8200 = !DILocation(line: 53, column: 18, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8191, file: !2459, line: 53, column: 9)
!8202 = !DILocation(line: 53, column: 9, scope: !8191)
!8203 = !DILocation(line: 57, column: 24, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8191, file: !2459, line: 57, column: 9)
!8205 = !DILocation(line: 57, column: 9, scope: !8191)
!8206 = !DILocation(line: 57, column: 9, scope: !8204)
!8207 = !DILocation(line: 60, column: 17, scope: !8191)
!8208 = !DILocation(line: 61, column: 12, scope: !8191)
!8209 = !DILocation(line: 61, column: 5, scope: !8191)
!8210 = !DILocation(line: 62, column: 1, scope: !8191)
!8211 = distinct !DISubprogram(name: "hal_gpio_init", scope: !2459, file: !2459, line: 64, type: !8212, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8215)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!8214, !1038}
!8214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !568, line: 229, baseType: !2467)
!8215 = !{!8216}
!8216 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8211, file: !2459, line: 64, type: !1038)
!8217 = !DILocation(line: 0, scope: !8211)
!8218 = !DILocation(line: 66, column: 5, scope: !8211)
!8219 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !2459, file: !2459, line: 69, type: !8212, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8220)
!8220 = !{!8221}
!8221 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8219, file: !2459, line: 69, type: !1038)
!8222 = !DILocation(line: 0, scope: !8219)
!8223 = !DILocation(line: 71, column: 5, scope: !8219)
!8224 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !2459, file: !2459, line: 74, type: !8225, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8228)
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!8214, !1038, !8227}
!8227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!8228 = !{!8229, !8230, !8231}
!8229 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8224, file: !2459, line: 74, type: !1038)
!8230 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !8224, file: !2459, line: 74, type: !8227)
!8231 = !DILocalVariable(name: "status", scope: !8224, file: !2459, line: 76, type: !8232)
!8232 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_status", file: !413, line: 67, baseType: !8233)
!8233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !413, line: 62, size: 64, elements: !8234)
!8234 = !{!8235, !8236, !8237, !8238}
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PIN", scope: !8233, file: !413, line: 63, baseType: !61, size: 32)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OUTEN", scope: !8233, file: !413, line: 64, baseType: !54, size: 8, offset: 32)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "GPI_DIN", scope: !8233, file: !413, line: 65, baseType: !54, size: 8, offset: 40)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "GPO_DOUT", scope: !8233, file: !413, line: 66, baseType: !54, size: 8, offset: 48)
!8239 = !DILocation(line: 0, scope: !8224)
!8240 = !DILocation(line: 77, column: 14, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8224, file: !2459, line: 77, column: 9)
!8242 = !DILocation(line: 77, column: 9, scope: !8224)
!8243 = !DILocation(line: 81, column: 18, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8224, file: !2459, line: 81, column: 9)
!8245 = !DILocation(line: 81, column: 9, scope: !8224)
!8246 = !DILocation(line: 85, column: 14, scope: !8224)
!8247 = !DILocation(line: 86, column: 18, scope: !8224)
!8248 = !DILocation(line: 86, column: 16, scope: !8224)
!8249 = !DILocation(line: 87, column: 5, scope: !8224)
!8250 = !DILocation(line: 88, column: 1, scope: !8224)
!8251 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !2459, file: !2459, line: 90, type: !8252, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8254)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{!8214, !1038, !2480}
!8254 = !{!8255, !8256, !8257}
!8255 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8251, file: !2459, line: 90, type: !1038)
!8256 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !8251, file: !2459, line: 90, type: !2480)
!8257 = !DILocalVariable(name: "ret_value", scope: !8251, file: !2459, line: 92, type: !355)
!8258 = !DILocation(line: 0, scope: !8251)
!8259 = !DILocation(line: 93, column: 18, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8251, file: !2459, line: 93, column: 9)
!8261 = !DILocation(line: 93, column: 9, scope: !8251)
!8262 = !DILocation(line: 97, column: 60, scope: !8251)
!8263 = !DILocation(line: 97, column: 17, scope: !8251)
!8264 = !DILocation(line: 98, column: 12, scope: !8251)
!8265 = !DILocation(line: 98, column: 5, scope: !8251)
!8266 = !DILocation(line: 99, column: 1, scope: !8251)
!8267 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !2459, file: !2459, line: 101, type: !8225, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8268)
!8268 = !{!8269, !8270, !8271}
!8269 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8267, file: !2459, line: 101, type: !1038)
!8270 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !8267, file: !2459, line: 101, type: !8227)
!8271 = !DILocalVariable(name: "status", scope: !8267, file: !2459, line: 103, type: !8232)
!8272 = !DILocation(line: 0, scope: !8267)
!8273 = !DILocation(line: 104, column: 18, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8267, file: !2459, line: 104, column: 9)
!8275 = !DILocation(line: 104, column: 9, scope: !8267)
!8276 = !DILocation(line: 108, column: 14, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8267, file: !2459, line: 108, column: 9)
!8278 = !DILocation(line: 108, column: 9, scope: !8267)
!8279 = !DILocation(line: 112, column: 14, scope: !8267)
!8280 = !DILocation(line: 113, column: 18, scope: !8267)
!8281 = !DILocation(line: 113, column: 16, scope: !8267)
!8282 = !DILocation(line: 114, column: 5, scope: !8267)
!8283 = !DILocation(line: 115, column: 1, scope: !8267)
!8284 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !2459, file: !2459, line: 117, type: !8285, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8288)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{!8214, !1038, !8287}
!8287 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !568, line: 213, baseType: !572)
!8288 = !{!8289, !8290, !8291}
!8289 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8284, file: !2459, line: 117, type: !1038)
!8290 = !DILocalVariable(name: "direction", arg: 2, scope: !8284, file: !2459, line: 117, type: !8287)
!8291 = !DILocalVariable(name: "ret_value", scope: !8284, file: !2459, line: 119, type: !355)
!8292 = !DILocation(line: 0, scope: !8284)
!8293 = !DILocation(line: 120, column: 18, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8284, file: !2459, line: 120, column: 9)
!8295 = !DILocation(line: 120, column: 9, scope: !8284)
!8296 = !DILocation(line: 123, column: 17, scope: !8284)
!8297 = !DILocation(line: 125, column: 12, scope: !8284)
!8298 = !DILocation(line: 125, column: 5, scope: !8284)
!8299 = !DILocation(line: 126, column: 1, scope: !8284)
!8300 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !2459, file: !2459, line: 128, type: !8301, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8304)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{!8214, !1038, !8303}
!8303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8287, size: 32)
!8304 = !{!8305, !8306, !8307}
!8305 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8300, file: !2459, line: 128, type: !1038)
!8306 = !DILocalVariable(name: "direction", arg: 2, scope: !8300, file: !2459, line: 128, type: !8303)
!8307 = !DILocalVariable(name: "status", scope: !8300, file: !2459, line: 131, type: !8232)
!8308 = !DILocation(line: 0, scope: !8300)
!8309 = !DILocation(line: 132, column: 18, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8300, file: !2459, line: 132, column: 9)
!8311 = !DILocation(line: 132, column: 9, scope: !8300)
!8312 = !DILocation(line: 136, column: 14, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8300, file: !2459, line: 136, column: 9)
!8314 = !DILocation(line: 136, column: 9, scope: !8300)
!8315 = !DILocation(line: 140, column: 14, scope: !8300)
!8316 = !DILocation(line: 141, column: 18, scope: !8300)
!8317 = !DILocation(line: 141, column: 16, scope: !8300)
!8318 = !DILocation(line: 142, column: 5, scope: !8300)
!8319 = !DILocation(line: 143, column: 1, scope: !8300)
!8320 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !2459, file: !2459, line: 146, type: !8212, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8321)
!8321 = !{!8322, !8323}
!8322 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8320, file: !2459, line: 146, type: !1038)
!8323 = !DILocalVariable(name: "status", scope: !8320, file: !2459, line: 148, type: !8232)
!8324 = !DILocation(line: 0, scope: !8320)
!8325 = !DILocation(line: 149, column: 18, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8320, file: !2459, line: 149, column: 9)
!8327 = !DILocation(line: 149, column: 9, scope: !8320)
!8328 = !DILocation(line: 153, column: 14, scope: !8320)
!8329 = !DILocation(line: 154, column: 76, scope: !8320)
!8330 = !DILocation(line: 154, column: 12, scope: !8320)
!8331 = !DILocation(line: 154, column: 5, scope: !8320)
!8332 = !DILocation(line: 155, column: 1, scope: !8320)
!8333 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !2459, file: !2459, line: 157, type: !8212, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8334)
!8334 = !{!8335, !8336}
!8335 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8333, file: !2459, line: 157, type: !1038)
!8336 = !DILocalVariable(name: "ret_value", scope: !8333, file: !2459, line: 159, type: !355)
!8337 = !DILocation(line: 0, scope: !8333)
!8338 = !DILocation(line: 160, column: 18, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8333, file: !2459, line: 160, column: 9)
!8340 = !DILocation(line: 160, column: 9, scope: !8333)
!8341 = !DILocation(line: 164, column: 17, scope: !8333)
!8342 = !DILocation(line: 165, column: 19, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8333, file: !2459, line: 165, column: 9)
!8344 = !DILocation(line: 165, column: 9, scope: !8333)
!8345 = !DILocation(line: 168, column: 17, scope: !8333)
!8346 = !DILocation(line: 169, column: 12, scope: !8333)
!8347 = !DILocation(line: 169, column: 5, scope: !8333)
!8348 = !DILocation(line: 170, column: 1, scope: !8333)
!8349 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !2459, file: !2459, line: 172, type: !8212, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8350)
!8350 = !{!8351, !8352}
!8351 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8349, file: !2459, line: 172, type: !1038)
!8352 = !DILocalVariable(name: "ret_value", scope: !8349, file: !2459, line: 174, type: !355)
!8353 = !DILocation(line: 0, scope: !8349)
!8354 = !DILocation(line: 175, column: 18, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8349, file: !2459, line: 175, column: 9)
!8356 = !DILocation(line: 175, column: 9, scope: !8349)
!8357 = !DILocation(line: 179, column: 17, scope: !8349)
!8358 = !DILocation(line: 180, column: 19, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8349, file: !2459, line: 180, column: 9)
!8360 = !DILocation(line: 180, column: 9, scope: !8349)
!8361 = !DILocation(line: 183, column: 17, scope: !8349)
!8362 = !DILocation(line: 184, column: 12, scope: !8349)
!8363 = !DILocation(line: 184, column: 5, scope: !8349)
!8364 = !DILocation(line: 185, column: 1, scope: !8349)
!8365 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !2459, file: !2459, line: 187, type: !8212, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8366)
!8366 = !{!8367, !8368}
!8367 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8365, file: !2459, line: 187, type: !1038)
!8368 = !DILocalVariable(name: "ret_value", scope: !8365, file: !2459, line: 189, type: !355)
!8369 = !DILocation(line: 0, scope: !8365)
!8370 = !DILocation(line: 191, column: 18, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8365, file: !2459, line: 191, column: 9)
!8372 = !DILocation(line: 191, column: 9, scope: !8365)
!8373 = !DILocation(line: 195, column: 17, scope: !8365)
!8374 = !DILocation(line: 196, column: 12, scope: !8365)
!8375 = !DILocation(line: 196, column: 5, scope: !8365)
!8376 = !DILocation(line: 197, column: 1, scope: !8365)
!8377 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !2459, file: !2459, line: 200, type: !8378, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8380)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!8214, !1038, !2481}
!8380 = !{!8381, !8382, !8383}
!8381 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8377, file: !2459, line: 200, type: !1038)
!8382 = !DILocalVariable(name: "driving", arg: 2, scope: !8377, file: !2459, line: 200, type: !2481)
!8383 = !DILocalVariable(name: "ret_value", scope: !8377, file: !2459, line: 202, type: !355)
!8384 = !DILocation(line: 0, scope: !8377)
!8385 = !DILocation(line: 204, column: 18, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8377, file: !2459, line: 204, column: 9)
!8387 = !DILocation(line: 204, column: 9, scope: !8377)
!8388 = !DILocation(line: 208, column: 64, scope: !8377)
!8389 = !DILocation(line: 208, column: 17, scope: !8377)
!8390 = !DILocation(line: 210, column: 12, scope: !8377)
!8391 = !DILocation(line: 210, column: 5, scope: !8377)
!8392 = !DILocation(line: 211, column: 1, scope: !8377)
!8393 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !2459, file: !2459, line: 214, type: !8394, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !8397)
!8394 = !DISubroutineType(types: !8395)
!8395 = !{!8214, !1038, !8396}
!8396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!8397 = !{!8398, !8399, !8400, !8401}
!8398 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !8393, file: !2459, line: 214, type: !1038)
!8399 = !DILocalVariable(name: "driving", arg: 2, scope: !8393, file: !2459, line: 214, type: !8396)
!8400 = !DILocalVariable(name: "ret_value", scope: !8393, file: !2459, line: 216, type: !355)
!8401 = !DILocalVariable(name: "value", scope: !8393, file: !2459, line: 217, type: !54)
!8402 = !DILocation(line: 0, scope: !8393)
!8403 = !DILocation(line: 217, column: 5, scope: !8393)
!8404 = !DILocation(line: 219, column: 18, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8393, file: !2459, line: 219, column: 9)
!8406 = !DILocation(line: 219, column: 9, scope: !8393)
!8407 = !DILocation(line: 223, column: 17, scope: !8393)
!8408 = !DILocation(line: 225, column: 44, scope: !8393)
!8409 = !DILocation(line: 225, column: 16, scope: !8393)
!8410 = !DILocation(line: 225, column: 14, scope: !8393)
!8411 = !DILocation(line: 227, column: 12, scope: !8393)
!8412 = !DILocation(line: 227, column: 5, scope: !8393)
!8413 = !DILocation(line: 228, column: 1, scope: !8393)
!8414 = distinct !DISubprogram(name: "hal_gpt_init", scope: !913, file: !913, line: 82, type: !8415, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8418)
!8415 = !DISubroutineType(types: !8416)
!8416 = !{!2536, !8417}
!8417 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !29, line: 663, baseType: !915)
!8418 = !{!8419}
!8419 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8414, file: !913, line: 82, type: !8417)
!8420 = !DILocation(line: 0, scope: !8414)
!8421 = !DILocation(line: 84, column: 9, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8414, file: !913, line: 84, column: 9)
!8423 = !DILocation(line: 84, column: 33, scope: !8422)
!8424 = !DILocation(line: 84, column: 9, scope: !8414)
!8425 = !DILocation(line: 88, column: 9, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8414, file: !913, line: 88, column: 9)
!8427 = !DILocation(line: 88, column: 9, scope: !8414)
!8428 = !DILocation(line: 89, column: 9, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8426, file: !913, line: 88, column: 50)
!8430 = !DILocation(line: 90, column: 9, scope: !8429)
!8431 = !DILocation(line: 92, column: 12, scope: !8414)
!8432 = !DILocation(line: 92, column: 5, scope: !8414)
!8433 = !DILocation(line: 96, column: 43, scope: !8414)
!8434 = !DILocation(line: 98, column: 5, scope: !8414)
!8435 = !DILocation(line: 99, column: 1, scope: !8414)
!8436 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !913, file: !913, line: 63, type: !8437, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8439)
!8437 = !DISubroutineType(types: !8438)
!8438 = !{!69, !8417}
!8439 = !{!8440}
!8440 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8436, file: !913, line: 63, type: !8417)
!8441 = !DILocation(line: 0, scope: !8436)
!8442 = !DILocation(line: 65, column: 19, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8436, file: !913, line: 65, column: 9)
!8444 = !DILocation(line: 65, column: 34, scope: !8443)
!8445 = !DILocation(line: 70, column: 1, scope: !8436)
!8446 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !913, file: !913, line: 101, type: !8415, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8447)
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8446, file: !913, line: 101, type: !8417)
!8449 = !DILocation(line: 0, scope: !8446)
!8450 = !DILocation(line: 103, column: 9, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8446, file: !913, line: 103, column: 9)
!8452 = !DILocation(line: 103, column: 9, scope: !8446)
!8453 = !DILocation(line: 104, column: 9, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8451, file: !913, line: 103, column: 50)
!8455 = !DILocation(line: 105, column: 9, scope: !8454)
!8456 = !DILocation(line: 108, column: 9, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8446, file: !913, line: 108, column: 9)
!8458 = !DILocation(line: 108, column: 33, scope: !8457)
!8459 = !DILocation(line: 108, column: 48, scope: !8457)
!8460 = !DILocation(line: 108, column: 9, scope: !8446)
!8461 = !DILocation(line: 109, column: 9, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8457, file: !913, line: 108, column: 68)
!8463 = !DILocation(line: 110, column: 9, scope: !8462)
!8464 = !DILocation(line: 113, column: 12, scope: !8446)
!8465 = !DILocation(line: 113, column: 5, scope: !8446)
!8466 = !DILocation(line: 116, column: 29, scope: !8446)
!8467 = !DILocation(line: 116, column: 43, scope: !8446)
!8468 = !DILocation(line: 117, column: 5, scope: !8446)
!8469 = !DILocation(line: 118, column: 1, scope: !8446)
!8470 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !913, file: !913, line: 120, type: !8471, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8474)
!8471 = !DISubroutineType(types: !8472)
!8472 = !{!2536, !8473, !4532}
!8473 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !29, line: 674, baseType: !28)
!8474 = !{!8475, !8476}
!8475 = !DILocalVariable(name: "clock_source", arg: 1, scope: !8470, file: !913, line: 120, type: !8473)
!8476 = !DILocalVariable(name: "count", arg: 2, scope: !8470, file: !913, line: 120, type: !4532)
!8477 = !DILocation(line: 0, scope: !8470)
!8478 = !DILocation(line: 122, column: 9, scope: !8470)
!8479 = !DILocation(line: 123, column: 50, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !913, line: 123, column: 13)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !913, line: 122, column: 51)
!8482 = distinct !DILexicalBlock(scope: !8470, file: !913, line: 122, column: 9)
!8483 = !DILocation(line: 123, column: 65, scope: !8480)
!8484 = !DILocation(line: 123, column: 13, scope: !8481)
!8485 = !DILocation(line: 124, column: 13, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8480, file: !913, line: 123, column: 86)
!8487 = !DILocation(line: 125, column: 9, scope: !8486)
!8488 = !DILocation(line: 126, column: 18, scope: !8481)
!8489 = !DILocation(line: 126, column: 16, scope: !8481)
!8490 = !DILocation(line: 127, column: 49, scope: !8481)
!8491 = !DILocation(line: 128, column: 5, scope: !8481)
!8492 = !DILocation(line: 129, column: 50, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !913, line: 129, column: 13)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !913, line: 128, column: 57)
!8495 = distinct !DILexicalBlock(scope: !8482, file: !913, line: 128, column: 16)
!8496 = !DILocation(line: 129, column: 65, scope: !8493)
!8497 = !DILocation(line: 129, column: 13, scope: !8494)
!8498 = !DILocation(line: 130, column: 13, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8493, file: !913, line: 129, column: 86)
!8500 = !DILocation(line: 131, column: 9, scope: !8499)
!8501 = !DILocation(line: 132, column: 18, scope: !8494)
!8502 = !DILocation(line: 132, column: 46, scope: !8494)
!8503 = !DILocation(line: 132, column: 65, scope: !8494)
!8504 = !DILocation(line: 132, column: 43, scope: !8494)
!8505 = !DILocation(line: 132, column: 16, scope: !8494)
!8506 = !DILocation(line: 133, column: 49, scope: !8494)
!8507 = !DILocation(line: 134, column: 5, scope: !8494)
!8508 = !DILocation(line: 135, column: 50, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !913, line: 135, column: 13)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !913, line: 134, column: 58)
!8511 = distinct !DILexicalBlock(scope: !8495, file: !913, line: 134, column: 16)
!8512 = !DILocation(line: 135, column: 65, scope: !8509)
!8513 = !DILocation(line: 135, column: 13, scope: !8510)
!8514 = !DILocation(line: 136, column: 13, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8509, file: !913, line: 135, column: 86)
!8516 = !DILocation(line: 137, column: 9, scope: !8515)
!8517 = !DILocation(line: 138, column: 18, scope: !8510)
!8518 = !DILocation(line: 138, column: 16, scope: !8510)
!8519 = !DILocation(line: 139, column: 49, scope: !8510)
!8520 = !DILocation(line: 141, column: 9, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8511, file: !913, line: 140, column: 11)
!8522 = !DILocation(line: 142, column: 9, scope: !8521)
!8523 = !DILocation(line: 146, column: 1, scope: !8470)
!8524 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !913, file: !913, line: 148, type: !8525, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8527)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{!2536, !61, !61, !4532}
!8527 = !{!8528, !8529, !8530}
!8528 = !DILocalVariable(name: "start_count", arg: 1, scope: !8524, file: !913, line: 148, type: !61)
!8529 = !DILocalVariable(name: "end_count", arg: 2, scope: !8524, file: !913, line: 148, type: !61)
!8530 = !DILocalVariable(name: "duration_count", arg: 3, scope: !8524, file: !913, line: 148, type: !4532)
!8531 = !DILocation(line: 0, scope: !8524)
!8532 = !DILocation(line: 150, column: 24, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8524, file: !913, line: 150, column: 9)
!8534 = !DILocation(line: 150, column: 9, scope: !8524)
!8535 = !DILocation(line: 0, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8524, file: !913, line: 154, column: 9)
!8537 = !DILocation(line: 160, column: 5, scope: !8524)
!8538 = !DILocation(line: 161, column: 1, scope: !8524)
!8539 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !913, file: !913, line: 163, type: !8540, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8543)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{!2536, !8417, !8542}
!8542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!8543 = !{!8544, !8545}
!8544 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8539, file: !913, line: 163, type: !8417)
!8545 = !DILocalVariable(name: "running_status", arg: 2, scope: !8539, file: !913, line: 164, type: !8542)
!8546 = !DILocation(line: 0, scope: !8539)
!8547 = !DILocation(line: 166, column: 18, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8539, file: !913, line: 166, column: 9)
!8549 = !DILocation(line: 166, column: 9, scope: !8539)
!8550 = !DILocation(line: 167, column: 9, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8548, file: !913, line: 166, column: 34)
!8552 = !DILocation(line: 168, column: 9, scope: !8551)
!8553 = !DILocation(line: 170, column: 47, scope: !8539)
!8554 = !DILocation(line: 170, column: 21, scope: !8539)
!8555 = !DILocation(line: 171, column: 5, scope: !8539)
!8556 = !DILocation(line: 172, column: 1, scope: !8539)
!8557 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !913, file: !913, line: 174, type: !8558, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!2536, !8417, !943, !51}
!8560 = !{!8561, !8562, !8563}
!8561 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8557, file: !913, line: 174, type: !8417)
!8562 = !DILocalVariable(name: "callback", arg: 2, scope: !8557, file: !913, line: 175, type: !943)
!8563 = !DILocalVariable(name: "user_data", arg: 3, scope: !8557, file: !913, line: 176, type: !51)
!8564 = !DILocation(line: 0, scope: !8557)
!8565 = !DILocation(line: 178, column: 9, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8557, file: !913, line: 178, column: 9)
!8567 = !DILocation(line: 178, column: 9, scope: !8557)
!8568 = !DILocation(line: 179, column: 9, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8566, file: !913, line: 178, column: 50)
!8570 = !DILocation(line: 180, column: 9, scope: !8569)
!8571 = !DILocation(line: 182, column: 33, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8557, file: !913, line: 182, column: 9)
!8573 = !DILocation(line: 182, column: 47, scope: !8572)
!8574 = !DILocation(line: 182, column: 9, scope: !8557)
!8575 = !DILocation(line: 185, column: 18, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8557, file: !913, line: 185, column: 9)
!8577 = !DILocation(line: 185, column: 9, scope: !8557)
!8578 = !DILocation(line: 188, column: 46, scope: !8557)
!8579 = !DILocation(line: 188, column: 56, scope: !8557)
!8580 = !DILocation(line: 189, column: 46, scope: !8557)
!8581 = !DILocation(line: 189, column: 56, scope: !8557)
!8582 = !DILocation(line: 190, column: 5, scope: !8557)
!8583 = !DILocation(line: 191, column: 1, scope: !8557)
!8584 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !913, file: !913, line: 218, type: !8585, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8588)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!2536, !8417, !61, !8587}
!8587 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !21, line: 383, baseType: !926)
!8588 = !{!8589, !8590, !8591}
!8589 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8584, file: !913, line: 218, type: !8417)
!8590 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !8584, file: !913, line: 218, type: !61)
!8591 = !DILocalVariable(name: "timer_type", arg: 3, scope: !8584, file: !913, line: 218, type: !8587)
!8592 = !DILocation(line: 0, scope: !8584)
!8593 = !DILocation(line: 220, column: 9, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8584, file: !913, line: 220, column: 9)
!8595 = !DILocation(line: 220, column: 9, scope: !8584)
!8596 = !DILocation(line: 221, column: 9, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8594, file: !913, line: 220, column: 50)
!8598 = !DILocation(line: 222, column: 9, scope: !8597)
!8599 = !DILocation(line: 225, column: 33, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8584, file: !913, line: 225, column: 9)
!8601 = !DILocation(line: 225, column: 47, scope: !8600)
!8602 = !DILocation(line: 225, column: 9, scope: !8584)
!8603 = !DILocation(line: 229, column: 25, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8584, file: !913, line: 229, column: 9)
!8605 = !DILocation(line: 229, column: 9, scope: !8584)
!8606 = !DILocation(line: 234, column: 17, scope: !8584)
!8607 = !DILocation(line: 235, column: 17, scope: !8584)
!8608 = !DILocation(line: 236, column: 17, scope: !8584)
!8609 = !DILocation(line: 233, column: 5, scope: !8584)
!8610 = !DILocation(line: 237, column: 5, scope: !8584)
!8611 = !DILocation(line: 238, column: 29, scope: !8584)
!8612 = !DILocation(line: 238, column: 44, scope: !8584)
!8613 = !DILocation(line: 239, column: 5, scope: !8584)
!8614 = !DILocation(line: 240, column: 1, scope: !8584)
!8615 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !913, file: !913, line: 72, type: !1042, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8616)
!8616 = !{!8617}
!8617 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !8615, file: !913, line: 72, type: !61)
!8618 = !DILocation(line: 0, scope: !8615)
!8619 = !DILocation(line: 74, column: 37, scope: !8615)
!8620 = !DILocation(line: 74, column: 47, scope: !8615)
!8621 = !DILocation(line: 74, column: 63, scope: !8615)
!8622 = !DILocation(line: 74, column: 42, scope: !8615)
!8623 = !DILocation(line: 74, column: 73, scope: !8615)
!8624 = !DILocation(line: 74, column: 89, scope: !8615)
!8625 = !DILocation(line: 74, column: 68, scope: !8615)
!8626 = !DILocation(line: 74, column: 100, scope: !8615)
!8627 = !DILocation(line: 74, column: 116, scope: !8615)
!8628 = !DILocation(line: 74, column: 95, scope: !8615)
!8629 = !DILocation(line: 74, column: 5, scope: !8615)
!8630 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !913, file: !913, line: 77, type: !8631, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8633)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{!69, !8587}
!8633 = !{!8634}
!8634 = !DILocalVariable(name: "type", arg: 1, scope: !8630, file: !913, line: 77, type: !8587)
!8635 = !DILocation(line: 0, scope: !8630)
!8636 = !DILocation(line: 79, column: 38, scope: !8630)
!8637 = !DILocation(line: 79, column: 5, scope: !8630)
!8638 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !913, file: !913, line: 213, type: !8639, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8642)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{!8641, !8417}
!8641 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !913, line: 211, baseType: !153)
!8642 = !{!8643}
!8643 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8638, file: !913, line: 213, type: !8417)
!8644 = !DILocation(line: 0, scope: !8638)
!8645 = !DILocation(line: 215, column: 23, scope: !8638)
!8646 = !DILocation(line: 215, column: 12, scope: !8638)
!8647 = !DILocation(line: 215, column: 5, scope: !8638)
!8648 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !913, file: !913, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8649)
!8649 = !{!8650}
!8650 = !DILocalVariable(name: "context", scope: !8648, file: !913, line: 195, type: !8651)
!8651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!8652 = !DILocation(line: 196, column: 26, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8648, file: !913, line: 196, column: 9)
!8654 = !DILocation(line: 196, column: 14, scope: !8653)
!8655 = !DILocation(line: 196, column: 9, scope: !8648)
!8656 = !DILocation(line: 197, column: 36, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8653, file: !913, line: 196, column: 36)
!8658 = !DILocation(line: 197, column: 9, scope: !8657)
!8659 = !DILocation(line: 198, column: 5, scope: !8657)
!8660 = !DILocation(line: 199, column: 45, scope: !8648)
!8661 = !DILocation(line: 200, column: 1, scope: !8648)
!8662 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !913, file: !913, line: 202, type: !154, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8663)
!8663 = !{!8664}
!8664 = !DILocalVariable(name: "context", scope: !8662, file: !913, line: 204, type: !8651)
!8665 = !DILocation(line: 205, column: 26, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8662, file: !913, line: 205, column: 9)
!8667 = !DILocation(line: 205, column: 14, scope: !8666)
!8668 = !DILocation(line: 205, column: 9, scope: !8662)
!8669 = !DILocation(line: 206, column: 36, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8666, file: !913, line: 205, column: 36)
!8671 = !DILocation(line: 206, column: 9, scope: !8670)
!8672 = !DILocation(line: 207, column: 5, scope: !8670)
!8673 = !DILocation(line: 208, column: 45, scope: !8662)
!8674 = !DILocation(line: 209, column: 1, scope: !8662)
!8675 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !913, file: !913, line: 242, type: !8415, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8676)
!8676 = !{!8677}
!8677 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !8675, file: !913, line: 242, type: !8417)
!8678 = !DILocation(line: 0, scope: !8675)
!8679 = !DILocation(line: 244, column: 9, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8675, file: !913, line: 244, column: 9)
!8681 = !DILocation(line: 244, column: 9, scope: !8675)
!8682 = !DILocation(line: 245, column: 9, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8680, file: !913, line: 244, column: 50)
!8684 = !DILocation(line: 246, column: 9, scope: !8683)
!8685 = !DILocation(line: 248, column: 5, scope: !8675)
!8686 = !DILocation(line: 249, column: 29, scope: !8675)
!8687 = !DILocation(line: 249, column: 44, scope: !8675)
!8688 = !DILocation(line: 250, column: 5, scope: !8675)
!8689 = !DILocation(line: 251, column: 1, scope: !8675)
!8690 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !913, file: !913, line: 253, type: !8691, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8693)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{!2536, !61}
!8693 = !{!8694}
!8694 = !DILocalVariable(name: "ms", arg: 1, scope: !8690, file: !913, line: 253, type: !61)
!8695 = !DILocation(line: 0, scope: !8690)
!8696 = !DILocation(line: 255, column: 46, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8690, file: !913, line: 255, column: 9)
!8698 = !DILocation(line: 255, column: 61, scope: !8697)
!8699 = !DILocation(line: 255, column: 9, scope: !8690)
!8700 = !DILocation(line: 256, column: 9, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8697, file: !913, line: 255, column: 82)
!8702 = !DILocation(line: 257, column: 5, scope: !8701)
!8703 = !DILocation(line: 258, column: 5, scope: !8690)
!8704 = !DILocation(line: 259, column: 57, scope: !8690)
!8705 = !DILocation(line: 260, column: 5, scope: !8690)
!8706 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !913, file: !913, line: 264, type: !8691, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8707)
!8707 = !{!8708}
!8708 = !DILocalVariable(name: "us", arg: 1, scope: !8706, file: !913, line: 264, type: !61)
!8709 = !DILocation(line: 0, scope: !8706)
!8710 = !DILocation(line: 266, column: 46, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8706, file: !913, line: 266, column: 9)
!8712 = !DILocation(line: 266, column: 61, scope: !8711)
!8713 = !DILocation(line: 266, column: 9, scope: !8706)
!8714 = !DILocation(line: 267, column: 9, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8711, file: !913, line: 266, column: 82)
!8716 = !DILocation(line: 268, column: 5, scope: !8715)
!8717 = !DILocation(line: 269, column: 5, scope: !8706)
!8718 = !DILocation(line: 270, column: 57, scope: !8706)
!8719 = !DILocation(line: 271, column: 5, scope: !8706)
!8720 = distinct !DISubprogram(name: "hal_spi_master_init", scope: !952, file: !952, line: 132, type: !8721, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8726)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!8723, !8724, !8725}
!8723 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_status_t", file: !955, line: 556, baseType: !954)
!8724 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_port_t", file: !29, line: 462, baseType: !962)
!8725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!8726 = !{!8727, !8728, !8729, !8730, !8731, !8732}
!8727 = !DILocalVariable(name: "master_port", arg: 1, scope: !8720, file: !952, line: 132, type: !8724)
!8728 = !DILocalVariable(name: "spi_config", arg: 2, scope: !8720, file: !952, line: 133, type: !8725)
!8729 = !DILocalVariable(name: "settings", scope: !8720, file: !952, line: 135, type: !61)
!8730 = !DILocalVariable(name: "ret_val", scope: !8720, file: !952, line: 136, type: !355)
!8731 = !DILocalVariable(name: "busy_status", scope: !8720, file: !952, line: 137, type: !8723)
!8732 = !DILocalVariable(name: "saved_mask", scope: !8733, file: !952, line: 150, type: !61)
!8733 = distinct !DILexicalBlock(scope: !8720, file: !952, line: 150, column: 5)
!8734 = !DILocation(line: 0, scope: !8720)
!8735 = !DILocation(line: 138, column: 10, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8720, file: !952, line: 138, column: 9)
!8737 = !DILocation(line: 138, column: 9, scope: !8720)
!8738 = !DILocation(line: 141, column: 14, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8720, file: !952, line: 141, column: 9)
!8740 = !DILocation(line: 141, column: 9, scope: !8720)
!8741 = !DILocation(line: 144, column: 22, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8720, file: !952, line: 144, column: 9)
!8743 = !DILocation(line: 144, column: 76, scope: !8742)
!8744 = !DILocation(line: 150, column: 5, scope: !8733)
!8745 = !DILocation(line: 0, scope: !8733)
!8746 = !DILocation(line: 150, column: 5, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8733, file: !952, line: 150, column: 5)
!8748 = !DILocation(line: 151, column: 9, scope: !8720)
!8749 = !DILocation(line: 150, column: 5, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8747, file: !952, line: 150, column: 5)
!8751 = !DILocation(line: 154, column: 43, scope: !8720)
!8752 = !DILocation(line: 154, column: 5, scope: !8720)
!8753 = !DILocation(line: 156, column: 16, scope: !8720)
!8754 = !DILocation(line: 158, column: 65, scope: !8720)
!8755 = !DILocation(line: 158, column: 25, scope: !8720)
!8756 = !{i32 -2, i32 119999999}
!8757 = !DILocation(line: 157, column: 15, scope: !8720)
!8758 = !DILocation(line: 159, column: 17, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8720, file: !952, line: 159, column: 9)
!8760 = !DILocation(line: 159, column: 9, scope: !8720)
!8761 = !DILocation(line: 162, column: 5, scope: !8720)
!8762 = !DILocation(line: 163, column: 35, scope: !8720)
!8763 = !DILocation(line: 163, column: 5, scope: !8720)
!8764 = !DILocation(line: 166, column: 39, scope: !8720)
!8765 = !DILocation(line: 166, column: 5, scope: !8720)
!8766 = !DILocation(line: 166, column: 37, scope: !8720)
!8767 = !DILocation(line: 169, column: 5, scope: !8720)
!8768 = !DILocation(line: 170, column: 1, scope: !8720)
!8769 = distinct !DISubprogram(name: "hal_spi_master_is_master_port_valid", scope: !952, file: !952, line: 60, type: !8770, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8772)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{!69, !8724}
!8772 = !{!8773}
!8773 = !DILocalVariable(name: "master_port", arg: 1, scope: !8769, file: !952, line: 60, type: !8724)
!8774 = !DILocation(line: 0, scope: !8769)
!8775 = !DILocation(line: 62, column: 24, scope: !8769)
!8776 = !DILocation(line: 62, column: 5, scope: !8769)
!8777 = distinct !DISubprogram(name: "hal_spi_master_map_cs_pin", scope: !952, file: !952, line: 100, type: !8778, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!1038, !1027}
!8780 = !{!8781}
!8781 = !DILocalVariable(name: "slave_port", arg: 1, scope: !8777, file: !952, line: 100, type: !1027)
!8782 = !DILocation(line: 0, scope: !8777)
!8783 = !DILocation(line: 103, column: 32, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8777, file: !952, line: 103, column: 9)
!8785 = !DILocation(line: 103, column: 9, scope: !8777)
!8786 = !DILocation(line: 104, column: 13, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !952, line: 104, column: 13)
!8788 = distinct !DILexicalBlock(scope: !8784, file: !952, line: 103, column: 47)
!8789 = !DILocation(line: 104, column: 13, scope: !8788)
!8790 = !DILocation(line: 105, column: 31, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !952, line: 104, column: 35)
!8792 = !DILocation(line: 106, column: 13, scope: !8791)
!8793 = !DILocation(line: 107, column: 9, scope: !8791)
!8794 = !DILocation(line: 107, column: 20, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8787, file: !952, line: 107, column: 20)
!8796 = !DILocation(line: 107, column: 20, scope: !8787)
!8797 = !DILocation(line: 108, column: 31, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8795, file: !952, line: 107, column: 41)
!8799 = !DILocation(line: 109, column: 13, scope: !8798)
!8800 = !DILocation(line: 110, column: 9, scope: !8798)
!8801 = !DILocation(line: 111, column: 13, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8795, file: !952, line: 110, column: 16)
!8803 = !DILocation(line: 112, column: 31, scope: !8802)
!8804 = !DILocation(line: 115, column: 27, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8784, file: !952, line: 114, column: 12)
!8806 = !DILocation(line: 116, column: 9, scope: !8805)
!8807 = !DILocation(line: 118, column: 5, scope: !8777)
!8808 = distinct !DISubprogram(name: "hal_spi_master_build_settings", scope: !952, file: !952, line: 65, type: !8809, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8811)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!61, !8725}
!8811 = !{!8812, !8813}
!8812 = !DILocalVariable(name: "spi_config", arg: 1, scope: !8808, file: !952, line: 65, type: !8725)
!8813 = !DILocalVariable(name: "settings", scope: !8808, file: !952, line: 67, type: !61)
!8814 = !DILocation(line: 0, scope: !8808)
!8815 = !DILocation(line: 68, column: 47, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8808, file: !952, line: 68, column: 9)
!8817 = !DILocation(line: 68, column: 32, scope: !8816)
!8818 = !DILocation(line: 73, column: 49, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8808, file: !952, line: 73, column: 9)
!8820 = !DILocation(line: 73, column: 34, scope: !8819)
!8821 = !DILocation(line: 73, column: 9, scope: !8808)
!8822 = !DILocation(line: 78, column: 55, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8808, file: !952, line: 78, column: 9)
!8824 = !DILocation(line: 78, column: 40, scope: !8823)
!8825 = !DILocation(line: 78, column: 9, scope: !8808)
!8826 = !DILocation(line: 83, column: 52, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8808, file: !952, line: 83, column: 9)
!8828 = !DILocation(line: 83, column: 37, scope: !8827)
!8829 = !DILocation(line: 83, column: 9, scope: !8808)
!8830 = !DILocation(line: 88, column: 5, scope: !8808)
!8831 = !DILocation(line: 0, scope: !1041)
!8832 = !DILocation(line: 97, column: 33, scope: !1041)
!8833 = !DILocation(line: 97, column: 45, scope: !1041)
!8834 = !DILocation(line: 97, column: 5, scope: !1041)
!8835 = distinct !DISubprogram(name: "hal_spi_master_deinit", scope: !952, file: !952, line: 172, type: !8836, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!8723, !8724}
!8838 = !{!8839}
!8839 = !DILocalVariable(name: "master_port", arg: 1, scope: !8835, file: !952, line: 172, type: !8724)
!8840 = !DILocation(line: 0, scope: !8835)
!8841 = !DILocation(line: 174, column: 10, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8835, file: !952, line: 174, column: 9)
!8843 = !DILocation(line: 174, column: 9, scope: !8835)
!8844 = !DILocation(line: 177, column: 5, scope: !8835)
!8845 = !DILocation(line: 179, column: 5, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8835, file: !952, line: 179, column: 5)
!8847 = !DILocation(line: 182, column: 44, scope: !8835)
!8848 = !DILocation(line: 182, column: 5, scope: !8835)
!8849 = !DILocation(line: 184, column: 5, scope: !8835)
!8850 = !DILocation(line: 185, column: 1, scope: !8835)
!8851 = distinct !DISubprogram(name: "hal_spi_master_send_polling", scope: !952, file: !952, line: 188, type: !8852, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8854)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{!8723, !8724, !500, !61}
!8854 = !{!8855, !8856, !8857, !8858}
!8855 = !DILocalVariable(name: "master_port", arg: 1, scope: !8851, file: !952, line: 188, type: !8724)
!8856 = !DILocalVariable(name: "data", arg: 2, scope: !8851, file: !952, line: 189, type: !500)
!8857 = !DILocalVariable(name: "size", arg: 3, scope: !8851, file: !952, line: 190, type: !61)
!8858 = !DILocalVariable(name: "ret_val", scope: !8851, file: !952, line: 192, type: !355)
!8859 = !DILocation(line: 0, scope: !8851)
!8860 = !DILocation(line: 193, column: 10, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8851, file: !952, line: 193, column: 9)
!8862 = !DILocation(line: 193, column: 9, scope: !8851)
!8863 = !DILocation(line: 196, column: 14, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8851, file: !952, line: 196, column: 9)
!8865 = !DILocation(line: 196, column: 9, scope: !8851)
!8866 = !DILocation(line: 201, column: 10, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8851, file: !952, line: 201, column: 9)
!8868 = !DILocation(line: 201, column: 35, scope: !8867)
!8869 = !DILocation(line: 201, column: 51, scope: !8867)
!8870 = !DILocation(line: 201, column: 9, scope: !8851)
!8871 = !DILocation(line: 204, column: 25, scope: !8851)
!8872 = !DILocation(line: 204, column: 5, scope: !8851)
!8873 = !DILocation(line: 206, column: 34, scope: !8851)
!8874 = !DILocation(line: 206, column: 5, scope: !8851)
!8875 = !DILocation(line: 208, column: 15, scope: !8851)
!8876 = !DILocation(line: 210, column: 36, scope: !8851)
!8877 = !DILocation(line: 210, column: 5, scope: !8851)
!8878 = !DILocation(line: 212, column: 25, scope: !8851)
!8879 = !DILocation(line: 212, column: 5, scope: !8851)
!8880 = !DILocation(line: 213, column: 12, scope: !8851)
!8881 = !DILocation(line: 213, column: 5, scope: !8851)
!8882 = !DILocation(line: 214, column: 1, scope: !8851)
!8883 = distinct !DISubprogram(name: "hal_spi_master_send_and_receive_polling", scope: !952, file: !952, line: 218, type: !8884, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8894)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!8723, !8724, !8886}
!8886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8887, size: 32)
!8887 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_send_and_receive_config_t", file: !955, line: 616, baseType: !8888)
!8888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !955, line: 611, size: 128, elements: !8889)
!8889 = !{!8890, !8891, !8892, !8893}
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !8888, file: !955, line: 612, baseType: !500, size: 32)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !8888, file: !955, line: 613, baseType: !61, size: 32, offset: 32)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !8888, file: !955, line: 614, baseType: !500, size: 32, offset: 64)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !8888, file: !955, line: 615, baseType: !61, size: 32, offset: 96)
!8894 = !{!8895, !8896, !8897}
!8895 = !DILocalVariable(name: "master_port", arg: 1, scope: !8883, file: !952, line: 218, type: !8724)
!8896 = !DILocalVariable(name: "spi_send_and_receive_config", arg: 2, scope: !8883, file: !952, line: 219, type: !8886)
!8897 = !DILocalVariable(name: "ret_val", scope: !8883, file: !952, line: 221, type: !355)
!8898 = !DILocation(line: 0, scope: !8883)
!8899 = !DILocation(line: 222, column: 10, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8883, file: !952, line: 222, column: 9)
!8901 = !DILocation(line: 222, column: 9, scope: !8883)
!8902 = !DILocation(line: 225, column: 47, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8883, file: !952, line: 225, column: 9)
!8904 = !DILocation(line: 225, column: 14, scope: !8903)
!8905 = !DILocation(line: 225, column: 9, scope: !8883)
!8906 = !DILocation(line: 228, column: 47, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8883, file: !952, line: 228, column: 9)
!8908 = !DILocation(line: 228, column: 14, scope: !8907)
!8909 = !DILocation(line: 228, column: 9, scope: !8883)
!8910 = !DILocation(line: 231, column: 38, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8883, file: !952, line: 231, column: 9)
!8912 = !DILocation(line: 231, column: 50, scope: !8911)
!8913 = !DILocation(line: 231, column: 9, scope: !8883)
!8914 = !DILocation(line: 234, column: 84, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8883, file: !952, line: 234, column: 9)
!8916 = !DILocation(line: 234, column: 52, scope: !8915)
!8917 = !DILocation(line: 234, column: 9, scope: !8883)
!8918 = !DILocation(line: 239, column: 10, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8883, file: !952, line: 239, column: 9)
!8920 = !DILocation(line: 239, column: 35, scope: !8919)
!8921 = !DILocation(line: 239, column: 51, scope: !8919)
!8922 = !DILocation(line: 239, column: 9, scope: !8883)
!8923 = !DILocation(line: 242, column: 25, scope: !8883)
!8924 = !DILocation(line: 242, column: 5, scope: !8883)
!8925 = !DILocation(line: 244, column: 34, scope: !8883)
!8926 = !DILocation(line: 244, column: 5, scope: !8883)
!8927 = !DILocation(line: 246, column: 25, scope: !8883)
!8928 = !DILocation(line: 247, column: 54, scope: !8883)
!8929 = !DILocation(line: 248, column: 54, scope: !8883)
!8930 = !DILocation(line: 248, column: 69, scope: !8883)
!8931 = !DILocation(line: 249, column: 54, scope: !8883)
!8932 = !DILocation(line: 249, column: 69, scope: !8883)
!8933 = !DILocation(line: 246, column: 15, scope: !8883)
!8934 = !DILocation(line: 251, column: 36, scope: !8883)
!8935 = !DILocation(line: 251, column: 5, scope: !8883)
!8936 = !DILocation(line: 253, column: 25, scope: !8883)
!8937 = !DILocation(line: 253, column: 5, scope: !8883)
!8938 = !DILocation(line: 255, column: 12, scope: !8883)
!8939 = !DILocation(line: 255, column: 5, scope: !8883)
!8940 = !DILocation(line: 256, column: 1, scope: !8883)
!8941 = distinct !DISubprogram(name: "hal_spi_build_op_addr", scope: !952, file: !952, line: 121, type: !8942, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8946)
!8942 = !DISubroutineType(types: !8943)
!8943 = !{!61, !8944}
!8944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8945, size: 32)
!8945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8887)
!8946 = !{!8947, !8948, !8949}
!8947 = !DILocalVariable(name: "config", arg: 1, scope: !8941, file: !952, line: 121, type: !8944)
!8948 = !DILocalVariable(name: "op_addr", scope: !8941, file: !952, line: 123, type: !61)
!8949 = !DILocalVariable(name: "index", scope: !8941, file: !952, line: 124, type: !61)
!8950 = !DILocation(line: 0, scope: !8941)
!8951 = !DILocation(line: 126, column: 27, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !952, line: 126, column: 5)
!8953 = distinct !DILexicalBlock(scope: !8941, file: !952, line: 126, column: 5)
!8954 = !DILocation(line: 126, column: 5, scope: !8953)
!8955 = !DILocation(line: 127, column: 31, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8952, file: !952, line: 126, column: 59)
!8957 = !DILocation(line: 127, column: 89, scope: !8956)
!8958 = !DILocation(line: 127, column: 94, scope: !8956)
!8959 = !DILocation(line: 127, column: 56, scope: !8956)
!8960 = !DILocation(line: 127, column: 17, scope: !8956)
!8961 = !DILocation(line: 126, column: 55, scope: !8952)
!8962 = distinct !{!8962, !8954, !8963}
!8963 = !DILocation(line: 128, column: 5, scope: !8953)
!8964 = !DILocation(line: 129, column: 5, scope: !8941)
!8965 = distinct !DISubprogram(name: "hal_spi_master_get_running_status", scope: !952, file: !952, line: 259, type: !8966, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !951, retainedNodes: !8970)
!8966 = !DISubroutineType(types: !8967)
!8967 = !{!8723, !8724, !8968}
!8968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8969, size: 32)
!8969 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_running_status_t", file: !955, line: 563, baseType: !983)
!8970 = !{!8971, !8972}
!8971 = !DILocalVariable(name: "master_port", arg: 1, scope: !8965, file: !952, line: 259, type: !8724)
!8972 = !DILocalVariable(name: "running_status", arg: 2, scope: !8965, file: !952, line: 260, type: !8968)
!8973 = !DILocation(line: 0, scope: !8965)
!8974 = !DILocation(line: 262, column: 10, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8965, file: !952, line: 262, column: 9)
!8976 = !DILocation(line: 262, column: 9, scope: !8965)
!8977 = !DILocation(line: 265, column: 14, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8965, file: !952, line: 265, column: 9)
!8979 = !DILocation(line: 265, column: 9, scope: !8965)
!8980 = !DILocation(line: 269, column: 10, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8965, file: !952, line: 269, column: 9)
!8982 = !DILocation(line: 0, scope: !8981)
!8983 = !DILocation(line: 275, column: 5, scope: !8965)
!8984 = !DILocation(line: 276, column: 1, scope: !8965)
!8985 = distinct !DISubprogram(name: "uart_send_handler", scope: !1053, file: !1053, line: 213, type: !7045, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !8986)
!8986 = !{!8987, !8988, !8989}
!8987 = !DILocalVariable(name: "u_port", arg: 1, scope: !8985, file: !1053, line: 213, type: !6991)
!8988 = !DILocalVariable(name: "length", scope: !8985, file: !1053, line: 215, type: !61)
!8989 = !DILocalVariable(name: "irq_status", scope: !8985, file: !1053, line: 216, type: !61)
!8990 = !DILocation(line: 0, scope: !8985)
!8991 = !DILocation(line: 215, column: 5, scope: !8985)
!8992 = !DILocation(line: 216, column: 5, scope: !8985)
!8993 = !DILocation(line: 218, column: 9, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8985, file: !1053, line: 218, column: 9)
!8995 = !DILocation(line: 218, column: 54, scope: !8994)
!8996 = !DILocation(line: 218, column: 9, scope: !8985)
!8997 = !DILocation(line: 219, column: 9, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8994, file: !1053, line: 218, column: 64)
!8999 = !DILocation(line: 220, column: 9, scope: !8998)
!9000 = !DILocation(line: 221, column: 53, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8998, file: !1053, line: 221, column: 13)
!9002 = !DILocation(line: 221, column: 78, scope: !9001)
!9003 = !DILocation(line: 221, column: 85, scope: !9001)
!9004 = !DILocation(line: 221, column: 13, scope: !8998)
!9005 = !DILocation(line: 222, column: 17, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !1053, line: 222, column: 17)
!9007 = distinct !DILexicalBlock(scope: !9001, file: !1053, line: 221, column: 91)
!9008 = !DILocation(line: 222, column: 17, scope: !9007)
!9009 = !DILocation(line: 223, column: 48, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9006, file: !1053, line: 222, column: 58)
!9011 = !DILocation(line: 223, column: 17, scope: !9010)
!9012 = !DILocation(line: 224, column: 49, scope: !9010)
!9013 = !DILocation(line: 225, column: 13, scope: !9010)
!9014 = !DILocation(line: 227, column: 41, scope: !8998)
!9015 = !DILocation(line: 227, column: 9, scope: !8998)
!9016 = !DILocation(line: 228, column: 5, scope: !8998)
!9017 = !DILocation(line: 229, column: 54, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8994, file: !1053, line: 228, column: 12)
!9019 = !DILocation(line: 231, column: 1, scope: !8985)
!9020 = distinct !DISubprogram(name: "hal_uart_init", scope: !1053, file: !1053, line: 234, type: !9021, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9025)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{!9023, !1161, !9024}
!9023 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !1056, line: 351, baseType: !1055)
!9024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!9025 = !{!9026, !9027}
!9026 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9020, file: !1053, line: 234, type: !1161)
!9027 = !DILocalVariable(name: "uart_config", arg: 2, scope: !9020, file: !1053, line: 234, type: !9024)
!9028 = !DILocation(line: 0, scope: !9020)
!9029 = !DILocation(line: 236, column: 10, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9020, file: !1053, line: 236, column: 9)
!9031 = !DILocation(line: 236, column: 9, scope: !9020)
!9032 = !DILocation(line: 239, column: 41, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9020, file: !1053, line: 239, column: 9)
!9034 = !DILocation(line: 239, column: 9, scope: !9020)
!9035 = !DILocation(line: 242, column: 5, scope: !9020)
!9036 = !DILocation(line: 243, column: 45, scope: !9020)
!9037 = !DILocation(line: 243, column: 12, scope: !9020)
!9038 = !DILocation(line: 244, column: 12, scope: !9020)
!9039 = !DILocation(line: 243, column: 5, scope: !9020)
!9040 = !DILocation(line: 245, column: 58, scope: !9020)
!9041 = !DILocation(line: 246, column: 30, scope: !9020)
!9042 = !{i32 0, i32 2}
!9043 = !DILocation(line: 246, column: 5, scope: !9020)
!9044 = !DILocation(line: 247, column: 5, scope: !9020)
!9045 = !DILocation(line: 249, column: 31, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9020, file: !1053, line: 249, column: 9)
!9047 = !DILocation(line: 249, column: 28, scope: !9046)
!9048 = !DILocation(line: 249, column: 9, scope: !9020)
!9049 = !DILocation(line: 254, column: 5, scope: !9020)
!9050 = !DILocation(line: 255, column: 5, scope: !9020)
!9051 = !DILocation(line: 255, column: 53, scope: !9020)
!9052 = !DILocation(line: 256, column: 5, scope: !9020)
!9053 = !DILocation(line: 256, column: 40, scope: !9020)
!9054 = !DILocation(line: 257, column: 82, scope: !9020)
!9055 = !DILocation(line: 257, column: 39, scope: !9020)
!9056 = !DILocation(line: 257, column: 5, scope: !9020)
!9057 = !DILocation(line: 257, column: 37, scope: !9020)
!9058 = !DILocation(line: 260, column: 5, scope: !9020)
!9059 = !DILocation(line: 261, column: 1, scope: !9020)
!9060 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !1053, file: !1053, line: 93, type: !9061, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9065)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{!69, !1161, !9063}
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!9065 = !{!9066, !9067}
!9066 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9060, file: !1053, line: 93, type: !1161)
!9067 = !DILocalVariable(name: "uart_config", arg: 2, scope: !9060, file: !1053, line: 93, type: !9063)
!9068 = !DILocation(line: 0, scope: !9060)
!9069 = !DILocation(line: 95, column: 10, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9060, file: !1053, line: 95, column: 9)
!9071 = !DILocation(line: 95, column: 9, scope: !9060)
!9072 = !DILocation(line: 101, column: 23, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9060, file: !1053, line: 101, column: 9)
!9074 = !DILocation(line: 101, column: 32, scope: !9073)
!9075 = !DILocation(line: 101, column: 60, scope: !9073)
!9076 = !DILocation(line: 102, column: 27, scope: !9073)
!9077 = !DILocation(line: 102, column: 34, scope: !9073)
!9078 = !DILocation(line: 102, column: 58, scope: !9073)
!9079 = !DILocation(line: 103, column: 27, scope: !9073)
!9080 = !DILocation(line: 103, column: 36, scope: !9073)
!9081 = !DILocation(line: 103, column: 59, scope: !9073)
!9082 = !DILocation(line: 104, column: 27, scope: !9073)
!9083 = !DILocation(line: 104, column: 39, scope: !9073)
!9084 = !DILocation(line: 101, column: 9, scope: !9060)
!9085 = !DILocation(line: 109, column: 1, scope: !9060)
!9086 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !1053, file: !1053, line: 139, type: !9087, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!6991, !1161}
!9089 = !{!9090}
!9090 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9086, file: !1053, line: 139, type: !1161)
!9091 = !DILocation(line: 0, scope: !9086)
!9092 = !DILocation(line: 141, column: 24, scope: !9086)
!9093 = !DILocation(line: 141, column: 12, scope: !9086)
!9094 = !DILocation(line: 141, column: 5, scope: !9086)
!9095 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !1053, file: !1053, line: 593, type: !9096, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9098)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!9023, !1161, !9063}
!9098 = !{!9099, !9100}
!9099 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9095, file: !1053, line: 593, type: !1161)
!9100 = !DILocalVariable(name: "config", arg: 2, scope: !9095, file: !1053, line: 593, type: !9063)
!9101 = !DILocation(line: 0, scope: !9095)
!9102 = !DILocation(line: 595, column: 10, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9095, file: !1053, line: 595, column: 9)
!9104 = !DILocation(line: 595, column: 9, scope: !9095)
!9105 = !DILocation(line: 598, column: 45, scope: !9095)
!9106 = !DILocation(line: 598, column: 12, scope: !9095)
!9107 = !DILocation(line: 598, column: 59, scope: !9095)
!9108 = !DILocation(line: 598, column: 5, scope: !9095)
!9109 = !DILocation(line: 599, column: 23, scope: !9095)
!9110 = !DILocation(line: 600, column: 59, scope: !9095)
!9111 = !DILocation(line: 600, column: 23, scope: !9095)
!9112 = !DILocation(line: 601, column: 62, scope: !9095)
!9113 = !DILocation(line: 601, column: 23, scope: !9095)
!9114 = !DILocation(line: 602, column: 57, scope: !9095)
!9115 = !DILocation(line: 602, column: 23, scope: !9095)
!9116 = !DILocation(line: 603, column: 58, scope: !9095)
!9117 = !DILocation(line: 603, column: 23, scope: !9095)
!9118 = !DILocation(line: 599, column: 5, scope: !9095)
!9119 = !DILocation(line: 604, column: 5, scope: !9095)
!9120 = !DILocation(line: 605, column: 1, scope: !9095)
!9121 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !1053, file: !1053, line: 145, type: !9122, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9124)
!9122 = !DISubroutineType(types: !9123)
!9123 = !{!61, !1118}
!9124 = !{!9125, !9126}
!9125 = !DILocalVariable(name: "bandrate", arg: 1, scope: !9121, file: !1053, line: 145, type: !1118)
!9126 = !DILocalVariable(name: "baudrate_tbl", scope: !9121, file: !1053, line: 147, type: !9127)
!9127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 416, elements: !560)
!9128 = !DILocation(line: 0, scope: !9121)
!9129 = !DILocation(line: 147, column: 14, scope: !9121)
!9130 = !DILocation(line: 151, column: 12, scope: !9121)
!9131 = !DILocation(line: 151, column: 5, scope: !9121)
!9132 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !1053, file: !1053, line: 155, type: !9133, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9135)
!9133 = !DISubroutineType(types: !9134)
!9134 = !{!1802, !1120}
!9135 = !{!9136, !9137}
!9136 = !DILocalVariable(name: "word_length", arg: 1, scope: !9132, file: !1053, line: 155, type: !1120)
!9137 = !DILocalVariable(name: "databit_tbl", scope: !9132, file: !1053, line: 157, type: !9138)
!9138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 64, elements: !346)
!9139 = !DILocation(line: 0, scope: !9132)
!9140 = !DILocation(line: 157, column: 14, scope: !9132)
!9141 = !DILocation(line: 160, column: 12, scope: !9132)
!9142 = !DILocation(line: 160, column: 5, scope: !9132)
!9143 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !1053, file: !1053, line: 164, type: !9144, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{!1802, !1124}
!9146 = !{!9147, !9148}
!9147 = !DILocalVariable(name: "parity", arg: 1, scope: !9143, file: !1053, line: 164, type: !1124)
!9148 = !DILocalVariable(name: "parity_tbl", scope: !9143, file: !1053, line: 166, type: !9149)
!9149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 80, elements: !350)
!9150 = !DILocation(line: 0, scope: !9143)
!9151 = !DILocation(line: 166, column: 14, scope: !9143)
!9152 = !DILocation(line: 169, column: 12, scope: !9143)
!9153 = !DILocation(line: 169, column: 5, scope: !9143)
!9154 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !1053, file: !1053, line: 173, type: !9155, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9157)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{!1802, !1122}
!9157 = !{!9158, !9159}
!9158 = !DILocalVariable(name: "stopbit", arg: 1, scope: !9154, file: !1053, line: 173, type: !1122)
!9159 = !DILocalVariable(name: "stopbit_tbl", scope: !9154, file: !1053, line: 175, type: !9160)
!9160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 48, elements: !1627)
!9161 = !DILocation(line: 0, scope: !9154)
!9162 = !DILocation(line: 175, column: 14, scope: !9154)
!9163 = !DILocation(line: 178, column: 12, scope: !9154)
!9164 = !DILocation(line: 178, column: 5, scope: !9154)
!9165 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !1053, file: !1053, line: 87, type: !9166, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9168)
!9166 = !DISubroutineType(types: !9167)
!9167 = !{!69, !1161}
!9168 = !{!9169}
!9169 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9165, file: !1053, line: 87, type: !1161)
!9170 = !DILocation(line: 0, scope: !9165)
!9171 = !DILocation(line: 89, column: 23, scope: !9165)
!9172 = !DILocation(line: 89, column: 5, scope: !9165)
!9173 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !1053, file: !1053, line: 264, type: !9174, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9176)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{!9023, !1161}
!9176 = !{!9177}
!9177 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9173, file: !1053, line: 264, type: !1161)
!9178 = !DILocation(line: 0, scope: !9173)
!9179 = !DILocation(line: 266, column: 10, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9173, file: !1053, line: 266, column: 9)
!9181 = !DILocation(line: 266, column: 9, scope: !9173)
!9182 = !DILocation(line: 269, column: 41, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9173, file: !1053, line: 269, column: 9)
!9184 = !DILocation(line: 269, column: 62, scope: !9183)
!9185 = !DILocation(line: 269, column: 9, scope: !9173)
!9186 = !DILocation(line: 272, column: 5, scope: !9173)
!9187 = !DILocation(line: 275, column: 22, scope: !9173)
!9188 = !DILocation(line: 275, column: 5, scope: !9173)
!9189 = !DILocation(line: 278, column: 26, scope: !9173)
!9190 = !DILocation(line: 278, column: 5, scope: !9173)
!9191 = !DILocation(line: 279, column: 5, scope: !9173)
!9192 = !DILocation(line: 279, column: 53, scope: !9173)
!9193 = !DILocation(line: 280, column: 5, scope: !9173)
!9194 = !DILocation(line: 280, column: 40, scope: !9173)
!9195 = !DILocation(line: 281, column: 5, scope: !9173)
!9196 = !DILocation(line: 282, column: 44, scope: !9173)
!9197 = !DILocation(line: 282, column: 5, scope: !9173)
!9198 = !DILocation(line: 284, column: 5, scope: !9173)
!9199 = !DILocation(line: 286, column: 5, scope: !9173)
!9200 = !DILocation(line: 287, column: 1, scope: !9173)
!9201 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !1053, file: !1053, line: 290, type: !9202, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9204)
!9202 = !DISubroutineType(types: !9203)
!9203 = !{null, !1161, !492}
!9204 = !{!9205, !9206, !9207}
!9205 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9201, file: !1053, line: 290, type: !1161)
!9206 = !DILocalVariable(name: "byte", arg: 2, scope: !9201, file: !1053, line: 290, type: !492)
!9207 = !DILocalVariable(name: "int_no", scope: !9201, file: !1053, line: 292, type: !6991)
!9208 = !DILocation(line: 0, scope: !9201)
!9209 = !DILocation(line: 292, column: 26, scope: !9201)
!9210 = !DILocation(line: 294, column: 16, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9201, file: !1053, line: 294, column: 9)
!9212 = !DILocation(line: 294, column: 9, scope: !9201)
!9213 = !DILocation(line: 295, column: 9, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9211, file: !1053, line: 294, column: 34)
!9215 = !DILocation(line: 296, column: 5, scope: !9214)
!9216 = !DILocation(line: 299, column: 1, scope: !9201)
!9217 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !1053, file: !1053, line: 302, type: !9218, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9220)
!9218 = !DISubroutineType(types: !9219)
!9219 = !{!61, !1161, !2691, !61}
!9220 = !{!9221, !9222, !9223, !9224, !9225}
!9221 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9217, file: !1053, line: 302, type: !1161)
!9222 = !DILocalVariable(name: "data", arg: 2, scope: !9217, file: !1053, line: 302, type: !2691)
!9223 = !DILocalVariable(name: "size", arg: 3, scope: !9217, file: !1053, line: 302, type: !61)
!9224 = !DILocalVariable(name: "int_no", scope: !9217, file: !1053, line: 304, type: !6991)
!9225 = !DILocalVariable(name: "index", scope: !9217, file: !1053, line: 305, type: !61)
!9226 = !DILocation(line: 0, scope: !9217)
!9227 = !DILocation(line: 304, column: 26, scope: !9217)
!9228 = !DILocation(line: 307, column: 14, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9217, file: !1053, line: 307, column: 9)
!9230 = !DILocation(line: 307, column: 9, scope: !9217)
!9231 = !DILocation(line: 313, column: 53, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !1053, line: 312, column: 48)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !1053, line: 312, column: 9)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !1053, line: 312, column: 9)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !1053, line: 311, column: 33)
!9236 = distinct !DILexicalBlock(scope: !9217, file: !1053, line: 311, column: 9)
!9237 = !DILocation(line: 313, column: 13, scope: !9232)
!9238 = !DILocation(line: 312, column: 44, scope: !9233)
!9239 = !DILocation(line: 312, column: 31, scope: !9233)
!9240 = !DILocation(line: 312, column: 9, scope: !9234)
!9241 = distinct !{!9241, !9240, !9242}
!9242 = !DILocation(line: 314, column: 9, scope: !9234)
!9243 = !DILocation(line: 318, column: 1, scope: !9217)
!9244 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !1053, file: !1053, line: 320, type: !9218, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9245)
!9245 = !{!9246, !9247, !9248, !9249, !9250, !9251, !9253}
!9246 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9244, file: !1053, line: 320, type: !1161)
!9247 = !DILocalVariable(name: "data", arg: 2, scope: !9244, file: !1053, line: 320, type: !2691)
!9248 = !DILocalVariable(name: "size", arg: 3, scope: !9244, file: !1053, line: 320, type: !61)
!9249 = !DILocalVariable(name: "actual_space", scope: !9244, file: !1053, line: 322, type: !61)
!9250 = !DILocalVariable(name: "send_size", scope: !9244, file: !1053, line: 322, type: !61)
!9251 = !DILocalVariable(name: "ch", scope: !9244, file: !1053, line: 323, type: !9252)
!9252 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !634, line: 144, baseType: !633)
!9253 = !DILocalVariable(name: "irq_status", scope: !9244, file: !1053, line: 325, type: !61)
!9254 = !DILocation(line: 0, scope: !9244)
!9255 = !DILocation(line: 322, column: 5, scope: !9244)
!9256 = !DILocation(line: 325, column: 5, scope: !9244)
!9257 = !DILocation(line: 328, column: 10, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9244, file: !1053, line: 328, column: 9)
!9259 = !DILocation(line: 328, column: 9, scope: !9244)
!9260 = !DILocation(line: 332, column: 15, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9244, file: !1053, line: 332, column: 9)
!9262 = !DILocation(line: 332, column: 24, scope: !9261)
!9263 = !DILocation(line: 335, column: 42, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9244, file: !1053, line: 335, column: 9)
!9265 = !DILocation(line: 335, column: 9, scope: !9244)
!9266 = !DILocation(line: 341, column: 5, scope: !9244)
!9267 = !DILocation(line: 342, column: 9, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9244, file: !1053, line: 342, column: 9)
!9269 = !DILocation(line: 342, column: 44, scope: !9268)
!9270 = !DILocation(line: 342, column: 9, scope: !9244)
!9271 = !DILocation(line: 343, column: 38, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !1053, line: 342, column: 54)
!9273 = !DILocation(line: 343, column: 9, scope: !9272)
!9274 = !DILocation(line: 344, column: 44, scope: !9272)
!9275 = !DILocation(line: 345, column: 5, scope: !9272)
!9276 = !DILocation(line: 346, column: 37, scope: !9244)
!9277 = !DILocation(line: 346, column: 5, scope: !9244)
!9278 = !DILocation(line: 349, column: 30, scope: !9244)
!9279 = !DILocation(line: 349, column: 5, scope: !9244)
!9280 = !DILocation(line: 350, column: 9, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9244, file: !1053, line: 350, column: 9)
!9282 = !DILocation(line: 350, column: 22, scope: !9281)
!9283 = !DILocation(line: 355, column: 5, scope: !9244)
!9284 = !DILocation(line: 357, column: 22, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9244, file: !1053, line: 357, column: 9)
!9286 = !DILocation(line: 357, column: 19, scope: !9285)
!9287 = !DILocation(line: 357, column: 9, scope: !9244)
!9288 = !DILocation(line: 358, column: 14, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9285, file: !1053, line: 357, column: 36)
!9290 = !{i32 14, i32 18}
!9291 = !DILocation(line: 359, column: 9, scope: !9289)
!9292 = !DILocation(line: 360, column: 5, scope: !9289)
!9293 = !DILocation(line: 362, column: 1, scope: !9244)
!9294 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !1053, file: !1053, line: 191, type: !9295, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9297)
!9295 = !DISubroutineType(types: !9296)
!9296 = !{!9252, !6991, !69}
!9297 = !{!9298, !9299, !9300}
!9298 = !DILocalVariable(name: "port", arg: 1, scope: !9294, file: !1053, line: 191, type: !6991)
!9299 = !DILocalVariable(name: "is_rx", arg: 2, scope: !9294, file: !1053, line: 191, type: !69)
!9300 = !DILocalVariable(name: "ch", scope: !9294, file: !1053, line: 193, type: !9252)
!9301 = !DILocation(line: 0, scope: !9294)
!9302 = !DILocation(line: 195, column: 14, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9294, file: !1053, line: 195, column: 9)
!9304 = !DILocation(line: 195, column: 9, scope: !9294)
!9305 = !DILocation(line: 209, column: 5, scope: !9294)
!9306 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !1053, file: !1053, line: 365, type: !9307, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9309)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{!492, !1161}
!9309 = !{!9310, !9311}
!9310 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9306, file: !1053, line: 365, type: !1161)
!9311 = !DILocalVariable(name: "int_no", scope: !9306, file: !1053, line: 367, type: !6991)
!9312 = !DILocation(line: 0, scope: !9306)
!9313 = !DILocation(line: 367, column: 26, scope: !9306)
!9314 = !DILocation(line: 369, column: 16, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9306, file: !1053, line: 369, column: 9)
!9316 = !DILocation(line: 369, column: 9, scope: !9306)
!9317 = !DILocation(line: 370, column: 22, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9315, file: !1053, line: 369, column: 33)
!9319 = !DILocation(line: 370, column: 9, scope: !9318)
!9320 = !DILocation(line: 0, scope: !9315)
!9321 = !DILocation(line: 375, column: 1, scope: !9306)
!9322 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !1053, file: !1053, line: 377, type: !9323, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9325)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!61, !1161}
!9325 = !{!9326, !9327}
!9326 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9322, file: !1053, line: 377, type: !1161)
!9327 = !DILocalVariable(name: "int_no", scope: !9322, file: !1053, line: 379, type: !6991)
!9328 = !DILocation(line: 0, scope: !9322)
!9329 = !DILocation(line: 379, column: 26, scope: !9322)
!9330 = !DILocation(line: 381, column: 16, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9322, file: !1053, line: 381, column: 9)
!9332 = !DILocation(line: 381, column: 9, scope: !9322)
!9333 = !DILocation(line: 382, column: 16, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9331, file: !1053, line: 381, column: 33)
!9335 = !DILocation(line: 382, column: 9, scope: !9334)
!9336 = !DILocation(line: 0, scope: !9331)
!9337 = !DILocation(line: 387, column: 1, scope: !9322)
!9338 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !1053, file: !1053, line: 390, type: !9339, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9341)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{!61, !1161, !500, !61}
!9341 = !{!9342, !9343, !9344, !9345, !9346}
!9342 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9338, file: !1053, line: 390, type: !1161)
!9343 = !DILocalVariable(name: "buffer", arg: 2, scope: !9338, file: !1053, line: 390, type: !500)
!9344 = !DILocalVariable(name: "size", arg: 3, scope: !9338, file: !1053, line: 390, type: !61)
!9345 = !DILocalVariable(name: "int_no", scope: !9338, file: !1053, line: 392, type: !6991)
!9346 = !DILocalVariable(name: "index", scope: !9338, file: !1053, line: 393, type: !61)
!9347 = !DILocation(line: 0, scope: !9338)
!9348 = !DILocation(line: 392, column: 26, scope: !9338)
!9349 = !DILocation(line: 395, column: 16, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9338, file: !1053, line: 395, column: 9)
!9351 = !DILocation(line: 395, column: 9, scope: !9338)
!9352 = !DILocation(line: 401, column: 38, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !1053, line: 400, column: 48)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !1053, line: 400, column: 9)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !1053, line: 400, column: 9)
!9356 = distinct !DILexicalBlock(scope: !9357, file: !1053, line: 399, column: 33)
!9357 = distinct !DILexicalBlock(scope: !9338, file: !1053, line: 399, column: 9)
!9358 = !DILocation(line: 401, column: 13, scope: !9353)
!9359 = !DILocation(line: 401, column: 27, scope: !9353)
!9360 = !DILocation(line: 400, column: 44, scope: !9354)
!9361 = !DILocation(line: 400, column: 31, scope: !9354)
!9362 = !DILocation(line: 400, column: 9, scope: !9355)
!9363 = distinct !{!9363, !9362, !9364}
!9364 = !DILocation(line: 402, column: 9, scope: !9355)
!9365 = !DILocation(line: 406, column: 1, scope: !9338)
!9366 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !1053, file: !1053, line: 408, type: !9339, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9367)
!9367 = !{!9368, !9369, !9370, !9371, !9372, !9373}
!9368 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9366, file: !1053, line: 408, type: !1161)
!9369 = !DILocalVariable(name: "buffer", arg: 2, scope: !9366, file: !1053, line: 408, type: !500)
!9370 = !DILocalVariable(name: "size", arg: 3, scope: !9366, file: !1053, line: 408, type: !61)
!9371 = !DILocalVariable(name: "actual_size", scope: !9366, file: !1053, line: 410, type: !61)
!9372 = !DILocalVariable(name: "receive_size", scope: !9366, file: !1053, line: 410, type: !61)
!9373 = !DILocalVariable(name: "ch", scope: !9366, file: !1053, line: 411, type: !9252)
!9374 = !DILocation(line: 0, scope: !9366)
!9375 = !DILocation(line: 410, column: 5, scope: !9366)
!9376 = !DILocation(line: 413, column: 10, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9366, file: !1053, line: 413, column: 9)
!9378 = !DILocation(line: 413, column: 9, scope: !9366)
!9379 = !DILocation(line: 417, column: 17, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9366, file: !1053, line: 417, column: 9)
!9381 = !DILocation(line: 417, column: 26, scope: !9380)
!9382 = !DILocation(line: 421, column: 30, scope: !9366)
!9383 = !DILocation(line: 421, column: 5, scope: !9366)
!9384 = !DILocation(line: 422, column: 9, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9366, file: !1053, line: 422, column: 9)
!9386 = !DILocation(line: 422, column: 21, scope: !9385)
!9387 = !DILocation(line: 427, column: 5, scope: !9366)
!9388 = !DILocation(line: 429, column: 25, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9366, file: !1053, line: 429, column: 9)
!9390 = !DILocation(line: 429, column: 22, scope: !9389)
!9391 = !DILocation(line: 429, column: 9, scope: !9366)
!9392 = !DILocation(line: 430, column: 14, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !1053, line: 429, column: 38)
!9394 = !DILocation(line: 431, column: 9, scope: !9393)
!9395 = !DILocation(line: 432, column: 5, scope: !9393)
!9396 = !DILocation(line: 435, column: 1, scope: !9366)
!9397 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !1053, file: !1053, line: 438, type: !9323, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9398)
!9398 = !{!9399, !9400}
!9399 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9397, file: !1053, line: 438, type: !1161)
!9400 = !DILocalVariable(name: "length", scope: !9397, file: !1053, line: 440, type: !61)
!9401 = !DILocation(line: 0, scope: !9397)
!9402 = !DILocation(line: 440, column: 5, scope: !9397)
!9403 = !DILocation(line: 440, column: 14, scope: !9397)
!9404 = !DILocation(line: 442, column: 10, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9397, file: !1053, line: 442, column: 9)
!9406 = !DILocation(line: 442, column: 9, scope: !9397)
!9407 = !DILocation(line: 446, column: 30, scope: !9397)
!9408 = !DILocation(line: 446, column: 5, scope: !9397)
!9409 = !DILocation(line: 447, column: 12, scope: !9397)
!9410 = !DILocation(line: 447, column: 5, scope: !9397)
!9411 = !DILocation(line: 448, column: 1, scope: !9397)
!9412 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !1053, file: !1053, line: 451, type: !9323, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9413)
!9413 = !{!9414, !9415}
!9414 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9412, file: !1053, line: 451, type: !1161)
!9415 = !DILocalVariable(name: "length", scope: !9412, file: !1053, line: 453, type: !61)
!9416 = !DILocation(line: 0, scope: !9412)
!9417 = !DILocation(line: 453, column: 5, scope: !9412)
!9418 = !DILocation(line: 453, column: 14, scope: !9412)
!9419 = !DILocation(line: 455, column: 10, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9412, file: !1053, line: 455, column: 9)
!9421 = !DILocation(line: 455, column: 9, scope: !9412)
!9422 = !DILocation(line: 459, column: 30, scope: !9412)
!9423 = !DILocation(line: 459, column: 5, scope: !9412)
!9424 = !DILocation(line: 461, column: 12, scope: !9412)
!9425 = !DILocation(line: 461, column: 5, scope: !9412)
!9426 = !DILocation(line: 462, column: 1, scope: !9412)
!9427 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !1053, file: !1053, line: 543, type: !9428, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9430)
!9428 = !DISubroutineType(types: !9429)
!9429 = !{!9023, !1161, !1131, !51}
!9430 = !{!9431, !9432, !9433, !9434}
!9431 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9427, file: !1053, line: 543, type: !1161)
!9432 = !DILocalVariable(name: "user_callback", arg: 2, scope: !9427, file: !1053, line: 544, type: !1131)
!9433 = !DILocalVariable(name: "user_data", arg: 3, scope: !9427, file: !1053, line: 545, type: !51)
!9434 = !DILocalVariable(name: "ch", scope: !9427, file: !1053, line: 547, type: !9252)
!9435 = !DILocation(line: 0, scope: !9427)
!9436 = !DILocation(line: 549, column: 10, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9427, file: !1053, line: 549, column: 9)
!9438 = !DILocation(line: 549, column: 9, scope: !9427)
!9439 = !DILocation(line: 556, column: 53, scope: !9427)
!9440 = !DILocation(line: 556, column: 62, scope: !9427)
!9441 = !DILocation(line: 557, column: 53, scope: !9427)
!9442 = !DILocation(line: 557, column: 63, scope: !9427)
!9443 = !DILocation(line: 558, column: 37, scope: !9427)
!9444 = !DILocation(line: 558, column: 54, scope: !9427)
!9445 = !DILocation(line: 560, column: 39, scope: !9427)
!9446 = !DILocation(line: 561, column: 39, scope: !9427)
!9447 = !DILocation(line: 560, column: 5, scope: !9427)
!9448 = !DILocation(line: 562, column: 5, scope: !9427)
!9449 = !DILocation(line: 564, column: 44, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9427, file: !1053, line: 564, column: 9)
!9451 = !DILocation(line: 564, column: 9, scope: !9427)
!9452 = !DILocation(line: 565, column: 9, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9450, file: !1053, line: 564, column: 59)
!9454 = !DILocation(line: 566, column: 5, scope: !9453)
!9455 = !DILocation(line: 567, column: 9, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9450, file: !1053, line: 566, column: 12)
!9457 = !DILocation(line: 569, column: 10, scope: !9427)
!9458 = !DILocation(line: 570, column: 5, scope: !9427)
!9459 = !DILocation(line: 572, column: 5, scope: !9427)
!9460 = !DILocation(line: 572, column: 53, scope: !9427)
!9461 = !DILocation(line: 573, column: 35, scope: !9427)
!9462 = !DILocation(line: 573, column: 5, scope: !9427)
!9463 = !DILocation(line: 574, column: 5, scope: !9427)
!9464 = !DILocation(line: 575, column: 25, scope: !9427)
!9465 = !DILocation(line: 575, column: 5, scope: !9427)
!9466 = !DILocation(line: 578, column: 5, scope: !9427)
!9467 = !DILocation(line: 579, column: 1, scope: !9427)
!9468 = !DILocation(line: 0, scope: !1157)
!9469 = !DILocation(line: 539, column: 12, scope: !1157)
!9470 = !DILocation(line: 539, column: 5, scope: !1157)
!9471 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !1053, file: !1053, line: 511, type: !154, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9472)
!9472 = !{!9473}
!9473 = !DILocalVariable(name: "callback_context", scope: !9474, file: !1053, line: 514, type: !9476)
!9474 = distinct !DILexicalBlock(scope: !9475, file: !1053, line: 513, column: 60)
!9475 = distinct !DILexicalBlock(scope: !9471, file: !1053, line: 513, column: 9)
!9476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!9477 = !DILocation(line: 513, column: 42, scope: !9475)
!9478 = !DILocation(line: 513, column: 9, scope: !9471)
!9479 = !DILocation(line: 515, column: 39, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9474, file: !1053, line: 515, column: 13)
!9481 = !DILocation(line: 515, column: 18, scope: !9480)
!9482 = !DILocation(line: 515, column: 13, scope: !9474)
!9483 = !DILocation(line: 516, column: 89, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9480, file: !1053, line: 515, column: 49)
!9485 = !DILocation(line: 516, column: 13, scope: !9484)
!9486 = !DILocation(line: 517, column: 9, scope: !9484)
!9487 = !DILocation(line: 519, column: 32, scope: !9471)
!9488 = !DILocation(line: 519, column: 5, scope: !9471)
!9489 = !DILocation(line: 520, column: 1, scope: !9471)
!9490 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !1053, file: !1053, line: 523, type: !154, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9491)
!9491 = !{!9492}
!9492 = !DILocalVariable(name: "callback_context", scope: !9493, file: !1053, line: 526, type: !9476)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !1053, line: 525, column: 60)
!9494 = distinct !DILexicalBlock(scope: !9490, file: !1053, line: 525, column: 9)
!9495 = !DILocation(line: 525, column: 42, scope: !9494)
!9496 = !DILocation(line: 525, column: 9, scope: !9490)
!9497 = !DILocation(line: 527, column: 39, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9493, file: !1053, line: 527, column: 13)
!9499 = !DILocation(line: 527, column: 18, scope: !9498)
!9500 = !DILocation(line: 527, column: 13, scope: !9493)
!9501 = !DILocation(line: 528, column: 89, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9498, file: !1053, line: 527, column: 49)
!9503 = !DILocation(line: 528, column: 13, scope: !9502)
!9504 = !DILocation(line: 529, column: 9, scope: !9502)
!9505 = !DILocation(line: 531, column: 32, scope: !9490)
!9506 = !DILocation(line: 531, column: 5, scope: !9490)
!9507 = !DILocation(line: 532, column: 1, scope: !9490)
!9508 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !1053, file: !1053, line: 464, type: !9509, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9511)
!9509 = !DISubroutineType(types: !9510)
!9510 = !{null, !6991, !69}
!9511 = !{!9512, !9513, !9514, !9515, !9516, !9518}
!9512 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9508, file: !1053, line: 464, type: !6991)
!9513 = !DILocalVariable(name: "is_rx", arg: 2, scope: !9508, file: !1053, line: 464, type: !69)
!9514 = !DILocalVariable(name: "avail_size", scope: !9508, file: !1053, line: 466, type: !61)
!9515 = !DILocalVariable(name: "avail_space", scope: !9508, file: !1053, line: 466, type: !61)
!9516 = !DILocalVariable(name: "dma_config", scope: !9508, file: !1053, line: 467, type: !9517)
!9517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!9518 = !DILocalVariable(name: "ch", scope: !9508, file: !1053, line: 468, type: !9252)
!9519 = !DILocation(line: 0, scope: !9508)
!9520 = !DILocation(line: 466, column: 5, scope: !9508)
!9521 = !DILocation(line: 471, column: 9, scope: !9508)
!9522 = !DILocation(line: 472, column: 9, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !1053, line: 471, column: 16)
!9524 = distinct !DILexicalBlock(scope: !9508, file: !1053, line: 471, column: 9)
!9525 = !DILocation(line: 473, column: 13, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9523, file: !1053, line: 473, column: 13)
!9527 = !DILocation(line: 473, column: 39, scope: !9526)
!9528 = !DILocation(line: 473, column: 24, scope: !9526)
!9529 = !DILocation(line: 473, column: 13, scope: !9523)
!9530 = !DILocation(line: 478, column: 9, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9524, file: !1053, line: 477, column: 12)
!9532 = !DILocation(line: 479, column: 13, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9531, file: !1053, line: 479, column: 13)
!9534 = !DILocation(line: 479, column: 40, scope: !9533)
!9535 = !DILocation(line: 479, column: 77, scope: !9533)
!9536 = !DILocation(line: 479, column: 63, scope: !9533)
!9537 = !DILocation(line: 479, column: 25, scope: !9533)
!9538 = !DILocation(line: 479, column: 13, scope: !9531)
!9539 = !DILocation(line: 0, scope: !9524)
!9540 = !DILocation(line: 484, column: 1, scope: !9508)
!9541 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !1053, file: !1053, line: 486, type: !154, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9542)
!9542 = !{!9543}
!9543 = !DILocalVariable(name: "callback_context", scope: !9544, file: !1053, line: 490, type: !9476)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !1053, line: 489, column: 70)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !1053, line: 488, column: 9)
!9546 = !DILocation(line: 488, column: 43, scope: !9545)
!9547 = !DILocation(line: 488, column: 61, scope: !9545)
!9548 = !DILocation(line: 489, column: 14, scope: !9545)
!9549 = !DILocation(line: 489, column: 63, scope: !9545)
!9550 = !DILocation(line: 488, column: 9, scope: !9541)
!9551 = !DILocation(line: 491, column: 39, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9544, file: !1053, line: 491, column: 13)
!9553 = !DILocation(line: 491, column: 18, scope: !9552)
!9554 = !DILocation(line: 491, column: 13, scope: !9544)
!9555 = !DILocation(line: 492, column: 88, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9552, file: !1053, line: 491, column: 49)
!9557 = !DILocation(line: 492, column: 13, scope: !9556)
!9558 = !DILocation(line: 493, column: 9, scope: !9556)
!9559 = !DILocation(line: 495, column: 32, scope: !9541)
!9560 = !DILocation(line: 495, column: 5, scope: !9541)
!9561 = !DILocation(line: 496, column: 1, scope: !9541)
!9562 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !1053, file: !1053, line: 499, type: !154, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9563)
!9563 = !{!9564}
!9564 = !DILocalVariable(name: "callback_context", scope: !9565, file: !1053, line: 503, type: !9476)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !1053, line: 502, column: 70)
!9566 = distinct !DILexicalBlock(scope: !9562, file: !1053, line: 501, column: 9)
!9567 = !DILocation(line: 501, column: 43, scope: !9566)
!9568 = !DILocation(line: 501, column: 61, scope: !9566)
!9569 = !DILocation(line: 502, column: 14, scope: !9566)
!9570 = !DILocation(line: 502, column: 63, scope: !9566)
!9571 = !DILocation(line: 501, column: 9, scope: !9562)
!9572 = !DILocation(line: 504, column: 39, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9565, file: !1053, line: 504, column: 13)
!9574 = !DILocation(line: 504, column: 18, scope: !9573)
!9575 = !DILocation(line: 504, column: 13, scope: !9565)
!9576 = !DILocation(line: 505, column: 88, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !1053, line: 504, column: 49)
!9578 = !DILocation(line: 505, column: 13, scope: !9577)
!9579 = !DILocation(line: 506, column: 9, scope: !9577)
!9580 = !DILocation(line: 508, column: 32, scope: !9562)
!9581 = !DILocation(line: 508, column: 5, scope: !9562)
!9582 = !DILocation(line: 509, column: 1, scope: !9562)
!9583 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !1053, file: !1053, line: 582, type: !9584, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9586)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!9023, !1161, !1118}
!9586 = !{!9587, !9588}
!9587 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9583, file: !1053, line: 582, type: !1161)
!9588 = !DILocalVariable(name: "baudrate", arg: 2, scope: !9583, file: !1053, line: 582, type: !1118)
!9589 = !DILocation(line: 0, scope: !9583)
!9590 = !DILocation(line: 584, column: 11, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9583, file: !1053, line: 584, column: 9)
!9592 = !DILocation(line: 584, column: 46, scope: !9591)
!9593 = !DILocation(line: 588, column: 37, scope: !9583)
!9594 = !DILocation(line: 588, column: 50, scope: !9583)
!9595 = !DILocation(line: 588, column: 59, scope: !9583)
!9596 = !DILocation(line: 589, column: 12, scope: !9583)
!9597 = !DILocation(line: 589, column: 5, scope: !9583)
!9598 = !DILocation(line: 590, column: 1, scope: !9583)
!9599 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !1053, file: !1053, line: 608, type: !9600, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9604)
!9600 = !DISubroutineType(types: !9601)
!9601 = !{!9023, !1161, !9602}
!9602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9603, size: 32)
!9603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!9604 = !{!9605, !9606}
!9605 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9599, file: !1053, line: 608, type: !1161)
!9606 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !9599, file: !1053, line: 608, type: !9602)
!9607 = !DILocation(line: 0, scope: !9599)
!9608 = !DILocation(line: 610, column: 10, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9599, file: !1053, line: 610, column: 9)
!9610 = !DILocation(line: 610, column: 9, scope: !9599)
!9611 = !DILocation(line: 614, column: 10, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9599, file: !1053, line: 614, column: 9)
!9613 = !DILocation(line: 614, column: 9, scope: !9599)
!9614 = !DILocation(line: 618, column: 37, scope: !9599)
!9615 = !DILocation(line: 618, column: 56, scope: !9599)
!9616 = !DILocation(line: 619, column: 45, scope: !9599)
!9617 = !DILocation(line: 619, column: 12, scope: !9599)
!9618 = !DILocation(line: 620, column: 12, scope: !9599)
!9619 = !DILocation(line: 619, column: 5, scope: !9599)
!9620 = !DILocation(line: 621, column: 5, scope: !9599)
!9621 = !DILocation(line: 622, column: 5, scope: !9599)
!9622 = !DILocation(line: 623, column: 33, scope: !9599)
!9623 = !DILocation(line: 624, column: 50, scope: !9599)
!9624 = !DILocation(line: 625, column: 50, scope: !9599)
!9625 = !DILocation(line: 626, column: 50, scope: !9599)
!9626 = !DILocation(line: 627, column: 50, scope: !9599)
!9627 = !DILocation(line: 628, column: 33, scope: !9599)
!9628 = !DILocation(line: 623, column: 5, scope: !9599)
!9629 = !DILocation(line: 630, column: 50, scope: !9599)
!9630 = !DILocation(line: 631, column: 50, scope: !9599)
!9631 = !DILocation(line: 632, column: 50, scope: !9599)
!9632 = !DILocation(line: 629, column: 5, scope: !9599)
!9633 = !DILocation(line: 634, column: 5, scope: !9599)
!9634 = !DILocation(line: 635, column: 1, scope: !9599)
!9635 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !1053, file: !1053, line: 112, type: !9636, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9638)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{!69, !9602}
!9638 = !{!9639}
!9639 = !DILocalVariable(name: "dma_config", arg: 1, scope: !9635, file: !1053, line: 112, type: !9602)
!9640 = !DILocation(line: 0, scope: !9635)
!9641 = !DILocation(line: 114, column: 14, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9635, file: !1053, line: 114, column: 9)
!9643 = !DILocation(line: 114, column: 9, scope: !9635)
!9644 = !DILocation(line: 117, column: 29, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9635, file: !1053, line: 117, column: 9)
!9646 = !DILocation(line: 117, column: 14, scope: !9645)
!9647 = !DILocation(line: 117, column: 9, scope: !9635)
!9648 = !DILocation(line: 120, column: 21, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9635, file: !1053, line: 120, column: 9)
!9650 = !DILocation(line: 120, column: 61, scope: !9649)
!9651 = !DILocation(line: 120, column: 47, scope: !9649)
!9652 = !DILocation(line: 120, column: 9, scope: !9635)
!9653 = !DILocation(line: 123, column: 61, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9635, file: !1053, line: 123, column: 9)
!9655 = !DILocation(line: 123, column: 47, scope: !9654)
!9656 = !DILocation(line: 123, column: 9, scope: !9635)
!9657 = !DILocation(line: 126, column: 29, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9635, file: !1053, line: 126, column: 9)
!9659 = !DILocation(line: 126, column: 14, scope: !9658)
!9660 = !DILocation(line: 126, column: 9, scope: !9635)
!9661 = !DILocation(line: 129, column: 21, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9635, file: !1053, line: 129, column: 9)
!9663 = !DILocation(line: 129, column: 58, scope: !9662)
!9664 = !DILocation(line: 129, column: 44, scope: !9662)
!9665 = !DILocation(line: 129, column: 9, scope: !9635)
!9666 = !DILocation(line: 136, column: 1, scope: !9635)
!9667 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !1053, file: !1053, line: 182, type: !1042, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9668)
!9668 = !{!9669, !9670}
!9669 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !9667, file: !1053, line: 182, type: !61)
!9670 = !DILocalVariable(name: "ticks_per_us", scope: !9667, file: !1053, line: 184, type: !61)
!9671 = !DILocation(line: 0, scope: !9667)
!9672 = !DILocation(line: 186, column: 20, scope: !9667)
!9673 = !DILocation(line: 186, column: 39, scope: !9667)
!9674 = !DILocation(line: 188, column: 25, scope: !9667)
!9675 = !DILocation(line: 188, column: 5, scope: !9667)
!9676 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !1053, file: !1053, line: 637, type: !9174, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9677)
!9677 = !{!9678, !9679}
!9678 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9676, file: !1053, line: 637, type: !1161)
!9679 = !DILocalVariable(name: "int_no", scope: !9676, file: !1053, line: 639, type: !6991)
!9680 = !DILocation(line: 0, scope: !9676)
!9681 = !DILocation(line: 641, column: 10, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9676, file: !1053, line: 641, column: 9)
!9683 = !DILocation(line: 641, column: 9, scope: !9676)
!9684 = !DILocation(line: 645, column: 14, scope: !9676)
!9685 = !DILocation(line: 646, column: 5, scope: !9676)
!9686 = !DILocation(line: 648, column: 5, scope: !9676)
!9687 = !DILocation(line: 649, column: 1, scope: !9676)
!9688 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !1053, file: !1053, line: 651, type: !9689, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9691)
!9689 = !DISubroutineType(types: !9690)
!9690 = !{!9023, !1161, !54, !54, !54}
!9691 = !{!9692, !9693, !9694, !9695, !9696}
!9692 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9688, file: !1053, line: 651, type: !1161)
!9693 = !DILocalVariable(name: "xon", arg: 2, scope: !9688, file: !1053, line: 652, type: !54)
!9694 = !DILocalVariable(name: "xoff", arg: 3, scope: !9688, file: !1053, line: 653, type: !54)
!9695 = !DILocalVariable(name: "escape_character", arg: 4, scope: !9688, file: !1053, line: 654, type: !54)
!9696 = !DILocalVariable(name: "int_no", scope: !9688, file: !1053, line: 656, type: !6991)
!9697 = !DILocation(line: 0, scope: !9688)
!9698 = !DILocation(line: 658, column: 10, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9688, file: !1053, line: 658, column: 9)
!9700 = !DILocation(line: 658, column: 9, scope: !9688)
!9701 = !DILocation(line: 662, column: 14, scope: !9688)
!9702 = !DILocation(line: 663, column: 5, scope: !9688)
!9703 = !DILocation(line: 665, column: 5, scope: !9688)
!9704 = !DILocation(line: 666, column: 1, scope: !9688)
!9705 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !1053, file: !1053, line: 668, type: !9174, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9706)
!9706 = !{!9707, !9708}
!9707 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9705, file: !1053, line: 668, type: !1161)
!9708 = !DILocalVariable(name: "int_no", scope: !9705, file: !1053, line: 670, type: !6991)
!9709 = !DILocation(line: 0, scope: !9705)
!9710 = !DILocation(line: 672, column: 10, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9705, file: !1053, line: 672, column: 9)
!9712 = !DILocation(line: 672, column: 9, scope: !9705)
!9713 = !DILocation(line: 676, column: 14, scope: !9705)
!9714 = !DILocation(line: 677, column: 5, scope: !9705)
!9715 = !DILocation(line: 679, column: 5, scope: !9705)
!9716 = !DILocation(line: 680, column: 1, scope: !9705)
!9717 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !1053, file: !1053, line: 683, type: !9718, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9720)
!9718 = !DISubroutineType(types: !9719)
!9719 = !{!9023, !1161, !61}
!9720 = !{!9721, !9722}
!9721 = !DILocalVariable(name: "uart_port", arg: 1, scope: !9717, file: !1053, line: 683, type: !1161)
!9722 = !DILocalVariable(name: "timeout", arg: 2, scope: !9717, file: !1053, line: 683, type: !61)
!9723 = !DILocation(line: 0, scope: !9717)
!9724 = !DILocation(line: 685, column: 10, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9717, file: !1053, line: 685, column: 9)
!9726 = !DILocation(line: 685, column: 9, scope: !9717)
!9727 = !DILocation(line: 689, column: 19, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9717, file: !1053, line: 689, column: 9)
!9729 = !DILocation(line: 0, scope: !9728)
!9730 = !DILocation(line: 696, column: 1, scope: !9717)
!9731 = distinct !DISubprogram(name: "hal_dwt_reset", scope: !1169, file: !1169, line: 47, type: !154, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !2550)
!9732 = !DILocation(line: 49, column: 16, scope: !9731)
!9733 = !DILocation(line: 50, column: 16, scope: !9731)
!9734 = !DILocation(line: 51, column: 16, scope: !9731)
!9735 = !DILocation(line: 52, column: 16, scope: !9731)
!9736 = !DILocation(line: 53, column: 16, scope: !9731)
!9737 = !DILocation(line: 54, column: 16, scope: !9731)
!9738 = !DILocation(line: 55, column: 16, scope: !9731)
!9739 = !DILocation(line: 56, column: 16, scope: !9731)
!9740 = !DILocation(line: 57, column: 20, scope: !9731)
!9741 = !DILocation(line: 58, column: 20, scope: !9731)
!9742 = !DILocation(line: 59, column: 20, scope: !9731)
!9743 = !DILocation(line: 60, column: 20, scope: !9731)
!9744 = !DILocation(line: 61, column: 1, scope: !9731)
!9745 = distinct !DISubprogram(name: "hal_dwt_init", scope: !1169, file: !1169, line: 62, type: !154, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !2550)
!9746 = !DILocation(line: 70, column: 22, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9745, file: !1169, line: 70, column: 9)
!9748 = !DILocation(line: 70, column: 28, scope: !9747)
!9749 = !DILocation(line: 70, column: 9, scope: !9745)
!9750 = !DILocation(line: 72, column: 9, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9747, file: !1169, line: 70, column: 62)
!9752 = !DILocation(line: 75, column: 26, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9751, file: !1169, line: 75, column: 13)
!9754 = !DILocation(line: 75, column: 32, scope: !9753)
!9755 = !DILocation(line: 75, column: 13, scope: !9751)
!9756 = !DILocation(line: 76, column: 30, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9753, file: !1169, line: 75, column: 63)
!9758 = !DILocation(line: 77, column: 9, scope: !9757)
!9759 = !DILocation(line: 79, column: 28, scope: !9751)
!9760 = !DILocation(line: 79, column: 33, scope: !9751)
!9761 = !DILocation(line: 79, column: 21, scope: !9751)
!9762 = !DILocation(line: 83, column: 20, scope: !9751)
!9763 = !DILocation(line: 84, column: 20, scope: !9751)
!9764 = !DILocation(line: 85, column: 20, scope: !9751)
!9765 = !DILocation(line: 86, column: 20, scope: !9751)
!9766 = !DILocation(line: 92, column: 5, scope: !9751)
!9767 = !DILocation(line: 93, column: 1, scope: !9745)
!9768 = distinct !DISubprogram(name: "hal_dwt_request_watchpoint", scope: !1169, file: !1169, line: 120, type: !9769, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !9772)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{!355, !61, !61, !61, !9771}
!9771 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_FUNC_TYPE", file: !1172, line: 48, baseType: !1171)
!9772 = !{!9773, !9774, !9775, !9776, !9777}
!9773 = !DILocalVariable(name: "index", arg: 1, scope: !9768, file: !1169, line: 120, type: !61)
!9774 = !DILocalVariable(name: "addr_base", arg: 2, scope: !9768, file: !1169, line: 120, type: !61)
!9775 = !DILocalVariable(name: "addr_mask", arg: 3, scope: !9768, file: !1169, line: 120, type: !61)
!9776 = !DILocalVariable(name: "func", arg: 4, scope: !9768, file: !1169, line: 120, type: !9771)
!9777 = !DILocalVariable(name: "offset", scope: !9768, file: !1169, line: 122, type: !61)
!9778 = !DILocation(line: 0, scope: !9768)
!9779 = !DILocation(line: 129, column: 22, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9768, file: !1169, line: 129, column: 9)
!9781 = !DILocation(line: 129, column: 28, scope: !9780)
!9782 = !DILocation(line: 129, column: 9, scope: !9768)
!9783 = !DILocation(line: 131, column: 23, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9785, file: !1169, line: 131, column: 13)
!9785 = distinct !DILexicalBlock(scope: !9780, file: !1169, line: 129, column: 62)
!9786 = !DILocation(line: 131, column: 20, scope: !9784)
!9787 = !DILocation(line: 131, column: 36, scope: !9784)
!9788 = !DILocation(line: 135, column: 33, scope: !9785)
!9789 = !DILocation(line: 138, column: 23, scope: !9785)
!9790 = !DILocation(line: 138, column: 33, scope: !9785)
!9791 = !DILocation(line: 139, column: 23, scope: !9785)
!9792 = !DILocation(line: 139, column: 33, scope: !9785)
!9793 = !DILocation(line: 140, column: 58, scope: !9785)
!9794 = !DILocation(line: 140, column: 40, scope: !9785)
!9795 = !DILocation(line: 140, column: 68, scope: !9785)
!9796 = !DILocation(line: 140, column: 97, scope: !9785)
!9797 = !DILocation(line: 140, column: 37, scope: !9785)
!9798 = !DILocation(line: 142, column: 9, scope: !9785)
!9799 = !DILocation(line: 0, scope: !9780)
!9800 = !DILocation(line: 146, column: 1, scope: !9768)
!9801 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !1219, file: !1219, line: 178, type: !9802, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9804)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{!58}
!9804 = !{!9805}
!9805 = !DILocalVariable(name: "suspend_bit", scope: !9801, file: !1219, line: 181, type: !58)
!9806 = !DILocation(line: 0, scope: !9801)
!9807 = !DILocation(line: 182, column: 5, scope: !9801)
!9808 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !1219, file: !1219, line: 185, type: !9809, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !2550)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!484}
!9811 = !DILocation(line: 188, column: 4, scope: !9808)
!9812 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !1219, file: !1219, line: 191, type: !9809, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !2550)
!9813 = !DILocation(line: 194, column: 5, scope: !9812)
!9814 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !1219, file: !1219, line: 197, type: !9802, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9815)
!9815 = !{!9816}
!9816 = !DILocalVariable(name: "cmd", scope: !9814, file: !1219, line: 201, type: !58)
!9817 = !DILocation(line: 0, scope: !9814)
!9818 = !DILocation(line: 202, column: 5, scope: !9814)
!9819 = distinct !DISubprogram(name: "customer_flash_register", scope: !1219, file: !1219, line: 207, type: !9820, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !2550)
!9820 = !DISubroutineType(types: !9821)
!9821 = !{!1221}
!9822 = !DILocation(line: 209, column: 5, scope: !9819)
!9823 = distinct !DISubprogram(name: "gpio_mode_init", scope: !2484, file: !2484, line: 93, type: !154, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !9824)
!9824 = !{!9825, !9826}
!9825 = !DILocalVariable(name: "i", scope: !9823, file: !2484, line: 95, type: !61)
!9826 = !DILocalVariable(name: "mode_temp", scope: !9823, file: !2484, line: 98, type: !9827)
!9827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !9828)
!9828 = !{!9829}
!9829 = !DISubrange(count: 10)
!9830 = !DILocation(line: 98, column: 14, scope: !9823)
!9831 = !DILocation(line: 0, scope: !9823)
!9832 = !DILocation(line: 100, column: 5, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9823, file: !2484, line: 100, column: 5)
!9834 = !DILocation(line: 101, column: 9, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9836, file: !2484, line: 100, column: 50)
!9836 = distinct !DILexicalBlock(scope: !9833, file: !2484, line: 100, column: 5)
!9837 = !DILocation(line: 100, column: 46, scope: !9836)
!9838 = !DILocation(line: 100, column: 19, scope: !9836)
!9839 = distinct !{!9839, !9832, !9840}
!9840 = !DILocation(line: 103, column: 5, scope: !9833)
!9841 = !DILocation(line: 106, column: 1, scope: !9823)
!9842 = distinct !DISubprogram(name: "gpio_oe_init", scope: !2484, file: !2484, line: 114, type: !154, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !9843)
!9843 = !{!9844, !9845}
!9844 = !DILocalVariable(name: "i", scope: !9842, file: !2484, line: 116, type: !61)
!9845 = !DILocalVariable(name: "oe_temp", scope: !9842, file: !2484, line: 119, type: !9846)
!9846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 96, elements: !1627)
!9847 = !DILocation(line: 0, scope: !9842)
!9848 = !DILocation(line: 122, column: 9, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9850, file: !2484, line: 121, column: 48)
!9850 = distinct !DILexicalBlock(scope: !9851, file: !2484, line: 121, column: 5)
!9851 = distinct !DILexicalBlock(scope: !9842, file: !2484, line: 121, column: 5)
!9852 = !DILocation(line: 125, column: 1, scope: !9842)
!9853 = distinct !DISubprogram(name: "gpio_ies_init", scope: !2484, file: !2484, line: 133, type: !154, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !9854)
!9854 = !{!9855, !9856}
!9855 = !DILocalVariable(name: "i", scope: !9853, file: !2484, line: 135, type: !61)
!9856 = !DILocalVariable(name: "ies_temp", scope: !9853, file: !2484, line: 138, type: !9846)
!9857 = !DILocation(line: 0, scope: !9853)
!9858 = !DILocation(line: 141, column: 9, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9860, file: !2484, line: 140, column: 49)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !2484, line: 140, column: 5)
!9861 = distinct !DILexicalBlock(scope: !9853, file: !2484, line: 140, column: 5)
!9862 = !DILocation(line: 145, column: 33, scope: !9853)
!9863 = !DILocation(line: 146, column: 33, scope: !9853)
!9864 = !DILocation(line: 147, column: 33, scope: !9853)
!9865 = !DILocation(line: 150, column: 33, scope: !9853)
!9866 = !DILocation(line: 151, column: 33, scope: !9853)
!9867 = !DILocation(line: 152, column: 33, scope: !9853)
!9868 = !DILocation(line: 155, column: 35, scope: !9853)
!9869 = !DILocation(line: 156, column: 35, scope: !9853)
!9870 = !DILocation(line: 157, column: 35, scope: !9853)
!9871 = !DILocation(line: 160, column: 35, scope: !9853)
!9872 = !DILocation(line: 161, column: 35, scope: !9853)
!9873 = !DILocation(line: 162, column: 35, scope: !9853)
!9874 = !DILocation(line: 165, column: 35, scope: !9853)
!9875 = !DILocation(line: 166, column: 35, scope: !9853)
!9876 = !DILocation(line: 167, column: 35, scope: !9853)
!9877 = !DILocation(line: 170, column: 35, scope: !9853)
!9878 = !DILocation(line: 171, column: 35, scope: !9853)
!9879 = !DILocation(line: 172, column: 35, scope: !9853)
!9880 = !DILocation(line: 174, column: 1, scope: !9853)
!9881 = distinct !DISubprogram(name: "gpio_pull_up_init", scope: !2484, file: !2484, line: 182, type: !154, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !9882)
!9882 = !{!9883, !9884}
!9883 = !DILocalVariable(name: "i", scope: !9881, file: !2484, line: 184, type: !61)
!9884 = !DILocalVariable(name: "pull_up_temp", scope: !9881, file: !2484, line: 187, type: !9846)
!9885 = !DILocation(line: 0, scope: !9881)
!9886 = !DILocation(line: 190, column: 9, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !2484, line: 189, column: 53)
!9888 = distinct !DILexicalBlock(scope: !9889, file: !2484, line: 189, column: 5)
!9889 = distinct !DILexicalBlock(scope: !9881, file: !2484, line: 189, column: 5)
!9890 = !DILocation(line: 194, column: 33, scope: !9881)
!9891 = !DILocation(line: 202, column: 33, scope: !9881)
!9892 = !DILocation(line: 210, column: 35, scope: !9881)
!9893 = !DILocation(line: 218, column: 35, scope: !9881)
!9894 = !DILocation(line: 226, column: 35, scope: !9881)
!9895 = !DILocation(line: 234, column: 35, scope: !9881)
!9896 = !DILocation(line: 241, column: 1, scope: !9881)
!9897 = distinct !DISubprogram(name: "gpio_pull_down_init", scope: !2484, file: !2484, line: 250, type: !154, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !9898)
!9898 = !{!9899, !9900}
!9899 = !DILocalVariable(name: "i", scope: !9897, file: !2484, line: 252, type: !61)
!9900 = !DILocalVariable(name: "pull_down_temp", scope: !9897, file: !2484, line: 255, type: !9846)
!9901 = !DILocation(line: 0, scope: !9897)
!9902 = !DILocation(line: 258, column: 9, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !2484, line: 257, column: 55)
!9904 = distinct !DILexicalBlock(scope: !9905, file: !2484, line: 257, column: 5)
!9905 = distinct !DILexicalBlock(scope: !9897, file: !2484, line: 257, column: 5)
!9906 = !DILocation(line: 261, column: 1, scope: !9897)
!9907 = distinct !DISubprogram(name: "gpio_output_init", scope: !2484, file: !2484, line: 269, type: !154, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !9908)
!9908 = !{!9909, !9910}
!9909 = !DILocalVariable(name: "i", scope: !9907, file: !2484, line: 271, type: !61)
!9910 = !DILocalVariable(name: "output_temp", scope: !9907, file: !2484, line: 274, type: !9846)
!9911 = !DILocation(line: 0, scope: !9907)
!9912 = !DILocation(line: 277, column: 9, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9914, file: !2484, line: 276, column: 52)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !2484, line: 276, column: 5)
!9915 = distinct !DILexicalBlock(scope: !9907, file: !2484, line: 276, column: 5)
!9916 = !DILocation(line: 281, column: 1, scope: !9907)
!9917 = distinct !DISubprogram(name: "bsp_ept_gpio_set_control_by_cm4", scope: !2484, file: !2484, line: 289, type: !154, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !2550)
!9918 = !DILocation(line: 292, column: 39, scope: !9917)
!9919 = !DILocation(line: 293, column: 39, scope: !9917)
!9920 = !DILocation(line: 294, column: 39, scope: !9917)
!9921 = !DILocation(line: 295, column: 1, scope: !9917)
!9922 = distinct !DISubprogram(name: "bsp_ept_gpio_setting_init", scope: !2484, file: !2484, line: 302, type: !154, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !2550)
!9923 = !DILocation(line: 304, column: 5, scope: !9922)
!9924 = !DILocation(line: 305, column: 5, scope: !9922)
!9925 = !DILocation(line: 306, column: 5, scope: !9922)
!9926 = !DILocation(line: 307, column: 5, scope: !9922)
!9927 = !DILocation(line: 308, column: 5, scope: !9922)
!9928 = !DILocation(line: 309, column: 5, scope: !9922)
!9929 = !DILocation(line: 310, column: 1, scope: !9922)
!9930 = distinct !DISubprogram(name: "f_mount", scope: !1245, file: !1245, line: 3197, type: !9931, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9933)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{!1284, !1311, !1288, !1283}
!9933 = !{!9934, !9935, !9936, !9937, !9938, !9939, !9940}
!9934 = !DILocalVariable(name: "fs", arg: 1, scope: !9930, file: !1245, line: 3198, type: !1311)
!9935 = !DILocalVariable(name: "path", arg: 2, scope: !9930, file: !1245, line: 3199, type: !1288)
!9936 = !DILocalVariable(name: "opt", arg: 3, scope: !9930, file: !1245, line: 3200, type: !1283)
!9937 = !DILocalVariable(name: "cfs", scope: !9930, file: !1245, line: 3203, type: !1311)
!9938 = !DILocalVariable(name: "vol", scope: !9930, file: !1245, line: 3204, type: !7)
!9939 = !DILocalVariable(name: "res", scope: !9930, file: !1245, line: 3205, type: !1284)
!9940 = !DILocalVariable(name: "rp", scope: !9930, file: !1245, line: 3206, type: !1288)
!9941 = !DILocation(line: 0, scope: !9930)
!9942 = !DILocation(line: 3206, column: 2, scope: !9930)
!9943 = !DILocation(line: 3206, column: 15, scope: !9930)
!9944 = !DILocation(line: 3210, column: 8, scope: !9930)
!9945 = !DILocation(line: 3211, column: 10, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9930, file: !1245, line: 3211, column: 6)
!9947 = !DILocation(line: 3211, column: 6, scope: !9930)
!9948 = !DILocation(line: 3212, column: 8, scope: !9930)
!9949 = !DILocation(line: 3214, column: 6, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9930, file: !1245, line: 3214, column: 6)
!9951 = !DILocation(line: 3214, column: 6, scope: !9930)
!9952 = !DILocation(line: 3221, column: 8, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9950, file: !1245, line: 3214, column: 11)
!9954 = !DILocation(line: 3221, column: 16, scope: !9953)
!9955 = !DILocation(line: 3222, column: 2, scope: !9953)
!9956 = !DILocation(line: 3224, column: 6, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9930, file: !1245, line: 3224, column: 6)
!9958 = !DILocation(line: 3224, column: 6, scope: !9930)
!9959 = !DILocation(line: 3230, column: 13, scope: !9930)
!9960 = !DILocation(line: 3232, column: 10, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9930, file: !1245, line: 3232, column: 6)
!9962 = !DILocation(line: 3225, column: 7, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9957, file: !1245, line: 3224, column: 10)
!9964 = !DILocation(line: 3225, column: 15, scope: !9963)
!9965 = !DILocation(line: 3234, column: 8, scope: !9930)
!9966 = !DILocation(line: 3235, column: 2, scope: !9930)
!9967 = !DILocation(line: 3236, column: 1, scope: !9930)
!9968 = !DILocation(line: 0, scope: !1404)
!9969 = !DILocation(line: 2868, column: 6, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !1404, file: !1245, line: 2868, column: 6)
!9971 = !DILocation(line: 2868, column: 6, scope: !1404)
!9972 = !DILocation(line: 2869, column: 26, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !1245, line: 2869, column: 3)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !1245, line: 2869, column: 3)
!9975 = distinct !DILexicalBlock(scope: !9970, file: !1245, line: 2868, column: 13)
!9976 = !DILocation(line: 2869, column: 30, scope: !9973)
!9977 = !DILocation(line: 2869, column: 56, scope: !9973)
!9978 = !DILocation(line: 2869, column: 73, scope: !9973)
!9979 = distinct !{!9979, !9980, !9981}
!9980 = !DILocation(line: 2869, column: 3, scope: !9974)
!9981 = !DILocation(line: 2869, column: 77, scope: !9974)
!9982 = !DILocation(line: 2870, column: 7, scope: !9975)
!9983 = !DILocation(line: 2872, column: 8, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !1245, line: 2870, column: 19)
!9985 = distinct !DILexicalBlock(scope: !9975, file: !1245, line: 2870, column: 7)
!9986 = !DILocation(line: 2872, column: 14, scope: !9984)
!9987 = !DILocation(line: 2873, column: 10, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9984, file: !1245, line: 2873, column: 8)
!9989 = !DILocation(line: 2873, column: 15, scope: !9988)
!9990 = !DILocation(line: 2886, column: 11, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !1245, line: 2886, column: 11)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !1245, line: 2884, column: 9)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !1245, line: 2882, column: 8)
!9994 = distinct !DILexicalBlock(scope: !9988, file: !1245, line: 2880, column: 10)
!9995 = !DILocation(line: 2887, column: 17, scope: !9993)
!9996 = !DILocation(line: 2887, column: 6, scope: !9992)
!9997 = distinct !{!9997, !9998, !9999}
!9998 = !DILocation(line: 2884, column: 6, scope: !9993)
!9999 = !DILocation(line: 2887, column: 34, scope: !9993)
!10000 = !DILocation(line: 2874, column: 11, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !10002, file: !1245, line: 2874, column: 9)
!10002 = distinct !DILexicalBlock(scope: !9988, file: !1245, line: 2873, column: 28)
!10003 = !DILocation(line: 2874, column: 9, scope: !10002)
!10004 = !DILocation(line: 2885, column: 26, scope: !9992)
!10005 = !DILocation(line: 2885, column: 14, scope: !9992)
!10006 = !DILocation(line: 2885, column: 23, scope: !9992)
!10007 = !DILocation(line: 2885, column: 11, scope: !9992)
!10008 = !DILocation(line: 2887, column: 15, scope: !9993)
!10009 = !DILocation(line: 0, scope: !9993)
!10010 = !DILocation(line: 2888, column: 17, scope: !9994)
!10011 = !DILocation(line: 0, scope: !9988)
!10012 = !DILocation(line: 2904, column: 1, scope: !1404)
!10013 = distinct !DISubprogram(name: "find_volume", scope: !1245, file: !1245, line: 2942, type: !10014, scopeLine: 2947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10017)
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!1284, !1287, !10016, !1283}
!10016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!10017 = !{!10018, !10019, !10020, !10021, !10022, !10023, !10024, !10025, !10026, !10027, !10028, !10029, !10030, !10031, !10033, !10034, !10035}
!10018 = !DILocalVariable(name: "path", arg: 1, scope: !10013, file: !1245, line: 2943, type: !1287)
!10019 = !DILocalVariable(name: "rfs", arg: 2, scope: !10013, file: !1245, line: 2944, type: !10016)
!10020 = !DILocalVariable(name: "mode", arg: 3, scope: !10013, file: !1245, line: 2945, type: !1283)
!10021 = !DILocalVariable(name: "fmt", scope: !10013, file: !1245, line: 2948, type: !1283)
!10022 = !DILocalVariable(name: "pt", scope: !10013, file: !1245, line: 2948, type: !1282)
!10023 = !DILocalVariable(name: "vol", scope: !10013, file: !1245, line: 2949, type: !7)
!10024 = !DILocalVariable(name: "stat", scope: !10013, file: !1245, line: 2950, type: !1397)
!10025 = !DILocalVariable(name: "bsect", scope: !10013, file: !1245, line: 2951, type: !1279)
!10026 = !DILocalVariable(name: "fasize", scope: !10013, file: !1245, line: 2951, type: !1279)
!10027 = !DILocalVariable(name: "tsect", scope: !10013, file: !1245, line: 2951, type: !1279)
!10028 = !DILocalVariable(name: "sysect", scope: !10013, file: !1245, line: 2951, type: !1279)
!10029 = !DILocalVariable(name: "nclst", scope: !10013, file: !1245, line: 2951, type: !1279)
!10030 = !DILocalVariable(name: "szbfat", scope: !10013, file: !1245, line: 2951, type: !1279)
!10031 = !DILocalVariable(name: "br", scope: !10013, file: !1245, line: 2951, type: !10032)
!10032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1279, size: 128, elements: !346)
!10033 = !DILocalVariable(name: "nrsv", scope: !10013, file: !1245, line: 2952, type: !1292)
!10034 = !DILocalVariable(name: "fs", scope: !10013, file: !1245, line: 2953, type: !1311)
!10035 = !DILocalVariable(name: "i", scope: !10013, file: !1245, line: 2954, type: !1281)
!10036 = !DILocation(line: 0, scope: !10013)
!10037 = !DILocation(line: 2951, column: 2, scope: !10013)
!10038 = !DILocation(line: 2951, column: 53, scope: !10013)
!10039 = !DILocation(line: 2958, column: 7, scope: !10013)
!10040 = !DILocation(line: 2959, column: 8, scope: !10013)
!10041 = !DILocation(line: 2960, column: 10, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 2960, column: 6)
!10043 = !DILocation(line: 2960, column: 6, scope: !10013)
!10044 = !DILocation(line: 2963, column: 7, scope: !10013)
!10045 = !DILocation(line: 2964, column: 7, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 2964, column: 6)
!10047 = !DILocation(line: 2964, column: 6, scope: !10013)
!10048 = !DILocation(line: 2967, column: 7, scope: !10013)
!10049 = !DILocation(line: 2969, column: 7, scope: !10013)
!10050 = !DILocation(line: 2970, column: 10, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 2970, column: 6)
!10052 = !DILocation(line: 2970, column: 6, scope: !10051)
!10053 = !DILocation(line: 2970, column: 6, scope: !10013)
!10054 = !DILocation(line: 2971, column: 26, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !1245, line: 2970, column: 19)
!10056 = !DILocation(line: 2971, column: 10, scope: !10055)
!10057 = !DILocation(line: 2972, column: 9, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10055, file: !1245, line: 2972, column: 7)
!10059 = !DILocation(line: 2972, column: 14, scope: !10058)
!10060 = !DILocation(line: 2972, column: 7, scope: !10055)
!10061 = !DILocation(line: 2973, column: 25, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !1245, line: 2973, column: 8)
!10063 = distinct !DILexicalBlock(scope: !10058, file: !1245, line: 2972, column: 29)
!10064 = !DILocation(line: 2973, column: 30, scope: !10062)
!10065 = !DILocation(line: 2983, column: 14, scope: !10013)
!10066 = !DILocation(line: 2984, column: 12, scope: !10013)
!10067 = !DILocation(line: 2984, column: 6, scope: !10013)
!10068 = !DILocation(line: 2984, column: 10, scope: !10013)
!10069 = !DILocation(line: 2985, column: 9, scope: !10013)
!10070 = !DILocation(line: 2986, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 2986, column: 6)
!10072 = !DILocation(line: 2986, column: 11, scope: !10071)
!10073 = !DILocation(line: 2986, column: 6, scope: !10013)
!10074 = !DILocation(line: 2989, column: 23, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 2989, column: 6)
!10076 = !DILocation(line: 2989, column: 28, scope: !10075)
!10077 = !DILocation(line: 2998, column: 8, scope: !10013)
!10078 = !DILocation(line: 2999, column: 10, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 2999, column: 6)
!10080 = !DILocation(line: 2999, column: 15, scope: !10079)
!10081 = !DILocation(line: 3001, column: 34, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !1245, line: 3000, column: 27)
!10083 = distinct !DILexicalBlock(scope: !10084, file: !1245, line: 3000, column: 3)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !1245, line: 3000, column: 3)
!10085 = distinct !DILexicalBlock(scope: !10079, file: !1245, line: 2999, column: 48)
!10086 = !DILocation(line: 3001, column: 30, scope: !10082)
!10087 = !DILocation(line: 3001, column: 17, scope: !10082)
!10088 = !DILocation(line: 3002, column: 12, scope: !10082)
!10089 = !DILocation(line: 3002, column: 41, scope: !10082)
!10090 = !DILocation(line: 3002, column: 29, scope: !10082)
!10091 = !DILocation(line: 3002, column: 4, scope: !10082)
!10092 = !DILocation(line: 3002, column: 10, scope: !10082)
!10093 = !DILocation(line: 3000, column: 23, scope: !10083)
!10094 = !DILocation(line: 3000, column: 17, scope: !10083)
!10095 = !DILocation(line: 3000, column: 3, scope: !10084)
!10096 = distinct !{!10096, !10095, !10097}
!10097 = !DILocation(line: 3003, column: 3, scope: !10084)
!10098 = !DILocation(line: 0, scope: !10085)
!10099 = !DILocation(line: 3007, column: 12, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10085, file: !1245, line: 3006, column: 6)
!10101 = !DILocation(line: 3008, column: 10, scope: !10100)
!10102 = !DILocation(line: 3008, column: 18, scope: !10100)
!10103 = !DILocation(line: 3009, column: 31, scope: !10085)
!10104 = !DILocation(line: 3009, column: 36, scope: !10085)
!10105 = distinct !{!10105, !10106, !10107}
!10106 = !DILocation(line: 3006, column: 3, scope: !10085)
!10107 = !DILocation(line: 3009, column: 46, scope: !10085)
!10108 = !DILocation(line: 3011, column: 10, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 3011, column: 6)
!10110 = !DILocation(line: 3011, column: 6, scope: !10013)
!10111 = !DILocation(line: 3012, column: 10, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 3012, column: 6)
!10113 = !DILocation(line: 3012, column: 6, scope: !10013)
!10114 = !DILocation(line: 3063, column: 15, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3063, column: 7)
!10116 = distinct !DILexicalBlock(scope: !10013, file: !1245, line: 3062, column: 2)
!10117 = !DILocation(line: 3063, column: 23, scope: !10115)
!10118 = !DILocation(line: 3063, column: 7, scope: !10115)
!10119 = !DILocation(line: 3063, column: 41, scope: !10115)
!10120 = !DILocation(line: 3063, column: 7, scope: !10116)
!10121 = !DILocation(line: 3065, column: 28, scope: !10116)
!10122 = !DILocation(line: 3065, column: 12, scope: !10116)
!10123 = !DILocation(line: 3066, column: 14, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3066, column: 7)
!10125 = !DILocation(line: 3066, column: 7, scope: !10116)
!10126 = !DILocation(line: 3066, column: 46, scope: !10124)
!10127 = !DILocation(line: 3066, column: 29, scope: !10124)
!10128 = !DILocation(line: 3066, column: 20, scope: !10124)
!10129 = !DILocation(line: 0, scope: !10116)
!10130 = !DILocation(line: 3067, column: 7, scope: !10116)
!10131 = !DILocation(line: 3067, column: 13, scope: !10116)
!10132 = !DILocation(line: 3069, column: 16, scope: !10116)
!10133 = !DILocation(line: 3069, column: 7, scope: !10116)
!10134 = !DILocation(line: 3069, column: 14, scope: !10116)
!10135 = !DILocation(line: 3070, column: 23, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3070, column: 7)
!10137 = !DILocation(line: 3071, column: 13, scope: !10116)
!10138 = !DILocation(line: 3071, column: 10, scope: !10116)
!10139 = !DILocation(line: 3073, column: 15, scope: !10116)
!10140 = !DILocation(line: 3073, column: 7, scope: !10116)
!10141 = !DILocation(line: 3073, column: 13, scope: !10116)
!10142 = !{i8 0, i8 9}
!10143 = !DILocation(line: 3074, column: 22, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3074, column: 7)
!10145 = !DILocation(line: 3076, column: 35, scope: !10116)
!10146 = !DILocation(line: 3076, column: 19, scope: !10116)
!10147 = !DILocation(line: 3076, column: 7, scope: !10116)
!10148 = !DILocation(line: 3076, column: 17, scope: !10116)
!10149 = !DILocation(line: 3077, column: 21, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3077, column: 7)
!10151 = !DILocation(line: 3077, column: 7, scope: !10116)
!10152 = !DILocation(line: 3079, column: 27, scope: !10116)
!10153 = !DILocation(line: 3079, column: 11, scope: !10116)
!10154 = !DILocation(line: 3080, column: 13, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3080, column: 7)
!10156 = !DILocation(line: 3080, column: 7, scope: !10116)
!10157 = !DILocation(line: 3080, column: 44, scope: !10155)
!10158 = !DILocation(line: 3080, column: 27, scope: !10155)
!10159 = !DILocation(line: 3080, column: 19, scope: !10155)
!10160 = !DILocation(line: 3082, column: 26, scope: !10116)
!10161 = !DILocation(line: 3082, column: 10, scope: !10116)
!10162 = !DILocation(line: 3083, column: 7, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3083, column: 7)
!10164 = !DILocation(line: 3083, column: 12, scope: !10163)
!10165 = !DILocation(line: 3083, column: 7, scope: !10116)
!10166 = !DILocation(line: 3086, column: 42, scope: !10116)
!10167 = !DILocation(line: 3086, column: 17, scope: !10116)
!10168 = !DILocation(line: 3086, column: 26, scope: !10116)
!10169 = !DILocation(line: 3087, column: 13, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3087, column: 7)
!10171 = !DILocation(line: 3087, column: 7, scope: !10116)
!10172 = !DILocation(line: 3088, column: 18, scope: !10116)
!10173 = !DILocation(line: 3088, column: 30, scope: !10116)
!10174 = !DILocation(line: 3088, column: 28, scope: !10116)
!10175 = !DILocation(line: 3089, column: 13, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3089, column: 7)
!10177 = !DILocation(line: 3089, column: 7, scope: !10116)
!10178 = !DILocation(line: 3091, column: 13, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3091, column: 7)
!10180 = !DILocation(line: 3091, column: 7, scope: !10116)
!10181 = !DILocation(line: 3092, column: 13, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3092, column: 7)
!10183 = !DILocation(line: 3092, column: 7, scope: !10116)
!10184 = !DILocation(line: 3095, column: 24, scope: !10116)
!10185 = !DILocation(line: 3095, column: 7, scope: !10116)
!10186 = !DILocation(line: 3095, column: 16, scope: !10116)
!10187 = !DILocation(line: 3096, column: 7, scope: !10116)
!10188 = !DILocation(line: 3096, column: 15, scope: !10116)
!10189 = !DILocation(line: 3097, column: 23, scope: !10116)
!10190 = !DILocation(line: 3097, column: 7, scope: !10116)
!10191 = !DILocation(line: 3097, column: 15, scope: !10116)
!10192 = !DILocation(line: 3098, column: 24, scope: !10116)
!10193 = !DILocation(line: 3098, column: 7, scope: !10116)
!10194 = !DILocation(line: 3098, column: 16, scope: !10116)
!10195 = !DILocation(line: 3099, column: 11, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3099, column: 7)
!10197 = !DILocation(line: 3099, column: 7, scope: !10116)
!10198 = !DILocation(line: 3100, column: 24, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10200, file: !1245, line: 3100, column: 8)
!10200 = distinct !DILexicalBlock(scope: !10196, file: !1245, line: 3099, column: 24)
!10201 = !DILocation(line: 3100, column: 8, scope: !10199)
!10202 = !DILocation(line: 3100, column: 39, scope: !10199)
!10203 = !DILocation(line: 3100, column: 8, scope: !10200)
!10204 = !DILocation(line: 3105, column: 22, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10206, file: !1245, line: 3105, column: 8)
!10206 = distinct !DILexicalBlock(scope: !10196, file: !1245, line: 3104, column: 10)
!10207 = !DILocation(line: 3105, column: 8, scope: !10206)
!10208 = !DILocation(line: 3106, column: 30, scope: !10206)
!10209 = !DILocation(line: 3106, column: 8, scope: !10206)
!10210 = !DILocation(line: 3106, column: 16, scope: !10206)
!10211 = !DILocation(line: 3107, column: 18, scope: !10206)
!10212 = !DILocation(line: 3107, column: 13, scope: !10206)
!10213 = !DILocation(line: 3110, column: 27, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3110, column: 7)
!10215 = !DILocation(line: 3110, column: 43, scope: !10214)
!10216 = !DILocation(line: 3110, column: 17, scope: !10214)
!10217 = !DILocation(line: 3110, column: 7, scope: !10116)
!10218 = !DILocation(line: 3102, column: 35, scope: !10200)
!10219 = !DILocation(line: 3102, column: 18, scope: !10200)
!10220 = !DILocation(line: 3102, column: 8, scope: !10200)
!10221 = !DILocation(line: 3102, column: 16, scope: !10200)
!10222 = !DILocation(line: 3103, column: 26, scope: !10200)
!10223 = !DILocation(line: 3114, column: 23, scope: !10116)
!10224 = !DILocation(line: 3114, column: 33, scope: !10116)
!10225 = !DILocation(line: 3114, column: 7, scope: !10116)
!10226 = !DILocation(line: 3114, column: 17, scope: !10116)
!10227 = !DILocation(line: 3115, column: 7, scope: !10116)
!10228 = !DILocation(line: 3115, column: 16, scope: !10116)
!10229 = !DILocation(line: 3118, column: 4, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10116, file: !1245, line: 3117, column: 7)
!10231 = !DILocation(line: 3118, column: 23, scope: !10230)
!10232 = !DILocation(line: 3118, column: 7, scope: !10230)
!10233 = !DILocation(line: 3118, column: 39, scope: !10230)
!10234 = !DILocation(line: 3119, column: 4, scope: !10230)
!10235 = !DILocation(line: 3119, column: 29, scope: !10230)
!10236 = !DILocation(line: 3119, column: 7, scope: !10230)
!10237 = !DILocation(line: 3119, column: 34, scope: !10230)
!10238 = !DILocation(line: 3117, column: 7, scope: !10116)
!10239 = !DILocation(line: 3121, column: 17, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10230, file: !1245, line: 3120, column: 3)
!10241 = !DILocation(line: 3122, column: 24, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10240, file: !1245, line: 3122, column: 8)
!10243 = !DILocation(line: 3122, column: 8, scope: !10242)
!10244 = !DILocation(line: 3122, column: 35, scope: !10242)
!10245 = !DILocation(line: 3123, column: 5, scope: !10242)
!10246 = !DILocation(line: 3123, column: 8, scope: !10242)
!10247 = !DILocation(line: 3123, column: 40, scope: !10242)
!10248 = !DILocation(line: 3124, column: 5, scope: !10242)
!10249 = !DILocation(line: 3124, column: 25, scope: !10242)
!10250 = !DILocation(line: 3124, column: 8, scope: !10242)
!10251 = !DILocation(line: 3124, column: 41, scope: !10242)
!10252 = !DILocation(line: 3122, column: 8, scope: !10240)
!10253 = !DILocation(line: 3127, column: 38, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10242, file: !1245, line: 3125, column: 4)
!10255 = !DILocation(line: 3127, column: 21, scope: !10254)
!10256 = !DILocation(line: 3127, column: 19, scope: !10254)
!10257 = !DILocation(line: 3130, column: 38, scope: !10254)
!10258 = !DILocation(line: 3130, column: 21, scope: !10254)
!10259 = !DILocation(line: 3130, column: 19, scope: !10254)
!10260 = !DILocation(line: 3132, column: 4, scope: !10254)
!10261 = !DILocation(line: 3138, column: 14, scope: !10013)
!10262 = !DILocation(line: 3139, column: 11, scope: !10013)
!10263 = !DILocation(line: 3139, column: 6, scope: !10013)
!10264 = !DILocation(line: 3139, column: 9, scope: !10013)
!10265 = !DILocation(line: 3147, column: 6, scope: !10013)
!10266 = !DILocation(line: 3147, column: 11, scope: !10013)
!10267 = !DILocation(line: 3152, column: 2, scope: !10013)
!10268 = !DILocation(line: 3153, column: 1, scope: !10013)
!10269 = distinct !DISubprogram(name: "check_fs", scope: !1245, file: !1245, line: 2914, type: !10270, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10272)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!1283, !1311, !1279}
!10272 = !{!10273, !10274}
!10273 = !DILocalVariable(name: "fs", arg: 1, scope: !10269, file: !1245, line: 2915, type: !1311)
!10274 = !DILocalVariable(name: "sect", arg: 2, scope: !10269, file: !1245, line: 2916, type: !1279)
!10275 = !DILocation(line: 0, scope: !10269)
!10276 = !DILocation(line: 2919, column: 6, scope: !10269)
!10277 = !DILocation(line: 2919, column: 12, scope: !10269)
!10278 = !DILocation(line: 2919, column: 21, scope: !10269)
!10279 = !DILocation(line: 2919, column: 29, scope: !10269)
!10280 = !DILocation(line: 2920, column: 6, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10269, file: !1245, line: 2920, column: 6)
!10282 = !DILocation(line: 2920, column: 28, scope: !10281)
!10283 = !DILocation(line: 2920, column: 6, scope: !10269)
!10284 = !DILocation(line: 2922, column: 22, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10269, file: !1245, line: 2922, column: 6)
!10286 = !DILocation(line: 2922, column: 6, scope: !10285)
!10287 = !DILocation(line: 2922, column: 33, scope: !10285)
!10288 = !DILocation(line: 2922, column: 6, scope: !10269)
!10289 = !DILocation(line: 2922, column: 14, scope: !10285)
!10290 = !DILocation(line: 2924, column: 6, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10269, file: !1245, line: 2924, column: 6)
!10292 = !DILocation(line: 2924, column: 34, scope: !10291)
!10293 = !DILocation(line: 2924, column: 69, scope: !10291)
!10294 = !DILocation(line: 2924, column: 93, scope: !10291)
!10295 = !DILocation(line: 2924, column: 6, scope: !10269)
!10296 = !DILocation(line: 2925, column: 25, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !1245, line: 2925, column: 7)
!10298 = distinct !DILexicalBlock(scope: !10291, file: !1245, line: 2924, column: 103)
!10299 = !DILocation(line: 2925, column: 8, scope: !10297)
!10300 = !DILocation(line: 2925, column: 42, scope: !10297)
!10301 = !DILocation(line: 2925, column: 54, scope: !10297)
!10302 = !DILocation(line: 2925, column: 7, scope: !10298)
!10303 = !DILocation(line: 2926, column: 24, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10298, file: !1245, line: 2926, column: 7)
!10305 = !DILocation(line: 2926, column: 7, scope: !10304)
!10306 = !DILocation(line: 2926, column: 43, scope: !10304)
!10307 = !DILocation(line: 2926, column: 7, scope: !10298)
!10308 = !DILocation(line: 2931, column: 2, scope: !10269)
!10309 = !DILocation(line: 2932, column: 1, scope: !10269)
!10310 = distinct !DISubprogram(name: "ld_dword", scope: !1245, file: !1245, line: 612, type: !10311, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10313)
!10311 = !DISubroutineType(types: !10312)
!10312 = !{!1279, !1285}
!10313 = !{!10314, !10315}
!10314 = !DILocalVariable(name: "ptr", arg: 1, scope: !10310, file: !1245, line: 612, type: !1285)
!10315 = !DILocalVariable(name: "rv", scope: !10310, file: !1245, line: 614, type: !1279)
!10316 = !DILocation(line: 0, scope: !10310)
!10317 = !DILocation(line: 616, column: 7, scope: !10310)
!10318 = !DILocation(line: 617, column: 17, scope: !10310)
!10319 = !DILocation(line: 618, column: 10, scope: !10310)
!10320 = !DILocation(line: 618, column: 17, scope: !10310)
!10321 = !DILocation(line: 618, column: 15, scope: !10310)
!10322 = !DILocation(line: 619, column: 10, scope: !10310)
!10323 = !DILocation(line: 619, column: 17, scope: !10310)
!10324 = !DILocation(line: 619, column: 15, scope: !10310)
!10325 = !DILocation(line: 620, column: 2, scope: !10310)
!10326 = distinct !DISubprogram(name: "ld_word", scope: !1245, file: !1245, line: 602, type: !10327, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10329)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{!1292, !1285}
!10329 = !{!10330, !10331}
!10330 = !DILocalVariable(name: "ptr", arg: 1, scope: !10326, file: !1245, line: 602, type: !1285)
!10331 = !DILocalVariable(name: "rv", scope: !10326, file: !1245, line: 604, type: !1292)
!10332 = !DILocation(line: 0, scope: !10326)
!10333 = !DILocation(line: 606, column: 7, scope: !10326)
!10334 = !DILocation(line: 607, column: 7, scope: !10326)
!10335 = !DILocation(line: 607, column: 10, scope: !10326)
!10336 = !DILocation(line: 607, column: 17, scope: !10326)
!10337 = !DILocation(line: 607, column: 15, scope: !10326)
!10338 = !DILocation(line: 608, column: 2, scope: !10326)
!10339 = distinct !DISubprogram(name: "move_window", scope: !1245, file: !1245, line: 897, type: !10340, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10342)
!10340 = !DISubroutineType(types: !10341)
!10341 = !{!1284, !1311, !1279}
!10342 = !{!10343, !10344, !10345}
!10343 = !DILocalVariable(name: "fs", arg: 1, scope: !10339, file: !1245, line: 898, type: !1311)
!10344 = !DILocalVariable(name: "sector", arg: 2, scope: !10339, file: !1245, line: 899, type: !1279)
!10345 = !DILocalVariable(name: "res", scope: !10339, file: !1245, line: 902, type: !1284)
!10346 = !DILocation(line: 0, scope: !10339)
!10347 = !DILocation(line: 905, column: 20, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10339, file: !1245, line: 905, column: 6)
!10349 = !DILocation(line: 905, column: 13, scope: !10348)
!10350 = !DILocation(line: 905, column: 6, scope: !10339)
!10351 = !DILocation(line: 907, column: 9, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10348, file: !1245, line: 905, column: 29)
!10353 = !DILocation(line: 909, column: 11, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10352, file: !1245, line: 909, column: 7)
!10355 = !DILocation(line: 909, column: 7, scope: !10352)
!10356 = !DILocation(line: 910, column: 22, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10358, file: !1245, line: 910, column: 8)
!10358 = distinct !DILexicalBlock(scope: !10354, file: !1245, line: 909, column: 21)
!10359 = !DILocation(line: 910, column: 27, scope: !10357)
!10360 = !DILocation(line: 910, column: 8, scope: !10357)
!10361 = !DILocation(line: 910, column: 47, scope: !10357)
!10362 = !DILocation(line: 910, column: 8, scope: !10358)
!10363 = !DILocation(line: 914, column: 16, scope: !10358)
!10364 = !DILocation(line: 915, column: 3, scope: !10358)
!10365 = !DILocation(line: 917, column: 2, scope: !10339)
!10366 = distinct !DISubprogram(name: "sync_window", scope: !1245, file: !1245, line: 868, type: !10367, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10369)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{!1284, !1311}
!10369 = !{!10370, !10371, !10372, !10373}
!10370 = !DILocalVariable(name: "fs", arg: 1, scope: !10366, file: !1245, line: 869, type: !1311)
!10371 = !DILocalVariable(name: "wsect", scope: !10366, file: !1245, line: 872, type: !1279)
!10372 = !DILocalVariable(name: "nf", scope: !10366, file: !1245, line: 873, type: !1281)
!10373 = !DILocalVariable(name: "res", scope: !10366, file: !1245, line: 874, type: !1284)
!10374 = !DILocation(line: 0, scope: !10366)
!10375 = !DILocation(line: 877, column: 10, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10366, file: !1245, line: 877, column: 6)
!10377 = !DILocation(line: 877, column: 6, scope: !10376)
!10378 = !DILocation(line: 877, column: 6, scope: !10366)
!10379 = !DILocation(line: 878, column: 15, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10376, file: !1245, line: 877, column: 17)
!10381 = !DILocation(line: 879, column: 22, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10380, file: !1245, line: 879, column: 7)
!10383 = !DILocation(line: 879, column: 27, scope: !10382)
!10384 = !DILocation(line: 879, column: 7, scope: !10382)
!10385 = !DILocation(line: 879, column: 46, scope: !10382)
!10386 = !DILocation(line: 879, column: 7, scope: !10380)
!10387 = !DILocation(line: 882, column: 14, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10382, file: !1245, line: 881, column: 10)
!10389 = !DILocation(line: 883, column: 20, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10388, file: !1245, line: 883, column: 8)
!10391 = !DILocation(line: 883, column: 14, scope: !10390)
!10392 = !DILocation(line: 883, column: 34, scope: !10390)
!10393 = !DILocation(line: 883, column: 28, scope: !10390)
!10394 = !DILocation(line: 883, column: 8, scope: !10388)
!10395 = !DILocation(line: 884, column: 19, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10397, file: !1245, line: 884, column: 5)
!10397 = distinct !DILexicalBlock(scope: !10390, file: !1245, line: 883, column: 41)
!10398 = !DILocation(line: 884, column: 30, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10396, file: !1245, line: 884, column: 5)
!10400 = !DILocation(line: 884, column: 5, scope: !10396)
!10401 = !DILocation(line: 884, column: 15, scope: !10396)
!10402 = !DILocation(line: 885, column: 12, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10399, file: !1245, line: 884, column: 42)
!10404 = !DILocation(line: 886, column: 21, scope: !10403)
!10405 = !DILocation(line: 886, column: 6, scope: !10403)
!10406 = !DILocation(line: 884, column: 38, scope: !10399)
!10407 = distinct !{!10407, !10400, !10408}
!10408 = !DILocation(line: 887, column: 5, scope: !10396)
!10409 = !DILocation(line: 885, column: 19, scope: !10403)
!10410 = !DILocation(line: 891, column: 2, scope: !10366)
!10411 = distinct !DISubprogram(name: "f_open", scope: !1245, file: !1245, line: 3245, type: !10412, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10428)
!10412 = !DISubroutineType(types: !10413)
!10413 = !{!1284, !10414, !1288, !1283}
!10414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10415, size: 32)
!10415 = !DIDerivedType(tag: DW_TAG_typedef, name: "FIL", file: !1248, line: 178, baseType: !10416)
!10416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 161, size: 4448, elements: !10417)
!10417 = !{!10418, !10419, !10420, !10421, !10422, !10423, !10424, !10425, !10426, !10427}
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !10416, file: !1248, line: 162, baseType: !1307, size: 128)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10416, file: !1248, line: 163, baseType: !1283, size: 8, offset: 128)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !10416, file: !1248, line: 164, baseType: !1283, size: 8, offset: 136)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "fptr", scope: !10416, file: !1248, line: 165, baseType: !1291, size: 32, offset: 160)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "clust", scope: !10416, file: !1248, line: 166, baseType: !1279, size: 32, offset: 192)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !10416, file: !1248, line: 167, baseType: !1279, size: 32, offset: 224)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "dir_sect", scope: !10416, file: !1248, line: 169, baseType: !1279, size: 32, offset: 256)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "dir_ptr", scope: !10416, file: !1248, line: 170, baseType: !1282, size: 32, offset: 288)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "cltbl", scope: !10416, file: !1248, line: 173, baseType: !1439, size: 32, offset: 320)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !10416, file: !1248, line: 176, baseType: !1334, size: 4096, offset: 352)
!10428 = !{!10429, !10430, !10431, !10432, !10433, !10434, !10435, !10436, !10437, !10438, !10439, !10440}
!10429 = !DILocalVariable(name: "fp", arg: 1, scope: !10411, file: !1245, line: 3246, type: !10414)
!10430 = !DILocalVariable(name: "path", arg: 2, scope: !10411, file: !1245, line: 3247, type: !1288)
!10431 = !DILocalVariable(name: "mode", arg: 3, scope: !10411, file: !1245, line: 3248, type: !1283)
!10432 = !DILocalVariable(name: "res", scope: !10411, file: !1245, line: 3251, type: !1284)
!10433 = !DILocalVariable(name: "dj", scope: !10411, file: !1245, line: 3252, type: !1303)
!10434 = !DILocalVariable(name: "fs", scope: !10411, file: !1245, line: 3253, type: !1311)
!10435 = !DILocalVariable(name: "dw", scope: !10411, file: !1245, line: 3255, type: !1279)
!10436 = !DILocalVariable(name: "cl", scope: !10411, file: !1245, line: 3255, type: !1279)
!10437 = !DILocalVariable(name: "bcs", scope: !10411, file: !1245, line: 3255, type: !1279)
!10438 = !DILocalVariable(name: "clst", scope: !10411, file: !1245, line: 3255, type: !1279)
!10439 = !DILocalVariable(name: "sc", scope: !10411, file: !1245, line: 3255, type: !1279)
!10440 = !DILocalVariable(name: "ofs", scope: !10411, file: !1245, line: 3256, type: !1291)
!10441 = !DILocation(line: 0, scope: !10411)
!10442 = !DILocation(line: 3252, column: 2, scope: !10411)
!10443 = !DILocation(line: 3252, column: 6, scope: !10411)
!10444 = !DILocation(line: 3253, column: 2, scope: !10411)
!10445 = !DILocation(line: 3261, column: 7, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10411, file: !1245, line: 3261, column: 6)
!10447 = !DILocation(line: 3261, column: 6, scope: !10411)
!10448 = !DILocation(line: 3264, column: 7, scope: !10411)
!10449 = !DILocation(line: 3265, column: 8, scope: !10411)
!10450 = !DILocation(line: 3266, column: 10, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10411, file: !1245, line: 3266, column: 6)
!10452 = !DILocation(line: 3266, column: 6, scope: !10411)
!10453 = !DILocation(line: 3267, column: 15, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10451, file: !1245, line: 3266, column: 20)
!10455 = !DILocation(line: 3267, column: 6, scope: !10454)
!10456 = !DILocation(line: 3267, column: 10, scope: !10454)
!10457 = !DILocation(line: 3267, column: 13, scope: !10454)
!10458 = !DILocation(line: 3269, column: 26, scope: !10454)
!10459 = !DILocation(line: 3269, column: 9, scope: !10454)
!10460 = !DILocation(line: 3271, column: 11, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10454, file: !1245, line: 3271, column: 7)
!10462 = !DILocation(line: 3271, column: 7, scope: !10454)
!10463 = !DILocation(line: 3282, column: 7, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10454, file: !1245, line: 3282, column: 7)
!10465 = !DILocation(line: 3282, column: 12, scope: !10464)
!10466 = !DILocation(line: 3282, column: 7, scope: !10454)
!10467 = !DILocation(line: 3283, column: 8, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10464, file: !1245, line: 3282, column: 67)
!10469 = !DILocation(line: 3288, column: 12, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10471, file: !1245, line: 3284, column: 9)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !1245, line: 3283, column: 22)
!10472 = distinct !DILexicalBlock(scope: !10468, file: !1245, line: 3283, column: 8)
!10473 = !DILocation(line: 3288, column: 6, scope: !10470)
!10474 = !DILocation(line: 3293, column: 16, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1245, line: 3293, column: 9)
!10476 = distinct !DILexicalBlock(scope: !10472, file: !1245, line: 3292, column: 9)
!10477 = !DILocation(line: 3293, column: 21, scope: !10475)
!10478 = !DILocation(line: 3293, column: 9, scope: !10476)
!10479 = !DILocation(line: 3296, column: 15, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10481, file: !1245, line: 3296, column: 10)
!10481 = distinct !DILexicalBlock(scope: !10475, file: !1245, line: 3295, column: 12)
!10482 = !DILocation(line: 3296, column: 10, scope: !10481)
!10483 = !DILocation(line: 0, scope: !10454)
!10484 = !DILocation(line: 3290, column: 10, scope: !10471)
!10485 = !DILocation(line: 3299, column: 12, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10468, file: !1245, line: 3299, column: 8)
!10487 = !DILocation(line: 3299, column: 21, scope: !10486)
!10488 = !DILocation(line: 3299, column: 30, scope: !10486)
!10489 = !DILocation(line: 3299, column: 8, scope: !10468)
!10490 = !DILocation(line: 3327, column: 18, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !1245, line: 3325, column: 5)
!10492 = distinct !DILexicalBlock(scope: !10486, file: !1245, line: 3299, column: 51)
!10493 = !DILocation(line: 3327, column: 22, scope: !10491)
!10494 = !DILocation(line: 3327, column: 6, scope: !10491)
!10495 = !DILocation(line: 3328, column: 22, scope: !10491)
!10496 = !DILocation(line: 3328, column: 6, scope: !10491)
!10497 = !DILocation(line: 3329, column: 6, scope: !10491)
!10498 = !DILocation(line: 3329, column: 23, scope: !10491)
!10499 = !DILocation(line: 3330, column: 11, scope: !10491)
!10500 = !DILocation(line: 3331, column: 6, scope: !10491)
!10501 = !DILocation(line: 3332, column: 22, scope: !10491)
!10502 = !DILocation(line: 3332, column: 6, scope: !10491)
!10503 = !DILocation(line: 3333, column: 10, scope: !10491)
!10504 = !DILocation(line: 3333, column: 16, scope: !10491)
!10505 = !DILocation(line: 3335, column: 10, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10491, file: !1245, line: 3335, column: 10)
!10507 = !DILocation(line: 3335, column: 10, scope: !10491)
!10508 = !DILocation(line: 3336, column: 16, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10506, file: !1245, line: 3335, column: 14)
!10510 = !DILocation(line: 3337, column: 13, scope: !10509)
!10511 = !DILocation(line: 3338, column: 15, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10509, file: !1245, line: 3338, column: 11)
!10513 = !DILocation(line: 3338, column: 11, scope: !10509)
!10514 = !DILocation(line: 3347, column: 12, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !1245, line: 3347, column: 8)
!10516 = distinct !DILexicalBlock(scope: !10464, file: !1245, line: 3346, column: 8)
!10517 = !DILocation(line: 3347, column: 8, scope: !10516)
!10518 = !DILocation(line: 3348, column: 16, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !1245, line: 3348, column: 9)
!10520 = distinct !DILexicalBlock(scope: !10515, file: !1245, line: 3347, column: 22)
!10521 = !DILocation(line: 3348, column: 9, scope: !10519)
!10522 = !DILocation(line: 3348, column: 21, scope: !10519)
!10523 = !DILocation(line: 3348, column: 9, scope: !10520)
!10524 = !DILocation(line: 3351, column: 16, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1245, line: 3351, column: 10)
!10526 = distinct !DILexicalBlock(scope: !10519, file: !1245, line: 3350, column: 12)
!10527 = !DILocation(line: 3351, column: 28, scope: !10525)
!10528 = !DILocation(line: 3339, column: 14, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10512, file: !1245, line: 3338, column: 25)
!10530 = !DILocation(line: 3340, column: 27, scope: !10529)
!10531 = !DILocation(line: 3340, column: 12, scope: !10529)
!10532 = !DILocation(line: 3340, column: 22, scope: !10529)
!10533 = !DILocation(line: 3357, column: 11, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10454, file: !1245, line: 3357, column: 7)
!10535 = !DILocation(line: 3357, column: 7, scope: !10454)
!10536 = !DILocation(line: 3358, column: 8, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10534, file: !1245, line: 3357, column: 21)
!10538 = !DILocation(line: 3360, column: 23, scope: !10537)
!10539 = !DILocation(line: 3360, column: 8, scope: !10537)
!10540 = !DILocation(line: 3360, column: 17, scope: !10537)
!10541 = !DILocation(line: 3361, column: 21, scope: !10537)
!10542 = !DILocation(line: 3361, column: 8, scope: !10537)
!10543 = !DILocation(line: 3361, column: 16, scope: !10537)
!10544 = !DILocation(line: 3391, column: 22, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !1245, line: 3390, column: 4)
!10546 = distinct !DILexicalBlock(scope: !10547, file: !1245, line: 3379, column: 21)
!10547 = distinct !DILexicalBlock(scope: !10454, file: !1245, line: 3379, column: 7)
!10548 = !DILocation(line: 3391, column: 9, scope: !10545)
!10549 = !DILocation(line: 3391, column: 13, scope: !10545)
!10550 = !DILocation(line: 3391, column: 20, scope: !10545)
!10551 = !DILocation(line: 3392, column: 39, scope: !10545)
!10552 = !DILocation(line: 3392, column: 23, scope: !10545)
!10553 = !DILocation(line: 3392, column: 13, scope: !10545)
!10554 = !DILocation(line: 3392, column: 21, scope: !10545)
!10555 = !DILocation(line: 3395, column: 8, scope: !10546)
!10556 = !DILocation(line: 3395, column: 14, scope: !10546)
!10557 = !DILocation(line: 3397, column: 12, scope: !10546)
!10558 = !DILocation(line: 3397, column: 15, scope: !10546)
!10559 = !DILocation(line: 3398, column: 21, scope: !10546)
!10560 = !DILocation(line: 3398, column: 12, scope: !10546)
!10561 = !DILocation(line: 3398, column: 15, scope: !10546)
!10562 = !DILocation(line: 3399, column: 8, scope: !10546)
!10563 = !DILocation(line: 3399, column: 13, scope: !10546)
!10564 = !DILocation(line: 3400, column: 8, scope: !10546)
!10565 = !DILocation(line: 3400, column: 12, scope: !10546)
!10566 = !DILocation(line: 3401, column: 8, scope: !10546)
!10567 = !DILocation(line: 3401, column: 13, scope: !10546)
!10568 = !DILocation(line: 3402, column: 8, scope: !10546)
!10569 = !DILocation(line: 3402, column: 13, scope: !10546)
!10570 = !DILocation(line: 3405, column: 12, scope: !10546)
!10571 = !DILocation(line: 3405, column: 4, scope: !10546)
!10572 = !DILocation(line: 3407, column: 14, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10546, file: !1245, line: 3407, column: 8)
!10574 = !DILocation(line: 3407, column: 28, scope: !10573)
!10575 = !DILocation(line: 3407, column: 39, scope: !10573)
!10576 = !DILocation(line: 3407, column: 47, scope: !10573)
!10577 = !DILocation(line: 3407, column: 8, scope: !10546)
!10578 = !DILocation(line: 3408, column: 14, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10573, file: !1245, line: 3407, column: 52)
!10580 = !DILocation(line: 3409, column: 22, scope: !10579)
!10581 = !DILocation(line: 3409, column: 11, scope: !10579)
!10582 = !DILocation(line: 3409, column: 28, scope: !10579)
!10583 = !DILocation(line: 3410, column: 20, scope: !10579)
!10584 = !DILocation(line: 3411, column: 46, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !1245, line: 3411, column: 5)
!10586 = distinct !DILexicalBlock(scope: !10579, file: !1245, line: 3411, column: 5)
!10587 = !DILocation(line: 3411, column: 5, scope: !10586)
!10588 = !DILocation(line: 3416, column: 9, scope: !10579)
!10589 = !DILocation(line: 3416, column: 15, scope: !10579)
!10590 = !DILocation(line: 3417, column: 22, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10579, file: !1245, line: 3417, column: 9)
!10592 = !DILocation(line: 3412, column: 13, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10585, file: !1245, line: 3411, column: 72)
!10594 = !DILocation(line: 3413, column: 15, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10593, file: !1245, line: 3413, column: 10)
!10596 = !DILocation(line: 3413, column: 10, scope: !10593)
!10597 = !DILocation(line: 3414, column: 15, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10593, file: !1245, line: 3414, column: 10)
!10599 = !DILocation(line: 3414, column: 10, scope: !10593)
!10600 = !DILocation(line: 3411, column: 64, scope: !10585)
!10601 = !DILocation(line: 3411, column: 37, scope: !10585)
!10602 = distinct !{!10602, !10587, !10603}
!10603 = !DILocation(line: 3415, column: 5, scope: !10586)
!10604 = !DILocation(line: 3417, column: 29, scope: !10591)
!10605 = !DILocation(line: 3417, column: 9, scope: !10579)
!10606 = !DILocation(line: 3418, column: 16, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !1245, line: 3418, column: 10)
!10608 = distinct !DILexicalBlock(scope: !10591, file: !1245, line: 3417, column: 39)
!10609 = !DILocation(line: 3418, column: 38, scope: !10607)
!10610 = !DILocation(line: 3418, column: 10, scope: !10608)
!10611 = !DILocation(line: 3421, column: 35, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10607, file: !1245, line: 3420, column: 13)
!10613 = !DILocation(line: 3421, column: 21, scope: !10612)
!10614 = !DILocation(line: 3421, column: 16, scope: !10612)
!10615 = !DILocation(line: 3423, column: 25, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10612, file: !1245, line: 3423, column: 11)
!10617 = !DILocation(line: 3423, column: 11, scope: !10616)
!10618 = !DILocation(line: 3423, column: 52, scope: !10616)
!10619 = !DILocation(line: 3423, column: 11, scope: !10612)
!10620 = !DILocation(line: 3434, column: 28, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10411, file: !1245, line: 3434, column: 6)
!10622 = !DILocation(line: 3434, column: 31, scope: !10621)
!10623 = !DILocation(line: 3434, column: 20, scope: !10621)
!10624 = !DILocation(line: 3437, column: 1, scope: !10411)
!10625 = distinct !DISubprogram(name: "follow_path", scope: !1245, file: !1245, line: 2765, type: !10626, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10629)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!1284, !10628, !1288}
!10628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!10629 = !{!10630, !10631, !10632, !10633, !10634, !10636}
!10630 = !DILocalVariable(name: "dp", arg: 1, scope: !10625, file: !1245, line: 2766, type: !10628)
!10631 = !DILocalVariable(name: "path", arg: 2, scope: !10625, file: !1245, line: 2767, type: !1288)
!10632 = !DILocalVariable(name: "res", scope: !10625, file: !1245, line: 2770, type: !1284)
!10633 = !DILocalVariable(name: "ns", scope: !10625, file: !1245, line: 2771, type: !1283)
!10634 = !DILocalVariable(name: "obj", scope: !10625, file: !1245, line: 2772, type: !10635)
!10635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!10636 = !DILocalVariable(name: "fs", scope: !10625, file: !1245, line: 2773, type: !1311)
!10637 = !DILocation(line: 0, scope: !10625)
!10638 = !DILocation(line: 2773, column: 19, scope: !10625)
!10639 = !DILocation(line: 2777, column: 6, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10625, file: !1245, line: 2777, column: 6)
!10641 = !DILocation(line: 2777, column: 19, scope: !10640)
!10642 = !DILocation(line: 2782, column: 3, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10640, file: !1245, line: 2781, column: 2)
!10644 = !DILocation(line: 2778, column: 21, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10640, file: !1245, line: 2777, column: 37)
!10646 = !DILocation(line: 2779, column: 2, scope: !10645)
!10647 = !DILocation(line: 2782, column: 10, scope: !10643)
!10648 = !DILocation(line: 2782, column: 23, scope: !10643)
!10649 = !DILocation(line: 2782, column: 45, scope: !10643)
!10650 = distinct !{!10650, !10642, !10649}
!10651 = !DILocation(line: 0, scope: !10643)
!10652 = !DILocation(line: 2799, column: 13, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10625, file: !1245, line: 2799, column: 6)
!10654 = !DILocation(line: 0, scope: !10640)
!10655 = !DILocation(line: 2799, column: 12, scope: !10653)
!10656 = !DILocation(line: 2799, column: 18, scope: !10653)
!10657 = !DILocation(line: 2799, column: 6, scope: !10625)
!10658 = !DILocation(line: 2805, column: 10, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10660, file: !1245, line: 2804, column: 12)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !1245, line: 2804, column: 3)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !1245, line: 2804, column: 3)
!10662 = distinct !DILexicalBlock(scope: !10653, file: !1245, line: 2803, column: 9)
!10663 = !DILocation(line: 2806, column: 12, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10659, file: !1245, line: 2806, column: 8)
!10665 = !DILocation(line: 2806, column: 8, scope: !10659)
!10666 = !DILocation(line: 2800, column: 3, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10653, file: !1245, line: 2799, column: 25)
!10668 = !DILocation(line: 2800, column: 18, scope: !10667)
!10669 = !DILocation(line: 2801, column: 9, scope: !10667)
!10670 = !DILocation(line: 2803, column: 2, scope: !10667)
!10671 = !DILocation(line: 2807, column: 10, scope: !10659)
!10672 = !DILocation(line: 2808, column: 9, scope: !10659)
!10673 = !DILocation(line: 2809, column: 8, scope: !10659)
!10674 = !DILocation(line: 2811, column: 24, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10676, file: !1245, line: 2811, column: 10)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !1245, line: 2810, column: 28)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !1245, line: 2810, column: 9)
!10678 = distinct !DILexicalBlock(scope: !10679, file: !1245, line: 2809, column: 22)
!10679 = distinct !DILexicalBlock(scope: !10659, file: !1245, line: 2809, column: 8)
!10680 = !DILocation(line: 2811, column: 27, scope: !10675)
!10681 = !DILocation(line: 2811, column: 10, scope: !10676)
!10682 = !DILocation(line: 2812, column: 16, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10684, file: !1245, line: 2812, column: 11)
!10684 = distinct !DILexicalBlock(scope: !10675, file: !1245, line: 2811, column: 38)
!10685 = !DILocation(line: 2812, column: 11, scope: !10684)
!10686 = !DILocation(line: 2813, column: 22, scope: !10684)
!10687 = !DILocation(line: 2815, column: 6, scope: !10684)
!10688 = !DILocation(line: 2816, column: 16, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10690, file: !1245, line: 2816, column: 11)
!10690 = distinct !DILexicalBlock(scope: !10675, file: !1245, line: 2815, column: 13)
!10691 = !DILocation(line: 2816, column: 11, scope: !10690)
!10692 = !DILocation(line: 2821, column: 11, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10659, file: !1245, line: 2821, column: 8)
!10694 = !DILocation(line: 2821, column: 8, scope: !10659)
!10695 = !DILocation(line: 2823, column: 15, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10659, file: !1245, line: 2823, column: 8)
!10697 = !DILocation(line: 2823, column: 20, scope: !10696)
!10698 = !DILocation(line: 2823, column: 8, scope: !10659)
!10699 = !DILocation(line: 2837, column: 46, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10659, file: !1245, line: 2836, column: 4)
!10701 = !DILocation(line: 2837, column: 51, scope: !10700)
!10702 = !DILocation(line: 2837, column: 40, scope: !10700)
!10703 = !DILocation(line: 2837, column: 19, scope: !10700)
!10704 = !DILocation(line: 2837, column: 17, scope: !10700)
!10705 = !DILocation(line: 2804, column: 3, scope: !10660)
!10706 = distinct !{!10706, !10707, !10708}
!10707 = !DILocation(line: 2804, column: 3, scope: !10661)
!10708 = !DILocation(line: 2839, column: 3, scope: !10661)
!10709 = !DILocation(line: 0, scope: !10653)
!10710 = !DILocation(line: 2842, column: 2, scope: !10625)
!10711 = distinct !DISubprogram(name: "dir_register", scope: !1245, file: !1245, line: 2245, type: !10712, scopeLine: 2248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10714)
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!1284, !10628}
!10714 = !{!10715, !10716, !10717}
!10715 = !DILocalVariable(name: "dp", arg: 1, scope: !10711, file: !1245, line: 2246, type: !10628)
!10716 = !DILocalVariable(name: "res", scope: !10711, file: !1245, line: 2249, type: !1284)
!10717 = !DILocalVariable(name: "fs", scope: !10711, file: !1245, line: 2250, type: !1311)
!10718 = !DILocation(line: 0, scope: !10711)
!10719 = !DILocation(line: 2250, column: 22, scope: !10711)
!10720 = !DILocation(line: 2318, column: 8, scope: !10711)
!10721 = !DILocation(line: 2323, column: 10, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10711, file: !1245, line: 2323, column: 6)
!10723 = !DILocation(line: 2323, column: 6, scope: !10711)
!10724 = !DILocation(line: 2324, column: 29, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10722, file: !1245, line: 2323, column: 20)
!10726 = !DILocation(line: 2324, column: 9, scope: !10725)
!10727 = !DILocation(line: 2325, column: 11, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10725, file: !1245, line: 2325, column: 7)
!10729 = !DILocation(line: 2325, column: 7, scope: !10725)
!10730 = !DILocation(line: 2326, column: 16, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10728, file: !1245, line: 2325, column: 21)
!10732 = !DILocation(line: 2326, column: 4, scope: !10731)
!10733 = !DILocation(line: 2327, column: 16, scope: !10731)
!10734 = !DILocation(line: 2327, column: 32, scope: !10731)
!10735 = !DILocation(line: 2327, column: 4, scope: !10731)
!10736 = !DILocation(line: 2331, column: 8, scope: !10731)
!10737 = !DILocation(line: 2331, column: 14, scope: !10731)
!10738 = !DILocation(line: 2332, column: 3, scope: !10731)
!10739 = !DILocation(line: 2335, column: 2, scope: !10711)
!10740 = distinct !DISubprogram(name: "st_dword", scope: !1245, file: !1245, line: 650, type: !10741, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10743)
!10741 = !DISubroutineType(types: !10742)
!10742 = !{null, !1282, !1279}
!10743 = !{!10744, !10745}
!10744 = !DILocalVariable(name: "ptr", arg: 1, scope: !10740, file: !1245, line: 650, type: !1282)
!10745 = !DILocalVariable(name: "val", arg: 2, scope: !10740, file: !1245, line: 650, type: !1279)
!10746 = !DILocation(line: 0, scope: !10740)
!10747 = !DILocation(line: 652, column: 11, scope: !10740)
!10748 = !DILocation(line: 652, column: 6, scope: !10740)
!10749 = !DILocation(line: 652, column: 9, scope: !10740)
!10750 = !DILocation(line: 652, column: 26, scope: !10740)
!10751 = !DILocation(line: 653, column: 11, scope: !10740)
!10752 = !DILocation(line: 653, column: 6, scope: !10740)
!10753 = !DILocation(line: 653, column: 9, scope: !10740)
!10754 = !DILocation(line: 653, column: 26, scope: !10740)
!10755 = !DILocation(line: 654, column: 11, scope: !10740)
!10756 = !DILocation(line: 654, column: 6, scope: !10740)
!10757 = !DILocation(line: 654, column: 9, scope: !10740)
!10758 = !DILocation(line: 654, column: 26, scope: !10740)
!10759 = !DILocation(line: 655, column: 11, scope: !10740)
!10760 = !DILocation(line: 655, column: 9, scope: !10740)
!10761 = !DILocation(line: 656, column: 1, scope: !10740)
!10762 = distinct !DISubprogram(name: "ld_clust", scope: !1245, file: !1245, line: 1589, type: !10763, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10765)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{!1279, !1311, !1285}
!10765 = !{!10766, !10767, !10768}
!10766 = !DILocalVariable(name: "fs", arg: 1, scope: !10762, file: !1245, line: 1590, type: !1311)
!10767 = !DILocalVariable(name: "dir", arg: 2, scope: !10762, file: !1245, line: 1591, type: !1285)
!10768 = !DILocalVariable(name: "cl", scope: !10762, file: !1245, line: 1594, type: !1279)
!10769 = !DILocation(line: 0, scope: !10762)
!10770 = !DILocation(line: 1596, column: 19, scope: !10762)
!10771 = !DILocation(line: 1596, column: 7, scope: !10762)
!10772 = !DILocation(line: 1597, column: 10, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10762, file: !1245, line: 1597, column: 6)
!10774 = !DILocation(line: 1597, column: 18, scope: !10773)
!10775 = !DILocation(line: 1597, column: 6, scope: !10762)
!10776 = !DILocation(line: 1598, column: 28, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10773, file: !1245, line: 1597, column: 31)
!10778 = !DILocation(line: 1598, column: 16, scope: !10777)
!10779 = !DILocation(line: 1598, column: 9, scope: !10777)
!10780 = !DILocation(line: 1598, column: 45, scope: !10777)
!10781 = !DILocation(line: 1598, column: 6, scope: !10777)
!10782 = !DILocation(line: 1599, column: 2, scope: !10777)
!10783 = !DILocation(line: 1601, column: 2, scope: !10762)
!10784 = distinct !DISubprogram(name: "st_clust", scope: !1245, file: !1245, line: 1607, type: !10785, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10787)
!10785 = !DISubroutineType(types: !10786)
!10786 = !{null, !1311, !1282, !1279}
!10787 = !{!10788, !10789, !10790}
!10788 = !DILocalVariable(name: "fs", arg: 1, scope: !10784, file: !1245, line: 1608, type: !1311)
!10789 = !DILocalVariable(name: "dir", arg: 2, scope: !10784, file: !1245, line: 1609, type: !1282)
!10790 = !DILocalVariable(name: "cl", arg: 3, scope: !10784, file: !1245, line: 1610, type: !1279)
!10791 = !DILocation(line: 0, scope: !10784)
!10792 = !DILocation(line: 1613, column: 14, scope: !10784)
!10793 = !DILocation(line: 1613, column: 31, scope: !10784)
!10794 = !DILocation(line: 1613, column: 2, scope: !10784)
!10795 = !DILocation(line: 1614, column: 10, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10784, file: !1245, line: 1614, column: 6)
!10797 = !DILocation(line: 1614, column: 18, scope: !10796)
!10798 = !DILocation(line: 1614, column: 6, scope: !10784)
!10799 = !DILocation(line: 1615, column: 15, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !1245, line: 1614, column: 31)
!10801 = !DILocation(line: 1615, column: 42, scope: !10800)
!10802 = !DILocation(line: 1615, column: 32, scope: !10800)
!10803 = !DILocation(line: 1615, column: 3, scope: !10800)
!10804 = !DILocation(line: 1616, column: 2, scope: !10800)
!10805 = !DILocation(line: 1617, column: 1, scope: !10784)
!10806 = distinct !DISubprogram(name: "remove_chain", scope: !1245, file: !1245, line: 1232, type: !10807, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10809)
!10807 = !DISubroutineType(types: !10808)
!10808 = !{!1284, !10635, !1279, !1279}
!10809 = !{!10810, !10811, !10812, !10813, !10814, !10815}
!10810 = !DILocalVariable(name: "obj", arg: 1, scope: !10806, file: !1245, line: 1233, type: !10635)
!10811 = !DILocalVariable(name: "clst", arg: 2, scope: !10806, file: !1245, line: 1234, type: !1279)
!10812 = !DILocalVariable(name: "pclst", arg: 3, scope: !10806, file: !1245, line: 1235, type: !1279)
!10813 = !DILocalVariable(name: "res", scope: !10806, file: !1245, line: 1238, type: !1284)
!10814 = !DILocalVariable(name: "nxt", scope: !10806, file: !1245, line: 1239, type: !1279)
!10815 = !DILocalVariable(name: "fs", scope: !10806, file: !1245, line: 1240, type: !1311)
!10816 = !DILocation(line: 0, scope: !10806)
!10817 = !DILocation(line: 1240, column: 19, scope: !10806)
!10818 = !DILocation(line: 1248, column: 11, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10806, file: !1245, line: 1248, column: 6)
!10820 = !DILocation(line: 1248, column: 15, scope: !10819)
!10821 = !DILocation(line: 1248, column: 30, scope: !10819)
!10822 = !DILocation(line: 1248, column: 23, scope: !10819)
!10823 = !DILocation(line: 1248, column: 6, scope: !10806)
!10824 = !DILocation(line: 1251, column: 6, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10806, file: !1245, line: 1251, column: 6)
!10826 = !DILocation(line: 1251, column: 6, scope: !10806)
!10827 = !DILocation(line: 1252, column: 9, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10825, file: !1245, line: 1251, column: 74)
!10829 = !DILocation(line: 1253, column: 11, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10828, file: !1245, line: 1253, column: 7)
!10831 = !DILocation(line: 1253, column: 7, scope: !10828)
!10832 = !DILocation(line: 1257, column: 2, scope: !10806)
!10833 = !DILocation(line: 1258, column: 9, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10806, file: !1245, line: 1257, column: 5)
!10835 = !DILocation(line: 1259, column: 7, scope: !10834)
!10836 = !DILocation(line: 1263, column: 10, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !1245, line: 1262, column: 46)
!10838 = distinct !DILexicalBlock(scope: !10834, file: !1245, line: 1262, column: 7)
!10839 = !DILocation(line: 1264, column: 12, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10837, file: !1245, line: 1264, column: 8)
!10841 = !DILocation(line: 1264, column: 8, scope: !10837)
!10842 = !DILocation(line: 1266, column: 11, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10834, file: !1245, line: 1266, column: 7)
!10844 = !DILocation(line: 1266, column: 27, scope: !10843)
!10845 = !DILocation(line: 1266, column: 36, scope: !10843)
!10846 = !DILocation(line: 1266, column: 21, scope: !10843)
!10847 = !DILocation(line: 1266, column: 7, scope: !10834)
!10848 = !DILocation(line: 1267, column: 17, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10843, file: !1245, line: 1266, column: 41)
!10850 = !DILocation(line: 1268, column: 17, scope: !10849)
!10851 = !DILocation(line: 1269, column: 3, scope: !10849)
!10852 = !DILocation(line: 1289, column: 16, scope: !10806)
!10853 = !DILocation(line: 1289, column: 2, scope: !10834)
!10854 = distinct !{!10854, !10832, !10855}
!10855 = !DILocation(line: 1289, column: 30, scope: !10806)
!10856 = !DILocation(line: 1303, column: 1, scope: !10806)
!10857 = distinct !DISubprogram(name: "mem_set", scope: !1245, file: !1245, line: 693, type: !10858, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{null, !51, !7, !1281}
!10860 = !{!10861, !10862, !10863, !10864}
!10861 = !DILocalVariable(name: "dst", arg: 1, scope: !10857, file: !1245, line: 693, type: !51)
!10862 = !DILocalVariable(name: "val", arg: 2, scope: !10857, file: !1245, line: 693, type: !7)
!10863 = !DILocalVariable(name: "cnt", arg: 3, scope: !10857, file: !1245, line: 693, type: !1281)
!10864 = !DILocalVariable(name: "d", scope: !10857, file: !1245, line: 694, type: !1282)
!10865 = !DILocation(line: 0, scope: !10857)
!10866 = !DILocation(line: 696, column: 2, scope: !10857)
!10867 = !DILocation(line: 696, column: 7, scope: !10857)
!10868 = !DILocation(line: 696, column: 10, scope: !10857)
!10869 = !DILocation(line: 696, column: 30, scope: !10857)
!10870 = !DILocation(line: 696, column: 5, scope: !10857)
!10871 = distinct !{!10871, !10866, !10872}
!10872 = !DILocation(line: 696, column: 35, scope: !10857)
!10873 = !DILocation(line: 697, column: 1, scope: !10857)
!10874 = distinct !DISubprogram(name: "get_fat", scope: !1245, file: !1245, line: 986, type: !10875, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10877)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{!1279, !10635, !1279}
!10877 = !{!10878, !10879, !10880, !10881, !10882, !10883}
!10878 = !DILocalVariable(name: "obj", arg: 1, scope: !10874, file: !1245, line: 987, type: !10635)
!10879 = !DILocalVariable(name: "clst", arg: 2, scope: !10874, file: !1245, line: 988, type: !1279)
!10880 = !DILocalVariable(name: "wc", scope: !10874, file: !1245, line: 991, type: !1281)
!10881 = !DILocalVariable(name: "bc", scope: !10874, file: !1245, line: 991, type: !1281)
!10882 = !DILocalVariable(name: "val", scope: !10874, file: !1245, line: 992, type: !1279)
!10883 = !DILocalVariable(name: "fs", scope: !10874, file: !1245, line: 993, type: !1311)
!10884 = !DILocation(line: 0, scope: !10874)
!10885 = !DILocation(line: 993, column: 19, scope: !10874)
!10886 = !DILocation(line: 996, column: 11, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10874, file: !1245, line: 996, column: 6)
!10888 = !DILocation(line: 996, column: 15, scope: !10887)
!10889 = !DILocation(line: 996, column: 30, scope: !10887)
!10890 = !DILocation(line: 996, column: 23, scope: !10887)
!10891 = !DILocation(line: 996, column: 6, scope: !10874)
!10892 = !DILocation(line: 1002, column: 15, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10887, file: !1245, line: 999, column: 9)
!10894 = !DILocation(line: 1002, column: 3, scope: !10893)
!10895 = !DILocation(line: 1004, column: 30, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10893, file: !1245, line: 1002, column: 24)
!10897 = !DILocation(line: 1004, column: 24, scope: !10896)
!10898 = !DILocation(line: 1005, column: 28, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10896, file: !1245, line: 1005, column: 8)
!10900 = !DILocation(line: 1005, column: 42, scope: !10899)
!10901 = !DILocation(line: 1005, column: 36, scope: !10899)
!10902 = !DILocation(line: 1005, column: 8, scope: !10899)
!10903 = !DILocation(line: 1005, column: 53, scope: !10899)
!10904 = !DILocation(line: 1005, column: 8, scope: !10896)
!10905 = !DILocation(line: 1006, column: 19, scope: !10896)
!10906 = !DILocation(line: 1006, column: 22, scope: !10896)
!10907 = !DILocation(line: 1006, column: 9, scope: !10896)
!10908 = !DILocation(line: 1007, column: 28, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10896, file: !1245, line: 1007, column: 8)
!10910 = !DILocation(line: 1007, column: 42, scope: !10909)
!10911 = !DILocation(line: 1007, column: 36, scope: !10909)
!10912 = !DILocation(line: 1007, column: 8, scope: !10909)
!10913 = !DILocation(line: 1007, column: 53, scope: !10909)
!10914 = !DILocation(line: 1007, column: 8, scope: !10896)
!10915 = !DILocation(line: 1008, column: 21, scope: !10896)
!10916 = !DILocation(line: 1008, column: 10, scope: !10896)
!10917 = !DILocation(line: 1008, column: 31, scope: !10896)
!10918 = !DILocation(line: 1008, column: 7, scope: !10896)
!10919 = !DILocation(line: 1009, column: 16, scope: !10896)
!10920 = !DILocation(line: 1009, column: 10, scope: !10896)
!10921 = !DILocation(line: 1010, column: 4, scope: !10896)
!10922 = !DILocation(line: 1013, column: 28, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10896, file: !1245, line: 1013, column: 8)
!10924 = !DILocation(line: 1013, column: 44, scope: !10923)
!10925 = !DILocation(line: 1013, column: 36, scope: !10923)
!10926 = !DILocation(line: 1013, column: 8, scope: !10923)
!10927 = !DILocation(line: 1013, column: 61, scope: !10923)
!10928 = !DILocation(line: 1013, column: 8, scope: !10896)
!10929 = !DILocation(line: 1014, column: 33, scope: !10896)
!10930 = !DILocation(line: 1014, column: 37, scope: !10896)
!10931 = !DILocation(line: 1014, column: 26, scope: !10896)
!10932 = !DILocation(line: 1014, column: 10, scope: !10896)
!10933 = !DILocation(line: 1015, column: 4, scope: !10896)
!10934 = !DILocation(line: 1018, column: 28, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10896, file: !1245, line: 1018, column: 8)
!10936 = !DILocation(line: 1018, column: 44, scope: !10935)
!10937 = !DILocation(line: 1018, column: 36, scope: !10935)
!10938 = !DILocation(line: 1018, column: 8, scope: !10935)
!10939 = !DILocation(line: 1018, column: 61, scope: !10935)
!10940 = !DILocation(line: 1018, column: 8, scope: !10896)
!10941 = !DILocation(line: 1019, column: 34, scope: !10896)
!10942 = !DILocation(line: 1019, column: 38, scope: !10896)
!10943 = !DILocation(line: 1019, column: 27, scope: !10896)
!10944 = !DILocation(line: 1019, column: 10, scope: !10896)
!10945 = !DILocation(line: 1019, column: 48, scope: !10896)
!10946 = !DILocation(line: 1020, column: 4, scope: !10896)
!10947 = !DILocation(line: 0, scope: !10887)
!10948 = !DILocation(line: 1050, column: 2, scope: !10874)
!10949 = distinct !DISubprogram(name: "clust2sect", scope: !1245, file: !1245, line: 968, type: !10950, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10952)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{!1279, !1311, !1279}
!10952 = !{!10953, !10954}
!10953 = !DILocalVariable(name: "fs", arg: 1, scope: !10949, file: !1245, line: 969, type: !1311)
!10954 = !DILocalVariable(name: "clst", arg: 2, scope: !10949, file: !1245, line: 970, type: !1279)
!10955 = !DILocation(line: 0, scope: !10949)
!10956 = !DILocation(line: 973, column: 7, scope: !10949)
!10957 = !DILocation(line: 974, column: 18, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10949, file: !1245, line: 974, column: 6)
!10959 = !DILocation(line: 974, column: 27, scope: !10958)
!10960 = !DILocation(line: 974, column: 11, scope: !10958)
!10961 = !DILocation(line: 974, column: 6, scope: !10949)
!10962 = !DILocation(line: 975, column: 20, scope: !10949)
!10963 = !DILocation(line: 975, column: 16, scope: !10949)
!10964 = !DILocation(line: 975, column: 14, scope: !10949)
!10965 = !DILocation(line: 975, column: 32, scope: !10949)
!10966 = !DILocation(line: 975, column: 26, scope: !10949)
!10967 = !DILocation(line: 975, column: 2, scope: !10949)
!10968 = !DILocation(line: 976, column: 1, scope: !10949)
!10969 = distinct !DISubprogram(name: "put_fat", scope: !1245, file: !1245, line: 1062, type: !10970, scopeLine: 1067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !10972)
!10970 = !DISubroutineType(types: !10971)
!10971 = !{!1284, !1311, !1279, !1279}
!10972 = !{!10973, !10974, !10975, !10976, !10977, !10978}
!10973 = !DILocalVariable(name: "fs", arg: 1, scope: !10969, file: !1245, line: 1063, type: !1311)
!10974 = !DILocalVariable(name: "clst", arg: 2, scope: !10969, file: !1245, line: 1064, type: !1279)
!10975 = !DILocalVariable(name: "val", arg: 3, scope: !10969, file: !1245, line: 1065, type: !1279)
!10976 = !DILocalVariable(name: "bc", scope: !10969, file: !1245, line: 1068, type: !1281)
!10977 = !DILocalVariable(name: "p", scope: !10969, file: !1245, line: 1069, type: !1282)
!10978 = !DILocalVariable(name: "res", scope: !10969, file: !1245, line: 1070, type: !1284)
!10979 = !DILocation(line: 0, scope: !10969)
!10980 = !DILocation(line: 1073, column: 11, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10969, file: !1245, line: 1073, column: 6)
!10982 = !DILocation(line: 1073, column: 16, scope: !10981)
!10983 = !DILocation(line: 1073, column: 30, scope: !10981)
!10984 = !DILocation(line: 1073, column: 24, scope: !10981)
!10985 = !DILocation(line: 1073, column: 6, scope: !10969)
!10986 = !DILocation(line: 1074, column: 15, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10981, file: !1245, line: 1073, column: 40)
!10988 = !DILocation(line: 1074, column: 3, scope: !10987)
!10989 = !DILocation(line: 1076, column: 30, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10987, file: !1245, line: 1074, column: 24)
!10991 = !DILocation(line: 1076, column: 24, scope: !10990)
!10992 = !DILocation(line: 1077, column: 30, scope: !10990)
!10993 = !DILocation(line: 1077, column: 44, scope: !10990)
!10994 = !DILocation(line: 1077, column: 38, scope: !10990)
!10995 = !DILocation(line: 1077, column: 10, scope: !10990)
!10996 = !DILocation(line: 1078, column: 12, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10990, file: !1245, line: 1078, column: 8)
!10998 = !DILocation(line: 1078, column: 8, scope: !10990)
!10999 = !DILocation(line: 1079, column: 20, scope: !10990)
!11000 = !DILocation(line: 1079, column: 23, scope: !10990)
!11001 = !DILocation(line: 1079, column: 16, scope: !10990)
!11002 = !DILocation(line: 1080, column: 15, scope: !10990)
!11003 = !DILocation(line: 1080, column: 9, scope: !10990)
!11004 = !DILocation(line: 1080, column: 24, scope: !10990)
!11005 = !DILocation(line: 1080, column: 27, scope: !10990)
!11006 = !DILocation(line: 1080, column: 48, scope: !10990)
!11007 = !DILocation(line: 1080, column: 35, scope: !10990)
!11008 = !DILocation(line: 1080, column: 57, scope: !10990)
!11009 = !DILocation(line: 1080, column: 7, scope: !10990)
!11010 = !DILocation(line: 1081, column: 8, scope: !10990)
!11011 = !DILocation(line: 1081, column: 14, scope: !10990)
!11012 = !DILocation(line: 1082, column: 30, scope: !10990)
!11013 = !DILocation(line: 1082, column: 44, scope: !10990)
!11014 = !DILocation(line: 1082, column: 38, scope: !10990)
!11015 = !DILocation(line: 1082, column: 10, scope: !10990)
!11016 = !DILocation(line: 1083, column: 12, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10990, file: !1245, line: 1083, column: 8)
!11018 = !DILocation(line: 1083, column: 8, scope: !10990)
!11019 = !DILocation(line: 1084, column: 21, scope: !10990)
!11020 = !DILocation(line: 1084, column: 16, scope: !10990)
!11021 = !DILocation(line: 1085, column: 9, scope: !10990)
!11022 = !DILocation(line: 1085, column: 33, scope: !10990)
!11023 = !DILocation(line: 1085, column: 22, scope: !10990)
!11024 = !DILocation(line: 1085, column: 43, scope: !10990)
!11025 = !DILocation(line: 1085, column: 46, scope: !10990)
!11026 = !DILocation(line: 1085, column: 68, scope: !10990)
!11027 = !DILocation(line: 1085, column: 74, scope: !10990)
!11028 = !DILocation(line: 1085, column: 54, scope: !10990)
!11029 = !DILocation(line: 1085, column: 7, scope: !10990)
!11030 = !DILocation(line: 1087, column: 4, scope: !10990)
!11031 = !DILocation(line: 1090, column: 30, scope: !10990)
!11032 = !DILocation(line: 1090, column: 46, scope: !10990)
!11033 = !DILocation(line: 1090, column: 38, scope: !10990)
!11034 = !DILocation(line: 1090, column: 10, scope: !10990)
!11035 = !DILocation(line: 1091, column: 12, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !10990, file: !1245, line: 1091, column: 8)
!11037 = !DILocation(line: 1091, column: 8, scope: !10990)
!11038 = !DILocation(line: 1092, column: 27, scope: !10990)
!11039 = !DILocation(line: 1092, column: 31, scope: !10990)
!11040 = !DILocation(line: 1092, column: 20, scope: !10990)
!11041 = !DILocation(line: 1092, column: 41, scope: !10990)
!11042 = !DILocation(line: 1092, column: 4, scope: !10990)
!11043 = !DILocation(line: 1093, column: 8, scope: !10990)
!11044 = !DILocation(line: 1094, column: 4, scope: !10990)
!11045 = !DILocation(line: 1100, column: 30, scope: !10990)
!11046 = !DILocation(line: 1100, column: 46, scope: !10990)
!11047 = !DILocation(line: 1100, column: 38, scope: !10990)
!11048 = !DILocation(line: 1100, column: 10, scope: !10990)
!11049 = !DILocation(line: 1101, column: 12, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !10990, file: !1245, line: 1101, column: 8)
!11051 = !DILocation(line: 1101, column: 8, scope: !10990)
!11052 = !DILocation(line: 1103, column: 16, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11054, file: !1245, line: 1102, column: 47)
!11054 = distinct !DILexicalBlock(scope: !10990, file: !1245, line: 1102, column: 8)
!11055 = !DILocation(line: 1103, column: 57, scope: !11053)
!11056 = !DILocation(line: 1103, column: 61, scope: !11053)
!11057 = !DILocation(line: 1103, column: 50, scope: !11053)
!11058 = !DILocation(line: 1103, column: 33, scope: !11053)
!11059 = !DILocation(line: 1103, column: 71, scope: !11053)
!11060 = !DILocation(line: 1103, column: 30, scope: !11053)
!11061 = !DILocation(line: 1105, column: 4, scope: !10990)
!11062 = !DILocation(line: 1106, column: 8, scope: !10990)
!11063 = !DILocation(line: 1107, column: 4, scope: !10990)
!11064 = !DILocation(line: 0, scope: !10990)
!11065 = !DILocation(line: 1110, column: 2, scope: !10969)
!11066 = distinct !DISubprogram(name: "st_word", scope: !1245, file: !1245, line: 643, type: !11067, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11069)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{null, !1282, !1292}
!11069 = !{!11070, !11071}
!11070 = !DILocalVariable(name: "ptr", arg: 1, scope: !11066, file: !1245, line: 643, type: !1282)
!11071 = !DILocalVariable(name: "val", arg: 2, scope: !11066, file: !1245, line: 643, type: !1292)
!11072 = !DILocation(line: 0, scope: !11066)
!11073 = !DILocation(line: 645, column: 11, scope: !11066)
!11074 = !DILocation(line: 645, column: 6, scope: !11066)
!11075 = !DILocation(line: 645, column: 9, scope: !11066)
!11076 = !DILocation(line: 645, column: 26, scope: !11066)
!11077 = !DILocation(line: 646, column: 11, scope: !11066)
!11078 = !DILocation(line: 646, column: 9, scope: !11066)
!11079 = !DILocation(line: 647, column: 1, scope: !11066)
!11080 = distinct !DISubprogram(name: "dir_alloc", scope: !1245, file: !1245, line: 1546, type: !11081, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11083)
!11081 = !DISubroutineType(types: !11082)
!11082 = !{!1284, !10628, !1281}
!11083 = !{!11084, !11085, !11086, !11087, !11088}
!11084 = !DILocalVariable(name: "dp", arg: 1, scope: !11080, file: !1245, line: 1547, type: !10628)
!11085 = !DILocalVariable(name: "nent", arg: 2, scope: !11080, file: !1245, line: 1548, type: !1281)
!11086 = !DILocalVariable(name: "res", scope: !11080, file: !1245, line: 1551, type: !1284)
!11087 = !DILocalVariable(name: "n", scope: !11080, file: !1245, line: 1552, type: !1281)
!11088 = !DILocalVariable(name: "fs", scope: !11080, file: !1245, line: 1553, type: !1311)
!11089 = !DILocation(line: 0, scope: !11080)
!11090 = !DILocation(line: 1553, column: 22, scope: !11080)
!11091 = !DILocation(line: 1556, column: 8, scope: !11080)
!11092 = !DILocation(line: 1557, column: 10, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11080, file: !1245, line: 1557, column: 6)
!11094 = !DILocation(line: 1557, column: 6, scope: !11080)
!11095 = !DILocation(line: 1559, column: 3, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11093, file: !1245, line: 1557, column: 20)
!11097 = !DILocation(line: 1560, column: 30, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11096, file: !1245, line: 1559, column: 6)
!11099 = !DILocation(line: 1560, column: 10, scope: !11098)
!11100 = !DILocation(line: 1561, column: 12, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11098, file: !1245, line: 1561, column: 8)
!11102 = !DILocation(line: 1561, column: 8, scope: !11098)
!11103 = !DILocation(line: 1565, column: 12, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11098, file: !1245, line: 1565, column: 8)
!11105 = !DILocation(line: 1565, column: 8, scope: !11104)
!11106 = !DILocation(line: 1565, column: 34, scope: !11104)
!11107 = !DILocation(line: 1571, column: 10, scope: !11098)
!11108 = !DILocation(line: 1572, column: 16, scope: !11096)
!11109 = !DILocation(line: 1572, column: 3, scope: !11098)
!11110 = distinct !{!11110, !11095, !11111}
!11111 = !DILocation(line: 1572, column: 24, scope: !11096)
!11112 = !DILocation(line: 1575, column: 10, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11080, file: !1245, line: 1575, column: 6)
!11114 = !DILocation(line: 1575, column: 6, scope: !11080)
!11115 = !DILocation(line: 1576, column: 2, scope: !11080)
!11116 = distinct !DISubprogram(name: "mem_cpy", scope: !1245, file: !1245, line: 682, type: !11117, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11119)
!11117 = !DISubroutineType(types: !11118)
!11118 = !{null, !51, !704, !1281}
!11119 = !{!11120, !11121, !11122, !11123, !11124}
!11120 = !DILocalVariable(name: "dst", arg: 1, scope: !11116, file: !1245, line: 682, type: !51)
!11121 = !DILocalVariable(name: "src", arg: 2, scope: !11116, file: !1245, line: 682, type: !704)
!11122 = !DILocalVariable(name: "cnt", arg: 3, scope: !11116, file: !1245, line: 682, type: !1281)
!11123 = !DILocalVariable(name: "d", scope: !11116, file: !1245, line: 683, type: !1282)
!11124 = !DILocalVariable(name: "s", scope: !11116, file: !1245, line: 684, type: !1285)
!11125 = !DILocation(line: 0, scope: !11116)
!11126 = !DILocation(line: 687, column: 15, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11128, file: !1245, line: 686, column: 11)
!11128 = distinct !DILexicalBlock(scope: !11116, file: !1245, line: 686, column: 6)
!11129 = !DILocation(line: 687, column: 13, scope: !11127)
!11130 = !DILocation(line: 687, column: 8, scope: !11127)
!11131 = !DILocation(line: 687, column: 11, scope: !11127)
!11132 = !DILocation(line: 687, column: 26, scope: !11127)
!11133 = !DILocation(line: 687, column: 6, scope: !11127)
!11134 = distinct !{!11134, !11135, !11136}
!11135 = !DILocation(line: 687, column: 3, scope: !11127)
!11136 = !DILocation(line: 687, column: 31, scope: !11127)
!11137 = !DILocation(line: 689, column: 1, scope: !11116)
!11138 = distinct !DISubprogram(name: "dir_sdi", scope: !1245, file: !1245, line: 1427, type: !11139, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11141)
!11139 = !DISubroutineType(types: !11140)
!11140 = !{!1284, !10628, !1279}
!11141 = !{!11142, !11143, !11144, !11145, !11146}
!11142 = !DILocalVariable(name: "dp", arg: 1, scope: !11138, file: !1245, line: 1428, type: !10628)
!11143 = !DILocalVariable(name: "ofs", arg: 2, scope: !11138, file: !1245, line: 1429, type: !1279)
!11144 = !DILocalVariable(name: "csz", scope: !11138, file: !1245, line: 1432, type: !1279)
!11145 = !DILocalVariable(name: "clst", scope: !11138, file: !1245, line: 1432, type: !1279)
!11146 = !DILocalVariable(name: "fs", scope: !11138, file: !1245, line: 1433, type: !1311)
!11147 = !DILocation(line: 0, scope: !11138)
!11148 = !DILocation(line: 1433, column: 18, scope: !11138)
!11149 = !DILocation(line: 1433, column: 22, scope: !11138)
!11150 = !DILocation(line: 1436, column: 91, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11138, file: !1245, line: 1436, column: 6)
!11152 = !DILocation(line: 1436, column: 6, scope: !11138)
!11153 = !DILocation(line: 1439, column: 6, scope: !11138)
!11154 = !DILocation(line: 1439, column: 11, scope: !11138)
!11155 = !DILocation(line: 1440, column: 17, scope: !11138)
!11156 = !DILocation(line: 1441, column: 11, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11138, file: !1245, line: 1441, column: 6)
!11158 = !DILocation(line: 1441, column: 16, scope: !11157)
!11159 = !DILocation(line: 1441, column: 23, scope: !11157)
!11160 = !DILocation(line: 1441, column: 31, scope: !11157)
!11161 = !DILocation(line: 1441, column: 6, scope: !11138)
!11162 = !DILocation(line: 1442, column: 14, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11157, file: !1245, line: 1441, column: 44)
!11164 = !DILocation(line: 1446, column: 11, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11138, file: !1245, line: 1446, column: 6)
!11166 = !DILocation(line: 1446, column: 6, scope: !11138)
!11167 = !DILocation(line: 1447, column: 11, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11169, file: !1245, line: 1447, column: 7)
!11169 = distinct !DILexicalBlock(scope: !11165, file: !1245, line: 1446, column: 17)
!11170 = !DILocation(line: 1447, column: 27, scope: !11168)
!11171 = !DILocation(line: 1447, column: 23, scope: !11168)
!11172 = !DILocation(line: 1447, column: 20, scope: !11168)
!11173 = !DILocation(line: 1447, column: 7, scope: !11169)
!11174 = !DILocation(line: 1448, column: 18, scope: !11169)
!11175 = !DILocation(line: 1450, column: 2, scope: !11169)
!11176 = !DILocation(line: 1451, column: 20, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11165, file: !1245, line: 1450, column: 9)
!11178 = !DILocation(line: 1451, column: 9, scope: !11177)
!11179 = !DILocation(line: 1451, column: 26, scope: !11177)
!11180 = !DILocation(line: 1452, column: 14, scope: !11177)
!11181 = !DILocation(line: 1452, column: 3, scope: !11177)
!11182 = !DILocation(line: 1453, column: 11, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11177, file: !1245, line: 1452, column: 22)
!11184 = !DILocation(line: 1454, column: 13, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11183, file: !1245, line: 1454, column: 8)
!11186 = !DILocation(line: 1454, column: 8, scope: !11183)
!11187 = !DILocation(line: 1455, column: 13, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11183, file: !1245, line: 1455, column: 8)
!11189 = !DILocation(line: 1455, column: 17, scope: !11188)
!11190 = !DILocation(line: 1455, column: 32, scope: !11188)
!11191 = !DILocation(line: 1455, column: 25, scope: !11188)
!11192 = !DILocation(line: 1455, column: 8, scope: !11183)
!11193 = !DILocation(line: 1456, column: 8, scope: !11183)
!11194 = distinct !{!11194, !11181, !11195}
!11195 = !DILocation(line: 1457, column: 3, scope: !11177)
!11196 = !DILocation(line: 1458, column: 14, scope: !11177)
!11197 = !DILocation(line: 1442, column: 8, scope: !11163)
!11198 = !DILocation(line: 0, scope: !11165)
!11199 = !DILocation(line: 1460, column: 6, scope: !11138)
!11200 = !DILocation(line: 1460, column: 12, scope: !11138)
!11201 = !DILocation(line: 1461, column: 7, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11138, file: !1245, line: 1461, column: 6)
!11203 = !DILocation(line: 1461, column: 6, scope: !11138)
!11204 = !DILocation(line: 1461, column: 11, scope: !11202)
!11205 = !DILocation(line: 1462, column: 18, scope: !11138)
!11206 = !DILocation(line: 1462, column: 11, scope: !11138)
!11207 = !DILocation(line: 1463, column: 27, scope: !11138)
!11208 = !DILocation(line: 1463, column: 20, scope: !11138)
!11209 = !DILocation(line: 1463, column: 6, scope: !11138)
!11210 = !DILocation(line: 1463, column: 10, scope: !11138)
!11211 = !DILocation(line: 1465, column: 2, scope: !11138)
!11212 = !DILocation(line: 1466, column: 1, scope: !11138)
!11213 = distinct !DISubprogram(name: "dir_next", scope: !1245, file: !1245, line: 1476, type: !11214, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11216)
!11214 = !DISubroutineType(types: !11215)
!11215 = !{!1284, !10628, !7}
!11216 = !{!11217, !11218, !11219, !11220, !11221, !11222}
!11217 = !DILocalVariable(name: "dp", arg: 1, scope: !11213, file: !1245, line: 1477, type: !10628)
!11218 = !DILocalVariable(name: "stretch", arg: 2, scope: !11213, file: !1245, line: 1478, type: !7)
!11219 = !DILocalVariable(name: "ofs", scope: !11213, file: !1245, line: 1481, type: !1279)
!11220 = !DILocalVariable(name: "clst", scope: !11213, file: !1245, line: 1481, type: !1279)
!11221 = !DILocalVariable(name: "fs", scope: !11213, file: !1245, line: 1482, type: !1311)
!11222 = !DILocalVariable(name: "n", scope: !11213, file: !1245, line: 1484, type: !1281)
!11223 = !DILocation(line: 0, scope: !11213)
!11224 = !DILocation(line: 1482, column: 18, scope: !11213)
!11225 = !DILocation(line: 1482, column: 22, scope: !11213)
!11226 = !DILocation(line: 1487, column: 12, scope: !11213)
!11227 = !DILocation(line: 1487, column: 17, scope: !11213)
!11228 = !DILocation(line: 1488, column: 11, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11213, file: !1245, line: 1488, column: 6)
!11230 = !DILocation(line: 1488, column: 7, scope: !11229)
!11231 = !DILocation(line: 1488, column: 16, scope: !11229)
!11232 = !DILocation(line: 1490, column: 10, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11213, file: !1245, line: 1490, column: 6)
!11234 = !DILocation(line: 1490, column: 19, scope: !11233)
!11235 = !DILocation(line: 1490, column: 6, scope: !11213)
!11236 = !DILocation(line: 1491, column: 11, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11233, file: !1245, line: 1490, column: 25)
!11238 = !DILocation(line: 1493, column: 12, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11237, file: !1245, line: 1493, column: 7)
!11240 = !DILocation(line: 1493, column: 8, scope: !11239)
!11241 = !DILocation(line: 1493, column: 7, scope: !11237)
!11242 = !DILocation(line: 1494, column: 12, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !1245, line: 1494, column: 8)
!11244 = distinct !DILexicalBlock(scope: !11239, file: !1245, line: 1493, column: 19)
!11245 = !DILocation(line: 1494, column: 28, scope: !11243)
!11246 = !DILocation(line: 1494, column: 24, scope: !11243)
!11247 = !DILocation(line: 1494, column: 21, scope: !11243)
!11248 = !DILocation(line: 1494, column: 8, scope: !11244)
!11249 = !DILocation(line: 1495, column: 14, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11243, file: !1245, line: 1494, column: 39)
!11251 = !DILocation(line: 1495, column: 19, scope: !11250)
!11252 = !DILocation(line: 1499, column: 13, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !1245, line: 1499, column: 8)
!11254 = distinct !DILexicalBlock(scope: !11239, file: !1245, line: 1498, column: 8)
!11255 = !DILocation(line: 1499, column: 29, scope: !11253)
!11256 = !DILocation(line: 1499, column: 25, scope: !11253)
!11257 = !DILocation(line: 1499, column: 35, scope: !11253)
!11258 = !DILocation(line: 1499, column: 22, scope: !11253)
!11259 = !DILocation(line: 1499, column: 41, scope: !11253)
!11260 = !DILocation(line: 1499, column: 8, scope: !11254)
!11261 = !DILocation(line: 1500, column: 12, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11253, file: !1245, line: 1499, column: 47)
!11263 = !DILocation(line: 1501, column: 14, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11262, file: !1245, line: 1501, column: 9)
!11265 = !DILocation(line: 1501, column: 9, scope: !11262)
!11266 = !DILocation(line: 1502, column: 14, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11262, file: !1245, line: 1502, column: 9)
!11268 = !DILocation(line: 1502, column: 9, scope: !11262)
!11269 = !DILocation(line: 1503, column: 21, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11262, file: !1245, line: 1503, column: 9)
!11271 = !DILocation(line: 1503, column: 14, scope: !11270)
!11272 = !DILocation(line: 1503, column: 9, scope: !11262)
!11273 = !DILocation(line: 1505, column: 11, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11275, file: !1245, line: 1505, column: 10)
!11275 = distinct !DILexicalBlock(scope: !11270, file: !1245, line: 1503, column: 31)
!11276 = !DILocation(line: 1505, column: 10, scope: !11275)
!11277 = !DILocation(line: 1506, column: 16, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11274, file: !1245, line: 1505, column: 20)
!11279 = !DILocation(line: 1506, column: 21, scope: !11278)
!11280 = !DILocation(line: 1508, column: 40, scope: !11275)
!11281 = !DILocation(line: 1508, column: 13, scope: !11275)
!11282 = !DILocation(line: 1509, column: 10, scope: !11275)
!11283 = !DILocation(line: 1514, column: 10, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11275, file: !1245, line: 1514, column: 10)
!11285 = !DILocation(line: 1514, column: 26, scope: !11284)
!11286 = !DILocation(line: 1514, column: 10, scope: !11275)
!11287 = !DILocation(line: 1515, column: 14, scope: !11275)
!11288 = !DILocation(line: 1515, column: 6, scope: !11275)
!11289 = !DILocation(line: 1516, column: 32, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11275, file: !1245, line: 1516, column: 6)
!11291 = !DILocation(line: 1516, column: 22, scope: !11290)
!11292 = !DILocation(line: 0, scope: !11290)
!11293 = !DILocation(line: 1516, column: 62, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11290, file: !1245, line: 1516, column: 6)
!11295 = !DILocation(line: 1516, column: 56, scope: !11294)
!11296 = !DILocation(line: 1516, column: 6, scope: !11290)
!11297 = !DILocation(line: 1517, column: 17, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11294, file: !1245, line: 1516, column: 89)
!11299 = !DILocation(line: 1518, column: 11, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11298, file: !1245, line: 1518, column: 11)
!11301 = !DILocation(line: 1518, column: 27, scope: !11300)
!11302 = !DILocation(line: 1518, column: 11, scope: !11298)
!11303 = !DILocation(line: 1516, column: 70, scope: !11294)
!11304 = !DILocation(line: 1516, column: 85, scope: !11294)
!11305 = !DILocation(line: 1516, column: 58, scope: !11294)
!11306 = distinct !{!11306, !11296, !11307}
!11307 = !DILocation(line: 1519, column: 6, scope: !11290)
!11308 = !DILocation(line: 1520, column: 18, scope: !11275)
!11309 = !DILocation(line: 1525, column: 5, scope: !11275)
!11310 = !DILocation(line: 0, scope: !11262)
!11311 = !DILocation(line: 1526, column: 15, scope: !11262)
!11312 = !DILocation(line: 1527, column: 16, scope: !11262)
!11313 = !DILocation(line: 1527, column: 14, scope: !11262)
!11314 = !DILocation(line: 1528, column: 4, scope: !11262)
!11315 = !DILocation(line: 1531, column: 11, scope: !11213)
!11316 = !DILocation(line: 1532, column: 20, scope: !11213)
!11317 = !DILocation(line: 1532, column: 6, scope: !11213)
!11318 = !DILocation(line: 1532, column: 10, scope: !11213)
!11319 = !DILocation(line: 1534, column: 2, scope: !11213)
!11320 = !DILocation(line: 1535, column: 1, scope: !11213)
!11321 = distinct !DISubprogram(name: "create_chain", scope: !1245, file: !1245, line: 1312, type: !10875, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11322)
!11322 = !{!11323, !11324, !11325, !11326, !11327, !11328, !11329}
!11323 = !DILocalVariable(name: "obj", arg: 1, scope: !11321, file: !1245, line: 1313, type: !10635)
!11324 = !DILocalVariable(name: "clst", arg: 2, scope: !11321, file: !1245, line: 1314, type: !1279)
!11325 = !DILocalVariable(name: "cs", scope: !11321, file: !1245, line: 1317, type: !1279)
!11326 = !DILocalVariable(name: "ncl", scope: !11321, file: !1245, line: 1317, type: !1279)
!11327 = !DILocalVariable(name: "scl", scope: !11321, file: !1245, line: 1317, type: !1279)
!11328 = !DILocalVariable(name: "res", scope: !11321, file: !1245, line: 1318, type: !1284)
!11329 = !DILocalVariable(name: "fs", scope: !11321, file: !1245, line: 1319, type: !1311)
!11330 = !DILocation(line: 0, scope: !11321)
!11331 = !DILocation(line: 1319, column: 19, scope: !11321)
!11332 = !DILocation(line: 1322, column: 11, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11321, file: !1245, line: 1322, column: 6)
!11334 = !DILocation(line: 1322, column: 6, scope: !11321)
!11335 = !DILocation(line: 1323, column: 13, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11333, file: !1245, line: 1322, column: 17)
!11337 = !DILocation(line: 1324, column: 11, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11336, file: !1245, line: 1324, column: 7)
!11339 = !DILocation(line: 1324, column: 16, scope: !11338)
!11340 = !DILocation(line: 1324, column: 30, scope: !11338)
!11341 = !DILocation(line: 1324, column: 23, scope: !11338)
!11342 = !DILocation(line: 1324, column: 7, scope: !11336)
!11343 = !DILocation(line: 1324, column: 40, scope: !11338)
!11344 = !DILocation(line: 1327, column: 8, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11333, file: !1245, line: 1326, column: 7)
!11346 = !DILocation(line: 1328, column: 10, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11345, file: !1245, line: 1328, column: 7)
!11348 = !DILocation(line: 1328, column: 7, scope: !11345)
!11349 = !DILocation(line: 1329, column: 10, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11345, file: !1245, line: 1329, column: 7)
!11351 = !DILocation(line: 1329, column: 7, scope: !11345)
!11352 = !DILocation(line: 1330, column: 16, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11345, file: !1245, line: 1330, column: 7)
!11354 = !DILocation(line: 1330, column: 10, scope: !11353)
!11355 = !DILocation(line: 1330, column: 7, scope: !11345)
!11356 = !DILocation(line: 0, scope: !11333)
!11357 = !DILocation(line: 1353, column: 3, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11321, file: !1245, line: 1351, column: 2)
!11359 = !DILocation(line: 0, scope: !11358)
!11360 = !DILocation(line: 1354, column: 7, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11362, file: !1245, line: 1353, column: 12)
!11362 = distinct !DILexicalBlock(scope: !11363, file: !1245, line: 1353, column: 3)
!11363 = distinct !DILexicalBlock(scope: !11358, file: !1245, line: 1353, column: 3)
!11364 = !DILocation(line: 1355, column: 19, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11361, file: !1245, line: 1355, column: 8)
!11366 = !DILocation(line: 1355, column: 12, scope: !11365)
!11367 = !DILocation(line: 1355, column: 8, scope: !11361)
!11368 = !DILocation(line: 1359, column: 9, scope: !11361)
!11369 = !DILocation(line: 1360, column: 8, scope: !11361)
!11370 = !DILocation(line: 1362, column: 12, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11361, file: !1245, line: 1362, column: 8)
!11372 = !DILocation(line: 1362, column: 8, scope: !11361)
!11373 = distinct !{!11373, !11374, !11375}
!11374 = !DILocation(line: 1353, column: 3, scope: !11363)
!11375 = !DILocation(line: 1363, column: 3, scope: !11363)
!11376 = !DILocation(line: 1369, column: 9, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !1245, line: 1368, column: 9)
!11378 = distinct !DILexicalBlock(scope: !11321, file: !1245, line: 1366, column: 6)
!11379 = !DILocation(line: 1370, column: 11, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11377, file: !1245, line: 1370, column: 7)
!11381 = !DILocation(line: 1370, column: 20, scope: !11380)
!11382 = !DILocation(line: 1371, column: 10, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11380, file: !1245, line: 1370, column: 29)
!11384 = !DILocation(line: 1372, column: 3, scope: !11383)
!11385 = !DILocation(line: 0, scope: !11377)
!11386 = !DILocation(line: 1375, column: 10, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11321, file: !1245, line: 1375, column: 6)
!11388 = !DILocation(line: 1375, column: 6, scope: !11321)
!11389 = !DILocation(line: 1376, column: 7, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11387, file: !1245, line: 1375, column: 20)
!11391 = !DILocation(line: 1376, column: 17, scope: !11390)
!11392 = !DILocation(line: 1377, column: 11, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11390, file: !1245, line: 1377, column: 7)
!11394 = !DILocation(line: 1377, column: 27, scope: !11393)
!11395 = !DILocation(line: 1377, column: 36, scope: !11393)
!11396 = !DILocation(line: 1377, column: 21, scope: !11393)
!11397 = !DILocation(line: 1377, column: 7, scope: !11390)
!11398 = !DILocation(line: 1377, column: 54, scope: !11393)
!11399 = !DILocation(line: 1377, column: 41, scope: !11393)
!11400 = !DILocation(line: 1378, column: 7, scope: !11390)
!11401 = !DILocation(line: 1378, column: 16, scope: !11390)
!11402 = !DILocation(line: 1379, column: 2, scope: !11390)
!11403 = !DILocation(line: 1380, column: 14, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11387, file: !1245, line: 1379, column: 9)
!11405 = !DILocation(line: 1380, column: 9, scope: !11404)
!11406 = !DILocation(line: 1384, column: 1, scope: !11321)
!11407 = distinct !DISubprogram(name: "create_name", scope: !1245, file: !1245, line: 2570, type: !11408, scopeLine: 2574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11410)
!11408 = !DISubroutineType(types: !11409)
!11409 = !{!1284, !10628, !1287}
!11410 = !{!11411, !11412, !11413, !11414, !11415, !11416, !11417, !11418, !11419}
!11411 = !DILocalVariable(name: "dp", arg: 1, scope: !11407, file: !1245, line: 2571, type: !10628)
!11412 = !DILocalVariable(name: "path", arg: 2, scope: !11407, file: !1245, line: 2572, type: !1287)
!11413 = !DILocalVariable(name: "c", scope: !11407, file: !1245, line: 2694, type: !1283)
!11414 = !DILocalVariable(name: "d", scope: !11407, file: !1245, line: 2694, type: !1283)
!11415 = !DILocalVariable(name: "sfn", scope: !11407, file: !1245, line: 2694, type: !1282)
!11416 = !DILocalVariable(name: "ni", scope: !11407, file: !1245, line: 2695, type: !1281)
!11417 = !DILocalVariable(name: "si", scope: !11407, file: !1245, line: 2695, type: !1281)
!11418 = !DILocalVariable(name: "i", scope: !11407, file: !1245, line: 2695, type: !1281)
!11419 = !DILocalVariable(name: "p", scope: !11407, file: !1245, line: 2696, type: !662)
!11420 = !DILocation(line: 0, scope: !11407)
!11421 = !DILocation(line: 2694, column: 10, scope: !11407)
!11422 = !DILocation(line: 2699, column: 6, scope: !11407)
!11423 = !DILocation(line: 2699, column: 19, scope: !11407)
!11424 = !DILocation(line: 2700, column: 2, scope: !11407)
!11425 = !DILocation(line: 2703, column: 6, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11407, file: !1245, line: 2703, column: 6)
!11427 = !DILocation(line: 2703, column: 12, scope: !11426)
!11428 = !DILocation(line: 2703, column: 6, scope: !11407)
!11429 = !DILocation(line: 2717, column: 9, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11431, file: !1245, line: 2717, column: 7)
!11431 = distinct !DILexicalBlock(scope: !11432, file: !1245, line: 2715, column: 11)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !1245, line: 2715, column: 2)
!11433 = distinct !DILexicalBlock(scope: !11407, file: !1245, line: 2715, column: 2)
!11434 = !DILocation(line: 2717, column: 7, scope: !11431)
!11435 = !DILocation(line: 2707, column: 4, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11437, file: !1245, line: 2704, column: 12)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !1245, line: 2704, column: 3)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !1245, line: 2704, column: 3)
!11439 = distinct !DILexicalBlock(scope: !11426, file: !1245, line: 2703, column: 20)
!11440 = !DILocation(line: 2707, column: 13, scope: !11436)
!11441 = !DILocation(line: 2705, column: 14, scope: !11436)
!11442 = !DILocation(line: 2706, column: 10, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11436, file: !1245, line: 2706, column: 8)
!11444 = !DILocation(line: 2706, column: 17, scope: !11443)
!11445 = distinct !{!11445, !11446, !11447}
!11446 = !DILocation(line: 2704, column: 3, scope: !11438)
!11447 = !DILocation(line: 2708, column: 3, scope: !11438)
!11448 = !DILocation(line: 2709, column: 16, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11439, file: !1245, line: 2709, column: 7)
!11450 = !DILocation(line: 2710, column: 13, scope: !11439)
!11451 = !DILocation(line: 2710, column: 9, scope: !11439)
!11452 = !DILocation(line: 2712, column: 3, scope: !11439)
!11453 = !DILocation(line: 2717, column: 7, scope: !11430)
!11454 = !DILocation(line: 2718, column: 16, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11431, file: !1245, line: 2718, column: 7)
!11456 = !DILocation(line: 2719, column: 4, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11455, file: !1245, line: 2718, column: 30)
!11458 = !DILocation(line: 0, scope: !11431)
!11459 = !DILocation(line: 2719, column: 11, scope: !11457)
!11460 = !DILocation(line: 2719, column: 24, scope: !11457)
!11461 = !DILocation(line: 2719, column: 44, scope: !11457)
!11462 = distinct !{!11462, !11456, !11461}
!11463 = !DILocation(line: 2722, column: 21, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11431, file: !1245, line: 2722, column: 7)
!11465 = !DILocation(line: 2722, column: 7, scope: !11431)
!11466 = !DILocation(line: 2723, column: 17, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !1245, line: 2723, column: 8)
!11468 = distinct !DILexicalBlock(scope: !11464, file: !1245, line: 2722, column: 28)
!11469 = distinct !{!11469, !11470, !11471}
!11470 = !DILocation(line: 2715, column: 2, scope: !11433)
!11471 = !DILocation(line: 2746, column: 2, scope: !11433)
!11472 = !DILocation(line: 2716, column: 13, scope: !11431)
!11473 = !DILocation(line: 2716, column: 17, scope: !11431)
!11474 = !DILocation(line: 2727, column: 9, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11431, file: !1245, line: 2727, column: 7)
!11476 = !DILocation(line: 2727, column: 7, scope: !11431)
!11477 = !DILocation(line: 2729, column: 16, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11475, file: !1245, line: 2727, column: 18)
!11479 = !DILocation(line: 2729, column: 8, scope: !11478)
!11480 = !DILocation(line: 2742, column: 39, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !1245, line: 2742, column: 8)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !1245, line: 2741, column: 10)
!11483 = distinct !DILexicalBlock(scope: !11431, file: !1245, line: 2736, column: 7)
!11484 = !DILocation(line: 2735, column: 3, scope: !11478)
!11485 = !DILocation(line: 2742, column: 8, scope: !11481)
!11486 = !DILocation(line: 2742, column: 8, scope: !11482)
!11487 = !DILocation(line: 2743, column: 8, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11482, file: !1245, line: 2743, column: 8)
!11489 = !DILocation(line: 2744, column: 9, scope: !11482)
!11490 = !DILocation(line: 2744, column: 4, scope: !11482)
!11491 = !DILocation(line: 2744, column: 13, scope: !11482)
!11492 = !DILocation(line: 2747, column: 12, scope: !11407)
!11493 = !DILocation(line: 2747, column: 8, scope: !11407)
!11494 = !DILocation(line: 2748, column: 6, scope: !11407)
!11495 = !DILocation(line: 2748, column: 8, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11407, file: !1245, line: 2748, column: 6)
!11497 = !DILocation(line: 2750, column: 6, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11407, file: !1245, line: 2750, column: 6)
!11499 = !DILocation(line: 2750, column: 13, scope: !11498)
!11500 = !DILocation(line: 2750, column: 6, scope: !11407)
!11501 = !DILocation(line: 2750, column: 29, scope: !11498)
!11502 = !DILocation(line: 2750, column: 22, scope: !11498)
!11503 = !DILocation(line: 2755, column: 1, scope: !11407)
!11504 = distinct !DISubprogram(name: "dir_find", scope: !1245, file: !1245, line: 2166, type: !10712, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11505)
!11505 = !{!11506, !11507, !11508, !11509}
!11506 = !DILocalVariable(name: "dp", arg: 1, scope: !11504, file: !1245, line: 2167, type: !10628)
!11507 = !DILocalVariable(name: "res", scope: !11504, file: !1245, line: 2170, type: !1284)
!11508 = !DILocalVariable(name: "fs", scope: !11504, file: !1245, line: 2171, type: !1311)
!11509 = !DILocalVariable(name: "c", scope: !11504, file: !1245, line: 2172, type: !1283)
!11510 = !DILocation(line: 0, scope: !11504)
!11511 = !DILocation(line: 2171, column: 22, scope: !11504)
!11512 = !DILocation(line: 2177, column: 8, scope: !11504)
!11513 = !DILocation(line: 2178, column: 10, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11504, file: !1245, line: 2178, column: 6)
!11515 = !DILocation(line: 2178, column: 6, scope: !11504)
!11516 = !DILocation(line: 2203, column: 11, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11504, file: !1245, line: 2200, column: 5)
!11518 = !DILocation(line: 2228, column: 58, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11517, file: !1245, line: 2228, column: 7)
!11520 = !DILocation(line: 2200, column: 2, scope: !11504)
!11521 = !DILocation(line: 2201, column: 29, scope: !11517)
!11522 = !DILocation(line: 2201, column: 9, scope: !11517)
!11523 = !DILocation(line: 2202, column: 11, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11517, file: !1245, line: 2202, column: 7)
!11525 = !DILocation(line: 2202, column: 7, scope: !11517)
!11526 = !DILocation(line: 2203, column: 7, scope: !11517)
!11527 = !DILocation(line: 2204, column: 9, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11517, file: !1245, line: 2204, column: 7)
!11529 = !DILocation(line: 2204, column: 7, scope: !11517)
!11530 = !DILocation(line: 2227, column: 18, scope: !11517)
!11531 = !DILocation(line: 2227, column: 36, scope: !11517)
!11532 = !DILocation(line: 2227, column: 16, scope: !11517)
!11533 = !DILocation(line: 2228, column: 9, scope: !11519)
!11534 = !DILocation(line: 2228, column: 27, scope: !11519)
!11535 = !DILocation(line: 2228, column: 37, scope: !11519)
!11536 = !DILocation(line: 2228, column: 41, scope: !11519)
!11537 = !DILocation(line: 2228, column: 7, scope: !11517)
!11538 = !DILocation(line: 2230, column: 9, scope: !11517)
!11539 = !DILocation(line: 2231, column: 15, scope: !11504)
!11540 = !DILocation(line: 2231, column: 2, scope: !11517)
!11541 = distinct !{!11541, !11520, !11542}
!11542 = !DILocation(line: 2231, column: 23, scope: !11504)
!11543 = !DILocation(line: 2234, column: 1, scope: !11504)
!11544 = distinct !DISubprogram(name: "mem_cmp", scope: !1245, file: !1245, line: 701, type: !11545, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11547)
!11545 = !DISubroutineType(types: !11546)
!11546 = !{!7, !704, !704, !1281}
!11547 = !{!11548, !11549, !11550, !11551, !11552, !11553}
!11548 = !DILocalVariable(name: "dst", arg: 1, scope: !11544, file: !1245, line: 701, type: !704)
!11549 = !DILocalVariable(name: "src", arg: 2, scope: !11544, file: !1245, line: 701, type: !704)
!11550 = !DILocalVariable(name: "cnt", arg: 3, scope: !11544, file: !1245, line: 701, type: !1281)
!11551 = !DILocalVariable(name: "d", scope: !11544, file: !1245, line: 702, type: !1285)
!11552 = !DILocalVariable(name: "s", scope: !11544, file: !1245, line: 702, type: !1285)
!11553 = !DILocalVariable(name: "r", scope: !11544, file: !1245, line: 703, type: !7)
!11554 = !DILocation(line: 0, scope: !11544)
!11555 = !DILocation(line: 705, column: 2, scope: !11544)
!11556 = !DILocation(line: 706, column: 9, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11544, file: !1245, line: 705, column: 5)
!11558 = !DILocation(line: 706, column: 7, scope: !11557)
!11559 = !DILocation(line: 706, column: 16, scope: !11557)
!11560 = !DILocation(line: 706, column: 14, scope: !11557)
!11561 = !DILocation(line: 706, column: 12, scope: !11557)
!11562 = !DILocation(line: 707, column: 11, scope: !11544)
!11563 = !DILocation(line: 707, column: 17, scope: !11544)
!11564 = !DILocation(line: 707, column: 2, scope: !11557)
!11565 = distinct !{!11565, !11555, !11566}
!11566 = !DILocation(line: 707, column: 26, scope: !11544)
!11567 = !DILocation(line: 709, column: 2, scope: !11544)
!11568 = distinct !DISubprogram(name: "chk_chr", scope: !1245, file: !1245, line: 714, type: !11569, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11571)
!11569 = !DISubroutineType(types: !11570)
!11570 = !{!7, !662, !7}
!11571 = !{!11572, !11573}
!11572 = !DILocalVariable(name: "str", arg: 1, scope: !11568, file: !1245, line: 714, type: !662)
!11573 = !DILocalVariable(name: "chr", arg: 2, scope: !11568, file: !1245, line: 714, type: !7)
!11574 = !DILocation(line: 0, scope: !11568)
!11575 = !DILocation(line: 715, column: 2, scope: !11568)
!11576 = !DILocation(line: 715, column: 9, scope: !11568)
!11577 = !DILocation(line: 715, column: 14, scope: !11568)
!11578 = !DILocation(line: 715, column: 33, scope: !11568)
!11579 = distinct !{!11579, !11575, !11578}
!11580 = !DILocation(line: 716, column: 2, scope: !11568)
!11581 = distinct !DISubprogram(name: "f_read", scope: !1245, file: !1245, line: 3446, type: !11582, scopeLine: 3452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11585)
!11582 = !DISubroutineType(types: !11583)
!11583 = !{!1284, !10414, !51, !1281, !11584}
!11584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!11585 = !{!11586, !11587, !11588, !11589, !11590, !11591, !11592, !11593, !11594, !11595, !11596, !11597, !11598}
!11586 = !DILocalVariable(name: "fp", arg: 1, scope: !11581, file: !1245, line: 3447, type: !10414)
!11587 = !DILocalVariable(name: "buff", arg: 2, scope: !11581, file: !1245, line: 3448, type: !51)
!11588 = !DILocalVariable(name: "btr", arg: 3, scope: !11581, file: !1245, line: 3449, type: !1281)
!11589 = !DILocalVariable(name: "br", arg: 4, scope: !11581, file: !1245, line: 3450, type: !11584)
!11590 = !DILocalVariable(name: "res", scope: !11581, file: !1245, line: 3453, type: !1284)
!11591 = !DILocalVariable(name: "fs", scope: !11581, file: !1245, line: 3454, type: !1311)
!11592 = !DILocalVariable(name: "clst", scope: !11581, file: !1245, line: 3455, type: !1279)
!11593 = !DILocalVariable(name: "sect", scope: !11581, file: !1245, line: 3455, type: !1279)
!11594 = !DILocalVariable(name: "remain", scope: !11581, file: !1245, line: 3456, type: !1291)
!11595 = !DILocalVariable(name: "rcnt", scope: !11581, file: !1245, line: 3457, type: !1281)
!11596 = !DILocalVariable(name: "cc", scope: !11581, file: !1245, line: 3457, type: !1281)
!11597 = !DILocalVariable(name: "csect", scope: !11581, file: !1245, line: 3457, type: !1281)
!11598 = !DILocalVariable(name: "rbuff", scope: !11581, file: !1245, line: 3458, type: !1282)
!11599 = !DILocation(line: 0, scope: !11581)
!11600 = !DILocation(line: 3454, column: 2, scope: !11581)
!11601 = !DILocation(line: 3461, column: 6, scope: !11581)
!11602 = !DILocation(line: 3462, column: 22, scope: !11581)
!11603 = !DILocation(line: 3462, column: 8, scope: !11581)
!11604 = !DILocation(line: 3463, column: 10, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11581, file: !1245, line: 3463, column: 6)
!11606 = !DILocation(line: 3463, column: 19, scope: !11605)
!11607 = !DILocation(line: 3463, column: 42, scope: !11605)
!11608 = !DILocation(line: 3463, column: 29, scope: !11605)
!11609 = !DILocation(line: 3463, column: 47, scope: !11605)
!11610 = !DILocation(line: 3463, column: 6, scope: !11581)
!11611 = !DILocation(line: 3464, column: 12, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11581, file: !1245, line: 3464, column: 6)
!11613 = !DILocation(line: 3464, column: 17, scope: !11612)
!11614 = !DILocation(line: 3464, column: 6, scope: !11581)
!11615 = !DILocation(line: 3465, column: 19, scope: !11581)
!11616 = !DILocation(line: 3465, column: 33, scope: !11581)
!11617 = !DILocation(line: 3465, column: 27, scope: !11581)
!11618 = !DILocation(line: 3466, column: 10, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11581, file: !1245, line: 3466, column: 6)
!11620 = !DILocation(line: 3466, column: 6, scope: !11581)
!11621 = !DILocation(line: 3468, column: 2, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11581, file: !1245, line: 3468, column: 2)
!11623 = !DILocation(line: 3470, column: 11, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !1245, line: 3470, column: 7)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !1245, line: 3469, column: 62)
!11626 = distinct !DILexicalBlock(scope: !11622, file: !1245, line: 3468, column: 2)
!11627 = !DILocation(line: 3470, column: 16, scope: !11624)
!11628 = !DILocation(line: 3470, column: 25, scope: !11624)
!11629 = !DILocation(line: 3470, column: 7, scope: !11625)
!11630 = !DILocation(line: 3471, column: 28, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11624, file: !1245, line: 3470, column: 31)
!11632 = !DILocation(line: 3471, column: 44, scope: !11631)
!11633 = !DILocation(line: 3471, column: 40, scope: !11631)
!11634 = !DILocation(line: 3471, column: 50, scope: !11631)
!11635 = !DILocation(line: 3471, column: 37, scope: !11631)
!11636 = !DILocation(line: 3472, column: 14, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11631, file: !1245, line: 3472, column: 8)
!11638 = !DILocation(line: 3472, column: 8, scope: !11631)
!11639 = !DILocation(line: 3489, column: 30, scope: !11631)
!11640 = !DILocation(line: 3473, column: 18, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11642, file: !1245, line: 3473, column: 9)
!11642 = distinct !DILexicalBlock(scope: !11637, file: !1245, line: 3472, column: 20)
!11643 = !DILocation(line: 3473, column: 9, scope: !11642)
!11644 = !DILocation(line: 3474, column: 21, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11641, file: !1245, line: 3473, column: 24)
!11646 = !DILocation(line: 3475, column: 5, scope: !11645)
!11647 = !DILocation(line: 3477, column: 14, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !1245, line: 3477, column: 10)
!11649 = distinct !DILexicalBlock(scope: !11641, file: !1245, line: 3475, column: 12)
!11650 = !DILocation(line: 3477, column: 10, scope: !11648)
!11651 = !DILocation(line: 3477, column: 10, scope: !11649)
!11652 = !DILocation(line: 3478, column: 14, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11648, file: !1245, line: 3477, column: 21)
!11654 = !DILocation(line: 3479, column: 6, scope: !11653)
!11655 = !DILocation(line: 3482, column: 36, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11648, file: !1245, line: 3481, column: 6)
!11657 = !DILocation(line: 3482, column: 14, scope: !11656)
!11658 = !DILocation(line: 0, scope: !11641)
!11659 = !DILocation(line: 3485, column: 14, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11642, file: !1245, line: 3485, column: 9)
!11661 = !DILocation(line: 3485, column: 9, scope: !11642)
!11662 = !DILocation(line: 3486, column: 14, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11642, file: !1245, line: 3486, column: 9)
!11664 = !DILocation(line: 3486, column: 9, scope: !11642)
!11665 = !DILocation(line: 3487, column: 15, scope: !11642)
!11666 = !DILocation(line: 3488, column: 4, scope: !11642)
!11667 = !DILocation(line: 3489, column: 11, scope: !11631)
!11668 = !DILocation(line: 3490, column: 9, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11631, file: !1245, line: 3490, column: 8)
!11670 = !DILocation(line: 3490, column: 8, scope: !11631)
!11671 = !DILocation(line: 3491, column: 9, scope: !11631)
!11672 = !DILocation(line: 3492, column: 13, scope: !11631)
!11673 = !DILocation(line: 3493, column: 8, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11631, file: !1245, line: 3493, column: 8)
!11675 = !DILocation(line: 3493, column: 8, scope: !11631)
!11676 = !DILocation(line: 3494, column: 15, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !1245, line: 3494, column: 9)
!11678 = distinct !DILexicalBlock(scope: !11674, file: !1245, line: 3493, column: 12)
!11679 = !DILocation(line: 3494, column: 26, scope: !11677)
!11680 = !DILocation(line: 3494, column: 22, scope: !11677)
!11681 = !DILocation(line: 3494, column: 20, scope: !11677)
!11682 = !DILocation(line: 3494, column: 9, scope: !11678)
!11683 = !DILocation(line: 3497, column: 23, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11678, file: !1245, line: 3497, column: 9)
!11685 = !DILocation(line: 3497, column: 9, scope: !11684)
!11686 = !DILocation(line: 3497, column: 45, scope: !11684)
!11687 = !DILocation(line: 3497, column: 9, scope: !11678)
!11688 = !DILocation(line: 3504, column: 14, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11678, file: !1245, line: 3504, column: 9)
!11690 = !DILocation(line: 3504, column: 19, scope: !11689)
!11691 = !DILocation(line: 3504, column: 31, scope: !11689)
!11692 = !DILocation(line: 3504, column: 38, scope: !11689)
!11693 = !DILocation(line: 3504, column: 43, scope: !11689)
!11694 = !DILocation(line: 3504, column: 50, scope: !11689)
!11695 = !DILocation(line: 3504, column: 9, scope: !11678)
!11696 = !DILocation(line: 3505, column: 41, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11689, file: !1245, line: 3504, column: 56)
!11698 = !DILocation(line: 3505, column: 20, scope: !11697)
!11699 = !DILocation(line: 3505, column: 6, scope: !11697)
!11700 = !DILocation(line: 3506, column: 5, scope: !11697)
!11701 = !DILocation(line: 3509, column: 19, scope: !11678)
!11702 = !DILocation(line: 3510, column: 5, scope: !11678)
!11703 = !DILocation(line: 3513, column: 12, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11631, file: !1245, line: 3513, column: 8)
!11705 = !DILocation(line: 3513, column: 17, scope: !11704)
!11706 = !DILocation(line: 3513, column: 8, scope: !11631)
!11707 = !DILocation(line: 3515, column: 13, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !1245, line: 3515, column: 9)
!11709 = distinct !DILexicalBlock(scope: !11704, file: !1245, line: 3513, column: 26)
!11710 = !DILocation(line: 3515, column: 18, scope: !11708)
!11711 = !DILocation(line: 3515, column: 9, scope: !11709)
!11712 = !DILocation(line: 3516, column: 25, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !1245, line: 3516, column: 10)
!11714 = distinct !DILexicalBlock(scope: !11708, file: !1245, line: 3515, column: 30)
!11715 = !DILocation(line: 3516, column: 10, scope: !11713)
!11716 = !DILocation(line: 3516, column: 52, scope: !11713)
!11717 = !DILocation(line: 3516, column: 10, scope: !11714)
!11718 = !DILocation(line: 3517, column: 15, scope: !11714)
!11719 = !DILocation(line: 3518, column: 5, scope: !11714)
!11720 = !DILocation(line: 3520, column: 23, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11709, file: !1245, line: 3520, column: 9)
!11722 = !DILocation(line: 3520, column: 9, scope: !11721)
!11723 = !DILocation(line: 3520, column: 46, scope: !11721)
!11724 = !DILocation(line: 3520, column: 9, scope: !11709)
!11725 = !DILocation(line: 3523, column: 13, scope: !11631)
!11726 = !DILocation(line: 3525, column: 29, scope: !11625)
!11727 = !DILocation(line: 3525, column: 34, scope: !11625)
!11728 = !DILocation(line: 3524, column: 3, scope: !11631)
!11729 = !DILocation(line: 3525, column: 17, scope: !11625)
!11730 = !DILocation(line: 3526, column: 12, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11625, file: !1245, line: 3526, column: 7)
!11732 = !DILocation(line: 3526, column: 7, scope: !11625)
!11733 = !DILocation(line: 3531, column: 26, scope: !11625)
!11734 = !DILocation(line: 3531, column: 3, scope: !11625)
!11735 = !DILocation(line: 3533, column: 2, scope: !11625)
!11736 = !DILocation(line: 0, scope: !11625)
!11737 = !DILocation(line: 3469, column: 27, scope: !11626)
!11738 = !DILocation(line: 3469, column: 40, scope: !11626)
!11739 = !DILocation(line: 3469, column: 53, scope: !11626)
!11740 = distinct !{!11740, !11621, !11741}
!11741 = !DILocation(line: 3533, column: 2, scope: !11622)
!11742 = !DILocation(line: 3469, column: 9, scope: !11626)
!11743 = !DILocation(line: 0, scope: !11631)
!11744 = !DILocation(line: 3536, column: 1, scope: !11581)
!11745 = distinct !DISubprogram(name: "validate", scope: !1245, file: !1245, line: 3163, type: !11746, scopeLine: 3167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11748)
!11746 = !DISubroutineType(types: !11747)
!11747 = !{!1284, !10635, !10016}
!11748 = !{!11749, !11750, !11751}
!11749 = !DILocalVariable(name: "obj", arg: 1, scope: !11745, file: !1245, line: 3164, type: !10635)
!11750 = !DILocalVariable(name: "fs", arg: 2, scope: !11745, file: !1245, line: 3165, type: !10016)
!11751 = !DILocalVariable(name: "res", scope: !11745, file: !1245, line: 3168, type: !1284)
!11752 = !DILocation(line: 0, scope: !11745)
!11753 = !DILocation(line: 3171, column: 7, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11745, file: !1245, line: 3171, column: 6)
!11755 = !DILocation(line: 3171, column: 11, scope: !11754)
!11756 = !DILocation(line: 3171, column: 20, scope: !11754)
!11757 = !DILocation(line: 3171, column: 15, scope: !11754)
!11758 = !DILocation(line: 3171, column: 23, scope: !11754)
!11759 = !DILocation(line: 3171, column: 36, scope: !11754)
!11760 = !DILocation(line: 3171, column: 27, scope: !11754)
!11761 = !DILocation(line: 3171, column: 44, scope: !11754)
!11762 = !DILocation(line: 3171, column: 56, scope: !11754)
!11763 = !DILocation(line: 3171, column: 67, scope: !11754)
!11764 = !DILocation(line: 3171, column: 59, scope: !11754)
!11765 = !DILocation(line: 3171, column: 70, scope: !11754)
!11766 = !DILocation(line: 3171, column: 95, scope: !11754)
!11767 = !DILocation(line: 3171, column: 74, scope: !11754)
!11768 = !DILocation(line: 3171, column: 100, scope: !11754)
!11769 = !DILocation(line: 3171, column: 6, scope: !11745)
!11770 = !DILocation(line: 3175, column: 14, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11754, file: !1245, line: 3174, column: 9)
!11772 = !DILocation(line: 0, scope: !11754)
!11773 = !DILocation(line: 3179, column: 2, scope: !11745)
!11774 = distinct !DISubprogram(name: "clmt_clust", scope: !1245, file: !1245, line: 1397, type: !11775, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11777)
!11775 = !DISubroutineType(types: !11776)
!11776 = !{!1279, !10414, !1291}
!11777 = !{!11778, !11779, !11780, !11781, !11782, !11783}
!11778 = !DILocalVariable(name: "fp", arg: 1, scope: !11774, file: !1245, line: 1398, type: !10414)
!11779 = !DILocalVariable(name: "ofs", arg: 2, scope: !11774, file: !1245, line: 1399, type: !1291)
!11780 = !DILocalVariable(name: "cl", scope: !11774, file: !1245, line: 1402, type: !1279)
!11781 = !DILocalVariable(name: "ncl", scope: !11774, file: !1245, line: 1402, type: !1279)
!11782 = !DILocalVariable(name: "tbl", scope: !11774, file: !1245, line: 1402, type: !1439)
!11783 = !DILocalVariable(name: "fs", scope: !11774, file: !1245, line: 1403, type: !1311)
!11784 = !DILocation(line: 0, scope: !11774)
!11785 = !DILocation(line: 1406, column: 12, scope: !11774)
!11786 = !DILocation(line: 1409, column: 9, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !1245, line: 1408, column: 11)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !1245, line: 1408, column: 2)
!11789 = distinct !DILexicalBlock(scope: !11774, file: !1245, line: 1408, column: 2)
!11790 = !DILocation(line: 1410, column: 11, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11787, file: !1245, line: 1410, column: 7)
!11792 = !DILocation(line: 1410, column: 7, scope: !11787)
!11793 = !DILocation(line: 1407, column: 19, scope: !11774)
!11794 = !DILocation(line: 1403, column: 22, scope: !11774)
!11795 = !DILocation(line: 1407, column: 34, scope: !11774)
!11796 = !DILocation(line: 1407, column: 30, scope: !11774)
!11797 = !DILocation(line: 1407, column: 28, scope: !11774)
!11798 = !DILocation(line: 1408, column: 2, scope: !11789)
!11799 = !DILocation(line: 1409, column: 13, scope: !11787)
!11800 = !DILocation(line: 1411, column: 10, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11787, file: !1245, line: 1411, column: 7)
!11802 = !DILocation(line: 1411, column: 7, scope: !11787)
!11803 = !DILocation(line: 1412, column: 6, scope: !11787)
!11804 = distinct !{!11804, !11798, !11805}
!11805 = !DILocation(line: 1413, column: 2, scope: !11789)
!11806 = !DILocation(line: 1414, column: 14, scope: !11774)
!11807 = !DILocation(line: 1414, column: 12, scope: !11774)
!11808 = !DILocation(line: 1414, column: 2, scope: !11774)
!11809 = !DILocation(line: 1415, column: 1, scope: !11774)
!11810 = distinct !DISubprogram(name: "f_write", scope: !1245, file: !1245, line: 3546, type: !11811, scopeLine: 3552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !11813)
!11811 = !DISubroutineType(types: !11812)
!11812 = !{!1284, !10414, !704, !1281, !11584}
!11813 = !{!11814, !11815, !11816, !11817, !11818, !11819, !11820, !11821, !11822, !11823, !11824, !11825}
!11814 = !DILocalVariable(name: "fp", arg: 1, scope: !11810, file: !1245, line: 3547, type: !10414)
!11815 = !DILocalVariable(name: "buff", arg: 2, scope: !11810, file: !1245, line: 3548, type: !704)
!11816 = !DILocalVariable(name: "btw", arg: 3, scope: !11810, file: !1245, line: 3549, type: !1281)
!11817 = !DILocalVariable(name: "bw", arg: 4, scope: !11810, file: !1245, line: 3550, type: !11584)
!11818 = !DILocalVariable(name: "res", scope: !11810, file: !1245, line: 3553, type: !1284)
!11819 = !DILocalVariable(name: "fs", scope: !11810, file: !1245, line: 3554, type: !1311)
!11820 = !DILocalVariable(name: "clst", scope: !11810, file: !1245, line: 3555, type: !1279)
!11821 = !DILocalVariable(name: "sect", scope: !11810, file: !1245, line: 3555, type: !1279)
!11822 = !DILocalVariable(name: "wcnt", scope: !11810, file: !1245, line: 3556, type: !1281)
!11823 = !DILocalVariable(name: "cc", scope: !11810, file: !1245, line: 3556, type: !1281)
!11824 = !DILocalVariable(name: "csect", scope: !11810, file: !1245, line: 3556, type: !1281)
!11825 = !DILocalVariable(name: "wbuff", scope: !11810, file: !1245, line: 3557, type: !1285)
!11826 = !DILocation(line: 0, scope: !11810)
!11827 = !DILocation(line: 3554, column: 2, scope: !11810)
!11828 = !DILocation(line: 3560, column: 6, scope: !11810)
!11829 = !DILocation(line: 3561, column: 22, scope: !11810)
!11830 = !DILocation(line: 3561, column: 8, scope: !11810)
!11831 = !DILocation(line: 3562, column: 10, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11810, file: !1245, line: 3562, column: 6)
!11833 = !DILocation(line: 3562, column: 19, scope: !11832)
!11834 = !DILocation(line: 3562, column: 42, scope: !11832)
!11835 = !DILocation(line: 3562, column: 29, scope: !11832)
!11836 = !DILocation(line: 3562, column: 47, scope: !11832)
!11837 = !DILocation(line: 3562, column: 6, scope: !11810)
!11838 = !DILocation(line: 3563, column: 12, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11810, file: !1245, line: 3563, column: 6)
!11840 = !DILocation(line: 3563, column: 17, scope: !11839)
!11841 = !DILocation(line: 3563, column: 6, scope: !11810)
!11842 = !DILocation(line: 3566, column: 61, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11810, file: !1245, line: 3566, column: 6)
!11844 = !DILocation(line: 3566, column: 73, scope: !11843)
!11845 = !DILocation(line: 3566, column: 6, scope: !11810)
!11846 = !DILocation(line: 3570, column: 2, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11810, file: !1245, line: 3570, column: 2)
!11848 = !DILocation(line: 3572, column: 11, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !1245, line: 3572, column: 7)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !1245, line: 3571, column: 139)
!11851 = distinct !DILexicalBlock(scope: !11847, file: !1245, line: 3570, column: 2)
!11852 = !DILocation(line: 3572, column: 16, scope: !11849)
!11853 = !DILocation(line: 3572, column: 25, scope: !11849)
!11854 = !DILocation(line: 3572, column: 7, scope: !11850)
!11855 = !DILocation(line: 3573, column: 28, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11849, file: !1245, line: 3572, column: 31)
!11857 = !DILocation(line: 3573, column: 45, scope: !11856)
!11858 = !DILocation(line: 3573, column: 41, scope: !11856)
!11859 = !DILocation(line: 3573, column: 51, scope: !11856)
!11860 = !DILocation(line: 3573, column: 38, scope: !11856)
!11861 = !DILocation(line: 3574, column: 14, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11856, file: !1245, line: 3574, column: 8)
!11863 = !DILocation(line: 3574, column: 8, scope: !11856)
!11864 = !DILocation(line: 3575, column: 18, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11866, file: !1245, line: 3575, column: 9)
!11866 = distinct !DILexicalBlock(scope: !11862, file: !1245, line: 3574, column: 20)
!11867 = !DILocation(line: 3575, column: 9, scope: !11866)
!11868 = !DILocation(line: 3576, column: 21, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11865, file: !1245, line: 3575, column: 24)
!11870 = !DILocation(line: 3577, column: 15, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11869, file: !1245, line: 3577, column: 10)
!11872 = !DILocation(line: 3577, column: 10, scope: !11869)
!11873 = !DILocation(line: 3578, column: 14, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11871, file: !1245, line: 3577, column: 21)
!11875 = !DILocation(line: 3579, column: 6, scope: !11874)
!11876 = !DILocation(line: 3582, column: 14, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !1245, line: 3582, column: 10)
!11878 = distinct !DILexicalBlock(scope: !11865, file: !1245, line: 3580, column: 12)
!11879 = !DILocation(line: 3582, column: 10, scope: !11877)
!11880 = !DILocation(line: 3582, column: 10, scope: !11878)
!11881 = !DILocation(line: 3583, column: 14, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11877, file: !1245, line: 3582, column: 21)
!11883 = !DILocation(line: 3584, column: 6, scope: !11882)
!11884 = !DILocation(line: 3587, column: 41, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11877, file: !1245, line: 3586, column: 6)
!11886 = !DILocation(line: 3587, column: 14, scope: !11885)
!11887 = !DILocation(line: 0, scope: !11865)
!11888 = !DILocation(line: 3590, column: 9, scope: !11866)
!11889 = !DILocation(line: 3591, column: 20, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11891, file: !1245, line: 3591, column: 20)
!11891 = distinct !DILexicalBlock(scope: !11866, file: !1245, line: 3591, column: 9)
!11892 = !DILocation(line: 3592, column: 29, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11894, file: !1245, line: 3592, column: 29)
!11894 = distinct !DILexicalBlock(scope: !11866, file: !1245, line: 3592, column: 9)
!11895 = !DILocation(line: 3593, column: 15, scope: !11866)
!11896 = !DILocation(line: 3594, column: 17, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11866, file: !1245, line: 3594, column: 9)
!11898 = !DILocation(line: 3594, column: 24, scope: !11897)
!11899 = !DILocation(line: 3594, column: 9, scope: !11866)
!11900 = !DILocation(line: 3594, column: 45, scope: !11897)
!11901 = !DILocation(line: 3594, column: 30, scope: !11897)
!11902 = !DILocation(line: 3599, column: 12, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11856, file: !1245, line: 3599, column: 8)
!11904 = !DILocation(line: 3599, column: 17, scope: !11903)
!11905 = !DILocation(line: 3599, column: 8, scope: !11856)
!11906 = !DILocation(line: 3600, column: 24, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !1245, line: 3600, column: 9)
!11908 = distinct !DILexicalBlock(scope: !11903, file: !1245, line: 3599, column: 29)
!11909 = !DILocation(line: 3600, column: 42, scope: !11907)
!11910 = !DILocation(line: 3600, column: 9, scope: !11907)
!11911 = !DILocation(line: 3600, column: 51, scope: !11907)
!11912 = !DILocation(line: 3600, column: 9, scope: !11908)
!11913 = !DILocation(line: 3600, column: 62, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11907, file: !1245, line: 3600, column: 62)
!11915 = !DILocation(line: 3601, column: 14, scope: !11908)
!11916 = !DILocation(line: 3602, column: 4, scope: !11908)
!11917 = !DILocation(line: 3604, column: 30, scope: !11856)
!11918 = !DILocation(line: 3604, column: 11, scope: !11856)
!11919 = !DILocation(line: 3605, column: 9, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11856, file: !1245, line: 3605, column: 8)
!11921 = !DILocation(line: 3605, column: 8, scope: !11856)
!11922 = !DILocation(line: 3605, column: 15, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11920, file: !1245, line: 3605, column: 15)
!11924 = !DILocation(line: 3606, column: 9, scope: !11856)
!11925 = !DILocation(line: 3607, column: 13, scope: !11856)
!11926 = !DILocation(line: 3608, column: 8, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11856, file: !1245, line: 3608, column: 8)
!11928 = !DILocation(line: 3608, column: 8, scope: !11856)
!11929 = !DILocation(line: 3609, column: 15, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11931, file: !1245, line: 3609, column: 9)
!11931 = distinct !DILexicalBlock(scope: !11927, file: !1245, line: 3608, column: 12)
!11932 = !DILocation(line: 3609, column: 26, scope: !11930)
!11933 = !DILocation(line: 3609, column: 22, scope: !11930)
!11934 = !DILocation(line: 3609, column: 20, scope: !11930)
!11935 = !DILocation(line: 3609, column: 9, scope: !11931)
!11936 = !DILocation(line: 3612, column: 24, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11931, file: !1245, line: 3612, column: 9)
!11938 = !DILocation(line: 3612, column: 9, scope: !11937)
!11939 = !DILocation(line: 3612, column: 46, scope: !11937)
!11940 = !DILocation(line: 3612, column: 9, scope: !11931)
!11941 = !DILocation(line: 3612, column: 57, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11937, file: !1245, line: 3612, column: 57)
!11943 = !DILocation(line: 3620, column: 13, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11931, file: !1245, line: 3620, column: 9)
!11945 = !DILocation(line: 3620, column: 18, scope: !11944)
!11946 = !DILocation(line: 3620, column: 25, scope: !11944)
!11947 = !DILocation(line: 3620, column: 9, scope: !11931)
!11948 = !DILocation(line: 3621, column: 50, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11944, file: !1245, line: 3620, column: 31)
!11950 = !DILocation(line: 3621, column: 29, scope: !11949)
!11951 = !DILocation(line: 3621, column: 6, scope: !11949)
!11952 = !DILocation(line: 3622, column: 15, scope: !11949)
!11953 = !DILocation(line: 3623, column: 5, scope: !11949)
!11954 = !DILocation(line: 3626, column: 19, scope: !11931)
!11955 = !DILocation(line: 3627, column: 5, scope: !11931)
!11956 = !DILocation(line: 3635, column: 12, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11856, file: !1245, line: 3635, column: 8)
!11958 = !DILocation(line: 3635, column: 17, scope: !11957)
!11959 = !DILocation(line: 3635, column: 25, scope: !11957)
!11960 = !DILocation(line: 3636, column: 9, scope: !11957)
!11961 = !DILocation(line: 3636, column: 24, scope: !11957)
!11962 = !DILocation(line: 3636, column: 14, scope: !11957)
!11963 = !DILocation(line: 3636, column: 32, scope: !11957)
!11964 = !DILocation(line: 3637, column: 19, scope: !11957)
!11965 = !DILocation(line: 3637, column: 5, scope: !11957)
!11966 = !DILocation(line: 3637, column: 42, scope: !11957)
!11967 = !DILocation(line: 3635, column: 8, scope: !11856)
!11968 = !DILocation(line: 3638, column: 6, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !1245, line: 3638, column: 6)
!11970 = distinct !DILexicalBlock(scope: !11957, file: !1245, line: 3637, column: 53)
!11971 = !DILocation(line: 3641, column: 13, scope: !11856)
!11972 = !DILocation(line: 3643, column: 29, scope: !11850)
!11973 = !DILocation(line: 3643, column: 34, scope: !11850)
!11974 = !DILocation(line: 3642, column: 3, scope: !11856)
!11975 = !DILocation(line: 3643, column: 17, scope: !11850)
!11976 = !DILocation(line: 3644, column: 12, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11850, file: !1245, line: 3644, column: 7)
!11978 = !DILocation(line: 3644, column: 7, scope: !11850)
!11979 = !DILocation(line: 3650, column: 19, scope: !11850)
!11980 = !DILocation(line: 3650, column: 3, scope: !11850)
!11981 = !DILocation(line: 3651, column: 12, scope: !11850)
!11982 = !DILocation(line: 3653, column: 2, scope: !11850)
!11983 = !DILocation(line: 0, scope: !11850)
!11984 = !DILocation(line: 3571, column: 27, scope: !11851)
!11985 = !DILocation(line: 3571, column: 74, scope: !11851)
!11986 = !DILocation(line: 3571, column: 64, scope: !11851)
!11987 = !DILocation(line: 3571, column: 54, scope: !11851)
!11988 = !DILocation(line: 3571, column: 52, scope: !11851)
!11989 = !DILocation(line: 3571, column: 117, scope: !11851)
!11990 = !DILocation(line: 3571, column: 130, scope: !11851)
!11991 = distinct !{!11991, !11846, !11992}
!11992 = !DILocation(line: 3653, column: 2, scope: !11847)
!11993 = !DILocation(line: 3571, column: 9, scope: !11851)
!11994 = !DILocation(line: 3655, column: 11, scope: !11810)
!11995 = !DILocation(line: 3657, column: 2, scope: !11810)
!11996 = !DILocation(line: 3658, column: 1, scope: !11810)
!11997 = distinct !DISubprogram(name: "f_sync", scope: !1245, file: !1245, line: 3667, type: !11998, scopeLine: 3670, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12000)
!11998 = !DISubroutineType(types: !11999)
!11999 = !{!1284, !10414}
!12000 = !{!12001, !12002, !12003, !12004, !12005}
!12001 = !DILocalVariable(name: "fp", arg: 1, scope: !11997, file: !1245, line: 3668, type: !10414)
!12002 = !DILocalVariable(name: "res", scope: !11997, file: !1245, line: 3671, type: !1284)
!12003 = !DILocalVariable(name: "fs", scope: !11997, file: !1245, line: 3672, type: !1311)
!12004 = !DILocalVariable(name: "tm", scope: !11997, file: !1245, line: 3673, type: !1279)
!12005 = !DILocalVariable(name: "dir", scope: !11997, file: !1245, line: 3674, type: !1282)
!12006 = !DILocation(line: 0, scope: !11997)
!12007 = !DILocation(line: 3672, column: 2, scope: !11997)
!12008 = !DILocation(line: 3678, column: 22, scope: !11997)
!12009 = !DILocation(line: 3678, column: 8, scope: !11997)
!12010 = !DILocation(line: 3679, column: 10, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11997, file: !1245, line: 3679, column: 6)
!12012 = !DILocation(line: 3679, column: 6, scope: !11997)
!12013 = !DILocation(line: 3680, column: 11, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12015, file: !1245, line: 3680, column: 7)
!12015 = distinct !DILexicalBlock(scope: !12011, file: !1245, line: 3679, column: 20)
!12016 = !DILocation(line: 3680, column: 7, scope: !12014)
!12017 = !DILocation(line: 3680, column: 16, scope: !12014)
!12018 = !DILocation(line: 3680, column: 7, scope: !12015)
!12019 = !DILocation(line: 3682, column: 17, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !1245, line: 3682, column: 8)
!12021 = distinct !DILexicalBlock(scope: !12014, file: !1245, line: 3680, column: 31)
!12022 = !DILocation(line: 0, scope: !12021)
!12023 = !DILocation(line: 3682, column: 8, scope: !12021)
!12024 = !DILocation(line: 3683, column: 24, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12026, file: !1245, line: 3683, column: 9)
!12026 = distinct !DILexicalBlock(scope: !12020, file: !1245, line: 3682, column: 29)
!12027 = !DILocation(line: 3683, column: 29, scope: !12025)
!12028 = !DILocation(line: 3683, column: 42, scope: !12025)
!12029 = !DILocation(line: 3683, column: 9, scope: !12025)
!12030 = !DILocation(line: 3683, column: 51, scope: !12025)
!12031 = !DILocation(line: 3683, column: 9, scope: !12026)
!12032 = !DILocation(line: 3684, column: 14, scope: !12026)
!12033 = !DILocation(line: 3685, column: 4, scope: !12026)
!12034 = !DILocation(line: 3717, column: 31, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12021, file: !1245, line: 3716, column: 4)
!12036 = !DILocation(line: 3717, column: 11, scope: !12035)
!12037 = !DILocation(line: 3718, column: 13, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12035, file: !1245, line: 3718, column: 9)
!12039 = !DILocation(line: 3718, column: 9, scope: !12035)
!12040 = !DILocation(line: 3719, column: 16, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12038, file: !1245, line: 3718, column: 23)
!12042 = !DILocation(line: 3720, column: 6, scope: !12041)
!12043 = !DILocation(line: 3720, column: 20, scope: !12041)
!12044 = !DILocation(line: 3721, column: 23, scope: !12041)
!12045 = !DILocation(line: 3721, column: 40, scope: !12041)
!12046 = !DILocation(line: 3721, column: 6, scope: !12041)
!12047 = !DILocation(line: 3722, column: 19, scope: !12041)
!12048 = !DILocation(line: 3722, column: 50, scope: !12041)
!12049 = !DILocation(line: 3722, column: 6, scope: !12041)
!12050 = !DILocation(line: 3723, column: 19, scope: !12041)
!12051 = !DILocation(line: 3723, column: 6, scope: !12041)
!12052 = !DILocation(line: 3724, column: 18, scope: !12041)
!12053 = !DILocation(line: 3724, column: 6, scope: !12041)
!12054 = !DILocation(line: 3725, column: 10, scope: !12041)
!12055 = !DILocation(line: 3725, column: 16, scope: !12041)
!12056 = !DILocation(line: 3726, column: 12, scope: !12041)
!12057 = !DILocation(line: 3727, column: 15, scope: !12041)
!12058 = !DILocation(line: 3728, column: 5, scope: !12041)
!12059 = !DILocation(line: 3734, column: 1, scope: !11997)
!12060 = distinct !DISubprogram(name: "sync_fs", scope: !1245, file: !1245, line: 929, type: !10367, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12061)
!12061 = !{!12062, !12063}
!12062 = !DILocalVariable(name: "fs", arg: 1, scope: !12060, file: !1245, line: 930, type: !1311)
!12063 = !DILocalVariable(name: "res", scope: !12060, file: !1245, line: 933, type: !1284)
!12064 = !DILocation(line: 0, scope: !12060)
!12065 = !DILocation(line: 936, column: 8, scope: !12060)
!12066 = !DILocation(line: 937, column: 10, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12060, file: !1245, line: 937, column: 6)
!12068 = !DILocation(line: 937, column: 6, scope: !12060)
!12069 = !DILocation(line: 939, column: 11, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12071, file: !1245, line: 939, column: 7)
!12071 = distinct !DILexicalBlock(scope: !12067, file: !1245, line: 937, column: 20)
!12072 = !DILocation(line: 939, column: 19, scope: !12070)
!12073 = !DILocation(line: 939, column: 31, scope: !12070)
!12074 = !DILocation(line: 939, column: 38, scope: !12070)
!12075 = !DILocation(line: 939, column: 47, scope: !12070)
!12076 = !DILocation(line: 939, column: 7, scope: !12071)
!12077 = !DILocation(line: 941, column: 12, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12070, file: !1245, line: 939, column: 53)
!12079 = !DILocation(line: 941, column: 4, scope: !12078)
!12080 = !DILocation(line: 942, column: 20, scope: !12078)
!12081 = !DILocation(line: 942, column: 4, scope: !12078)
!12082 = !DILocation(line: 943, column: 4, scope: !12078)
!12083 = !DILocation(line: 944, column: 21, scope: !12078)
!12084 = !DILocation(line: 944, column: 4, scope: !12078)
!12085 = !DILocation(line: 945, column: 21, scope: !12078)
!12086 = !DILocation(line: 945, column: 43, scope: !12078)
!12087 = !DILocation(line: 945, column: 4, scope: !12078)
!12088 = !DILocation(line: 946, column: 21, scope: !12078)
!12089 = !DILocation(line: 946, column: 41, scope: !12078)
!12090 = !DILocation(line: 946, column: 4, scope: !12078)
!12091 = !DILocation(line: 948, column: 22, scope: !12078)
!12092 = !DILocation(line: 948, column: 30, scope: !12078)
!12093 = !DILocation(line: 948, column: 8, scope: !12078)
!12094 = !DILocation(line: 948, column: 16, scope: !12078)
!12095 = !DILocation(line: 949, column: 19, scope: !12078)
!12096 = !DILocation(line: 949, column: 4, scope: !12078)
!12097 = !DILocation(line: 950, column: 17, scope: !12078)
!12098 = !DILocation(line: 951, column: 3, scope: !12078)
!12099 = !DILocation(line: 953, column: 22, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12071, file: !1245, line: 953, column: 7)
!12101 = !DILocation(line: 953, column: 7, scope: !12100)
!12102 = !DILocation(line: 953, column: 41, scope: !12100)
!12103 = !DILocation(line: 953, column: 7, scope: !12071)
!12104 = !DILocation(line: 956, column: 2, scope: !12060)
!12105 = distinct !DISubprogram(name: "f_close", scope: !1245, file: !1245, line: 3745, type: !11998, scopeLine: 3748, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12106)
!12106 = !{!12107, !12108, !12109}
!12107 = !DILocalVariable(name: "fp", arg: 1, scope: !12105, file: !1245, line: 3746, type: !10414)
!12108 = !DILocalVariable(name: "res", scope: !12105, file: !1245, line: 3749, type: !1284)
!12109 = !DILocalVariable(name: "fs", scope: !12105, file: !1245, line: 3750, type: !1311)
!12110 = !DILocation(line: 0, scope: !12105)
!12111 = !DILocation(line: 3750, column: 2, scope: !12105)
!12112 = !DILocation(line: 3753, column: 8, scope: !12105)
!12113 = !DILocation(line: 3754, column: 10, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12105, file: !1245, line: 3754, column: 6)
!12115 = !DILocation(line: 3754, column: 6, scope: !12105)
!12116 = !DILocation(line: 3757, column: 23, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12114, file: !1245, line: 3756, column: 2)
!12118 = !DILocation(line: 3757, column: 9, scope: !12117)
!12119 = !DILocation(line: 3758, column: 11, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12117, file: !1245, line: 3758, column: 7)
!12121 = !DILocation(line: 3758, column: 7, scope: !12117)
!12122 = !DILocation(line: 3764, column: 13, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !1245, line: 3763, column: 4)
!12124 = distinct !DILexicalBlock(scope: !12120, file: !1245, line: 3758, column: 21)
!12125 = !DILocation(line: 3764, column: 16, scope: !12123)
!12126 = !DILocation(line: 3769, column: 3, scope: !12124)
!12127 = !DILocation(line: 3772, column: 1, scope: !12105)
!12128 = !DILocation(line: 3771, column: 2, scope: !12105)
!12129 = distinct !DISubprogram(name: "f_chdir", scope: !1245, file: !1245, line: 3801, type: !1297, scopeLine: 3804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12130)
!12130 = !{!12131, !12132, !12133, !12134}
!12131 = !DILocalVariable(name: "path", arg: 1, scope: !12129, file: !1245, line: 3802, type: !1288)
!12132 = !DILocalVariable(name: "res", scope: !12129, file: !1245, line: 3805, type: !1284)
!12133 = !DILocalVariable(name: "dj", scope: !12129, file: !1245, line: 3806, type: !1303)
!12134 = !DILocalVariable(name: "fs", scope: !12129, file: !1245, line: 3807, type: !1311)
!12135 = !DILocation(line: 0, scope: !12129)
!12136 = !DILocation(line: 3806, column: 2, scope: !12129)
!12137 = !DILocation(line: 3806, column: 6, scope: !12129)
!12138 = !DILocation(line: 3807, column: 2, scope: !12129)
!12139 = !DILocation(line: 3811, column: 8, scope: !12129)
!12140 = !DILocation(line: 3812, column: 10, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12129, file: !1245, line: 3812, column: 6)
!12142 = !DILocation(line: 3812, column: 6, scope: !12129)
!12143 = !DILocation(line: 3813, column: 15, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12141, file: !1245, line: 3812, column: 20)
!12145 = !DILocation(line: 3813, column: 10, scope: !12144)
!12146 = !DILocation(line: 3813, column: 13, scope: !12144)
!12147 = !DILocation(line: 3815, column: 26, scope: !12144)
!12148 = !DILocation(line: 3815, column: 9, scope: !12144)
!12149 = !DILocation(line: 3816, column: 7, scope: !12144)
!12150 = !DILocation(line: 3817, column: 8, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !1245, line: 3817, column: 8)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !1245, line: 3816, column: 21)
!12153 = distinct !DILexicalBlock(scope: !12144, file: !1245, line: 3816, column: 7)
!12154 = !DILocation(line: 3817, column: 22, scope: !12151)
!12155 = !DILocation(line: 3817, column: 8, scope: !12152)
!12156 = !DILocation(line: 3818, column: 23, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !1245, line: 3817, column: 35)
!12158 = !DILocation(line: 3818, column: 9, scope: !12157)
!12159 = !DILocation(line: 3818, column: 14, scope: !12157)
!12160 = !DILocation(line: 3826, column: 4, scope: !12157)
!12161 = !DILocation(line: 3827, column: 16, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12163, file: !1245, line: 3827, column: 9)
!12163 = distinct !DILexicalBlock(scope: !12151, file: !1245, line: 3826, column: 11)
!12164 = !DILocation(line: 3827, column: 21, scope: !12162)
!12165 = !DILocation(line: 3827, column: 9, scope: !12163)
!12166 = !DILocation(line: 3837, column: 34, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12168, file: !1245, line: 3836, column: 6)
!12168 = distinct !DILexicalBlock(scope: !12162, file: !1245, line: 3827, column: 31)
!12169 = !DILocation(line: 3837, column: 18, scope: !12167)
!12170 = !DILocation(line: 3837, column: 11, scope: !12167)
!12171 = !DILocation(line: 3837, column: 16, scope: !12167)
!12172 = !DILocation(line: 3839, column: 5, scope: !12168)
!12173 = !DILocation(line: 3845, column: 7, scope: !12144)
!12174 = !DILocation(line: 3849, column: 1, scope: !12129)
!12175 = !DILocation(line: 3848, column: 2, scope: !12129)
!12176 = distinct !DISubprogram(name: "f_getcwd", scope: !1245, file: !1245, line: 3853, type: !12177, scopeLine: 3857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12180)
!12177 = !DISubroutineType(types: !12178)
!12178 = !{!1284, !12179, !1281}
!12179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!12180 = !{!12181, !12182, !12183, !12184, !12185, !12186, !12187, !12188, !12189, !12190}
!12181 = !DILocalVariable(name: "buff", arg: 1, scope: !12176, file: !1245, line: 3854, type: !12179)
!12182 = !DILocalVariable(name: "len", arg: 2, scope: !12176, file: !1245, line: 3855, type: !1281)
!12183 = !DILocalVariable(name: "res", scope: !12176, file: !1245, line: 3858, type: !1284)
!12184 = !DILocalVariable(name: "dj", scope: !12176, file: !1245, line: 3859, type: !1303)
!12185 = !DILocalVariable(name: "fs", scope: !12176, file: !1245, line: 3860, type: !1311)
!12186 = !DILocalVariable(name: "i", scope: !12176, file: !1245, line: 3861, type: !1281)
!12187 = !DILocalVariable(name: "n", scope: !12176, file: !1245, line: 3861, type: !1281)
!12188 = !DILocalVariable(name: "ccl", scope: !12176, file: !1245, line: 3862, type: !1279)
!12189 = !DILocalVariable(name: "tp", scope: !12176, file: !1245, line: 3863, type: !12179)
!12190 = !DILocalVariable(name: "fno", scope: !12176, file: !1245, line: 3864, type: !12191)
!12191 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILINFO", file: !1248, line: 214, baseType: !12192)
!12192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1248, line: 203, size: 192, elements: !12193)
!12193 = !{!12194, !12195, !12196, !12197, !12198}
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !12192, file: !1248, line: 204, baseType: !1291, size: 32)
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "fdate", scope: !12192, file: !1248, line: 205, baseType: !1292, size: 16, offset: 32)
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !12192, file: !1248, line: 206, baseType: !1292, size: 16, offset: 48)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "fattrib", scope: !12192, file: !1248, line: 207, baseType: !1283, size: 8, offset: 64)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "fname", scope: !12192, file: !1248, line: 212, baseType: !12199, size: 104, offset: 72)
!12199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1290, size: 104, elements: !560)
!12200 = !DILocation(line: 0, scope: !12176)
!12201 = !DILocation(line: 3859, column: 2, scope: !12176)
!12202 = !DILocation(line: 3859, column: 6, scope: !12176)
!12203 = !DILocation(line: 3860, column: 2, scope: !12176)
!12204 = !DILocation(line: 3864, column: 2, scope: !12176)
!12205 = !DILocation(line: 3864, column: 10, scope: !12176)
!12206 = !DILocation(line: 3868, column: 8, scope: !12176)
!12207 = !DILocation(line: 3870, column: 8, scope: !12176)
!12208 = !DILocation(line: 3871, column: 10, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12176, file: !1245, line: 3871, column: 6)
!12210 = !DILocation(line: 3871, column: 6, scope: !12176)
!12211 = !DILocation(line: 3872, column: 15, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12209, file: !1245, line: 3871, column: 20)
!12213 = !DILocation(line: 3872, column: 10, scope: !12212)
!12214 = !DILocation(line: 3872, column: 13, scope: !12212)
!12215 = !DILocation(line: 3876, column: 24, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12217, file: !1245, line: 3875, column: 46)
!12217 = distinct !DILexicalBlock(scope: !12212, file: !1245, line: 3875, column: 7)
!12218 = !DILocation(line: 3876, column: 11, scope: !12216)
!12219 = !DILocation(line: 3876, column: 18, scope: !12216)
!12220 = !DILocation(line: 3877, column: 33, scope: !12216)
!12221 = !DILocation(line: 3877, column: 4, scope: !12216)
!12222 = !DILocation(line: 3902, column: 8, scope: !12212)
!12223 = !DILocation(line: 3908, column: 8, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !1245, line: 3903, column: 21)
!12225 = distinct !DILexicalBlock(scope: !12212, file: !1245, line: 3903, column: 7)
!12226 = !DILocation(line: 3878, column: 11, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12216, file: !1245, line: 3877, column: 39)
!12228 = !DILocation(line: 3879, column: 13, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12227, file: !1245, line: 3879, column: 9)
!12230 = !DILocation(line: 3879, column: 9, scope: !12227)
!12231 = !DILocation(line: 3880, column: 30, scope: !12227)
!12232 = !DILocation(line: 3880, column: 11, scope: !12227)
!12233 = !DILocation(line: 3881, column: 13, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12227, file: !1245, line: 3881, column: 9)
!12235 = !DILocation(line: 3881, column: 9, scope: !12227)
!12236 = !DILocation(line: 3882, column: 37, scope: !12227)
!12237 = !DILocation(line: 3882, column: 21, scope: !12227)
!12238 = !DILocation(line: 3882, column: 19, scope: !12227)
!12239 = !DILocation(line: 3883, column: 11, scope: !12227)
!12240 = !DILocation(line: 3884, column: 13, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12227, file: !1245, line: 3884, column: 9)
!12242 = !DILocation(line: 3884, column: 9, scope: !12227)
!12243 = !DILocation(line: 3886, column: 12, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12227, file: !1245, line: 3885, column: 8)
!12245 = !DILocation(line: 3887, column: 14, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12244, file: !1245, line: 3887, column: 10)
!12247 = !DILocation(line: 3887, column: 10, scope: !12244)
!12248 = !DILocation(line: 3888, column: 33, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12244, file: !1245, line: 3888, column: 10)
!12250 = !DILocation(line: 3888, column: 17, scope: !12249)
!12251 = !DILocation(line: 3888, column: 14, scope: !12249)
!12252 = !DILocation(line: 3888, column: 10, scope: !12244)
!12253 = !DILocation(line: 3889, column: 12, scope: !12244)
!12254 = !DILocation(line: 3890, column: 18, scope: !12227)
!12255 = !DILocation(line: 3890, column: 5, scope: !12244)
!12256 = distinct !{!12256, !12257, !12258}
!12257 = !DILocation(line: 3885, column: 5, scope: !12227)
!12258 = !DILocation(line: 3890, column: 26, scope: !12227)
!12259 = !DILocation(line: 0, scope: !12244)
!12260 = !DILocation(line: 3891, column: 13, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12227, file: !1245, line: 3891, column: 9)
!12262 = !DILocation(line: 3891, column: 9, scope: !12227)
!12263 = !DILocation(line: 3893, column: 5, scope: !12227)
!12264 = !DILocation(line: 3894, column: 10, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12227, file: !1245, line: 3894, column: 5)
!12266 = !DILocation(line: 0, scope: !12265)
!12267 = !DILocation(line: 3894, column: 17, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12265, file: !1245, line: 3894, column: 5)
!12269 = !DILocation(line: 3894, column: 5, scope: !12265)
!12270 = !DILocation(line: 3894, column: 32, scope: !12268)
!12271 = distinct !{!12271, !12269, !12272}
!12272 = !DILocation(line: 3894, column: 36, scope: !12265)
!12273 = !DILocation(line: 3895, column: 15, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12227, file: !1245, line: 3895, column: 9)
!12275 = !DILocation(line: 3895, column: 11, scope: !12274)
!12276 = !DILocation(line: 3895, column: 9, scope: !12227)
!12277 = !DILocation(line: 3898, column: 5, scope: !12227)
!12278 = !DILocation(line: 3898, column: 37, scope: !12227)
!12279 = !DILocation(line: 3898, column: 27, scope: !12227)
!12280 = !DILocation(line: 3898, column: 20, scope: !12227)
!12281 = !DILocation(line: 3898, column: 15, scope: !12227)
!12282 = !DILocation(line: 3898, column: 25, scope: !12227)
!12283 = distinct !{!12283, !12277, !12284}
!12284 = !DILocation(line: 3898, column: 40, scope: !12227)
!12285 = !DILocation(line: 0, scope: !12212)
!12286 = !DILocation(line: 3899, column: 10, scope: !12227)
!12287 = !DILocation(line: 3899, column: 5, scope: !12227)
!12288 = !DILocation(line: 3899, column: 15, scope: !12227)
!12289 = !DILocation(line: 3877, column: 25, scope: !12216)
!12290 = distinct !{!12290, !12221, !12291}
!12291 = !DILocation(line: 3900, column: 4, scope: !12216)
!12292 = !DILocation(line: 3908, column: 10, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12224, file: !1245, line: 3908, column: 8)
!12294 = !DILocation(line: 3909, column: 8, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12293, file: !1245, line: 3908, column: 18)
!12296 = !DILocation(line: 3909, column: 11, scope: !12295)
!12297 = !DILocation(line: 3910, column: 4, scope: !12295)
!12298 = !DILocation(line: 3912, column: 20, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12293, file: !1245, line: 3910, column: 11)
!12300 = !DILocation(line: 3912, column: 14, scope: !12299)
!12301 = !DILocation(line: 3912, column: 9, scope: !12299)
!12302 = !DILocation(line: 3912, column: 12, scope: !12299)
!12303 = !DILocation(line: 3913, column: 14, scope: !12299)
!12304 = !DILocation(line: 3912, column: 6, scope: !12299)
!12305 = distinct !{!12305, !12306, !12307}
!12306 = !DILocation(line: 3911, column: 5, scope: !12299)
!12307 = !DILocation(line: 3913, column: 19, scope: !12299)
!12308 = !DILocation(line: 3916, column: 7, scope: !12212)
!12309 = !DILocation(line: 3918, column: 2, scope: !12212)
!12310 = !DILocation(line: 3921, column: 1, scope: !12176)
!12311 = !DILocation(line: 3920, column: 2, scope: !12176)
!12312 = distinct !DISubprogram(name: "dir_read", scope: !1245, file: !1245, line: 2089, type: !11214, scopeLine: 2093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12313)
!12313 = !{!12314, !12315, !12316, !12317, !12318, !12319}
!12314 = !DILocalVariable(name: "dp", arg: 1, scope: !12312, file: !1245, line: 2090, type: !10628)
!12315 = !DILocalVariable(name: "vol", arg: 2, scope: !12312, file: !1245, line: 2091, type: !7)
!12316 = !DILocalVariable(name: "res", scope: !12312, file: !1245, line: 2094, type: !1284)
!12317 = !DILocalVariable(name: "fs", scope: !12312, file: !1245, line: 2095, type: !1311)
!12318 = !DILocalVariable(name: "a", scope: !12312, file: !1245, line: 2096, type: !1283)
!12319 = !DILocalVariable(name: "c", scope: !12312, file: !1245, line: 2096, type: !1283)
!12320 = !DILocation(line: 0, scope: !12312)
!12321 = !DILocation(line: 2095, column: 22, scope: !12312)
!12322 = !DILocation(line: 2101, column: 13, scope: !12312)
!12323 = !DILocation(line: 2101, column: 2, scope: !12312)
!12324 = distinct !{!12324, !12323, !12325}
!12325 = !DILocation(line: 2151, column: 2, scope: !12312)
!12326 = !DILocation(line: 2102, column: 9, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12312, file: !1245, line: 2101, column: 19)
!12328 = !DILocation(line: 2103, column: 11, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12327, file: !1245, line: 2103, column: 7)
!12330 = !DILocation(line: 2103, column: 7, scope: !12327)
!12331 = !DILocation(line: 2104, column: 11, scope: !12327)
!12332 = !DILocation(line: 2104, column: 7, scope: !12327)
!12333 = !DILocation(line: 2105, column: 9, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12327, file: !1245, line: 2105, column: 7)
!12335 = !DILocation(line: 2105, column: 7, scope: !12327)
!12336 = !DILocation(line: 2123, column: 23, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12327, file: !1245, line: 2122, column: 3)
!12338 = !DILocation(line: 2123, column: 41, scope: !12337)
!12339 = !DILocation(line: 2123, column: 17, scope: !12337)
!12340 = !DILocation(line: 2144, column: 18, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12337, file: !1245, line: 2144, column: 8)
!12342 = !DILocation(line: 2144, column: 57, scope: !12341)
!12343 = !DILocation(line: 2144, column: 68, scope: !12341)
!12344 = !DILocation(line: 2144, column: 79, scope: !12341)
!12345 = !DILocation(line: 2144, column: 8, scope: !12337)
!12346 = !DILocation(line: 2149, column: 9, scope: !12327)
!12347 = !DILocation(line: 2150, column: 11, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12327, file: !1245, line: 2150, column: 7)
!12349 = !DILocation(line: 2150, column: 7, scope: !12327)
!12350 = !DILocation(line: 2153, column: 6, scope: !12312)
!12351 = !DILocation(line: 2153, column: 29, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12312, file: !1245, line: 2153, column: 6)
!12353 = !DILocation(line: 2153, column: 20, scope: !12352)
!12354 = !DILocation(line: 2154, column: 2, scope: !12312)
!12355 = distinct !DISubprogram(name: "get_fileinfo", scope: !1245, file: !1245, line: 2396, type: !12356, scopeLine: 2400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12359)
!12356 = !DISubroutineType(types: !12357)
!12357 = !{null, !10628, !12358}
!12358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12191, size: 32)
!12359 = !{!12360, !12361, !12362, !12363, !12364, !12365}
!12360 = !DILocalVariable(name: "dp", arg: 1, scope: !12355, file: !1245, line: 2397, type: !10628)
!12361 = !DILocalVariable(name: "fno", arg: 2, scope: !12355, file: !1245, line: 2398, type: !12358)
!12362 = !DILocalVariable(name: "i", scope: !12355, file: !1245, line: 2401, type: !1281)
!12363 = !DILocalVariable(name: "j", scope: !12355, file: !1245, line: 2401, type: !1281)
!12364 = !DILocalVariable(name: "c", scope: !12355, file: !1245, line: 2402, type: !1290)
!12365 = !DILocalVariable(name: "tm", scope: !12355, file: !1245, line: 2403, type: !1279)
!12366 = !DILocation(line: 0, scope: !12355)
!12367 = !DILocation(line: 2410, column: 2, scope: !12355)
!12368 = !DILocation(line: 2410, column: 16, scope: !12355)
!12369 = !DILocation(line: 2411, column: 11, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12355, file: !1245, line: 2411, column: 6)
!12371 = !DILocation(line: 2411, column: 7, scope: !12370)
!12372 = !DILocation(line: 2411, column: 6, scope: !12355)
!12373 = !DILocation(line: 2472, column: 2, scope: !12355)
!12374 = !DILocation(line: 2472, column: 11, scope: !12355)
!12375 = !DILocation(line: 2473, column: 18, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12355, file: !1245, line: 2472, column: 17)
!12377 = !DILocation(line: 2473, column: 23, scope: !12376)
!12378 = !DILocation(line: 2473, column: 14, scope: !12376)
!12379 = !DILocation(line: 2474, column: 9, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12376, file: !1245, line: 2474, column: 7)
!12381 = !DILocation(line: 2474, column: 7, scope: !12376)
!12382 = distinct !{!12382, !12373, !12383}
!12383 = !DILocation(line: 2478, column: 2, scope: !12355)
!12384 = !DILocation(line: 2475, column: 9, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12376, file: !1245, line: 2475, column: 7)
!12386 = !DILocation(line: 2475, column: 7, scope: !12376)
!12387 = !DILocation(line: 2476, column: 9, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12376, file: !1245, line: 2476, column: 7)
!12389 = !DILocation(line: 2476, column: 7, scope: !12376)
!12390 = !DILocation(line: 2476, column: 27, scope: !12388)
!12391 = !DILocation(line: 2476, column: 15, scope: !12388)
!12392 = !DILocation(line: 2476, column: 31, scope: !12388)
!12393 = !DILocation(line: 2477, column: 15, scope: !12376)
!12394 = !DILocation(line: 2477, column: 3, scope: !12376)
!12395 = !DILocation(line: 2477, column: 19, scope: !12376)
!12396 = !DILocation(line: 2479, column: 2, scope: !12355)
!12397 = !DILocation(line: 2479, column: 16, scope: !12355)
!12398 = !DILocation(line: 2482, column: 21, scope: !12355)
!12399 = !DILocation(line: 2482, column: 17, scope: !12355)
!12400 = !DILocation(line: 2482, column: 7, scope: !12355)
!12401 = !DILocation(line: 2482, column: 15, scope: !12355)
!12402 = !DILocation(line: 2483, column: 28, scope: !12355)
!12403 = !DILocation(line: 2483, column: 32, scope: !12355)
!12404 = !DILocation(line: 2483, column: 15, scope: !12355)
!12405 = !DILocation(line: 2483, column: 7, scope: !12355)
!12406 = !DILocation(line: 2483, column: 13, scope: !12355)
!12407 = !DILocation(line: 2484, column: 20, scope: !12355)
!12408 = !DILocation(line: 2484, column: 24, scope: !12355)
!12409 = !DILocation(line: 2484, column: 7, scope: !12355)
!12410 = !DILocation(line: 2485, column: 15, scope: !12355)
!12411 = !DILocation(line: 2485, column: 7, scope: !12355)
!12412 = !DILocation(line: 2485, column: 13, scope: !12355)
!12413 = !DILocation(line: 2485, column: 48, scope: !12355)
!12414 = !DILocation(line: 2485, column: 38, scope: !12355)
!12415 = !DILocation(line: 2485, column: 30, scope: !12355)
!12416 = !DILocation(line: 2485, column: 36, scope: !12355)
!12417 = !DILocation(line: 2486, column: 1, scope: !12355)
!12418 = distinct !DISubprogram(name: "f_lseek", scope: !1245, file: !1245, line: 3933, type: !12419, scopeLine: 3937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12421)
!12419 = !DISubroutineType(types: !12420)
!12420 = !{!1284, !10414, !1291}
!12421 = !{!12422, !12423, !12424, !12425, !12426, !12427, !12428, !12429, !12430, !12431, !12432, !12433, !12434, !12435, !12436, !12437}
!12422 = !DILocalVariable(name: "fp", arg: 1, scope: !12418, file: !1245, line: 3934, type: !10414)
!12423 = !DILocalVariable(name: "ofs", arg: 2, scope: !12418, file: !1245, line: 3935, type: !1291)
!12424 = !DILocalVariable(name: "res", scope: !12418, file: !1245, line: 3938, type: !1284)
!12425 = !DILocalVariable(name: "fs", scope: !12418, file: !1245, line: 3939, type: !1311)
!12426 = !DILocalVariable(name: "clst", scope: !12418, file: !1245, line: 3940, type: !1279)
!12427 = !DILocalVariable(name: "bcs", scope: !12418, file: !1245, line: 3940, type: !1279)
!12428 = !DILocalVariable(name: "nsect", scope: !12418, file: !1245, line: 3940, type: !1279)
!12429 = !DILocalVariable(name: "ifptr", scope: !12418, file: !1245, line: 3941, type: !1291)
!12430 = !DILocalVariable(name: "cl", scope: !12418, file: !1245, line: 3943, type: !1279)
!12431 = !DILocalVariable(name: "pcl", scope: !12418, file: !1245, line: 3943, type: !1279)
!12432 = !DILocalVariable(name: "ncl", scope: !12418, file: !1245, line: 3943, type: !1279)
!12433 = !DILocalVariable(name: "tcl", scope: !12418, file: !1245, line: 3943, type: !1279)
!12434 = !DILocalVariable(name: "dsc", scope: !12418, file: !1245, line: 3943, type: !1279)
!12435 = !DILocalVariable(name: "tlen", scope: !12418, file: !1245, line: 3943, type: !1279)
!12436 = !DILocalVariable(name: "ulen", scope: !12418, file: !1245, line: 3943, type: !1279)
!12437 = !DILocalVariable(name: "tbl", scope: !12418, file: !1245, line: 3943, type: !1439)
!12438 = !DILocation(line: 0, scope: !12418)
!12439 = !DILocation(line: 3939, column: 2, scope: !12418)
!12440 = !DILocation(line: 3946, column: 22, scope: !12418)
!12441 = !DILocation(line: 3946, column: 8, scope: !12418)
!12442 = !DILocation(line: 3947, column: 10, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12418, file: !1245, line: 3947, column: 6)
!12444 = !DILocation(line: 3947, column: 19, scope: !12443)
!12445 = !DILocation(line: 3947, column: 42, scope: !12443)
!12446 = !DILocation(line: 3947, column: 29, scope: !12443)
!12447 = !DILocation(line: 3947, column: 47, scope: !12443)
!12448 = !DILocation(line: 3947, column: 6, scope: !12418)
!12449 = !DILocation(line: 3949, column: 10, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12418, file: !1245, line: 3949, column: 6)
!12451 = !DILocation(line: 3949, column: 6, scope: !12450)
!12452 = !DILocation(line: 3949, column: 6, scope: !12418)
!12453 = !DILocation(line: 3950, column: 11, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !1245, line: 3950, column: 7)
!12455 = distinct !DILexicalBlock(scope: !12450, file: !1245, line: 3949, column: 17)
!12456 = !DILocation(line: 3950, column: 7, scope: !12455)
!12457 = !DILocation(line: 3952, column: 15, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12454, file: !1245, line: 3950, column: 30)
!12459 = !DILocation(line: 3952, column: 11, scope: !12458)
!12460 = !DILocation(line: 3953, column: 17, scope: !12458)
!12461 = !DILocation(line: 3954, column: 8, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12458, file: !1245, line: 3954, column: 8)
!12463 = !DILocation(line: 3954, column: 8, scope: !12458)
!12464 = !DILocation(line: 0, scope: !12458)
!12465 = !DILocation(line: 3957, column: 30, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12467, file: !1245, line: 3955, column: 8)
!12467 = distinct !DILexicalBlock(scope: !12462, file: !1245, line: 3954, column: 12)
!12468 = !DILocation(line: 3958, column: 6, scope: !12466)
!12469 = !DILocation(line: 0, scope: !12466)
!12470 = !DILocation(line: 3959, column: 20, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12466, file: !1245, line: 3958, column: 9)
!12472 = !DILocation(line: 3960, column: 12, scope: !12471)
!12473 = !DILocation(line: 3961, column: 14, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12471, file: !1245, line: 3961, column: 11)
!12475 = !DILocation(line: 3961, column: 11, scope: !12471)
!12476 = !DILocation(line: 3961, column: 20, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12474, file: !1245, line: 3961, column: 20)
!12478 = !DILocation(line: 3962, column: 14, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12471, file: !1245, line: 3962, column: 11)
!12480 = !DILocation(line: 3962, column: 11, scope: !12471)
!12481 = !DILocation(line: 3962, column: 29, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12479, file: !1245, line: 3962, column: 29)
!12483 = !DILocation(line: 3963, column: 25, scope: !12466)
!12484 = !DILocation(line: 3963, column: 18, scope: !12466)
!12485 = !DILocation(line: 3963, column: 6, scope: !12471)
!12486 = distinct !{!12486, !12468, !12487}
!12487 = !DILocation(line: 3963, column: 28, scope: !12466)
!12488 = !DILocation(line: 3964, column: 15, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12466, file: !1245, line: 3964, column: 10)
!12490 = !DILocation(line: 3964, column: 10, scope: !12466)
!12491 = !DILocation(line: 3965, column: 11, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12489, file: !1245, line: 3964, column: 24)
!12493 = !DILocation(line: 3965, column: 14, scope: !12492)
!12494 = !DILocation(line: 3965, column: 25, scope: !12492)
!12495 = !DILocation(line: 3965, column: 28, scope: !12492)
!12496 = !DILocation(line: 3966, column: 6, scope: !12492)
!12497 = !DILocation(line: 3967, column: 19, scope: !12467)
!12498 = !DILocation(line: 3967, column: 23, scope: !12467)
!12499 = !DILocation(line: 3967, column: 17, scope: !12467)
!12500 = !DILocation(line: 3967, column: 5, scope: !12466)
!12501 = distinct !{!12501, !12502, !12503}
!12502 = !DILocation(line: 3955, column: 5, scope: !12467)
!12503 = !DILocation(line: 3967, column: 31, scope: !12467)
!12504 = !DILocation(line: 3969, column: 9, scope: !12458)
!12505 = !DILocation(line: 3969, column: 15, scope: !12458)
!12506 = !DILocation(line: 3970, column: 13, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12458, file: !1245, line: 3970, column: 8)
!12508 = !DILocation(line: 3970, column: 8, scope: !12458)
!12509 = !DILocation(line: 3971, column: 10, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12507, file: !1245, line: 3970, column: 22)
!12511 = !DILocation(line: 3972, column: 4, scope: !12510)
!12512 = !DILocation(line: 3976, column: 22, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !1245, line: 3976, column: 8)
!12514 = distinct !DILexicalBlock(scope: !12454, file: !1245, line: 3975, column: 10)
!12515 = !DILocation(line: 3976, column: 12, scope: !12513)
!12516 = !DILocation(line: 3976, column: 8, scope: !12514)
!12517 = !DILocation(line: 3977, column: 8, scope: !12514)
!12518 = !DILocation(line: 3977, column: 13, scope: !12514)
!12519 = !DILocation(line: 3978, column: 8, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12514, file: !1245, line: 3978, column: 8)
!12521 = !DILocation(line: 3978, column: 8, scope: !12514)
!12522 = !DILocation(line: 3979, column: 36, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12520, file: !1245, line: 3978, column: 13)
!12524 = !DILocation(line: 3979, column: 17, scope: !12523)
!12525 = !DILocation(line: 3979, column: 9, scope: !12523)
!12526 = !DILocation(line: 3979, column: 15, scope: !12523)
!12527 = !DILocation(line: 3980, column: 22, scope: !12523)
!12528 = !DILocation(line: 3980, column: 11, scope: !12523)
!12529 = !DILocation(line: 3981, column: 10, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12523, file: !1245, line: 3981, column: 9)
!12531 = !DILocation(line: 3981, column: 9, scope: !12523)
!12532 = !DILocation(line: 3981, column: 15, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12530, file: !1245, line: 3981, column: 15)
!12534 = !DILocation(line: 3982, column: 30, scope: !12523)
!12535 = !DILocation(line: 3982, column: 47, scope: !12523)
!12536 = !DILocation(line: 3982, column: 43, scope: !12523)
!12537 = !DILocation(line: 3982, column: 53, scope: !12523)
!12538 = !DILocation(line: 3982, column: 40, scope: !12523)
!12539 = !DILocation(line: 3982, column: 9, scope: !12523)
!12540 = !DILocation(line: 3983, column: 18, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12523, file: !1245, line: 3983, column: 9)
!12542 = !DILocation(line: 3983, column: 27, scope: !12541)
!12543 = !DILocation(line: 3983, column: 41, scope: !12541)
!12544 = !DILocation(line: 3983, column: 34, scope: !12541)
!12545 = !DILocation(line: 3983, column: 9, scope: !12523)
!12546 = !DILocation(line: 3986, column: 14, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12548, file: !1245, line: 3986, column: 10)
!12548 = distinct !DILexicalBlock(scope: !12541, file: !1245, line: 3983, column: 47)
!12549 = !DILocation(line: 3986, column: 19, scope: !12547)
!12550 = !DILocation(line: 3986, column: 10, scope: !12548)
!12551 = !DILocation(line: 3987, column: 26, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !1245, line: 3987, column: 11)
!12553 = distinct !DILexicalBlock(scope: !12547, file: !1245, line: 3986, column: 31)
!12554 = !DILocation(line: 3987, column: 31, scope: !12552)
!12555 = !DILocation(line: 3987, column: 11, scope: !12552)
!12556 = !DILocation(line: 3987, column: 53, scope: !12552)
!12557 = !DILocation(line: 3987, column: 11, scope: !12553)
!12558 = !DILocation(line: 3987, column: 64, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12552, file: !1245, line: 3987, column: 64)
!12560 = !DILocation(line: 3988, column: 16, scope: !12553)
!12561 = !DILocation(line: 3989, column: 6, scope: !12553)
!12562 = !DILocation(line: 3991, column: 24, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12548, file: !1245, line: 3991, column: 10)
!12564 = !DILocation(line: 3991, column: 29, scope: !12563)
!12565 = !DILocation(line: 3991, column: 10, scope: !12563)
!12566 = !DILocation(line: 3991, column: 46, scope: !12563)
!12567 = !DILocation(line: 3991, column: 10, scope: !12548)
!12568 = !DILocation(line: 3991, column: 57, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12563, file: !1245, line: 3991, column: 57)
!12570 = !DILocation(line: 3993, column: 15, scope: !12548)
!12571 = !DILocation(line: 3994, column: 5, scope: !12548)
!12572 = !DILocation(line: 4005, column: 21, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !1245, line: 4005, column: 7)
!12574 = distinct !DILexicalBlock(scope: !12450, file: !1245, line: 4001, column: 2)
!12575 = !DILocation(line: 4005, column: 11, scope: !12573)
!12576 = !DILocation(line: 4005, column: 29, scope: !12573)
!12577 = !DILocation(line: 4005, column: 55, scope: !12573)
!12578 = !DILocation(line: 4005, column: 60, scope: !12573)
!12579 = !DILocation(line: 4005, column: 7, scope: !12574)
!12580 = !DILocation(line: 4008, column: 15, scope: !12574)
!12581 = !DILocation(line: 4009, column: 12, scope: !12574)
!12582 = !DILocation(line: 4010, column: 7, scope: !12574)
!12583 = !DILocation(line: 4010, column: 7, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12574, file: !1245, line: 4010, column: 7)
!12585 = !DILocation(line: 4011, column: 17, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12584, file: !1245, line: 4010, column: 12)
!12587 = !DILocation(line: 4011, column: 21, scope: !12586)
!12588 = !DILocation(line: 4011, column: 10, scope: !12586)
!12589 = !DILocation(line: 4011, column: 27, scope: !12586)
!12590 = !DILocation(line: 4012, column: 14, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12586, file: !1245, line: 4012, column: 8)
!12592 = !DILocation(line: 4012, column: 18, scope: !12591)
!12593 = !DILocation(line: 4013, column: 10, scope: !12591)
!12594 = !DILocation(line: 4013, column: 15, scope: !12591)
!12595 = !DILocation(line: 4013, column: 31, scope: !12591)
!12596 = !DILocation(line: 4013, column: 36, scope: !12591)
!12597 = !DILocation(line: 4013, column: 21, scope: !12591)
!12598 = !DILocation(line: 4012, column: 8, scope: !12586)
!12599 = !DILocation(line: 4014, column: 30, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12591, file: !1245, line: 4013, column: 43)
!12601 = !DILocation(line: 4014, column: 28, scope: !12600)
!12602 = !DILocation(line: 4014, column: 14, scope: !12600)
!12603 = !DILocation(line: 4015, column: 9, scope: !12600)
!12604 = !DILocation(line: 4016, column: 16, scope: !12600)
!12605 = !DILocation(line: 4017, column: 4, scope: !12600)
!12606 = !DILocation(line: 4018, column: 20, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12591, file: !1245, line: 4017, column: 11)
!12608 = !DILocation(line: 4020, column: 14, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12607, file: !1245, line: 4020, column: 9)
!12610 = !DILocation(line: 4020, column: 9, scope: !12607)
!12611 = !DILocation(line: 4021, column: 13, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12609, file: !1245, line: 4020, column: 20)
!12613 = !DILocation(line: 4022, column: 10, scope: !12612)
!12614 = !DILocation(line: 4022, column: 21, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12616, file: !1245, line: 4022, column: 21)
!12616 = distinct !DILexicalBlock(scope: !12612, file: !1245, line: 4022, column: 10)
!12617 = !DILocation(line: 4023, column: 30, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !1245, line: 4023, column: 30)
!12619 = distinct !DILexicalBlock(scope: !12612, file: !1245, line: 4023, column: 10)
!12620 = !DILocation(line: 4024, column: 21, scope: !12612)
!12621 = !DILocation(line: 4025, column: 5, scope: !12612)
!12622 = !DILocation(line: 0, scope: !12607)
!12623 = !DILocation(line: 4027, column: 9, scope: !12607)
!12624 = !DILocation(line: 4027, column: 15, scope: !12607)
!12625 = !DILocation(line: 0, scope: !12591)
!12626 = !DILocation(line: 4029, column: 13, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12586, file: !1245, line: 4029, column: 8)
!12628 = !DILocation(line: 4029, column: 8, scope: !12586)
!12629 = !DILocation(line: 4030, column: 16, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12627, file: !1245, line: 4029, column: 19)
!12631 = !DILocation(line: 4030, column: 5, scope: !12630)
!12632 = !DILocation(line: 4031, column: 10, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12630, file: !1245, line: 4030, column: 23)
!12634 = !DILocation(line: 4031, column: 27, scope: !12633)
!12635 = !DILocation(line: 4033, column: 14, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12633, file: !1245, line: 4033, column: 10)
!12637 = !DILocation(line: 4033, column: 19, scope: !12636)
!12638 = !DILocation(line: 4033, column: 10, scope: !12633)
!12639 = !DILocation(line: 4038, column: 14, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12636, file: !1245, line: 4033, column: 31)
!12641 = !DILocation(line: 4039, column: 16, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12640, file: !1245, line: 4039, column: 11)
!12643 = !DILocation(line: 4039, column: 11, scope: !12640)
!12644 = !DILocation(line: 4045, column: 14, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12636, file: !1245, line: 4044, column: 6)
!12646 = !DILocation(line: 0, scope: !12636)
!12647 = !DILocation(line: 4047, column: 15, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12633, file: !1245, line: 4047, column: 10)
!12649 = !DILocation(line: 4047, column: 10, scope: !12633)
!12650 = !DILocation(line: 4047, column: 30, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12648, file: !1245, line: 4047, column: 30)
!12652 = !DILocation(line: 4048, column: 15, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12633, file: !1245, line: 4048, column: 10)
!12654 = !DILocation(line: 4048, column: 20, scope: !12653)
!12655 = !DILocation(line: 4048, column: 35, scope: !12653)
!12656 = !DILocation(line: 4048, column: 28, scope: !12653)
!12657 = !DILocation(line: 4048, column: 10, scope: !12633)
!12658 = !DILocation(line: 4048, column: 45, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12653, file: !1245, line: 4048, column: 45)
!12660 = !DILocation(line: 4049, column: 16, scope: !12633)
!12661 = distinct !{!12661, !12631, !12662}
!12662 = !DILocation(line: 4050, column: 5, scope: !12630)
!12663 = !DILocation(line: 0, scope: !12586)
!12664 = !DILocation(line: 4051, column: 14, scope: !12630)
!12665 = !DILocation(line: 4052, column: 13, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12630, file: !1245, line: 4052, column: 9)
!12667 = !DILocation(line: 4052, column: 9, scope: !12630)
!12668 = !DILocation(line: 4053, column: 14, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12666, file: !1245, line: 4052, column: 23)
!12670 = !DILocation(line: 4054, column: 11, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12669, file: !1245, line: 4054, column: 10)
!12672 = !DILocation(line: 4054, column: 10, scope: !12669)
!12673 = !DILocation(line: 4054, column: 18, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12671, file: !1245, line: 4054, column: 18)
!12675 = !DILocation(line: 4055, column: 27, scope: !12669)
!12676 = !DILocation(line: 4055, column: 12, scope: !12669)
!12677 = !DILocation(line: 4056, column: 5, scope: !12669)
!12678 = !DILocation(line: 0, scope: !12574)
!12679 = !DILocation(line: 4059, column: 28, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12574, file: !1245, line: 4059, column: 7)
!12681 = !DILocation(line: 4059, column: 43, scope: !12680)
!12682 = !DILocation(line: 4059, column: 33, scope: !12680)
!12683 = !DILocation(line: 4059, column: 7, scope: !12574)
!12684 = !DILocation(line: 4060, column: 20, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12680, file: !1245, line: 4059, column: 52)
!12686 = !DILocation(line: 4061, column: 8, scope: !12685)
!12687 = !DILocation(line: 4061, column: 13, scope: !12685)
!12688 = !DILocation(line: 4062, column: 3, scope: !12685)
!12689 = !DILocation(line: 4063, column: 16, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12574, file: !1245, line: 4063, column: 7)
!12691 = !DILocation(line: 4063, column: 25, scope: !12690)
!12692 = !DILocation(line: 4063, column: 41, scope: !12690)
!12693 = !DILocation(line: 4063, column: 34, scope: !12690)
!12694 = !DILocation(line: 4063, column: 7, scope: !12574)
!12695 = !DILocation(line: 4066, column: 12, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !1245, line: 4066, column: 8)
!12697 = distinct !DILexicalBlock(scope: !12690, file: !1245, line: 4063, column: 47)
!12698 = !DILocation(line: 4066, column: 17, scope: !12696)
!12699 = !DILocation(line: 0, scope: !12697)
!12700 = !DILocation(line: 4066, column: 8, scope: !12697)
!12701 = !DILocation(line: 4067, column: 24, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !1245, line: 4067, column: 9)
!12703 = distinct !DILexicalBlock(scope: !12696, file: !1245, line: 4066, column: 29)
!12704 = !DILocation(line: 4067, column: 29, scope: !12702)
!12705 = !DILocation(line: 4067, column: 9, scope: !12702)
!12706 = !DILocation(line: 4067, column: 51, scope: !12702)
!12707 = !DILocation(line: 4067, column: 9, scope: !12703)
!12708 = !DILocation(line: 4067, column: 62, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12702, file: !1245, line: 4067, column: 62)
!12710 = !DILocation(line: 4068, column: 14, scope: !12703)
!12711 = !DILocation(line: 4069, column: 4, scope: !12703)
!12712 = !DILocation(line: 4071, column: 22, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12697, file: !1245, line: 4071, column: 8)
!12714 = !DILocation(line: 4071, column: 27, scope: !12713)
!12715 = !DILocation(line: 4071, column: 8, scope: !12713)
!12716 = !DILocation(line: 4071, column: 46, scope: !12713)
!12717 = !DILocation(line: 4071, column: 8, scope: !12697)
!12718 = !DILocation(line: 4071, column: 57, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12713, file: !1245, line: 4071, column: 57)
!12720 = !DILocation(line: 4073, column: 13, scope: !12697)
!12721 = !DILocation(line: 4074, column: 3, scope: !12697)
!12722 = !DILocation(line: 4078, column: 1, scope: !12418)
!12723 = distinct !DISubprogram(name: "f_opendir", scope: !1245, file: !1245, line: 4087, type: !10626, scopeLine: 4091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12724)
!12724 = !{!12725, !12726, !12727, !12728, !12729}
!12725 = !DILocalVariable(name: "dp", arg: 1, scope: !12723, file: !1245, line: 4088, type: !10628)
!12726 = !DILocalVariable(name: "path", arg: 2, scope: !12723, file: !1245, line: 4089, type: !1288)
!12727 = !DILocalVariable(name: "res", scope: !12723, file: !1245, line: 4092, type: !1284)
!12728 = !DILocalVariable(name: "fs", scope: !12723, file: !1245, line: 4093, type: !1311)
!12729 = !DILocalVariable(name: "obj", scope: !12723, file: !1245, line: 4094, type: !10635)
!12730 = !DILocation(line: 0, scope: !12723)
!12731 = !DILocation(line: 4093, column: 2, scope: !12723)
!12732 = !DILocation(line: 4098, column: 7, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12723, file: !1245, line: 4098, column: 6)
!12734 = !DILocation(line: 4098, column: 6, scope: !12723)
!12735 = !DILocation(line: 4102, column: 8, scope: !12723)
!12736 = !DILocation(line: 4103, column: 10, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12723, file: !1245, line: 4103, column: 6)
!12738 = !DILocation(line: 4103, column: 6, scope: !12723)
!12739 = !DILocation(line: 4104, column: 13, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12737, file: !1245, line: 4103, column: 20)
!12741 = !DILocation(line: 4104, column: 8, scope: !12740)
!12742 = !DILocation(line: 4104, column: 11, scope: !12740)
!12743 = !DILocation(line: 4106, column: 25, scope: !12740)
!12744 = !DILocation(line: 4106, column: 9, scope: !12740)
!12745 = !DILocation(line: 4107, column: 11, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12740, file: !1245, line: 4107, column: 7)
!12747 = !DILocation(line: 4107, column: 7, scope: !12740)
!12748 = !DILocation(line: 4108, column: 10, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12750, file: !1245, line: 4108, column: 8)
!12750 = distinct !DILexicalBlock(scope: !12746, file: !1245, line: 4107, column: 21)
!12751 = !DILocation(line: 4108, column: 25, scope: !12749)
!12752 = !DILocation(line: 4108, column: 8, scope: !12750)
!12753 = !DILocation(line: 4109, column: 14, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12755, file: !1245, line: 4109, column: 9)
!12755 = distinct !DILexicalBlock(scope: !12749, file: !1245, line: 4108, column: 39)
!12756 = !DILocation(line: 4109, column: 19, scope: !12754)
!12757 = !DILocation(line: 4109, column: 9, scope: !12755)
!12758 = !DILocation(line: 4121, column: 38, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !1245, line: 4120, column: 6)
!12760 = distinct !DILexicalBlock(scope: !12754, file: !1245, line: 4109, column: 29)
!12761 = !DILocation(line: 4121, column: 21, scope: !12759)
!12762 = !DILocation(line: 4121, column: 12, scope: !12759)
!12763 = !DILocation(line: 4121, column: 19, scope: !12759)
!12764 = !DILocation(line: 4123, column: 5, scope: !12760)
!12765 = !DILocation(line: 4128, column: 19, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !1245, line: 4127, column: 22)
!12767 = distinct !DILexicalBlock(scope: !12750, file: !1245, line: 4127, column: 8)
!12768 = !DILocation(line: 4128, column: 10, scope: !12766)
!12769 = !DILocation(line: 4128, column: 13, scope: !12766)
!12770 = !DILocation(line: 4129, column: 11, scope: !12766)
!12771 = !DILocation(line: 4140, column: 4, scope: !12766)
!12772 = !DILocation(line: 0, scope: !12740)
!12773 = !DILocation(line: 4143, column: 7, scope: !12740)
!12774 = !DILocation(line: 4145, column: 25, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12723, file: !1245, line: 4145, column: 6)
!12776 = !DILocation(line: 4145, column: 28, scope: !12775)
!12777 = !DILocation(line: 4145, column: 20, scope: !12775)
!12778 = !DILocation(line: 4148, column: 1, scope: !12723)
!12779 = distinct !DISubprogram(name: "f_closedir", scope: !1245, file: !1245, line: 4157, type: !10712, scopeLine: 4160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12780)
!12780 = !{!12781, !12782, !12783}
!12781 = !DILocalVariable(name: "dp", arg: 1, scope: !12779, file: !1245, line: 4158, type: !10628)
!12782 = !DILocalVariable(name: "res", scope: !12779, file: !1245, line: 4161, type: !1284)
!12783 = !DILocalVariable(name: "fs", scope: !12779, file: !1245, line: 4162, type: !1311)
!12784 = !DILocation(line: 0, scope: !12779)
!12785 = !DILocation(line: 4162, column: 2, scope: !12779)
!12786 = !DILocation(line: 4165, column: 22, scope: !12779)
!12787 = !DILocation(line: 4165, column: 8, scope: !12779)
!12788 = !DILocation(line: 4166, column: 10, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12779, file: !1245, line: 4166, column: 6)
!12790 = !DILocation(line: 4166, column: 6, scope: !12779)
!12791 = !DILocation(line: 4174, column: 12, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !1245, line: 4173, column: 3)
!12793 = distinct !DILexicalBlock(scope: !12789, file: !1245, line: 4166, column: 20)
!12794 = !DILocation(line: 4174, column: 15, scope: !12792)
!12795 = !DILocation(line: 4179, column: 2, scope: !12793)
!12796 = !DILocation(line: 4181, column: 1, scope: !12779)
!12797 = !DILocation(line: 4180, column: 2, scope: !12779)
!12798 = distinct !DISubprogram(name: "f_readdir", scope: !1245, file: !1245, line: 4190, type: !12799, scopeLine: 4194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12801)
!12799 = !DISubroutineType(types: !12800)
!12800 = !{!1284, !10628, !12358}
!12801 = !{!12802, !12803, !12804, !12805}
!12802 = !DILocalVariable(name: "dp", arg: 1, scope: !12798, file: !1245, line: 4191, type: !10628)
!12803 = !DILocalVariable(name: "fno", arg: 2, scope: !12798, file: !1245, line: 4192, type: !12358)
!12804 = !DILocalVariable(name: "res", scope: !12798, file: !1245, line: 4195, type: !1284)
!12805 = !DILocalVariable(name: "fs", scope: !12798, file: !1245, line: 4196, type: !1311)
!12806 = !DILocation(line: 0, scope: !12798)
!12807 = !DILocation(line: 4196, column: 2, scope: !12798)
!12808 = !DILocation(line: 4200, column: 22, scope: !12798)
!12809 = !DILocation(line: 4200, column: 8, scope: !12798)
!12810 = !DILocation(line: 4201, column: 10, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12798, file: !1245, line: 4201, column: 6)
!12812 = !DILocation(line: 4201, column: 6, scope: !12798)
!12813 = !DILocation(line: 4202, column: 8, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12815, file: !1245, line: 4202, column: 7)
!12815 = distinct !DILexicalBlock(scope: !12811, file: !1245, line: 4201, column: 20)
!12816 = !DILocation(line: 4202, column: 7, scope: !12815)
!12817 = !DILocation(line: 4203, column: 10, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12814, file: !1245, line: 4202, column: 13)
!12819 = !DILocation(line: 4204, column: 3, scope: !12818)
!12820 = !DILocation(line: 4206, column: 10, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12814, file: !1245, line: 4204, column: 10)
!12822 = !DILocation(line: 4207, column: 12, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12821, file: !1245, line: 4207, column: 8)
!12824 = !DILocation(line: 4207, column: 8, scope: !12821)
!12825 = !DILocation(line: 4208, column: 12, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12821, file: !1245, line: 4208, column: 8)
!12827 = !DILocation(line: 4208, column: 8, scope: !12821)
!12828 = !DILocation(line: 4209, column: 5, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12826, file: !1245, line: 4208, column: 22)
!12830 = !DILocation(line: 4210, column: 11, scope: !12829)
!12831 = !DILocation(line: 4211, column: 13, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12829, file: !1245, line: 4211, column: 9)
!12833 = !DILocation(line: 4211, column: 9, scope: !12829)
!12834 = !DILocation(line: 4212, column: 4, scope: !12829)
!12835 = !DILocation(line: 4217, column: 1, scope: !12798)
!12836 = !DILocation(line: 4216, column: 2, scope: !12798)
!12837 = distinct !DISubprogram(name: "f_findnext", scope: !1245, file: !1245, line: 4226, type: !12799, scopeLine: 4230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12838)
!12838 = !{!12839, !12840, !12841}
!12839 = !DILocalVariable(name: "dp", arg: 1, scope: !12837, file: !1245, line: 4227, type: !10628)
!12840 = !DILocalVariable(name: "fno", arg: 2, scope: !12837, file: !1245, line: 4228, type: !12358)
!12841 = !DILocalVariable(name: "res", scope: !12837, file: !1245, line: 4231, type: !1284)
!12842 = !DILocation(line: 0, scope: !12837)
!12843 = !DILocation(line: 4236, column: 32, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12845, file: !1245, line: 4236, column: 7)
!12845 = distinct !DILexicalBlock(scope: !12846, file: !1245, line: 4234, column: 11)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !1245, line: 4234, column: 2)
!12847 = distinct !DILexicalBlock(scope: !12837, file: !1245, line: 4234, column: 2)
!12848 = !DILocation(line: 4237, column: 28, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12845, file: !1245, line: 4237, column: 7)
!12850 = !DILocation(line: 4234, column: 2, scope: !12837)
!12851 = !DILocation(line: 4235, column: 9, scope: !12845)
!12852 = !DILocation(line: 4236, column: 11, scope: !12844)
!12853 = !DILocation(line: 4236, column: 20, scope: !12844)
!12854 = !DILocation(line: 4236, column: 7, scope: !12845)
!12855 = !DILocation(line: 4237, column: 7, scope: !12849)
!12856 = !DILocation(line: 4237, column: 7, scope: !12845)
!12857 = distinct !{!12857, !12858, !12859}
!12858 = !DILocation(line: 4234, column: 2, scope: !12847)
!12859 = !DILocation(line: 4241, column: 2, scope: !12847)
!12860 = !DILocation(line: 4242, column: 2, scope: !12837)
!12861 = distinct !DISubprogram(name: "pattern_matching", scope: !1245, file: !1245, line: 2522, type: !12862, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12864)
!12862 = !DISubroutineType(types: !12863)
!12863 = !{!7, !1288, !1288, !7, !7}
!12864 = !{!12865, !12866, !12867, !12868, !12869, !12870, !12871, !12872, !12873, !12874}
!12865 = !DILocalVariable(name: "pat", arg: 1, scope: !12861, file: !1245, line: 2523, type: !1288)
!12866 = !DILocalVariable(name: "nam", arg: 2, scope: !12861, file: !1245, line: 2524, type: !1288)
!12867 = !DILocalVariable(name: "skip", arg: 3, scope: !12861, file: !1245, line: 2525, type: !7)
!12868 = !DILocalVariable(name: "inf", arg: 4, scope: !12861, file: !1245, line: 2526, type: !7)
!12869 = !DILocalVariable(name: "pp", scope: !12861, file: !1245, line: 2529, type: !1288)
!12870 = !DILocalVariable(name: "np", scope: !12861, file: !1245, line: 2529, type: !1288)
!12871 = !DILocalVariable(name: "pc", scope: !12861, file: !1245, line: 2530, type: !1356)
!12872 = !DILocalVariable(name: "nc", scope: !12861, file: !1245, line: 2530, type: !1356)
!12873 = !DILocalVariable(name: "nm", scope: !12861, file: !1245, line: 2531, type: !7)
!12874 = !DILocalVariable(name: "nx", scope: !12861, file: !1245, line: 2531, type: !7)
!12875 = !DILocation(line: 0, scope: !12861)
!12876 = !DILocation(line: 2529, column: 2, scope: !12861)
!12877 = !DILocation(line: 2534, column: 2, scope: !12861)
!12878 = !DILocation(line: 2534, column: 13, scope: !12861)
!12879 = !DILocation(line: 2535, column: 8, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12881, file: !1245, line: 2535, column: 7)
!12881 = distinct !DILexicalBlock(scope: !12861, file: !1245, line: 2534, column: 17)
!12882 = !DILocation(line: 2535, column: 7, scope: !12881)
!12883 = distinct !{!12883, !12877, !12884}
!12884 = !DILocation(line: 2536, column: 2, scope: !12861)
!12885 = !DILocation(line: 2537, column: 7, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12861, file: !1245, line: 2537, column: 6)
!12887 = !DILocation(line: 2537, column: 12, scope: !12886)
!12888 = !DILocation(line: 2540, column: 6, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12861, file: !1245, line: 2539, column: 5)
!12890 = !DILocation(line: 2540, column: 18, scope: !12889)
!12891 = !DILocation(line: 2540, column: 16, scope: !12889)
!12892 = !DILocation(line: 2541, column: 3, scope: !12889)
!12893 = !DILocation(line: 2542, column: 9, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12895, file: !1245, line: 2542, column: 8)
!12895 = distinct !DILexicalBlock(scope: !12896, file: !1245, line: 2541, column: 12)
!12896 = distinct !DILexicalBlock(scope: !12897, file: !1245, line: 2541, column: 3)
!12897 = distinct !DILexicalBlock(scope: !12889, file: !1245, line: 2541, column: 3)
!12898 = !DILocation(line: 2542, column: 8, scope: !12894)
!12899 = !DILocation(line: 2542, column: 19, scope: !12894)
!12900 = !DILocation(line: 2546, column: 25, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12894, file: !1245, line: 2542, column: 34)
!12902 = !DILocation(line: 2545, column: 10, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12904, file: !1245, line: 2545, column: 10)
!12904 = distinct !DILexicalBlock(scope: !12901, file: !1245, line: 2544, column: 8)
!12905 = !DILocation(line: 0, scope: !12901)
!12906 = !DILocation(line: 2543, column: 13, scope: !12901)
!12907 = !DILocation(line: 2545, column: 13, scope: !12903)
!12908 = !DILocation(line: 2545, column: 16, scope: !12903)
!12909 = !DILocation(line: 2545, column: 10, scope: !12904)
!12910 = !DILocation(line: 2546, column: 14, scope: !12901)
!12911 = !DILocation(line: 2547, column: 30, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12901, file: !1245, line: 2547, column: 9)
!12913 = !DILocation(line: 2547, column: 9, scope: !12912)
!12914 = !DILocation(line: 2547, column: 9, scope: !12901)
!12915 = !DILocation(line: 2548, column: 10, scope: !12901)
!12916 = !DILocation(line: 2548, column: 15, scope: !12901)
!12917 = !DILocation(line: 2550, column: 9, scope: !12895)
!12918 = !DILocation(line: 2551, column: 9, scope: !12895)
!12919 = !DILocation(line: 2552, column: 11, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12895, file: !1245, line: 2552, column: 8)
!12921 = !DILocation(line: 2552, column: 8, scope: !12895)
!12922 = !DILocation(line: 2553, column: 11, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12895, file: !1245, line: 2553, column: 8)
!12924 = !DILocation(line: 2553, column: 8, scope: !12895)
!12925 = distinct !{!12925, !12926, !12927}
!12926 = !DILocation(line: 2541, column: 3, scope: !12897)
!12927 = !DILocation(line: 2554, column: 3, scope: !12897)
!12928 = !DILocation(line: 0, scope: !12895)
!12929 = !DILocation(line: 2555, column: 3, scope: !12889)
!12930 = !DILocation(line: 2556, column: 15, scope: !12861)
!12931 = !DILocation(line: 2556, column: 2, scope: !12889)
!12932 = distinct !{!12932, !12933, !12934}
!12933 = !DILocation(line: 2539, column: 2, scope: !12861)
!12934 = !DILocation(line: 2556, column: 20, scope: !12861)
!12935 = !DILocation(line: 2559, column: 1, scope: !12861)
!12936 = distinct !DISubprogram(name: "get_achar", scope: !1245, file: !1245, line: 2498, type: !12937, scopeLine: 2501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12939)
!12937 = !DISubroutineType(types: !12938)
!12938 = !{!1356, !1287}
!12939 = !{!12940, !12941}
!12940 = !DILocalVariable(name: "ptr", arg: 1, scope: !12936, file: !1245, line: 2499, type: !1287)
!12941 = !DILocalVariable(name: "chr", scope: !12936, file: !1245, line: 2503, type: !1356)
!12942 = !DILocation(line: 0, scope: !12936)
!12943 = !DILocation(line: 2505, column: 21, scope: !12936)
!12944 = !DILocation(line: 2505, column: 14, scope: !12936)
!12945 = !DILocation(line: 2505, column: 8, scope: !12936)
!12946 = !DILocation(line: 2506, column: 6, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12936, file: !1245, line: 2506, column: 6)
!12948 = !DILocation(line: 2508, column: 10, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12936, file: !1245, line: 2508, column: 6)
!12950 = !DILocation(line: 2508, column: 6, scope: !12936)
!12951 = !DILocation(line: 2508, column: 6, scope: !12949)
!12952 = !DILocation(line: 2508, column: 35, scope: !12949)
!12953 = !DILocation(line: 2508, column: 25, scope: !12949)
!12954 = !DILocation(line: 2508, column: 19, scope: !12949)
!12955 = !DILocation(line: 2514, column: 2, scope: !12936)
!12956 = distinct !DISubprogram(name: "f_findfirst", scope: !1245, file: !1245, line: 4251, type: !12957, scopeLine: 4257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12959)
!12957 = !DISubroutineType(types: !12958)
!12958 = !{!1284, !10628, !12358, !1288, !1288}
!12959 = !{!12960, !12961, !12962, !12963, !12964}
!12960 = !DILocalVariable(name: "dp", arg: 1, scope: !12956, file: !1245, line: 4252, type: !10628)
!12961 = !DILocalVariable(name: "fno", arg: 2, scope: !12956, file: !1245, line: 4253, type: !12358)
!12962 = !DILocalVariable(name: "path", arg: 3, scope: !12956, file: !1245, line: 4254, type: !1288)
!12963 = !DILocalVariable(name: "pattern", arg: 4, scope: !12956, file: !1245, line: 4255, type: !1288)
!12964 = !DILocalVariable(name: "res", scope: !12956, file: !1245, line: 4258, type: !1284)
!12965 = !DILocation(line: 0, scope: !12956)
!12966 = !DILocation(line: 4261, column: 6, scope: !12956)
!12967 = !DILocation(line: 4261, column: 10, scope: !12956)
!12968 = !DILocation(line: 4262, column: 8, scope: !12956)
!12969 = !DILocation(line: 4263, column: 10, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12956, file: !1245, line: 4263, column: 6)
!12971 = !DILocation(line: 4263, column: 6, scope: !12956)
!12972 = !DILocation(line: 4264, column: 9, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12970, file: !1245, line: 4263, column: 20)
!12974 = !DILocation(line: 4265, column: 2, scope: !12973)
!12975 = !DILocation(line: 4266, column: 2, scope: !12956)
!12976 = distinct !DISubprogram(name: "f_stat", scope: !1245, file: !1245, line: 4278, type: !12977, scopeLine: 4282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !12979)
!12977 = !DISubroutineType(types: !12978)
!12978 = !{!1284, !1288, !12358}
!12979 = !{!12980, !12981, !12982, !12983}
!12980 = !DILocalVariable(name: "path", arg: 1, scope: !12976, file: !1245, line: 4279, type: !1288)
!12981 = !DILocalVariable(name: "fno", arg: 2, scope: !12976, file: !1245, line: 4280, type: !12358)
!12982 = !DILocalVariable(name: "res", scope: !12976, file: !1245, line: 4283, type: !1284)
!12983 = !DILocalVariable(name: "dj", scope: !12976, file: !1245, line: 4284, type: !1303)
!12984 = !DILocation(line: 0, scope: !12976)
!12985 = !DILocation(line: 4284, column: 2, scope: !12976)
!12986 = !DILocation(line: 4284, column: 6, scope: !12976)
!12987 = !DILocation(line: 4289, column: 35, scope: !12976)
!12988 = !DILocation(line: 4289, column: 8, scope: !12976)
!12989 = !DILocation(line: 4290, column: 10, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12976, file: !1245, line: 4290, column: 6)
!12991 = !DILocation(line: 4290, column: 6, scope: !12976)
!12992 = !DILocation(line: 4292, column: 26, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12990, file: !1245, line: 4290, column: 20)
!12994 = !DILocation(line: 4292, column: 9, scope: !12993)
!12995 = !DILocation(line: 4293, column: 11, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12993, file: !1245, line: 4293, column: 7)
!12997 = !DILocation(line: 4293, column: 7, scope: !12993)
!12998 = !DILocation(line: 4294, column: 8, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !1245, line: 4294, column: 8)
!13000 = distinct !DILexicalBlock(scope: !12996, file: !1245, line: 4293, column: 21)
!13001 = !DILocation(line: 4294, column: 22, scope: !12999)
!13002 = !DILocation(line: 4294, column: 8, scope: !13000)
!13003 = !DILocation(line: 4297, column: 9, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13005, file: !1245, line: 4297, column: 9)
!13005 = distinct !DILexicalBlock(scope: !12999, file: !1245, line: 4296, column: 11)
!13006 = !DILocation(line: 4297, column: 9, scope: !13005)
!13007 = !DILocation(line: 4297, column: 14, scope: !13004)
!13008 = !DILocation(line: 4304, column: 1, scope: !12976)
!13009 = !DILocation(line: 4303, column: 2, scope: !12976)
!13010 = distinct !DISubprogram(name: "f_getfree", scope: !1245, file: !1245, line: 4313, type: !13011, scopeLine: 4318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13013)
!13011 = !DISubroutineType(types: !13012)
!13012 = !{!1284, !1288, !1439, !10016}
!13013 = !{!13014, !13015, !13016, !13017, !13018, !13019, !13020, !13021, !13022, !13023, !13024, !13025}
!13014 = !DILocalVariable(name: "path", arg: 1, scope: !13010, file: !1245, line: 4314, type: !1288)
!13015 = !DILocalVariable(name: "nclst", arg: 2, scope: !13010, file: !1245, line: 4315, type: !1439)
!13016 = !DILocalVariable(name: "fatfs", arg: 3, scope: !13010, file: !1245, line: 4316, type: !10016)
!13017 = !DILocalVariable(name: "res", scope: !13010, file: !1245, line: 4319, type: !1284)
!13018 = !DILocalVariable(name: "fs", scope: !13010, file: !1245, line: 4320, type: !1311)
!13019 = !DILocalVariable(name: "nfree", scope: !13010, file: !1245, line: 4321, type: !1279)
!13020 = !DILocalVariable(name: "clst", scope: !13010, file: !1245, line: 4321, type: !1279)
!13021 = !DILocalVariable(name: "sect", scope: !13010, file: !1245, line: 4321, type: !1279)
!13022 = !DILocalVariable(name: "stat", scope: !13010, file: !1245, line: 4321, type: !1279)
!13023 = !DILocalVariable(name: "i", scope: !13010, file: !1245, line: 4322, type: !1281)
!13024 = !DILocalVariable(name: "p", scope: !13010, file: !1245, line: 4323, type: !1282)
!13025 = !DILocalVariable(name: "obj", scope: !13010, file: !1245, line: 4324, type: !1307)
!13026 = !DILocation(line: 0, scope: !13010)
!13027 = !DILocation(line: 4320, column: 2, scope: !13010)
!13028 = !DILocation(line: 4324, column: 2, scope: !13010)
!13029 = !DILocation(line: 4324, column: 8, scope: !13010)
!13030 = !DILocation(line: 4328, column: 8, scope: !13010)
!13031 = !DILocation(line: 4329, column: 10, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13010, file: !1245, line: 4329, column: 6)
!13033 = !DILocation(line: 4329, column: 6, scope: !13010)
!13034 = !DILocation(line: 4330, column: 12, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13032, file: !1245, line: 4329, column: 20)
!13036 = !DILocation(line: 4330, column: 10, scope: !13035)
!13037 = !DILocation(line: 4332, column: 11, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13035, file: !1245, line: 4332, column: 7)
!13039 = !DILocation(line: 4332, column: 28, scope: !13038)
!13040 = !DILocation(line: 4332, column: 37, scope: !13038)
!13041 = !DILocation(line: 4332, column: 21, scope: !13038)
!13042 = !DILocation(line: 4332, column: 7, scope: !13035)
!13043 = !DILocation(line: 4333, column: 11, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13038, file: !1245, line: 4332, column: 42)
!13045 = !DILocation(line: 4334, column: 3, scope: !13044)
!13046 = !DILocation(line: 4337, column: 12, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13048, file: !1245, line: 4337, column: 8)
!13048 = distinct !DILexicalBlock(scope: !13038, file: !1245, line: 4334, column: 10)
!13049 = !DILocation(line: 4337, column: 20, scope: !13047)
!13050 = !DILocation(line: 4337, column: 8, scope: !13048)
!13051 = !DILocation(line: 4338, column: 19, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13047, file: !1245, line: 4337, column: 33)
!13053 = !DILocation(line: 4338, column: 22, scope: !13052)
!13054 = !DILocation(line: 4339, column: 5, scope: !13052)
!13055 = !DILocation(line: 0, scope: !13048)
!13056 = !DILocation(line: 0, scope: !13052)
!13057 = !DILocation(line: 4340, column: 13, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13052, file: !1245, line: 4339, column: 8)
!13059 = !DILocation(line: 4341, column: 10, scope: !13058)
!13060 = !DILocation(line: 4343, column: 26, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13058, file: !1245, line: 4343, column: 10)
!13062 = !DILocation(line: 4343, column: 21, scope: !13061)
!13063 = !DILocation(line: 4344, column: 14, scope: !13052)
!13064 = !DILocation(line: 4344, column: 27, scope: !13052)
!13065 = !DILocation(line: 4344, column: 21, scope: !13052)
!13066 = !DILocation(line: 4344, column: 5, scope: !13058)
!13067 = distinct !{!13067, !13054, !13068}
!13068 = !DILocation(line: 4344, column: 35, scope: !13052)
!13069 = !DILocation(line: 4365, column: 38, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !1245, line: 4364, column: 5)
!13071 = distinct !DILexicalBlock(scope: !13047, file: !1245, line: 4345, column: 11)
!13072 = !DILocation(line: 4367, column: 6, scope: !13070)
!13073 = !DILocation(line: 0, scope: !13070)
!13074 = !DILocation(line: 4368, column: 13, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13076, file: !1245, line: 4368, column: 11)
!13076 = distinct !DILexicalBlock(scope: !13070, file: !1245, line: 4367, column: 9)
!13077 = !DILocation(line: 4368, column: 11, scope: !13076)
!13078 = !DILocation(line: 4369, column: 14, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13075, file: !1245, line: 4368, column: 19)
!13080 = !DILocation(line: 4370, column: 16, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13079, file: !1245, line: 4370, column: 12)
!13082 = !DILocation(line: 4370, column: 12, scope: !13079)
!13083 = !DILocation(line: 4369, column: 34, scope: !13079)
!13084 = !DILocation(line: 4374, column: 15, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13076, file: !1245, line: 4374, column: 11)
!13086 = !DILocation(line: 4373, column: 7, scope: !13079)
!13087 = !DILocation(line: 4374, column: 23, scope: !13085)
!13088 = !DILocation(line: 4374, column: 11, scope: !13076)
!13089 = !DILocation(line: 4375, column: 12, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13091, file: !1245, line: 4375, column: 12)
!13091 = distinct !DILexicalBlock(scope: !13085, file: !1245, line: 4374, column: 36)
!13092 = !DILocation(line: 4375, column: 23, scope: !13090)
!13093 = !DILocation(line: 4377, column: 7, scope: !13091)
!13094 = !DILocation(line: 4378, column: 13, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !1245, line: 4378, column: 12)
!13096 = distinct !DILexicalBlock(scope: !13085, file: !1245, line: 4377, column: 14)
!13097 = !DILocation(line: 4378, column: 25, scope: !13095)
!13098 = !DILocation(line: 4378, column: 39, scope: !13095)
!13099 = !DILocation(line: 0, scope: !13085)
!13100 = !DILocation(line: 4381, column: 15, scope: !13070)
!13101 = !DILocation(line: 4381, column: 6, scope: !13076)
!13102 = distinct !{!13102, !13072, !13103}
!13103 = !DILocation(line: 4381, column: 21, scope: !13070)
!13104 = !DILocation(line: 4384, column: 11, scope: !13048)
!13105 = !DILocation(line: 4385, column: 18, scope: !13048)
!13106 = !DILocation(line: 4386, column: 8, scope: !13048)
!13107 = !DILocation(line: 4386, column: 17, scope: !13048)
!13108 = !DILocation(line: 4391, column: 1, scope: !13010)
!13109 = !DILocation(line: 4390, column: 2, scope: !13010)
!13110 = distinct !DISubprogram(name: "f_truncate", scope: !1245, file: !1245, line: 4400, type: !11998, scopeLine: 4403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13111)
!13111 = !{!13112, !13113, !13114, !13115}
!13112 = !DILocalVariable(name: "fp", arg: 1, scope: !13110, file: !1245, line: 4401, type: !10414)
!13113 = !DILocalVariable(name: "res", scope: !13110, file: !1245, line: 4404, type: !1284)
!13114 = !DILocalVariable(name: "fs", scope: !13110, file: !1245, line: 4405, type: !1311)
!13115 = !DILocalVariable(name: "ncl", scope: !13110, file: !1245, line: 4406, type: !1279)
!13116 = !DILocation(line: 0, scope: !13110)
!13117 = !DILocation(line: 4405, column: 2, scope: !13110)
!13118 = !DILocation(line: 4409, column: 22, scope: !13110)
!13119 = !DILocation(line: 4409, column: 8, scope: !13110)
!13120 = !DILocation(line: 4410, column: 10, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13110, file: !1245, line: 4410, column: 6)
!13122 = !DILocation(line: 4410, column: 19, scope: !13121)
!13123 = !DILocation(line: 4410, column: 42, scope: !13121)
!13124 = !DILocation(line: 4410, column: 29, scope: !13121)
!13125 = !DILocation(line: 4410, column: 47, scope: !13121)
!13126 = !DILocation(line: 4410, column: 6, scope: !13110)
!13127 = !DILocation(line: 4411, column: 12, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13110, file: !1245, line: 4411, column: 6)
!13129 = !DILocation(line: 4411, column: 17, scope: !13128)
!13130 = !DILocation(line: 4411, column: 6, scope: !13110)
!13131 = !DILocation(line: 4413, column: 14, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13110, file: !1245, line: 4413, column: 6)
!13133 = !DILocation(line: 4413, column: 28, scope: !13132)
!13134 = !DILocation(line: 4413, column: 22, scope: !13132)
!13135 = !DILocation(line: 4413, column: 6, scope: !13110)
!13136 = !DILocation(line: 4414, column: 16, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13138, file: !1245, line: 4414, column: 7)
!13138 = distinct !DILexicalBlock(scope: !13132, file: !1245, line: 4413, column: 34)
!13139 = !DILocation(line: 4414, column: 7, scope: !13138)
!13140 = !DILocation(line: 4415, column: 41, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13137, file: !1245, line: 4414, column: 22)
!13142 = !DILocation(line: 4415, column: 10, scope: !13141)
!13143 = !DILocation(line: 4416, column: 19, scope: !13141)
!13144 = !DILocation(line: 4417, column: 3, scope: !13141)
!13145 = !DILocation(line: 4418, column: 32, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13137, file: !1245, line: 4417, column: 10)
!13147 = !DILocation(line: 4418, column: 10, scope: !13146)
!13148 = !DILocation(line: 4420, column: 12, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13146, file: !1245, line: 4420, column: 8)
!13150 = !DILocation(line: 4420, column: 8, scope: !13146)
!13151 = !DILocation(line: 4421, column: 12, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13146, file: !1245, line: 4421, column: 8)
!13153 = !DILocation(line: 4421, column: 8, scope: !13146)
!13154 = !DILocation(line: 4422, column: 12, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13146, file: !1245, line: 4422, column: 8)
!13156 = !DILocation(line: 4422, column: 21, scope: !13155)
!13157 = !DILocation(line: 4426, column: 25, scope: !13138)
!13158 = !DILocation(line: 4426, column: 19, scope: !13138)
!13159 = !DILocation(line: 4427, column: 12, scope: !13138)
!13160 = !DILocation(line: 4429, column: 20, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13138, file: !1245, line: 4429, column: 7)
!13162 = !DILocation(line: 4422, column: 30, scope: !13155)
!13163 = !DILocation(line: 4422, column: 34, scope: !13155)
!13164 = !DILocation(line: 4422, column: 28, scope: !13155)
!13165 = !DILocation(line: 4422, column: 8, scope: !13146)
!13166 = !DILocation(line: 4423, column: 43, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13155, file: !1245, line: 4422, column: 44)
!13168 = !DILocation(line: 4423, column: 11, scope: !13167)
!13169 = !DILocation(line: 4424, column: 4, scope: !13167)
!13170 = !DILocation(line: 0, scope: !13137)
!13171 = !DILocation(line: 4429, column: 11, scope: !13161)
!13172 = !DILocation(line: 4429, column: 33, scope: !13161)
!13173 = !DILocation(line: 4429, column: 7, scope: !13138)
!13174 = !DILocation(line: 4430, column: 19, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !1245, line: 4430, column: 8)
!13176 = distinct !DILexicalBlock(scope: !13161, file: !1245, line: 4429, column: 46)
!13177 = !DILocation(line: 4430, column: 23, scope: !13175)
!13178 = !DILocation(line: 4430, column: 28, scope: !13175)
!13179 = !DILocation(line: 4430, column: 41, scope: !13175)
!13180 = !DILocation(line: 4430, column: 8, scope: !13175)
!13181 = !DILocation(line: 4430, column: 50, scope: !13175)
!13182 = !DILocation(line: 4430, column: 8, scope: !13176)
!13183 = !DILocation(line: 4433, column: 14, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13175, file: !1245, line: 4432, column: 11)
!13185 = !DILocation(line: 4437, column: 21, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !1245, line: 4437, column: 21)
!13187 = distinct !DILexicalBlock(scope: !13138, file: !1245, line: 4437, column: 7)
!13188 = !DILocation(line: 4441, column: 1, scope: !13110)
!13189 = distinct !DISubprogram(name: "f_unlink", scope: !1245, file: !1245, line: 4450, type: !1297, scopeLine: 4453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13190)
!13190 = !{!13191, !13192, !13193, !13194, !13195, !13196}
!13191 = !DILocalVariable(name: "path", arg: 1, scope: !13189, file: !1245, line: 4451, type: !1288)
!13192 = !DILocalVariable(name: "res", scope: !13189, file: !1245, line: 4454, type: !1284)
!13193 = !DILocalVariable(name: "dj", scope: !13189, file: !1245, line: 4455, type: !1303)
!13194 = !DILocalVariable(name: "sdj", scope: !13189, file: !1245, line: 4455, type: !1303)
!13195 = !DILocalVariable(name: "dclst", scope: !13189, file: !1245, line: 4456, type: !1279)
!13196 = !DILocalVariable(name: "fs", scope: !13189, file: !1245, line: 4457, type: !1311)
!13197 = !DILocation(line: 0, scope: !13189)
!13198 = !DILocation(line: 4455, column: 2, scope: !13189)
!13199 = !DILocation(line: 4455, column: 6, scope: !13189)
!13200 = !DILocation(line: 4455, column: 10, scope: !13189)
!13201 = !DILocation(line: 4457, column: 2, scope: !13189)
!13202 = !DILocation(line: 4465, column: 8, scope: !13189)
!13203 = !DILocation(line: 4466, column: 14, scope: !13189)
!13204 = !DILocation(line: 4466, column: 5, scope: !13189)
!13205 = !DILocation(line: 4466, column: 9, scope: !13189)
!13206 = !DILocation(line: 4466, column: 12, scope: !13189)
!13207 = !DILocation(line: 4467, column: 10, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13189, file: !1245, line: 4467, column: 6)
!13209 = !DILocation(line: 4467, column: 6, scope: !13189)
!13210 = !DILocation(line: 4469, column: 26, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13208, file: !1245, line: 4467, column: 20)
!13212 = !DILocation(line: 4469, column: 9, scope: !13211)
!13213 = !DILocation(line: 4470, column: 24, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13211, file: !1245, line: 4470, column: 7)
!13215 = !DILocation(line: 4470, column: 33, scope: !13214)
!13216 = !DILocation(line: 4476, column: 11, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13211, file: !1245, line: 4476, column: 7)
!13218 = !DILocation(line: 4476, column: 7, scope: !13211)
!13219 = !DILocation(line: 4477, column: 22, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13221, file: !1245, line: 4477, column: 8)
!13221 = distinct !DILexicalBlock(scope: !13217, file: !1245, line: 4476, column: 21)
!13222 = !DILocation(line: 4477, column: 8, scope: !13221)
!13223 = !DILocation(line: 4480, column: 16, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13225, file: !1245, line: 4480, column: 9)
!13225 = distinct !DILexicalBlock(scope: !13220, file: !1245, line: 4479, column: 11)
!13226 = !DILocation(line: 4480, column: 21, scope: !13224)
!13227 = !DILocation(line: 4484, column: 8, scope: !13221)
!13228 = !DILocation(line: 4494, column: 30, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13230, file: !1245, line: 4493, column: 5)
!13230 = distinct !DILexicalBlock(scope: !13231, file: !1245, line: 4484, column: 22)
!13231 = distinct !DILexicalBlock(scope: !13221, file: !1245, line: 4484, column: 8)
!13232 = !DILocation(line: 4494, column: 14, scope: !13229)
!13233 = !DILocation(line: 4496, column: 21, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13230, file: !1245, line: 4496, column: 9)
!13235 = !DILocation(line: 4496, column: 9, scope: !13230)
!13236 = !DILocation(line: 4498, column: 23, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13238, file: !1245, line: 4498, column: 10)
!13238 = distinct !DILexicalBlock(scope: !13234, file: !1245, line: 4496, column: 31)
!13239 = !DILocation(line: 4498, column: 16, scope: !13237)
!13240 = !DILocation(line: 4498, column: 10, scope: !13238)
!13241 = !DILocation(line: 4503, column: 15, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13237, file: !1245, line: 4502, column: 6)
!13243 = !DILocation(line: 4503, column: 18, scope: !13242)
!13244 = !DILocation(line: 4504, column: 15, scope: !13242)
!13245 = !DILocation(line: 4504, column: 22, scope: !13242)
!13246 = !DILocation(line: 4511, column: 13, scope: !13242)
!13247 = !DILocation(line: 4512, column: 15, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13242, file: !1245, line: 4512, column: 11)
!13249 = !DILocation(line: 4512, column: 11, scope: !13242)
!13250 = !DILocation(line: 4513, column: 14, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13248, file: !1245, line: 4512, column: 25)
!13252 = !DILocation(line: 4514, column: 16, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13251, file: !1245, line: 4514, column: 12)
!13254 = !DILocation(line: 4514, column: 12, scope: !13251)
!13255 = !DILocation(line: 4515, column: 16, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13251, file: !1245, line: 4515, column: 12)
!13257 = !DILocation(line: 4515, column: 12, scope: !13251)
!13258 = !DILocation(line: 4521, column: 11, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13260, file: !1245, line: 4520, column: 22)
!13260 = distinct !DILexicalBlock(scope: !13221, file: !1245, line: 4520, column: 8)
!13261 = !DILocation(line: 4522, column: 13, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13259, file: !1245, line: 4522, column: 9)
!13263 = !DILocation(line: 4522, column: 22, scope: !13262)
!13264 = !DILocation(line: 4526, column: 12, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13262, file: !1245, line: 4522, column: 32)
!13266 = !DILocation(line: 4528, column: 5, scope: !13265)
!13267 = !DILocation(line: 0, scope: !13259)
!13268 = !DILocation(line: 4529, column: 13, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13259, file: !1245, line: 4529, column: 9)
!13270 = !DILocation(line: 4529, column: 9, scope: !13259)
!13271 = !DILocation(line: 4529, column: 29, scope: !13269)
!13272 = !DILocation(line: 4529, column: 23, scope: !13269)
!13273 = !DILocation(line: 4536, column: 1, scope: !13189)
!13274 = !DILocation(line: 4535, column: 2, scope: !13189)
!13275 = distinct !DISubprogram(name: "dir_remove", scope: !1245, file: !1245, line: 2348, type: !10712, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13276)
!13276 = !{!13277, !13278, !13279}
!13277 = !DILocalVariable(name: "dp", arg: 1, scope: !13275, file: !1245, line: 2349, type: !10628)
!13278 = !DILocalVariable(name: "res", scope: !13275, file: !1245, line: 2352, type: !1284)
!13279 = !DILocalVariable(name: "fs", scope: !13275, file: !1245, line: 2353, type: !1311)
!13280 = !DILocation(line: 0, scope: !13275)
!13281 = !DILocation(line: 2353, column: 22, scope: !13275)
!13282 = !DILocation(line: 2376, column: 28, scope: !13275)
!13283 = !DILocation(line: 2376, column: 8, scope: !13275)
!13284 = !DILocation(line: 2377, column: 10, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13275, file: !1245, line: 2377, column: 6)
!13286 = !DILocation(line: 2377, column: 6, scope: !13275)
!13287 = !DILocation(line: 2378, column: 7, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13285, file: !1245, line: 2377, column: 20)
!13289 = !DILocation(line: 2378, column: 21, scope: !13288)
!13290 = !DILocation(line: 2379, column: 7, scope: !13288)
!13291 = !DILocation(line: 2379, column: 13, scope: !13288)
!13292 = !DILocation(line: 2380, column: 2, scope: !13288)
!13293 = !DILocation(line: 2383, column: 2, scope: !13275)
!13294 = distinct !DISubprogram(name: "f_mkdir", scope: !1245, file: !1245, line: 4545, type: !1297, scopeLine: 4548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13295)
!13295 = !{!13296, !13297, !13298, !13299, !13300, !13301, !13302, !13303, !13304, !13305}
!13296 = !DILocalVariable(name: "path", arg: 1, scope: !13294, file: !1245, line: 4546, type: !1288)
!13297 = !DILocalVariable(name: "res", scope: !13294, file: !1245, line: 4549, type: !1284)
!13298 = !DILocalVariable(name: "dj", scope: !13294, file: !1245, line: 4550, type: !1303)
!13299 = !DILocalVariable(name: "fs", scope: !13294, file: !1245, line: 4551, type: !1311)
!13300 = !DILocalVariable(name: "dir", scope: !13294, file: !1245, line: 4552, type: !1282)
!13301 = !DILocalVariable(name: "n", scope: !13294, file: !1245, line: 4553, type: !1281)
!13302 = !DILocalVariable(name: "dsc", scope: !13294, file: !1245, line: 4554, type: !1279)
!13303 = !DILocalVariable(name: "dcl", scope: !13294, file: !1245, line: 4554, type: !1279)
!13304 = !DILocalVariable(name: "pcl", scope: !13294, file: !1245, line: 4554, type: !1279)
!13305 = !DILocalVariable(name: "tm", scope: !13294, file: !1245, line: 4554, type: !1279)
!13306 = !DILocation(line: 0, scope: !13294)
!13307 = !DILocation(line: 4550, column: 2, scope: !13294)
!13308 = !DILocation(line: 4550, column: 6, scope: !13294)
!13309 = !DILocation(line: 4551, column: 2, scope: !13294)
!13310 = !DILocation(line: 4559, column: 8, scope: !13294)
!13311 = !DILocation(line: 4560, column: 14, scope: !13294)
!13312 = !DILocation(line: 4560, column: 5, scope: !13294)
!13313 = !DILocation(line: 4560, column: 9, scope: !13294)
!13314 = !DILocation(line: 4560, column: 12, scope: !13294)
!13315 = !DILocation(line: 4561, column: 10, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13294, file: !1245, line: 4561, column: 6)
!13317 = !DILocation(line: 4561, column: 6, scope: !13294)
!13318 = !DILocation(line: 4563, column: 26, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13316, file: !1245, line: 4561, column: 20)
!13320 = !DILocation(line: 4563, column: 9, scope: !13319)
!13321 = !DILocation(line: 4564, column: 11, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13319, file: !1245, line: 4564, column: 7)
!13323 = !DILocation(line: 4564, column: 7, scope: !13319)
!13324 = !DILocation(line: 4565, column: 24, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13319, file: !1245, line: 4565, column: 7)
!13326 = !DILocation(line: 4565, column: 38, scope: !13325)
!13327 = !DILocation(line: 4568, column: 11, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13319, file: !1245, line: 4568, column: 7)
!13329 = !DILocation(line: 4568, column: 7, scope: !13319)
!13330 = !DILocation(line: 4569, column: 10, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13328, file: !1245, line: 4568, column: 26)
!13332 = !DILocation(line: 4570, column: 32, scope: !13331)
!13333 = !DILocation(line: 4570, column: 21, scope: !13331)
!13334 = !DILocation(line: 4570, column: 38, scope: !13331)
!13335 = !DILocation(line: 4570, column: 11, scope: !13331)
!13336 = !DILocation(line: 4570, column: 19, scope: !13331)
!13337 = !DILocation(line: 4572, column: 12, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13331, file: !1245, line: 4572, column: 8)
!13339 = !DILocation(line: 4572, column: 8, scope: !13331)
!13340 = !DILocation(line: 4573, column: 12, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13331, file: !1245, line: 4573, column: 8)
!13342 = !DILocation(line: 4573, column: 8, scope: !13331)
!13343 = !DILocation(line: 4574, column: 12, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13331, file: !1245, line: 4574, column: 8)
!13345 = !DILocation(line: 4574, column: 8, scope: !13331)
!13346 = !DILocation(line: 4575, column: 12, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13331, file: !1245, line: 4575, column: 8)
!13348 = !DILocation(line: 4575, column: 8, scope: !13331)
!13349 = !DILocation(line: 4575, column: 28, scope: !13347)
!13350 = !DILocation(line: 4577, column: 12, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13331, file: !1245, line: 4577, column: 8)
!13352 = !DILocation(line: 4577, column: 8, scope: !13331)
!13353 = !DILocation(line: 4578, column: 11, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13351, file: !1245, line: 4577, column: 22)
!13355 = !DILocation(line: 4579, column: 11, scope: !13354)
!13356 = !DILocation(line: 4580, column: 5, scope: !13354)
!13357 = !DILocation(line: 4582, column: 6, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !1245, line: 4581, column: 48)
!13359 = distinct !DILexicalBlock(scope: !13354, file: !1245, line: 4581, column: 9)
!13360 = !DILocation(line: 4583, column: 20, scope: !13358)
!13361 = !DILocation(line: 4584, column: 6, scope: !13358)
!13362 = !DILocation(line: 4584, column: 20, scope: !13358)
!13363 = !DILocation(line: 4585, column: 19, scope: !13358)
!13364 = !DILocation(line: 4585, column: 6, scope: !13358)
!13365 = !DILocation(line: 4586, column: 6, scope: !13358)
!13366 = !DILocation(line: 4587, column: 18, scope: !13358)
!13367 = !DILocation(line: 4587, column: 6, scope: !13358)
!13368 = !DILocation(line: 4588, column: 6, scope: !13358)
!13369 = !DILocation(line: 4588, column: 22, scope: !13358)
!13370 = !DILocation(line: 4588, column: 42, scope: !13358)
!13371 = !DILocation(line: 4589, column: 14, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13358, file: !1245, line: 4589, column: 10)
!13373 = !DILocation(line: 4589, column: 22, scope: !13372)
!13374 = !DILocation(line: 4589, column: 34, scope: !13372)
!13375 = !DILocation(line: 4589, column: 48, scope: !13372)
!13376 = !DILocation(line: 4589, column: 41, scope: !13372)
!13377 = !DILocation(line: 4589, column: 10, scope: !13358)
!13378 = !DILocation(line: 0, scope: !13358)
!13379 = !DILocation(line: 4590, column: 6, scope: !13358)
!13380 = !DILocation(line: 4592, column: 18, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13354, file: !1245, line: 4592, column: 5)
!13382 = !DILocation(line: 4592, column: 5, scope: !13381)
!13383 = !DILocation(line: 4592, column: 14, scope: !13381)
!13384 = !DILocation(line: 4593, column: 18, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !1245, line: 4592, column: 33)
!13386 = distinct !DILexicalBlock(scope: !13381, file: !1245, line: 4592, column: 5)
!13387 = !DILocation(line: 4594, column: 16, scope: !13385)
!13388 = !DILocation(line: 4595, column: 12, scope: !13385)
!13389 = !DILocation(line: 4596, column: 14, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13385, file: !1245, line: 4596, column: 10)
!13391 = !DILocation(line: 4596, column: 10, scope: !13385)
!13392 = !DILocation(line: 4593, column: 23, scope: !13385)
!13393 = !DILocation(line: 4597, column: 6, scope: !13385)
!13394 = !DILocation(line: 4592, column: 29, scope: !13386)
!13395 = distinct !{!13395, !13382, !13396}
!13396 = !DILocation(line: 4598, column: 5, scope: !13381)
!13397 = !DILocation(line: 4600, column: 28, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13331, file: !1245, line: 4600, column: 8)
!13399 = !DILocation(line: 4601, column: 12, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13331, file: !1245, line: 4601, column: 8)
!13401 = !DILocation(line: 4601, column: 8, scope: !13331)
!13402 = !DILocation(line: 4614, column: 15, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !1245, line: 4613, column: 5)
!13404 = distinct !DILexicalBlock(scope: !13400, file: !1245, line: 4601, column: 22)
!13405 = !DILocation(line: 4615, column: 19, scope: !13403)
!13406 = !DILocation(line: 4615, column: 6, scope: !13403)
!13407 = !DILocation(line: 4616, column: 6, scope: !13403)
!13408 = !DILocation(line: 4617, column: 6, scope: !13403)
!13409 = !DILocation(line: 4617, column: 20, scope: !13403)
!13410 = !DILocation(line: 4618, column: 10, scope: !13403)
!13411 = !DILocation(line: 4618, column: 16, scope: !13403)
!13412 = !DILocation(line: 4620, column: 29, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13404, file: !1245, line: 4620, column: 9)
!13414 = !DILocation(line: 4620, column: 23, scope: !13413)
!13415 = !DILocation(line: 4622, column: 5, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13400, file: !1245, line: 4621, column: 11)
!13417 = !DILocation(line: 4629, column: 1, scope: !13294)
!13418 = !DILocation(line: 4628, column: 2, scope: !13294)
!13419 = distinct !DISubprogram(name: "f_rename", scope: !1245, file: !1245, line: 4638, type: !13420, scopeLine: 4642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13422)
!13420 = !DISubroutineType(types: !13421)
!13421 = !{!1284, !1288, !1288}
!13422 = !{!13423, !13424, !13425, !13426, !13427, !13428, !13429, !13431, !13432}
!13423 = !DILocalVariable(name: "path_old", arg: 1, scope: !13419, file: !1245, line: 4639, type: !1288)
!13424 = !DILocalVariable(name: "path_new", arg: 2, scope: !13419, file: !1245, line: 4640, type: !1288)
!13425 = !DILocalVariable(name: "res", scope: !13419, file: !1245, line: 4643, type: !1284)
!13426 = !DILocalVariable(name: "djo", scope: !13419, file: !1245, line: 4644, type: !1303)
!13427 = !DILocalVariable(name: "djn", scope: !13419, file: !1245, line: 4644, type: !1303)
!13428 = !DILocalVariable(name: "fs", scope: !13419, file: !1245, line: 4645, type: !1311)
!13429 = !DILocalVariable(name: "buf", scope: !13419, file: !1245, line: 4646, type: !13430)
!13430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 192, elements: !294)
!13431 = !DILocalVariable(name: "dir", scope: !13419, file: !1245, line: 4646, type: !1282)
!13432 = !DILocalVariable(name: "dw", scope: !13419, file: !1245, line: 4647, type: !1279)
!13433 = !DILocation(line: 0, scope: !13419)
!13434 = !DILocation(line: 4644, column: 2, scope: !13419)
!13435 = !DILocation(line: 4644, column: 6, scope: !13419)
!13436 = !DILocation(line: 4644, column: 11, scope: !13419)
!13437 = !DILocation(line: 4645, column: 2, scope: !13419)
!13438 = !DILocation(line: 4646, column: 2, scope: !13419)
!13439 = !DILocation(line: 4646, column: 7, scope: !13419)
!13440 = !DILocation(line: 4651, column: 2, scope: !13419)
!13441 = !DILocation(line: 4652, column: 8, scope: !13419)
!13442 = !DILocation(line: 4653, column: 10, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13419, file: !1245, line: 4653, column: 6)
!13444 = !DILocation(line: 4653, column: 6, scope: !13419)
!13445 = !DILocation(line: 4654, column: 16, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13443, file: !1245, line: 4653, column: 20)
!13447 = !DILocation(line: 4654, column: 11, scope: !13446)
!13448 = !DILocation(line: 4654, column: 14, scope: !13446)
!13449 = !DILocation(line: 4656, column: 27, scope: !13446)
!13450 = !DILocation(line: 4656, column: 9, scope: !13446)
!13451 = !DILocation(line: 4657, column: 11, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13446, file: !1245, line: 4657, column: 7)
!13453 = !DILocation(line: 4657, column: 20, scope: !13452)
!13454 = !DILocation(line: 4661, column: 11, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13446, file: !1245, line: 4661, column: 7)
!13456 = !DILocation(line: 4661, column: 7, scope: !13446)
!13457 = !DILocation(line: 4688, column: 22, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !1245, line: 4687, column: 4)
!13459 = distinct !DILexicalBlock(scope: !13455, file: !1245, line: 4661, column: 21)
!13460 = !DILocation(line: 4688, column: 26, scope: !13458)
!13461 = !DILocation(line: 4688, column: 5, scope: !13458)
!13462 = !DILocation(line: 4689, column: 5, scope: !13458)
!13463 = !DILocation(line: 4690, column: 29, scope: !13458)
!13464 = !DILocation(line: 4690, column: 11, scope: !13458)
!13465 = !DILocation(line: 4691, column: 9, scope: !13458)
!13466 = !DILocation(line: 4692, column: 21, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !1245, line: 4691, column: 23)
!13468 = distinct !DILexicalBlock(scope: !13458, file: !1245, line: 4691, column: 9)
!13469 = !DILocation(line: 4692, column: 39, scope: !13467)
!13470 = !DILocation(line: 4692, column: 28, scope: !13467)
!13471 = !DILocation(line: 4692, column: 46, scope: !13467)
!13472 = !DILocation(line: 0, scope: !13467)
!13473 = !DILocation(line: 4695, column: 12, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !1245, line: 4694, column: 28)
!13475 = distinct !DILexicalBlock(scope: !13458, file: !1245, line: 4694, column: 9)
!13476 = !DILocation(line: 4696, column: 14, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13474, file: !1245, line: 4696, column: 10)
!13478 = !DILocation(line: 4696, column: 10, scope: !13474)
!13479 = !DILocation(line: 4697, column: 17, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13477, file: !1245, line: 4696, column: 24)
!13481 = !DILocation(line: 4698, column: 19, scope: !13480)
!13482 = !DILocation(line: 4698, column: 29, scope: !13480)
!13483 = !DILocation(line: 4698, column: 7, scope: !13480)
!13484 = !DILocation(line: 4699, column: 23, scope: !13480)
!13485 = !DILocation(line: 4699, column: 30, scope: !13480)
!13486 = !DILocation(line: 4699, column: 7, scope: !13480)
!13487 = !DILocation(line: 4699, column: 21, scope: !13480)
!13488 = !DILocation(line: 4700, column: 11, scope: !13480)
!13489 = !DILocation(line: 4700, column: 17, scope: !13480)
!13490 = !DILocation(line: 4701, column: 12, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13480, file: !1245, line: 4701, column: 11)
!13492 = !DILocation(line: 4701, column: 26, scope: !13491)
!13493 = !DILocation(line: 4701, column: 36, scope: !13491)
!13494 = !DILocation(line: 4701, column: 47, scope: !13491)
!13495 = !DILocation(line: 4701, column: 65, scope: !13491)
!13496 = !DILocation(line: 4701, column: 54, scope: !13491)
!13497 = !DILocation(line: 4701, column: 11, scope: !13480)
!13498 = !DILocation(line: 4702, column: 28, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13491, file: !1245, line: 4701, column: 73)
!13500 = !DILocation(line: 4702, column: 13, scope: !13499)
!13501 = !DILocation(line: 4703, column: 13, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13499, file: !1245, line: 4703, column: 12)
!13503 = !DILocation(line: 4703, column: 12, scope: !13499)
!13504 = !DILocation(line: 4707, column: 15, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13502, file: !1245, line: 4705, column: 15)
!13506 = !DILocation(line: 4708, column: 23, scope: !13505)
!13507 = !DILocation(line: 4709, column: 17, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13505, file: !1245, line: 4709, column: 13)
!13509 = !DILocation(line: 4709, column: 26, scope: !13508)
!13510 = !DILocation(line: 4709, column: 29, scope: !13508)
!13511 = !DILocation(line: 4709, column: 36, scope: !13508)
!13512 = !DILocation(line: 4709, column: 13, scope: !13505)
!13513 = !DILocation(line: 4710, column: 10, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13508, file: !1245, line: 4709, column: 44)
!13515 = !DILocation(line: 4711, column: 20, scope: !13514)
!13516 = !DILocation(line: 4712, column: 9, scope: !13514)
!13517 = !DILocation(line: 4719, column: 11, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !1245, line: 4718, column: 22)
!13519 = distinct !DILexicalBlock(scope: !13459, file: !1245, line: 4718, column: 8)
!13520 = !DILocation(line: 4720, column: 13, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13518, file: !1245, line: 4720, column: 9)
!13522 = !DILocation(line: 4720, column: 9, scope: !13518)
!13523 = !DILocation(line: 4721, column: 12, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13521, file: !1245, line: 4720, column: 23)
!13525 = !DILocation(line: 4722, column: 5, scope: !13524)
!13526 = !DILocation(line: 4730, column: 1, scope: !13419)
!13527 = !DILocation(line: 4729, column: 2, scope: !13419)
!13528 = distinct !DISubprogram(name: "f_chmod", scope: !1245, file: !1245, line: 4744, type: !13529, scopeLine: 4749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13531)
!13529 = !DISubroutineType(types: !13530)
!13530 = !{!1284, !1288, !1283, !1283}
!13531 = !{!13532, !13533, !13534, !13535, !13536, !13537}
!13532 = !DILocalVariable(name: "path", arg: 1, scope: !13528, file: !1245, line: 4745, type: !1288)
!13533 = !DILocalVariable(name: "attr", arg: 2, scope: !13528, file: !1245, line: 4746, type: !1283)
!13534 = !DILocalVariable(name: "mask", arg: 3, scope: !13528, file: !1245, line: 4747, type: !1283)
!13535 = !DILocalVariable(name: "res", scope: !13528, file: !1245, line: 4750, type: !1284)
!13536 = !DILocalVariable(name: "dj", scope: !13528, file: !1245, line: 4751, type: !1303)
!13537 = !DILocalVariable(name: "fs", scope: !13528, file: !1245, line: 4752, type: !1311)
!13538 = !DILocation(line: 0, scope: !13528)
!13539 = !DILocation(line: 4751, column: 2, scope: !13528)
!13540 = !DILocation(line: 4751, column: 6, scope: !13528)
!13541 = !DILocation(line: 4752, column: 2, scope: !13528)
!13542 = !DILocation(line: 4756, column: 8, scope: !13528)
!13543 = !DILocation(line: 4757, column: 14, scope: !13528)
!13544 = !DILocation(line: 4757, column: 9, scope: !13528)
!13545 = !DILocation(line: 4757, column: 12, scope: !13528)
!13546 = !DILocation(line: 4758, column: 10, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13528, file: !1245, line: 4758, column: 6)
!13548 = !DILocation(line: 4758, column: 6, scope: !13528)
!13549 = !DILocation(line: 4760, column: 26, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13547, file: !1245, line: 4758, column: 20)
!13551 = !DILocation(line: 4760, column: 9, scope: !13550)
!13552 = !DILocation(line: 4761, column: 11, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13550, file: !1245, line: 4761, column: 7)
!13554 = !DILocation(line: 4761, column: 20, scope: !13553)
!13555 = !DILocation(line: 4762, column: 11, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13550, file: !1245, line: 4762, column: 7)
!13557 = !DILocation(line: 4762, column: 7, scope: !13550)
!13558 = !DILocation(line: 4763, column: 9, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13556, file: !1245, line: 4762, column: 21)
!13560 = !DILocation(line: 4771, column: 30, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13559, file: !1245, line: 4770, column: 4)
!13562 = !DILocation(line: 4771, column: 44, scope: !13561)
!13563 = !DILocation(line: 4771, column: 41, scope: !13561)
!13564 = !DILocation(line: 4771, column: 66, scope: !13561)
!13565 = !DILocation(line: 4771, column: 58, scope: !13561)
!13566 = !DILocation(line: 4771, column: 38, scope: !13561)
!13567 = !DILocation(line: 4771, column: 22, scope: !13561)
!13568 = !DILocation(line: 4772, column: 9, scope: !13561)
!13569 = !DILocation(line: 4772, column: 15, scope: !13561)
!13570 = !DILocation(line: 4774, column: 28, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13559, file: !1245, line: 4774, column: 8)
!13572 = !DILocation(line: 4774, column: 22, scope: !13571)
!13573 = !DILocation(line: 4780, column: 1, scope: !13528)
!13574 = !DILocation(line: 4779, column: 2, scope: !13528)
!13575 = distinct !DISubprogram(name: "f_utime", scope: !1245, file: !1245, line: 4789, type: !13576, scopeLine: 4793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13580)
!13576 = !DISubroutineType(types: !13577)
!13577 = !{!1284, !1288, !13578}
!13578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13579, size: 32)
!13579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12191)
!13580 = !{!13581, !13582, !13583, !13584, !13585}
!13581 = !DILocalVariable(name: "path", arg: 1, scope: !13575, file: !1245, line: 4790, type: !1288)
!13582 = !DILocalVariable(name: "fno", arg: 2, scope: !13575, file: !1245, line: 4791, type: !13578)
!13583 = !DILocalVariable(name: "res", scope: !13575, file: !1245, line: 4794, type: !1284)
!13584 = !DILocalVariable(name: "dj", scope: !13575, file: !1245, line: 4795, type: !1303)
!13585 = !DILocalVariable(name: "fs", scope: !13575, file: !1245, line: 4796, type: !1311)
!13586 = !DILocation(line: 0, scope: !13575)
!13587 = !DILocation(line: 4795, column: 2, scope: !13575)
!13588 = !DILocation(line: 4795, column: 6, scope: !13575)
!13589 = !DILocation(line: 4796, column: 2, scope: !13575)
!13590 = !DILocation(line: 4800, column: 8, scope: !13575)
!13591 = !DILocation(line: 4801, column: 14, scope: !13575)
!13592 = !DILocation(line: 4801, column: 9, scope: !13575)
!13593 = !DILocation(line: 4801, column: 12, scope: !13575)
!13594 = !DILocation(line: 4802, column: 10, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13575, file: !1245, line: 4802, column: 6)
!13596 = !DILocation(line: 4802, column: 6, scope: !13575)
!13597 = !DILocation(line: 4804, column: 26, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13595, file: !1245, line: 4802, column: 20)
!13599 = !DILocation(line: 4804, column: 9, scope: !13598)
!13600 = !DILocation(line: 4805, column: 11, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13598, file: !1245, line: 4805, column: 7)
!13602 = !DILocation(line: 4805, column: 20, scope: !13601)
!13603 = !DILocation(line: 4806, column: 11, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13598, file: !1245, line: 4806, column: 7)
!13605 = !DILocation(line: 4806, column: 7, scope: !13598)
!13606 = !DILocation(line: 4814, column: 17, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !1245, line: 4813, column: 4)
!13608 = distinct !DILexicalBlock(scope: !13604, file: !1245, line: 4806, column: 21)
!13609 = !DILocation(line: 4814, column: 21, scope: !13607)
!13610 = !DILocation(line: 4814, column: 48, scope: !13607)
!13611 = !DILocation(line: 4814, column: 36, scope: !13607)
!13612 = !DILocation(line: 4814, column: 54, scope: !13607)
!13613 = !DILocation(line: 4814, column: 67, scope: !13607)
!13614 = !DILocation(line: 4814, column: 62, scope: !13607)
!13615 = !DILocation(line: 4814, column: 60, scope: !13607)
!13616 = !DILocation(line: 4814, column: 5, scope: !13607)
!13617 = !DILocation(line: 4815, column: 9, scope: !13607)
!13618 = !DILocation(line: 4815, column: 15, scope: !13607)
!13619 = !DILocation(line: 4817, column: 28, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13608, file: !1245, line: 4817, column: 8)
!13621 = !DILocation(line: 4817, column: 22, scope: !13620)
!13622 = !DILocation(line: 4823, column: 1, scope: !13575)
!13623 = !DILocation(line: 4822, column: 2, scope: !13575)
!13624 = distinct !DISubprogram(name: "f_getlabel", scope: !1245, file: !1245, line: 4834, type: !13625, scopeLine: 4839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13627)
!13625 = !DISubroutineType(types: !13626)
!13626 = !{!1284, !1288, !12179, !1439}
!13627 = !{!13628, !13629, !13630, !13631, !13632, !13633, !13634, !13635}
!13628 = !DILocalVariable(name: "path", arg: 1, scope: !13624, file: !1245, line: 4835, type: !1288)
!13629 = !DILocalVariable(name: "label", arg: 2, scope: !13624, file: !1245, line: 4836, type: !12179)
!13630 = !DILocalVariable(name: "vsn", arg: 3, scope: !13624, file: !1245, line: 4837, type: !1439)
!13631 = !DILocalVariable(name: "res", scope: !13624, file: !1245, line: 4840, type: !1284)
!13632 = !DILocalVariable(name: "dj", scope: !13624, file: !1245, line: 4841, type: !1303)
!13633 = !DILocalVariable(name: "fs", scope: !13624, file: !1245, line: 4842, type: !1311)
!13634 = !DILocalVariable(name: "si", scope: !13624, file: !1245, line: 4843, type: !1281)
!13635 = !DILocalVariable(name: "di", scope: !13624, file: !1245, line: 4843, type: !1281)
!13636 = !DILocation(line: 0, scope: !13624)
!13637 = !DILocation(line: 4841, column: 2, scope: !13624)
!13638 = !DILocation(line: 4841, column: 6, scope: !13624)
!13639 = !DILocation(line: 4842, column: 2, scope: !13624)
!13640 = !DILocation(line: 4849, column: 8, scope: !13624)
!13641 = !DILocation(line: 4852, column: 10, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13624, file: !1245, line: 4852, column: 6)
!13643 = !DILocation(line: 4852, column: 19, scope: !13642)
!13644 = !DILocation(line: 4853, column: 15, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !1245, line: 4852, column: 29)
!13646 = !DILocation(line: 4853, column: 10, scope: !13645)
!13647 = !DILocation(line: 4853, column: 13, scope: !13645)
!13648 = !DILocation(line: 4853, column: 26, scope: !13645)
!13649 = !DILocation(line: 4853, column: 33, scope: !13645)
!13650 = !DILocation(line: 4854, column: 9, scope: !13645)
!13651 = !DILocation(line: 4855, column: 11, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13645, file: !1245, line: 4855, column: 7)
!13653 = !DILocation(line: 4855, column: 7, scope: !13645)
!13654 = !DILocation(line: 4856, column: 11, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13652, file: !1245, line: 4855, column: 21)
!13656 = !DILocation(line: 4857, column: 13, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13655, file: !1245, line: 4857, column: 9)
!13658 = !DILocation(line: 4857, column: 9, scope: !13655)
!13659 = !DILocation(line: 4876, column: 6, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13661, file: !1245, line: 4874, column: 5)
!13661 = distinct !DILexicalBlock(scope: !13657, file: !1245, line: 4857, column: 23)
!13662 = !DILocation(line: 0, scope: !13660)
!13663 = !DILocation(line: 4884, column: 30, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13660, file: !1245, line: 4876, column: 9)
!13665 = !DILocation(line: 4884, column: 21, scope: !13664)
!13666 = !DILocation(line: 4884, column: 7, scope: !13664)
!13667 = !DILocation(line: 4884, column: 19, scope: !13664)
!13668 = !DILocation(line: 4886, column: 18, scope: !13660)
!13669 = !DILocation(line: 4886, column: 6, scope: !13664)
!13670 = distinct !{!13670, !13659, !13671}
!13671 = !DILocation(line: 4886, column: 22, scope: !13660)
!13672 = !DILocation(line: 4888, column: 7, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13660, file: !1245, line: 4887, column: 9)
!13674 = !DILocation(line: 4888, column: 17, scope: !13673)
!13675 = !DILocation(line: 4889, column: 14, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13673, file: !1245, line: 4889, column: 11)
!13677 = !DILocation(line: 4889, column: 11, scope: !13673)
!13678 = !DILocation(line: 4890, column: 21, scope: !13660)
!13679 = !DILocation(line: 4890, column: 15, scope: !13660)
!13680 = !DILocation(line: 4890, column: 27, scope: !13660)
!13681 = !DILocation(line: 4890, column: 6, scope: !13673)
!13682 = distinct !{!13682, !13683, !13684}
!13683 = !DILocation(line: 4887, column: 6, scope: !13660)
!13684 = !DILocation(line: 4890, column: 33, scope: !13660)
!13685 = !DILocation(line: 0, scope: !13645)
!13686 = !DILocation(line: 4894, column: 11, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13645, file: !1245, line: 4894, column: 7)
!13688 = !DILocation(line: 4894, column: 7, scope: !13645)
!13689 = !DILocation(line: 4895, column: 13, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13687, file: !1245, line: 4894, column: 26)
!13691 = !DILocation(line: 4897, column: 3, scope: !13690)
!13692 = !DILocation(line: 4901, column: 10, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13624, file: !1245, line: 4901, column: 6)
!13694 = !DILocation(line: 4901, column: 19, scope: !13693)
!13695 = !DILocation(line: 4902, column: 21, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13693, file: !1245, line: 4901, column: 27)
!13697 = !DILocation(line: 4902, column: 29, scope: !13696)
!13698 = !DILocation(line: 4902, column: 9, scope: !13696)
!13699 = !DILocation(line: 4903, column: 11, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13696, file: !1245, line: 4903, column: 7)
!13701 = !DILocation(line: 4903, column: 7, scope: !13696)
!13702 = !DILocation(line: 4904, column: 16, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13700, file: !1245, line: 4903, column: 21)
!13704 = !DILocation(line: 4904, column: 4, scope: !13703)
!13705 = !DILocation(line: 4909, column: 28, scope: !13703)
!13706 = !DILocation(line: 4909, column: 11, scope: !13703)
!13707 = !DILocation(line: 4909, column: 9, scope: !13703)
!13708 = !DILocation(line: 4910, column: 3, scope: !13703)
!13709 = !DILocation(line: 4914, column: 1, scope: !13624)
!13710 = !DILocation(line: 4913, column: 2, scope: !13624)
!13711 = !DILocation(line: 0, scope: !1296)
!13712 = !DILocation(line: 4928, column: 2, scope: !1296)
!13713 = !DILocation(line: 4928, column: 6, scope: !1296)
!13714 = !DILocation(line: 4929, column: 2, scope: !1296)
!13715 = !DILocation(line: 4930, column: 2, scope: !1296)
!13716 = !DILocation(line: 4930, column: 7, scope: !1296)
!13717 = !DILocation(line: 4937, column: 8, scope: !1296)
!13718 = !DILocation(line: 4938, column: 10, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !1296, file: !1245, line: 4938, column: 6)
!13720 = !DILocation(line: 4938, column: 6, scope: !1296)
!13721 = !DILocation(line: 4939, column: 14, scope: !1296)
!13722 = !DILocation(line: 4939, column: 9, scope: !1296)
!13723 = !DILocation(line: 4939, column: 12, scope: !1296)
!13724 = !DILocation(line: 4942, column: 7, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !1296, file: !1245, line: 4942, column: 2)
!13726 = !DILocation(line: 0, scope: !13725)
!13727 = !DILocation(line: 4942, column: 23, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13725, file: !1245, line: 4942, column: 2)
!13729 = !DILocation(line: 4942, column: 35, scope: !13728)
!13730 = !DILocation(line: 4942, column: 47, scope: !13728)
!13731 = !DILocation(line: 4942, column: 2, scope: !13725)
!13732 = distinct !{!13732, !13731, !13733}
!13733 = !DILocation(line: 4942, column: 51, scope: !13725)
!13734 = !DILocation(line: 4963, column: 11, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13736, file: !1245, line: 4963, column: 3)
!13736 = distinct !DILexicalBlock(scope: !13737, file: !1245, line: 4963, column: 3)
!13737 = distinct !DILexicalBlock(scope: !1296, file: !1245, line: 4962, column: 2)
!13738 = !DILocation(line: 4963, column: 16, scope: !13735)
!13739 = !DILocation(line: 4963, column: 30, scope: !13735)
!13740 = !DILocation(line: 4963, column: 19, scope: !13735)
!13741 = !DILocation(line: 4963, column: 35, scope: !13735)
!13742 = !DILocation(line: 4963, column: 3, scope: !13736)
!13743 = distinct !{!13743, !13742, !13744}
!13744 = !DILocation(line: 4963, column: 51, scope: !13736)
!13745 = !DILocation(line: 4965, column: 13, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !1245, line: 4964, column: 13)
!13747 = distinct !DILexicalBlock(scope: !13737, file: !1245, line: 4964, column: 7)
!13748 = !DILocation(line: 4966, column: 4, scope: !13746)
!13749 = !DILocation(line: 0, scope: !13746)
!13750 = !DILocation(line: 4970, column: 22, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13746, file: !1245, line: 4966, column: 7)
!13752 = !DILocation(line: 4970, column: 15, scope: !13751)
!13753 = !DILocation(line: 4970, column: 9, scope: !13751)
!13754 = !DILocation(line: 4977, column: 9, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13751, file: !1245, line: 4977, column: 9)
!13756 = !DILocation(line: 4979, column: 11, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13751, file: !1245, line: 4979, column: 9)
!13758 = !DILocation(line: 4979, column: 9, scope: !13751)
!13759 = !DILocation(line: 4979, column: 9, scope: !13757)
!13760 = !DILocation(line: 4979, column: 32, scope: !13757)
!13761 = !DILocation(line: 4979, column: 24, scope: !13757)
!13762 = !DILocation(line: 4979, column: 20, scope: !13757)
!13763 = !DILocation(line: 0, scope: !13751)
!13764 = !DILocation(line: 4985, column: 11, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13751, file: !1245, line: 4985, column: 9)
!13766 = !DILocation(line: 4985, column: 16, scope: !13765)
!13767 = !DILocation(line: 4985, column: 9, scope: !13765)
!13768 = !DILocation(line: 4985, column: 19, scope: !13765)
!13769 = !DILocation(line: 4985, column: 38, scope: !13765)
!13770 = !DILocation(line: 4989, column: 18, scope: !13751)
!13771 = !DILocation(line: 4989, column: 5, scope: !13751)
!13772 = !DILocation(line: 4989, column: 16, scope: !13751)
!13773 = !DILocation(line: 4990, column: 15, scope: !13746)
!13774 = !DILocation(line: 4990, column: 4, scope: !13751)
!13775 = distinct !{!13775, !13748, !13776}
!13776 = !DILocation(line: 4990, column: 21, scope: !13746)
!13777 = !DILocation(line: 4991, column: 13, scope: !13746)
!13778 = !DILocation(line: 4991, column: 4, scope: !13746)
!13779 = !DILocation(line: 4991, column: 26, scope: !13746)
!13780 = !DILocation(line: 4991, column: 19, scope: !13746)
!13781 = !DILocation(line: 4991, column: 30, scope: !13746)
!13782 = distinct !{!13782, !13778, !13783}
!13783 = !DILocation(line: 4991, column: 32, scope: !13746)
!13784 = !DILocation(line: 4992, column: 8, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13746, file: !1245, line: 4992, column: 8)
!13786 = !DILocation(line: 4992, column: 17, scope: !13785)
!13787 = !DILocation(line: 4992, column: 8, scope: !13746)
!13788 = !DILocation(line: 4997, column: 9, scope: !1296)
!13789 = !DILocation(line: 4997, column: 16, scope: !1296)
!13790 = !DILocation(line: 4998, column: 8, scope: !1296)
!13791 = !DILocation(line: 4999, column: 10, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !1296, file: !1245, line: 4999, column: 6)
!13793 = !DILocation(line: 4999, column: 6, scope: !1296)
!13794 = !DILocation(line: 5000, column: 9, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13792, file: !1245, line: 4999, column: 20)
!13796 = !DILocation(line: 5001, column: 7, scope: !13795)
!13797 = !DILocation(line: 0, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13799, file: !1245, line: 5006, column: 9)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !1245, line: 5005, column: 11)
!13800 = distinct !DILexicalBlock(scope: !13801, file: !1245, line: 5002, column: 8)
!13801 = distinct !DILexicalBlock(scope: !13802, file: !1245, line: 5001, column: 21)
!13802 = distinct !DILexicalBlock(scope: !13795, file: !1245, line: 5001, column: 7)
!13803 = !DILocation(line: 5006, column: 9, scope: !13799)
!13804 = !DILocation(line: 5007, column: 6, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13798, file: !1245, line: 5006, column: 15)
!13806 = !DILocation(line: 5008, column: 5, scope: !13805)
!13807 = !DILocation(line: 5009, column: 23, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13798, file: !1245, line: 5008, column: 12)
!13809 = !DILocation(line: 5017, column: 9, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13811, file: !1245, line: 5015, column: 27)
!13811 = distinct !DILexicalBlock(scope: !13812, file: !1245, line: 5015, column: 8)
!13812 = distinct !DILexicalBlock(scope: !13802, file: !1245, line: 5014, column: 10)
!13813 = !DILocation(line: 5018, column: 12, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13815, file: !1245, line: 5017, column: 15)
!13815 = distinct !DILexicalBlock(scope: !13810, file: !1245, line: 5017, column: 9)
!13816 = !DILocation(line: 5019, column: 14, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13814, file: !1245, line: 5019, column: 10)
!13818 = !DILocation(line: 5019, column: 10, scope: !13814)
!13819 = !DILocation(line: 5020, column: 18, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13817, file: !1245, line: 5019, column: 24)
!13821 = !DILocation(line: 5020, column: 7, scope: !13820)
!13822 = !DILocation(line: 5026, column: 8, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !1245, line: 5025, column: 14)
!13824 = distinct !DILexicalBlock(scope: !13820, file: !1245, line: 5021, column: 11)
!13825 = !DILocation(line: 5026, column: 25, scope: !13823)
!13826 = !DILocation(line: 5027, column: 8, scope: !13823)
!13827 = !DILocation(line: 5031, column: 6, scope: !13820)
!13828 = !DILocation(line: 0, scope: !13802)
!13829 = !DILocation(line: 5038, column: 1, scope: !1296)
!13830 = distinct !DISubprogram(name: "f_expand", scope: !1245, file: !1245, line: 5050, type: !13831, scopeLine: 5055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !13833)
!13831 = !DISubroutineType(types: !13832)
!13832 = !{!1284, !10414, !1291, !1283}
!13833 = !{!13834, !13835, !13836, !13837, !13838, !13839, !13840, !13841, !13842, !13843, !13844, !13845}
!13834 = !DILocalVariable(name: "fp", arg: 1, scope: !13830, file: !1245, line: 5051, type: !10414)
!13835 = !DILocalVariable(name: "fsz", arg: 2, scope: !13830, file: !1245, line: 5052, type: !1291)
!13836 = !DILocalVariable(name: "opt", arg: 3, scope: !13830, file: !1245, line: 5053, type: !1283)
!13837 = !DILocalVariable(name: "res", scope: !13830, file: !1245, line: 5056, type: !1284)
!13838 = !DILocalVariable(name: "fs", scope: !13830, file: !1245, line: 5057, type: !1311)
!13839 = !DILocalVariable(name: "n", scope: !13830, file: !1245, line: 5058, type: !1279)
!13840 = !DILocalVariable(name: "clst", scope: !13830, file: !1245, line: 5058, type: !1279)
!13841 = !DILocalVariable(name: "stcl", scope: !13830, file: !1245, line: 5058, type: !1279)
!13842 = !DILocalVariable(name: "scl", scope: !13830, file: !1245, line: 5058, type: !1279)
!13843 = !DILocalVariable(name: "ncl", scope: !13830, file: !1245, line: 5058, type: !1279)
!13844 = !DILocalVariable(name: "tcl", scope: !13830, file: !1245, line: 5058, type: !1279)
!13845 = !DILocalVariable(name: "lclst", scope: !13830, file: !1245, line: 5058, type: !1279)
!13846 = !DILocation(line: 0, scope: !13830)
!13847 = !DILocation(line: 5057, column: 2, scope: !13830)
!13848 = !DILocation(line: 5061, column: 22, scope: !13830)
!13849 = !DILocation(line: 5061, column: 8, scope: !13830)
!13850 = !DILocation(line: 5062, column: 10, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13830, file: !1245, line: 5062, column: 6)
!13852 = !DILocation(line: 5062, column: 19, scope: !13851)
!13853 = !DILocation(line: 5062, column: 42, scope: !13851)
!13854 = !DILocation(line: 5062, column: 29, scope: !13851)
!13855 = !DILocation(line: 5062, column: 47, scope: !13851)
!13856 = !DILocation(line: 5062, column: 6, scope: !13830)
!13857 = !DILocation(line: 5063, column: 10, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13830, file: !1245, line: 5063, column: 6)
!13859 = !DILocation(line: 5063, column: 15, scope: !13858)
!13860 = !DILocation(line: 5063, column: 26, scope: !13858)
!13861 = !DILocation(line: 5063, column: 34, scope: !13858)
!13862 = !DILocation(line: 5063, column: 39, scope: !13858)
!13863 = !DILocation(line: 5063, column: 48, scope: !13858)
!13864 = !DILocation(line: 5063, column: 53, scope: !13858)
!13865 = !DILocation(line: 5063, column: 6, scope: !13830)
!13866 = !DILocation(line: 5067, column: 13, scope: !13830)
!13867 = !DILocation(line: 5067, column: 17, scope: !13830)
!13868 = !DILocation(line: 5067, column: 6, scope: !13830)
!13869 = !DILocation(line: 5067, column: 23, scope: !13830)
!13870 = !DILocation(line: 5068, column: 20, scope: !13830)
!13871 = !DILocation(line: 5068, column: 38, scope: !13830)
!13872 = !DILocation(line: 5068, column: 33, scope: !13830)
!13873 = !DILocation(line: 5068, column: 28, scope: !13830)
!13874 = !DILocation(line: 5068, column: 25, scope: !13830)
!13875 = !DILocation(line: 5069, column: 13, scope: !13830)
!13876 = !DILocation(line: 5070, column: 11, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13830, file: !1245, line: 5070, column: 6)
!13878 = !DILocation(line: 5070, column: 15, scope: !13877)
!13879 = !DILocation(line: 5070, column: 30, scope: !13877)
!13880 = !DILocation(line: 5070, column: 23, scope: !13877)
!13881 = !DILocation(line: 5070, column: 6, scope: !13830)
!13882 = !DILocation(line: 5070, column: 40, scope: !13877)
!13883 = !DILocation(line: 5089, column: 3, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13830, file: !1245, line: 5087, column: 2)
!13885 = !DILocation(line: 0, scope: !13884)
!13886 = !DILocation(line: 5088, column: 7, scope: !13884)
!13887 = !DILocation(line: 5090, column: 8, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13889, file: !1245, line: 5089, column: 12)
!13889 = distinct !DILexicalBlock(scope: !13890, file: !1245, line: 5089, column: 3)
!13890 = distinct !DILexicalBlock(scope: !13884, file: !1245, line: 5089, column: 3)
!13891 = !DILocation(line: 5091, column: 8, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13888, file: !1245, line: 5091, column: 8)
!13893 = !DILocation(line: 5091, column: 22, scope: !13892)
!13894 = !DILocation(line: 5091, column: 15, scope: !13892)
!13895 = !DILocation(line: 5091, column: 8, scope: !13888)
!13896 = !DILocation(line: 5092, column: 8, scope: !13888)
!13897 = !DILocation(line: 5095, column: 9, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13899, file: !1245, line: 5095, column: 9)
!13899 = distinct !DILexicalBlock(scope: !13900, file: !1245, line: 5094, column: 16)
!13900 = distinct !DILexicalBlock(scope: !13888, file: !1245, line: 5094, column: 8)
!13901 = !DILocation(line: 5095, column: 15, scope: !13898)
!13902 = !DILocation(line: 5095, column: 9, scope: !13899)
!13903 = !DILocation(line: 0, scope: !13900)
!13904 = !DILocation(line: 5099, column: 13, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13888, file: !1245, line: 5099, column: 8)
!13906 = !DILocation(line: 5099, column: 8, scope: !13888)
!13907 = distinct !{!13907, !13908, !13909}
!13908 = !DILocation(line: 5089, column: 3, scope: !13890)
!13909 = !DILocation(line: 5100, column: 3, scope: !13890)
!13910 = !DILocation(line: 5102, column: 8, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !1245, line: 5102, column: 8)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !1245, line: 5101, column: 21)
!13913 = distinct !DILexicalBlock(scope: !13884, file: !1245, line: 5101, column: 7)
!13914 = !DILocation(line: 5102, column: 8, scope: !13912)
!13915 = !DILocation(line: 5103, column: 5, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13917, file: !1245, line: 5103, column: 5)
!13917 = distinct !DILexicalBlock(scope: !13911, file: !1245, line: 5102, column: 13)
!13918 = distinct !{!13918, !13915, !13919}
!13919 = !DILocation(line: 5107, column: 5, scope: !13916)
!13920 = !DILocation(line: 5104, column: 33, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13922, file: !1245, line: 5103, column: 47)
!13922 = distinct !DILexicalBlock(scope: !13916, file: !1245, line: 5103, column: 5)
!13923 = !DILocation(line: 5104, column: 30, scope: !13921)
!13924 = !DILocation(line: 5104, column: 12, scope: !13921)
!13925 = !DILocation(line: 5105, column: 14, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13921, file: !1245, line: 5105, column: 10)
!13927 = !DILocation(line: 5103, column: 43, scope: !13922)
!13928 = !DILocation(line: 5105, column: 10, scope: !13921)
!13929 = !DILocation(line: 5109, column: 17, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13911, file: !1245, line: 5108, column: 11)
!13931 = !DILocation(line: 5115, column: 17, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13933, file: !1245, line: 5114, column: 20)
!13933 = distinct !DILexicalBlock(scope: !13830, file: !1245, line: 5114, column: 6)
!13934 = !DILocation(line: 5116, column: 7, scope: !13932)
!13935 = !DILocation(line: 5117, column: 12, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13937, file: !1245, line: 5116, column: 12)
!13937 = distinct !DILexicalBlock(scope: !13932, file: !1245, line: 5116, column: 7)
!13938 = !DILocation(line: 5117, column: 19, scope: !13936)
!13939 = !DILocation(line: 5118, column: 20, scope: !13936)
!13940 = !DILocation(line: 5120, column: 13, scope: !13936)
!13941 = !DILocation(line: 5121, column: 12, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13936, file: !1245, line: 5121, column: 8)
!13943 = !DILocation(line: 5121, column: 29, scope: !13942)
!13944 = !DILocation(line: 5121, column: 38, scope: !13942)
!13945 = !DILocation(line: 5121, column: 23, scope: !13942)
!13946 = !DILocation(line: 5121, column: 8, scope: !13936)
!13947 = !DILocation(line: 5122, column: 19, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13942, file: !1245, line: 5121, column: 43)
!13949 = !DILocation(line: 5123, column: 9, scope: !13948)
!13950 = !DILocation(line: 5123, column: 18, scope: !13948)
!13951 = !DILocation(line: 5124, column: 4, scope: !13948)
!13952 = !DILocation(line: 5129, column: 1, scope: !13830)
!13953 = !DILocation(line: 0, scope: !1360)
!13954 = !DILocation(line: 5225, column: 2, scope: !1360)
!13955 = !DILocation(line: 5227, column: 2, scope: !1360)
!13956 = !DILocation(line: 5237, column: 8, scope: !1360)
!13957 = !DILocation(line: 5238, column: 10, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5238, column: 6)
!13959 = !DILocation(line: 5238, column: 6, scope: !1360)
!13960 = !DILocation(line: 5239, column: 6, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5239, column: 6)
!13962 = !DILocation(line: 5239, column: 6, scope: !1360)
!13963 = !DILocation(line: 5239, column: 30, scope: !13961)
!13964 = !DILocation(line: 5239, column: 38, scope: !13961)
!13965 = !DILocation(line: 5239, column: 18, scope: !13961)
!13966 = !DILocation(line: 5240, column: 9, scope: !1360)
!13967 = !DILocation(line: 5244, column: 9, scope: !1360)
!13968 = !DILocation(line: 5245, column: 6, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5245, column: 6)
!13970 = !DILocation(line: 5245, column: 11, scope: !13969)
!13971 = !DILocation(line: 5245, column: 6, scope: !1360)
!13972 = !DILocation(line: 5246, column: 11, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5246, column: 6)
!13974 = !DILocation(line: 5246, column: 6, scope: !1360)
!13975 = !DILocation(line: 5247, column: 6, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5247, column: 6)
!13977 = !DILocation(line: 5247, column: 48, scope: !13976)
!13978 = !DILocation(line: 5247, column: 58, scope: !13976)
!13979 = !{i32 0, i32 33}
!13980 = !DILocation(line: 5247, column: 122, scope: !13976)
!13981 = !DILocation(line: 5247, column: 115, scope: !13976)
!13982 = !DILocation(line: 5254, column: 10, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5254, column: 6)
!13984 = !DILocation(line: 5254, column: 15, scope: !13983)
!13985 = !DILocation(line: 5254, column: 27, scope: !13983)
!13986 = !DILocation(line: 5255, column: 5, scope: !1360)
!13987 = !DILocation(line: 5259, column: 15, scope: !1360)
!13988 = !DILocation(line: 5260, column: 19, scope: !1360)
!13989 = !DILocation(line: 5261, column: 7, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5261, column: 6)
!13991 = !DILocation(line: 5261, column: 6, scope: !1360)
!13992 = !DILocation(line: 5274, column: 7, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13994, file: !1245, line: 5274, column: 7)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !1245, line: 5272, column: 9)
!13995 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5264, column: 6)
!13996 = !DILocation(line: 5274, column: 51, scope: !13993)
!13997 = !DILocation(line: 5274, column: 7, scope: !13994)
!13998 = !DILocation(line: 5275, column: 12, scope: !13994)
!13999 = !DILocation(line: 5275, column: 16, scope: !13994)
!14000 = !DILocation(line: 5275, column: 11, scope: !13994)
!14001 = !DILocation(line: 5276, column: 7, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13994, file: !1245, line: 5276, column: 7)
!14003 = !DILocation(line: 5276, column: 14, scope: !14002)
!14004 = !DILocation(line: 5276, column: 7, scope: !13994)
!14005 = !DILocation(line: 5277, column: 10, scope: !13994)
!14006 = !DILocation(line: 5279, column: 13, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5279, column: 6)
!14008 = !DILocation(line: 5279, column: 6, scope: !1360)
!14009 = !DILocation(line: 5288, column: 10, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14011, file: !1245, line: 5288, column: 7)
!14011 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5282, column: 5)
!14012 = !DILocation(line: 5288, column: 7, scope: !14011)
!14013 = !DILocation(line: 5289, column: 11, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14011, file: !1245, line: 5289, column: 7)
!14015 = !DILocation(line: 5289, column: 7, scope: !14011)
!14016 = !DILocation(line: 5290, column: 13, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14018, file: !1245, line: 5290, column: 8)
!14018 = distinct !DILexicalBlock(scope: !14014, file: !1245, line: 5289, column: 23)
!14019 = !DILocation(line: 5290, column: 23, scope: !14017)
!14020 = !DILocation(line: 5290, column: 35, scope: !14017)
!14021 = !DILocation(line: 5294, column: 13, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14011, file: !1245, line: 5294, column: 7)
!14023 = !DILocation(line: 5294, column: 7, scope: !14011)
!14024 = !DILocation(line: 0, scope: !14011)
!14025 = !DILocation(line: 5461, column: 3, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5460, column: 2)
!14027 = !DILocation(line: 5291, column: 9, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14017, file: !1245, line: 5290, column: 55)
!14029 = !DILocation(line: 5464, column: 12, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14031, file: !1245, line: 5464, column: 8)
!14031 = distinct !DILexicalBlock(scope: !14026, file: !1245, line: 5461, column: 6)
!14032 = !DILocation(line: 0, scope: !14030)
!14033 = !DILocation(line: 5464, column: 8, scope: !14031)
!14034 = !DILocation(line: 5465, column: 9, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14030, file: !1245, line: 5464, column: 25)
!14036 = !DILocation(line: 5467, column: 27, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !1245, line: 5467, column: 6)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !1245, line: 5467, column: 6)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !1245, line: 5465, column: 15)
!14040 = distinct !DILexicalBlock(scope: !14035, file: !1245, line: 5465, column: 9)
!14041 = !DILocation(line: 5467, column: 48, scope: !14037)
!14042 = !DILocation(line: 5467, column: 6, scope: !14038)
!14043 = !DILocation(line: 5467, column: 55, scope: !14037)
!14044 = !DILocation(line: 5467, column: 63, scope: !14037)
!14045 = !DILocation(line: 5467, column: 36, scope: !14037)
!14046 = distinct !{!14046, !14042, !14047}
!14047 = !DILocation(line: 5467, column: 70, scope: !14038)
!14048 = !DILocation(line: 0, scope: !14031)
!14049 = !DILocation(line: 5469, column: 21, scope: !14035)
!14050 = !DILocation(line: 5470, column: 22, scope: !14035)
!14051 = !DILocation(line: 5470, column: 35, scope: !14035)
!14052 = !DILocation(line: 5473, column: 29, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14035, file: !1245, line: 5473, column: 9)
!14054 = !DILocation(line: 5475, column: 9, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14030, file: !1245, line: 5474, column: 11)
!14056 = !DILocation(line: 5477, column: 27, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14058, file: !1245, line: 5477, column: 6)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !1245, line: 5477, column: 6)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !1245, line: 5475, column: 15)
!14060 = distinct !DILexicalBlock(scope: !14055, file: !1245, line: 5475, column: 9)
!14061 = !DILocation(line: 5477, column: 44, scope: !14057)
!14062 = !DILocation(line: 5477, column: 6, scope: !14058)
!14063 = !DILocation(line: 5477, column: 51, scope: !14057)
!14064 = !DILocation(line: 5477, column: 59, scope: !14057)
!14065 = !DILocation(line: 5477, column: 34, scope: !14057)
!14066 = distinct !{!14066, !14062, !14067}
!14067 = !DILocation(line: 5477, column: 66, scope: !14058)
!14068 = !DILocation(line: 5479, column: 21, scope: !14055)
!14069 = !DILocation(line: 5480, column: 16, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14055, file: !1245, line: 5480, column: 9)
!14071 = !DILocation(line: 5480, column: 9, scope: !14055)
!14072 = !DILocation(line: 5486, column: 22, scope: !14055)
!14073 = !DILocation(line: 5462, column: 8, scope: !14031)
!14074 = !DILocation(line: 5490, column: 18, scope: !14031)
!14075 = !DILocation(line: 5491, column: 19, scope: !14031)
!14076 = !DILocation(line: 5491, column: 37, scope: !14031)
!14077 = !DILocation(line: 5494, column: 26, scope: !14031)
!14078 = !DILocation(line: 5494, column: 31, scope: !14031)
!14079 = !DILocation(line: 5494, column: 48, scope: !14031)
!14080 = !DILocation(line: 5495, column: 12, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14031, file: !1245, line: 5495, column: 8)
!14082 = !DILocation(line: 5495, column: 8, scope: !14031)
!14083 = !DILocation(line: 5502, column: 30, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14031, file: !1245, line: 5502, column: 8)
!14085 = !DILocation(line: 5502, column: 24, scope: !14084)
!14086 = !DILocation(line: 5502, column: 35, scope: !14084)
!14087 = !DILocation(line: 5502, column: 15, scope: !14084)
!14088 = !DILocation(line: 5502, column: 8, scope: !14031)
!14089 = !DILocation(line: 5503, column: 48, scope: !14031)
!14090 = !DILocation(line: 5503, column: 58, scope: !14031)
!14091 = !DILocation(line: 5504, column: 8, scope: !14031)
!14092 = !DILocation(line: 5506, column: 11, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14094, file: !1245, line: 5506, column: 10)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !1245, line: 5505, column: 30)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !1245, line: 5505, column: 9)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !1245, line: 5504, column: 25)
!14097 = distinct !DILexicalBlock(scope: !14031, file: !1245, line: 5504, column: 8)
!14098 = !DILocation(line: 5506, column: 14, scope: !14093)
!14099 = !DILocation(line: 5510, column: 12, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14031, file: !1245, line: 5510, column: 8)
!14101 = !DILocation(line: 5510, column: 8, scope: !14031)
!14102 = !DILocation(line: 5511, column: 16, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14104, file: !1245, line: 5511, column: 9)
!14104 = distinct !DILexicalBlock(scope: !14100, file: !1245, line: 5510, column: 25)
!14105 = !DILocation(line: 5511, column: 9, scope: !14104)
!14106 = !DILocation(line: 5512, column: 11, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14108, file: !1245, line: 5512, column: 10)
!14108 = distinct !DILexicalBlock(scope: !14103, file: !1245, line: 5511, column: 29)
!14109 = !DILocation(line: 5512, column: 14, scope: !14107)
!14110 = distinct !{!14110, !14025, !14111}
!14111 = !DILocation(line: 5530, column: 13, scope: !14026)
!14112 = !DILocation(line: 5518, column: 14, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14108, file: !1245, line: 5518, column: 10)
!14114 = !DILocation(line: 5521, column: 17, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14104, file: !1245, line: 5521, column: 10)
!14116 = !DILocation(line: 5521, column: 10, scope: !14104)
!14117 = !DILocation(line: 5522, column: 11, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !1245, line: 5522, column: 10)
!14119 = distinct !DILexicalBlock(scope: !14115, file: !1245, line: 5521, column: 31)
!14120 = !DILocation(line: 5522, column: 14, scope: !14118)
!14121 = !DILocation(line: 5526, column: 12, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14031, file: !1245, line: 5526, column: 8)
!14123 = !DILocation(line: 5526, column: 24, scope: !14122)
!14124 = !DILocation(line: 5537, column: 3, scope: !14026)
!14125 = !DILocation(line: 5538, column: 3, scope: !14026)
!14126 = !DILocation(line: 5539, column: 15, scope: !14026)
!14127 = !DILocation(line: 5539, column: 3, scope: !14026)
!14128 = !DILocation(line: 5540, column: 25, scope: !14026)
!14129 = !DILocation(line: 5540, column: 3, scope: !14026)
!14130 = !DILocation(line: 5540, column: 23, scope: !14026)
!14131 = !DILocation(line: 5541, column: 15, scope: !14026)
!14132 = !DILocation(line: 5541, column: 33, scope: !14026)
!14133 = !DILocation(line: 5541, column: 3, scope: !14026)
!14134 = !DILocation(line: 5542, column: 3, scope: !14026)
!14135 = !DILocation(line: 5542, column: 20, scope: !14026)
!14136 = !DILocation(line: 5543, column: 15, scope: !14026)
!14137 = !DILocation(line: 5543, column: 33, scope: !14026)
!14138 = !DILocation(line: 5543, column: 3, scope: !14026)
!14139 = !DILocation(line: 5544, column: 7, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14026, file: !1245, line: 5544, column: 7)
!14141 = !DILocation(line: 5544, column: 14, scope: !14140)
!14142 = !DILocation(line: 5544, column: 7, scope: !14026)
!14143 = !DILocation(line: 5545, column: 16, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14140, file: !1245, line: 5544, column: 25)
!14145 = !DILocation(line: 5545, column: 32, scope: !14144)
!14146 = !DILocation(line: 5545, column: 4, scope: !14144)
!14147 = !DILocation(line: 5546, column: 3, scope: !14144)
!14148 = !DILocation(line: 5547, column: 17, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14140, file: !1245, line: 5546, column: 10)
!14150 = !DILocation(line: 5547, column: 4, scope: !14149)
!14151 = !DILocation(line: 5549, column: 3, scope: !14026)
!14152 = !DILocation(line: 5549, column: 18, scope: !14026)
!14153 = !DILocation(line: 5550, column: 15, scope: !14026)
!14154 = !DILocation(line: 5550, column: 3, scope: !14026)
!14155 = !DILocation(line: 5551, column: 15, scope: !14026)
!14156 = !DILocation(line: 5551, column: 3, scope: !14026)
!14157 = !DILocation(line: 5552, column: 16, scope: !14026)
!14158 = !DILocation(line: 5552, column: 3, scope: !14026)
!14159 = !DILocation(line: 5553, column: 7, scope: !14026)
!14160 = !DILocation(line: 5554, column: 17, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14162, file: !1245, line: 5553, column: 24)
!14162 = distinct !DILexicalBlock(scope: !14026, file: !1245, line: 5553, column: 7)
!14163 = !DILocation(line: 5554, column: 4, scope: !14161)
!14164 = !DILocation(line: 5555, column: 17, scope: !14161)
!14165 = !DILocation(line: 5555, column: 4, scope: !14161)
!14166 = !DILocation(line: 5556, column: 17, scope: !14161)
!14167 = !DILocation(line: 5556, column: 4, scope: !14161)
!14168 = !DILocation(line: 5557, column: 16, scope: !14161)
!14169 = !DILocation(line: 5557, column: 4, scope: !14161)
!14170 = !DILocation(line: 5558, column: 16, scope: !14161)
!14171 = !DILocation(line: 5558, column: 4, scope: !14161)
!14172 = !DILocation(line: 5562, column: 3, scope: !14161)
!14173 = !DILocation(line: 5563, column: 17, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14162, file: !1245, line: 5562, column: 10)
!14175 = !DILocation(line: 5563, column: 4, scope: !14174)
!14176 = !DILocation(line: 5564, column: 16, scope: !14174)
!14177 = !DILocation(line: 5564, column: 31, scope: !14174)
!14178 = !DILocation(line: 5564, column: 4, scope: !14174)
!14179 = !DILocation(line: 0, scope: !14162)
!14180 = !DILocation(line: 5569, column: 15, scope: !14026)
!14181 = !DILocation(line: 5569, column: 3, scope: !14026)
!14182 = !DILocation(line: 5570, column: 7, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14026, file: !1245, line: 5570, column: 7)
!14184 = !DILocation(line: 5570, column: 39, scope: !14183)
!14185 = !DILocation(line: 5570, column: 7, scope: !14026)
!14186 = !DILocation(line: 5573, column: 7, scope: !14026)
!14187 = !DILocation(line: 5574, column: 32, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14189, file: !1245, line: 5573, column: 24)
!14189 = distinct !DILexicalBlock(scope: !14026, file: !1245, line: 5573, column: 7)
!14190 = !DILocation(line: 5574, column: 4, scope: !14188)
!14191 = !DILocation(line: 5575, column: 4, scope: !14188)
!14192 = !DILocation(line: 5576, column: 4, scope: !14188)
!14193 = !DILocation(line: 5577, column: 17, scope: !14188)
!14194 = !DILocation(line: 5577, column: 4, scope: !14188)
!14195 = !DILocation(line: 5578, column: 17, scope: !14188)
!14196 = !DILocation(line: 5578, column: 42, scope: !14188)
!14197 = !DILocation(line: 5578, column: 4, scope: !14188)
!14198 = !DILocation(line: 5579, column: 17, scope: !14188)
!14199 = !DILocation(line: 5579, column: 4, scope: !14188)
!14200 = !DILocation(line: 5580, column: 4, scope: !14188)
!14201 = !DILocation(line: 5581, column: 32, scope: !14188)
!14202 = !DILocation(line: 5581, column: 4, scope: !14188)
!14203 = !DILocation(line: 5582, column: 32, scope: !14188)
!14204 = !DILocation(line: 5582, column: 4, scope: !14188)
!14205 = !DILocation(line: 5586, column: 3, scope: !14026)
!14206 = !DILocation(line: 5590, column: 5, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14208, file: !1245, line: 5589, column: 25)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !1245, line: 5589, column: 8)
!14209 = distinct !DILexicalBlock(scope: !14210, file: !1245, line: 5588, column: 32)
!14210 = distinct !DILexicalBlock(scope: !14211, file: !1245, line: 5588, column: 3)
!14211 = distinct !DILexicalBlock(scope: !14026, file: !1245, line: 5588, column: 3)
!14212 = !DILocation(line: 5591, column: 5, scope: !14207)
!14213 = !DILocation(line: 5592, column: 5, scope: !14207)
!14214 = !DILocation(line: 5593, column: 4, scope: !14207)
!14215 = !DILocation(line: 5594, column: 5, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14208, file: !1245, line: 5593, column: 11)
!14217 = !DILocation(line: 5599, column: 9, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14209, file: !1245, line: 5597, column: 7)
!14219 = !DILocation(line: 0, scope: !14026)
!14220 = !DILocation(line: 0, scope: !14209)
!14221 = !DILocation(line: 5598, column: 16, scope: !14218)
!14222 = !DILocation(line: 5598, column: 9, scope: !14218)
!14223 = !DILocation(line: 5599, column: 9, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14218, file: !1245, line: 5599, column: 9)
!14225 = !DILocation(line: 5599, column: 46, scope: !14224)
!14226 = !DILocation(line: 5600, column: 5, scope: !14218)
!14227 = !DILocation(line: 5601, column: 10, scope: !14218)
!14228 = !DILocation(line: 5601, column: 22, scope: !14218)
!14229 = !DILocation(line: 5602, column: 4, scope: !14218)
!14230 = !DILocation(line: 5606, column: 11, scope: !14026)
!14231 = !DILocation(line: 5607, column: 3, scope: !14026)
!14232 = !DILocation(line: 5608, column: 15, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14026, file: !1245, line: 5607, column: 6)
!14234 = !DILocation(line: 5608, column: 8, scope: !14233)
!14235 = !DILocation(line: 5609, column: 8, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14233, file: !1245, line: 5609, column: 8)
!14237 = !DILocation(line: 5609, column: 45, scope: !14236)
!14238 = !DILocation(line: 5609, column: 8, scope: !14233)
!14239 = !DILocation(line: 5610, column: 9, scope: !14233)
!14240 = !DILocation(line: 5610, column: 21, scope: !14233)
!14241 = !DILocation(line: 5611, column: 3, scope: !14233)
!14242 = distinct !{!14242, !14231, !14243}
!14243 = !DILocation(line: 5611, column: 17, scope: !14026)
!14244 = !DILocation(line: 5635, column: 7, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14246, file: !1245, line: 5634, column: 9)
!14246 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5629, column: 6)
!14247 = !DILocation(line: 5618, column: 7, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14249, file: !1245, line: 5617, column: 9)
!14249 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5615, column: 6)
!14250 = !DILocation(line: 5637, column: 4, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !1245, line: 5635, column: 24)
!14252 = distinct !DILexicalBlock(scope: !14245, file: !1245, line: 5635, column: 7)
!14253 = !DILocation(line: 5638, column: 4, scope: !14251)
!14254 = !DILocation(line: 5639, column: 14, scope: !14251)
!14255 = !DILocation(line: 5640, column: 18, scope: !14251)
!14256 = !DILocation(line: 5641, column: 4, scope: !14251)
!14257 = !DILocation(line: 5641, column: 20, scope: !14251)
!14258 = !DILocation(line: 5642, column: 4, scope: !14251)
!14259 = !DILocation(line: 5642, column: 19, scope: !14251)
!14260 = !DILocation(line: 5643, column: 4, scope: !14251)
!14261 = !DILocation(line: 5643, column: 19, scope: !14251)
!14262 = !DILocation(line: 5644, column: 4, scope: !14251)
!14263 = !DILocation(line: 5644, column: 20, scope: !14251)
!14264 = !DILocation(line: 5645, column: 17, scope: !14251)
!14265 = !DILocation(line: 5645, column: 15, scope: !14251)
!14266 = !DILocation(line: 5645, column: 25, scope: !14251)
!14267 = !DILocation(line: 5646, column: 4, scope: !14251)
!14268 = !DILocation(line: 5646, column: 20, scope: !14251)
!14269 = !DILocation(line: 5647, column: 30, scope: !14251)
!14270 = !DILocation(line: 5647, column: 21, scope: !14251)
!14271 = !DILocation(line: 5647, column: 4, scope: !14251)
!14272 = !DILocation(line: 5647, column: 19, scope: !14251)
!14273 = !DILocation(line: 5648, column: 21, scope: !14251)
!14274 = !DILocation(line: 5648, column: 4, scope: !14251)
!14275 = !DILocation(line: 5648, column: 19, scope: !14251)
!14276 = !DILocation(line: 5649, column: 17, scope: !14251)
!14277 = !DILocation(line: 5649, column: 4, scope: !14251)
!14278 = !DILocation(line: 5650, column: 17, scope: !14251)
!14279 = !DILocation(line: 5650, column: 31, scope: !14251)
!14280 = !DILocation(line: 5650, column: 4, scope: !14251)
!14281 = !DILocation(line: 5651, column: 8, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14251, file: !1245, line: 5651, column: 8)
!14283 = !DILocation(line: 5651, column: 36, scope: !14282)
!14284 = !DILocation(line: 5651, column: 8, scope: !14251)
!14285 = !DILocation(line: 5655, column: 6, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !1360, file: !1245, line: 5655, column: 6)
!14287 = !DILocation(line: 5655, column: 37, scope: !14286)
!14288 = !DILocation(line: 5658, column: 1, scope: !1360)
!14289 = distinct !DISubprogram(name: "f_gets", scope: !1245, file: !1245, line: 5739, type: !14290, scopeLine: 5744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !14292)
!14290 = !DISubroutineType(types: !14291)
!14291 = !{!12179, !12179, !7, !10414}
!14292 = !{!14293, !14294, !14295, !14296, !14297, !14298, !14299, !14301}
!14293 = !DILocalVariable(name: "buff", arg: 1, scope: !14289, file: !1245, line: 5740, type: !12179)
!14294 = !DILocalVariable(name: "len", arg: 2, scope: !14289, file: !1245, line: 5741, type: !7)
!14295 = !DILocalVariable(name: "fp", arg: 3, scope: !14289, file: !1245, line: 5742, type: !10414)
!14296 = !DILocalVariable(name: "n", scope: !14289, file: !1245, line: 5745, type: !7)
!14297 = !DILocalVariable(name: "c", scope: !14289, file: !1245, line: 5746, type: !1290)
!14298 = !DILocalVariable(name: "p", scope: !14289, file: !1245, line: 5746, type: !12179)
!14299 = !DILocalVariable(name: "s", scope: !14289, file: !1245, line: 5747, type: !14300)
!14300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 16, elements: !340)
!14301 = !DILocalVariable(name: "rc", scope: !14289, file: !1245, line: 5748, type: !1281)
!14302 = !DILocation(line: 0, scope: !14289)
!14303 = !DILocation(line: 5747, column: 2, scope: !14289)
!14304 = !DILocation(line: 5747, column: 7, scope: !14289)
!14305 = !DILocation(line: 5748, column: 2, scope: !14289)
!14306 = !DILocation(line: 5751, column: 2, scope: !14289)
!14307 = !DILocation(line: 5751, column: 11, scope: !14289)
!14308 = !DILocation(line: 5796, column: 3, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14289, file: !1245, line: 5751, column: 22)
!14310 = !DILocation(line: 5797, column: 7, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14309, file: !1245, line: 5797, column: 7)
!14312 = !DILocation(line: 5797, column: 10, scope: !14311)
!14313 = !DILocation(line: 5797, column: 7, scope: !14309)
!14314 = !DILocation(line: 5798, column: 7, scope: !14309)
!14315 = !DILocation(line: 5801, column: 5, scope: !14309)
!14316 = !DILocation(line: 5801, column: 8, scope: !14309)
!14317 = !DILocation(line: 5802, column: 4, scope: !14309)
!14318 = !DILocation(line: 5803, column: 9, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14309, file: !1245, line: 5803, column: 7)
!14320 = !DILocation(line: 5803, column: 7, scope: !14309)
!14321 = distinct !{!14321, !14306, !14322}
!14322 = !DILocation(line: 5804, column: 2, scope: !14289)
!14323 = !DILocation(line: 5805, column: 5, scope: !14289)
!14324 = !DILocation(line: 5806, column: 9, scope: !14289)
!14325 = !DILocation(line: 5807, column: 1, scope: !14289)
!14326 = !DILocation(line: 5806, column: 2, scope: !14289)
!14327 = distinct !DISubprogram(name: "f_putc", scope: !1245, file: !1245, line: 5907, type: !14328, scopeLine: 5911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !14330)
!14328 = !DISubroutineType(types: !14329)
!14329 = !{!7, !1290, !10414}
!14330 = !{!14331, !14332, !14333}
!14331 = !DILocalVariable(name: "c", arg: 1, scope: !14327, file: !1245, line: 5908, type: !1290)
!14332 = !DILocalVariable(name: "fp", arg: 2, scope: !14327, file: !1245, line: 5909, type: !10414)
!14333 = !DILocalVariable(name: "pb", scope: !14327, file: !1245, line: 5912, type: !14334)
!14334 = !DIDerivedType(tag: DW_TAG_typedef, name: "putbuff", file: !1245, line: 5822, baseType: !14335)
!14335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1245, line: 5818, size: 608, elements: !14336)
!14336 = !{!14337, !14338, !14339, !14340}
!14337 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !14335, file: !1245, line: 5819, baseType: !10414, size: 32)
!14338 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !14335, file: !1245, line: 5820, baseType: !7, size: 32, offset: 32)
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "nchr", scope: !14335, file: !1245, line: 5820, baseType: !7, size: 32, offset: 64)
!14340 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !14335, file: !1245, line: 5821, baseType: !14341, size: 512, offset: 96)
!14341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 512, elements: !14342)
!14342 = !{!14343}
!14343 = !DISubrange(count: 64)
!14344 = !DILocation(line: 0, scope: !14327)
!14345 = !DILocation(line: 5912, column: 2, scope: !14327)
!14346 = !DILocation(line: 5912, column: 10, scope: !14327)
!14347 = !DILocation(line: 5915, column: 2, scope: !14327)
!14348 = !DILocation(line: 5916, column: 2, scope: !14327)
!14349 = !DILocation(line: 5917, column: 9, scope: !14327)
!14350 = !DILocation(line: 5918, column: 1, scope: !14327)
!14351 = !DILocation(line: 5917, column: 2, scope: !14327)
!14352 = distinct !DISubprogram(name: "putc_init", scope: !1245, file: !1245, line: 5896, type: !14353, scopeLine: 5900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !14356)
!14353 = !DISubroutineType(types: !14354)
!14354 = !{null, !14355, !10414}
!14355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14334, size: 32)
!14356 = !{!14357, !14358}
!14357 = !DILocalVariable(name: "pb", arg: 1, scope: !14352, file: !1245, line: 5897, type: !14355)
!14358 = !DILocalVariable(name: "fp", arg: 2, scope: !14352, file: !1245, line: 5898, type: !10414)
!14359 = !DILocation(line: 0, scope: !14352)
!14360 = !DILocation(line: 5901, column: 6, scope: !14352)
!14361 = !DILocation(line: 5901, column: 9, scope: !14352)
!14362 = !DILocation(line: 5902, column: 17, scope: !14352)
!14363 = !DILocation(line: 5902, column: 21, scope: !14352)
!14364 = !DILocation(line: 5902, column: 6, scope: !14352)
!14365 = !DILocation(line: 5902, column: 11, scope: !14352)
!14366 = !DILocation(line: 5903, column: 1, scope: !14352)
!14367 = distinct !DISubprogram(name: "putc_bfd", scope: !1245, file: !1245, line: 5826, type: !14368, scopeLine: 5830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !14370)
!14368 = !DISubroutineType(types: !14369)
!14369 = !{null, !14355, !1290}
!14370 = !{!14371, !14372, !14373, !14374}
!14371 = !DILocalVariable(name: "pb", arg: 1, scope: !14367, file: !1245, line: 5827, type: !14355)
!14372 = !DILocalVariable(name: "c", arg: 2, scope: !14367, file: !1245, line: 5828, type: !1290)
!14373 = !DILocalVariable(name: "bw", scope: !14367, file: !1245, line: 5831, type: !1281)
!14374 = !DILocalVariable(name: "i", scope: !14367, file: !1245, line: 5832, type: !7)
!14375 = !DILocation(line: 0, scope: !14367)
!14376 = !DILocation(line: 5831, column: 2, scope: !14367)
!14377 = !DILocation(line: 5839, column: 10, scope: !14367)
!14378 = !DILocation(line: 5840, column: 8, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14367, file: !1245, line: 5840, column: 6)
!14380 = !DILocation(line: 5840, column: 6, scope: !14367)
!14381 = !DILocation(line: 5869, column: 11, scope: !14367)
!14382 = !DILocation(line: 5869, column: 2, scope: !14367)
!14383 = !DILocation(line: 5869, column: 15, scope: !14367)
!14384 = !DILocation(line: 5872, column: 8, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14367, file: !1245, line: 5872, column: 6)
!14386 = !DILocation(line: 5872, column: 6, scope: !14367)
!14387 = !DILocation(line: 5873, column: 15, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14385, file: !1245, line: 5872, column: 38)
!14389 = !DILocation(line: 5873, column: 19, scope: !14388)
!14390 = !DILocation(line: 5873, column: 3, scope: !14388)
!14391 = !DILocation(line: 5874, column: 8, scope: !14388)
!14392 = !DILocation(line: 5874, column: 11, scope: !14388)
!14393 = !DILocation(line: 5874, column: 7, scope: !14388)
!14394 = !DILocation(line: 5875, column: 2, scope: !14388)
!14395 = !DILocation(line: 5876, column: 10, scope: !14367)
!14396 = !DILocation(line: 5877, column: 6, scope: !14367)
!14397 = !DILocation(line: 5877, column: 10, scope: !14367)
!14398 = !DILocation(line: 5878, column: 1, scope: !14367)
!14399 = distinct !DISubprogram(name: "putc_flush", scope: !1245, file: !1245, line: 5882, type: !14400, scopeLine: 5885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !14402)
!14400 = !DISubroutineType(types: !14401)
!14401 = !{!7, !14355}
!14402 = !{!14403, !14404}
!14403 = !DILocalVariable(name: "pb", arg: 1, scope: !14399, file: !1245, line: 5883, type: !14355)
!14404 = !DILocalVariable(name: "nw", scope: !14399, file: !1245, line: 5886, type: !1281)
!14405 = !DILocation(line: 0, scope: !14399)
!14406 = !DILocation(line: 5886, column: 2, scope: !14399)
!14407 = !DILocation(line: 5888, column: 13, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14399, file: !1245, line: 5888, column: 9)
!14409 = !DILocation(line: 5888, column: 17, scope: !14408)
!14410 = !DILocation(line: 5889, column: 3, scope: !14408)
!14411 = !DILocation(line: 5889, column: 18, scope: !14408)
!14412 = !DILocation(line: 5889, column: 22, scope: !14408)
!14413 = !DILocation(line: 5889, column: 6, scope: !14408)
!14414 = !DILocation(line: 5889, column: 51, scope: !14408)
!14415 = !DILocation(line: 5890, column: 3, scope: !14408)
!14416 = !DILocation(line: 5890, column: 16, scope: !14408)
!14417 = !DILocation(line: 5890, column: 23, scope: !14408)
!14418 = !DILocation(line: 5890, column: 20, scope: !14408)
!14419 = !DILocation(line: 5888, column: 9, scope: !14399)
!14420 = !DILocation(line: 5890, column: 38, scope: !14408)
!14421 = !DILocation(line: 5890, column: 27, scope: !14408)
!14422 = !DILocation(line: 5892, column: 1, scope: !14399)
!14423 = distinct !DISubprogram(name: "f_puts", scope: !1245, file: !1245, line: 5927, type: !14424, scopeLine: 5931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !14426)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{!7, !1288, !10414}
!14426 = !{!14427, !14428, !14429}
!14427 = !DILocalVariable(name: "str", arg: 1, scope: !14423, file: !1245, line: 5928, type: !1288)
!14428 = !DILocalVariable(name: "fp", arg: 2, scope: !14423, file: !1245, line: 5929, type: !10414)
!14429 = !DILocalVariable(name: "pb", scope: !14423, file: !1245, line: 5932, type: !14334)
!14430 = !DILocation(line: 0, scope: !14423)
!14431 = !DILocation(line: 5932, column: 2, scope: !14423)
!14432 = !DILocation(line: 5932, column: 10, scope: !14423)
!14433 = !DILocation(line: 5935, column: 2, scope: !14423)
!14434 = !DILocation(line: 5936, column: 9, scope: !14423)
!14435 = !DILocation(line: 5936, column: 2, scope: !14423)
!14436 = !DILocation(line: 5936, column: 33, scope: !14423)
!14437 = !DILocation(line: 5936, column: 15, scope: !14423)
!14438 = distinct !{!14438, !14435, !14439}
!14439 = !DILocation(line: 5936, column: 35, scope: !14423)
!14440 = !DILocation(line: 5937, column: 9, scope: !14423)
!14441 = !DILocation(line: 5938, column: 1, scope: !14423)
!14442 = !DILocation(line: 5937, column: 2, scope: !14423)
!14443 = distinct !DISubprogram(name: "f_printf", scope: !1245, file: !1245, line: 5947, type: !14444, scopeLine: 5952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !14446)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{!7, !10414, !1288, null}
!14446 = !{!14447, !14448, !14449, !14455, !14456, !14457, !14458, !14459, !14460, !14461, !14462, !14463, !14464, !14466}
!14447 = !DILocalVariable(name: "fp", arg: 1, scope: !14443, file: !1245, line: 5948, type: !10414)
!14448 = !DILocalVariable(name: "fmt", arg: 2, scope: !14443, file: !1245, line: 5949, type: !1288)
!14449 = !DILocalVariable(name: "arp", scope: !14443, file: !1245, line: 5953, type: !14450)
!14450 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7493, line: 14, baseType: !14451)
!14451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1245, baseType: !14452)
!14452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !14453)
!14453 = !{!14454}
!14454 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !14452, file: !1245, line: 5953, baseType: !51, size: 32)
!14455 = !DILocalVariable(name: "pb", scope: !14443, file: !1245, line: 5954, type: !14334)
!14456 = !DILocalVariable(name: "f", scope: !14443, file: !1245, line: 5955, type: !1283)
!14457 = !DILocalVariable(name: "r", scope: !14443, file: !1245, line: 5955, type: !1283)
!14458 = !DILocalVariable(name: "i", scope: !14443, file: !1245, line: 5956, type: !1281)
!14459 = !DILocalVariable(name: "j", scope: !14443, file: !1245, line: 5956, type: !1281)
!14460 = !DILocalVariable(name: "w", scope: !14443, file: !1245, line: 5956, type: !1281)
!14461 = !DILocalVariable(name: "v", scope: !14443, file: !1245, line: 5957, type: !1279)
!14462 = !DILocalVariable(name: "c", scope: !14443, file: !1245, line: 5958, type: !1290)
!14463 = !DILocalVariable(name: "d", scope: !14443, file: !1245, line: 5958, type: !1290)
!14464 = !DILocalVariable(name: "str", scope: !14443, file: !1245, line: 5958, type: !14465)
!14465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1290, size: 256, elements: !1727)
!14466 = !DILocalVariable(name: "p", scope: !14443, file: !1245, line: 5958, type: !12179)
!14467 = !DILocation(line: 0, scope: !14443)
!14468 = !DILocation(line: 5953, column: 2, scope: !14443)
!14469 = !DILocation(line: 5953, column: 10, scope: !14443)
!14470 = !DILocation(line: 5954, column: 2, scope: !14443)
!14471 = !DILocation(line: 5954, column: 10, scope: !14443)
!14472 = !DILocation(line: 5958, column: 2, scope: !14443)
!14473 = !DILocation(line: 5958, column: 14, scope: !14443)
!14474 = !DILocation(line: 5961, column: 2, scope: !14443)
!14475 = !DILocation(line: 5963, column: 2, scope: !14443)
!14476 = !DILocation(line: 5965, column: 2, scope: !14443)
!14477 = !DILocation(line: 5966, column: 11, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !1245, line: 5965, column: 11)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !1245, line: 5965, column: 2)
!14480 = distinct !DILexicalBlock(scope: !14443, file: !1245, line: 5965, column: 2)
!14481 = !DILocation(line: 5966, column: 7, scope: !14478)
!14482 = !DILocation(line: 5967, column: 7, scope: !14478)
!14483 = !DILocation(line: 0, scope: !14478)
!14484 = distinct !{!14484, !14485, !14486}
!14485 = !DILocation(line: 5965, column: 2, scope: !14480)
!14486 = !DILocation(line: 6033, column: 2, scope: !14480)
!14487 = !DILocation(line: 5973, column: 11, scope: !14478)
!14488 = !DILocation(line: 5973, column: 7, scope: !14478)
!14489 = !DILocation(line: 5974, column: 7, scope: !14478)
!14490 = !DILocation(line: 5979, column: 4, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14492, file: !1245, line: 5977, column: 18)
!14492 = distinct !DILexicalBlock(scope: !14493, file: !1245, line: 5977, column: 8)
!14493 = distinct !DILexicalBlock(scope: !14494, file: !1245, line: 5976, column: 10)
!14494 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 5974, column: 7)
!14495 = !DILocation(line: 0, scope: !14494)
!14496 = !DILocation(line: 5981, column: 10, scope: !14478)
!14497 = !DILocation(line: 5981, column: 3, scope: !14478)
!14498 = !DILocation(line: 5982, column: 10, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 5981, column: 22)
!14500 = !DILocation(line: 5982, column: 15, scope: !14499)
!14501 = !DILocation(line: 5982, column: 19, scope: !14499)
!14502 = !DILocation(line: 5983, column: 12, scope: !14499)
!14503 = !DILocation(line: 5983, column: 8, scope: !14499)
!14504 = distinct !{!14504, !14497, !14505}
!14505 = !DILocation(line: 5984, column: 3, scope: !14478)
!14506 = !DILocation(line: 5985, column: 16, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 5985, column: 7)
!14508 = !DILocation(line: 5986, column: 6, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !14507, file: !1245, line: 5985, column: 29)
!14510 = !DILocation(line: 5986, column: 20, scope: !14509)
!14511 = !DILocation(line: 5986, column: 16, scope: !14509)
!14512 = !DILocation(line: 5987, column: 3, scope: !14509)
!14513 = !DILocation(line: 5988, column: 8, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 5988, column: 7)
!14515 = !DILocation(line: 5988, column: 7, scope: !14478)
!14516 = !DILocation(line: 5990, column: 7, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 5990, column: 7)
!14518 = !DILocation(line: 5991, column: 3, scope: !14478)
!14519 = !DILocation(line: 5993, column: 8, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 5991, column: 14)
!14521 = !DILocation(line: 5994, column: 9, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14520, file: !1245, line: 5994, column: 4)
!14523 = !DILocation(line: 0, scope: !14522)
!14524 = !DILocation(line: 5994, column: 16, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14522, file: !1245, line: 5994, column: 4)
!14526 = !DILocation(line: 5994, column: 4, scope: !14522)
!14527 = !DILocation(line: 5994, column: 23, scope: !14525)
!14528 = distinct !{!14528, !14526, !14529}
!14529 = !DILocation(line: 5994, column: 27, scope: !14522)
!14530 = !DILocation(line: 5995, column: 12, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14520, file: !1245, line: 5995, column: 8)
!14532 = !DILocation(line: 5995, column: 8, scope: !14520)
!14533 = !DILocation(line: 5996, column: 16, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14531, file: !1245, line: 5995, column: 18)
!14535 = !DILocation(line: 5996, column: 5, scope: !14534)
!14536 = !DILocation(line: 5996, column: 21, scope: !14534)
!14537 = !DILocation(line: 5996, column: 13, scope: !14534)
!14538 = distinct !{!14538, !14535, !14539}
!14539 = !DILocation(line: 5996, column: 38, scope: !14534)
!14540 = !DILocation(line: 0, scope: !14520)
!14541 = !DILocation(line: 5998, column: 11, scope: !14520)
!14542 = !DILocation(line: 5998, column: 4, scope: !14520)
!14543 = !DILocation(line: 5999, column: 15, scope: !14520)
!14544 = !DILocation(line: 5999, column: 4, scope: !14520)
!14545 = !DILocation(line: 5998, column: 31, scope: !14520)
!14546 = !DILocation(line: 5998, column: 15, scope: !14520)
!14547 = distinct !{!14547, !14542, !14548}
!14548 = !DILocation(line: 5998, column: 33, scope: !14520)
!14549 = !DILocation(line: 5999, column: 12, scope: !14520)
!14550 = !DILocation(line: 5999, column: 20, scope: !14520)
!14551 = !DILocation(line: 6002, column: 25, scope: !14520)
!14552 = !DILocation(line: 6002, column: 18, scope: !14520)
!14553 = !DILocation(line: 6002, column: 44, scope: !14520)
!14554 = !DILocation(line: 6006, column: 11, scope: !14520)
!14555 = !DILocation(line: 6009, column: 12, scope: !14520)
!14556 = !DILocation(line: 6011, column: 12, scope: !14520)
!14557 = !DILocation(line: 6017, column: 7, scope: !14478)
!14558 = !DILocation(line: 6018, column: 9, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 6018, column: 7)
!14560 = !DILocation(line: 6018, column: 16, scope: !14559)
!14561 = !DILocation(line: 6023, column: 3, scope: !14478)
!14562 = !DILocation(line: 6024, column: 26, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 6023, column: 6)
!14564 = !DILocation(line: 6025, column: 10, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14563, file: !1245, line: 6025, column: 8)
!14566 = !DILocation(line: 6025, column: 8, scope: !14563)
!14567 = !DILocation(line: 6026, column: 15, scope: !14563)
!14568 = !DILocation(line: 6026, column: 9, scope: !14563)
!14569 = !DILocation(line: 6026, column: 4, scope: !14563)
!14570 = !DILocation(line: 6026, column: 13, scope: !14563)
!14571 = !DILocation(line: 6027, column: 12, scope: !14478)
!14572 = !DILocation(line: 6027, column: 14, scope: !14478)
!14573 = !DILocation(line: 6027, column: 3, scope: !14563)
!14574 = distinct !{!14574, !14561, !14575}
!14575 = !DILocation(line: 6027, column: 47, scope: !14478)
!14576 = !DILocation(line: 6028, column: 7, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14478, file: !1245, line: 6028, column: 7)
!14578 = !DILocation(line: 6028, column: 9, scope: !14577)
!14579 = !DILocation(line: 6028, column: 7, scope: !14478)
!14580 = !DILocation(line: 6028, column: 19, scope: !14577)
!14581 = !DILocation(line: 6028, column: 14, scope: !14577)
!14582 = !DILocation(line: 6028, column: 23, scope: !14577)
!14583 = !DILocation(line: 6029, column: 17, scope: !14478)
!14584 = !DILocation(line: 6029, column: 14, scope: !14478)
!14585 = !DILocation(line: 6030, column: 19, scope: !14478)
!14586 = !DILocation(line: 6030, column: 3, scope: !14478)
!14587 = !DILocation(line: 6030, column: 26, scope: !14478)
!14588 = !DILocation(line: 6030, column: 23, scope: !14478)
!14589 = !DILocation(line: 6030, column: 31, scope: !14478)
!14590 = distinct !{!14590, !14586, !14591}
!14591 = !DILocation(line: 6030, column: 46, scope: !14478)
!14592 = !DILocation(line: 6031, column: 3, scope: !14478)
!14593 = !DILocation(line: 6031, column: 24, scope: !14478)
!14594 = !DILocation(line: 6031, column: 20, scope: !14478)
!14595 = !DILocation(line: 6031, column: 6, scope: !14478)
!14596 = distinct !{!14596, !14592, !14597}
!14597 = !DILocation(line: 6031, column: 39, scope: !14478)
!14598 = !DILocation(line: 6032, column: 14, scope: !14478)
!14599 = !DILocation(line: 6032, column: 3, scope: !14478)
!14600 = !DILocation(line: 6032, column: 11, scope: !14478)
!14601 = !DILocation(line: 6032, column: 19, scope: !14478)
!14602 = !DILocation(line: 6035, column: 2, scope: !14443)
!14603 = !DILocation(line: 6037, column: 9, scope: !14443)
!14604 = !DILocation(line: 6038, column: 1, scope: !14443)
!14605 = !DILocation(line: 6037, column: 2, scope: !14443)
!14606 = distinct !DISubprogram(name: "disk_status", scope: !1428, file: !1428, line: 30, type: !14607, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !14609)
!14607 = !DISubroutineType(types: !14608)
!14608 = !{!1397, !1283}
!14609 = !{!14610}
!14610 = !DILocalVariable(name: "pdrv", arg: 1, scope: !14606, file: !1428, line: 31, type: !1283)
!14611 = !DILocation(line: 0, scope: !14606)
!14612 = !DILocation(line: 34, column: 9, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14606, file: !1428, line: 34, column: 9)
!14614 = !DILocation(line: 0, scope: !14613)
!14615 = !DILocation(line: 39, column: 1, scope: !14606)
!14616 = distinct !DISubprogram(name: "disk_initialize", scope: !1428, file: !1428, line: 46, type: !14607, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !14617)
!14617 = !{!14618}
!14618 = !DILocalVariable(name: "pdrv", arg: 1, scope: !14616, file: !1428, line: 47, type: !1283)
!14619 = !DILocation(line: 0, scope: !14616)
!14620 = !DILocation(line: 50, column: 9, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14616, file: !1428, line: 50, column: 8)
!14622 = !DILocation(line: 50, column: 8, scope: !14616)
!14623 = !DILocation(line: 51, column: 16, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14621, file: !1428, line: 50, column: 15)
!14625 = !DILocation(line: 51, column: 9, scope: !14624)
!14626 = !DILocation(line: 0, scope: !14621)
!14627 = !DILocation(line: 61, column: 1, scope: !14616)
!14628 = distinct !DISubprogram(name: "disk_read", scope: !1428, file: !1428, line: 68, type: !14629, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !14632)
!14629 = !DISubroutineType(types: !14630)
!14630 = !{!14631, !1283, !1282, !1279, !1281}
!14631 = !DIDerivedType(tag: DW_TAG_typedef, name: "DRESULT", file: !1271, line: 31, baseType: !1270)
!14632 = !{!14633, !14634, !14635, !14636}
!14633 = !DILocalVariable(name: "pdrv", arg: 1, scope: !14628, file: !1428, line: 69, type: !1283)
!14634 = !DILocalVariable(name: "buff", arg: 2, scope: !14628, file: !1428, line: 70, type: !1282)
!14635 = !DILocalVariable(name: "sector", arg: 3, scope: !14628, file: !1428, line: 71, type: !1279)
!14636 = !DILocalVariable(name: "count", arg: 4, scope: !14628, file: !1428, line: 72, type: !1281)
!14637 = !DILocation(line: 0, scope: !14628)
!14638 = !DILocation(line: 75, column: 9, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14628, file: !1428, line: 75, column: 8)
!14640 = !DILocation(line: 75, column: 8, scope: !14628)
!14641 = !DILocation(line: 76, column: 16, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14639, file: !1428, line: 75, column: 15)
!14643 = !DILocation(line: 76, column: 9, scope: !14642)
!14644 = !DILocation(line: 0, scope: !14639)
!14645 = !DILocation(line: 84, column: 1, scope: !14628)
!14646 = distinct !DISubprogram(name: "disk_write", scope: !1428, file: !1428, line: 92, type: !14647, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !14649)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{!14631, !1283, !1285, !1279, !1281}
!14649 = !{!14650, !14651, !14652, !14653}
!14650 = !DILocalVariable(name: "pdrv", arg: 1, scope: !14646, file: !1428, line: 93, type: !1283)
!14651 = !DILocalVariable(name: "buff", arg: 2, scope: !14646, file: !1428, line: 94, type: !1285)
!14652 = !DILocalVariable(name: "sector", arg: 3, scope: !14646, file: !1428, line: 95, type: !1279)
!14653 = !DILocalVariable(name: "count", arg: 4, scope: !14646, file: !1428, line: 96, type: !1281)
!14654 = !DILocation(line: 0, scope: !14646)
!14655 = !DILocation(line: 99, column: 9, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14646, file: !1428, line: 99, column: 8)
!14657 = !DILocation(line: 99, column: 8, scope: !14646)
!14658 = !DILocation(line: 100, column: 16, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14656, file: !1428, line: 99, column: 15)
!14660 = !DILocation(line: 100, column: 9, scope: !14659)
!14661 = !DILocation(line: 0, scope: !14656)
!14662 = !DILocation(line: 108, column: 1, scope: !14646)
!14663 = distinct !DISubprogram(name: "disk_ioctl", scope: !1428, file: !1428, line: 118, type: !14664, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1427, retainedNodes: !14666)
!14664 = !DISubroutineType(types: !14665)
!14665 = !{!14631, !1283, !1283, !51}
!14666 = !{!14667, !14668, !14669}
!14667 = !DILocalVariable(name: "pdrv", arg: 1, scope: !14663, file: !1428, line: 119, type: !1283)
!14668 = !DILocalVariable(name: "cmd", arg: 2, scope: !14663, file: !1428, line: 120, type: !1283)
!14669 = !DILocalVariable(name: "buff", arg: 3, scope: !14663, file: !1428, line: 121, type: !51)
!14670 = !DILocation(line: 0, scope: !14663)
!14671 = !DILocation(line: 124, column: 9, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14663, file: !1428, line: 124, column: 8)
!14673 = !DILocation(line: 124, column: 8, scope: !14663)
!14674 = !DILocation(line: 125, column: 16, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14672, file: !1428, line: 124, column: 15)
!14676 = !DILocation(line: 125, column: 9, scope: !14675)
!14677 = !DILocation(line: 0, scope: !14672)
!14678 = !DILocation(line: 133, column: 1, scope: !14663)
!14679 = distinct !DISubprogram(name: "spi_pad_select", scope: !1436, file: !1436, line: 60, type: !154, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !2550)
!14680 = !DILocation(line: 62, column: 9, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14679, file: !1436, line: 62, column: 9)
!14682 = !DILocation(line: 62, column: 9, scope: !14679)
!14683 = !DILocation(line: 66, column: 16, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14681, file: !1436, line: 66, column: 16)
!14685 = !DILocation(line: 66, column: 16, scope: !14681)
!14686 = !DILocation(line: 0, scope: !14681)
!14687 = !DILocation(line: 72, column: 1, scope: !14679)
!14688 = distinct !DISubprogram(name: "wait_ready", scope: !1436, file: !1436, line: 147, type: !14689, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !14691)
!14689 = !DISubroutineType(types: !14690)
!14690 = !{!1283}
!14691 = !{!14692, !14693, !14694, !14695}
!14692 = !DILocalVariable(name: "start_count", scope: !14688, file: !1436, line: 149, type: !61)
!14693 = !DILocalVariable(name: "end_count", scope: !14688, file: !1436, line: 150, type: !61)
!14694 = !DILocalVariable(name: "count", scope: !14688, file: !1436, line: 151, type: !61)
!14695 = !DILocalVariable(name: "ret", scope: !14688, file: !1436, line: 152, type: !1283)
!14696 = !DILocation(line: 149, column: 5, scope: !14688)
!14697 = !DILocation(line: 0, scope: !14688)
!14698 = !DILocation(line: 149, column: 14, scope: !14688)
!14699 = !DILocation(line: 150, column: 5, scope: !14688)
!14700 = !DILocation(line: 150, column: 14, scope: !14688)
!14701 = !DILocation(line: 151, column: 5, scope: !14688)
!14702 = !DILocation(line: 151, column: 14, scope: !14688)
!14703 = !DILocation(line: 154, column: 5, scope: !14688)
!14704 = !DILocation(line: 155, column: 28, scope: !14688)
!14705 = !DILocation(line: 155, column: 18, scope: !14688)
!14706 = !DILocation(line: 155, column: 5, scope: !14688)
!14707 = !DILocation(line: 156, column: 9, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14688, file: !1436, line: 155, column: 61)
!14709 = !DILocation(line: 157, column: 36, scope: !14708)
!14710 = !DILocation(line: 157, column: 49, scope: !14708)
!14711 = !DILocation(line: 157, column: 9, scope: !14708)
!14712 = !DILocation(line: 155, column: 41, scope: !14688)
!14713 = distinct !{!14713, !14706, !14714}
!14714 = !DILocation(line: 158, column: 5, scope: !14688)
!14715 = !DILocation(line: 160, column: 15, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14688, file: !1436, line: 160, column: 9)
!14717 = !DILocation(line: 160, column: 9, scope: !14688)
!14718 = !DILocation(line: 161, column: 9, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14716, file: !1436, line: 160, column: 25)
!14720 = !DILocation(line: 162, column: 5, scope: !14719)
!14721 = !DILocation(line: 165, column: 1, scope: !14688)
!14722 = !DILocation(line: 164, column: 5, scope: !14688)
!14723 = distinct !DISubprogram(name: "rcvr_spi", scope: !1436, file: !1436, line: 108, type: !14689, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !14724)
!14724 = !{!14725, !14726, !14727, !14735}
!14725 = !DILocalVariable(name: "send_data", scope: !14723, file: !1436, line: 110, type: !14300)
!14726 = !DILocalVariable(name: "receive_data", scope: !14723, file: !1436, line: 111, type: !1283)
!14727 = !DILocalVariable(name: "config", scope: !14723, file: !1436, line: 112, type: !14728)
!14728 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_send_and_receive_config_t", file: !955, line: 616, baseType: !14729)
!14729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !955, line: 611, size: 128, elements: !14730)
!14730 = !{!14731, !14732, !14733, !14734}
!14731 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !14729, file: !955, line: 612, baseType: !500, size: 32)
!14732 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !14729, file: !955, line: 613, baseType: !61, size: 32, offset: 32)
!14733 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !14729, file: !955, line: 614, baseType: !500, size: 32, offset: 64)
!14734 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !14729, file: !955, line: 615, baseType: !61, size: 32, offset: 96)
!14735 = !DILocalVariable(name: "status", scope: !14723, file: !1436, line: 113, type: !8723)
!14736 = !DILocation(line: 110, column: 5, scope: !14723)
!14737 = !DILocation(line: 110, column: 10, scope: !14723)
!14738 = !DILocation(line: 111, column: 5, scope: !14723)
!14739 = !DILocation(line: 112, column: 5, scope: !14723)
!14740 = !DILocation(line: 112, column: 46, scope: !14723)
!14741 = !DILocation(line: 115, column: 12, scope: !14723)
!14742 = !DILocation(line: 115, column: 22, scope: !14723)
!14743 = !DILocation(line: 116, column: 12, scope: !14723)
!14744 = !DILocation(line: 116, column: 24, scope: !14723)
!14745 = !DILocation(line: 117, column: 12, scope: !14723)
!14746 = !DILocation(line: 117, column: 27, scope: !14723)
!14747 = !DILocation(line: 118, column: 12, scope: !14723)
!14748 = !DILocation(line: 118, column: 27, scope: !14723)
!14749 = !DILocation(line: 120, column: 47, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14723, file: !1436, line: 120, column: 9)
!14751 = !DILocation(line: 0, scope: !14723)
!14752 = !DILocation(line: 120, column: 34, scope: !14750)
!14753 = !DILocation(line: 120, column: 9, scope: !14723)
!14754 = !DILocation(line: 121, column: 9, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14750, file: !1436, line: 120, column: 109)
!14756 = !DILocation(line: 122, column: 5, scope: !14755)
!14757 = !DILocation(line: 124, column: 12, scope: !14723)
!14758 = !DILocation(line: 125, column: 1, scope: !14723)
!14759 = !DILocation(line: 124, column: 5, scope: !14723)
!14760 = distinct !DISubprogram(name: "power_on", scope: !1436, file: !1436, line: 172, type: !154, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !14761)
!14761 = !{!14762, !14763, !14772}
!14762 = !DILocalVariable(name: "frequency", scope: !14760, file: !1436, line: 175, type: !61)
!14763 = !DILocalVariable(name: "spi_config", scope: !14760, file: !1436, line: 176, type: !14764)
!14764 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !955, line: 580, baseType: !14765)
!14765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !955, line: 574, size: 160, elements: !14766)
!14766 = !{!14767, !14768, !14769, !14770, !14771}
!14767 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !14765, file: !955, line: 575, baseType: !61, size: 32)
!14768 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !14765, file: !955, line: 576, baseType: !1027, size: 32, offset: 32)
!14769 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !14765, file: !955, line: 577, baseType: !1029, size: 32, offset: 64)
!14770 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !14765, file: !955, line: 578, baseType: !1031, size: 32, offset: 96)
!14771 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !14765, file: !955, line: 579, baseType: !1033, size: 32, offset: 128)
!14772 = !DILocalVariable(name: "status", scope: !14760, file: !1436, line: 177, type: !8723)
!14773 = !DILocation(line: 0, scope: !14760)
!14774 = !DILocation(line: 176, column: 5, scope: !14760)
!14775 = !DILocation(line: 176, column: 29, scope: !14760)
!14776 = !DILocation(line: 179, column: 5, scope: !14760)
!14777 = !DILocation(line: 181, column: 16, scope: !14760)
!14778 = !DILocation(line: 181, column: 26, scope: !14760)
!14779 = !DILocation(line: 182, column: 16, scope: !14760)
!14780 = !DILocation(line: 182, column: 27, scope: !14760)
!14781 = !DILocation(line: 183, column: 16, scope: !14760)
!14782 = !DILocation(line: 183, column: 32, scope: !14760)
!14783 = !DILocation(line: 184, column: 16, scope: !14760)
!14784 = !DILocation(line: 184, column: 22, scope: !14760)
!14785 = !DILocation(line: 185, column: 16, scope: !14760)
!14786 = !DILocation(line: 185, column: 25, scope: !14760)
!14787 = !DILocation(line: 186, column: 47, scope: !14788)
!14788 = distinct !DILexicalBlock(scope: !14760, file: !1436, line: 186, column: 9)
!14789 = !DILocation(line: 186, column: 34, scope: !14788)
!14790 = !DILocation(line: 186, column: 9, scope: !14760)
!14791 = !DILocation(line: 187, column: 9, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14788, file: !1436, line: 186, column: 93)
!14793 = !DILocation(line: 188, column: 5, scope: !14792)
!14794 = !DILocation(line: 190, column: 1, scope: !14760)
!14795 = distinct !DISubprogram(name: "set_frequency", scope: !1436, file: !1436, line: 192, type: !14796, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !14798)
!14796 = !DISubroutineType(types: !14797)
!14797 = !{!69, !1279}
!14798 = !{!14799, !14800, !14801}
!14799 = !DILocalVariable(name: "frequency", arg: 1, scope: !14795, file: !1436, line: 192, type: !1279)
!14800 = !DILocalVariable(name: "spi_config", scope: !14795, file: !1436, line: 194, type: !14764)
!14801 = !DILocalVariable(name: "status", scope: !14795, file: !1436, line: 195, type: !8723)
!14802 = !DILocation(line: 0, scope: !14795)
!14803 = !DILocation(line: 194, column: 5, scope: !14795)
!14804 = !DILocation(line: 194, column: 29, scope: !14795)
!14805 = !DILocation(line: 197, column: 5, scope: !14795)
!14806 = !DILocation(line: 198, column: 5, scope: !14795)
!14807 = !DILocation(line: 200, column: 45, scope: !14795)
!14808 = !DILocation(line: 200, column: 59, scope: !14795)
!14809 = !DILocation(line: 200, column: 5, scope: !14795)
!14810 = !DILocation(line: 202, column: 16, scope: !14795)
!14811 = !DILocation(line: 202, column: 26, scope: !14795)
!14812 = !DILocation(line: 203, column: 16, scope: !14795)
!14813 = !DILocation(line: 203, column: 27, scope: !14795)
!14814 = !DILocation(line: 204, column: 16, scope: !14795)
!14815 = !DILocation(line: 204, column: 32, scope: !14795)
!14816 = !DILocation(line: 205, column: 16, scope: !14795)
!14817 = !DILocation(line: 205, column: 22, scope: !14795)
!14818 = !DILocation(line: 206, column: 16, scope: !14795)
!14819 = !DILocation(line: 206, column: 25, scope: !14795)
!14820 = !DILocation(line: 207, column: 47, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14795, file: !1436, line: 207, column: 9)
!14822 = !DILocation(line: 207, column: 34, scope: !14821)
!14823 = !DILocation(line: 207, column: 9, scope: !14795)
!14824 = !DILocation(line: 208, column: 9, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14821, file: !1436, line: 207, column: 93)
!14826 = !DILocation(line: 209, column: 9, scope: !14825)
!14827 = !DILocation(line: 213, column: 45, scope: !14795)
!14828 = !DILocation(line: 213, column: 59, scope: !14795)
!14829 = !DILocation(line: 213, column: 5, scope: !14795)
!14830 = !DILocation(line: 214, column: 44, scope: !14795)
!14831 = !DILocation(line: 214, column: 5, scope: !14795)
!14832 = !DILocation(line: 215, column: 41, scope: !14795)
!14833 = !DILocation(line: 215, column: 5, scope: !14795)
!14834 = !DILocation(line: 217, column: 5, scope: !14795)
!14835 = !DILocation(line: 218, column: 1, scope: !14795)
!14836 = distinct !DISubprogram(name: "power_off", scope: !1436, file: !1436, line: 221, type: !154, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !2550)
!14837 = !DILocation(line: 223, column: 17, scope: !14836)
!14838 = !DILocation(line: 224, column: 1, scope: !14836)
!14839 = distinct !DISubprogram(name: "sd_disk_initialize", scope: !1436, file: !1436, line: 292, type: !14607, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !14840)
!14840 = !{!14841, !14842, !14843, !14844, !14846, !14848, !14849, !14850}
!14841 = !DILocalVariable(name: "pdrv", arg: 1, scope: !14839, file: !1436, line: 293, type: !1283)
!14842 = !DILocalVariable(name: "n", scope: !14839, file: !1436, line: 296, type: !1283)
!14843 = !DILocalVariable(name: "ty", scope: !14839, file: !1436, line: 296, type: !1283)
!14844 = !DILocalVariable(name: "ocr", scope: !14839, file: !1436, line: 296, type: !14845)
!14845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 32, elements: !346)
!14846 = !DILocalVariable(name: "buff", scope: !14839, file: !1436, line: 297, type: !14847)
!14847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 160, elements: !1874)
!14848 = !DILocalVariable(name: "start_count", scope: !14839, file: !1436, line: 298, type: !61)
!14849 = !DILocalVariable(name: "end_count", scope: !14839, file: !1436, line: 299, type: !61)
!14850 = !DILocalVariable(name: "count", scope: !14839, file: !1436, line: 300, type: !61)
!14851 = !DILocation(line: 0, scope: !14839)
!14852 = !DILocation(line: 296, column: 5, scope: !14839)
!14853 = !DILocation(line: 296, column: 17, scope: !14839)
!14854 = !DILocation(line: 297, column: 5, scope: !14839)
!14855 = !DILocation(line: 297, column: 10, scope: !14839)
!14856 = !DILocation(line: 298, column: 5, scope: !14839)
!14857 = !DILocation(line: 298, column: 14, scope: !14839)
!14858 = !DILocation(line: 299, column: 5, scope: !14839)
!14859 = !DILocation(line: 299, column: 14, scope: !14839)
!14860 = !DILocation(line: 300, column: 5, scope: !14839)
!14861 = !DILocation(line: 300, column: 14, scope: !14839)
!14862 = !DILocation(line: 302, column: 18, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14839, file: !1436, line: 302, column: 9)
!14864 = !DILocation(line: 302, column: 9, scope: !14839)
!14865 = !DILocation(line: 305, column: 9, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14839, file: !1436, line: 305, column: 9)
!14867 = !DILocation(line: 305, column: 21, scope: !14866)
!14868 = !DILocation(line: 305, column: 9, scope: !14839)
!14869 = !DILocation(line: 309, column: 5, scope: !14839)
!14870 = !DILocation(line: 311, column: 5, scope: !14839)
!14871 = !DILocation(line: 314, column: 45, scope: !14839)
!14872 = !DILocation(line: 314, column: 59, scope: !14839)
!14873 = !DILocation(line: 314, column: 5, scope: !14839)
!14874 = !DILocation(line: 315, column: 44, scope: !14839)
!14875 = !DILocation(line: 315, column: 5, scope: !14839)
!14876 = !DILocation(line: 316, column: 41, scope: !14839)
!14877 = !DILocation(line: 316, column: 5, scope: !14839)
!14878 = !DILocation(line: 317, column: 5, scope: !14839)
!14879 = !DILocation(line: 319, column: 5, scope: !14839)
!14880 = !DILocation(line: 323, column: 5, scope: !14839)
!14881 = !DILocation(line: 324, column: 9, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14839, file: !1436, line: 324, column: 9)
!14883 = !DILocation(line: 324, column: 27, scope: !14882)
!14884 = !DILocation(line: 324, column: 9, scope: !14839)
!14885 = !DILocation(line: 325, column: 13, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14887, file: !1436, line: 325, column: 13)
!14887 = distinct !DILexicalBlock(scope: !14882, file: !1436, line: 324, column: 33)
!14888 = !DILocation(line: 325, column: 35, scope: !14886)
!14889 = !DILocation(line: 325, column: 13, scope: !14887)
!14890 = !DILocation(line: 327, column: 26, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14892, file: !1436, line: 326, column: 37)
!14892 = distinct !DILexicalBlock(scope: !14893, file: !1436, line: 326, column: 13)
!14893 = distinct !DILexicalBlock(scope: !14894, file: !1436, line: 326, column: 13)
!14894 = distinct !DILexicalBlock(scope: !14886, file: !1436, line: 325, column: 41)
!14895 = !DILocation(line: 327, column: 17, scope: !14891)
!14896 = !DILocation(line: 327, column: 24, scope: !14891)
!14897 = !DILocation(line: 326, column: 33, scope: !14892)
!14898 = !DILocation(line: 326, column: 27, scope: !14892)
!14899 = !DILocation(line: 326, column: 13, scope: !14893)
!14900 = distinct !{!14900, !14899, !14901}
!14901 = !DILocation(line: 328, column: 13, scope: !14893)
!14902 = !DILocation(line: 329, column: 17, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14894, file: !1436, line: 329, column: 17)
!14904 = !DILocation(line: 329, column: 24, scope: !14903)
!14905 = !DILocation(line: 329, column: 32, scope: !14903)
!14906 = !DILocation(line: 331, column: 25, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14908, file: !1436, line: 331, column: 25)
!14908 = distinct !DILexicalBlock(scope: !14909, file: !1436, line: 330, column: 20)
!14909 = distinct !DILexicalBlock(scope: !14903, file: !1436, line: 329, column: 51)
!14910 = !DILocation(line: 331, column: 44, scope: !14907)
!14911 = !DILocation(line: 331, column: 49, scope: !14907)
!14912 = !DILocation(line: 331, column: 52, scope: !14907)
!14913 = !DILocation(line: 331, column: 79, scope: !14907)
!14914 = !DILocation(line: 331, column: 25, scope: !14908)
!14915 = !DILocation(line: 334, column: 21, scope: !14908)
!14916 = !DILocation(line: 335, column: 48, scope: !14908)
!14917 = !DILocation(line: 335, column: 61, scope: !14908)
!14918 = !DILocation(line: 335, column: 21, scope: !14908)
!14919 = !DILocation(line: 336, column: 26, scope: !14909)
!14920 = !DILocation(line: 336, column: 32, scope: !14909)
!14921 = !DILocation(line: 336, column: 17, scope: !14908)
!14922 = distinct !{!14922, !14923, !14924}
!14923 = !DILocation(line: 330, column: 17, scope: !14909)
!14924 = !DILocation(line: 336, column: 39, scope: !14909)
!14925 = !DILocation(line: 337, column: 22, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14909, file: !1436, line: 337, column: 21)
!14927 = !DILocation(line: 337, column: 28, scope: !14926)
!14928 = !DILocation(line: 337, column: 37, scope: !14926)
!14929 = !DILocation(line: 337, column: 40, scope: !14926)
!14930 = !DILocation(line: 337, column: 59, scope: !14926)
!14931 = !DILocation(line: 337, column: 21, scope: !14909)
!14932 = !DILocation(line: 339, column: 34, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14934, file: !1436, line: 338, column: 45)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !1436, line: 338, column: 21)
!14935 = distinct !DILexicalBlock(scope: !14936, file: !1436, line: 338, column: 21)
!14936 = distinct !DILexicalBlock(scope: !14926, file: !1436, line: 337, column: 65)
!14937 = !DILocation(line: 339, column: 25, scope: !14933)
!14938 = !DILocation(line: 339, column: 32, scope: !14933)
!14939 = !DILocation(line: 338, column: 41, scope: !14934)
!14940 = !DILocation(line: 338, column: 35, scope: !14934)
!14941 = !DILocation(line: 338, column: 21, scope: !14935)
!14942 = distinct !{!14942, !14941, !14943}
!14943 = !DILocation(line: 340, column: 21, scope: !14935)
!14944 = !DILocation(line: 341, column: 27, scope: !14936)
!14945 = !DILocation(line: 341, column: 34, scope: !14936)
!14946 = !DILocation(line: 341, column: 26, scope: !14936)
!14947 = !DILocation(line: 342, column: 17, scope: !14936)
!14948 = !DILocation(line: 345, column: 19, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14886, file: !1436, line: 344, column: 16)
!14950 = !DILocation(line: 345, column: 38, scope: !14949)
!14951 = !DILocation(line: 345, column: 43, scope: !14949)
!14952 = !DILocation(line: 345, column: 46, scope: !14949)
!14953 = !DILocation(line: 345, column: 65, scope: !14949)
!14954 = !DILocation(line: 346, column: 13, scope: !14949)
!14955 = !DILocation(line: 347, column: 21, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14949, file: !1436, line: 346, column: 16)
!14957 = !DILocation(line: 348, column: 25, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14959, file: !1436, line: 348, column: 25)
!14959 = distinct !DILexicalBlock(scope: !14960, file: !1436, line: 347, column: 30)
!14960 = distinct !DILexicalBlock(scope: !14956, file: !1436, line: 347, column: 21)
!14961 = !DILocation(line: 348, column: 44, scope: !14958)
!14962 = !DILocation(line: 348, column: 49, scope: !14958)
!14963 = !DILocation(line: 348, column: 52, scope: !14958)
!14964 = !DILocation(line: 348, column: 71, scope: !14958)
!14965 = !DILocation(line: 348, column: 25, scope: !14959)
!14966 = !DILocation(line: 352, column: 25, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14968, file: !1436, line: 352, column: 25)
!14968 = distinct !DILexicalBlock(scope: !14960, file: !1436, line: 351, column: 24)
!14969 = !DILocation(line: 352, column: 43, scope: !14967)
!14970 = !DILocation(line: 352, column: 25, scope: !14968)
!14971 = !DILocation(line: 356, column: 17, scope: !14956)
!14972 = !DILocation(line: 357, column: 44, scope: !14956)
!14973 = !DILocation(line: 357, column: 57, scope: !14956)
!14974 = !DILocation(line: 357, column: 17, scope: !14956)
!14975 = !DILocation(line: 358, column: 22, scope: !14949)
!14976 = !DILocation(line: 358, column: 28, scope: !14949)
!14977 = !DILocation(line: 358, column: 13, scope: !14956)
!14978 = distinct !{!14978, !14954, !14979}
!14979 = !DILocation(line: 358, column: 35, scope: !14949)
!14980 = !DILocation(line: 359, column: 18, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14949, file: !1436, line: 359, column: 17)
!14982 = !DILocation(line: 359, column: 24, scope: !14981)
!14983 = !DILocation(line: 359, column: 33, scope: !14981)
!14984 = !DILocation(line: 359, column: 36, scope: !14981)
!14985 = !DILocation(line: 359, column: 57, scope: !14981)
!14986 = !DILocation(line: 359, column: 17, scope: !14949)
!14987 = !DILocation(line: 364, column: 14, scope: !14839)
!14988 = !DILocation(line: 366, column: 5, scope: !14839)
!14989 = !DILocation(line: 369, column: 21, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14991, file: !1436, line: 368, column: 13)
!14991 = distinct !DILexicalBlock(scope: !14839, file: !1436, line: 368, column: 9)
!14992 = !DILocation(line: 370, column: 9, scope: !14990)
!14993 = !DILocation(line: 371, column: 5, scope: !14990)
!14994 = !DILocation(line: 372, column: 9, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14991, file: !1436, line: 371, column: 12)
!14996 = !DILocation(line: 375, column: 12, scope: !14839)
!14997 = !DILocation(line: 375, column: 5, scope: !14839)
!14998 = !DILocation(line: 376, column: 1, scope: !14839)
!14999 = distinct !DISubprogram(name: "rcvr_spi_m", scope: !1436, file: !1436, line: 128, type: !10741, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15000)
!15000 = !{!15001, !15002, !15003, !15004, !15005}
!15001 = !DILocalVariable(name: "dst", arg: 1, scope: !14999, file: !1436, line: 128, type: !1282)
!15002 = !DILocalVariable(name: "data_len", arg: 2, scope: !14999, file: !1436, line: 128, type: !1279)
!15003 = !DILocalVariable(name: "send_data", scope: !14999, file: !1436, line: 130, type: !1283)
!15004 = !DILocalVariable(name: "config", scope: !14999, file: !1436, line: 131, type: !14728)
!15005 = !DILocalVariable(name: "status", scope: !14999, file: !1436, line: 132, type: !8723)
!15006 = !DILocation(line: 0, scope: !14999)
!15007 = !DILocation(line: 130, column: 5, scope: !14999)
!15008 = !DILocation(line: 131, column: 5, scope: !14999)
!15009 = !DILocation(line: 131, column: 46, scope: !14999)
!15010 = !DILocation(line: 134, column: 12, scope: !14999)
!15011 = !DILocation(line: 134, column: 22, scope: !14999)
!15012 = !DILocation(line: 135, column: 12, scope: !14999)
!15013 = !DILocation(line: 135, column: 24, scope: !14999)
!15014 = !DILocation(line: 136, column: 12, scope: !14999)
!15015 = !DILocation(line: 136, column: 27, scope: !14999)
!15016 = !DILocation(line: 137, column: 12, scope: !14999)
!15017 = !DILocation(line: 137, column: 27, scope: !14999)
!15018 = !DILocation(line: 139, column: 47, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !14999, file: !1436, line: 139, column: 9)
!15020 = !DILocation(line: 139, column: 34, scope: !15019)
!15021 = !DILocation(line: 139, column: 9, scope: !14999)
!15022 = !DILocation(line: 140, column: 9, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15019, file: !1436, line: 139, column: 109)
!15024 = !DILocation(line: 141, column: 5, scope: !15023)
!15025 = !DILocation(line: 142, column: 1, scope: !14999)
!15026 = distinct !DISubprogram(name: "send_cmd", scope: !1436, file: !1436, line: 233, type: !15027, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15029)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!1283, !1283, !1279}
!15029 = !{!15030, !15031, !15032, !15033, !15035, !15036, !15037, !15038}
!15030 = !DILocalVariable(name: "cmd", arg: 1, scope: !15026, file: !1436, line: 234, type: !1283)
!15031 = !DILocalVariable(name: "arg", arg: 2, scope: !15026, file: !1436, line: 235, type: !1279)
!15032 = !DILocalVariable(name: "res", scope: !15026, file: !1436, line: 238, type: !1283)
!15033 = !DILocalVariable(name: "send_data", scope: !15026, file: !1436, line: 239, type: !15034)
!15034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 48, elements: !1833)
!15035 = !DILocalVariable(name: "start_count", scope: !15026, file: !1436, line: 240, type: !61)
!15036 = !DILocalVariable(name: "end_count", scope: !15026, file: !1436, line: 241, type: !61)
!15037 = !DILocalVariable(name: "count", scope: !15026, file: !1436, line: 242, type: !61)
!15038 = !DILocalVariable(name: "status", scope: !15026, file: !1436, line: 243, type: !8723)
!15039 = !DILocation(line: 0, scope: !15026)
!15040 = !DILocation(line: 239, column: 5, scope: !15026)
!15041 = !DILocation(line: 239, column: 10, scope: !15026)
!15042 = !DILocation(line: 240, column: 5, scope: !15026)
!15043 = !DILocation(line: 240, column: 14, scope: !15026)
!15044 = !DILocation(line: 241, column: 5, scope: !15026)
!15045 = !DILocation(line: 241, column: 14, scope: !15026)
!15046 = !DILocation(line: 242, column: 5, scope: !15026)
!15047 = !DILocation(line: 242, column: 14, scope: !15026)
!15048 = !DILocation(line: 245, column: 9, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15026, file: !1436, line: 245, column: 9)
!15050 = !DILocation(line: 245, column: 22, scope: !15049)
!15051 = !DILocation(line: 245, column: 9, scope: !15026)
!15052 = !DILocation(line: 249, column: 18, scope: !15026)
!15053 = !DILocation(line: 250, column: 31, scope: !15026)
!15054 = !DILocation(line: 250, column: 20, scope: !15026)
!15055 = !DILocation(line: 250, column: 5, scope: !15026)
!15056 = !DILocation(line: 250, column: 18, scope: !15026)
!15057 = !DILocation(line: 251, column: 31, scope: !15026)
!15058 = !DILocation(line: 251, column: 20, scope: !15026)
!15059 = !DILocation(line: 251, column: 5, scope: !15026)
!15060 = !DILocation(line: 251, column: 18, scope: !15026)
!15061 = !DILocation(line: 252, column: 31, scope: !15026)
!15062 = !DILocation(line: 252, column: 20, scope: !15026)
!15063 = !DILocation(line: 252, column: 5, scope: !15026)
!15064 = !DILocation(line: 252, column: 18, scope: !15026)
!15065 = !DILocation(line: 253, column: 20, scope: !15026)
!15066 = !DILocation(line: 253, column: 5, scope: !15026)
!15067 = !DILocation(line: 253, column: 18, scope: !15026)
!15068 = !DILocation(line: 254, column: 5, scope: !15026)
!15069 = !DILocation(line: 255, column: 13, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15026, file: !1436, line: 255, column: 9)
!15071 = !DILocation(line: 255, column: 9, scope: !15026)
!15072 = !DILocation(line: 258, column: 13, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15026, file: !1436, line: 258, column: 9)
!15074 = !DILocation(line: 258, column: 9, scope: !15026)
!15075 = !DILocation(line: 262, column: 45, scope: !15026)
!15076 = !DILocation(line: 262, column: 59, scope: !15026)
!15077 = !DILocation(line: 262, column: 5, scope: !15026)
!15078 = !DILocation(line: 264, column: 47, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15026, file: !1436, line: 264, column: 9)
!15080 = !DILocation(line: 264, column: 34, scope: !15079)
!15081 = !DILocation(line: 264, column: 9, scope: !15026)
!15082 = !DILocation(line: 265, column: 9, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15079, file: !1436, line: 264, column: 102)
!15084 = !DILocation(line: 266, column: 5, scope: !15083)
!15085 = !DILocation(line: 268, column: 45, scope: !15026)
!15086 = !DILocation(line: 268, column: 59, scope: !15026)
!15087 = !DILocation(line: 268, column: 5, scope: !15026)
!15088 = !DILocation(line: 269, column: 44, scope: !15026)
!15089 = !DILocation(line: 269, column: 5, scope: !15026)
!15090 = !DILocation(line: 270, column: 41, scope: !15026)
!15091 = !DILocation(line: 270, column: 5, scope: !15026)
!15092 = !DILocation(line: 272, column: 5, scope: !15026)
!15093 = !DILocation(line: 273, column: 5, scope: !15026)
!15094 = !DILocation(line: 274, column: 15, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15026, file: !1436, line: 273, column: 8)
!15096 = !DILocation(line: 275, column: 9, scope: !15095)
!15097 = !DILocation(line: 276, column: 36, scope: !15095)
!15098 = !DILocation(line: 276, column: 49, scope: !15095)
!15099 = !DILocation(line: 276, column: 9, scope: !15095)
!15100 = !DILocation(line: 277, column: 19, scope: !15026)
!15101 = !DILocation(line: 277, column: 27, scope: !15026)
!15102 = !DILocation(line: 277, column: 5, scope: !15095)
!15103 = distinct !{!15103, !15093, !15104}
!15104 = !DILocation(line: 277, column: 44, scope: !15026)
!15105 = !DILocation(line: 281, column: 15, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15026, file: !1436, line: 281, column: 9)
!15107 = !DILocation(line: 281, column: 9, scope: !15026)
!15108 = !DILocation(line: 282, column: 9, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15106, file: !1436, line: 281, column: 24)
!15110 = !DILocation(line: 283, column: 5, scope: !15109)
!15111 = !DILocation(line: 286, column: 1, scope: !15026)
!15112 = distinct !DISubprogram(name: "sd_disk_read", scope: !1436, file: !1436, line: 424, type: !14629, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15113)
!15113 = !{!15114, !15115, !15116, !15117}
!15114 = !DILocalVariable(name: "pdrv", arg: 1, scope: !15112, file: !1436, line: 425, type: !1283)
!15115 = !DILocalVariable(name: "buff", arg: 2, scope: !15112, file: !1436, line: 426, type: !1282)
!15116 = !DILocalVariable(name: "sector", arg: 3, scope: !15112, file: !1436, line: 427, type: !1279)
!15117 = !DILocalVariable(name: "count", arg: 4, scope: !15112, file: !1436, line: 428, type: !1281)
!15118 = !DILocation(line: 0, scope: !15112)
!15119 = !DILocation(line: 431, column: 19, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15112, file: !1436, line: 431, column: 9)
!15121 = !DILocation(line: 431, column: 28, scope: !15120)
!15122 = !DILocation(line: 434, column: 9, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15112, file: !1436, line: 434, column: 9)
!15124 = !DILocation(line: 434, column: 21, scope: !15123)
!15125 = !DILocation(line: 434, column: 9, scope: !15112)
!15126 = !DILocation(line: 438, column: 11, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15112, file: !1436, line: 438, column: 9)
!15128 = !DILocation(line: 438, column: 20, scope: !15127)
!15129 = !DILocation(line: 438, column: 9, scope: !15112)
!15130 = !DILocation(line: 442, column: 15, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15112, file: !1436, line: 442, column: 9)
!15132 = !DILocation(line: 442, column: 9, scope: !15112)
!15133 = !DILocation(line: 443, column: 14, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15135, file: !1436, line: 443, column: 13)
!15135 = distinct !DILexicalBlock(scope: !15131, file: !1436, line: 442, column: 21)
!15136 = !DILocation(line: 443, column: 38, scope: !15134)
!15137 = !DILocation(line: 444, column: 17, scope: !15134)
!15138 = !DILocation(line: 444, column: 20, scope: !15134)
!15139 = !DILocation(line: 443, column: 13, scope: !15135)
!15140 = !DILocation(line: 448, column: 13, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15142, file: !1436, line: 448, column: 13)
!15142 = distinct !DILexicalBlock(scope: !15131, file: !1436, line: 447, column: 12)
!15143 = !DILocation(line: 448, column: 37, scope: !15141)
!15144 = !DILocation(line: 448, column: 13, scope: !15142)
!15145 = !DILocation(line: 450, column: 22, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15147, file: !1436, line: 450, column: 21)
!15147 = distinct !DILexicalBlock(scope: !15148, file: !1436, line: 449, column: 16)
!15148 = distinct !DILexicalBlock(scope: !15141, file: !1436, line: 448, column: 43)
!15149 = !DILocation(line: 450, column: 21, scope: !15147)
!15150 = !DILocation(line: 453, column: 22, scope: !15147)
!15151 = !DILocation(line: 454, column: 22, scope: !15148)
!15152 = !DILocation(line: 454, column: 13, scope: !15147)
!15153 = distinct !{!15153, !15154, !15155}
!15154 = !DILocation(line: 449, column: 13, scope: !15148)
!15155 = !DILocation(line: 454, column: 29, scope: !15148)
!15156 = !DILocation(line: 455, column: 13, scope: !15148)
!15157 = !DILocation(line: 456, column: 9, scope: !15148)
!15158 = !DILocation(line: 459, column: 5, scope: !15112)
!15159 = !DILocation(line: 461, column: 12, scope: !15112)
!15160 = !DILocation(line: 461, column: 5, scope: !15112)
!15161 = !DILocation(line: 462, column: 1, scope: !15112)
!15162 = distinct !DISubprogram(name: "rcvr_datablock", scope: !1436, file: !1436, line: 384, type: !15163, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15165)
!15163 = !DISubroutineType(types: !15164)
!15164 = !{!1283, !1282, !1281}
!15165 = !{!15166, !15167, !15168, !15169, !15170, !15171}
!15166 = !DILocalVariable(name: "buff", arg: 1, scope: !15162, file: !1436, line: 385, type: !1282)
!15167 = !DILocalVariable(name: "btr", arg: 2, scope: !15162, file: !1436, line: 386, type: !1281)
!15168 = !DILocalVariable(name: "token", scope: !15162, file: !1436, line: 389, type: !1283)
!15169 = !DILocalVariable(name: "start_count", scope: !15162, file: !1436, line: 390, type: !61)
!15170 = !DILocalVariable(name: "end_count", scope: !15162, file: !1436, line: 391, type: !61)
!15171 = !DILocalVariable(name: "count", scope: !15162, file: !1436, line: 392, type: !61)
!15172 = !DILocation(line: 0, scope: !15162)
!15173 = !DILocation(line: 390, column: 5, scope: !15162)
!15174 = !DILocation(line: 390, column: 14, scope: !15162)
!15175 = !DILocation(line: 391, column: 5, scope: !15162)
!15176 = !DILocation(line: 391, column: 14, scope: !15162)
!15177 = !DILocation(line: 392, column: 5, scope: !15162)
!15178 = !DILocation(line: 392, column: 14, scope: !15162)
!15179 = !DILocation(line: 394, column: 5, scope: !15162)
!15180 = !DILocation(line: 395, column: 5, scope: !15162)
!15181 = !DILocation(line: 396, column: 17, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15162, file: !1436, line: 395, column: 8)
!15183 = !DILocation(line: 397, column: 9, scope: !15182)
!15184 = !DILocation(line: 398, column: 36, scope: !15182)
!15185 = !DILocation(line: 398, column: 49, scope: !15182)
!15186 = !DILocation(line: 398, column: 9, scope: !15182)
!15187 = !DILocation(line: 399, column: 21, scope: !15162)
!15188 = !DILocation(line: 399, column: 30, scope: !15162)
!15189 = !DILocation(line: 399, column: 5, scope: !15182)
!15190 = distinct !{!15190, !15180, !15191}
!15191 = !DILocation(line: 399, column: 47, scope: !15162)
!15192 = !DILocation(line: 399, column: 15, scope: !15162)
!15193 = !DILocation(line: 401, column: 15, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15162, file: !1436, line: 401, column: 9)
!15195 = !DILocation(line: 401, column: 9, scope: !15162)
!15196 = !DILocation(line: 402, column: 9, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15194, file: !1436, line: 401, column: 24)
!15198 = !DILocation(line: 403, column: 5, scope: !15197)
!15199 = !DILocation(line: 405, column: 15, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15162, file: !1436, line: 405, column: 9)
!15201 = !DILocation(line: 405, column: 9, scope: !15162)
!15202 = !DILocation(line: 406, column: 9, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15200, file: !1436, line: 405, column: 24)
!15204 = !DILocation(line: 407, column: 9, scope: !15203)
!15205 = !DILocation(line: 410, column: 5, scope: !15162)
!15206 = !DILocation(line: 412, column: 5, scope: !15162)
!15207 = !DILocation(line: 413, column: 5, scope: !15162)
!15208 = !DILocation(line: 415, column: 5, scope: !15162)
!15209 = !DILocation(line: 416, column: 1, scope: !15162)
!15210 = distinct !DISubprogram(name: "sd_disk_write", scope: !1436, file: !1436, line: 504, type: !14647, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15211)
!15211 = !{!15212, !15213, !15214, !15215}
!15212 = !DILocalVariable(name: "pdrv", arg: 1, scope: !15210, file: !1436, line: 505, type: !1283)
!15213 = !DILocalVariable(name: "buff", arg: 2, scope: !15210, file: !1436, line: 506, type: !1285)
!15214 = !DILocalVariable(name: "sector", arg: 3, scope: !15210, file: !1436, line: 507, type: !1279)
!15215 = !DILocalVariable(name: "count", arg: 4, scope: !15210, file: !1436, line: 508, type: !1281)
!15216 = !DILocation(line: 0, scope: !15210)
!15217 = !DILocation(line: 513, column: 18, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15210, file: !1436, line: 513, column: 9)
!15219 = !DILocation(line: 513, column: 26, scope: !15218)
!15220 = !DILocation(line: 516, column: 9, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15210, file: !1436, line: 516, column: 9)
!15222 = !DILocation(line: 516, column: 21, scope: !15221)
!15223 = !DILocation(line: 516, column: 9, scope: !15210)
!15224 = !DILocation(line: 519, column: 21, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15210, file: !1436, line: 519, column: 9)
!15226 = !DILocation(line: 519, column: 9, scope: !15210)
!15227 = !DILocation(line: 523, column: 11, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15210, file: !1436, line: 523, column: 9)
!15229 = !DILocation(line: 523, column: 20, scope: !15228)
!15230 = !DILocation(line: 523, column: 9, scope: !15210)
!15231 = !DILocation(line: 527, column: 15, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15210, file: !1436, line: 527, column: 9)
!15233 = !DILocation(line: 527, column: 9, scope: !15210)
!15234 = !DILocation(line: 528, column: 14, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15236, file: !1436, line: 528, column: 13)
!15236 = distinct !DILexicalBlock(scope: !15232, file: !1436, line: 527, column: 21)
!15237 = !DILocation(line: 528, column: 38, scope: !15235)
!15238 = !DILocation(line: 529, column: 17, scope: !15235)
!15239 = !DILocation(line: 529, column: 20, scope: !15235)
!15240 = !DILocation(line: 528, column: 13, scope: !15236)
!15241 = !DILocation(line: 533, column: 22, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15243, file: !1436, line: 533, column: 13)
!15243 = distinct !DILexicalBlock(scope: !15232, file: !1436, line: 532, column: 12)
!15244 = !DILocation(line: 533, column: 13, scope: !15243)
!15245 = !DILocation(line: 534, column: 13, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15242, file: !1436, line: 533, column: 27)
!15247 = !DILocation(line: 535, column: 13, scope: !15246)
!15248 = !DILocation(line: 536, column: 9, scope: !15246)
!15249 = !DILocation(line: 537, column: 13, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15243, file: !1436, line: 537, column: 13)
!15251 = !DILocation(line: 537, column: 37, scope: !15250)
!15252 = !DILocation(line: 537, column: 13, scope: !15243)
!15253 = !DILocation(line: 539, column: 22, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15255, file: !1436, line: 539, column: 21)
!15255 = distinct !DILexicalBlock(scope: !15256, file: !1436, line: 538, column: 16)
!15256 = distinct !DILexicalBlock(scope: !15250, file: !1436, line: 537, column: 43)
!15257 = !DILocation(line: 539, column: 21, scope: !15255)
!15258 = !DILocation(line: 542, column: 22, scope: !15255)
!15259 = !DILocation(line: 543, column: 22, scope: !15256)
!15260 = !DILocation(line: 543, column: 13, scope: !15255)
!15261 = distinct !{!15261, !15262, !15263}
!15262 = !DILocation(line: 538, column: 13, scope: !15256)
!15263 = !DILocation(line: 543, column: 29, scope: !15256)
!15264 = !DILocation(line: 544, column: 18, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15256, file: !1436, line: 544, column: 17)
!15266 = !DILocation(line: 544, column: 17, scope: !15256)
!15267 = !DILocation(line: 550, column: 5, scope: !15210)
!15268 = !DILocation(line: 552, column: 12, scope: !15210)
!15269 = !DILocation(line: 552, column: 5, scope: !15210)
!15270 = !DILocation(line: 553, column: 1, scope: !15210)
!15271 = distinct !DISubprogram(name: "xmit_datablock", scope: !1436, file: !1436, line: 470, type: !15272, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15274)
!15272 = !DISubroutineType(types: !15273)
!15273 = !{!69, !1285, !1283}
!15274 = !{!15275, !15276, !15277}
!15275 = !DILocalVariable(name: "buff", arg: 1, scope: !15271, file: !1436, line: 471, type: !1285)
!15276 = !DILocalVariable(name: "token", arg: 2, scope: !15271, file: !1436, line: 472, type: !1283)
!15277 = !DILocalVariable(name: "resp", scope: !15271, file: !1436, line: 475, type: !1283)
!15278 = !DILocation(line: 0, scope: !15271)
!15279 = !DILocation(line: 478, column: 9, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15271, file: !1436, line: 478, column: 9)
!15281 = !DILocation(line: 478, column: 22, scope: !15280)
!15282 = !DILocation(line: 478, column: 9, scope: !15271)
!15283 = !DILocation(line: 482, column: 5, scope: !15271)
!15284 = !DILocation(line: 483, column: 15, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15271, file: !1436, line: 483, column: 9)
!15286 = !DILocation(line: 483, column: 9, scope: !15271)
!15287 = !DILocation(line: 484, column: 9, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15285, file: !1436, line: 483, column: 24)
!15289 = !DILocation(line: 486, column: 9, scope: !15288)
!15290 = !DILocation(line: 487, column: 9, scope: !15288)
!15291 = !DILocation(line: 488, column: 16, scope: !15288)
!15292 = !DILocation(line: 489, column: 19, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15288, file: !1436, line: 489, column: 13)
!15294 = !DILocation(line: 489, column: 27, scope: !15293)
!15295 = !DILocation(line: 489, column: 13, scope: !15288)
!15296 = !DILocation(line: 494, column: 5, scope: !15271)
!15297 = !DILocation(line: 495, column: 1, scope: !15271)
!15298 = distinct !DISubprogram(name: "xmit_spi", scope: !1436, file: !1436, line: 77, type: !15299, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15301)
!15299 = !DISubroutineType(types: !15300)
!15300 = !{null, !1283}
!15301 = !{!15302, !15303, !15304}
!15302 = !DILocalVariable(name: "dat", arg: 1, scope: !15298, file: !1436, line: 77, type: !1283)
!15303 = !DILocalVariable(name: "send_data", scope: !15298, file: !1436, line: 79, type: !1283)
!15304 = !DILocalVariable(name: "status", scope: !15298, file: !1436, line: 80, type: !8723)
!15305 = !DILocation(line: 0, scope: !15298)
!15306 = !DILocation(line: 79, column: 5, scope: !15298)
!15307 = !DILocation(line: 82, column: 15, scope: !15298)
!15308 = !DILocation(line: 83, column: 45, scope: !15298)
!15309 = !DILocation(line: 83, column: 59, scope: !15298)
!15310 = !DILocation(line: 83, column: 5, scope: !15298)
!15311 = !DILocation(line: 84, column: 47, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15298, file: !1436, line: 84, column: 9)
!15313 = !DILocation(line: 84, column: 34, scope: !15312)
!15314 = !DILocation(line: 84, column: 9, scope: !15298)
!15315 = !DILocation(line: 85, column: 9, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15312, file: !1436, line: 84, column: 116)
!15317 = !DILocation(line: 86, column: 5, scope: !15316)
!15318 = !DILocation(line: 87, column: 45, scope: !15298)
!15319 = !DILocation(line: 87, column: 59, scope: !15298)
!15320 = !DILocation(line: 87, column: 5, scope: !15298)
!15321 = !DILocation(line: 88, column: 44, scope: !15298)
!15322 = !DILocation(line: 88, column: 5, scope: !15298)
!15323 = !DILocation(line: 89, column: 41, scope: !15298)
!15324 = !DILocation(line: 89, column: 5, scope: !15298)
!15325 = !DILocation(line: 90, column: 1, scope: !15298)
!15326 = distinct !DISubprogram(name: "xmit_spi_m", scope: !1436, file: !1436, line: 94, type: !15327, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15329)
!15327 = !DISubroutineType(types: !15328)
!15328 = !{null, !1285, !1279}
!15329 = !{!15330, !15331, !15332}
!15330 = !DILocalVariable(name: "src", arg: 1, scope: !15326, file: !1436, line: 94, type: !1285)
!15331 = !DILocalVariable(name: "data_len", arg: 2, scope: !15326, file: !1436, line: 94, type: !1279)
!15332 = !DILocalVariable(name: "status", scope: !15326, file: !1436, line: 96, type: !8723)
!15333 = !DILocation(line: 0, scope: !15326)
!15334 = !DILocation(line: 98, column: 45, scope: !15326)
!15335 = !DILocation(line: 98, column: 59, scope: !15326)
!15336 = !DILocation(line: 98, column: 5, scope: !15326)
!15337 = !DILocation(line: 99, column: 47, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15326, file: !1436, line: 99, column: 9)
!15339 = !DILocation(line: 99, column: 34, scope: !15338)
!15340 = !DILocation(line: 99, column: 9, scope: !15326)
!15341 = !DILocation(line: 100, column: 9, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15338, file: !1436, line: 99, column: 114)
!15343 = !DILocation(line: 101, column: 5, scope: !15342)
!15344 = !DILocation(line: 102, column: 45, scope: !15326)
!15345 = !DILocation(line: 102, column: 59, scope: !15326)
!15346 = !DILocation(line: 102, column: 5, scope: !15326)
!15347 = !DILocation(line: 103, column: 44, scope: !15326)
!15348 = !DILocation(line: 103, column: 5, scope: !15326)
!15349 = !DILocation(line: 104, column: 41, scope: !15326)
!15350 = !DILocation(line: 104, column: 5, scope: !15326)
!15351 = !DILocation(line: 105, column: 1, scope: !15326)
!15352 = distinct !DISubprogram(name: "sd_disk_ioctl", scope: !1436, file: !1436, line: 563, type: !14664, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1435, retainedNodes: !15353)
!15353 = !{!15354, !15355, !15356, !15357, !15358, !15359, !15361, !15362}
!15354 = !DILocalVariable(name: "pdrv", arg: 1, scope: !15352, file: !1436, line: 564, type: !1283)
!15355 = !DILocalVariable(name: "cmd", arg: 2, scope: !15352, file: !1436, line: 565, type: !1283)
!15356 = !DILocalVariable(name: "buff", arg: 3, scope: !15352, file: !1436, line: 566, type: !51)
!15357 = !DILocalVariable(name: "res", scope: !15352, file: !1436, line: 569, type: !14631)
!15358 = !DILocalVariable(name: "n", scope: !15352, file: !1436, line: 570, type: !1283)
!15359 = !DILocalVariable(name: "csd", scope: !15352, file: !1436, line: 570, type: !15360)
!15360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 128, elements: !784)
!15361 = !DILocalVariable(name: "ptr", scope: !15352, file: !1436, line: 570, type: !1282)
!15362 = !DILocalVariable(name: "csize", scope: !15352, file: !1436, line: 571, type: !1292)
!15363 = !DILocation(line: 0, scope: !15352)
!15364 = !DILocation(line: 570, column: 5, scope: !15352)
!15365 = !DILocation(line: 570, column: 13, scope: !15352)
!15366 = !DILocation(line: 574, column: 18, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15352, file: !1436, line: 574, column: 9)
!15368 = !DILocation(line: 574, column: 9, scope: !15352)
!15369 = !DILocation(line: 580, column: 13, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15352, file: !1436, line: 580, column: 9)
!15371 = !DILocation(line: 580, column: 9, scope: !15352)
!15372 = !DILocation(line: 581, column: 17, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15370, file: !1436, line: 580, column: 28)
!15374 = !DILocation(line: 581, column: 9, scope: !15373)
!15375 = !DILocation(line: 588, column: 17, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15373, file: !1436, line: 581, column: 23)
!15377 = !DILocation(line: 590, column: 17, scope: !15376)
!15378 = !DILocation(line: 597, column: 9, scope: !15376)
!15379 = !DILocation(line: 599, column: 13, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !1436, line: 599, column: 13)
!15381 = distinct !DILexicalBlock(scope: !15370, file: !1436, line: 598, column: 12)
!15382 = !DILocation(line: 599, column: 25, scope: !15380)
!15383 = !DILocation(line: 599, column: 13, scope: !15381)
!15384 = !DILocation(line: 603, column: 9, scope: !15381)
!15385 = !DILocation(line: 605, column: 22, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15387, file: !1436, line: 605, column: 21)
!15387 = distinct !DILexicalBlock(scope: !15381, file: !1436, line: 603, column: 22)
!15388 = !DILocation(line: 605, column: 40, scope: !15386)
!15389 = !DILocation(line: 605, column: 46, scope: !15386)
!15390 = !DILocation(line: 605, column: 49, scope: !15386)
!15391 = !DILocation(line: 605, column: 21, scope: !15387)
!15392 = !DILocation(line: 606, column: 26, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15394, file: !1436, line: 606, column: 25)
!15394 = distinct !DILexicalBlock(scope: !15386, file: !1436, line: 605, column: 74)
!15395 = !DILocation(line: 606, column: 39, scope: !15393)
!15396 = !DILocation(line: 606, column: 25, scope: !15394)
!15397 = !DILocation(line: 607, column: 33, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15393, file: !1436, line: 606, column: 45)
!15399 = !DILocation(line: 607, column: 49, scope: !15398)
!15400 = !DILocation(line: 607, column: 43, scope: !15398)
!15401 = !DILocation(line: 608, column: 55, scope: !15398)
!15402 = !DILocation(line: 608, column: 26, scope: !15398)
!15403 = !DILocation(line: 608, column: 40, scope: !15398)
!15404 = !DILocation(line: 609, column: 21, scope: !15398)
!15405 = !DILocation(line: 610, column: 30, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15393, file: !1436, line: 609, column: 28)
!15407 = !DILocation(line: 610, column: 37, scope: !15406)
!15408 = !DILocation(line: 610, column: 47, scope: !15406)
!15409 = !DILocation(line: 610, column: 62, scope: !15406)
!15410 = !DILocation(line: 610, column: 43, scope: !15406)
!15411 = !DILocation(line: 610, column: 72, scope: !15406)
!15412 = !DILocation(line: 610, column: 84, scope: !15406)
!15413 = !DILocation(line: 610, column: 68, scope: !15406)
!15414 = !DILocation(line: 611, column: 34, scope: !15406)
!15415 = !DILocation(line: 611, column: 41, scope: !15406)
!15416 = !DILocation(line: 611, column: 56, scope: !15406)
!15417 = !DILocation(line: 611, column: 50, scope: !15406)
!15418 = !DILocation(line: 611, column: 63, scope: !15406)
!15419 = !DILocation(line: 611, column: 79, scope: !15406)
!15420 = !DILocation(line: 611, column: 86, scope: !15406)
!15421 = !DILocation(line: 611, column: 72, scope: !15406)
!15422 = !DILocation(line: 611, column: 91, scope: !15406)
!15423 = !DILocation(line: 611, column: 47, scope: !15406)
!15424 = !DILocation(line: 611, column: 69, scope: !15406)
!15425 = !DILocation(line: 611, column: 98, scope: !15406)
!15426 = !DILocation(line: 612, column: 61, scope: !15406)
!15427 = !DILocation(line: 612, column: 55, scope: !15406)
!15428 = !DILocation(line: 612, column: 26, scope: !15406)
!15429 = !DILocation(line: 612, column: 40, scope: !15406)
!15430 = !DILocation(line: 619, column: 18, scope: !15387)
!15431 = !DILocation(line: 619, column: 31, scope: !15387)
!15432 = !DILocation(line: 621, column: 17, scope: !15387)
!15433 = !DILocation(line: 624, column: 21, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15387, file: !1436, line: 624, column: 21)
!15435 = !DILocation(line: 624, column: 34, scope: !15434)
!15436 = !DILocation(line: 624, column: 21, scope: !15387)
!15437 = !DILocation(line: 630, column: 21, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15387, file: !1436, line: 630, column: 21)
!15439 = !DILocation(line: 630, column: 39, scope: !15438)
!15440 = !DILocation(line: 631, column: 25, scope: !15438)
!15441 = !DILocation(line: 631, column: 28, scope: !15438)
!15442 = !DILocation(line: 630, column: 21, scope: !15387)
!15443 = !DILocation(line: 637, column: 21, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15387, file: !1436, line: 637, column: 21)
!15445 = !DILocation(line: 637, column: 40, scope: !15444)
!15446 = !DILocation(line: 638, column: 25, scope: !15444)
!15447 = !DILocation(line: 638, column: 28, scope: !15444)
!15448 = !DILocation(line: 637, column: 21, scope: !15387)
!15449 = !DILocation(line: 644, column: 21, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15387, file: !1436, line: 644, column: 21)
!15451 = !DILocation(line: 644, column: 40, scope: !15450)
!15452 = !DILocation(line: 644, column: 21, scope: !15387)
!15453 = !DILocation(line: 646, column: 34, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15455, file: !1436, line: 645, column: 45)
!15455 = distinct !DILexicalBlock(scope: !15456, file: !1436, line: 645, column: 21)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !1436, line: 645, column: 21)
!15457 = distinct !DILexicalBlock(scope: !15450, file: !1436, line: 644, column: 46)
!15458 = !DILocation(line: 646, column: 29, scope: !15454)
!15459 = !DILocation(line: 646, column: 32, scope: !15454)
!15460 = !DILocation(line: 645, column: 41, scope: !15455)
!15461 = !DILocation(line: 645, column: 35, scope: !15455)
!15462 = !DILocation(line: 645, column: 21, scope: !15456)
!15463 = distinct !{!15463, !15462, !15464}
!15464 = !DILocation(line: 647, column: 21, scope: !15456)
!15465 = !DILocation(line: 570, column: 23, scope: !15352)
!15466 = !DILocation(line: 652, column: 24, scope: !15387)
!15467 = !DILocation(line: 652, column: 22, scope: !15387)
!15468 = !DILocation(line: 654, column: 17, scope: !15387)
!15469 = !DILocation(line: 660, column: 9, scope: !15381)
!15470 = !DILocation(line: 664, column: 1, scope: !15352)
!15471 = distinct !DISubprogram(name: "main", scope: !1452, file: !1452, line: 144, type: !4869, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !2550)
!15472 = !DILocation(line: 148, column: 5, scope: !15471)
!15473 = !DILocation(line: 156, column: 5, scope: !15471)
!15474 = !DILocation(line: 158, column: 5, scope: !15471)
!15475 = !DILocation(line: 159, column: 5, scope: !15471)
!15476 = !DILocation(line: 159, column: 5, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15478, file: !1452, line: 159, column: 5)
!15478 = distinct !DILexicalBlock(scope: !15471, file: !1452, line: 159, column: 5)
!15479 = distinct !{!15479, !15480, !15481}
!15480 = !DILocation(line: 159, column: 5, scope: !15478)
!15481 = !DILocation(line: 159, column: 15, scope: !15478)
!15482 = distinct !DISubprogram(name: "fatfs_read_write_file", scope: !1452, file: !1452, line: 69, type: !154, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !15483)
!15483 = !{!15484, !15485, !15486, !15487, !15488, !15492}
!15484 = !DILocalVariable(name: "res", scope: !15482, file: !1452, line: 71, type: !1284)
!15485 = !DILocalVariable(name: "temp_count", scope: !15482, file: !1452, line: 72, type: !1281)
!15486 = !DILocalVariable(name: "length_written", scope: !15482, file: !1452, line: 72, type: !1281)
!15487 = !DILocalVariable(name: "length_read", scope: !15482, file: !1452, line: 72, type: !1281)
!15488 = !DILocalVariable(name: "buffer_src", scope: !15482, file: !1452, line: 73, type: !15489)
!15489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1283, size: 8192, elements: !15490)
!15490 = !{!15491}
!15491 = !DISubrange(count: 1024)
!15492 = !DILocalVariable(name: "buffer_dst", scope: !15482, file: !1452, line: 74, type: !15489)
!15493 = !DILocation(line: 72, column: 5, scope: !15482)
!15494 = !DILocation(line: 73, column: 5, scope: !15482)
!15495 = !DILocation(line: 73, column: 10, scope: !15482)
!15496 = !DILocation(line: 74, column: 5, scope: !15482)
!15497 = !DILocation(line: 74, column: 10, scope: !15482)
!15498 = !DILocation(line: 0, scope: !15482)
!15499 = !DILocation(line: 76, column: 5, scope: !15500)
!15500 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 76, column: 5)
!15501 = !DILocation(line: 77, column: 34, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15503, file: !1452, line: 76, column: 59)
!15503 = distinct !DILexicalBlock(scope: !15500, file: !1452, line: 76, column: 5)
!15504 = !DILocation(line: 77, column: 9, scope: !15502)
!15505 = !DILocation(line: 77, column: 32, scope: !15502)
!15506 = !DILocation(line: 76, column: 55, scope: !15503)
!15507 = !DILocation(line: 76, column: 37, scope: !15503)
!15508 = distinct !{!15508, !15499, !15509}
!15509 = !DILocation(line: 78, column: 5, scope: !15500)
!15510 = !DILocation(line: 81, column: 11, scope: !15482)
!15511 = !DILocation(line: 82, column: 15, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 82, column: 9)
!15513 = !DILocation(line: 82, column: 9, scope: !15482)
!15514 = !DILocation(line: 83, column: 9, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15516, file: !1452, line: 83, column: 9)
!15516 = distinct !DILexicalBlock(scope: !15512, file: !1452, line: 82, column: 23)
!15517 = !DILocation(line: 84, column: 9, scope: !15516)
!15518 = !DILocation(line: 88, column: 11, scope: !15482)
!15519 = !DILocation(line: 89, column: 15, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 89, column: 9)
!15521 = !DILocation(line: 89, column: 9, scope: !15482)
!15522 = !DILocation(line: 90, column: 9, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15524, file: !1452, line: 90, column: 9)
!15524 = distinct !DILexicalBlock(scope: !15520, file: !1452, line: 89, column: 23)
!15525 = !DILocation(line: 91, column: 9, scope: !15524)
!15526 = !DILocation(line: 94, column: 11, scope: !15482)
!15527 = !DILocation(line: 95, column: 15, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 95, column: 9)
!15529 = !DILocation(line: 95, column: 9, scope: !15482)
!15530 = !DILocation(line: 96, column: 9, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15532, file: !1452, line: 96, column: 9)
!15532 = distinct !DILexicalBlock(scope: !15528, file: !1452, line: 95, column: 23)
!15533 = !DILocation(line: 97, column: 9, scope: !15532)
!15534 = !DILocation(line: 101, column: 11, scope: !15482)
!15535 = !DILocation(line: 102, column: 15, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 102, column: 9)
!15537 = !DILocation(line: 102, column: 9, scope: !15482)
!15538 = !DILocation(line: 103, column: 9, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15540, file: !1452, line: 103, column: 9)
!15540 = distinct !DILexicalBlock(scope: !15536, file: !1452, line: 102, column: 23)
!15541 = !DILocation(line: 104, column: 15, scope: !15540)
!15542 = !DILocation(line: 105, column: 9, scope: !15540)
!15543 = !DILocation(line: 109, column: 11, scope: !15482)
!15544 = !DILocation(line: 110, column: 15, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 110, column: 9)
!15546 = !DILocation(line: 110, column: 9, scope: !15482)
!15547 = !DILocation(line: 111, column: 9, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15549, file: !1452, line: 111, column: 9)
!15549 = distinct !DILexicalBlock(scope: !15545, file: !1452, line: 110, column: 23)
!15550 = !DILocation(line: 112, column: 15, scope: !15549)
!15551 = !DILocation(line: 113, column: 9, scope: !15549)
!15552 = !DILocation(line: 116, column: 11, scope: !15482)
!15553 = !DILocation(line: 117, column: 15, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 117, column: 9)
!15555 = !DILocation(line: 117, column: 9, scope: !15482)
!15556 = !DILocation(line: 118, column: 9, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15558, file: !1452, line: 118, column: 9)
!15558 = distinct !DILexicalBlock(scope: !15554, file: !1452, line: 117, column: 23)
!15559 = !DILocation(line: 119, column: 15, scope: !15558)
!15560 = !DILocation(line: 120, column: 9, scope: !15558)
!15561 = !DILocation(line: 124, column: 11, scope: !15482)
!15562 = !DILocation(line: 125, column: 15, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 125, column: 9)
!15564 = !DILocation(line: 125, column: 9, scope: !15482)
!15565 = !DILocation(line: 126, column: 9, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15567, file: !1452, line: 126, column: 9)
!15567 = distinct !DILexicalBlock(scope: !15563, file: !1452, line: 125, column: 23)
!15568 = !DILocation(line: 127, column: 15, scope: !15567)
!15569 = !DILocation(line: 128, column: 9, scope: !15567)
!15570 = !DILocation(line: 131, column: 55, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15572, file: !1452, line: 131, column: 5)
!15572 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 131, column: 5)
!15573 = !DILocation(line: 131, column: 37, scope: !15571)
!15574 = !DILocation(line: 131, column: 5, scope: !15572)
!15575 = distinct !{!15575, !15574, !15576}
!15576 = !DILocation(line: 137, column: 5, scope: !15572)
!15577 = !DILocation(line: 132, column: 13, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15579, file: !1452, line: 132, column: 13)
!15579 = distinct !DILexicalBlock(scope: !15571, file: !1452, line: 131, column: 59)
!15580 = !DILocation(line: 132, column: 39, scope: !15578)
!15581 = !DILocation(line: 132, column: 36, scope: !15578)
!15582 = !DILocation(line: 132, column: 13, scope: !15579)
!15583 = !DILocation(line: 133, column: 13, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !1452, line: 133, column: 13)
!15585 = distinct !DILexicalBlock(scope: !15578, file: !1452, line: 132, column: 63)
!15586 = !DILocation(line: 134, column: 19, scope: !15585)
!15587 = !DILocation(line: 135, column: 13, scope: !15585)
!15588 = !DILocation(line: 138, column: 11, scope: !15482)
!15589 = !DILocation(line: 139, column: 5, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15482, file: !1452, line: 139, column: 5)
!15591 = !DILocation(line: 140, column: 1, scope: !15482)
!15592 = distinct !DISubprogram(name: "SysTick_Set", scope: !1515, file: !1515, line: 70, type: !1042, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !15593)
!15593 = !{!15594, !15595}
!15594 = !DILocalVariable(name: "ticks", arg: 1, scope: !15592, file: !1515, line: 70, type: !61)
!15595 = !DILocalVariable(name: "val", scope: !15592, file: !1515, line: 72, type: !61)
!15596 = !DILocation(line: 0, scope: !15592)
!15597 = !DILocation(line: 74, column: 16, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15592, file: !1515, line: 74, column: 9)
!15599 = !DILocation(line: 74, column: 21, scope: !15598)
!15600 = !DILocation(line: 74, column: 9, scope: !15592)
!15601 = !DILocation(line: 78, column: 20, scope: !15592)
!15602 = !DILocation(line: 80, column: 19, scope: !15592)
!15603 = !DILocation(line: 83, column: 20, scope: !15592)
!15604 = !DILocation(line: 84, column: 20, scope: !15592)
!15605 = !DILocation(line: 86, column: 19, scope: !15592)
!15606 = !DILocation(line: 88, column: 5, scope: !15592)
!15607 = !DILocation(line: 89, column: 1, scope: !15592)
!15608 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !1515, file: !1515, line: 98, type: !154, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !2550)
!15609 = !DILocation(line: 100, column: 28, scope: !15608)
!15610 = !DILocation(line: 101, column: 1, scope: !15608)
!15611 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !1515, file: !1515, line: 110, type: !2531, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !2550)
!15612 = !DILocation(line: 112, column: 12, scope: !15611)
!15613 = !DILocation(line: 112, column: 5, scope: !15611)
!15614 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1515, file: !1515, line: 122, type: !154, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !2550)
!15615 = !DILocation(line: 124, column: 23, scope: !15614)
!15616 = !DILocation(line: 124, column: 21, scope: !15614)
!15617 = !DILocation(line: 125, column: 1, scope: !15614)
!15618 = distinct !DISubprogram(name: "SystemInit", scope: !1515, file: !1515, line: 136, type: !154, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !2550)
!15619 = !DILocation(line: 140, column: 16, scope: !15618)
!15620 = !DILocation(line: 144, column: 16, scope: !15618)
!15621 = !DILocation(line: 147, column: 16, scope: !15618)
!15622 = !DILocation(line: 150, column: 1, scope: !15618)
!15623 = distinct !DISubprogram(name: "CachePreInit", scope: !1515, file: !1515, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !2550)
!15624 = !DILocation(line: 161, column: 22, scope: !15623)
!15625 = !DILocation(line: 164, column: 21, scope: !15623)
!15626 = !DILocation(line: 167, column: 21, scope: !15623)
!15627 = !DILocation(line: 170, column: 29, scope: !15623)
!15628 = !DILocation(line: 171, column: 33, scope: !15623)
!15629 = !DILocation(line: 173, column: 28, scope: !15623)
!15630 = !DILocation(line: 178, column: 30, scope: !15623)
!15631 = !DILocation(line: 192, column: 1, scope: !15623)
!15632 = distinct !DISubprogram(name: "__io_putchar", scope: !2487, file: !2487, line: 72, type: !5564, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !15633)
!15633 = !{!15634}
!15634 = !DILocalVariable(name: "ch", arg: 1, scope: !15632, file: !2487, line: 72, type: !7)
!15635 = !DILocation(line: 0, scope: !15632)
!15636 = !DILocation(line: 77, column: 35, scope: !15632)
!15637 = !DILocation(line: 77, column: 5, scope: !15632)
!15638 = !DILocation(line: 78, column: 12, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15632, file: !2487, line: 78, column: 9)
!15640 = !DILocation(line: 78, column: 9, scope: !15632)
!15641 = !DILocation(line: 79, column: 9, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15639, file: !2487, line: 78, column: 21)
!15643 = !DILocation(line: 80, column: 5, scope: !15642)
!15644 = !DILocation(line: 81, column: 5, scope: !15632)
!15645 = distinct !DISubprogram(name: "system_init", scope: !2487, file: !2487, line: 213, type: !154, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !2550)
!15646 = !DILocation(line: 216, column: 5, scope: !15645)
!15647 = !DILocation(line: 219, column: 5, scope: !15645)
!15648 = !DILocation(line: 227, column: 5, scope: !15645)
!15649 = !DILocation(line: 228, column: 1, scope: !15645)
!15650 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2487, file: !2487, line: 90, type: !154, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !2550)
!15651 = !DILocation(line: 93, column: 5, scope: !15650)
!15652 = !DILocation(line: 96, column: 5, scope: !15650)
!15653 = !DILocation(line: 99, column: 5, scope: !15650)
!15654 = !DILocation(line: 100, column: 1, scope: !15650)
!15655 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2487, file: !2487, line: 149, type: !154, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !2550)
!15656 = !DILocation(line: 152, column: 9, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15655, file: !2487, line: 152, column: 9)
!15658 = !DILocation(line: 160, column: 5, scope: !15655)
!15659 = !DILocation(line: 174, column: 5, scope: !15655)
!15660 = !DILocation(line: 177, column: 5, scope: !15655)
!15661 = !DILocation(line: 178, column: 1, scope: !15655)
!15662 = distinct !DISubprogram(name: "_main_sys_random_init", scope: !2487, file: !2487, line: 185, type: !154, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !15663)
!15663 = !{!15664, !15665}
!15664 = !DILocalVariable(name: "seed", scope: !15662, file: !2487, line: 189, type: !61)
!15665 = !DILocalVariable(name: "s", scope: !15662, file: !2487, line: 190, type: !4525)
!15666 = !DILocation(line: 189, column: 5, scope: !15662)
!15667 = !DILocation(line: 192, column: 9, scope: !15662)
!15668 = !DILocation(line: 0, scope: !15662)
!15669 = !DILocation(line: 194, column: 11, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15662, file: !2487, line: 194, column: 9)
!15671 = !DILocation(line: 194, column: 9, scope: !15662)
!15672 = !DILocation(line: 195, column: 13, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15670, file: !2487, line: 194, column: 34)
!15674 = !DILocation(line: 198, column: 9, scope: !15662)
!15675 = !DILocation(line: 199, column: 29, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15677, file: !2487, line: 198, column: 34)
!15677 = distinct !DILexicalBlock(scope: !15662, file: !2487, line: 198, column: 9)
!15678 = !DILocation(line: 199, column: 9, scope: !15676)
!15679 = !DILocation(line: 202, column: 9, scope: !15662)
!15680 = !DILocation(line: 203, column: 9, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15682, file: !2487, line: 203, column: 9)
!15682 = distinct !DILexicalBlock(scope: !15683, file: !2487, line: 202, column: 34)
!15683 = distinct !DILexicalBlock(scope: !15662, file: !2487, line: 202, column: 9)
!15684 = !DILocation(line: 204, column: 5, scope: !15682)
!15685 = !DILocation(line: 206, column: 1, scope: !15662)
!15686 = distinct !DISubprogram(name: "cache_enable", scope: !2487, file: !2487, line: 111, type: !15687, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !15689)
!15687 = !DISubroutineType(types: !15688)
!15688 = !{!355, !7713}
!15689 = !{!15690, !15691, !15692, !15693}
!15690 = !DILocalVariable(name: "cache_size", arg: 1, scope: !15686, file: !2487, line: 111, type: !7713)
!15691 = !DILocalVariable(name: "region", scope: !15686, file: !2487, line: 113, type: !2490)
!15692 = !DILocalVariable(name: "region_number", scope: !15686, file: !2487, line: 113, type: !2490)
!15693 = !DILocalVariable(name: "region_cfg_tbl", scope: !15686, file: !2487, line: 115, type: !15694)
!15694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15695, size: 64, elements: !775)
!15695 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !712, line: 222, baseType: !15696)
!15696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !712, line: 219, size: 64, elements: !15697)
!15697 = !{!15698, !15699}
!15698 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !15696, file: !712, line: 220, baseType: !61, size: 32)
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !15696, file: !712, line: 221, baseType: !61, size: 32, offset: 32)
!15700 = !DILocation(line: 0, scope: !15686)
!15701 = !DILocation(line: 115, column: 5, scope: !15686)
!15702 = !DILocation(line: 115, column: 31, scope: !15686)
!15703 = !DILocation(line: 129, column: 5, scope: !15686)
!15704 = !DILocation(line: 132, column: 5, scope: !15686)
!15705 = !DILocation(line: 134, column: 42, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15707, file: !2487, line: 133, column: 73)
!15707 = distinct !DILexicalBlock(scope: !15708, file: !2487, line: 133, column: 5)
!15708 = distinct !DILexicalBlock(scope: !15686, file: !2487, line: 133, column: 5)
!15709 = !DILocation(line: 134, column: 9, scope: !15706)
!15710 = !DILocation(line: 135, column: 9, scope: !15706)
!15711 = !DILocation(line: 137, column: 5, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15686, file: !2487, line: 137, column: 5)
!15713 = !DILocation(line: 138, column: 9, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15715, file: !2487, line: 137, column: 53)
!15715 = distinct !DILexicalBlock(scope: !15712, file: !2487, line: 137, column: 5)
!15716 = !DILocation(line: 137, column: 49, scope: !15715)
!15717 = !DILocation(line: 137, column: 19, scope: !15715)
!15718 = distinct !{!15718, !15711, !15719}
!15719 = !DILocation(line: 139, column: 5, scope: !15712)
!15720 = !DILocation(line: 140, column: 5, scope: !15686)
!15721 = !DILocation(line: 142, column: 1, scope: !15686)
!15722 = distinct !DISubprogram(name: "_close", scope: !1575, file: !1575, line: 45, type: !5564, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15723)
!15723 = !{!15724}
!15724 = !DILocalVariable(name: "file", arg: 1, scope: !15722, file: !1575, line: 45, type: !7)
!15725 = !DILocation(line: 0, scope: !15722)
!15726 = !DILocation(line: 47, column: 5, scope: !15722)
!15727 = distinct !DISubprogram(name: "_fstat", scope: !1575, file: !1575, line: 50, type: !15728, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15776)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{!7, !7, !15730}
!15730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15731, size: 32)
!15731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !15732, line: 27, size: 704, elements: !15733)
!15732 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!15733 = !{!15734, !15737, !15740, !15743, !15746, !15749, !15752, !15753, !15756, !15766, !15767, !15768, !15771, !15774}
!15734 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15731, file: !15732, line: 29, baseType: !15735, size: 16)
!15735 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !1579, line: 161, baseType: !15736)
!15736 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1617, line: 56, baseType: !1594)
!15737 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15731, file: !15732, line: 30, baseType: !15738, size: 16, offset: 16)
!15738 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !1579, line: 139, baseType: !15739)
!15739 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1617, line: 75, baseType: !654)
!15740 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15731, file: !15732, line: 31, baseType: !15741, size: 32, offset: 32)
!15741 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !1579, line: 189, baseType: !15742)
!15742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1617, line: 90, baseType: !62)
!15743 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15731, file: !15732, line: 32, baseType: !15744, size: 16, offset: 64)
!15744 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !1579, line: 194, baseType: !15745)
!15745 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1617, line: 209, baseType: !654)
!15746 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15731, file: !15732, line: 33, baseType: !15747, size: 16, offset: 80)
!15747 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !1579, line: 165, baseType: !15748)
!15748 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1617, line: 60, baseType: !654)
!15749 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15731, file: !15732, line: 34, baseType: !15750, size: 16, offset: 96)
!15750 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !1579, line: 169, baseType: !15751)
!15751 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1617, line: 63, baseType: !654)
!15752 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15731, file: !15732, line: 35, baseType: !15735, size: 16, offset: 112)
!15753 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15731, file: !15732, line: 36, baseType: !15754, size: 32, offset: 128)
!15754 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1579, line: 157, baseType: !15755)
!15755 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1617, line: 102, baseType: !1634)
!15756 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15731, file: !15732, line: 42, baseType: !15757, size: 128, offset: 192)
!15757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !15758, line: 47, size: 128, elements: !15759)
!15758 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!15759 = !{!15760, !15765}
!15760 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15757, file: !15758, line: 48, baseType: !15761, size: 64)
!15761 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !15762, line: 42, baseType: !15763)
!15762 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!15763 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !57, line: 200, baseType: !15764)
!15764 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!15765 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15757, file: !15758, line: 49, baseType: !465, size: 32, offset: 64)
!15766 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15731, file: !15732, line: 43, baseType: !15757, size: 128, offset: 320)
!15767 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15731, file: !15732, line: 44, baseType: !15757, size: 128, offset: 448)
!15768 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15731, file: !15732, line: 45, baseType: !15769, size: 32, offset: 576)
!15769 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !1579, line: 102, baseType: !15770)
!15770 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1617, line: 34, baseType: !465)
!15771 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15731, file: !15732, line: 46, baseType: !15772, size: 32, offset: 608)
!15772 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !1579, line: 97, baseType: !15773)
!15773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1617, line: 30, baseType: !465)
!15774 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !15731, file: !15732, line: 48, baseType: !15775, size: 64, offset: 640)
!15775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 64, elements: !340)
!15776 = !{!15777, !15778}
!15777 = !DILocalVariable(name: "file", arg: 1, scope: !15727, file: !1575, line: 50, type: !7)
!15778 = !DILocalVariable(name: "st", arg: 2, scope: !15727, file: !1575, line: 50, type: !15730)
!15779 = !DILocation(line: 0, scope: !15727)
!15780 = !DILocation(line: 52, column: 5, scope: !15727)
!15781 = distinct !DISubprogram(name: "_isatty", scope: !1575, file: !1575, line: 56, type: !5564, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15782)
!15782 = !{!15783}
!15783 = !DILocalVariable(name: "file", arg: 1, scope: !15781, file: !1575, line: 56, type: !7)
!15784 = !DILocation(line: 0, scope: !15781)
!15785 = !DILocation(line: 58, column: 5, scope: !15781)
!15786 = distinct !DISubprogram(name: "_lseek", scope: !1575, file: !1575, line: 61, type: !15787, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15789)
!15787 = !DISubroutineType(types: !15788)
!15788 = !{!7, !7, !7, !7}
!15789 = !{!15790, !15791, !15792}
!15790 = !DILocalVariable(name: "file", arg: 1, scope: !15786, file: !1575, line: 61, type: !7)
!15791 = !DILocalVariable(name: "ptr", arg: 2, scope: !15786, file: !1575, line: 61, type: !7)
!15792 = !DILocalVariable(name: "dir", arg: 3, scope: !15786, file: !1575, line: 61, type: !7)
!15793 = !DILocation(line: 0, scope: !15786)
!15794 = !DILocation(line: 63, column: 5, scope: !15786)
!15795 = distinct !DISubprogram(name: "_open", scope: !1575, file: !1575, line: 66, type: !15796, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15798)
!15796 = !DISubroutineType(types: !15797)
!15797 = !{!7, !662, !7, !7}
!15798 = !{!15799, !15800, !15801}
!15799 = !DILocalVariable(name: "name", arg: 1, scope: !15795, file: !1575, line: 66, type: !662)
!15800 = !DILocalVariable(name: "flags", arg: 2, scope: !15795, file: !1575, line: 66, type: !7)
!15801 = !DILocalVariable(name: "mode", arg: 3, scope: !15795, file: !1575, line: 66, type: !7)
!15802 = !DILocation(line: 0, scope: !15795)
!15803 = !DILocation(line: 68, column: 5, scope: !15795)
!15804 = distinct !DISubprogram(name: "_read", scope: !1575, file: !1575, line: 71, type: !15805, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15807)
!15805 = !DISubroutineType(types: !15806)
!15806 = !{!7, !7, !491, !7}
!15807 = !{!15808, !15809, !15810}
!15808 = !DILocalVariable(name: "file", arg: 1, scope: !15804, file: !1575, line: 71, type: !7)
!15809 = !DILocalVariable(name: "ptr", arg: 2, scope: !15804, file: !1575, line: 71, type: !491)
!15810 = !DILocalVariable(name: "len", arg: 3, scope: !15804, file: !1575, line: 71, type: !7)
!15811 = !DILocation(line: 0, scope: !15804)
!15812 = !DILocation(line: 73, column: 5, scope: !15804)
!15813 = distinct !DISubprogram(name: "_write", scope: !1575, file: !1575, line: 86, type: !15805, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15814)
!15814 = !{!15815, !15816, !15817, !15818}
!15815 = !DILocalVariable(name: "file", arg: 1, scope: !15813, file: !1575, line: 86, type: !7)
!15816 = !DILocalVariable(name: "ptr", arg: 2, scope: !15813, file: !1575, line: 86, type: !491)
!15817 = !DILocalVariable(name: "len", arg: 3, scope: !15813, file: !1575, line: 86, type: !7)
!15818 = !DILocalVariable(name: "i", scope: !15813, file: !1575, line: 88, type: !7)
!15819 = !DILocation(line: 0, scope: !15813)
!15820 = !DILocation(line: 90, column: 19, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15822, file: !1575, line: 90, column: 5)
!15822 = distinct !DILexicalBlock(scope: !15813, file: !1575, line: 90, column: 5)
!15823 = !DILocation(line: 90, column: 5, scope: !15822)
!15824 = !DILocation(line: 91, column: 26, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15821, file: !1575, line: 90, column: 31)
!15826 = !DILocation(line: 91, column: 22, scope: !15825)
!15827 = !DILocation(line: 91, column: 9, scope: !15825)
!15828 = !DILocation(line: 90, column: 27, scope: !15821)
!15829 = distinct !{!15829, !15823, !15830}
!15830 = !DILocation(line: 92, column: 5, scope: !15822)
!15831 = !DILocation(line: 94, column: 5, scope: !15813)
!15832 = !DILocation(line: 0, scope: !1574)
!15833 = !DILocation(line: 105, column: 5, scope: !1574)
!15834 = !{i64 3455}
!15835 = !DILocation(line: 107, column: 14, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !1574, file: !1575, line: 107, column: 9)
!15837 = !DILocation(line: 107, column: 11, scope: !15836)
!15838 = !DILocation(line: 107, column: 9, scope: !1574)
!15839 = !DILocation(line: 113, column: 32, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !1574, file: !1575, line: 113, column: 9)
!15841 = !DILocation(line: 113, column: 15, scope: !15840)
!15842 = !DILocation(line: 124, column: 1, scope: !1574)
!15843 = !DILocation(line: 113, column: 9, scope: !1574)
!15844 = distinct !DISubprogram(name: "_exit", scope: !1575, file: !1575, line: 126, type: !1717, scopeLine: 127, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15845)
!15845 = !{!15846}
!15846 = !DILocalVariable(name: "__status", arg: 1, scope: !15844, file: !1575, line: 126, type: !7)
!15847 = !DILocation(line: 0, scope: !15844)
!15848 = !DILocation(line: 128, column: 5, scope: !15844)
!15849 = !DILocation(line: 129, column: 5, scope: !15844)
!15850 = distinct !{!15850, !15849, !15851}
!15851 = !DILocation(line: 131, column: 5, scope: !15844)
!15852 = distinct !DISubprogram(name: "_kill", scope: !1575, file: !1575, line: 135, type: !15853, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !15855)
!15853 = !DISubroutineType(types: !15854)
!15854 = !{!7, !7, !7}
!15855 = !{!15856, !15857}
!15856 = !DILocalVariable(name: "pid", arg: 1, scope: !15852, file: !1575, line: 135, type: !7)
!15857 = !DILocalVariable(name: "sig", arg: 2, scope: !15852, file: !1575, line: 135, type: !7)
!15858 = !DILocation(line: 0, scope: !15852)
!15859 = !DILocation(line: 137, column: 5, scope: !15852)
!15860 = !DILocation(line: 138, column: 5, scope: !15852)
!15861 = distinct !DISubprogram(name: "_getpid", scope: !1575, file: !1575, line: 142, type: !15862, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !2550)
!15862 = !DISubroutineType(types: !15863)
!15863 = !{!15864}
!15864 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !1579, line: 174, baseType: !15865)
!15865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !1617, line: 52, baseType: !7)
!15866 = !DILocation(line: 144, column: 5, scope: !15861)
!15867 = !DILocation(line: 145, column: 5, scope: !15861)
!15868 = distinct !DISubprogram(name: "xTaskGenericCreate", scope: !1777, file: !1777, line: 547, type: !15869, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !15887)
!15869 = !DISubroutineType(types: !15870)
!15870 = !{!1807, !15871, !661, !15873, !15874, !1800, !15875, !15877, !15878}
!15871 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !15872, line: 77, baseType: !944)
!15872 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/fatfs_read_write_file/GCC")
!15873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1802)
!15874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!15875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15876)
!15876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!15877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1804)
!15878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15879)
!15879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15880, size: 32)
!15880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15881)
!15881 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !1785, line: 148, baseType: !15882)
!15882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !1785, line: 143, size: 96, elements: !15883)
!15883 = !{!15884, !15885, !15886}
!15884 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !15882, file: !1785, line: 145, baseType: !51, size: 32)
!15885 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !15882, file: !1785, line: 146, baseType: !61, size: 32, offset: 32)
!15886 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !15882, file: !1785, line: 147, baseType: !61, size: 32, offset: 64)
!15887 = !{!15888, !15889, !15890, !15891, !15892, !15893, !15894, !15895, !15896, !15897, !15898}
!15888 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !15868, file: !1777, line: 547, type: !15871)
!15889 = !DILocalVariable(name: "pcName", arg: 2, scope: !15868, file: !1777, line: 547, type: !661)
!15890 = !DILocalVariable(name: "usStackDepth", arg: 3, scope: !15868, file: !1777, line: 547, type: !15873)
!15891 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !15868, file: !1777, line: 547, type: !15874)
!15892 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !15868, file: !1777, line: 547, type: !1800)
!15893 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !15868, file: !1777, line: 547, type: !15875)
!15894 = !DILocalVariable(name: "puxStackBuffer", arg: 7, scope: !15868, file: !1777, line: 547, type: !15877)
!15895 = !DILocalVariable(name: "xRegions", arg: 8, scope: !15868, file: !1777, line: 547, type: !15878)
!15896 = !DILocalVariable(name: "xReturn", scope: !15868, file: !1777, line: 549, type: !1807)
!15897 = !DILocalVariable(name: "pxNewTCB", scope: !15868, file: !1777, line: 550, type: !1808)
!15898 = !DILocalVariable(name: "pxTopOfStack", scope: !15868, file: !1777, line: 551, type: !1804)
!15899 = !DILocation(line: 0, scope: !15868)
!15900 = !DILocation(line: 553, column: 2, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15868, file: !1777, line: 553, column: 2)
!15902 = !DILocation(line: 553, column: 2, scope: !15868)
!15903 = !DILocation(line: 553, column: 2, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15901, file: !1777, line: 553, column: 2)
!15905 = !DILocation(line: 554, column: 2, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15868, file: !1777, line: 554, column: 2)
!15907 = !DILocation(line: 554, column: 2, scope: !15868)
!15908 = !DILocation(line: 554, column: 2, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15906, file: !1777, line: 554, column: 2)
!15910 = !DILocation(line: 558, column: 13, scope: !15868)
!15911 = !DILocation(line: 560, column: 15, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15868, file: !1777, line: 560, column: 6)
!15913 = !DILocation(line: 560, column: 6, scope: !15868)
!15914 = !DILocation(line: 596, column: 29, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15916, file: !1777, line: 595, column: 3)
!15916 = distinct !DILexicalBlock(scope: !15912, file: !1777, line: 561, column: 2)
!15917 = !DILocation(line: 596, column: 41, scope: !15915)
!15918 = !DILocation(line: 596, column: 54, scope: !15915)
!15919 = !DILocation(line: 596, column: 37, scope: !15915)
!15920 = !DILocation(line: 597, column: 41, scope: !15915)
!15921 = !DILocation(line: 597, column: 82, scope: !15915)
!15922 = !DILocation(line: 597, column: 19, scope: !15915)
!15923 = !DILocation(line: 617, column: 3, scope: !15916)
!15924 = !DILocation(line: 629, column: 29, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15916, file: !1777, line: 628, column: 3)
!15926 = !DILocation(line: 629, column: 14, scope: !15925)
!15927 = !DILocation(line: 629, column: 27, scope: !15925)
!15928 = !DILocation(line: 633, column: 32, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15916, file: !1777, line: 633, column: 7)
!15930 = !DILocation(line: 633, column: 7, scope: !15916)
!15931 = !DILocation(line: 638, column: 19, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15929, file: !1777, line: 634, column: 3)
!15933 = !DILocation(line: 639, column: 3, scope: !15932)
!15934 = !DILocation(line: 647, column: 3, scope: !15916)
!15935 = !DILocation(line: 649, column: 26, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15916, file: !1777, line: 648, column: 3)
!15937 = !DILocation(line: 650, column: 8, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15936, file: !1777, line: 650, column: 8)
!15939 = !DILocation(line: 650, column: 21, scope: !15938)
!15940 = !DILocation(line: 650, column: 8, scope: !15936)
!15941 = !DILocation(line: 654, column: 18, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15938, file: !1777, line: 651, column: 4)
!15943 = !DILocation(line: 656, column: 9, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15942, file: !1777, line: 656, column: 9)
!15945 = !DILocation(line: 656, column: 32, scope: !15944)
!15946 = !DILocation(line: 656, column: 9, scope: !15942)
!15947 = !DILocation(line: 661, column: 6, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15944, file: !1777, line: 657, column: 5)
!15949 = !DILocation(line: 662, column: 5, scope: !15948)
!15950 = !DILocation(line: 673, column: 9, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15952, file: !1777, line: 673, column: 9)
!15952 = distinct !DILexicalBlock(scope: !15938, file: !1777, line: 669, column: 4)
!15953 = !DILocation(line: 673, column: 27, scope: !15951)
!15954 = !DILocation(line: 673, column: 9, scope: !15952)
!15955 = !DILocation(line: 675, column: 10, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15957, file: !1777, line: 675, column: 10)
!15957 = distinct !DILexicalBlock(scope: !15951, file: !1777, line: 674, column: 5)
!15958 = !DILocation(line: 675, column: 24, scope: !15956)
!15959 = !DILocation(line: 675, column: 35, scope: !15956)
!15960 = !DILocation(line: 675, column: 10, scope: !15957)
!15961 = !DILocation(line: 677, column: 20, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15956, file: !1777, line: 676, column: 6)
!15963 = !DILocation(line: 678, column: 6, scope: !15962)
!15964 = !DILocation(line: 690, column: 16, scope: !15936)
!15965 = !DILocation(line: 695, column: 15, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15936, file: !1777, line: 693, column: 4)
!15967 = !DILocation(line: 695, column: 27, scope: !15966)
!15968 = !DILocation(line: 700, column: 4, scope: !15936)
!15969 = !DILocation(line: 705, column: 3, scope: !15916)
!15970 = !DILocation(line: 715, column: 7, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15972, file: !1777, line: 715, column: 7)
!15972 = distinct !DILexicalBlock(scope: !15973, file: !1777, line: 714, column: 2)
!15973 = distinct !DILexicalBlock(scope: !15868, file: !1777, line: 713, column: 6)
!15974 = !DILocation(line: 715, column: 25, scope: !15971)
!15975 = !DILocation(line: 715, column: 7, scope: !15972)
!15976 = !DILocation(line: 719, column: 8, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15978, file: !1777, line: 719, column: 8)
!15978 = distinct !DILexicalBlock(scope: !15971, file: !1777, line: 716, column: 3)
!15979 = !DILocation(line: 719, column: 22, scope: !15977)
!15980 = !DILocation(line: 719, column: 33, scope: !15977)
!15981 = !DILocation(line: 719, column: 8, scope: !15978)
!15982 = !DILocation(line: 721, column: 5, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15984, file: !1777, line: 721, column: 5)
!15984 = distinct !DILexicalBlock(scope: !15977, file: !1777, line: 720, column: 4)
!15985 = !{i64 2148466224}
!15986 = !{i64 2148466264}
!15987 = !DILocation(line: 722, column: 4, scope: !15984)
!15988 = !DILocation(line: 734, column: 2, scope: !15868)
!15989 = distinct !DISubprogram(name: "prvAllocateTCBAndStack", scope: !1777, file: !1777, line: 3021, type: !15990, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !15992)
!15990 = !DISubroutineType(types: !15991)
!15991 = !{!1808, !15873, !15877}
!15992 = !{!15993, !15994, !15995, !15996}
!15993 = !DILocalVariable(name: "usStackDepth", arg: 1, scope: !15989, file: !1777, line: 3021, type: !15873)
!15994 = !DILocalVariable(name: "puxStackBuffer", arg: 2, scope: !15989, file: !1777, line: 3021, type: !15877)
!15995 = !DILocalVariable(name: "pxNewTCB", scope: !15989, file: !1777, line: 3023, type: !1808)
!15996 = !DILocalVariable(name: "pxStack", scope: !15997, file: !1777, line: 3051, type: !1804)
!15997 = distinct !DILexicalBlock(scope: !15989, file: !1777, line: 3050, column: 2)
!15998 = !DILocation(line: 0, scope: !15989)
!15999 = !DILocation(line: 3054, column: 31, scope: !15997)
!16000 = !DILocation(line: 0, scope: !15997)
!16001 = !DILocation(line: 3056, column: 15, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15997, file: !1777, line: 3056, column: 7)
!16003 = !DILocation(line: 3056, column: 7, scope: !15997)
!16004 = !DILocation(line: 3060, column: 27, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16002, file: !1777, line: 3057, column: 3)
!16006 = !DILocation(line: 3062, column: 17, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16005, file: !1777, line: 3062, column: 8)
!16008 = !DILocation(line: 3062, column: 8, scope: !16005)
!16009 = !DILocation(line: 3071, column: 5, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16007, file: !1777, line: 3068, column: 4)
!16011 = !DILocation(line: 3065, column: 15, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16007, file: !1777, line: 3063, column: 4)
!16013 = !DILocation(line: 3065, column: 23, scope: !16012)
!16014 = !DILocation(line: 3060, column: 15, scope: !16005)
!16015 = !DILocation(line: 3087, column: 68, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16017, file: !1777, line: 3085, column: 3)
!16017 = distinct !DILexicalBlock(scope: !16018, file: !1777, line: 3082, column: 2)
!16018 = distinct !DILexicalBlock(scope: !15989, file: !1777, line: 3081, column: 6)
!16019 = !DILocation(line: 3087, column: 92, scope: !16016)
!16020 = !DILocation(line: 3087, column: 13, scope: !16016)
!16021 = !DILocation(line: 3090, column: 2, scope: !16017)
!16022 = !DILocation(line: 3092, column: 2, scope: !15989)
!16023 = distinct !DISubprogram(name: "prvInitialiseTCBVariables", scope: !1777, file: !1777, line: 2802, type: !16024, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16027)
!16024 = !DISubroutineType(types: !16025)
!16025 = !{null, !16026, !661, !1800, !15878, !15873}
!16026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1808)
!16027 = !{!16028, !16029, !16030, !16031, !16032, !16033}
!16028 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !16023, file: !1777, line: 2802, type: !16026)
!16029 = !DILocalVariable(name: "pcName", arg: 2, scope: !16023, file: !1777, line: 2802, type: !661)
!16030 = !DILocalVariable(name: "uxPriority", arg: 3, scope: !16023, file: !1777, line: 2802, type: !1800)
!16031 = !DILocalVariable(name: "xRegions", arg: 4, scope: !16023, file: !1777, line: 2802, type: !15878)
!16032 = !DILocalVariable(name: "usStackDepth", arg: 5, scope: !16023, file: !1777, line: 2802, type: !15873)
!16033 = !DILocalVariable(name: "x", scope: !16023, file: !1777, line: 2804, type: !1800)
!16034 = !DILocation(line: 0, scope: !16023)
!16035 = !DILocation(line: 2807, column: 2, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16023, file: !1777, line: 2807, column: 2)
!16037 = !DILocation(line: 2809, column: 28, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !1777, line: 2808, column: 2)
!16039 = distinct !DILexicalBlock(scope: !16036, file: !1777, line: 2807, column: 2)
!16040 = !DILocation(line: 2809, column: 3, scope: !16038)
!16041 = !DILocation(line: 2809, column: 26, scope: !16038)
!16042 = !DILocation(line: 2814, column: 7, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16038, file: !1777, line: 2814, column: 7)
!16044 = !DILocation(line: 2814, column: 19, scope: !16043)
!16045 = !DILocation(line: 2814, column: 7, scope: !16038)
!16046 = distinct !{!16046, !16035, !16047}
!16047 = !DILocation(line: 2822, column: 2, scope: !16036)
!16048 = !DILocation(line: 2826, column: 2, scope: !16023)
!16049 = !DILocation(line: 2826, column: 51, scope: !16023)
!16050 = !DILocation(line: 2830, column: 6, scope: !16023)
!16051 = !DILocation(line: 2839, column: 9, scope: !16023)
!16052 = !DILocation(line: 2839, column: 20, scope: !16023)
!16053 = !DILocation(line: 2842, column: 10, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16023, file: !1777, line: 2841, column: 2)
!16055 = !DILocation(line: 2842, column: 25, scope: !16054)
!16056 = !DILocation(line: 2843, column: 10, scope: !16054)
!16057 = !DILocation(line: 2843, column: 24, scope: !16054)
!16058 = !DILocation(line: 2847, column: 33, scope: !16023)
!16059 = !DILocation(line: 2847, column: 2, scope: !16023)
!16060 = !DILocation(line: 2848, column: 33, scope: !16023)
!16061 = !DILocation(line: 2848, column: 2, scope: !16023)
!16062 = !DILocation(line: 2852, column: 2, scope: !16023)
!16063 = !DILocation(line: 2855, column: 2, scope: !16023)
!16064 = !DILocation(line: 2856, column: 2, scope: !16023)
!16065 = !DILocation(line: 2889, column: 10, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16023, file: !1777, line: 2888, column: 2)
!16067 = !DILocation(line: 2889, column: 26, scope: !16066)
!16068 = !DILocation(line: 2890, column: 10, scope: !16066)
!16069 = !DILocation(line: 2890, column: 23, scope: !16066)
!16070 = !DILocation(line: 2900, column: 1, scope: !16023)
!16071 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !1777, file: !1777, line: 2918, type: !154, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16072)
!16072 = !{!16073}
!16073 = !DILocalVariable(name: "uxPriority", scope: !16071, file: !1777, line: 2920, type: !1800)
!16074 = !DILocation(line: 0, scope: !16071)
!16075 = !DILocation(line: 2922, column: 2, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !16071, file: !1777, line: 2922, column: 2)
!16077 = !DILocation(line: 2924, column: 23, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16079, file: !1777, line: 2923, column: 2)
!16079 = distinct !DILexicalBlock(scope: !16076, file: !1777, line: 2922, column: 2)
!16080 = !DILocation(line: 2924, column: 3, scope: !16078)
!16081 = !DILocation(line: 2922, column: 101, scope: !16079)
!16082 = !DILocation(line: 2922, column: 51, scope: !16079)
!16083 = distinct !{!16083, !16075, !16084}
!16084 = !DILocation(line: 2925, column: 2, scope: !16076)
!16085 = !DILocation(line: 2927, column: 2, scope: !16071)
!16086 = !DILocation(line: 2928, column: 2, scope: !16071)
!16087 = !DILocation(line: 2929, column: 2, scope: !16071)
!16088 = !DILocation(line: 2933, column: 3, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16071, file: !1777, line: 2932, column: 2)
!16090 = !DILocation(line: 2939, column: 3, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16071, file: !1777, line: 2938, column: 2)
!16092 = !DILocation(line: 2945, column: 20, scope: !16071)
!16093 = !DILocation(line: 2946, column: 28, scope: !16071)
!16094 = !DILocation(line: 2947, column: 1, scope: !16071)
!16095 = distinct !DISubprogram(name: "vTaskDelete", scope: !1777, file: !1777, line: 740, type: !16096, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16098)
!16096 = !DISubroutineType(types: !16097)
!16097 = !{null, !1806}
!16098 = !{!16099, !16100}
!16099 = !DILocalVariable(name: "xTaskToDelete", arg: 1, scope: !16095, file: !1777, line: 740, type: !1806)
!16100 = !DILocalVariable(name: "pxTCB", scope: !16095, file: !1777, line: 742, type: !1808)
!16101 = !DILocation(line: 0, scope: !16095)
!16102 = !DILocation(line: 744, column: 3, scope: !16095)
!16103 = !DILocation(line: 748, column: 12, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16095, file: !1777, line: 745, column: 3)
!16105 = !DILocation(line: 754, column: 32, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16104, file: !1777, line: 754, column: 8)
!16107 = !DILocation(line: 754, column: 8, scope: !16106)
!16108 = !DILocation(line: 754, column: 53, scope: !16106)
!16109 = !DILocation(line: 754, column: 8, scope: !16104)
!16110 = !DILocation(line: 756, column: 5, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16112, file: !1777, line: 756, column: 5)
!16112 = distinct !DILexicalBlock(scope: !16113, file: !1777, line: 756, column: 5)
!16113 = distinct !DILexicalBlock(scope: !16106, file: !1777, line: 755, column: 4)
!16114 = !DILocation(line: 756, column: 5, scope: !16112)
!16115 = !DILocation(line: 756, column: 5, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16111, file: !1777, line: 756, column: 5)
!16117 = !DILocation(line: 764, column: 8, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16104, file: !1777, line: 764, column: 8)
!16119 = !DILocation(line: 764, column: 62, scope: !16118)
!16120 = !DILocation(line: 764, column: 8, scope: !16104)
!16121 = !DILocation(line: 766, column: 14, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16118, file: !1777, line: 765, column: 4)
!16123 = !DILocation(line: 767, column: 4, scope: !16122)
!16124 = !DILocation(line: 773, column: 4, scope: !16104)
!16125 = !DILocation(line: 778, column: 4, scope: !16104)
!16126 = !DILocation(line: 782, column: 16, scope: !16104)
!16127 = !DILocation(line: 786, column: 3, scope: !16095)
!16128 = !DILocation(line: 790, column: 7, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16095, file: !1777, line: 790, column: 7)
!16130 = !DILocation(line: 790, column: 25, scope: !16129)
!16131 = !DILocation(line: 790, column: 7, scope: !16095)
!16132 = !DILocation(line: 792, column: 17, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16134, file: !1777, line: 792, column: 8)
!16134 = distinct !DILexicalBlock(scope: !16129, file: !1777, line: 791, column: 3)
!16135 = !DILocation(line: 792, column: 14, scope: !16133)
!16136 = !DILocation(line: 792, column: 8, scope: !16134)
!16137 = !DILocation(line: 794, column: 5, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16139, file: !1777, line: 794, column: 5)
!16139 = distinct !DILexicalBlock(scope: !16133, file: !1777, line: 793, column: 4)
!16140 = !DILocation(line: 794, column: 5, scope: !16139)
!16141 = !DILocation(line: 794, column: 5, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16138, file: !1777, line: 794, column: 5)
!16143 = !DILocation(line: 802, column: 5, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16139, file: !1777, line: 802, column: 5)
!16145 = !{i64 2148467631}
!16146 = !{i64 2148467671}
!16147 = !DILocation(line: 803, column: 4, scope: !16139)
!16148 = !DILocation(line: 808, column: 5, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16133, file: !1777, line: 805, column: 4)
!16150 = !DILocation(line: 810, column: 6, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16149, file: !1777, line: 809, column: 5)
!16152 = !DILocation(line: 812, column: 5, scope: !16149)
!16153 = !DILocation(line: 815, column: 2, scope: !16095)
!16154 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !1777, file: !1777, line: 3267, type: !154, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16155)
!16155 = !{!16156}
!16156 = !DILocalVariable(name: "pxTCB", scope: !16154, file: !1777, line: 3269, type: !1808)
!16157 = !DILocation(line: 3271, column: 6, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16154, file: !1777, line: 3271, column: 6)
!16159 = !DILocation(line: 3271, column: 6, scope: !16154)
!16160 = !DILocation(line: 3286, column: 27, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16158, file: !1777, line: 3281, column: 2)
!16162 = !DILocation(line: 0, scope: !16154)
!16163 = !DILocation(line: 3287, column: 26, scope: !16161)
!16164 = !DILocation(line: 0, scope: !16158)
!16165 = !DILocation(line: 3289, column: 1, scope: !16154)
!16166 = distinct !DISubprogram(name: "vTaskDelayUntil", scope: !1777, file: !1777, line: 822, type: !16167, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16172)
!16167 = !DISubroutineType(types: !16168)
!16168 = !{null, !16169, !16171}
!16169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16170)
!16170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!16171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!16172 = !{!16173, !16174, !16175, !16176, !16177, !16178}
!16173 = !DILocalVariable(name: "pxPreviousWakeTime", arg: 1, scope: !16166, file: !1777, line: 822, type: !16169)
!16174 = !DILocalVariable(name: "xTimeIncrement", arg: 2, scope: !16166, file: !1777, line: 822, type: !16171)
!16175 = !DILocalVariable(name: "xTimeToWake", scope: !16166, file: !1777, line: 824, type: !1822)
!16176 = !DILocalVariable(name: "xAlreadyYielded", scope: !16166, file: !1777, line: 825, type: !1807)
!16177 = !DILocalVariable(name: "xShouldDelay", scope: !16166, file: !1777, line: 825, type: !1807)
!16178 = !DILocalVariable(name: "xConstTickCount", scope: !16179, file: !1777, line: 835, type: !16171)
!16179 = distinct !DILexicalBlock(scope: !16166, file: !1777, line: 832, column: 3)
!16180 = !DILocation(line: 0, scope: !16166)
!16181 = !DILocation(line: 827, column: 3, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16166, file: !1777, line: 827, column: 3)
!16183 = !DILocation(line: 827, column: 3, scope: !16166)
!16184 = !DILocation(line: 827, column: 3, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16182, file: !1777, line: 827, column: 3)
!16186 = !DILocation(line: 828, column: 3, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16166, file: !1777, line: 828, column: 3)
!16188 = !DILocation(line: 828, column: 3, scope: !16166)
!16189 = !DILocation(line: 828, column: 3, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16187, file: !1777, line: 828, column: 3)
!16191 = !DILocation(line: 829, column: 3, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16166, file: !1777, line: 829, column: 3)
!16193 = !DILocation(line: 829, column: 3, scope: !16166)
!16194 = !DILocation(line: 829, column: 3, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16192, file: !1777, line: 829, column: 3)
!16196 = !DILocation(line: 831, column: 3, scope: !16166)
!16197 = !DILocation(line: 835, column: 39, scope: !16179)
!16198 = !DILocation(line: 0, scope: !16179)
!16199 = !DILocation(line: 838, column: 18, scope: !16179)
!16200 = !DILocation(line: 838, column: 38, scope: !16179)
!16201 = !DILocation(line: 840, column: 24, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16179, file: !1777, line: 840, column: 8)
!16203 = !DILocation(line: 0, scope: !16202)
!16204 = !DILocation(line: 840, column: 8, scope: !16179)
!16205 = !DILocation(line: 847, column: 47, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16207, file: !1777, line: 847, column: 9)
!16207 = distinct !DILexicalBlock(scope: !16202, file: !1777, line: 841, column: 4)
!16208 = !DILocation(line: 861, column: 47, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16210, file: !1777, line: 861, column: 9)
!16210 = distinct !DILexicalBlock(scope: !16202, file: !1777, line: 857, column: 4)
!16211 = !DILocation(line: 872, column: 24, scope: !16179)
!16212 = !DILocation(line: 874, column: 8, scope: !16179)
!16213 = !DILocation(line: 880, column: 26, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16215, file: !1777, line: 880, column: 9)
!16215 = distinct !DILexicalBlock(scope: !16216, file: !1777, line: 875, column: 4)
!16216 = distinct !DILexicalBlock(scope: !16179, file: !1777, line: 874, column: 8)
!16217 = !DILocation(line: 880, column: 40, scope: !16214)
!16218 = !DILocation(line: 880, column: 9, scope: !16214)
!16219 = !DILocation(line: 880, column: 61, scope: !16214)
!16220 = !DILocation(line: 880, column: 9, scope: !16215)
!16221 = !DILocation(line: 885, column: 6, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16214, file: !1777, line: 881, column: 5)
!16223 = !DILocation(line: 886, column: 5, scope: !16222)
!16224 = !DILocation(line: 892, column: 5, scope: !16215)
!16225 = !DILocation(line: 893, column: 4, scope: !16215)
!16226 = !DILocation(line: 899, column: 21, scope: !16166)
!16227 = !DILocation(line: 903, column: 23, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16166, file: !1777, line: 903, column: 7)
!16229 = !DILocation(line: 903, column: 7, scope: !16166)
!16230 = !DILocation(line: 905, column: 4, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !1777, line: 905, column: 4)
!16232 = distinct !DILexicalBlock(scope: !16228, file: !1777, line: 904, column: 3)
!16233 = !{i64 2148468872}
!16234 = !{i64 2148468912}
!16235 = !DILocation(line: 906, column: 3, scope: !16232)
!16236 = !DILocation(line: 911, column: 2, scope: !16166)
!16237 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !1777, file: !1777, line: 1628, type: !154, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !2550)
!16238 = !DILocation(line: 1634, column: 2, scope: !16237)
!16239 = !DILocation(line: 1635, column: 1, scope: !16237)
!16240 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !1777, file: !1777, line: 2991, type: !16241, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16243)
!16241 = !DISubroutineType(types: !16242)
!16242 = !{null, !16171}
!16243 = !{!16244}
!16244 = !DILocalVariable(name: "xTimeToWake", arg: 1, scope: !16240, file: !1777, line: 2991, type: !16171)
!16245 = !DILocation(line: 0, scope: !16240)
!16246 = !DILocation(line: 2994, column: 2, scope: !16240)
!16247 = !DILocation(line: 2996, column: 20, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16240, file: !1777, line: 2996, column: 6)
!16249 = !DILocation(line: 2996, column: 18, scope: !16248)
!16250 = !DILocation(line: 2996, column: 6, scope: !16240)
!16251 = !DILocation(line: 2999, column: 16, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16248, file: !1777, line: 2997, column: 2)
!16253 = !DILocation(line: 2999, column: 46, scope: !16252)
!16254 = !DILocation(line: 2999, column: 60, scope: !16252)
!16255 = !DILocation(line: 2999, column: 3, scope: !16252)
!16256 = !DILocation(line: 3000, column: 2, scope: !16252)
!16257 = !DILocation(line: 3004, column: 16, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16248, file: !1777, line: 3002, column: 2)
!16259 = !DILocation(line: 3004, column: 38, scope: !16258)
!16260 = !DILocation(line: 3004, column: 52, scope: !16258)
!16261 = !DILocation(line: 3004, column: 3, scope: !16258)
!16262 = !DILocation(line: 3009, column: 21, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16258, file: !1777, line: 3009, column: 7)
!16264 = !DILocation(line: 3009, column: 19, scope: !16263)
!16265 = !DILocation(line: 3009, column: 7, scope: !16258)
!16266 = !DILocation(line: 3011, column: 25, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16263, file: !1777, line: 3010, column: 3)
!16268 = !DILocation(line: 3012, column: 3, scope: !16267)
!16269 = !DILocation(line: 3018, column: 1, scope: !16240)
!16270 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !1777, file: !1777, line: 1666, type: !16271, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16273)
!16271 = !DISubroutineType(types: !16272)
!16272 = !{!1807}
!16273 = !{!16274, !16275}
!16274 = !DILocalVariable(name: "pxTCB", scope: !16270, file: !1777, line: 1668, type: !1808)
!16275 = !DILocalVariable(name: "xAlreadyYielded", scope: !16270, file: !1777, line: 1669, type: !1807)
!16276 = !DILocation(line: 0, scope: !16270)
!16277 = !DILocation(line: 1673, column: 2, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16270, file: !1777, line: 1673, column: 2)
!16279 = !DILocation(line: 1673, column: 2, scope: !16270)
!16280 = !DILocation(line: 1673, column: 2, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16278, file: !1777, line: 1673, column: 2)
!16282 = !DILocation(line: 1680, column: 2, scope: !16270)
!16283 = !DILocation(line: 1682, column: 3, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16270, file: !1777, line: 1681, column: 2)
!16285 = !DILocation(line: 1684, column: 7, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16284, file: !1777, line: 1684, column: 7)
!16287 = !DILocation(line: 1684, column: 28, scope: !16286)
!16288 = !DILocation(line: 1684, column: 7, scope: !16284)
!16289 = !DILocation(line: 1686, column: 8, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16291, file: !1777, line: 1686, column: 8)
!16291 = distinct !DILexicalBlock(scope: !16286, file: !1777, line: 1685, column: 3)
!16292 = !DILocation(line: 1686, column: 31, scope: !16290)
!16293 = !DILocation(line: 1686, column: 8, scope: !16291)
!16294 = !DILocation(line: 1690, column: 12, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16290, file: !1777, line: 1687, column: 4)
!16296 = !DILocation(line: 1690, column: 5, scope: !16295)
!16297 = !DILocation(line: 1692, column: 26, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16295, file: !1777, line: 1691, column: 5)
!16299 = !DILocation(line: 1693, column: 39, scope: !16298)
!16300 = !DILocation(line: 1693, column: 15, scope: !16298)
!16301 = !DILocation(line: 1694, column: 39, scope: !16298)
!16302 = !DILocation(line: 1694, column: 15, scope: !16298)
!16303 = !DILocation(line: 1695, column: 6, scope: !16298)
!16304 = !DILocation(line: 1699, column: 17, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16298, file: !1777, line: 1699, column: 10)
!16306 = !DILocation(line: 1699, column: 31, scope: !16305)
!16307 = !DILocation(line: 1699, column: 45, scope: !16305)
!16308 = !DILocation(line: 1699, column: 28, scope: !16305)
!16309 = !DILocation(line: 1699, column: 10, scope: !16298)
!16310 = !DILocation(line: 1701, column: 21, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16305, file: !1777, line: 1700, column: 6)
!16312 = !DILocation(line: 1702, column: 6, scope: !16311)
!16313 = distinct !{!16313, !16296, !16314}
!16314 = !DILocation(line: 1707, column: 5, scope: !16295)
!16315 = !DILocation(line: 1713, column: 9, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16295, file: !1777, line: 1713, column: 9)
!16317 = !DILocation(line: 1713, column: 23, scope: !16316)
!16318 = !DILocation(line: 1713, column: 9, scope: !16295)
!16319 = !DILocation(line: 1715, column: 13, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16316, file: !1777, line: 1714, column: 5)
!16321 = !DILocation(line: 1715, column: 27, scope: !16320)
!16322 = !DILocation(line: 1715, column: 6, scope: !16320)
!16323 = !DILocation(line: 1717, column: 11, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16325, file: !1777, line: 1717, column: 11)
!16325 = distinct !DILexicalBlock(scope: !16320, file: !1777, line: 1716, column: 6)
!16326 = !DILocation(line: 1717, column: 32, scope: !16324)
!16327 = !DILocation(line: 1717, column: 11, scope: !16325)
!16328 = !DILocation(line: 1719, column: 22, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16324, file: !1777, line: 1718, column: 7)
!16330 = !DILocation(line: 1720, column: 7, scope: !16329)
!16331 = !DILocation(line: 1725, column: 7, scope: !16325)
!16332 = distinct !{!16332, !16322, !16333}
!16333 = !DILocation(line: 1726, column: 6, scope: !16320)
!16334 = !DILocation(line: 1733, column: 9, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16295, file: !1777, line: 1733, column: 9)
!16336 = !DILocation(line: 1733, column: 23, scope: !16335)
!16337 = !DILocation(line: 1733, column: 9, scope: !16295)
!16338 = !DILocation(line: 1740, column: 6, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16340, file: !1777, line: 1740, column: 6)
!16340 = distinct !DILexicalBlock(scope: !16335, file: !1777, line: 1734, column: 5)
!16341 = !{i64 2148478178}
!16342 = !{i64 2148478218}
!16343 = !DILocation(line: 1741, column: 5, scope: !16340)
!16344 = !DILocation(line: 1753, column: 2, scope: !16270)
!16345 = !DILocation(line: 1755, column: 2, scope: !16270)
!16346 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !1777, file: !1777, line: 1934, type: !16271, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16347)
!16347 = !{!16348, !16349, !16350, !16351, !16355}
!16348 = !DILocalVariable(name: "pxTCB", scope: !16346, file: !1777, line: 1936, type: !1808)
!16349 = !DILocalVariable(name: "xItemValue", scope: !16346, file: !1777, line: 1937, type: !1822)
!16350 = !DILocalVariable(name: "xSwitchRequired", scope: !16346, file: !1777, line: 1938, type: !1807)
!16351 = !DILocalVariable(name: "xConstTickCount", scope: !16352, file: !1777, line: 1953, type: !16171)
!16352 = distinct !DILexicalBlock(scope: !16353, file: !1777, line: 1950, column: 3)
!16353 = distinct !DILexicalBlock(scope: !16354, file: !1777, line: 1945, column: 2)
!16354 = distinct !DILexicalBlock(scope: !16346, file: !1777, line: 1944, column: 6)
!16355 = !DILocalVariable(name: "pxTemp", scope: !16356, file: !1777, line: 1957, type: !1843)
!16356 = distinct !DILexicalBlock(scope: !16357, file: !1777, line: 1957, column: 5)
!16357 = distinct !DILexicalBlock(scope: !16358, file: !1777, line: 1956, column: 4)
!16358 = distinct !DILexicalBlock(scope: !16352, file: !1777, line: 1955, column: 8)
!16359 = !DILocation(line: 0, scope: !16346)
!16360 = !DILocation(line: 1944, column: 6, scope: !16354)
!16361 = !DILocation(line: 1944, column: 27, scope: !16354)
!16362 = !DILocation(line: 1944, column: 6, scope: !16346)
!16363 = !DILocation(line: 1948, column: 3, scope: !16353)
!16364 = !DILocation(line: 1953, column: 39, scope: !16352)
!16365 = !DILocation(line: 0, scope: !16352)
!16366 = !DILocation(line: 1955, column: 24, scope: !16358)
!16367 = !DILocation(line: 1955, column: 8, scope: !16352)
!16368 = !DILocation(line: 1957, column: 5, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16356, file: !1777, line: 1957, column: 5)
!16370 = !DILocation(line: 1957, column: 5, scope: !16356)
!16371 = !DILocation(line: 1957, column: 5, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16369, file: !1777, line: 1957, column: 5)
!16373 = !DILocation(line: 0, scope: !16356)
!16374 = !DILocation(line: 1958, column: 4, scope: !16357)
!16375 = !DILocation(line: 1968, column: 27, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16352, file: !1777, line: 1968, column: 8)
!16377 = !DILocation(line: 1968, column: 24, scope: !16376)
!16378 = !DILocation(line: 1968, column: 8, scope: !16352)
!16379 = !DILocation(line: 1972, column: 10, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16381, file: !1777, line: 1972, column: 10)
!16381 = distinct !DILexicalBlock(scope: !16382, file: !1777, line: 1971, column: 5)
!16382 = distinct !DILexicalBlock(scope: !16383, file: !1777, line: 1970, column: 5)
!16383 = distinct !DILexicalBlock(scope: !16384, file: !1777, line: 1970, column: 5)
!16384 = distinct !DILexicalBlock(scope: !16376, file: !1777, line: 1969, column: 4)
!16385 = !DILocation(line: 1972, column: 10, scope: !16381)
!16386 = !DILocation(line: 1988, column: 27, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16380, file: !1777, line: 1983, column: 6)
!16388 = !DILocation(line: 1989, column: 20, scope: !16387)
!16389 = !DILocation(line: 1991, column: 27, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16387, file: !1777, line: 1991, column: 11)
!16391 = !DILocation(line: 1991, column: 11, scope: !16387)
!16392 = !DILocation(line: 2007, column: 16, scope: !16387)
!16393 = !DILocation(line: 2011, column: 11, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16387, file: !1777, line: 2011, column: 11)
!16395 = !DILocation(line: 2011, column: 65, scope: !16394)
!16396 = !DILocation(line: 2011, column: 11, scope: !16387)
!16397 = !DILocation(line: 2013, column: 17, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16394, file: !1777, line: 2012, column: 7)
!16399 = !DILocation(line: 2014, column: 7, scope: !16398)
!16400 = !DILocation(line: 2022, column: 7, scope: !16387)
!16401 = !DILocation(line: 2032, column: 19, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16403, file: !1777, line: 2032, column: 12)
!16403 = distinct !DILexicalBlock(scope: !16387, file: !1777, line: 2027, column: 7)
!16404 = !DILocation(line: 2032, column: 33, scope: !16402)
!16405 = !DILocation(line: 2032, column: 47, scope: !16402)
!16406 = !DILocation(line: 2032, column: 30, scope: !16402)
!16407 = !DILocation(line: 2032, column: 12, scope: !16403)
!16408 = distinct !{!16408, !16409, !16410}
!16409 = !DILocation(line: 1970, column: 5, scope: !16383)
!16410 = !DILocation(line: 2043, column: 5, scope: !16383)
!16411 = !DILocation(line: 0, scope: !16380)
!16412 = !DILocation(line: 2052, column: 8, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16414, file: !1777, line: 2052, column: 8)
!16414 = distinct !DILexicalBlock(scope: !16353, file: !1777, line: 2051, column: 3)
!16415 = !DILocation(line: 1938, column: 12, scope: !16346)
!16416 = !DILocation(line: 2052, column: 86, scope: !16413)
!16417 = !DILocation(line: 2052, column: 8, scope: !16414)
!16418 = !DILocation(line: 2080, column: 3, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16354, file: !1777, line: 2079, column: 2)
!16420 = !DILocation(line: 2093, column: 7, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16422, file: !1777, line: 2093, column: 7)
!16422 = distinct !DILexicalBlock(scope: !16346, file: !1777, line: 2092, column: 2)
!16423 = !DILocation(line: 2093, column: 21, scope: !16421)
!16424 = !DILocation(line: 2093, column: 7, scope: !16422)
!16425 = !DILocation(line: 2104, column: 2, scope: !16346)
!16426 = distinct !DISubprogram(name: "vTaskDelay", scope: !1777, file: !1777, line: 918, type: !16241, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16427)
!16427 = !{!16428, !16429, !16430}
!16428 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !16426, file: !1777, line: 918, type: !16171)
!16429 = !DILocalVariable(name: "xTimeToWake", scope: !16426, file: !1777, line: 920, type: !1822)
!16430 = !DILocalVariable(name: "xAlreadyYielded", scope: !16426, file: !1777, line: 921, type: !1807)
!16431 = !DILocation(line: 0, scope: !16426)
!16432 = !DILocation(line: 925, column: 21, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16426, file: !1777, line: 925, column: 7)
!16434 = !DILocation(line: 925, column: 7, scope: !16426)
!16435 = !DILocation(line: 927, column: 4, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16437, file: !1777, line: 927, column: 4)
!16437 = distinct !DILexicalBlock(scope: !16433, file: !1777, line: 926, column: 3)
!16438 = !DILocation(line: 927, column: 4, scope: !16437)
!16439 = !DILocation(line: 927, column: 4, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16436, file: !1777, line: 927, column: 4)
!16441 = !DILocation(line: 928, column: 4, scope: !16437)
!16442 = !DILocation(line: 942, column: 19, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16437, file: !1777, line: 929, column: 4)
!16444 = !DILocation(line: 942, column: 30, scope: !16443)
!16445 = !DILocation(line: 947, column: 26, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16443, file: !1777, line: 947, column: 9)
!16447 = !DILocation(line: 947, column: 40, scope: !16446)
!16448 = !DILocation(line: 947, column: 9, scope: !16446)
!16449 = !DILocation(line: 947, column: 61, scope: !16446)
!16450 = !DILocation(line: 947, column: 9, scope: !16443)
!16451 = !DILocation(line: 952, column: 6, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16446, file: !1777, line: 948, column: 5)
!16453 = !DILocation(line: 953, column: 5, scope: !16452)
!16454 = !DILocation(line: 958, column: 5, scope: !16443)
!16455 = !DILocation(line: 960, column: 22, scope: !16437)
!16456 = !DILocation(line: 961, column: 3, scope: !16437)
!16457 = !DILocation(line: 969, column: 7, scope: !16426)
!16458 = !DILocation(line: 971, column: 4, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16460, file: !1777, line: 971, column: 4)
!16460 = distinct !DILexicalBlock(scope: !16461, file: !1777, line: 970, column: 3)
!16461 = distinct !DILexicalBlock(scope: !16426, file: !1777, line: 969, column: 7)
!16462 = !{i64 2148469642}
!16463 = !{i64 2148469682}
!16464 = !DILocation(line: 972, column: 3, scope: !16460)
!16465 = !DILocation(line: 977, column: 2, scope: !16426)
!16466 = distinct !DISubprogram(name: "uxTaskPriorityGet", scope: !1777, file: !1777, line: 1054, type: !16467, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16469)
!16467 = !DISubroutineType(types: !16468)
!16468 = !{!1800, !1806}
!16469 = !{!16470, !16471, !16472}
!16470 = !DILocalVariable(name: "xTask", arg: 1, scope: !16466, file: !1777, line: 1054, type: !1806)
!16471 = !DILocalVariable(name: "pxTCB", scope: !16466, file: !1777, line: 1056, type: !1808)
!16472 = !DILocalVariable(name: "uxReturn", scope: !16466, file: !1777, line: 1057, type: !1800)
!16473 = !DILocation(line: 0, scope: !16466)
!16474 = !DILocation(line: 1059, column: 3, scope: !16466)
!16475 = !DILocation(line: 1063, column: 12, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16466, file: !1777, line: 1060, column: 3)
!16477 = !DILocation(line: 1064, column: 22, scope: !16476)
!16478 = !DILocation(line: 1066, column: 3, scope: !16466)
!16479 = !DILocation(line: 1068, column: 3, scope: !16466)
!16480 = distinct !DISubprogram(name: "uxTaskPriorityGetFromISR", scope: !1777, file: !1777, line: 1076, type: !16467, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16481)
!16481 = !{!16482, !16483, !16484, !16485}
!16482 = !DILocalVariable(name: "xTask", arg: 1, scope: !16480, file: !1777, line: 1076, type: !1806)
!16483 = !DILocalVariable(name: "pxTCB", scope: !16480, file: !1777, line: 1078, type: !1808)
!16484 = !DILocalVariable(name: "uxReturn", scope: !16480, file: !1777, line: 1079, type: !1800)
!16485 = !DILocalVariable(name: "uxSavedInterruptState", scope: !16480, file: !1777, line: 1079, type: !1800)
!16486 = !DILocation(line: 0, scope: !16480)
!16487 = !DILocation(line: 1097, column: 3, scope: !16480)
!16488 = !DILocation(line: 231, column: 2, scope: !16489, inlinedAt: !16493)
!16489 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1801, file: !1801, line: 227, type: !2531, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16490)
!16490 = !{!16491, !16492}
!16491 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !16489, file: !1801, line: 229, type: !61)
!16492 = !DILocalVariable(name: "ulNewBASEPRI", scope: !16489, file: !1801, line: 229, type: !61)
!16493 = distinct !DILocation(line: 1099, column: 27, scope: !16480)
!16494 = !{i64 806750, i64 806787, i64 806819, i64 806855, i64 806882}
!16495 = !DILocation(line: 0, scope: !16489, inlinedAt: !16493)
!16496 = !DILocation(line: 1103, column: 12, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16480, file: !1777, line: 1100, column: 3)
!16498 = !DILocation(line: 1104, column: 22, scope: !16497)
!16499 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !16500, file: !1801, line: 247, type: !61)
!16500 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1801, file: !1801, line: 247, type: !4770, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16501)
!16501 = !{!16499}
!16502 = !DILocation(line: 0, scope: !16500, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 1106, column: 3, scope: !16480)
!16504 = !DILocation(line: 249, column: 2, scope: !16500, inlinedAt: !16503)
!16505 = !{i64 807283}
!16506 = !DILocation(line: 1108, column: 3, scope: !16480)
!16507 = distinct !DISubprogram(name: "vTaskPrioritySet", scope: !1777, file: !1777, line: 1116, type: !16508, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16510)
!16508 = !DISubroutineType(types: !16509)
!16509 = !{null, !1806, !1800}
!16510 = !{!16511, !16512, !16513, !16514, !16515, !16516}
!16511 = !DILocalVariable(name: "xTask", arg: 1, scope: !16507, file: !1777, line: 1116, type: !1806)
!16512 = !DILocalVariable(name: "uxNewPriority", arg: 2, scope: !16507, file: !1777, line: 1116, type: !1800)
!16513 = !DILocalVariable(name: "pxTCB", scope: !16507, file: !1777, line: 1118, type: !1808)
!16514 = !DILocalVariable(name: "uxCurrentBasePriority", scope: !16507, file: !1777, line: 1119, type: !1800)
!16515 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !16507, file: !1777, line: 1119, type: !1800)
!16516 = !DILocalVariable(name: "xYieldRequired", scope: !16507, file: !1777, line: 1120, type: !1807)
!16517 = !DILocation(line: 0, scope: !16507)
!16518 = !DILocation(line: 1122, column: 3, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16507, file: !1777, line: 1122, column: 3)
!16520 = !DILocation(line: 1122, column: 3, scope: !16507)
!16521 = !DILocation(line: 1122, column: 3, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16519, file: !1777, line: 1122, column: 3)
!16523 = !DILocation(line: 1125, column: 7, scope: !16507)
!16524 = !DILocation(line: 1134, column: 3, scope: !16507)
!16525 = !DILocation(line: 1138, column: 12, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16507, file: !1777, line: 1135, column: 3)
!16527 = !DILocation(line: 1144, column: 36, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16526, file: !1777, line: 1143, column: 4)
!16529 = !DILocation(line: 1152, column: 30, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16526, file: !1777, line: 1152, column: 8)
!16531 = !DILocation(line: 1152, column: 8, scope: !16526)
!16532 = !DILocation(line: 1156, column: 23, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16534, file: !1777, line: 1156, column: 9)
!16534 = distinct !DILexicalBlock(scope: !16530, file: !1777, line: 1153, column: 4)
!16535 = !DILocation(line: 0, scope: !16533)
!16536 = !DILocation(line: 1156, column: 9, scope: !16534)
!16537 = !DILocation(line: 1163, column: 28, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16539, file: !1777, line: 1163, column: 11)
!16539 = distinct !DILexicalBlock(scope: !16540, file: !1777, line: 1159, column: 6)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !1777, line: 1158, column: 10)
!16541 = distinct !DILexicalBlock(scope: !16533, file: !1777, line: 1157, column: 5)
!16542 = !DILocation(line: 1163, column: 42, scope: !16538)
!16543 = !DILocation(line: 1163, column: 25, scope: !16538)
!16544 = !DILocation(line: 1163, column: 11, scope: !16539)
!16545 = !DILocation(line: 1196, column: 36, scope: !16534)
!16546 = !DILocation(line: 1202, column: 32, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16548, file: !1777, line: 1202, column: 10)
!16548 = distinct !DILexicalBlock(scope: !16534, file: !1777, line: 1199, column: 5)
!16549 = !DILocation(line: 1202, column: 10, scope: !16548)
!16550 = !DILocation(line: 1204, column: 25, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16547, file: !1777, line: 1203, column: 6)
!16552 = !DILocation(line: 1205, column: 6, scope: !16551)
!16553 = !DILocation(line: 1212, column: 28, scope: !16548)
!16554 = !DILocation(line: 1222, column: 11, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16534, file: !1777, line: 1222, column: 9)
!16556 = !DILocation(line: 1222, column: 102, scope: !16555)
!16557 = !DILocation(line: 1222, column: 9, scope: !16534)
!16558 = !DILocation(line: 1224, column: 6, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16555, file: !1777, line: 1223, column: 5)
!16560 = !DILocation(line: 1225, column: 5, scope: !16559)
!16561 = !DILocation(line: 1235, column: 9, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16534, file: !1777, line: 1235, column: 9)
!16563 = !DILocation(line: 1235, column: 9, scope: !16534)
!16564 = !DILocation(line: 1240, column: 10, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16566, file: !1777, line: 1240, column: 10)
!16566 = distinct !DILexicalBlock(scope: !16562, file: !1777, line: 1236, column: 5)
!16567 = !DILocation(line: 1240, column: 55, scope: !16565)
!16568 = !DILocation(line: 1240, column: 10, scope: !16566)
!16569 = !DILocation(line: 1245, column: 7, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16565, file: !1777, line: 1241, column: 6)
!16571 = !DILocation(line: 1246, column: 6, scope: !16570)
!16572 = !DILocation(line: 1251, column: 6, scope: !16566)
!16573 = !DILocation(line: 1252, column: 5, scope: !16566)
!16574 = !DILocation(line: 1258, column: 9, scope: !16534)
!16575 = !DILocation(line: 1260, column: 6, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16577, file: !1777, line: 1260, column: 6)
!16577 = distinct !DILexicalBlock(scope: !16578, file: !1777, line: 1259, column: 5)
!16578 = distinct !DILexicalBlock(scope: !16534, file: !1777, line: 1258, column: 9)
!16579 = !{i64 2148471860}
!16580 = !{i64 2148471900}
!16581 = !DILocation(line: 1261, column: 5, scope: !16577)
!16582 = !DILocation(line: 1272, column: 3, scope: !16507)
!16583 = !DILocation(line: 1273, column: 2, scope: !16507)
!16584 = distinct !DISubprogram(name: "vTaskSuspend", scope: !1777, file: !1777, line: 1280, type: !16096, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16585)
!16585 = !{!16586, !16587}
!16586 = !DILocalVariable(name: "xTaskToSuspend", arg: 1, scope: !16584, file: !1777, line: 1280, type: !1806)
!16587 = !DILocalVariable(name: "pxTCB", scope: !16584, file: !1777, line: 1282, type: !1808)
!16588 = !DILocation(line: 0, scope: !16584)
!16589 = !DILocation(line: 1284, column: 3, scope: !16584)
!16590 = !DILocation(line: 1288, column: 12, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16584, file: !1777, line: 1285, column: 3)
!16592 = !DILocation(line: 1294, column: 32, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16591, file: !1777, line: 1294, column: 8)
!16594 = !DILocation(line: 1294, column: 8, scope: !16593)
!16595 = !DILocation(line: 1294, column: 53, scope: !16593)
!16596 = !DILocation(line: 1294, column: 8, scope: !16591)
!16597 = !DILocation(line: 1296, column: 5, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16599, file: !1777, line: 1296, column: 5)
!16599 = distinct !DILexicalBlock(scope: !16600, file: !1777, line: 1296, column: 5)
!16600 = distinct !DILexicalBlock(scope: !16593, file: !1777, line: 1295, column: 4)
!16601 = !DILocation(line: 1296, column: 5, scope: !16599)
!16602 = !DILocation(line: 1296, column: 5, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16598, file: !1777, line: 1296, column: 5)
!16604 = !DILocation(line: 1304, column: 8, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16591, file: !1777, line: 1304, column: 8)
!16606 = !DILocation(line: 1304, column: 62, scope: !16605)
!16607 = !DILocation(line: 1304, column: 8, scope: !16591)
!16608 = !DILocation(line: 1306, column: 14, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16605, file: !1777, line: 1305, column: 4)
!16610 = !DILocation(line: 1307, column: 4, scope: !16609)
!16611 = !DILocation(line: 1313, column: 4, scope: !16591)
!16612 = !DILocation(line: 1315, column: 3, scope: !16584)
!16613 = !DILocation(line: 1317, column: 16, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16584, file: !1777, line: 1317, column: 7)
!16615 = !DILocation(line: 1317, column: 13, scope: !16614)
!16616 = !DILocation(line: 0, scope: !16614)
!16617 = !DILocation(line: 1317, column: 7, scope: !16584)
!16618 = !DILocation(line: 1319, column: 8, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16614, file: !1777, line: 1318, column: 3)
!16620 = !DILocation(line: 1322, column: 5, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16622, file: !1777, line: 1322, column: 5)
!16622 = distinct !DILexicalBlock(scope: !16623, file: !1777, line: 1320, column: 4)
!16623 = distinct !DILexicalBlock(scope: !16619, file: !1777, line: 1319, column: 8)
!16624 = !DILocation(line: 1322, column: 5, scope: !16622)
!16625 = !DILocation(line: 1322, column: 5, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16621, file: !1777, line: 1322, column: 5)
!16627 = !DILocation(line: 1323, column: 5, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16622, file: !1777, line: 1323, column: 5)
!16629 = !{i64 2148473310}
!16630 = !{i64 2148473350}
!16631 = !DILocation(line: 1324, column: 4, scope: !16622)
!16632 = !DILocation(line: 1330, column: 9, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16634, file: !1777, line: 1330, column: 9)
!16634 = distinct !DILexicalBlock(scope: !16623, file: !1777, line: 1326, column: 4)
!16635 = !DILocation(line: 1330, column: 59, scope: !16633)
!16636 = !DILocation(line: 1330, column: 56, scope: !16633)
!16637 = !DILocation(line: 1330, column: 9, scope: !16634)
!16638 = !DILocation(line: 1336, column: 19, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16633, file: !1777, line: 1331, column: 5)
!16640 = !DILocation(line: 1337, column: 5, scope: !16639)
!16641 = !DILocation(line: 1340, column: 6, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16633, file: !1777, line: 1339, column: 5)
!16643 = !DILocation(line: 1346, column: 8, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16614, file: !1777, line: 1345, column: 3)
!16645 = !DILocation(line: 1351, column: 5, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16647, file: !1777, line: 1347, column: 4)
!16647 = distinct !DILexicalBlock(scope: !16644, file: !1777, line: 1346, column: 8)
!16648 = !DILocation(line: 1353, column: 6, scope: !16649)
!16649 = distinct !DILexicalBlock(scope: !16646, file: !1777, line: 1352, column: 5)
!16650 = !DILocation(line: 1355, column: 5, scope: !16646)
!16651 = !DILocation(line: 1356, column: 4, scope: !16646)
!16652 = !DILocation(line: 1362, column: 2, scope: !16584)
!16653 = !DILocation(line: 2200, column: 6, scope: !1868)
!16654 = !DILocation(line: 2200, column: 27, scope: !1868)
!16655 = !DILocation(line: 2200, column: 6, scope: !1863)
!16656 = !DILocation(line: 2204, column: 17, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !1868, file: !1777, line: 2201, column: 2)
!16658 = !DILocation(line: 2205, column: 2, scope: !16657)
!16659 = !DILocation(line: 2208, column: 17, scope: !1867)
!16660 = !DILocation(line: 2239, column: 3, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16662, file: !1777, line: 2239, column: 3)
!16662 = distinct !DILexicalBlock(scope: !1867, file: !1777, line: 2239, column: 3)
!16663 = !DILocation(line: 2239, column: 3, scope: !16662)
!16664 = !DILocation(line: 2239, column: 3, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16666, file: !1777, line: 2239, column: 3)
!16666 = distinct !DILexicalBlock(scope: !16661, file: !1777, line: 2239, column: 3)
!16667 = !DILocation(line: 2239, column: 3, scope: !16666)
!16668 = !DILocation(line: 2239, column: 3, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16665, file: !1777, line: 2239, column: 3)
!16670 = !DILocation(line: 2240, column: 3, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16672, file: !1777, line: 2240, column: 3)
!16672 = distinct !DILexicalBlock(scope: !1867, file: !1777, line: 2240, column: 3)
!16673 = !DILocation(line: 2240, column: 3, scope: !16672)
!16674 = !DILocation(line: 2240, column: 3, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16676, file: !1777, line: 2240, column: 3)
!16676 = distinct !DILexicalBlock(scope: !16671, file: !1777, line: 2240, column: 3)
!16677 = !DILocation(line: 2240, column: 3, scope: !16676)
!16678 = !DILocation(line: 2240, column: 3, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16675, file: !1777, line: 2240, column: 3)
!16680 = !DILocation(line: 2244, column: 3, scope: !1866)
!16681 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !16682, file: !1801, line: 172, type: !61)
!16682 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !1801, file: !1801, line: 172, type: !16683, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16685)
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!54, !61}
!16685 = !{!16681, !16686}
!16686 = !DILocalVariable(name: "ucReturn", scope: !16682, file: !1801, line: 174, type: !54)
!16687 = !DILocation(line: 0, scope: !16682, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 2244, column: 3, scope: !1866)
!16689 = !DILocation(line: 176, column: 3, scope: !16682, inlinedAt: !16688)
!16690 = !{i64 804842}
!16691 = !DILocation(line: 0, scope: !1866)
!16692 = !DILocation(line: 2244, column: 3, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !1866, file: !1777, line: 2244, column: 3)
!16694 = !DILocation(line: 2244, column: 3, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16693, file: !1777, line: 2244, column: 3)
!16696 = !DILocation(line: 0, scope: !1870)
!16697 = !DILocation(line: 2244, column: 3, scope: !1870)
!16698 = !DILocation(line: 2244, column: 3, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !1870, file: !1777, line: 2244, column: 3)
!16700 = !DILocation(line: 2244, column: 3, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16699, file: !1777, line: 2244, column: 3)
!16702 = !DILocation(line: 2255, column: 1, scope: !1863)
!16703 = distinct !DISubprogram(name: "vTaskResume", scope: !1777, file: !1777, line: 1415, type: !16096, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16704)
!16704 = !{!16705, !16706}
!16705 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !16703, file: !1777, line: 1415, type: !1806)
!16706 = !DILocalVariable(name: "pxTCB", scope: !16703, file: !1777, line: 1417, type: !16026)
!16707 = !DILocation(line: 0, scope: !16703)
!16708 = !DILocation(line: 1420, column: 3, scope: !16703)
!16709 = !DILocation(line: 1420, column: 3, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16711, file: !1777, line: 1420, column: 3)
!16711 = distinct !DILexicalBlock(scope: !16703, file: !1777, line: 1420, column: 3)
!16712 = !DILocation(line: 1424, column: 25, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16703, file: !1777, line: 1424, column: 7)
!16714 = !DILocation(line: 1417, column: 24, scope: !16703)
!16715 = !DILocation(line: 1424, column: 39, scope: !16713)
!16716 = !DILocation(line: 1424, column: 36, scope: !16713)
!16717 = !DILocation(line: 1424, column: 7, scope: !16703)
!16718 = !DILocation(line: 1426, column: 4, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16713, file: !1777, line: 1425, column: 3)
!16720 = !DILocation(line: 1428, column: 9, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16722, file: !1777, line: 1428, column: 9)
!16722 = distinct !DILexicalBlock(scope: !16719, file: !1777, line: 1427, column: 4)
!16723 = !DILocation(line: 1428, column: 41, scope: !16721)
!16724 = !DILocation(line: 1428, column: 9, scope: !16722)
!16725 = !DILocation(line: 1434, column: 40, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16721, file: !1777, line: 1429, column: 5)
!16727 = !DILocation(line: 1434, column: 15, scope: !16726)
!16728 = !DILocation(line: 1435, column: 6, scope: !16726)
!16729 = !DILocation(line: 1438, column: 17, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16726, file: !1777, line: 1438, column: 10)
!16731 = !DILocation(line: 1438, column: 31, scope: !16730)
!16732 = !DILocation(line: 1438, column: 45, scope: !16730)
!16733 = !DILocation(line: 1438, column: 28, scope: !16730)
!16734 = !DILocation(line: 1438, column: 10, scope: !16726)
!16735 = !DILocation(line: 1443, column: 7, scope: !16736)
!16736 = distinct !DILexicalBlock(scope: !16737, file: !1777, line: 1443, column: 7)
!16737 = distinct !DILexicalBlock(scope: !16730, file: !1777, line: 1439, column: 6)
!16738 = !{i64 2148475215}
!16739 = !{i64 2148475255}
!16740 = !DILocation(line: 1444, column: 6, scope: !16737)
!16741 = !DILocation(line: 1455, column: 4, scope: !16719)
!16742 = !DILocation(line: 1456, column: 3, scope: !16719)
!16743 = !DILocation(line: 1461, column: 2, scope: !16703)
!16744 = distinct !DISubprogram(name: "prvTaskIsTaskSuspended", scope: !1777, file: !1777, line: 1369, type: !16745, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16748)
!16745 = !DISubroutineType(types: !16746)
!16746 = !{!1807, !16747}
!16747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!16748 = !{!16749, !16750, !16751}
!16749 = !DILocalVariable(name: "xTask", arg: 1, scope: !16744, file: !1777, line: 1369, type: !16747)
!16750 = !DILocalVariable(name: "xReturn", scope: !16744, file: !1777, line: 1371, type: !1807)
!16751 = !DILocalVariable(name: "pxTCB", scope: !16744, file: !1777, line: 1372, type: !16752)
!16752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16753)
!16753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16754, size: 32)
!16754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!16755 = !DILocation(line: 0, scope: !16744)
!16756 = !DILocation(line: 1378, column: 3, scope: !16757)
!16757 = distinct !DILexicalBlock(scope: !16744, file: !1777, line: 1378, column: 3)
!16758 = !DILocation(line: 1378, column: 3, scope: !16744)
!16759 = !DILocation(line: 1378, column: 3, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16757, file: !1777, line: 1378, column: 3)
!16761 = !DILocation(line: 1381, column: 7, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16744, file: !1777, line: 1381, column: 7)
!16763 = !DILocation(line: 1381, column: 7, scope: !16744)
!16764 = !DILocation(line: 1384, column: 8, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16766, file: !1777, line: 1384, column: 8)
!16766 = distinct !DILexicalBlock(scope: !16762, file: !1777, line: 1382, column: 3)
!16767 = !DILocation(line: 1384, column: 8, scope: !16766)
!16768 = !DILocation(line: 1407, column: 3, scope: !16744)
!16769 = distinct !DISubprogram(name: "xTaskResumeFromISR", scope: !1777, file: !1777, line: 1469, type: !16770, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16772)
!16770 = !DISubroutineType(types: !16771)
!16771 = !{!1807, !1806}
!16772 = !{!16773, !16774, !16775, !16776}
!16773 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !16769, file: !1777, line: 1469, type: !1806)
!16774 = !DILocalVariable(name: "xYieldRequired", scope: !16769, file: !1777, line: 1471, type: !1807)
!16775 = !DILocalVariable(name: "pxTCB", scope: !16769, file: !1777, line: 1472, type: !16026)
!16776 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !16769, file: !1777, line: 1473, type: !1800)
!16777 = !DILocation(line: 0, scope: !16769)
!16778 = !DILocation(line: 1475, column: 3, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16769, file: !1777, line: 1475, column: 3)
!16780 = !DILocation(line: 1475, column: 3, scope: !16769)
!16781 = !DILocation(line: 1475, column: 3, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16779, file: !1777, line: 1475, column: 3)
!16783 = !DILocation(line: 1493, column: 3, scope: !16769)
!16784 = !DILocation(line: 231, column: 2, scope: !16489, inlinedAt: !16785)
!16785 = distinct !DILocation(line: 1495, column: 28, scope: !16769)
!16786 = !DILocation(line: 0, scope: !16489, inlinedAt: !16785)
!16787 = !DILocation(line: 1497, column: 8, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16789, file: !1777, line: 1497, column: 8)
!16789 = distinct !DILexicalBlock(scope: !16769, file: !1777, line: 1496, column: 3)
!16790 = !DILocation(line: 1497, column: 40, scope: !16788)
!16791 = !DILocation(line: 1497, column: 8, scope: !16789)
!16792 = !DILocation(line: 1502, column: 9, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16794, file: !1777, line: 1502, column: 9)
!16794 = distinct !DILexicalBlock(scope: !16788, file: !1777, line: 1498, column: 4)
!16795 = !DILocation(line: 1502, column: 30, scope: !16793)
!16796 = !DILocation(line: 1502, column: 9, scope: !16794)
!16797 = !DILocation(line: 1506, column: 17, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16799, file: !1777, line: 1506, column: 10)
!16799 = distinct !DILexicalBlock(scope: !16793, file: !1777, line: 1503, column: 5)
!16800 = !DILocation(line: 1506, column: 31, scope: !16798)
!16801 = !DILocation(line: 1506, column: 45, scope: !16798)
!16802 = !DILocation(line: 1506, column: 28, scope: !16798)
!16803 = !DILocation(line: 1506, column: 10, scope: !16799)
!16804 = !DILocation(line: 1515, column: 40, scope: !16799)
!16805 = !DILocation(line: 1515, column: 15, scope: !16799)
!16806 = !DILocation(line: 1516, column: 6, scope: !16799)
!16807 = !DILocation(line: 1517, column: 5, scope: !16799)
!16808 = !DILocation(line: 1523, column: 56, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16793, file: !1777, line: 1519, column: 5)
!16810 = !DILocation(line: 1523, column: 6, scope: !16809)
!16811 = !DILocation(line: 0, scope: !16500, inlinedAt: !16812)
!16812 = distinct !DILocation(line: 1531, column: 3, scope: !16769)
!16813 = !DILocation(line: 249, column: 2, scope: !16500, inlinedAt: !16812)
!16814 = !DILocation(line: 1533, column: 3, scope: !16769)
!16815 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !1777, file: !1777, line: 1539, type: !154, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16816)
!16816 = !{!16817}
!16817 = !DILocalVariable(name: "xReturn", scope: !16815, file: !1777, line: 1541, type: !1807)
!16818 = !DILocation(line: 1553, column: 13, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16815, file: !1777, line: 1551, column: 2)
!16820 = !DILocation(line: 0, scope: !16815)
!16821 = !DILocation(line: 1559, column: 15, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16823, file: !1777, line: 1559, column: 7)
!16823 = distinct !DILexicalBlock(scope: !16815, file: !1777, line: 1558, column: 2)
!16824 = !DILocation(line: 1559, column: 7, scope: !16823)
!16825 = !DILocation(line: 1561, column: 14, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16822, file: !1777, line: 1560, column: 3)
!16827 = !DILocation(line: 1562, column: 3, scope: !16826)
!16828 = !DILocation(line: 1570, column: 6, scope: !16815)
!16829 = !DILocation(line: 215, column: 2, scope: !16830, inlinedAt: !16833)
!16830 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !1801, file: !1801, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16831)
!16831 = !{!16832}
!16832 = !DILocalVariable(name: "ulNewBASEPRI", scope: !16830, file: !1801, line: 213, type: !61)
!16833 = distinct !DILocation(line: 1577, column: 3, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16835, file: !1777, line: 1571, column: 2)
!16835 = distinct !DILexicalBlock(scope: !16815, file: !1777, line: 1570, column: 6)
!16836 = !{i64 806362, i64 806395, i64 806431, i64 806458}
!16837 = !DILocation(line: 0, scope: !16830, inlinedAt: !16833)
!16838 = !DILocation(line: 1587, column: 21, scope: !16834)
!16839 = !DILocation(line: 1588, column: 14, scope: !16834)
!16840 = !DILocation(line: 1597, column: 7, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16834, file: !1777, line: 1597, column: 7)
!16842 = !DILocation(line: 1606, column: 2, scope: !16834)
!16843 = !DILocation(line: 1612, column: 3, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16845, file: !1777, line: 1612, column: 3)
!16845 = distinct !DILexicalBlock(scope: !16846, file: !1777, line: 1612, column: 3)
!16846 = distinct !DILexicalBlock(scope: !16835, file: !1777, line: 1608, column: 2)
!16847 = !DILocation(line: 1614, column: 1, scope: !16815)
!16848 = distinct !DISubprogram(name: "prvIdleTask", scope: !1777, file: !1777, line: 2653, type: !945, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16849)
!16849 = !{!16850}
!16850 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !16848, file: !1777, line: 2653, type: !51)
!16851 = !DILocation(line: 0, scope: !16848)
!16852 = !DILocation(line: 2658, column: 2, scope: !16848)
!16853 = !DILocation(line: 2661, column: 3, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16855, file: !1777, line: 2659, column: 2)
!16855 = distinct !DILexicalBlock(scope: !16856, file: !1777, line: 2658, column: 2)
!16856 = distinct !DILexicalBlock(scope: !16848, file: !1777, line: 2658, column: 2)
!16857 = !DILocation(line: 2684, column: 8, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !1777, line: 2684, column: 8)
!16859 = distinct !DILexicalBlock(scope: !16854, file: !1777, line: 2674, column: 3)
!16860 = !DILocation(line: 2684, column: 78, scope: !16858)
!16861 = !DILocation(line: 2684, column: 8, scope: !16859)
!16862 = distinct !{!16862, !16863, !16864}
!16863 = !DILocation(line: 2658, column: 2, scope: !16856)
!16864 = !DILocation(line: 2754, column: 2, scope: !16856)
!16865 = !DILocation(line: 2686, column: 5, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16867, file: !1777, line: 2686, column: 5)
!16867 = distinct !DILexicalBlock(scope: !16858, file: !1777, line: 2685, column: 4)
!16868 = !{i64 2148488461}
!16869 = !{i64 2148488501}
!16870 = !DILocation(line: 2687, column: 4, scope: !16867)
!16871 = distinct !DISubprogram(name: "prvCheckTasksWaitingTermination", scope: !1777, file: !1777, line: 2950, type: !154, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16872)
!16872 = !{!16873, !16875}
!16873 = !DILocalVariable(name: "xListIsEmpty", scope: !16874, file: !1777, line: 2954, type: !1807)
!16874 = distinct !DILexicalBlock(scope: !16871, file: !1777, line: 2953, column: 2)
!16875 = !DILocalVariable(name: "pxTCB", scope: !16876, file: !1777, line: 2968, type: !1808)
!16876 = distinct !DILexicalBlock(scope: !16877, file: !1777, line: 2967, column: 4)
!16877 = distinct !DILexicalBlock(scope: !16878, file: !1777, line: 2966, column: 8)
!16878 = distinct !DILexicalBlock(scope: !16874, file: !1777, line: 2959, column: 3)
!16879 = !DILocation(line: 2958, column: 10, scope: !16874)
!16880 = !DILocation(line: 2958, column: 25, scope: !16874)
!16881 = !DILocation(line: 2958, column: 3, scope: !16874)
!16882 = !DILocation(line: 2960, column: 4, scope: !16878)
!16883 = !DILocation(line: 2962, column: 20, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16878, file: !1777, line: 2961, column: 4)
!16885 = !DILocation(line: 0, scope: !16874)
!16886 = !DILocation(line: 2964, column: 13, scope: !16878)
!16887 = !DILocation(line: 2966, column: 8, scope: !16878)
!16888 = !DILocation(line: 2970, column: 5, scope: !16876)
!16889 = !DILocation(line: 2972, column: 26, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16876, file: !1777, line: 2971, column: 5)
!16891 = !DILocation(line: 0, scope: !16876)
!16892 = !DILocation(line: 2973, column: 39, scope: !16890)
!16893 = !DILocation(line: 2973, column: 15, scope: !16890)
!16894 = !DILocation(line: 2974, column: 6, scope: !16890)
!16895 = !DILocation(line: 2975, column: 6, scope: !16890)
!16896 = !DILocation(line: 2977, column: 5, scope: !16876)
!16897 = !DILocation(line: 2979, column: 5, scope: !16876)
!16898 = !DILocation(line: 2980, column: 4, scope: !16876)
!16899 = distinct !{!16899, !16881, !16900}
!16900 = !DILocation(line: 2985, column: 3, scope: !16874)
!16901 = !DILocation(line: 2988, column: 1, scope: !16871)
!16902 = distinct !DISubprogram(name: "prvDeleteTCB", scope: !1777, file: !1777, line: 3231, type: !16903, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16905)
!16903 = !DISubroutineType(types: !16904)
!16904 = !{null, !1808}
!16905 = !{!16906}
!16906 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !16902, file: !1777, line: 3231, type: !1808)
!16907 = !DILocation(line: 0, scope: !16902)
!16908 = !DILocation(line: 3257, column: 4, scope: !16909)
!16909 = distinct !DILexicalBlock(scope: !16902, file: !1777, line: 3256, column: 3)
!16910 = !DILocation(line: 3261, column: 14, scope: !16902)
!16911 = !DILocation(line: 3261, column: 3, scope: !16902)
!16912 = !DILocation(line: 3262, column: 2, scope: !16902)
!16913 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !1777, file: !1777, line: 1617, type: !154, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !2550)
!16914 = !DILocation(line: 215, column: 2, scope: !16830, inlinedAt: !16915)
!16915 = distinct !DILocation(line: 1622, column: 2, scope: !16913)
!16916 = !DILocation(line: 0, scope: !16830, inlinedAt: !16915)
!16917 = !DILocation(line: 1623, column: 20, scope: !16913)
!16918 = !DILocation(line: 1624, column: 2, scope: !16913)
!16919 = !DILocation(line: 1625, column: 1, scope: !16913)
!16920 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !1777, file: !1777, line: 1759, type: !16921, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16923)
!16921 = !DISubroutineType(types: !16922)
!16922 = !{!1822}
!16923 = !{!16924}
!16924 = !DILocalVariable(name: "xTicks", scope: !16920, file: !1777, line: 1761, type: !1822)
!16925 = !DILocation(line: 1766, column: 12, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16920, file: !1777, line: 1765, column: 2)
!16927 = !DILocation(line: 0, scope: !16920)
!16928 = !DILocation(line: 1770, column: 2, scope: !16920)
!16929 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !1777, file: !1777, line: 1774, type: !16921, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16930)
!16930 = !{!16931, !16932}
!16931 = !DILocalVariable(name: "xReturn", scope: !16929, file: !1777, line: 1776, type: !1822)
!16932 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !16929, file: !1777, line: 1777, type: !1800)
!16933 = !DILocation(line: 1793, column: 2, scope: !16929)
!16934 = !DILocation(line: 0, scope: !16929)
!16935 = !DILocation(line: 1797, column: 13, scope: !16936)
!16936 = distinct !DILexicalBlock(scope: !16929, file: !1777, line: 1796, column: 2)
!16937 = !DILocation(line: 1801, column: 2, scope: !16929)
!16938 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !1777, file: !1777, line: 1805, type: !16939, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !2550)
!16939 = !DISubroutineType(types: !16940)
!16940 = !{!1800}
!16941 = !DILocation(line: 1809, column: 9, scope: !16938)
!16942 = !DILocation(line: 1809, column: 2, scope: !16938)
!16943 = distinct !DISubprogram(name: "pcTaskGetTaskName", scope: !1777, file: !1777, line: 1815, type: !16944, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16946)
!16944 = !DISubroutineType(types: !16945)
!16945 = !{!491, !1806}
!16946 = !{!16947, !16948}
!16947 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !16943, file: !1777, line: 1815, type: !1806)
!16948 = !DILocalVariable(name: "pxTCB", scope: !16943, file: !1777, line: 1817, type: !1808)
!16949 = !DILocation(line: 0, scope: !16943)
!16950 = !DILocation(line: 1820, column: 11, scope: !16943)
!16951 = !DILocation(line: 1821, column: 3, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16943, file: !1777, line: 1821, column: 3)
!16953 = !DILocation(line: 1821, column: 3, scope: !16943)
!16954 = !DILocation(line: 1821, column: 3, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16952, file: !1777, line: 1821, column: 3)
!16956 = !DILocation(line: 1822, column: 13, scope: !16943)
!16957 = !DILocation(line: 1822, column: 3, scope: !16943)
!16958 = distinct !DISubprogram(name: "uxTaskGetSystemState", scope: !1777, file: !1777, line: 1830, type: !16959, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !16977)
!16959 = !DISubroutineType(types: !16960)
!16960 = !{!1800, !16961, !16975, !16976}
!16961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16962)
!16962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16963, size: 32)
!16963 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskStatus_t", file: !1785, line: 176, baseType: !16964)
!16964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTASK_STATUS", file: !1785, line: 166, size: 256, elements: !16965)
!16965 = !{!16966, !16967, !16968, !16969, !16971, !16972, !16973, !16974}
!16966 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !16964, file: !1785, line: 168, baseType: !1806, size: 32)
!16967 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !16964, file: !1785, line: 169, baseType: !662, size: 32, offset: 32)
!16968 = !DIDerivedType(tag: DW_TAG_member, name: "xTaskNumber", scope: !16964, file: !1785, line: 170, baseType: !1800, size: 32, offset: 64)
!16969 = !DIDerivedType(tag: DW_TAG_member, name: "eCurrentState", scope: !16964, file: !1785, line: 171, baseType: !16970, size: 32, offset: 96)
!16970 = !DIDerivedType(tag: DW_TAG_typedef, name: "eTaskState", file: !1785, line: 119, baseType: !1784)
!16971 = !DIDerivedType(tag: DW_TAG_member, name: "uxCurrentPriority", scope: !16964, file: !1785, line: 172, baseType: !1800, size: 32, offset: 128)
!16972 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !16964, file: !1785, line: 173, baseType: !1800, size: 32, offset: 160)
!16973 = !DIDerivedType(tag: DW_TAG_member, name: "ulRunTimeCounter", scope: !16964, file: !1785, line: 174, baseType: !61, size: 32, offset: 192)
!16974 = !DIDerivedType(tag: DW_TAG_member, name: "usStackHighWaterMark", scope: !16964, file: !1785, line: 175, baseType: !1802, size: 16, offset: 224)
!16975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1800)
!16976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4532)
!16977 = !{!16978, !16979, !16980, !16981, !16982}
!16978 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !16958, file: !1777, line: 1830, type: !16961)
!16979 = !DILocalVariable(name: "uxArraySize", arg: 2, scope: !16958, file: !1777, line: 1830, type: !16975)
!16980 = !DILocalVariable(name: "pulTotalRunTime", arg: 3, scope: !16958, file: !1777, line: 1830, type: !16976)
!16981 = !DILocalVariable(name: "uxTask", scope: !16958, file: !1777, line: 1832, type: !1800)
!16982 = !DILocalVariable(name: "uxQueue", scope: !16958, file: !1777, line: 1832, type: !1800)
!16983 = !DILocation(line: 0, scope: !16958)
!16984 = !DILocation(line: 1834, column: 3, scope: !16958)
!16985 = !DILocation(line: 1837, column: 23, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16987, file: !1777, line: 1837, column: 8)
!16987 = distinct !DILexicalBlock(scope: !16958, file: !1777, line: 1835, column: 3)
!16988 = !DILocation(line: 1837, column: 20, scope: !16986)
!16989 = !DILocation(line: 1837, column: 8, scope: !16987)
!16990 = !DILocation(line: 1843, column: 13, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16992, file: !1777, line: 1842, column: 5)
!16992 = distinct !DILexicalBlock(scope: !16986, file: !1777, line: 1838, column: 4)
!16993 = !DILocation(line: 1844, column: 48, scope: !16991)
!16994 = !DILocation(line: 1844, column: 82, scope: !16991)
!16995 = !DILocation(line: 1844, column: 16, scope: !16991)
!16996 = !DILocation(line: 1844, column: 13, scope: !16991)
!16997 = !DILocation(line: 1846, column: 22, scope: !16992)
!16998 = !DILocation(line: 1846, column: 5, scope: !16991)
!16999 = distinct !{!16999, !17000, !17001}
!17000 = !DILocation(line: 1841, column: 5, scope: !16992)
!17001 = !DILocation(line: 1846, column: 57, scope: !16992)
!17002 = !DILocation(line: 1850, column: 47, scope: !16992)
!17003 = !DILocation(line: 1850, column: 91, scope: !16992)
!17004 = !DILocation(line: 1850, column: 15, scope: !16992)
!17005 = !DILocation(line: 1850, column: 12, scope: !16992)
!17006 = !DILocation(line: 1851, column: 47, scope: !16992)
!17007 = !DILocation(line: 1851, column: 91, scope: !16992)
!17008 = !DILocation(line: 1851, column: 15, scope: !16992)
!17009 = !DILocation(line: 1851, column: 12, scope: !16992)
!17010 = !DILocation(line: 1857, column: 48, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !16992, file: !1777, line: 1854, column: 5)
!17012 = !DILocation(line: 1857, column: 16, scope: !17011)
!17013 = !DILocation(line: 1857, column: 13, scope: !17011)
!17014 = !DILocation(line: 1865, column: 48, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !16992, file: !1777, line: 1862, column: 5)
!17016 = !DILocation(line: 1865, column: 16, scope: !17015)
!17017 = !DILocation(line: 1865, column: 13, scope: !17015)
!17018 = !DILocation(line: 1882, column: 26, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !1777, line: 1882, column: 10)
!17020 = distinct !DILexicalBlock(scope: !16992, file: !1777, line: 1881, column: 5)
!17021 = !DILocation(line: 1882, column: 10, scope: !17020)
!17022 = !DILocation(line: 1884, column: 24, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17019, file: !1777, line: 1883, column: 6)
!17024 = !DILocation(line: 1885, column: 6, scope: !17023)
!17025 = !DILocation(line: 1894, column: 12, scope: !16958)
!17026 = !DILocation(line: 1896, column: 3, scope: !16958)
!17027 = distinct !DISubprogram(name: "prvListTaskWithinSingleList", scope: !1777, file: !1777, line: 3098, type: !17028, scopeLine: 3099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17030)
!17028 = !DISubroutineType(types: !17029)
!17029 = !{!1800, !16962, !1843, !16970}
!17030 = !{!17031, !17032, !17033, !17034, !17037, !17038, !17039, !17043}
!17031 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !17027, file: !1777, line: 3098, type: !16962)
!17032 = !DILocalVariable(name: "pxList", arg: 2, scope: !17027, file: !1777, line: 3098, type: !1843)
!17033 = !DILocalVariable(name: "eState", arg: 3, scope: !17027, file: !1777, line: 3098, type: !16970)
!17034 = !DILocalVariable(name: "pxNextTCB", scope: !17027, file: !1777, line: 3100, type: !17035)
!17035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17036, size: 32)
!17036 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1809)
!17037 = !DILocalVariable(name: "pxFirstTCB", scope: !17027, file: !1777, line: 3100, type: !17035)
!17038 = !DILocalVariable(name: "uxTask", scope: !17027, file: !1777, line: 3101, type: !1800)
!17039 = !DILocalVariable(name: "pxConstList", scope: !17040, file: !1777, line: 3105, type: !1871)
!17040 = distinct !DILexicalBlock(scope: !17041, file: !1777, line: 3105, column: 4)
!17041 = distinct !DILexicalBlock(scope: !17042, file: !1777, line: 3104, column: 3)
!17042 = distinct !DILexicalBlock(scope: !17027, file: !1777, line: 3103, column: 7)
!17043 = !DILocalVariable(name: "pxConstList", scope: !17044, file: !1777, line: 3113, type: !1871)
!17044 = distinct !DILexicalBlock(scope: !17045, file: !1777, line: 3113, column: 5)
!17045 = distinct !DILexicalBlock(scope: !17041, file: !1777, line: 3112, column: 4)
!17046 = !DILocation(line: 0, scope: !17027)
!17047 = !DILocation(line: 3103, column: 7, scope: !17042)
!17048 = !DILocation(line: 3103, column: 41, scope: !17042)
!17049 = !DILocation(line: 3103, column: 7, scope: !17027)
!17050 = !DILocation(line: 0, scope: !17040)
!17051 = !DILocation(line: 3105, column: 4, scope: !17040)
!17052 = !DILocation(line: 3105, column: 4, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17040, file: !1777, line: 3105, column: 4)
!17054 = !DILocation(line: 3105, column: 4, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17053, file: !1777, line: 3105, column: 4)
!17056 = !DILocation(line: 3111, column: 4, scope: !17041)
!17057 = !DILocation(line: 3113, column: 5, scope: !17044)
!17058 = !DILocation(line: 0, scope: !17044)
!17059 = !DILocation(line: 3113, column: 5, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17044, file: !1777, line: 3113, column: 5)
!17061 = !DILocation(line: 3113, column: 5, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17060, file: !1777, line: 3113, column: 5)
!17063 = !DILocation(line: 3115, column: 33, scope: !17045)
!17064 = !DILocation(line: 3115, column: 41, scope: !17045)
!17065 = !DILocation(line: 3116, column: 77, scope: !17045)
!17066 = !DILocation(line: 3116, column: 33, scope: !17045)
!17067 = !DILocation(line: 3116, column: 44, scope: !17045)
!17068 = !DILocation(line: 3117, column: 58, scope: !17045)
!17069 = !DILocation(line: 3117, column: 33, scope: !17045)
!17070 = !DILocation(line: 3117, column: 45, scope: !17045)
!17071 = !DILocation(line: 3118, column: 33, scope: !17045)
!17072 = !DILocation(line: 3118, column: 47, scope: !17045)
!17073 = !DILocation(line: 3119, column: 64, scope: !17045)
!17074 = !DILocation(line: 3119, column: 33, scope: !17045)
!17075 = !DILocation(line: 3119, column: 51, scope: !17045)
!17076 = !DILocation(line: 3126, column: 10, scope: !17077)
!17077 = distinct !DILexicalBlock(scope: !17045, file: !1777, line: 3122, column: 5)
!17078 = !DILocation(line: 3128, column: 11, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17080, file: !1777, line: 3128, column: 11)
!17080 = distinct !DILexicalBlock(scope: !17081, file: !1777, line: 3127, column: 6)
!17081 = distinct !DILexicalBlock(scope: !17077, file: !1777, line: 3126, column: 10)
!17082 = !DILocation(line: 3128, column: 69, scope: !17079)
!17083 = !DILocation(line: 3128, column: 11, scope: !17080)
!17084 = !DILocation(line: 3130, column: 50, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17079, file: !1777, line: 3129, column: 7)
!17086 = !DILocation(line: 3131, column: 7, scope: !17085)
!17087 = !DILocation(line: 3138, column: 62, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17045, file: !1777, line: 3137, column: 5)
!17089 = !DILocation(line: 3138, column: 34, scope: !17088)
!17090 = !DILocation(line: 3138, column: 49, scope: !17088)
!17091 = !DILocation(line: 3152, column: 34, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17045, file: !1777, line: 3151, column: 5)
!17093 = !DILocation(line: 3152, column: 51, scope: !17092)
!17094 = !DILocation(line: 3162, column: 110, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17045, file: !1777, line: 3161, column: 5)
!17096 = !DILocation(line: 3162, column: 85, scope: !17095)
!17097 = !DILocation(line: 3162, column: 57, scope: !17095)
!17098 = !DILocation(line: 3162, column: 34, scope: !17095)
!17099 = !DILocation(line: 3162, column: 55, scope: !17095)
!17100 = !DILocation(line: 3166, column: 11, scope: !17045)
!17101 = !DILocation(line: 3168, column: 23, scope: !17041)
!17102 = !DILocation(line: 3168, column: 4, scope: !17045)
!17103 = distinct !{!17103, !17056, !17104}
!17104 = !DILocation(line: 3168, column: 37, scope: !17041)
!17105 = !DILocation(line: 3175, column: 3, scope: !17027)
!17106 = distinct !DISubprogram(name: "prvTaskCheckFreeStackSpace", scope: !1777, file: !1777, line: 3183, type: !17107, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17109)
!17107 = !DISubroutineType(types: !17108)
!17108 = !{!1802, !2691}
!17109 = !{!17110, !17111}
!17110 = !DILocalVariable(name: "pucStackByte", arg: 1, scope: !17106, file: !1777, line: 3183, type: !2691)
!17111 = !DILocalVariable(name: "ulCount", scope: !17106, file: !1777, line: 3185, type: !61)
!17112 = !DILocation(line: 0, scope: !17106)
!17113 = !DILocation(line: 3187, column: 10, scope: !17106)
!17114 = !DILocation(line: 3187, column: 24, scope: !17106)
!17115 = !DILocation(line: 3187, column: 3, scope: !17106)
!17116 = !DILocation(line: 3189, column: 17, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17106, file: !1777, line: 3188, column: 3)
!17118 = !DILocation(line: 3190, column: 11, scope: !17117)
!17119 = distinct !{!17119, !17115, !17120}
!17120 = !DILocation(line: 3191, column: 3, scope: !17106)
!17121 = !DILocation(line: 3193, column: 11, scope: !17106)
!17122 = !DILocation(line: 3195, column: 3, scope: !17106)
!17123 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !1777, file: !1777, line: 2258, type: !17124, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17126)
!17124 = !DISubroutineType(types: !17125)
!17125 = !{null, !1871, !16171}
!17126 = !{!17127, !17128, !17129}
!17127 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !17123, file: !1777, line: 2258, type: !1871)
!17128 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !17123, file: !1777, line: 2258, type: !16171)
!17129 = !DILocalVariable(name: "xTimeToWake", scope: !17123, file: !1777, line: 2260, type: !1822)
!17130 = !DILocation(line: 0, scope: !17123)
!17131 = !DILocation(line: 2262, column: 2, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17123, file: !1777, line: 2262, column: 2)
!17133 = !DILocation(line: 2262, column: 2, scope: !17123)
!17134 = !DILocation(line: 2262, column: 2, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17132, file: !1777, line: 2262, column: 2)
!17136 = !DILocation(line: 2271, column: 31, scope: !17123)
!17137 = !DILocation(line: 2271, column: 45, scope: !17123)
!17138 = !DILocation(line: 2271, column: 2, scope: !17123)
!17139 = !DILocation(line: 2276, column: 23, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17123, file: !1777, line: 2276, column: 6)
!17141 = !DILocation(line: 2276, column: 37, scope: !17140)
!17142 = !DILocation(line: 2276, column: 6, scope: !17140)
!17143 = !DILocation(line: 2276, column: 58, scope: !17140)
!17144 = !DILocation(line: 2276, column: 6, scope: !17123)
!17145 = !DILocation(line: 2280, column: 3, scope: !17146)
!17146 = distinct !DILexicalBlock(scope: !17140, file: !1777, line: 2277, column: 2)
!17147 = !DILocation(line: 2281, column: 2, scope: !17146)
!17148 = !DILocation(line: 2289, column: 20, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17150, file: !1777, line: 2289, column: 7)
!17150 = distinct !DILexicalBlock(scope: !17123, file: !1777, line: 2288, column: 2)
!17151 = !DILocation(line: 2289, column: 7, scope: !17150)
!17152 = !DILocation(line: 2294, column: 44, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17149, file: !1777, line: 2290, column: 3)
!17154 = !DILocation(line: 2294, column: 58, scope: !17153)
!17155 = !DILocation(line: 2294, column: 4, scope: !17153)
!17156 = !DILocation(line: 2295, column: 3, scope: !17153)
!17157 = !DILocation(line: 2301, column: 18, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17149, file: !1777, line: 2297, column: 3)
!17159 = !DILocation(line: 2301, column: 29, scope: !17158)
!17160 = !DILocation(line: 2302, column: 4, scope: !17158)
!17161 = !DILocation(line: 2314, column: 1, scope: !17123)
!17162 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !1777, file: !1777, line: 2317, type: !17163, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17165)
!17163 = !DISubroutineType(types: !17164)
!17164 = !{null, !1843, !16171, !16171}
!17165 = !{!17166, !17167, !17168, !17169}
!17166 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !17162, file: !1777, line: 2317, type: !1843)
!17167 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !17162, file: !1777, line: 2317, type: !16171)
!17168 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !17162, file: !1777, line: 2317, type: !16171)
!17169 = !DILocalVariable(name: "xTimeToWake", scope: !17162, file: !1777, line: 2319, type: !1822)
!17170 = !DILocation(line: 0, scope: !17162)
!17171 = !DILocation(line: 2321, column: 2, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17162, file: !1777, line: 2321, column: 2)
!17173 = !DILocation(line: 2321, column: 2, scope: !17162)
!17174 = !DILocation(line: 2321, column: 2, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17172, file: !1777, line: 2321, column: 2)
!17176 = !DILocation(line: 2325, column: 2, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17162, file: !1777, line: 2325, column: 2)
!17178 = !DILocation(line: 2325, column: 2, scope: !17162)
!17179 = !DILocation(line: 2325, column: 2, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17177, file: !1777, line: 2325, column: 2)
!17181 = !DILocation(line: 2330, column: 2, scope: !17162)
!17182 = !DILocation(line: 2337, column: 34, scope: !17162)
!17183 = !DILocation(line: 2337, column: 48, scope: !17162)
!17184 = !DILocation(line: 2337, column: 2, scope: !17162)
!17185 = !DILocation(line: 2342, column: 23, scope: !17186)
!17186 = distinct !DILexicalBlock(scope: !17162, file: !1777, line: 2342, column: 6)
!17187 = !DILocation(line: 2342, column: 37, scope: !17186)
!17188 = !DILocation(line: 2342, column: 6, scope: !17186)
!17189 = !DILocation(line: 2342, column: 58, scope: !17186)
!17190 = !DILocation(line: 2342, column: 6, scope: !17162)
!17191 = !DILocation(line: 2346, column: 3, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17186, file: !1777, line: 2343, column: 2)
!17193 = !DILocation(line: 2347, column: 2, scope: !17192)
!17194 = !DILocation(line: 2355, column: 20, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17196, file: !1777, line: 2355, column: 7)
!17196 = distinct !DILexicalBlock(scope: !17162, file: !1777, line: 2354, column: 2)
!17197 = !DILocation(line: 2355, column: 7, scope: !17196)
!17198 = !DILocation(line: 2360, column: 44, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17195, file: !1777, line: 2356, column: 3)
!17200 = !DILocation(line: 2360, column: 58, scope: !17199)
!17201 = !DILocation(line: 2360, column: 4, scope: !17199)
!17202 = !DILocation(line: 2361, column: 3, scope: !17199)
!17203 = !DILocation(line: 2367, column: 18, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17195, file: !1777, line: 2363, column: 3)
!17205 = !DILocation(line: 2367, column: 29, scope: !17204)
!17206 = !DILocation(line: 2368, column: 4, scope: !17204)
!17207 = !DILocation(line: 2380, column: 1, scope: !17162)
!17208 = distinct !DISubprogram(name: "vTaskPlaceOnEventListRestricted", scope: !1777, file: !1777, line: 2385, type: !17124, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17209)
!17209 = !{!17210, !17211, !17212}
!17210 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !17208, file: !1777, line: 2385, type: !1871)
!17211 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !17208, file: !1777, line: 2385, type: !16171)
!17212 = !DILocalVariable(name: "xTimeToWake", scope: !17208, file: !1777, line: 2387, type: !1822)
!17213 = !DILocation(line: 0, scope: !17208)
!17214 = !DILocation(line: 2389, column: 3, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17208, file: !1777, line: 2389, column: 3)
!17216 = !DILocation(line: 2389, column: 3, scope: !17208)
!17217 = !DILocation(line: 2389, column: 3, scope: !17218)
!17218 = distinct !DILexicalBlock(scope: !17215, file: !1777, line: 2389, column: 3)
!17219 = !DILocation(line: 2401, column: 35, scope: !17208)
!17220 = !DILocation(line: 2401, column: 49, scope: !17208)
!17221 = !DILocation(line: 2401, column: 3, scope: !17208)
!17222 = !DILocation(line: 2406, column: 24, scope: !17223)
!17223 = distinct !DILexicalBlock(scope: !17208, file: !1777, line: 2406, column: 7)
!17224 = !DILocation(line: 2406, column: 38, scope: !17223)
!17225 = !DILocation(line: 2406, column: 7, scope: !17223)
!17226 = !DILocation(line: 2406, column: 59, scope: !17223)
!17227 = !DILocation(line: 2406, column: 7, scope: !17208)
!17228 = !DILocation(line: 2410, column: 4, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17223, file: !1777, line: 2407, column: 3)
!17230 = !DILocation(line: 2411, column: 3, scope: !17229)
!17231 = !DILocation(line: 2419, column: 17, scope: !17208)
!17232 = !DILocation(line: 2419, column: 28, scope: !17208)
!17233 = !DILocation(line: 2422, column: 3, scope: !17208)
!17234 = !DILocation(line: 2423, column: 2, scope: !17208)
!17235 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !1777, file: !1777, line: 2428, type: !17236, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17241)
!17236 = !DISubroutineType(types: !17237)
!17237 = !{!1807, !17238}
!17238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17239)
!17239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17240, size: 32)
!17240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1844)
!17241 = !{!17242, !17243, !17244}
!17242 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !17235, file: !1777, line: 2428, type: !17238)
!17243 = !DILocalVariable(name: "pxUnblockedTCB", scope: !17235, file: !1777, line: 2430, type: !1808)
!17244 = !DILocalVariable(name: "xReturn", scope: !17235, file: !1777, line: 2431, type: !1807)
!17245 = !DILocation(line: 0, scope: !17235)
!17246 = !DILocation(line: 2446, column: 31, scope: !17235)
!17247 = !DILocation(line: 2447, column: 2, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17235, file: !1777, line: 2447, column: 2)
!17249 = !DILocation(line: 2447, column: 2, scope: !17235)
!17250 = !DILocation(line: 2447, column: 2, scope: !17251)
!17251 = distinct !DILexicalBlock(scope: !17248, file: !1777, line: 2447, column: 2)
!17252 = !DILocation(line: 2448, column: 44, scope: !17235)
!17253 = !DILocation(line: 2448, column: 11, scope: !17235)
!17254 = !DILocation(line: 2450, column: 6, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17235, file: !1777, line: 2450, column: 6)
!17256 = !DILocation(line: 2450, column: 27, scope: !17255)
!17257 = !DILocation(line: 2450, column: 6, scope: !17235)
!17258 = !DILocation(line: 2452, column: 45, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17255, file: !1777, line: 2451, column: 2)
!17260 = !DILocation(line: 2452, column: 12, scope: !17259)
!17261 = !DILocation(line: 2453, column: 3, scope: !17259)
!17262 = !DILocation(line: 2454, column: 2, scope: !17259)
!17263 = !DILocation(line: 2459, column: 3, scope: !17264)
!17264 = distinct !DILexicalBlock(scope: !17255, file: !1777, line: 2456, column: 2)
!17265 = !DILocation(line: 2462, column: 22, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17235, file: !1777, line: 2462, column: 6)
!17267 = !DILocation(line: 2462, column: 35, scope: !17266)
!17268 = !DILocation(line: 2462, column: 49, scope: !17266)
!17269 = !DILocation(line: 2462, column: 33, scope: !17266)
!17270 = !DILocation(line: 2462, column: 6, scope: !17235)
!17271 = !DILocation(line: 2471, column: 17, scope: !17272)
!17272 = distinct !DILexicalBlock(scope: !17266, file: !1777, line: 2463, column: 2)
!17273 = !DILocation(line: 2472, column: 2, scope: !17272)
!17274 = !DILocation(line: 0, scope: !17266)
!17275 = !DILocation(line: 2492, column: 2, scope: !17235)
!17276 = distinct !DISubprogram(name: "xTaskRemoveFromUnorderedEventList", scope: !1777, file: !1777, line: 2496, type: !17277, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17279)
!17277 = !DISubroutineType(types: !17278)
!17278 = !{!1807, !1849, !16171}
!17279 = !{!17280, !17281, !17282, !17283}
!17280 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !17276, file: !1777, line: 2496, type: !1849)
!17281 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !17276, file: !1777, line: 2496, type: !16171)
!17282 = !DILocalVariable(name: "pxUnblockedTCB", scope: !17276, file: !1777, line: 2498, type: !1808)
!17283 = !DILocalVariable(name: "xReturn", scope: !17276, file: !1777, line: 2499, type: !1807)
!17284 = !DILocation(line: 0, scope: !17276)
!17285 = !DILocation(line: 2503, column: 2, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17276, file: !1777, line: 2503, column: 2)
!17287 = !DILocation(line: 2503, column: 2, scope: !17276)
!17288 = !DILocation(line: 2503, column: 2, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17286, file: !1777, line: 2503, column: 2)
!17290 = !DILocation(line: 2506, column: 2, scope: !17276)
!17291 = !DILocation(line: 2510, column: 31, scope: !17276)
!17292 = !DILocation(line: 2511, column: 2, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17276, file: !1777, line: 2511, column: 2)
!17294 = !DILocation(line: 2511, column: 2, scope: !17276)
!17295 = !DILocation(line: 2511, column: 2, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17293, file: !1777, line: 2511, column: 2)
!17297 = !DILocation(line: 2512, column: 11, scope: !17276)
!17298 = !DILocation(line: 2517, column: 44, scope: !17276)
!17299 = !DILocation(line: 2517, column: 11, scope: !17276)
!17300 = !DILocation(line: 2518, column: 2, scope: !17276)
!17301 = !DILocation(line: 2520, column: 22, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17276, file: !1777, line: 2520, column: 6)
!17303 = !DILocation(line: 2520, column: 35, scope: !17302)
!17304 = !DILocation(line: 2520, column: 49, scope: !17302)
!17305 = !DILocation(line: 2520, column: 33, scope: !17302)
!17306 = !DILocation(line: 2520, column: 6, scope: !17276)
!17307 = !DILocation(line: 2530, column: 17, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17302, file: !1777, line: 2521, column: 2)
!17309 = !DILocation(line: 2531, column: 2, scope: !17308)
!17310 = !DILocation(line: 0, scope: !17302)
!17311 = !DILocation(line: 2537, column: 2, scope: !17276)
!17312 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !1777, file: !1777, line: 2541, type: !17313, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17322)
!17313 = !DISubroutineType(types: !17314)
!17314 = !{null, !17315}
!17315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17316)
!17316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17317, size: 32)
!17317 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !1785, line: 138, baseType: !17318)
!17318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !1785, line: 134, size: 64, elements: !17319)
!17319 = !{!17320, !17321}
!17320 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !17318, file: !1785, line: 136, baseType: !1807, size: 32)
!17321 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !17318, file: !1785, line: 137, baseType: !1822, size: 32, offset: 32)
!17322 = !{!17323}
!17323 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !17312, file: !1777, line: 2541, type: !17315)
!17324 = !DILocation(line: 0, scope: !17312)
!17325 = !DILocation(line: 2543, column: 2, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17312, file: !1777, line: 2543, column: 2)
!17327 = !DILocation(line: 2543, column: 2, scope: !17312)
!17328 = !DILocation(line: 2543, column: 2, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17326, file: !1777, line: 2543, column: 2)
!17330 = !DILocation(line: 2544, column: 30, scope: !17312)
!17331 = !DILocation(line: 2544, column: 13, scope: !17312)
!17332 = !DILocation(line: 2544, column: 28, scope: !17312)
!17333 = !DILocation(line: 2545, column: 31, scope: !17312)
!17334 = !DILocation(line: 2545, column: 13, scope: !17312)
!17335 = !DILocation(line: 2545, column: 29, scope: !17312)
!17336 = !DILocation(line: 2546, column: 1, scope: !17312)
!17337 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !1777, file: !1777, line: 2549, type: !17338, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17340)
!17338 = !DISubroutineType(types: !17339)
!17339 = !{!1807, !17315, !16169}
!17340 = !{!17341, !17342, !17343, !17344}
!17341 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !17337, file: !1777, line: 2549, type: !17315)
!17342 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !17337, file: !1777, line: 2549, type: !16169)
!17343 = !DILocalVariable(name: "xReturn", scope: !17337, file: !1777, line: 2551, type: !1807)
!17344 = !DILocalVariable(name: "xConstTickCount", scope: !17345, file: !1777, line: 2559, type: !16171)
!17345 = distinct !DILexicalBlock(scope: !17337, file: !1777, line: 2557, column: 2)
!17346 = !DILocation(line: 0, scope: !17337)
!17347 = !DILocation(line: 2553, column: 2, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17337, file: !1777, line: 2553, column: 2)
!17349 = !DILocation(line: 2553, column: 2, scope: !17337)
!17350 = !DILocation(line: 2553, column: 2, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17348, file: !1777, line: 2553, column: 2)
!17352 = !DILocation(line: 2554, column: 2, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17337, file: !1777, line: 2554, column: 2)
!17354 = !DILocation(line: 2554, column: 2, scope: !17337)
!17355 = !DILocation(line: 2554, column: 2, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17353, file: !1777, line: 2554, column: 2)
!17357 = !DILocation(line: 2556, column: 2, scope: !17337)
!17358 = !DILocation(line: 2559, column: 38, scope: !17345)
!17359 = !DILocation(line: 0, scope: !17345)
!17360 = !DILocation(line: 2565, column: 8, scope: !17361)
!17361 = distinct !DILexicalBlock(scope: !17345, file: !1777, line: 2565, column: 8)
!17362 = !DILocation(line: 2565, column: 23, scope: !17361)
!17363 = !DILocation(line: 2565, column: 8, scope: !17345)
!17364 = !DILocation(line: 2572, column: 9, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17361, file: !1777, line: 2572, column: 7)
!17366 = !DILocation(line: 2572, column: 39, scope: !17365)
!17367 = !DILocation(line: 2572, column: 25, scope: !17365)
!17368 = !DILocation(line: 0, scope: !17365)
!17369 = !DILocation(line: 2572, column: 56, scope: !17365)
!17370 = !DILocation(line: 2580, column: 30, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17365, file: !1777, line: 2580, column: 12)
!17372 = !DILocation(line: 2580, column: 61, scope: !17371)
!17373 = !DILocation(line: 2580, column: 12, scope: !17365)
!17374 = !DILocation(line: 2583, column: 19, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17371, file: !1777, line: 2581, column: 3)
!17376 = !DILocation(line: 2584, column: 4, scope: !17375)
!17377 = !DILocation(line: 2586, column: 3, scope: !17375)
!17378 = !DILocation(line: 0, scope: !17361)
!17379 = !DILocation(line: 2592, column: 2, scope: !17337)
!17380 = !DILocation(line: 2594, column: 2, scope: !17337)
!17381 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !1777, file: !1777, line: 2598, type: !154, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !2550)
!17382 = !DILocation(line: 2600, column: 16, scope: !17381)
!17383 = !DILocation(line: 2601, column: 1, scope: !17381)
!17384 = distinct !DISubprogram(name: "uxTaskGetTaskNumber", scope: !1777, file: !1777, line: 2606, type: !16467, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17385)
!17385 = !{!17386, !17387, !17388}
!17386 = !DILocalVariable(name: "xTask", arg: 1, scope: !17384, file: !1777, line: 2606, type: !1806)
!17387 = !DILocalVariable(name: "uxReturn", scope: !17384, file: !1777, line: 2608, type: !1800)
!17388 = !DILocalVariable(name: "pxTCB", scope: !17384, file: !1777, line: 2609, type: !1808)
!17389 = !DILocation(line: 0, scope: !17384)
!17390 = !DILocation(line: 2611, column: 13, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17384, file: !1777, line: 2611, column: 7)
!17392 = !DILocation(line: 2611, column: 7, scope: !17384)
!17393 = !DILocation(line: 2614, column: 22, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17391, file: !1777, line: 2612, column: 3)
!17395 = !DILocation(line: 2615, column: 3, scope: !17394)
!17396 = !DILocation(line: 0, scope: !17391)
!17397 = !DILocation(line: 2621, column: 3, scope: !17384)
!17398 = distinct !DISubprogram(name: "vTaskSetTaskNumber", scope: !1777, file: !1777, line: 2629, type: !17399, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17401)
!17399 = !DISubroutineType(types: !17400)
!17400 = !{null, !1806, !16975}
!17401 = !{!17402, !17403, !17404}
!17402 = !DILocalVariable(name: "xTask", arg: 1, scope: !17398, file: !1777, line: 2629, type: !1806)
!17403 = !DILocalVariable(name: "uxHandle", arg: 2, scope: !17398, file: !1777, line: 2629, type: !16975)
!17404 = !DILocalVariable(name: "pxTCB", scope: !17398, file: !1777, line: 2631, type: !1808)
!17405 = !DILocation(line: 0, scope: !17398)
!17406 = !DILocation(line: 2633, column: 13, scope: !17407)
!17407 = distinct !DILexicalBlock(scope: !17398, file: !1777, line: 2633, column: 7)
!17408 = !DILocation(line: 2633, column: 7, scope: !17398)
!17409 = !DILocation(line: 2636, column: 11, scope: !17410)
!17410 = distinct !DILexicalBlock(scope: !17407, file: !1777, line: 2634, column: 3)
!17411 = !DILocation(line: 2636, column: 24, scope: !17410)
!17412 = !DILocation(line: 2637, column: 3, scope: !17410)
!17413 = !DILocation(line: 2638, column: 2, scope: !17398)
!17414 = distinct !DISubprogram(name: "uxTaskGetStackHighWaterMark", scope: !1777, file: !1777, line: 3203, type: !16467, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17415)
!17415 = !{!17416, !17417, !17418, !17419}
!17416 = !DILocalVariable(name: "xTask", arg: 1, scope: !17414, file: !1777, line: 3203, type: !1806)
!17417 = !DILocalVariable(name: "pxTCB", scope: !17414, file: !1777, line: 3205, type: !1808)
!17418 = !DILocalVariable(name: "pucEndOfStack", scope: !17414, file: !1777, line: 3206, type: !500)
!17419 = !DILocalVariable(name: "uxReturn", scope: !17414, file: !1777, line: 3207, type: !1800)
!17420 = !DILocation(line: 0, scope: !17414)
!17421 = !DILocation(line: 3209, column: 11, scope: !17414)
!17422 = !DILocation(line: 3213, column: 41, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17414, file: !1777, line: 3212, column: 3)
!17424 = !DILocation(line: 3221, column: 30, scope: !17414)
!17425 = !DILocation(line: 3221, column: 14, scope: !17414)
!17426 = !DILocation(line: 3223, column: 3, scope: !17414)
!17427 = distinct !DISubprogram(name: "xTaskGetCurrentTaskHandle", scope: !1777, file: !1777, line: 3294, type: !17428, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17430)
!17428 = !DISubroutineType(types: !17429)
!17429 = !{!1806}
!17430 = !{!17431}
!17431 = !DILocalVariable(name: "xReturn", scope: !17427, file: !1777, line: 3296, type: !1806)
!17432 = !DILocation(line: 3301, column: 13, scope: !17427)
!17433 = !DILocation(line: 0, scope: !17427)
!17434 = !DILocation(line: 3303, column: 3, scope: !17427)
!17435 = distinct !DISubprogram(name: "xTaskGetSchedulerState", scope: !1777, file: !1777, line: 3311, type: !16271, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17436)
!17436 = !{!17437}
!17437 = !DILocalVariable(name: "xReturn", scope: !17435, file: !1777, line: 3313, type: !1807)
!17438 = !DILocation(line: 3315, column: 7, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17435, file: !1777, line: 3315, column: 7)
!17440 = !DILocation(line: 3315, column: 25, scope: !17439)
!17441 = !DILocation(line: 3315, column: 7, scope: !17435)
!17442 = !DILocation(line: 3321, column: 8, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17444, file: !1777, line: 3321, column: 8)
!17444 = distinct !DILexicalBlock(scope: !17439, file: !1777, line: 3320, column: 3)
!17445 = !DILocation(line: 3321, column: 29, scope: !17443)
!17446 = !DILocation(line: 0, scope: !17439)
!17447 = !DILocation(line: 0, scope: !17435)
!17448 = !DILocation(line: 3331, column: 3, scope: !17435)
!17449 = distinct !DISubprogram(name: "vTaskPriorityInherit", scope: !1777, file: !1777, line: 3339, type: !17450, scopeLine: 3340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17452)
!17450 = !DISubroutineType(types: !17451)
!17451 = !{null, !16747}
!17452 = !{!17453, !17454}
!17453 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !17449, file: !1777, line: 3339, type: !16747)
!17454 = !DILocalVariable(name: "pxTCB", scope: !17449, file: !1777, line: 3341, type: !16026)
!17455 = !DILocation(line: 0, scope: !17449)
!17456 = !DILocation(line: 3345, column: 21, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17449, file: !1777, line: 3345, column: 7)
!17458 = !DILocation(line: 3345, column: 7, scope: !17449)
!17459 = !DILocation(line: 3347, column: 15, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17461, file: !1777, line: 3347, column: 8)
!17461 = distinct !DILexicalBlock(scope: !17457, file: !1777, line: 3346, column: 3)
!17462 = !DILocation(line: 3347, column: 28, scope: !17460)
!17463 = !DILocation(line: 3347, column: 42, scope: !17460)
!17464 = !DILocation(line: 3347, column: 26, scope: !17460)
!17465 = !DILocation(line: 3347, column: 8, scope: !17461)
!17466 = !DILocation(line: 3352, column: 11, scope: !17467)
!17467 = distinct !DILexicalBlock(scope: !17468, file: !1777, line: 3352, column: 9)
!17468 = distinct !DILexicalBlock(scope: !17460, file: !1777, line: 3348, column: 4)
!17469 = !DILocation(line: 3352, column: 102, scope: !17467)
!17470 = !DILocation(line: 3352, column: 9, scope: !17468)
!17471 = !DILocation(line: 3354, column: 6, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17467, file: !1777, line: 3353, column: 5)
!17473 = !DILocation(line: 3355, column: 5, scope: !17472)
!17474 = !DILocation(line: 3363, column: 9, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17468, file: !1777, line: 3363, column: 9)
!17476 = !DILocation(line: 3363, column: 9, scope: !17468)
!17477 = !DILocation(line: 3365, column: 10, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17479, file: !1777, line: 3365, column: 10)
!17479 = distinct !DILexicalBlock(scope: !17475, file: !1777, line: 3364, column: 5)
!17480 = !DILocation(line: 3365, column: 55, scope: !17478)
!17481 = !DILocation(line: 3365, column: 10, scope: !17479)
!17482 = !DILocation(line: 3367, column: 7, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17484, file: !1777, line: 3367, column: 7)
!17484 = distinct !DILexicalBlock(scope: !17485, file: !1777, line: 3367, column: 7)
!17485 = distinct !DILexicalBlock(scope: !17478, file: !1777, line: 3366, column: 6)
!17486 = !DILocation(line: 3367, column: 7, scope: !17484)
!17487 = !DILocation(line: 3367, column: 7, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17483, file: !1777, line: 3367, column: 7)
!17489 = !DILocation(line: 3375, column: 26, scope: !17479)
!17490 = !DILocation(line: 3375, column: 40, scope: !17479)
!17491 = !DILocation(line: 3375, column: 24, scope: !17479)
!17492 = !DILocation(line: 3376, column: 6, scope: !17479)
!17493 = !DILocation(line: 3377, column: 5, scope: !17479)
!17494 = !DILocation(line: 3381, column: 26, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17475, file: !1777, line: 3379, column: 5)
!17496 = !DILocation(line: 3381, column: 40, scope: !17495)
!17497 = !DILocation(line: 3381, column: 24, scope: !17495)
!17498 = !DILocation(line: 3395, column: 2, scope: !17449)
!17499 = distinct !DISubprogram(name: "xTaskPriorityDisinherit", scope: !1777, file: !1777, line: 3402, type: !16745, scopeLine: 3403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17500)
!17500 = !{!17501, !17502, !17503}
!17501 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !17499, file: !1777, line: 3402, type: !16747)
!17502 = !DILocalVariable(name: "pxTCB", scope: !17499, file: !1777, line: 3404, type: !16026)
!17503 = !DILocalVariable(name: "xReturn", scope: !17499, file: !1777, line: 3405, type: !1807)
!17504 = !DILocation(line: 0, scope: !17499)
!17505 = !DILocation(line: 3407, column: 21, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17499, file: !1777, line: 3407, column: 7)
!17507 = !DILocation(line: 3407, column: 7, scope: !17499)
!17508 = !DILocation(line: 3409, column: 4, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17510, file: !1777, line: 3409, column: 4)
!17510 = distinct !DILexicalBlock(scope: !17506, file: !1777, line: 3408, column: 3)
!17511 = !DILocation(line: 3409, column: 4, scope: !17510)
!17512 = !DILocation(line: 3409, column: 4, scope: !17513)
!17513 = distinct !DILexicalBlock(scope: !17509, file: !1777, line: 3409, column: 4)
!17514 = !DILocation(line: 3410, column: 28, scope: !17510)
!17515 = !DILocation(line: 3412, column: 15, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17510, file: !1777, line: 3412, column: 8)
!17517 = !DILocation(line: 3412, column: 36, scope: !17516)
!17518 = !DILocation(line: 3412, column: 26, scope: !17516)
!17519 = !DILocation(line: 3412, column: 8, scope: !17510)
!17520 = !DILocation(line: 3422, column: 34, scope: !17521)
!17521 = distinct !DILexicalBlock(scope: !17522, file: !1777, line: 3422, column: 10)
!17522 = distinct !DILexicalBlock(scope: !17523, file: !1777, line: 3416, column: 5)
!17523 = distinct !DILexicalBlock(scope: !17524, file: !1777, line: 3415, column: 9)
!17524 = distinct !DILexicalBlock(scope: !17516, file: !1777, line: 3413, column: 4)
!17525 = !DILocation(line: 3422, column: 10, scope: !17521)
!17526 = !DILocation(line: 3422, column: 55, scope: !17521)
!17527 = !DILocation(line: 3422, column: 10, scope: !17522)
!17528 = !DILocation(line: 3424, column: 7, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17530, file: !1777, line: 3424, column: 7)
!17530 = distinct !DILexicalBlock(scope: !17531, file: !1777, line: 3424, column: 7)
!17531 = distinct !DILexicalBlock(scope: !17521, file: !1777, line: 3423, column: 6)
!17532 = !DILocation(line: 3424, column: 7, scope: !17530)
!17533 = !DILocation(line: 3424, column: 7, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17529, file: !1777, line: 3424, column: 7)
!17535 = !DILocation(line: 3434, column: 33, scope: !17522)
!17536 = !DILocation(line: 3434, column: 24, scope: !17522)
!17537 = !DILocation(line: 3439, column: 6, scope: !17522)
!17538 = !DILocation(line: 3440, column: 6, scope: !17522)
!17539 = !DILocation(line: 3451, column: 5, scope: !17522)
!17540 = !DILocation(line: 3467, column: 3, scope: !17499)
!17541 = distinct !DISubprogram(name: "vTaskList", scope: !1777, file: !1777, line: 3565, type: !17542, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17544)
!17542 = !DISubroutineType(types: !17543)
!17543 = !{null, !491}
!17544 = !{!17545, !17546, !17547, !17548, !17549}
!17545 = !DILocalVariable(name: "pcWriteBuffer", arg: 1, scope: !17541, file: !1777, line: 3565, type: !491)
!17546 = !DILocalVariable(name: "pxTaskStatusArray", scope: !17541, file: !1777, line: 3567, type: !16962)
!17547 = !DILocalVariable(name: "uxArraySize", scope: !17541, file: !1777, line: 3568, type: !1892)
!17548 = !DILocalVariable(name: "x", scope: !17541, file: !1777, line: 3568, type: !1892)
!17549 = !DILocalVariable(name: "cStatus", scope: !17541, file: !1777, line: 3569, type: !492)
!17550 = !DILocation(line: 0, scope: !17541)
!17551 = !DILocation(line: 3568, column: 2, scope: !17541)
!17552 = !DILocation(line: 3568, column: 23, scope: !17541)
!17553 = !DILocation(line: 3568, column: 36, scope: !17541)
!17554 = !DILocation(line: 3597, column: 18, scope: !17541)
!17555 = !DILocation(line: 3601, column: 17, scope: !17541)
!17556 = !DILocation(line: 3601, column: 15, scope: !17541)
!17557 = !DILocation(line: 3604, column: 37, scope: !17541)
!17558 = !DILocation(line: 3604, column: 60, scope: !17541)
!17559 = !DILocation(line: 3604, column: 23, scope: !17541)
!17560 = !DILocation(line: 3606, column: 25, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17541, file: !1777, line: 3606, column: 7)
!17562 = !DILocation(line: 3606, column: 7, scope: !17541)
!17563 = !DILocation(line: 3609, column: 59, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17561, file: !1777, line: 3607, column: 3)
!17565 = !DILocation(line: 3609, column: 18, scope: !17564)
!17566 = !DILocation(line: 3609, column: 16, scope: !17564)
!17567 = !DILocation(line: 3612, column: 11, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17564, file: !1777, line: 3612, column: 4)
!17569 = !DILocation(line: 3612, column: 16, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17568, file: !1777, line: 3612, column: 4)
!17571 = !DILocation(line: 3612, column: 20, scope: !17570)
!17572 = !DILocation(line: 3612, column: 18, scope: !17570)
!17573 = !DILocation(line: 3612, column: 4, scope: !17568)
!17574 = !DILocation(line: 3614, column: 32, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17570, file: !1777, line: 3613, column: 4)
!17576 = !DILocation(line: 3614, column: 36, scope: !17575)
!17577 = !DILocation(line: 3614, column: 5, scope: !17575)
!17578 = !DILocation(line: 3636, column: 77, scope: !17575)
!17579 = !DILocation(line: 3636, column: 81, scope: !17575)
!17580 = !DILocation(line: 3636, column: 21, scope: !17575)
!17581 = !DILocation(line: 3639, column: 98, scope: !17575)
!17582 = !DILocation(line: 3639, column: 102, scope: !17575)
!17583 = !DILocation(line: 3639, column: 157, scope: !17575)
!17584 = !DILocation(line: 3639, column: 161, scope: !17575)
!17585 = !DILocation(line: 3639, column: 121, scope: !17575)
!17586 = !DILocation(line: 3639, column: 219, scope: !17575)
!17587 = !DILocation(line: 3639, column: 223, scope: !17575)
!17588 = !DILocation(line: 3639, column: 5, scope: !17575)
!17589 = !DILocation(line: 3640, column: 22, scope: !17575)
!17590 = !DILocation(line: 3640, column: 19, scope: !17575)
!17591 = !DILocation(line: 3612, column: 34, scope: !17570)
!17592 = distinct !{!17592, !17573, !17593}
!17593 = !DILocation(line: 3641, column: 4, scope: !17568)
!17594 = !DILocation(line: 3644, column: 4, scope: !17564)
!17595 = !DILocation(line: 3645, column: 3, scope: !17564)
!17596 = !DILocation(line: 3650, column: 2, scope: !17541)
!17597 = distinct !DISubprogram(name: "prvWriteNameToBuffer", scope: !1777, file: !1777, line: 3539, type: !17598, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17600)
!17598 = !DISubroutineType(types: !17599)
!17599 = !{!491, !491, !662}
!17600 = !{!17601, !17602, !17603}
!17601 = !DILocalVariable(name: "pcBuffer", arg: 1, scope: !17597, file: !1777, line: 3539, type: !491)
!17602 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !17597, file: !1777, line: 3539, type: !662)
!17603 = !DILocalVariable(name: "x", scope: !17597, file: !1777, line: 3541, type: !1807)
!17604 = !DILocation(line: 0, scope: !17597)
!17605 = !DILocation(line: 3544, column: 3, scope: !17597)
!17606 = !DILocation(line: 3548, column: 12, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17597, file: !1777, line: 3548, column: 3)
!17608 = !DILocation(line: 3548, column: 34, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17607, file: !1777, line: 3548, column: 3)
!17610 = !DILocation(line: 3548, column: 3, scope: !17607)
!17611 = !DILocation(line: 3550, column: 4, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17609, file: !1777, line: 3549, column: 3)
!17613 = !DILocation(line: 3550, column: 18, scope: !17612)
!17614 = !DILocation(line: 3548, column: 70, scope: !17609)
!17615 = distinct !{!17615, !17610, !17616}
!17616 = !DILocation(line: 3551, column: 3, scope: !17607)
!17617 = !DILocation(line: 0, scope: !17607)
!17618 = !DILocation(line: 3554, column: 3, scope: !17597)
!17619 = !DILocation(line: 3554, column: 17, scope: !17597)
!17620 = !DILocation(line: 3557, column: 3, scope: !17597)
!17621 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !1777, file: !1777, line: 3779, type: !16921, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17622)
!17622 = !{!17623}
!17623 = !DILocalVariable(name: "uxReturn", scope: !17621, file: !1777, line: 3781, type: !1822)
!17624 = !DILocation(line: 3783, column: 13, scope: !17621)
!17625 = !DILocation(line: 0, scope: !17621)
!17626 = !DILocation(line: 3787, column: 2, scope: !17621)
!17627 = !DILocation(line: 3789, column: 2, scope: !17621)
!17628 = distinct !DISubprogram(name: "pvTaskIncrementMutexHeldCount", scope: !1777, file: !1777, line: 3795, type: !17629, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !2550)
!17629 = !DISubroutineType(types: !2457)
!17630 = !DILocation(line: 3799, column: 7, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17628, file: !1777, line: 3799, column: 7)
!17632 = !DILocation(line: 3799, column: 20, scope: !17631)
!17633 = !DILocation(line: 3799, column: 7, scope: !17628)
!17634 = !DILocation(line: 3801, column: 6, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17631, file: !1777, line: 3800, column: 3)
!17636 = !DILocation(line: 3801, column: 20, scope: !17635)
!17637 = !DILocation(line: 3801, column: 35, scope: !17635)
!17638 = !DILocation(line: 3802, column: 3, scope: !17635)
!17639 = !DILocation(line: 3804, column: 10, scope: !17628)
!17640 = !DILocation(line: 3804, column: 3, scope: !17628)
!17641 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !1777, file: !1777, line: 3812, type: !17642, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17644)
!17642 = !DISubroutineType(types: !17643)
!17643 = !{!61, !1807, !1822}
!17644 = !{!17645, !17646, !17647, !17648}
!17645 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !17641, file: !1777, line: 3812, type: !1807)
!17646 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !17641, file: !1777, line: 3812, type: !1822)
!17647 = !DILocalVariable(name: "xTimeToWake", scope: !17641, file: !1777, line: 3814, type: !1822)
!17648 = !DILocalVariable(name: "ulReturn", scope: !17641, file: !1777, line: 3815, type: !61)
!17649 = !DILocation(line: 0, scope: !17641)
!17650 = !DILocation(line: 3817, column: 3, scope: !17641)
!17651 = !DILocation(line: 3820, column: 8, scope: !17652)
!17652 = distinct !DILexicalBlock(scope: !17653, file: !1777, line: 3820, column: 8)
!17653 = distinct !DILexicalBlock(scope: !17641, file: !1777, line: 3818, column: 3)
!17654 = !DILocation(line: 3820, column: 22, scope: !17652)
!17655 = !DILocation(line: 3820, column: 38, scope: !17652)
!17656 = !DILocation(line: 3820, column: 8, scope: !17653)
!17657 = !DILocation(line: 3823, column: 5, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17652, file: !1777, line: 3821, column: 4)
!17659 = !DILocation(line: 3823, column: 19, scope: !17658)
!17660 = !DILocation(line: 3823, column: 32, scope: !17658)
!17661 = !DILocation(line: 3825, column: 22, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17658, file: !1777, line: 3825, column: 9)
!17663 = !DILocation(line: 3825, column: 9, scope: !17658)
!17664 = !DILocation(line: 3829, column: 27, scope: !17665)
!17665 = distinct !DILexicalBlock(scope: !17666, file: !1777, line: 3829, column: 10)
!17666 = distinct !DILexicalBlock(scope: !17662, file: !1777, line: 3826, column: 5)
!17667 = !DILocation(line: 3829, column: 41, scope: !17665)
!17668 = !DILocation(line: 3829, column: 10, scope: !17665)
!17669 = !DILocation(line: 3829, column: 62, scope: !17665)
!17670 = !DILocation(line: 3829, column: 10, scope: !17666)
!17671 = !DILocation(line: 3834, column: 7, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17665, file: !1777, line: 3830, column: 6)
!17673 = !DILocation(line: 3835, column: 6, scope: !17672)
!17674 = !DILocation(line: 3843, column: 24, scope: !17675)
!17675 = distinct !DILexicalBlock(scope: !17676, file: !1777, line: 3843, column: 11)
!17676 = distinct !DILexicalBlock(scope: !17666, file: !1777, line: 3842, column: 6)
!17677 = !DILocation(line: 3843, column: 11, scope: !17676)
!17678 = !DILocation(line: 3849, column: 48, scope: !17679)
!17679 = distinct !DILexicalBlock(scope: !17675, file: !1777, line: 3844, column: 7)
!17680 = !DILocation(line: 3849, column: 62, scope: !17679)
!17681 = !DILocation(line: 3849, column: 8, scope: !17679)
!17682 = !DILocation(line: 3850, column: 7, scope: !17679)
!17683 = !DILocation(line: 3857, column: 22, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17675, file: !1777, line: 3852, column: 7)
!17685 = !DILocation(line: 3857, column: 33, scope: !17684)
!17686 = !DILocation(line: 3858, column: 8, scope: !17684)
!17687 = !DILocation(line: 3876, column: 6, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17666, file: !1777, line: 3876, column: 6)
!17689 = !{i64 2148494837}
!17690 = !{i64 2148494877}
!17691 = !DILocation(line: 3877, column: 5, scope: !17666)
!17692 = !DILocation(line: 3888, column: 3, scope: !17641)
!17693 = !DILocation(line: 3890, column: 3, scope: !17641)
!17694 = !DILocation(line: 3892, column: 15, scope: !17695)
!17695 = distinct !DILexicalBlock(scope: !17641, file: !1777, line: 3891, column: 3)
!17696 = !DILocation(line: 3892, column: 29, scope: !17695)
!17697 = !DILocation(line: 3894, column: 17, scope: !17698)
!17698 = distinct !DILexicalBlock(scope: !17695, file: !1777, line: 3894, column: 8)
!17699 = !DILocation(line: 3894, column: 8, scope: !17695)
!17700 = !DILocation(line: 3896, column: 27, scope: !17701)
!17701 = distinct !DILexicalBlock(scope: !17702, file: !1777, line: 3896, column: 9)
!17702 = distinct !DILexicalBlock(scope: !17698, file: !1777, line: 3895, column: 4)
!17703 = !DILocation(line: 0, scope: !17701)
!17704 = !DILocation(line: 3896, column: 9, scope: !17702)
!17705 = !DILocation(line: 3902, column: 39, scope: !17706)
!17706 = distinct !DILexicalBlock(scope: !17701, file: !1777, line: 3901, column: 5)
!17707 = !DILocation(line: 3910, column: 4, scope: !17695)
!17708 = !DILocation(line: 3910, column: 18, scope: !17695)
!17709 = !DILocation(line: 3910, column: 31, scope: !17695)
!17710 = !DILocation(line: 3912, column: 3, scope: !17641)
!17711 = !DILocation(line: 3914, column: 3, scope: !17641)
!17712 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !1777, file: !1777, line: 3922, type: !17713, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17715)
!17713 = !DISubroutineType(types: !17714)
!17714 = !{!1807, !61, !61, !4532, !1822}
!17715 = !{!17716, !17717, !17718, !17719, !17720, !17721}
!17716 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !17712, file: !1777, line: 3922, type: !61)
!17717 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !17712, file: !1777, line: 3922, type: !61)
!17718 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !17712, file: !1777, line: 3922, type: !4532)
!17719 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !17712, file: !1777, line: 3922, type: !1822)
!17720 = !DILocalVariable(name: "xTimeToWake", scope: !17712, file: !1777, line: 3924, type: !1822)
!17721 = !DILocalVariable(name: "xReturn", scope: !17712, file: !1777, line: 3925, type: !1807)
!17722 = !DILocation(line: 0, scope: !17712)
!17723 = !DILocation(line: 3927, column: 3, scope: !17712)
!17724 = !DILocation(line: 3930, column: 8, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17726, file: !1777, line: 3930, column: 8)
!17726 = distinct !DILexicalBlock(scope: !17712, file: !1777, line: 3928, column: 3)
!17727 = !DILocation(line: 3930, column: 22, scope: !17725)
!17728 = !DILocation(line: 3930, column: 35, scope: !17725)
!17729 = !DILocation(line: 3930, column: 8, scope: !17726)
!17730 = !DILocation(line: 3935, column: 38, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17725, file: !1777, line: 3931, column: 4)
!17732 = !DILocation(line: 3935, column: 5, scope: !17731)
!17733 = !DILocation(line: 3935, column: 19, scope: !17731)
!17734 = !DILocation(line: 3935, column: 35, scope: !17731)
!17735 = !DILocation(line: 3938, column: 5, scope: !17731)
!17736 = !DILocation(line: 3938, column: 19, scope: !17731)
!17737 = !DILocation(line: 3938, column: 32, scope: !17731)
!17738 = !DILocation(line: 3940, column: 22, scope: !17739)
!17739 = distinct !DILexicalBlock(scope: !17731, file: !1777, line: 3940, column: 9)
!17740 = !DILocation(line: 3940, column: 9, scope: !17731)
!17741 = !DILocation(line: 3944, column: 27, scope: !17742)
!17742 = distinct !DILexicalBlock(scope: !17743, file: !1777, line: 3944, column: 10)
!17743 = distinct !DILexicalBlock(scope: !17739, file: !1777, line: 3941, column: 5)
!17744 = !DILocation(line: 3944, column: 41, scope: !17742)
!17745 = !DILocation(line: 3944, column: 10, scope: !17742)
!17746 = !DILocation(line: 3944, column: 62, scope: !17742)
!17747 = !DILocation(line: 3944, column: 10, scope: !17743)
!17748 = !DILocation(line: 3949, column: 7, scope: !17749)
!17749 = distinct !DILexicalBlock(scope: !17742, file: !1777, line: 3945, column: 6)
!17750 = !DILocation(line: 3950, column: 6, scope: !17749)
!17751 = !DILocation(line: 3958, column: 24, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17753, file: !1777, line: 3958, column: 11)
!17753 = distinct !DILexicalBlock(scope: !17743, file: !1777, line: 3957, column: 6)
!17754 = !DILocation(line: 3958, column: 11, scope: !17753)
!17755 = !DILocation(line: 3964, column: 48, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17752, file: !1777, line: 3959, column: 7)
!17757 = !DILocation(line: 3964, column: 62, scope: !17756)
!17758 = !DILocation(line: 3964, column: 8, scope: !17756)
!17759 = !DILocation(line: 3965, column: 7, scope: !17756)
!17760 = !DILocation(line: 3972, column: 22, scope: !17761)
!17761 = distinct !DILexicalBlock(scope: !17752, file: !1777, line: 3967, column: 7)
!17762 = !DILocation(line: 3972, column: 33, scope: !17761)
!17763 = !DILocation(line: 3973, column: 8, scope: !17761)
!17764 = !DILocation(line: 3991, column: 6, scope: !17765)
!17765 = distinct !DILexicalBlock(scope: !17743, file: !1777, line: 3991, column: 6)
!17766 = !{i64 2148495608}
!17767 = !{i64 2148495648}
!17768 = !DILocation(line: 3992, column: 5, scope: !17743)
!17769 = !DILocation(line: 4003, column: 3, scope: !17712)
!17770 = !DILocation(line: 4005, column: 3, scope: !17712)
!17771 = !DILocation(line: 4007, column: 29, scope: !17772)
!17772 = distinct !DILexicalBlock(scope: !17773, file: !1777, line: 4007, column: 8)
!17773 = distinct !DILexicalBlock(scope: !17712, file: !1777, line: 4006, column: 3)
!17774 = !DILocation(line: 4007, column: 8, scope: !17773)
!17775 = !DILocation(line: 4011, column: 29, scope: !17776)
!17776 = distinct !DILexicalBlock(scope: !17772, file: !1777, line: 4008, column: 4)
!17777 = !DILocation(line: 4011, column: 43, scope: !17776)
!17778 = !DILocation(line: 4011, column: 27, scope: !17776)
!17779 = !DILocation(line: 4012, column: 4, scope: !17776)
!17780 = !DILocation(line: 4018, column: 8, scope: !17781)
!17781 = distinct !DILexicalBlock(scope: !17773, file: !1777, line: 4018, column: 8)
!17782 = !DILocation(line: 4018, column: 22, scope: !17781)
!17783 = !DILocation(line: 4018, column: 35, scope: !17781)
!17784 = !DILocation(line: 4018, column: 8, scope: !17773)
!17785 = !DILocation(line: 4027, column: 38, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17781, file: !1777, line: 4024, column: 4)
!17787 = !DILocation(line: 4027, column: 5, scope: !17786)
!17788 = !DILocation(line: 4027, column: 19, scope: !17786)
!17789 = !DILocation(line: 4027, column: 35, scope: !17786)
!17790 = !DILocation(line: 0, scope: !17781)
!17791 = !DILocation(line: 4031, column: 4, scope: !17773)
!17792 = !DILocation(line: 4031, column: 18, scope: !17773)
!17793 = !DILocation(line: 4031, column: 31, scope: !17773)
!17794 = !DILocation(line: 4033, column: 3, scope: !17712)
!17795 = !DILocation(line: 4035, column: 3, scope: !17712)
!17796 = distinct !DISubprogram(name: "xTaskNotify", scope: !1777, file: !1777, line: 4043, type: !17797, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17800)
!17797 = !DISubroutineType(types: !17798)
!17798 = !{!1807, !1806, !61, !17799}
!17799 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !1785, line: 129, baseType: !1792)
!17800 = !{!17801, !17802, !17803, !17804, !17805, !17806}
!17801 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !17796, file: !1777, line: 4043, type: !1806)
!17802 = !DILocalVariable(name: "ulValue", arg: 2, scope: !17796, file: !1777, line: 4043, type: !61)
!17803 = !DILocalVariable(name: "eAction", arg: 3, scope: !17796, file: !1777, line: 4043, type: !17799)
!17804 = !DILocalVariable(name: "pxTCB", scope: !17796, file: !1777, line: 4045, type: !1808)
!17805 = !DILocalVariable(name: "eOriginalNotifyState", scope: !17796, file: !1777, line: 4046, type: !1842)
!17806 = !DILocalVariable(name: "xReturn", scope: !17796, file: !1777, line: 4047, type: !1807)
!17807 = !DILocation(line: 0, scope: !17796)
!17808 = !DILocation(line: 4049, column: 3, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17796, file: !1777, line: 4049, column: 3)
!17810 = !DILocation(line: 4049, column: 3, scope: !17796)
!17811 = !DILocation(line: 4049, column: 3, scope: !17812)
!17812 = distinct !DILexicalBlock(scope: !17809, file: !1777, line: 4049, column: 3)
!17813 = !DILocation(line: 4052, column: 3, scope: !17796)
!17814 = !DILocation(line: 4054, column: 34, scope: !17815)
!17815 = distinct !DILexicalBlock(scope: !17796, file: !1777, line: 4053, column: 3)
!17816 = !DILocation(line: 4056, column: 24, scope: !17815)
!17817 = !DILocation(line: 4058, column: 4, scope: !17815)
!17818 = !DILocation(line: 4061, column: 13, scope: !17819)
!17819 = distinct !DILexicalBlock(scope: !17815, file: !1777, line: 4059, column: 4)
!17820 = !DILocation(line: 4061, column: 29, scope: !17819)
!17821 = !DILocation(line: 4062, column: 6, scope: !17819)
!17822 = !DILocation(line: 4065, column: 15, scope: !17819)
!17823 = !DILocation(line: 4065, column: 32, scope: !17819)
!17824 = !DILocation(line: 4066, column: 6, scope: !17819)
!17825 = !DILocation(line: 4069, column: 13, scope: !17819)
!17826 = !DILocation(line: 4069, column: 29, scope: !17819)
!17827 = !DILocation(line: 4070, column: 6, scope: !17819)
!17828 = !DILocation(line: 4073, column: 31, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17819, file: !1777, line: 4073, column: 10)
!17830 = !DILocation(line: 4073, column: 10, scope: !17819)
!17831 = !DILocation(line: 4075, column: 14, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17829, file: !1777, line: 4074, column: 6)
!17833 = !DILocation(line: 4075, column: 30, scope: !17832)
!17834 = !DILocation(line: 4076, column: 6, scope: !17832)
!17835 = !DILocation(line: 4093, column: 29, scope: !17836)
!17836 = distinct !DILexicalBlock(scope: !17815, file: !1777, line: 4093, column: 8)
!17837 = !DILocation(line: 4093, column: 8, scope: !17815)
!17838 = !DILocation(line: 4095, column: 38, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17836, file: !1777, line: 4094, column: 4)
!17840 = !DILocation(line: 4095, column: 14, scope: !17839)
!17841 = !DILocation(line: 4096, column: 5, scope: !17839)
!17842 = !DILocation(line: 4099, column: 5, scope: !17843)
!17843 = distinct !DILexicalBlock(scope: !17839, file: !1777, line: 4099, column: 5)
!17844 = !DILocation(line: 4099, column: 5, scope: !17839)
!17845 = !DILocation(line: 4099, column: 5, scope: !17846)
!17846 = distinct !DILexicalBlock(scope: !17843, file: !1777, line: 4099, column: 5)
!17847 = !DILocation(line: 4101, column: 16, scope: !17848)
!17848 = distinct !DILexicalBlock(scope: !17839, file: !1777, line: 4101, column: 9)
!17849 = !DILocation(line: 4101, column: 29, scope: !17848)
!17850 = !DILocation(line: 4101, column: 43, scope: !17848)
!17851 = !DILocation(line: 4101, column: 27, scope: !17848)
!17852 = !DILocation(line: 4101, column: 9, scope: !17839)
!17853 = !DILocation(line: 4105, column: 6, scope: !17854)
!17854 = distinct !DILexicalBlock(scope: !17855, file: !1777, line: 4105, column: 6)
!17855 = distinct !DILexicalBlock(scope: !17848, file: !1777, line: 4102, column: 5)
!17856 = !{i64 2148497235}
!17857 = !{i64 2148497275}
!17858 = !DILocation(line: 4106, column: 5, scope: !17855)
!17859 = !DILocation(line: 4117, column: 3, scope: !17796)
!17860 = !DILocation(line: 4119, column: 3, scope: !17796)
!17861 = distinct !DISubprogram(name: "xTaskNotifyFromISR", scope: !1777, file: !1777, line: 4127, type: !17862, scopeLine: 4128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17865)
!17862 = !DISubroutineType(types: !17863)
!17863 = !{!1807, !1806, !61, !17799, !17864}
!17864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!17865 = !{!17866, !17867, !17868, !17869, !17870, !17871, !17872, !17873}
!17866 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !17861, file: !1777, line: 4127, type: !1806)
!17867 = !DILocalVariable(name: "ulValue", arg: 2, scope: !17861, file: !1777, line: 4127, type: !61)
!17868 = !DILocalVariable(name: "eAction", arg: 3, scope: !17861, file: !1777, line: 4127, type: !17799)
!17869 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !17861, file: !1777, line: 4127, type: !17864)
!17870 = !DILocalVariable(name: "pxTCB", scope: !17861, file: !1777, line: 4129, type: !1808)
!17871 = !DILocalVariable(name: "eOriginalNotifyState", scope: !17861, file: !1777, line: 4130, type: !1842)
!17872 = !DILocalVariable(name: "xReturn", scope: !17861, file: !1777, line: 4131, type: !1807)
!17873 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !17861, file: !1777, line: 4132, type: !1800)
!17874 = !DILocation(line: 0, scope: !17861)
!17875 = !DILocation(line: 4134, column: 3, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17861, file: !1777, line: 4134, column: 3)
!17877 = !DILocation(line: 4134, column: 3, scope: !17861)
!17878 = !DILocation(line: 4134, column: 3, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !17876, file: !1777, line: 4134, column: 3)
!17880 = !DILocation(line: 4152, column: 3, scope: !17861)
!17881 = !DILocation(line: 231, column: 2, scope: !16489, inlinedAt: !17882)
!17882 = distinct !DILocation(line: 4156, column: 28, scope: !17861)
!17883 = !DILocation(line: 0, scope: !16489, inlinedAt: !17882)
!17884 = !DILocation(line: 4158, column: 34, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17861, file: !1777, line: 4157, column: 3)
!17886 = !DILocation(line: 4160, column: 24, scope: !17885)
!17887 = !DILocation(line: 4162, column: 4, scope: !17885)
!17888 = !DILocation(line: 4165, column: 13, scope: !17889)
!17889 = distinct !DILexicalBlock(scope: !17885, file: !1777, line: 4163, column: 4)
!17890 = !DILocation(line: 4165, column: 29, scope: !17889)
!17891 = !DILocation(line: 4166, column: 6, scope: !17889)
!17892 = !DILocation(line: 4169, column: 15, scope: !17889)
!17893 = !DILocation(line: 4169, column: 32, scope: !17889)
!17894 = !DILocation(line: 4170, column: 6, scope: !17889)
!17895 = !DILocation(line: 4173, column: 13, scope: !17889)
!17896 = !DILocation(line: 4173, column: 29, scope: !17889)
!17897 = !DILocation(line: 4174, column: 6, scope: !17889)
!17898 = !DILocation(line: 4177, column: 31, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17889, file: !1777, line: 4177, column: 10)
!17900 = !DILocation(line: 4177, column: 10, scope: !17889)
!17901 = !DILocation(line: 4179, column: 14, scope: !17902)
!17902 = distinct !DILexicalBlock(scope: !17899, file: !1777, line: 4178, column: 6)
!17903 = !DILocation(line: 4179, column: 30, scope: !17902)
!17904 = !DILocation(line: 4180, column: 6, scope: !17902)
!17905 = !DILocation(line: 4197, column: 29, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17885, file: !1777, line: 4197, column: 8)
!17907 = !DILocation(line: 4197, column: 8, scope: !17885)
!17908 = !DILocation(line: 4200, column: 5, scope: !17909)
!17909 = distinct !DILexicalBlock(scope: !17910, file: !1777, line: 4200, column: 5)
!17910 = distinct !DILexicalBlock(scope: !17906, file: !1777, line: 4198, column: 4)
!17911 = !DILocation(line: 4200, column: 5, scope: !17910)
!17912 = !DILocation(line: 4200, column: 5, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17909, file: !1777, line: 4200, column: 5)
!17914 = !DILocation(line: 4202, column: 9, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17910, file: !1777, line: 4202, column: 9)
!17916 = !DILocation(line: 4202, column: 30, scope: !17915)
!17917 = !DILocation(line: 4202, column: 9, scope: !17910)
!17918 = !DILocation(line: 4204, column: 39, scope: !17919)
!17919 = distinct !DILexicalBlock(scope: !17915, file: !1777, line: 4203, column: 5)
!17920 = !DILocation(line: 4204, column: 15, scope: !17919)
!17921 = !DILocation(line: 4205, column: 6, scope: !17919)
!17922 = !DILocation(line: 4206, column: 5, scope: !17919)
!17923 = !DILocation(line: 4211, column: 6, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17915, file: !1777, line: 4208, column: 5)
!17925 = !DILocation(line: 4214, column: 16, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17910, file: !1777, line: 4214, column: 9)
!17927 = !DILocation(line: 4214, column: 29, scope: !17926)
!17928 = !DILocation(line: 4214, column: 43, scope: !17926)
!17929 = !DILocation(line: 4214, column: 27, scope: !17926)
!17930 = !DILocation(line: 4214, column: 9, scope: !17910)
!17931 = !DILocation(line: 4220, column: 34, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17933, file: !1777, line: 4219, column: 6)
!17933 = distinct !DILexicalBlock(scope: !17934, file: !1777, line: 4218, column: 10)
!17934 = distinct !DILexicalBlock(scope: !17926, file: !1777, line: 4215, column: 5)
!17935 = !DILocation(line: 4221, column: 6, scope: !17932)
!17936 = !DILocation(line: 0, scope: !16500, inlinedAt: !17937)
!17937 = distinct !DILocation(line: 4229, column: 3, scope: !17861)
!17938 = !DILocation(line: 249, column: 2, scope: !16500, inlinedAt: !17937)
!17939 = !DILocation(line: 4231, column: 3, scope: !17861)
!17940 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !1777, file: !1777, line: 4239, type: !17941, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !17943)
!17941 = !DISubroutineType(types: !17942)
!17942 = !{null, !1806, !17864}
!17943 = !{!17944, !17945, !17946, !17947, !17948}
!17944 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !17940, file: !1777, line: 4239, type: !1806)
!17945 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !17940, file: !1777, line: 4239, type: !17864)
!17946 = !DILocalVariable(name: "pxTCB", scope: !17940, file: !1777, line: 4241, type: !1808)
!17947 = !DILocalVariable(name: "eOriginalNotifyState", scope: !17940, file: !1777, line: 4242, type: !1842)
!17948 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !17940, file: !1777, line: 4243, type: !1800)
!17949 = !DILocation(line: 0, scope: !17940)
!17950 = !DILocation(line: 4245, column: 3, scope: !17951)
!17951 = distinct !DILexicalBlock(scope: !17940, file: !1777, line: 4245, column: 3)
!17952 = !DILocation(line: 4245, column: 3, scope: !17940)
!17953 = !DILocation(line: 4245, column: 3, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17951, file: !1777, line: 4245, column: 3)
!17955 = !DILocation(line: 4263, column: 3, scope: !17940)
!17956 = !DILocation(line: 231, column: 2, scope: !16489, inlinedAt: !17957)
!17957 = distinct !DILocation(line: 4267, column: 28, scope: !17940)
!17958 = !DILocation(line: 0, scope: !16489, inlinedAt: !17957)
!17959 = !DILocation(line: 4269, column: 34, scope: !17960)
!17960 = distinct !DILexicalBlock(scope: !17940, file: !1777, line: 4268, column: 3)
!17961 = !DILocation(line: 4270, column: 24, scope: !17960)
!17962 = !DILocation(line: 4274, column: 13, scope: !17960)
!17963 = !DILocation(line: 4274, column: 30, scope: !17960)
!17964 = !DILocation(line: 4278, column: 29, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17960, file: !1777, line: 4278, column: 8)
!17966 = !DILocation(line: 4278, column: 8, scope: !17960)
!17967 = !DILocation(line: 4281, column: 5, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17969, file: !1777, line: 4281, column: 5)
!17969 = distinct !DILexicalBlock(scope: !17965, file: !1777, line: 4279, column: 4)
!17970 = !DILocation(line: 4281, column: 5, scope: !17969)
!17971 = !DILocation(line: 4281, column: 5, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17968, file: !1777, line: 4281, column: 5)
!17973 = !DILocation(line: 4283, column: 9, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17969, file: !1777, line: 4283, column: 9)
!17975 = !DILocation(line: 4283, column: 30, scope: !17974)
!17976 = !DILocation(line: 4283, column: 9, scope: !17969)
!17977 = !DILocation(line: 4285, column: 39, scope: !17978)
!17978 = distinct !DILexicalBlock(scope: !17974, file: !1777, line: 4284, column: 5)
!17979 = !DILocation(line: 4285, column: 15, scope: !17978)
!17980 = !DILocation(line: 4286, column: 6, scope: !17978)
!17981 = !DILocation(line: 4287, column: 5, scope: !17978)
!17982 = !DILocation(line: 4292, column: 6, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17974, file: !1777, line: 4289, column: 5)
!17984 = !DILocation(line: 4295, column: 16, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17969, file: !1777, line: 4295, column: 9)
!17986 = !DILocation(line: 4295, column: 29, scope: !17985)
!17987 = !DILocation(line: 4295, column: 43, scope: !17985)
!17988 = !DILocation(line: 4295, column: 27, scope: !17985)
!17989 = !DILocation(line: 4295, column: 9, scope: !17969)
!17990 = !DILocation(line: 4301, column: 34, scope: !17991)
!17991 = distinct !DILexicalBlock(scope: !17992, file: !1777, line: 4300, column: 6)
!17992 = distinct !DILexicalBlock(scope: !17993, file: !1777, line: 4299, column: 10)
!17993 = distinct !DILexicalBlock(scope: !17985, file: !1777, line: 4296, column: 5)
!17994 = !DILocation(line: 4302, column: 6, scope: !17991)
!17995 = !DILocation(line: 0, scope: !16500, inlinedAt: !17996)
!17996 = distinct !DILocation(line: 4310, column: 3, scope: !17940)
!17997 = !DILocation(line: 249, column: 2, scope: !16500, inlinedAt: !17996)
!17998 = !DILocation(line: 4311, column: 2, scope: !17940)
!17999 = distinct !DISubprogram(name: "uxTaskGetBottomOfStack", scope: !1777, file: !1777, line: 4351, type: !16467, scopeLine: 4352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1776, retainedNodes: !18000)
!18000 = !{!18001, !18002}
!18001 = !DILocalVariable(name: "TaskHandle_t", arg: 1, scope: !17999, file: !1777, line: 4351, type: !1806)
!18002 = !DILocalVariable(name: "pxTCB", scope: !17999, file: !1777, line: 4353, type: !1808)
!18003 = !DILocation(line: 0, scope: !17999)
!18004 = !DILocation(line: 4355, column: 24, scope: !17999)
!18005 = !DILocation(line: 4355, column: 10, scope: !17999)
!18006 = !DILocation(line: 4355, column: 47, scope: !17999)
!18007 = !DILocation(line: 4355, column: 62, scope: !17999)
!18008 = !DILocation(line: 4358, column: 33, scope: !17999)
!18009 = !DILocation(line: 4358, column: 9, scope: !17999)
!18010 = !DILocation(line: 4358, column: 2, scope: !17999)
!18011 = distinct !DISubprogram(name: "vListInitialise", scope: !2492, file: !2492, line: 79, type: !18012, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !18015)
!18012 = !DISubroutineType(types: !18013)
!18013 = !{null, !18014}
!18014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2504)
!18015 = !{!18016}
!18016 = !DILocalVariable(name: "pxList", arg: 1, scope: !18011, file: !2492, line: 79, type: !18014)
!18017 = !DILocation(line: 0, scope: !18011)
!18018 = !DILocation(line: 84, column: 48, scope: !18011)
!18019 = !DILocation(line: 84, column: 10, scope: !18011)
!18020 = !DILocation(line: 84, column: 18, scope: !18011)
!18021 = !DILocation(line: 88, column: 19, scope: !18011)
!18022 = !DILocation(line: 88, column: 30, scope: !18011)
!18023 = !DILocation(line: 92, column: 19, scope: !18011)
!18024 = !DILocation(line: 92, column: 26, scope: !18011)
!18025 = !DILocation(line: 93, column: 19, scope: !18011)
!18026 = !DILocation(line: 93, column: 30, scope: !18011)
!18027 = !DILocation(line: 95, column: 10, scope: !18011)
!18028 = !DILocation(line: 95, column: 26, scope: !18011)
!18029 = !DILocation(line: 101, column: 1, scope: !18011)
!18030 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !2492, file: !2492, line: 104, type: !18031, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !18034)
!18031 = !DISubroutineType(types: !18032)
!18032 = !{null, !18033}
!18033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!18034 = !{!18035}
!18035 = !DILocalVariable(name: "pxItem", arg: 1, scope: !18030, file: !2492, line: 104, type: !18033)
!18036 = !DILocation(line: 0, scope: !18030)
!18037 = !DILocation(line: 107, column: 10, scope: !18030)
!18038 = !DILocation(line: 107, column: 22, scope: !18030)
!18039 = !DILocation(line: 113, column: 1, scope: !18030)
!18040 = distinct !DISubprogram(name: "vListInsertEnd", scope: !2492, file: !2492, line: 116, type: !18041, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !18043)
!18041 = !DISubroutineType(types: !18042)
!18042 = !{null, !18014, !18033}
!18043 = !{!18044, !18045, !18046}
!18044 = !DILocalVariable(name: "pxList", arg: 1, scope: !18040, file: !2492, line: 116, type: !18014)
!18045 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !18040, file: !2492, line: 116, type: !18033)
!18046 = !DILocalVariable(name: "pxIndex", scope: !18040, file: !2492, line: 118, type: !18033)
!18047 = !DILocation(line: 0, scope: !18040)
!18048 = !DILocation(line: 118, column: 38, scope: !18040)
!18049 = !DILocation(line: 129, column: 17, scope: !18040)
!18050 = !DILocation(line: 129, column: 24, scope: !18040)
!18051 = !DILocation(line: 130, column: 39, scope: !18040)
!18052 = !DILocation(line: 130, column: 17, scope: !18040)
!18053 = !DILocation(line: 130, column: 28, scope: !18040)
!18054 = !DILocation(line: 131, column: 11, scope: !18040)
!18055 = !DILocation(line: 131, column: 23, scope: !18040)
!18056 = !DILocation(line: 131, column: 30, scope: !18040)
!18057 = !DILocation(line: 132, column: 22, scope: !18040)
!18058 = !DILocation(line: 135, column: 17, scope: !18040)
!18059 = !DILocation(line: 135, column: 29, scope: !18040)
!18060 = !DILocation(line: 137, column: 12, scope: !18040)
!18061 = !DILocation(line: 137, column: 29, scope: !18040)
!18062 = !DILocation(line: 138, column: 1, scope: !18040)
!18063 = distinct !DISubprogram(name: "vListInsert", scope: !2492, file: !2492, line: 141, type: !18041, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !18064)
!18064 = !{!18065, !18066, !18067, !18068}
!18065 = !DILocalVariable(name: "pxList", arg: 1, scope: !18063, file: !2492, line: 141, type: !18014)
!18066 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !18063, file: !2492, line: 141, type: !18033)
!18067 = !DILocalVariable(name: "pxIterator", scope: !18063, file: !2492, line: 143, type: !2494)
!18068 = !DILocalVariable(name: "xValueOfInsertion", scope: !18063, file: !2492, line: 144, type: !16171)
!18069 = !DILocation(line: 0, scope: !18063)
!18070 = !DILocation(line: 144, column: 53, scope: !18063)
!18071 = !DILocation(line: 160, column: 24, scope: !18072)
!18072 = distinct !DILexicalBlock(scope: !18063, file: !2492, line: 160, column: 6)
!18073 = !DILocation(line: 160, column: 6, scope: !18063)
!18074 = !DILocation(line: 162, column: 33, scope: !18075)
!18075 = distinct !DILexicalBlock(scope: !18072, file: !2492, line: 161, column: 2)
!18076 = !DILocation(line: 195, column: 38, scope: !18063)
!18077 = !DILocation(line: 163, column: 2, scope: !18075)
!18078 = !DILocation(line: 188, column: 49, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18080, file: !2492, line: 188, column: 3)
!18080 = distinct !DILexicalBlock(scope: !18072, file: !2492, line: 165, column: 2)
!18081 = !DILocation(line: 188, column: 21, scope: !18079)
!18082 = !DILocation(line: 188, column: 8, scope: !18079)
!18083 = !DILocation(line: 0, scope: !18079)
!18084 = !DILocation(line: 188, column: 73, scope: !18085)
!18085 = distinct !DILexicalBlock(scope: !18079, file: !2492, line: 188, column: 3)
!18086 = !DILocation(line: 188, column: 81, scope: !18085)
!18087 = !DILocation(line: 188, column: 92, scope: !18085)
!18088 = !DILocation(line: 188, column: 3, scope: !18079)
!18089 = distinct !{!18089, !18088, !18090}
!18090 = !DILocation(line: 192, column: 3, scope: !18079)
!18091 = !DILocation(line: 0, scope: !18072)
!18092 = !DILocation(line: 195, column: 17, scope: !18063)
!18093 = !DILocation(line: 195, column: 24, scope: !18063)
!18094 = !DILocation(line: 196, column: 25, scope: !18063)
!18095 = !DILocation(line: 196, column: 36, scope: !18063)
!18096 = !DILocation(line: 197, column: 17, scope: !18063)
!18097 = !DILocation(line: 197, column: 28, scope: !18063)
!18098 = !DILocation(line: 198, column: 21, scope: !18063)
!18099 = !DILocation(line: 202, column: 17, scope: !18063)
!18100 = !DILocation(line: 202, column: 29, scope: !18063)
!18101 = !DILocation(line: 204, column: 12, scope: !18063)
!18102 = !DILocation(line: 204, column: 29, scope: !18063)
!18103 = !DILocation(line: 205, column: 1, scope: !18063)
!18104 = distinct !DISubprogram(name: "uxListRemove", scope: !2492, file: !2492, line: 208, type: !18105, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !18107)
!18105 = !DISubroutineType(types: !18106)
!18106 = !{!1800, !18033}
!18107 = !{!18108, !18109}
!18108 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !18104, file: !2492, line: 208, type: !18033)
!18109 = !DILocalVariable(name: "pxList", scope: !18104, file: !2492, line: 212, type: !18014)
!18110 = !DILocation(line: 0, scope: !18104)
!18111 = !DILocation(line: 212, column: 54, scope: !18104)
!18112 = !DILocation(line: 214, column: 55, scope: !18104)
!18113 = !DILocation(line: 214, column: 18, scope: !18104)
!18114 = !DILocation(line: 214, column: 26, scope: !18104)
!18115 = !DILocation(line: 214, column: 37, scope: !18104)
!18116 = !DILocation(line: 215, column: 55, scope: !18104)
!18117 = !DILocation(line: 215, column: 18, scope: !18104)
!18118 = !DILocation(line: 215, column: 30, scope: !18104)
!18119 = !DILocation(line: 215, column: 37, scope: !18104)
!18120 = !DILocation(line: 218, column: 14, scope: !18121)
!18121 = distinct !DILexicalBlock(scope: !18104, file: !2492, line: 218, column: 6)
!18122 = !DILocation(line: 218, column: 22, scope: !18121)
!18123 = !DILocation(line: 218, column: 6, scope: !18104)
!18124 = !DILocation(line: 220, column: 37, scope: !18125)
!18125 = distinct !DILexicalBlock(scope: !18121, file: !2492, line: 219, column: 2)
!18126 = !DILocation(line: 220, column: 19, scope: !18125)
!18127 = !DILocation(line: 221, column: 2, scope: !18125)
!18128 = !DILocation(line: 227, column: 30, scope: !18104)
!18129 = !DILocation(line: 228, column: 12, scope: !18104)
!18130 = !DILocation(line: 228, column: 29, scope: !18104)
!18131 = !DILocation(line: 230, column: 2, scope: !18104)
!18132 = distinct !DISubprogram(name: "xQueueGenericReset", scope: !1923, file: !1923, line: 260, type: !18133, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18135)
!18133 = !DISubroutineType(types: !18134)
!18134 = !{!1807, !1981, !1807}
!18135 = !{!18136, !18137, !18138}
!18136 = !DILocalVariable(name: "xQueue", arg: 1, scope: !18132, file: !1923, line: 260, type: !1981)
!18137 = !DILocalVariable(name: "xNewQueue", arg: 2, scope: !18132, file: !1923, line: 260, type: !1807)
!18138 = !DILocalVariable(name: "pxQueue", scope: !18132, file: !1923, line: 262, type: !18139)
!18139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1925)
!18140 = !DILocation(line: 0, scope: !18132)
!18141 = !DILocation(line: 264, column: 2, scope: !18142)
!18142 = distinct !DILexicalBlock(scope: !18132, file: !1923, line: 264, column: 2)
!18143 = !DILocation(line: 264, column: 2, scope: !18132)
!18144 = !DILocation(line: 264, column: 2, scope: !18145)
!18145 = distinct !DILexicalBlock(scope: !18142, file: !1923, line: 264, column: 2)
!18146 = !DILocation(line: 266, column: 2, scope: !18132)
!18147 = !DILocation(line: 268, column: 30, scope: !18148)
!18148 = distinct !DILexicalBlock(scope: !18132, file: !1923, line: 267, column: 2)
!18149 = !DILocation(line: 268, column: 50, scope: !18148)
!18150 = !DILocation(line: 268, column: 70, scope: !18148)
!18151 = !DILocation(line: 268, column: 59, scope: !18148)
!18152 = !DILocation(line: 268, column: 37, scope: !18148)
!18153 = !DILocation(line: 268, column: 12, scope: !18148)
!18154 = !DILocation(line: 268, column: 19, scope: !18148)
!18155 = !DILocation(line: 269, column: 12, scope: !18148)
!18156 = !DILocation(line: 269, column: 30, scope: !18148)
!18157 = !DILocation(line: 270, column: 12, scope: !18148)
!18158 = !DILocation(line: 270, column: 22, scope: !18148)
!18159 = !DILocation(line: 271, column: 67, scope: !18148)
!18160 = !DILocation(line: 271, column: 90, scope: !18148)
!18161 = !DILocation(line: 271, column: 43, scope: !18148)
!18162 = !DILocation(line: 271, column: 12, scope: !18148)
!18163 = !DILocation(line: 271, column: 14, scope: !18148)
!18164 = !DILocation(line: 271, column: 25, scope: !18148)
!18165 = !DILocation(line: 272, column: 12, scope: !18148)
!18166 = !DILocation(line: 272, column: 20, scope: !18148)
!18167 = !DILocation(line: 273, column: 12, scope: !18148)
!18168 = !DILocation(line: 273, column: 20, scope: !18148)
!18169 = !DILocation(line: 275, column: 17, scope: !18170)
!18170 = distinct !DILexicalBlock(scope: !18148, file: !1923, line: 275, column: 7)
!18171 = !DILocation(line: 0, scope: !18170)
!18172 = !DILocation(line: 275, column: 7, scope: !18148)
!18173 = !DILocation(line: 282, column: 8, scope: !18174)
!18174 = distinct !DILexicalBlock(scope: !18175, file: !1923, line: 282, column: 8)
!18175 = distinct !DILexicalBlock(scope: !18170, file: !1923, line: 276, column: 3)
!18176 = !DILocation(line: 282, column: 8, scope: !18175)
!18177 = !DILocation(line: 284, column: 9, scope: !18178)
!18178 = distinct !DILexicalBlock(scope: !18179, file: !1923, line: 284, column: 9)
!18179 = distinct !DILexicalBlock(scope: !18174, file: !1923, line: 283, column: 4)
!18180 = !DILocation(line: 284, column: 71, scope: !18178)
!18181 = !DILocation(line: 284, column: 9, scope: !18179)
!18182 = !DILocation(line: 286, column: 6, scope: !18183)
!18183 = distinct !DILexicalBlock(scope: !18184, file: !1923, line: 286, column: 6)
!18184 = distinct !DILexicalBlock(scope: !18178, file: !1923, line: 285, column: 5)
!18185 = !{i64 2148403446}
!18186 = !{i64 2148403486}
!18187 = !DILocation(line: 287, column: 5, scope: !18184)
!18188 = !DILocation(line: 301, column: 33, scope: !18189)
!18189 = distinct !DILexicalBlock(scope: !18170, file: !1923, line: 299, column: 3)
!18190 = !DILocation(line: 301, column: 4, scope: !18189)
!18191 = !DILocation(line: 302, column: 33, scope: !18189)
!18192 = !DILocation(line: 302, column: 4, scope: !18189)
!18193 = !DILocation(line: 305, column: 2, scope: !18132)
!18194 = !DILocation(line: 309, column: 2, scope: !18132)
!18195 = distinct !DISubprogram(name: "xQueueGenericCreate", scope: !1923, file: !1923, line: 313, type: !18196, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18198)
!18196 = !DISubroutineType(types: !18197)
!18197 = !{!1981, !16975, !16975, !1873}
!18198 = !{!18199, !18200, !18201, !18202, !18203, !18204, !18205}
!18199 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !18195, file: !1923, line: 313, type: !16975)
!18200 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !18195, file: !1923, line: 313, type: !16975)
!18201 = !DILocalVariable(name: "ucQueueType", arg: 3, scope: !18195, file: !1923, line: 313, type: !1873)
!18202 = !DILocalVariable(name: "pxNewQueue", scope: !18195, file: !1923, line: 315, type: !1925)
!18203 = !DILocalVariable(name: "xQueueSizeInBytes", scope: !18195, file: !1923, line: 316, type: !1857)
!18204 = !DILocalVariable(name: "xReturn", scope: !18195, file: !1923, line: 317, type: !1981)
!18205 = !DILocalVariable(name: "pcAllocatedBuffer", scope: !18195, file: !1923, line: 318, type: !1931)
!18206 = !DILocation(line: 0, scope: !18195)
!18207 = !DILocation(line: 324, column: 2, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18195, file: !1923, line: 324, column: 2)
!18209 = !DILocation(line: 324, column: 2, scope: !18195)
!18210 = !DILocation(line: 324, column: 2, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18208, file: !1923, line: 324, column: 2)
!18212 = !DILocation(line: 326, column: 17, scope: !18213)
!18213 = distinct !DILexicalBlock(scope: !18195, file: !1923, line: 326, column: 6)
!18214 = !DILocation(line: 326, column: 6, scope: !18195)
!18215 = !DILocation(line: 339, column: 35, scope: !18195)
!18216 = !DILocation(line: 341, column: 24, scope: !18217)
!18217 = distinct !DILexicalBlock(scope: !18195, file: !1923, line: 341, column: 6)
!18218 = !DILocation(line: 341, column: 6, scope: !18195)
!18219 = !DILocation(line: 345, column: 7, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18217, file: !1923, line: 342, column: 2)
!18221 = !DILocation(line: 0, scope: !18222)
!18222 = distinct !DILexicalBlock(scope: !18220, file: !1923, line: 345, column: 7)
!18223 = !DILocation(line: 362, column: 15, scope: !18220)
!18224 = !DILocation(line: 362, column: 24, scope: !18220)
!18225 = !DILocation(line: 363, column: 15, scope: !18220)
!18226 = !DILocation(line: 363, column: 26, scope: !18220)
!18227 = !DILocation(line: 364, column: 12, scope: !18220)
!18228 = !DILocation(line: 368, column: 16, scope: !18229)
!18229 = distinct !DILexicalBlock(scope: !18220, file: !1923, line: 367, column: 3)
!18230 = !DILocation(line: 368, column: 28, scope: !18229)
!18231 = !DILocation(line: 386, column: 2, scope: !18195)
!18232 = !DILocation(line: 386, column: 2, scope: !18233)
!18233 = distinct !DILexicalBlock(scope: !18234, file: !1923, line: 386, column: 2)
!18234 = distinct !DILexicalBlock(scope: !18195, file: !1923, line: 386, column: 2)
!18235 = !DILocation(line: 388, column: 2, scope: !18195)
!18236 = distinct !DISubprogram(name: "xQueueCreateMutex", scope: !1923, file: !1923, line: 394, type: !18237, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18239)
!18237 = !DISubroutineType(types: !18238)
!18238 = !{!1981, !1873}
!18239 = !{!18240, !18241}
!18240 = !DILocalVariable(name: "ucQueueType", arg: 1, scope: !18236, file: !1923, line: 394, type: !1873)
!18241 = !DILocalVariable(name: "pxNewQueue", scope: !18236, file: !1923, line: 396, type: !1925)
!18242 = !DILocation(line: 0, scope: !18236)
!18243 = !DILocation(line: 403, column: 30, scope: !18236)
!18244 = !DILocation(line: 404, column: 7, scope: !18236)
!18245 = !DILocation(line: 407, column: 16, scope: !18246)
!18246 = distinct !DILexicalBlock(scope: !18247, file: !1923, line: 405, column: 3)
!18247 = distinct !DILexicalBlock(scope: !18236, file: !1923, line: 404, column: 7)
!18248 = !DILocation(line: 407, column: 30, scope: !18246)
!18249 = !DILocation(line: 408, column: 16, scope: !18246)
!18250 = !DILocation(line: 408, column: 28, scope: !18246)
!18251 = !DILocation(line: 412, column: 16, scope: !18246)
!18252 = !DILocation(line: 412, column: 26, scope: !18246)
!18253 = !DILocation(line: 413, column: 16, scope: !18246)
!18254 = !DILocation(line: 413, column: 18, scope: !18246)
!18255 = !DILocation(line: 413, column: 29, scope: !18246)
!18256 = !DILocation(line: 418, column: 16, scope: !18246)
!18257 = !DILocation(line: 418, column: 34, scope: !18246)
!18258 = !DILocation(line: 419, column: 16, scope: !18246)
!18259 = !DILocation(line: 419, column: 25, scope: !18246)
!18260 = !DILocation(line: 420, column: 16, scope: !18246)
!18261 = !DILocation(line: 420, column: 27, scope: !18246)
!18262 = !DILocation(line: 421, column: 16, scope: !18246)
!18263 = !DILocation(line: 421, column: 24, scope: !18246)
!18264 = !DILocation(line: 422, column: 16, scope: !18246)
!18265 = !DILocation(line: 422, column: 24, scope: !18246)
!18266 = !DILocation(line: 426, column: 17, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18246, file: !1923, line: 425, column: 4)
!18268 = !DILocation(line: 426, column: 29, scope: !18267)
!18269 = !DILocation(line: 437, column: 36, scope: !18246)
!18270 = !DILocation(line: 437, column: 4, scope: !18246)
!18271 = !DILocation(line: 438, column: 36, scope: !18246)
!18272 = !DILocation(line: 438, column: 4, scope: !18246)
!18273 = !DILocation(line: 443, column: 13, scope: !18246)
!18274 = !DILocation(line: 450, column: 3, scope: !18236)
!18275 = !DILocation(line: 450, column: 3, scope: !18276)
!18276 = distinct !DILexicalBlock(scope: !18277, file: !1923, line: 450, column: 3)
!18277 = distinct !DILexicalBlock(scope: !18236, file: !1923, line: 450, column: 3)
!18278 = !DILocation(line: 451, column: 3, scope: !18236)
!18279 = distinct !DISubprogram(name: "xQueueGenericSend", scope: !1923, file: !1923, line: 613, type: !18280, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18284)
!18280 = !DISubroutineType(types: !18281)
!18281 = !{!1807, !1981, !18282, !1822, !18283}
!18282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!18283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!18284 = !{!18285, !18286, !18287, !18288, !18289, !18290, !18291, !18297}
!18285 = !DILocalVariable(name: "xQueue", arg: 1, scope: !18279, file: !1923, line: 613, type: !1981)
!18286 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !18279, file: !1923, line: 613, type: !18282)
!18287 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !18279, file: !1923, line: 613, type: !1822)
!18288 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !18279, file: !1923, line: 613, type: !18283)
!18289 = !DILocalVariable(name: "xEntryTimeSet", scope: !18279, file: !1923, line: 615, type: !1807)
!18290 = !DILocalVariable(name: "xYieldRequired", scope: !18279, file: !1923, line: 615, type: !1807)
!18291 = !DILocalVariable(name: "xTimeOut", scope: !18279, file: !1923, line: 616, type: !18292)
!18292 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !1785, line: 138, baseType: !18293)
!18293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !1785, line: 134, size: 64, elements: !18294)
!18294 = !{!18295, !18296}
!18295 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !18293, file: !1785, line: 136, baseType: !1807, size: 32)
!18296 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !18293, file: !1785, line: 137, baseType: !1822, size: 32, offset: 32)
!18297 = !DILocalVariable(name: "pxQueue", scope: !18279, file: !1923, line: 617, type: !18139)
!18298 = !DILocation(line: 0, scope: !18279)
!18299 = !DILocation(line: 616, column: 1, scope: !18279)
!18300 = !DILocation(line: 616, column: 11, scope: !18279)
!18301 = !DILocation(line: 617, column: 27, scope: !18279)
!18302 = !DILocation(line: 619, column: 2, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18279, file: !1923, line: 619, column: 2)
!18304 = !DILocation(line: 619, column: 2, scope: !18279)
!18305 = !DILocation(line: 619, column: 2, scope: !18306)
!18306 = distinct !DILexicalBlock(scope: !18303, file: !1923, line: 619, column: 2)
!18307 = !DILocation(line: 620, column: 2, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18279, file: !1923, line: 620, column: 2)
!18309 = !DILocation(line: 620, column: 2, scope: !18279)
!18310 = !DILocation(line: 620, column: 2, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18308, file: !1923, line: 620, column: 2)
!18312 = !DILocation(line: 621, column: 2, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18279, file: !1923, line: 621, column: 2)
!18314 = !DILocation(line: 621, column: 2, scope: !18279)
!18315 = !DILocation(line: 621, column: 2, scope: !18316)
!18316 = distinct !DILexicalBlock(scope: !18313, file: !1923, line: 621, column: 2)
!18317 = !DILocation(line: 624, column: 3, scope: !18318)
!18318 = distinct !DILexicalBlock(scope: !18319, file: !1923, line: 624, column: 3)
!18319 = distinct !DILexicalBlock(scope: !18279, file: !1923, line: 623, column: 2)
!18320 = !DILocation(line: 624, column: 3, scope: !18319)
!18321 = !DILocation(line: 624, column: 3, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18318, file: !1923, line: 624, column: 3)
!18323 = !DILocation(line: 634, column: 3, scope: !18324)
!18324 = distinct !DILexicalBlock(scope: !18325, file: !1923, line: 633, column: 2)
!18325 = distinct !DILexicalBlock(scope: !18326, file: !1923, line: 632, column: 2)
!18326 = distinct !DILexicalBlock(scope: !18279, file: !1923, line: 632, column: 2)
!18327 = !DILocation(line: 640, column: 19, scope: !18328)
!18328 = distinct !DILexicalBlock(scope: !18329, file: !1923, line: 640, column: 8)
!18329 = distinct !DILexicalBlock(scope: !18324, file: !1923, line: 635, column: 3)
!18330 = !DILocation(line: 640, column: 48, scope: !18328)
!18331 = !DILocation(line: 640, column: 37, scope: !18328)
!18332 = !DILocation(line: 640, column: 59, scope: !18328)
!18333 = !DILocation(line: 733, column: 22, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18335, file: !1923, line: 733, column: 9)
!18335 = distinct !DILexicalBlock(scope: !18328, file: !1923, line: 732, column: 4)
!18336 = !DILocation(line: 733, column: 9, scope: !18335)
!18337 = !DILocation(line: 643, column: 22, scope: !18338)
!18338 = distinct !DILexicalBlock(scope: !18328, file: !1923, line: 641, column: 4)
!18339 = !DILocation(line: 698, column: 10, scope: !18340)
!18340 = distinct !DILexicalBlock(scope: !18341, file: !1923, line: 698, column: 10)
!18341 = distinct !DILexicalBlock(scope: !18338, file: !1923, line: 695, column: 5)
!18342 = !DILocation(line: 698, column: 10, scope: !18341)
!18343 = !DILocation(line: 700, column: 11, scope: !18344)
!18344 = distinct !DILexicalBlock(scope: !18345, file: !1923, line: 700, column: 11)
!18345 = distinct !DILexicalBlock(scope: !18340, file: !1923, line: 699, column: 6)
!18346 = !DILocation(line: 700, column: 76, scope: !18344)
!18347 = !DILocation(line: 700, column: 11, scope: !18345)
!18348 = !DILocation(line: 706, column: 8, scope: !18349)
!18349 = distinct !DILexicalBlock(scope: !18350, file: !1923, line: 706, column: 8)
!18350 = distinct !DILexicalBlock(scope: !18344, file: !1923, line: 701, column: 7)
!18351 = !{i64 2148406999}
!18352 = !{i64 2148407039}
!18353 = !DILocation(line: 707, column: 7, scope: !18350)
!18354 = !DILocation(line: 713, column: 30, scope: !18355)
!18355 = distinct !DILexicalBlock(scope: !18340, file: !1923, line: 713, column: 15)
!18356 = !DILocation(line: 713, column: 15, scope: !18340)
!18357 = !DILocation(line: 719, column: 7, scope: !18358)
!18358 = distinct !DILexicalBlock(scope: !18359, file: !1923, line: 719, column: 7)
!18359 = distinct !DILexicalBlock(scope: !18355, file: !1923, line: 714, column: 6)
!18360 = !{i64 2148407501}
!18361 = !{i64 2148407541}
!18362 = !DILocation(line: 720, column: 6, scope: !18359)
!18363 = !DILocation(line: 728, column: 5, scope: !18338)
!18364 = !DILocation(line: 729, column: 5, scope: !18338)
!18365 = !DILocation(line: 737, column: 6, scope: !18366)
!18366 = distinct !DILexicalBlock(scope: !18334, file: !1923, line: 734, column: 5)
!18367 = !DILocation(line: 742, column: 6, scope: !18366)
!18368 = !DILocation(line: 748, column: 6, scope: !18369)
!18369 = distinct !DILexicalBlock(scope: !18370, file: !1923, line: 745, column: 5)
!18370 = distinct !DILexicalBlock(scope: !18334, file: !1923, line: 744, column: 14)
!18371 = !DILocation(line: 750, column: 5, scope: !18369)
!18372 = !DILocation(line: 758, column: 3, scope: !18324)
!18373 = !DILocation(line: 763, column: 3, scope: !18324)
!18374 = !DILocation(line: 764, column: 3, scope: !18324)
!18375 = !DILocation(line: 764, column: 3, scope: !18376)
!18376 = distinct !DILexicalBlock(scope: !18377, file: !1923, line: 764, column: 3)
!18377 = distinct !DILexicalBlock(scope: !18324, file: !1923, line: 764, column: 3)
!18378 = !DILocation(line: 764, column: 3, scope: !18377)
!18379 = !DILocation(line: 764, column: 3, scope: !18380)
!18380 = distinct !DILexicalBlock(scope: !18376, file: !1923, line: 764, column: 3)
!18381 = !DILocation(line: 764, column: 3, scope: !18382)
!18382 = distinct !DILexicalBlock(scope: !18377, file: !1923, line: 764, column: 3)
!18383 = !DILocation(line: 764, column: 3, scope: !18384)
!18384 = distinct !DILexicalBlock(scope: !18382, file: !1923, line: 764, column: 3)
!18385 = !DILocation(line: 767, column: 7, scope: !18386)
!18386 = distinct !DILexicalBlock(scope: !18324, file: !1923, line: 767, column: 7)
!18387 = !DILocation(line: 767, column: 56, scope: !18386)
!18388 = !DILocation(line: 767, column: 7, scope: !18324)
!18389 = !DILocation(line: 769, column: 8, scope: !18390)
!18390 = distinct !DILexicalBlock(scope: !18391, file: !1923, line: 769, column: 8)
!18391 = distinct !DILexicalBlock(scope: !18386, file: !1923, line: 768, column: 3)
!18392 = !DILocation(line: 769, column: 34, scope: !18390)
!18393 = !DILocation(line: 769, column: 8, scope: !18391)
!18394 = !DILocation(line: 772, column: 63, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18390, file: !1923, line: 770, column: 4)
!18396 = !DILocation(line: 772, column: 5, scope: !18395)
!18397 = !DILocation(line: 779, column: 5, scope: !18395)
!18398 = !DILocation(line: 786, column: 9, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18395, file: !1923, line: 786, column: 9)
!18400 = !DILocation(line: 786, column: 26, scope: !18399)
!18401 = !DILocation(line: 786, column: 9, scope: !18395)
!18402 = !DILocation(line: 788, column: 6, scope: !18403)
!18403 = distinct !DILexicalBlock(scope: !18404, file: !1923, line: 788, column: 6)
!18404 = distinct !DILexicalBlock(scope: !18399, file: !1923, line: 787, column: 5)
!18405 = !{i64 2148408802}
!18406 = !{i64 2148408842}
!18407 = !DILocation(line: 789, column: 5, scope: !18404)
!18408 = !DILocation(line: 794, column: 5, scope: !18409)
!18409 = distinct !DILexicalBlock(scope: !18390, file: !1923, line: 792, column: 4)
!18410 = !DILocation(line: 795, column: 14, scope: !18409)
!18411 = !DILocation(line: 801, column: 4, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18386, file: !1923, line: 799, column: 3)
!18413 = !DILocation(line: 802, column: 13, scope: !18412)
!18414 = !DILocation(line: 807, column: 4, scope: !18412)
!18415 = distinct !{!18415, !18416, !18417}
!18416 = !DILocation(line: 632, column: 2, scope: !18326)
!18417 = !DILocation(line: 809, column: 2, scope: !18326)
!18418 = !DILocation(line: 733, column: 9, scope: !18334)
!18419 = !DILocation(line: 0, scope: !18324)
!18420 = !DILocation(line: 810, column: 1, scope: !18279)
!18421 = distinct !DISubprogram(name: "prvCopyDataToQueue", scope: !1923, file: !1923, line: 1783, type: !18422, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18424)
!18422 = !DISubroutineType(types: !18423)
!18423 = !{!1807, !18139, !704, !18283}
!18424 = !{!18425, !18426, !18427, !18428}
!18425 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !18421, file: !1923, line: 1783, type: !18139)
!18426 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !18421, file: !1923, line: 1783, type: !704)
!18427 = !DILocalVariable(name: "xPosition", arg: 3, scope: !18421, file: !1923, line: 1783, type: !18283)
!18428 = !DILocalVariable(name: "xReturn", scope: !18421, file: !1923, line: 1785, type: !1807)
!18429 = !DILocation(line: 0, scope: !18421)
!18430 = !DILocation(line: 1787, column: 15, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18421, file: !1923, line: 1787, column: 6)
!18432 = !DILocation(line: 1787, column: 26, scope: !18431)
!18433 = !DILocation(line: 1787, column: 6, scope: !18421)
!18434 = !DILocation(line: 1791, column: 17, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18436, file: !1923, line: 1791, column: 8)
!18436 = distinct !DILexicalBlock(scope: !18437, file: !1923, line: 1790, column: 3)
!18437 = distinct !DILexicalBlock(scope: !18431, file: !1923, line: 1788, column: 2)
!18438 = !DILocation(line: 1791, column: 29, scope: !18435)
!18439 = !DILocation(line: 1791, column: 8, scope: !18436)
!18440 = !DILocation(line: 1794, column: 60, scope: !18441)
!18441 = distinct !DILexicalBlock(scope: !18435, file: !1923, line: 1792, column: 4)
!18442 = !DILocation(line: 1794, column: 15, scope: !18441)
!18443 = !DILocation(line: 1795, column: 28, scope: !18441)
!18444 = !DILocation(line: 1796, column: 4, scope: !18441)
!18445 = !DILocation(line: 1804, column: 21, scope: !18446)
!18446 = distinct !DILexicalBlock(scope: !18431, file: !1923, line: 1804, column: 11)
!18447 = !DILocation(line: 1804, column: 11, scope: !18431)
!18448 = !DILocation(line: 1806, column: 40, scope: !18449)
!18449 = distinct !DILexicalBlock(scope: !18446, file: !1923, line: 1805, column: 2)
!18450 = !DILocation(line: 1806, column: 12, scope: !18449)
!18451 = !DILocation(line: 1807, column: 34, scope: !18449)
!18452 = !DILocation(line: 1807, column: 22, scope: !18449)
!18453 = !DILocation(line: 1808, column: 38, scope: !18454)
!18454 = distinct !DILexicalBlock(scope: !18449, file: !1923, line: 1808, column: 7)
!18455 = !DILocation(line: 1808, column: 26, scope: !18454)
!18456 = !DILocation(line: 1808, column: 7, scope: !18449)
!18457 = !DILocation(line: 1810, column: 34, scope: !18458)
!18458 = distinct !DILexicalBlock(scope: !18454, file: !1923, line: 1809, column: 3)
!18459 = !DILocation(line: 1810, column: 23, scope: !18458)
!18460 = !DILocation(line: 1811, column: 3, scope: !18458)
!18461 = !DILocation(line: 1819, column: 42, scope: !18462)
!18462 = distinct !DILexicalBlock(scope: !18446, file: !1923, line: 1818, column: 2)
!18463 = !DILocation(line: 1819, column: 12, scope: !18462)
!18464 = !DILocation(line: 1820, column: 37, scope: !18462)
!18465 = !DILocation(line: 1820, column: 25, scope: !18462)
!18466 = !DILocation(line: 1821, column: 40, scope: !18467)
!18467 = distinct !DILexicalBlock(scope: !18462, file: !1923, line: 1821, column: 7)
!18468 = !DILocation(line: 1821, column: 29, scope: !18467)
!18469 = !DILocation(line: 1821, column: 7, scope: !18462)
!18470 = !DILocation(line: 1823, column: 39, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18467, file: !1923, line: 1822, column: 3)
!18472 = !DILocation(line: 1823, column: 46, scope: !18471)
!18473 = !DILocation(line: 1823, column: 26, scope: !18471)
!18474 = !DILocation(line: 1824, column: 3, scope: !18471)
!18475 = !DILocation(line: 1830, column: 17, scope: !18476)
!18476 = distinct !DILexicalBlock(scope: !18462, file: !1923, line: 1830, column: 7)
!18477 = !DILocation(line: 1830, column: 7, scope: !18462)
!18478 = !DILocation(line: 1832, column: 17, scope: !18479)
!18479 = distinct !DILexicalBlock(scope: !18480, file: !1923, line: 1832, column: 8)
!18480 = distinct !DILexicalBlock(scope: !18476, file: !1923, line: 1831, column: 3)
!18481 = !DILocation(line: 1832, column: 35, scope: !18479)
!18482 = !DILocation(line: 1832, column: 8, scope: !18480)
!18483 = !DILocation(line: 1838, column: 5, scope: !18484)
!18484 = distinct !DILexicalBlock(scope: !18479, file: !1923, line: 1833, column: 4)
!18485 = !DILocation(line: 1839, column: 4, scope: !18484)
!18486 = !DILocation(line: 1851, column: 15, scope: !18421)
!18487 = !DILocation(line: 1851, column: 2, scope: !18421)
!18488 = !DILocation(line: 1853, column: 2, scope: !18421)
!18489 = distinct !DISubprogram(name: "prvIsQueueFull", scope: !1923, file: !1923, line: 2029, type: !18490, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18494)
!18490 = !DISubroutineType(types: !18491)
!18491 = !{!1807, !18492}
!18492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18493, size: 32)
!18493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1926)
!18494 = !{!18495, !18496}
!18495 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !18489, file: !1923, line: 2029, type: !18492)
!18496 = !DILocalVariable(name: "xReturn", scope: !18489, file: !1923, line: 2031, type: !1807)
!18497 = !DILocation(line: 0, scope: !18489)
!18498 = !DILocation(line: 2033, column: 2, scope: !18489)
!18499 = !DILocation(line: 2035, column: 16, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18501, file: !1923, line: 2035, column: 7)
!18501 = distinct !DILexicalBlock(scope: !18489, file: !1923, line: 2034, column: 2)
!18502 = !DILocation(line: 2035, column: 46, scope: !18500)
!18503 = !DILocation(line: 2035, column: 34, scope: !18500)
!18504 = !DILocation(line: 2044, column: 2, scope: !18489)
!18505 = !DILocation(line: 2046, column: 2, scope: !18489)
!18506 = distinct !DISubprogram(name: "prvUnlockQueue", scope: !1923, file: !1923, line: 1875, type: !18507, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18509)
!18507 = !DISubroutineType(types: !18508)
!18508 = !{null, !18139}
!18509 = !{!18510}
!18510 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !18506, file: !1923, line: 1875, type: !18139)
!18511 = !DILocation(line: 0, scope: !18506)
!18512 = !DILocation(line: 1883, column: 2, scope: !18506)
!18513 = !DILocation(line: 1933, column: 9, scope: !18514)
!18514 = distinct !DILexicalBlock(scope: !18515, file: !1923, line: 1933, column: 9)
!18515 = distinct !DILexicalBlock(scope: !18516, file: !1923, line: 1930, column: 4)
!18516 = distinct !DILexicalBlock(scope: !18517, file: !1923, line: 1887, column: 3)
!18517 = distinct !DILexicalBlock(scope: !18506, file: !1923, line: 1884, column: 2)
!18518 = !DILocation(line: 1886, column: 19, scope: !18517)
!18519 = !DILocation(line: 1886, column: 27, scope: !18517)
!18520 = !DILocation(line: 1886, column: 3, scope: !18517)
!18521 = !DILocation(line: 1933, column: 9, scope: !18515)
!18522 = !DILocation(line: 1935, column: 10, scope: !18523)
!18523 = distinct !DILexicalBlock(scope: !18524, file: !1923, line: 1935, column: 10)
!18524 = distinct !DILexicalBlock(scope: !18514, file: !1923, line: 1934, column: 5)
!18525 = !DILocation(line: 1935, column: 75, scope: !18523)
!18526 = !DILocation(line: 1935, column: 10, scope: !18524)
!18527 = !DILocation(line: 1939, column: 7, scope: !18528)
!18528 = distinct !DILexicalBlock(scope: !18523, file: !1923, line: 1936, column: 6)
!18529 = !DILocation(line: 1940, column: 6, scope: !18528)
!18530 = !DILocation(line: 1953, column: 4, scope: !18516)
!18531 = distinct !{!18531, !18520, !18532}
!18532 = !DILocation(line: 1954, column: 3, scope: !18517)
!18533 = !DILocation(line: 1956, column: 20, scope: !18517)
!18534 = !DILocation(line: 1958, column: 2, scope: !18506)
!18535 = !DILocation(line: 1961, column: 2, scope: !18506)
!18536 = !DILocation(line: 1965, column: 8, scope: !18537)
!18537 = distinct !DILexicalBlock(scope: !18538, file: !1923, line: 1965, column: 8)
!18538 = distinct !DILexicalBlock(scope: !18539, file: !1923, line: 1964, column: 3)
!18539 = distinct !DILexicalBlock(scope: !18506, file: !1923, line: 1962, column: 2)
!18540 = !DILocation(line: 1963, column: 19, scope: !18539)
!18541 = !DILocation(line: 1963, column: 27, scope: !18539)
!18542 = !DILocation(line: 1963, column: 3, scope: !18539)
!18543 = !DILocation(line: 1965, column: 8, scope: !18538)
!18544 = !DILocation(line: 1967, column: 9, scope: !18545)
!18545 = distinct !DILexicalBlock(scope: !18546, file: !1923, line: 1967, column: 9)
!18546 = distinct !DILexicalBlock(scope: !18537, file: !1923, line: 1966, column: 4)
!18547 = !DILocation(line: 1967, column: 71, scope: !18545)
!18548 = !DILocation(line: 1967, column: 9, scope: !18546)
!18549 = !DILocation(line: 1969, column: 6, scope: !18550)
!18550 = distinct !DILexicalBlock(scope: !18545, file: !1923, line: 1968, column: 5)
!18551 = !DILocation(line: 1970, column: 5, scope: !18550)
!18552 = !DILocation(line: 1976, column: 5, scope: !18546)
!18553 = distinct !{!18553, !18542, !18554}
!18554 = !DILocation(line: 1982, column: 3, scope: !18539)
!18555 = !DILocation(line: 1984, column: 20, scope: !18539)
!18556 = !DILocation(line: 1986, column: 2, scope: !18506)
!18557 = !DILocation(line: 1987, column: 1, scope: !18506)
!18558 = distinct !DISubprogram(name: "xQueueGiveMutexRecursive", scope: !1923, file: !1923, line: 489, type: !18559, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18561)
!18559 = !DISubroutineType(types: !18560)
!18560 = !{!1807, !1981}
!18561 = !{!18562, !18563, !18564}
!18562 = !DILocalVariable(name: "xMutex", arg: 1, scope: !18558, file: !1923, line: 489, type: !1981)
!18563 = !DILocalVariable(name: "xReturn", scope: !18558, file: !1923, line: 491, type: !1807)
!18564 = !DILocalVariable(name: "pxMutex", scope: !18558, file: !1923, line: 492, type: !18139)
!18565 = !DILocation(line: 0, scope: !18558)
!18566 = !DILocation(line: 494, column: 3, scope: !18567)
!18567 = distinct !DILexicalBlock(scope: !18558, file: !1923, line: 494, column: 3)
!18568 = !DILocation(line: 494, column: 3, scope: !18558)
!18569 = !DILocation(line: 494, column: 3, scope: !18570)
!18570 = distinct !DILexicalBlock(scope: !18567, file: !1923, line: 494, column: 3)
!18571 = !DILocation(line: 502, column: 16, scope: !18572)
!18572 = distinct !DILexicalBlock(scope: !18558, file: !1923, line: 502, column: 7)
!18573 = !DILocation(line: 502, column: 44, scope: !18572)
!18574 = !DILocation(line: 502, column: 30, scope: !18572)
!18575 = !DILocation(line: 502, column: 7, scope: !18558)
!18576 = !DILocation(line: 511, column: 15, scope: !18577)
!18577 = distinct !DILexicalBlock(scope: !18572, file: !1923, line: 503, column: 3)
!18578 = !DILocation(line: 511, column: 17, scope: !18577)
!18579 = !DILocation(line: 511, column: 39, scope: !18577)
!18580 = !DILocation(line: 514, column: 40, scope: !18581)
!18581 = distinct !DILexicalBlock(scope: !18577, file: !1923, line: 514, column: 8)
!18582 = !DILocation(line: 514, column: 8, scope: !18577)
!18583 = !DILocation(line: 518, column: 14, scope: !18584)
!18584 = distinct !DILexicalBlock(scope: !18581, file: !1923, line: 515, column: 4)
!18585 = !DILocation(line: 519, column: 4, scope: !18584)
!18586 = !DILocation(line: 0, scope: !18572)
!18587 = !DILocation(line: 536, column: 3, scope: !18558)
!18588 = distinct !DISubprogram(name: "xQueueTakeMutexRecursive", scope: !1923, file: !1923, line: 544, type: !18589, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18591)
!18589 = !DISubroutineType(types: !18590)
!18590 = !{!1807, !1981, !1822}
!18591 = !{!18592, !18593, !18594, !18595}
!18592 = !DILocalVariable(name: "xMutex", arg: 1, scope: !18588, file: !1923, line: 544, type: !1981)
!18593 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !18588, file: !1923, line: 544, type: !1822)
!18594 = !DILocalVariable(name: "xReturn", scope: !18588, file: !1923, line: 546, type: !1807)
!18595 = !DILocalVariable(name: "pxMutex", scope: !18588, file: !1923, line: 547, type: !18139)
!18596 = !DILocation(line: 0, scope: !18588)
!18597 = !DILocation(line: 549, column: 3, scope: !18598)
!18598 = distinct !DILexicalBlock(scope: !18588, file: !1923, line: 549, column: 3)
!18599 = !DILocation(line: 549, column: 3, scope: !18588)
!18600 = !DILocation(line: 549, column: 3, scope: !18601)
!18601 = distinct !DILexicalBlock(scope: !18598, file: !1923, line: 549, column: 3)
!18602 = !DILocation(line: 556, column: 16, scope: !18603)
!18603 = distinct !DILexicalBlock(scope: !18588, file: !1923, line: 556, column: 7)
!18604 = !DILocation(line: 556, column: 44, scope: !18603)
!18605 = !DILocation(line: 556, column: 30, scope: !18603)
!18606 = !DILocation(line: 556, column: 7, scope: !18588)
!18607 = !DILocation(line: 563, column: 14, scope: !18608)
!18608 = distinct !DILexicalBlock(scope: !18603, file: !1923, line: 562, column: 3)
!18609 = !DILocation(line: 568, column: 16, scope: !18610)
!18610 = distinct !DILexicalBlock(scope: !18608, file: !1923, line: 568, column: 8)
!18611 = !DILocation(line: 568, column: 8, scope: !18608)
!18612 = !DILocation(line: 0, scope: !18603)
!18613 = !DILocation(line: 578, column: 3, scope: !18588)
!18614 = distinct !DISubprogram(name: "xQueueGenericReceive", scope: !1923, file: !1923, line: 1361, type: !18615, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18617)
!18615 = !DISubroutineType(types: !18616)
!18616 = !{!1807, !1981, !15874, !1822, !18283}
!18617 = !{!18618, !18619, !18620, !18621, !18622, !18623, !18624, !18625}
!18618 = !DILocalVariable(name: "xQueue", arg: 1, scope: !18614, file: !1923, line: 1361, type: !1981)
!18619 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !18614, file: !1923, line: 1361, type: !15874)
!18620 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !18614, file: !1923, line: 1361, type: !1822)
!18621 = !DILocalVariable(name: "xJustPeeking", arg: 4, scope: !18614, file: !1923, line: 1361, type: !18283)
!18622 = !DILocalVariable(name: "xEntryTimeSet", scope: !18614, file: !1923, line: 1363, type: !1807)
!18623 = !DILocalVariable(name: "xTimeOut", scope: !18614, file: !1923, line: 1364, type: !18292)
!18624 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !18614, file: !1923, line: 1365, type: !1931)
!18625 = !DILocalVariable(name: "pxQueue", scope: !18614, file: !1923, line: 1366, type: !18139)
!18626 = !DILocation(line: 0, scope: !18614)
!18627 = !DILocation(line: 1364, column: 1, scope: !18614)
!18628 = !DILocation(line: 1364, column: 11, scope: !18614)
!18629 = !DILocation(line: 1366, column: 27, scope: !18614)
!18630 = !DILocation(line: 1368, column: 2, scope: !18631)
!18631 = distinct !DILexicalBlock(scope: !18614, file: !1923, line: 1368, column: 2)
!18632 = !DILocation(line: 1368, column: 2, scope: !18614)
!18633 = !DILocation(line: 1368, column: 2, scope: !18634)
!18634 = distinct !DILexicalBlock(scope: !18631, file: !1923, line: 1368, column: 2)
!18635 = !DILocation(line: 1369, column: 2, scope: !18636)
!18636 = distinct !DILexicalBlock(scope: !18614, file: !1923, line: 1369, column: 2)
!18637 = !DILocation(line: 1369, column: 2, scope: !18614)
!18638 = !DILocation(line: 1369, column: 2, scope: !18639)
!18639 = distinct !DILexicalBlock(scope: !18636, file: !1923, line: 1369, column: 2)
!18640 = !DILocation(line: 1372, column: 3, scope: !18641)
!18641 = distinct !DILexicalBlock(scope: !18642, file: !1923, line: 1372, column: 3)
!18642 = distinct !DILexicalBlock(scope: !18614, file: !1923, line: 1371, column: 2)
!18643 = !DILocation(line: 1372, column: 3, scope: !18642)
!18644 = !DILocation(line: 1372, column: 3, scope: !18645)
!18645 = distinct !DILexicalBlock(scope: !18641, file: !1923, line: 1372, column: 3)
!18646 = !DILocation(line: 1382, column: 3, scope: !18647)
!18647 = distinct !DILexicalBlock(scope: !18648, file: !1923, line: 1381, column: 2)
!18648 = distinct !DILexicalBlock(scope: !18649, file: !1923, line: 1380, column: 2)
!18649 = distinct !DILexicalBlock(scope: !18614, file: !1923, line: 1380, column: 2)
!18650 = !DILocation(line: 1386, column: 17, scope: !18651)
!18651 = distinct !DILexicalBlock(scope: !18652, file: !1923, line: 1386, column: 8)
!18652 = distinct !DILexicalBlock(scope: !18647, file: !1923, line: 1383, column: 3)
!18653 = !DILocation(line: 1386, column: 35, scope: !18651)
!18654 = !DILocation(line: 1386, column: 8, scope: !18652)
!18655 = !DILocation(line: 1467, column: 22, scope: !18656)
!18656 = distinct !DILexicalBlock(scope: !18657, file: !1923, line: 1467, column: 9)
!18657 = distinct !DILexicalBlock(scope: !18651, file: !1923, line: 1466, column: 4)
!18658 = !DILocation(line: 1467, column: 9, scope: !18657)
!18659 = !DILocation(line: 1390, column: 39, scope: !18660)
!18660 = distinct !DILexicalBlock(scope: !18651, file: !1923, line: 1387, column: 4)
!18661 = !DILocation(line: 1390, column: 41, scope: !18660)
!18662 = !DILocation(line: 1392, column: 5, scope: !18660)
!18663 = !DILocation(line: 1394, column: 22, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18660, file: !1923, line: 1394, column: 9)
!18665 = !DILocation(line: 1394, column: 9, scope: !18660)
!18666 = !DILocation(line: 1399, column: 6, scope: !18667)
!18667 = distinct !DILexicalBlock(scope: !18664, file: !1923, line: 1395, column: 5)
!18668 = !DILocation(line: 1403, column: 20, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18670, file: !1923, line: 1403, column: 11)
!18670 = distinct !DILexicalBlock(scope: !18667, file: !1923, line: 1402, column: 6)
!18671 = !DILocation(line: 1403, column: 32, scope: !18669)
!18672 = !DILocation(line: 1403, column: 11, scope: !18670)
!18673 = !DILocation(line: 1407, column: 46, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18669, file: !1923, line: 1404, column: 7)
!18675 = !DILocation(line: 1407, column: 17, scope: !18674)
!18676 = !DILocation(line: 1407, column: 31, scope: !18674)
!18677 = !DILocation(line: 1408, column: 7, scope: !18674)
!18678 = !DILocation(line: 1416, column: 10, scope: !18679)
!18679 = distinct !DILexicalBlock(scope: !18667, file: !1923, line: 1416, column: 10)
!18680 = !DILocation(line: 1416, column: 10, scope: !18667)
!18681 = !DILocation(line: 1418, column: 11, scope: !18682)
!18682 = distinct !DILexicalBlock(scope: !18683, file: !1923, line: 1418, column: 11)
!18683 = distinct !DILexicalBlock(scope: !18679, file: !1923, line: 1417, column: 6)
!18684 = !DILocation(line: 1418, column: 73, scope: !18682)
!18685 = !DILocation(line: 1418, column: 11, scope: !18683)
!18686 = !DILocation(line: 1420, column: 8, scope: !18687)
!18687 = distinct !DILexicalBlock(scope: !18688, file: !1923, line: 1420, column: 8)
!18688 = distinct !DILexicalBlock(scope: !18682, file: !1923, line: 1419, column: 7)
!18689 = !{i64 2148412078}
!18690 = !{i64 2148412118}
!18691 = !DILocation(line: 1421, column: 7, scope: !18688)
!18692 = !DILocation(line: 1438, column: 28, scope: !18693)
!18693 = distinct !DILexicalBlock(scope: !18664, file: !1923, line: 1433, column: 5)
!18694 = !DILocation(line: 1442, column: 10, scope: !18695)
!18695 = distinct !DILexicalBlock(scope: !18693, file: !1923, line: 1442, column: 10)
!18696 = !DILocation(line: 1442, column: 10, scope: !18693)
!18697 = !DILocation(line: 1446, column: 11, scope: !18698)
!18698 = distinct !DILexicalBlock(scope: !18699, file: !1923, line: 1446, column: 11)
!18699 = distinct !DILexicalBlock(scope: !18695, file: !1923, line: 1443, column: 6)
!18700 = !DILocation(line: 1446, column: 76, scope: !18698)
!18701 = !DILocation(line: 1446, column: 11, scope: !18699)
!18702 = !DILocation(line: 1449, column: 8, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18704, file: !1923, line: 1449, column: 8)
!18704 = distinct !DILexicalBlock(scope: !18698, file: !1923, line: 1447, column: 7)
!18705 = !{i64 2148412710}
!18706 = !{i64 2148412750}
!18707 = !DILocation(line: 1450, column: 7, scope: !18704)
!18708 = !DILocation(line: 1462, column: 5, scope: !18660)
!18709 = !DILocation(line: 1463, column: 5, scope: !18660)
!18710 = !DILocation(line: 1471, column: 6, scope: !18711)
!18711 = distinct !DILexicalBlock(scope: !18656, file: !1923, line: 1468, column: 5)
!18712 = !DILocation(line: 1473, column: 6, scope: !18711)
!18713 = !DILocation(line: 1479, column: 6, scope: !18714)
!18714 = distinct !DILexicalBlock(scope: !18715, file: !1923, line: 1476, column: 5)
!18715 = distinct !DILexicalBlock(scope: !18656, file: !1923, line: 1475, column: 14)
!18716 = !DILocation(line: 1481, column: 5, scope: !18714)
!18717 = !DILocation(line: 1489, column: 3, scope: !18647)
!18718 = !DILocation(line: 1494, column: 3, scope: !18647)
!18719 = !DILocation(line: 1495, column: 3, scope: !18647)
!18720 = !DILocation(line: 1495, column: 3, scope: !18721)
!18721 = distinct !DILexicalBlock(scope: !18722, file: !1923, line: 1495, column: 3)
!18722 = distinct !DILexicalBlock(scope: !18647, file: !1923, line: 1495, column: 3)
!18723 = !DILocation(line: 1495, column: 3, scope: !18722)
!18724 = !DILocation(line: 1495, column: 3, scope: !18725)
!18725 = distinct !DILexicalBlock(scope: !18721, file: !1923, line: 1495, column: 3)
!18726 = !DILocation(line: 1495, column: 3, scope: !18727)
!18727 = distinct !DILexicalBlock(scope: !18722, file: !1923, line: 1495, column: 3)
!18728 = !DILocation(line: 1495, column: 3, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18727, file: !1923, line: 1495, column: 3)
!18730 = !DILocation(line: 1498, column: 7, scope: !18731)
!18731 = distinct !DILexicalBlock(scope: !18647, file: !1923, line: 1498, column: 7)
!18732 = !DILocation(line: 1498, column: 56, scope: !18731)
!18733 = !DILocation(line: 1498, column: 7, scope: !18647)
!18734 = !DILocation(line: 1500, column: 8, scope: !18735)
!18735 = distinct !DILexicalBlock(scope: !18736, file: !1923, line: 1500, column: 8)
!18736 = distinct !DILexicalBlock(scope: !18731, file: !1923, line: 1499, column: 3)
!18737 = !DILocation(line: 1500, column: 35, scope: !18735)
!18738 = !DILocation(line: 1500, column: 8, scope: !18736)
!18739 = !DILocation(line: 1506, column: 19, scope: !18740)
!18740 = distinct !DILexicalBlock(scope: !18741, file: !1923, line: 1506, column: 10)
!18741 = distinct !DILexicalBlock(scope: !18742, file: !1923, line: 1505, column: 5)
!18742 = distinct !DILexicalBlock(scope: !18735, file: !1923, line: 1501, column: 4)
!18743 = !DILocation(line: 1506, column: 31, scope: !18740)
!18744 = !DILocation(line: 1506, column: 10, scope: !18741)
!18745 = !DILocation(line: 1508, column: 7, scope: !18746)
!18746 = distinct !DILexicalBlock(scope: !18740, file: !1923, line: 1507, column: 6)
!18747 = !DILocation(line: 1510, column: 50, scope: !18748)
!18748 = distinct !DILexicalBlock(scope: !18746, file: !1923, line: 1509, column: 7)
!18749 = !DILocation(line: 1510, column: 8, scope: !18748)
!18750 = !DILocation(line: 1512, column: 7, scope: !18746)
!18751 = !DILocation(line: 1513, column: 6, scope: !18746)
!18752 = !DILocation(line: 1521, column: 66, scope: !18742)
!18753 = !DILocation(line: 1521, column: 5, scope: !18742)
!18754 = !DILocation(line: 1522, column: 5, scope: !18742)
!18755 = !DILocation(line: 1523, column: 9, scope: !18756)
!18756 = distinct !DILexicalBlock(scope: !18742, file: !1923, line: 1523, column: 9)
!18757 = !DILocation(line: 1523, column: 26, scope: !18756)
!18758 = !DILocation(line: 1523, column: 9, scope: !18742)
!18759 = !DILocation(line: 1525, column: 6, scope: !18760)
!18760 = distinct !DILexicalBlock(scope: !18761, file: !1923, line: 1525, column: 6)
!18761 = distinct !DILexicalBlock(scope: !18756, file: !1923, line: 1524, column: 5)
!18762 = !{i64 2148414125}
!18763 = !{i64 2148414165}
!18764 = !DILocation(line: 1526, column: 5, scope: !18761)
!18765 = !DILocation(line: 1535, column: 5, scope: !18766)
!18766 = distinct !DILexicalBlock(scope: !18735, file: !1923, line: 1533, column: 4)
!18767 = !DILocation(line: 1536, column: 14, scope: !18766)
!18768 = !DILocation(line: 1541, column: 4, scope: !18769)
!18769 = distinct !DILexicalBlock(scope: !18731, file: !1923, line: 1540, column: 3)
!18770 = !DILocation(line: 1542, column: 13, scope: !18769)
!18771 = !DILocation(line: 1544, column: 4, scope: !18769)
!18772 = distinct !{!18772, !18773, !18774}
!18773 = !DILocation(line: 1380, column: 2, scope: !18649)
!18774 = !DILocation(line: 1546, column: 2, scope: !18649)
!18775 = !DILocation(line: 1467, column: 9, scope: !18656)
!18776 = !DILocation(line: 0, scope: !18647)
!18777 = !DILocation(line: 1547, column: 1, scope: !18614)
!18778 = distinct !DISubprogram(name: "prvCopyDataFromQueue", scope: !1923, file: !1923, line: 1857, type: !18779, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18781)
!18779 = !DISubroutineType(types: !18780)
!18780 = !{null, !18139, !15874}
!18781 = !{!18782, !18783}
!18782 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !18778, file: !1923, line: 1857, type: !18139)
!18783 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !18778, file: !1923, line: 1857, type: !15874)
!18784 = !DILocation(line: 0, scope: !18778)
!18785 = !DILocation(line: 1859, column: 15, scope: !18786)
!18786 = distinct !DILexicalBlock(scope: !18778, file: !1923, line: 1859, column: 6)
!18787 = !DILocation(line: 1859, column: 26, scope: !18786)
!18788 = !DILocation(line: 1859, column: 6, scope: !18778)
!18789 = !DILocation(line: 1861, column: 14, scope: !18790)
!18790 = distinct !DILexicalBlock(scope: !18786, file: !1923, line: 1860, column: 2)
!18791 = !DILocation(line: 1861, column: 25, scope: !18790)
!18792 = !DILocation(line: 1862, column: 41, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18790, file: !1923, line: 1862, column: 7)
!18794 = !DILocation(line: 1862, column: 29, scope: !18793)
!18795 = !DILocation(line: 1862, column: 7, scope: !18790)
!18796 = !DILocation(line: 1864, column: 37, scope: !18797)
!18797 = distinct !DILexicalBlock(scope: !18793, file: !1923, line: 1863, column: 3)
!18798 = !DILocation(line: 1864, column: 26, scope: !18797)
!18799 = !DILocation(line: 1865, column: 3, scope: !18797)
!18800 = !DILocation(line: 1870, column: 63, scope: !18790)
!18801 = !DILocation(line: 1870, column: 12, scope: !18790)
!18802 = !DILocation(line: 1871, column: 2, scope: !18790)
!18803 = !DILocation(line: 1872, column: 1, scope: !18778)
!18804 = distinct !DISubprogram(name: "prvIsQueueEmpty", scope: !1923, file: !1923, line: 1990, type: !18490, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18805)
!18805 = !{!18806, !18807}
!18806 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !18804, file: !1923, line: 1990, type: !18492)
!18807 = !DILocalVariable(name: "xReturn", scope: !18804, file: !1923, line: 1992, type: !1807)
!18808 = !DILocation(line: 0, scope: !18804)
!18809 = !DILocation(line: 1994, column: 2, scope: !18804)
!18810 = !DILocation(line: 1996, column: 16, scope: !18811)
!18811 = distinct !DILexicalBlock(scope: !18812, file: !1923, line: 1996, column: 7)
!18812 = distinct !DILexicalBlock(scope: !18804, file: !1923, line: 1995, column: 2)
!18813 = !DILocation(line: 1996, column: 34, scope: !18811)
!18814 = !DILocation(line: 2005, column: 2, scope: !18804)
!18815 = !DILocation(line: 2007, column: 2, scope: !18804)
!18816 = distinct !DISubprogram(name: "xQueueCreateCountingSemaphore", scope: !1923, file: !1923, line: 586, type: !18817, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18819)
!18817 = !DISubroutineType(types: !18818)
!18818 = !{!1981, !16975, !16975}
!18819 = !{!18820, !18821, !18822}
!18820 = !DILocalVariable(name: "uxMaxCount", arg: 1, scope: !18816, file: !1923, line: 586, type: !16975)
!18821 = !DILocalVariable(name: "uxInitialCount", arg: 2, scope: !18816, file: !1923, line: 586, type: !16975)
!18822 = !DILocalVariable(name: "xHandle", scope: !18816, file: !1923, line: 588, type: !1981)
!18823 = !DILocation(line: 0, scope: !18816)
!18824 = !DILocation(line: 590, column: 3, scope: !18825)
!18825 = distinct !DILexicalBlock(scope: !18816, file: !1923, line: 590, column: 3)
!18826 = !DILocation(line: 590, column: 3, scope: !18816)
!18827 = !DILocation(line: 590, column: 3, scope: !18828)
!18828 = distinct !DILexicalBlock(scope: !18825, file: !1923, line: 590, column: 3)
!18829 = !DILocation(line: 591, column: 3, scope: !18830)
!18830 = distinct !DILexicalBlock(scope: !18816, file: !1923, line: 591, column: 3)
!18831 = !DILocation(line: 591, column: 3, scope: !18816)
!18832 = !DILocation(line: 591, column: 3, scope: !18833)
!18833 = distinct !DILexicalBlock(scope: !18830, file: !1923, line: 591, column: 3)
!18834 = !DILocation(line: 593, column: 13, scope: !18816)
!18835 = !DILocation(line: 595, column: 7, scope: !18816)
!18836 = !DILocation(line: 597, column: 31, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18838, file: !1923, line: 596, column: 3)
!18838 = distinct !DILexicalBlock(scope: !18816, file: !1923, line: 595, column: 7)
!18839 = !DILocation(line: 597, column: 49, scope: !18837)
!18840 = !DILocation(line: 606, column: 3, scope: !18816)
!18841 = !DILocation(line: 606, column: 3, scope: !18842)
!18842 = distinct !DILexicalBlock(scope: !18843, file: !1923, line: 606, column: 3)
!18843 = distinct !DILexicalBlock(scope: !18816, file: !1923, line: 606, column: 3)
!18844 = !DILocation(line: 607, column: 3, scope: !18816)
!18845 = distinct !DISubprogram(name: "xQueueGenericSendFromISR", scope: !1923, file: !1923, line: 1058, type: !18846, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18849)
!18846 = !DISubroutineType(types: !18847)
!18847 = !{!1807, !1981, !18282, !18848, !18283}
!18848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17864)
!18849 = !{!18850, !18851, !18852, !18853, !18854, !18855, !18856}
!18850 = !DILocalVariable(name: "xQueue", arg: 1, scope: !18845, file: !1923, line: 1058, type: !1981)
!18851 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !18845, file: !1923, line: 1058, type: !18282)
!18852 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !18845, file: !1923, line: 1058, type: !18848)
!18853 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !18845, file: !1923, line: 1058, type: !18283)
!18854 = !DILocalVariable(name: "xReturn", scope: !18845, file: !1923, line: 1060, type: !1807)
!18855 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !18845, file: !1923, line: 1061, type: !1800)
!18856 = !DILocalVariable(name: "pxQueue", scope: !18845, file: !1923, line: 1062, type: !18139)
!18857 = !DILocation(line: 0, scope: !18845)
!18858 = !DILocation(line: 1062, column: 27, scope: !18845)
!18859 = !DILocation(line: 1064, column: 2, scope: !18860)
!18860 = distinct !DILexicalBlock(scope: !18845, file: !1923, line: 1064, column: 2)
!18861 = !DILocation(line: 1064, column: 2, scope: !18845)
!18862 = !DILocation(line: 1064, column: 2, scope: !18863)
!18863 = distinct !DILexicalBlock(scope: !18860, file: !1923, line: 1064, column: 2)
!18864 = !DILocation(line: 1065, column: 2, scope: !18865)
!18865 = distinct !DILexicalBlock(scope: !18845, file: !1923, line: 1065, column: 2)
!18866 = !DILocation(line: 1065, column: 2, scope: !18845)
!18867 = !DILocation(line: 1065, column: 2, scope: !18868)
!18868 = distinct !DILexicalBlock(scope: !18865, file: !1923, line: 1065, column: 2)
!18869 = !DILocation(line: 1066, column: 2, scope: !18870)
!18870 = distinct !DILexicalBlock(scope: !18845, file: !1923, line: 1066, column: 2)
!18871 = !DILocation(line: 1066, column: 2, scope: !18845)
!18872 = !DILocation(line: 1066, column: 2, scope: !18873)
!18873 = distinct !DILexicalBlock(scope: !18870, file: !1923, line: 1066, column: 2)
!18874 = !DILocation(line: 1082, column: 2, scope: !18845)
!18875 = !DILocation(line: 231, column: 2, scope: !18876, inlinedAt: !18880)
!18876 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1801, file: !1801, line: 227, type: !2531, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18877)
!18877 = !{!18878, !18879}
!18878 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !18876, file: !1801, line: 229, type: !61)
!18879 = !DILocalVariable(name: "ulNewBASEPRI", scope: !18876, file: !1801, line: 229, type: !61)
!18880 = distinct !DILocation(line: 1089, column: 27, scope: !18845)
!18881 = !{i64 747301, i64 747338, i64 747370, i64 747406, i64 747433}
!18882 = !DILocation(line: 0, scope: !18876, inlinedAt: !18880)
!18883 = !DILocation(line: 1091, column: 18, scope: !18884)
!18884 = distinct !DILexicalBlock(scope: !18885, file: !1923, line: 1091, column: 7)
!18885 = distinct !DILexicalBlock(scope: !18845, file: !1923, line: 1090, column: 2)
!18886 = !DILocation(line: 1091, column: 47, scope: !18884)
!18887 = !DILocation(line: 1091, column: 36, scope: !18884)
!18888 = !DILocation(line: 1091, column: 58, scope: !18884)
!18889 = !DILocation(line: 1100, column: 13, scope: !18890)
!18890 = distinct !DILexicalBlock(scope: !18884, file: !1923, line: 1092, column: 3)
!18891 = !DILocation(line: 1104, column: 17, scope: !18892)
!18892 = distinct !DILexicalBlock(scope: !18890, file: !1923, line: 1104, column: 8)
!18893 = !DILocation(line: 1104, column: 25, scope: !18892)
!18894 = !DILocation(line: 1104, column: 8, scope: !18890)
!18895 = !DILocation(line: 1159, column: 10, scope: !18896)
!18896 = distinct !DILexicalBlock(scope: !18897, file: !1923, line: 1159, column: 10)
!18897 = distinct !DILexicalBlock(scope: !18898, file: !1923, line: 1158, column: 5)
!18898 = distinct !DILexicalBlock(scope: !18892, file: !1923, line: 1105, column: 4)
!18899 = !DILocation(line: 1159, column: 10, scope: !18897)
!18900 = !DILocation(line: 1161, column: 11, scope: !18901)
!18901 = distinct !DILexicalBlock(scope: !18902, file: !1923, line: 1161, column: 11)
!18902 = distinct !DILexicalBlock(scope: !18896, file: !1923, line: 1160, column: 6)
!18903 = !DILocation(line: 1161, column: 76, scope: !18901)
!18904 = !DILocation(line: 1161, column: 11, scope: !18902)
!18905 = !DILocation(line: 1167, column: 36, scope: !18906)
!18906 = distinct !DILexicalBlock(scope: !18907, file: !1923, line: 1166, column: 8)
!18907 = distinct !DILexicalBlock(scope: !18908, file: !1923, line: 1165, column: 12)
!18908 = distinct !DILexicalBlock(scope: !18901, file: !1923, line: 1162, column: 7)
!18909 = !DILocation(line: 1168, column: 8, scope: !18906)
!18910 = !DILocation(line: 1190, column: 5, scope: !18911)
!18911 = distinct !DILexicalBlock(scope: !18892, file: !1923, line: 1187, column: 4)
!18912 = !DILocation(line: 0, scope: !18884)
!18913 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !18914, file: !1801, line: 247, type: !61)
!18914 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1801, file: !1801, line: 247, type: !4770, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18915)
!18915 = !{!18913}
!18916 = !DILocation(line: 0, scope: !18914, inlinedAt: !18917)
!18917 = distinct !DILocation(line: 1201, column: 2, scope: !18845)
!18918 = !DILocation(line: 249, column: 2, scope: !18914, inlinedAt: !18917)
!18919 = !{i64 747834}
!18920 = !DILocation(line: 1203, column: 2, scope: !18845)
!18921 = distinct !DISubprogram(name: "xQueueGiveFromISR", scope: !1923, file: !1923, line: 1207, type: !18922, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18924)
!18922 = !DISubroutineType(types: !18923)
!18923 = !{!1807, !1981, !18848}
!18924 = !{!18925, !18926, !18927, !18928, !18929}
!18925 = !DILocalVariable(name: "xQueue", arg: 1, scope: !18921, file: !1923, line: 1207, type: !1981)
!18926 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !18921, file: !1923, line: 1207, type: !18848)
!18927 = !DILocalVariable(name: "xReturn", scope: !18921, file: !1923, line: 1209, type: !1807)
!18928 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !18921, file: !1923, line: 1210, type: !1800)
!18929 = !DILocalVariable(name: "pxQueue", scope: !18921, file: !1923, line: 1211, type: !18139)
!18930 = !DILocation(line: 0, scope: !18921)
!18931 = !DILocation(line: 1213, column: 2, scope: !18932)
!18932 = distinct !DILexicalBlock(scope: !18921, file: !1923, line: 1213, column: 2)
!18933 = !DILocation(line: 1213, column: 2, scope: !18921)
!18934 = !DILocation(line: 1213, column: 2, scope: !18935)
!18935 = distinct !DILexicalBlock(scope: !18932, file: !1923, line: 1213, column: 2)
!18936 = !DILocation(line: 1216, column: 2, scope: !18937)
!18937 = distinct !DILexicalBlock(scope: !18921, file: !1923, line: 1216, column: 2)
!18938 = !DILocation(line: 1216, column: 2, scope: !18921)
!18939 = !DILocation(line: 1216, column: 2, scope: !18940)
!18940 = distinct !DILexicalBlock(scope: !18937, file: !1923, line: 1216, column: 2)
!18941 = !DILocation(line: 1232, column: 2, scope: !18921)
!18942 = !DILocation(line: 231, column: 2, scope: !18876, inlinedAt: !18943)
!18943 = distinct !DILocation(line: 1239, column: 27, scope: !18921)
!18944 = !DILocation(line: 0, scope: !18876, inlinedAt: !18943)
!18945 = !DILocation(line: 1244, column: 16, scope: !18946)
!18946 = distinct !DILexicalBlock(scope: !18947, file: !1923, line: 1244, column: 7)
!18947 = distinct !DILexicalBlock(scope: !18921, file: !1923, line: 1240, column: 2)
!18948 = !DILocation(line: 1244, column: 45, scope: !18946)
!18949 = !DILocation(line: 1244, column: 34, scope: !18946)
!18950 = !DILocation(line: 1244, column: 7, scope: !18947)
!18951 = !DILocation(line: 1254, column: 4, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18946, file: !1923, line: 1245, column: 3)
!18953 = !DILocation(line: 1258, column: 17, scope: !18954)
!18954 = distinct !DILexicalBlock(scope: !18952, file: !1923, line: 1258, column: 8)
!18955 = !DILocation(line: 1258, column: 25, scope: !18954)
!18956 = !DILocation(line: 1258, column: 8, scope: !18952)
!18957 = !DILocation(line: 1313, column: 10, scope: !18958)
!18958 = distinct !DILexicalBlock(scope: !18959, file: !1923, line: 1313, column: 10)
!18959 = distinct !DILexicalBlock(scope: !18960, file: !1923, line: 1312, column: 5)
!18960 = distinct !DILexicalBlock(scope: !18954, file: !1923, line: 1259, column: 4)
!18961 = !DILocation(line: 1313, column: 10, scope: !18959)
!18962 = !DILocation(line: 1315, column: 11, scope: !18963)
!18963 = distinct !DILexicalBlock(scope: !18964, file: !1923, line: 1315, column: 11)
!18964 = distinct !DILexicalBlock(scope: !18958, file: !1923, line: 1314, column: 6)
!18965 = !DILocation(line: 1315, column: 76, scope: !18963)
!18966 = !DILocation(line: 1315, column: 11, scope: !18964)
!18967 = !DILocation(line: 1321, column: 36, scope: !18968)
!18968 = distinct !DILexicalBlock(scope: !18969, file: !1923, line: 1320, column: 8)
!18969 = distinct !DILexicalBlock(scope: !18970, file: !1923, line: 1319, column: 12)
!18970 = distinct !DILexicalBlock(scope: !18963, file: !1923, line: 1316, column: 7)
!18971 = !DILocation(line: 1322, column: 8, scope: !18968)
!18972 = !DILocation(line: 1344, column: 5, scope: !18973)
!18973 = distinct !DILexicalBlock(scope: !18954, file: !1923, line: 1341, column: 4)
!18974 = !DILocation(line: 0, scope: !18946)
!18975 = !DILocation(line: 0, scope: !18914, inlinedAt: !18976)
!18976 = distinct !DILocation(line: 1355, column: 2, scope: !18921)
!18977 = !DILocation(line: 249, column: 2, scope: !18914, inlinedAt: !18976)
!18978 = !DILocation(line: 1357, column: 2, scope: !18921)
!18979 = distinct !DISubprogram(name: "xQueueReceiveFromISR", scope: !1923, file: !1923, line: 1550, type: !18980, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !18982)
!18980 = !DISubroutineType(types: !18981)
!18981 = !{!1807, !1981, !15874, !18848}
!18982 = !{!18983, !18984, !18985, !18986, !18987, !18988}
!18983 = !DILocalVariable(name: "xQueue", arg: 1, scope: !18979, file: !1923, line: 1550, type: !1981)
!18984 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !18979, file: !1923, line: 1550, type: !15874)
!18985 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !18979, file: !1923, line: 1550, type: !18848)
!18986 = !DILocalVariable(name: "xReturn", scope: !18979, file: !1923, line: 1552, type: !1807)
!18987 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !18979, file: !1923, line: 1553, type: !1800)
!18988 = !DILocalVariable(name: "pxQueue", scope: !18979, file: !1923, line: 1554, type: !18139)
!18989 = !DILocation(line: 0, scope: !18979)
!18990 = !DILocation(line: 1554, column: 27, scope: !18979)
!18991 = !DILocation(line: 1556, column: 2, scope: !18992)
!18992 = distinct !DILexicalBlock(scope: !18979, file: !1923, line: 1556, column: 2)
!18993 = !DILocation(line: 1556, column: 2, scope: !18979)
!18994 = !DILocation(line: 1556, column: 2, scope: !18995)
!18995 = distinct !DILexicalBlock(scope: !18992, file: !1923, line: 1556, column: 2)
!18996 = !DILocation(line: 1557, column: 2, scope: !18997)
!18997 = distinct !DILexicalBlock(scope: !18979, file: !1923, line: 1557, column: 2)
!18998 = !DILocation(line: 1557, column: 2, scope: !18979)
!18999 = !DILocation(line: 1557, column: 2, scope: !19000)
!19000 = distinct !DILexicalBlock(scope: !18997, file: !1923, line: 1557, column: 2)
!19001 = !DILocation(line: 1573, column: 2, scope: !18979)
!19002 = !DILocation(line: 231, column: 2, scope: !18876, inlinedAt: !19003)
!19003 = distinct !DILocation(line: 1575, column: 27, scope: !18979)
!19004 = !DILocation(line: 0, scope: !18876, inlinedAt: !19003)
!19005 = !DILocation(line: 1578, column: 16, scope: !19006)
!19006 = distinct !DILexicalBlock(scope: !19007, file: !1923, line: 1578, column: 7)
!19007 = distinct !DILexicalBlock(scope: !18979, file: !1923, line: 1576, column: 2)
!19008 = !DILocation(line: 1578, column: 34, scope: !19006)
!19009 = !DILocation(line: 1578, column: 7, scope: !19007)
!19010 = !DILocation(line: 1582, column: 4, scope: !19011)
!19011 = distinct !DILexicalBlock(scope: !19006, file: !1923, line: 1579, column: 3)
!19012 = !DILocation(line: 1583, column: 4, scope: !19011)
!19013 = !DILocation(line: 1589, column: 17, scope: !19014)
!19014 = distinct !DILexicalBlock(scope: !19011, file: !1923, line: 1589, column: 8)
!19015 = !DILocation(line: 1589, column: 25, scope: !19014)
!19016 = !DILocation(line: 1589, column: 8, scope: !19011)
!19017 = !DILocation(line: 1591, column: 9, scope: !19018)
!19018 = distinct !DILexicalBlock(scope: !19019, file: !1923, line: 1591, column: 9)
!19019 = distinct !DILexicalBlock(scope: !19014, file: !1923, line: 1590, column: 4)
!19020 = !DILocation(line: 1591, column: 9, scope: !19019)
!19021 = !DILocation(line: 1593, column: 10, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !19023, file: !1923, line: 1593, column: 10)
!19023 = distinct !DILexicalBlock(scope: !19018, file: !1923, line: 1592, column: 5)
!19024 = !DILocation(line: 1593, column: 72, scope: !19022)
!19025 = !DILocation(line: 1593, column: 10, scope: !19023)
!19026 = !DILocation(line: 1599, column: 35, scope: !19027)
!19027 = distinct !DILexicalBlock(scope: !19028, file: !1923, line: 1598, column: 7)
!19028 = distinct !DILexicalBlock(scope: !19029, file: !1923, line: 1597, column: 11)
!19029 = distinct !DILexicalBlock(scope: !19022, file: !1923, line: 1594, column: 6)
!19030 = !DILocation(line: 1600, column: 7, scope: !19027)
!19031 = !DILocation(line: 1620, column: 5, scope: !19032)
!19032 = distinct !DILexicalBlock(scope: !19014, file: !1923, line: 1617, column: 4)
!19033 = !DILocation(line: 0, scope: !19006)
!19034 = !DILocation(line: 0, scope: !18914, inlinedAt: !19035)
!19035 = distinct !DILocation(line: 1631, column: 2, scope: !18979)
!19036 = !DILocation(line: 249, column: 2, scope: !18914, inlinedAt: !19035)
!19037 = !DILocation(line: 1633, column: 2, scope: !18979)
!19038 = distinct !DISubprogram(name: "xQueuePeekFromISR", scope: !1923, file: !1923, line: 1637, type: !19039, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19041)
!19039 = !DISubroutineType(types: !19040)
!19040 = !{!1807, !1981, !15874}
!19041 = !{!19042, !19043, !19044, !19045, !19046, !19047}
!19042 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19038, file: !1923, line: 1637, type: !1981)
!19043 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !19038, file: !1923, line: 1637, type: !15874)
!19044 = !DILocalVariable(name: "xReturn", scope: !19038, file: !1923, line: 1639, type: !1807)
!19045 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !19038, file: !1923, line: 1640, type: !1800)
!19046 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !19038, file: !1923, line: 1641, type: !1931)
!19047 = !DILocalVariable(name: "pxQueue", scope: !19038, file: !1923, line: 1642, type: !18139)
!19048 = !DILocation(line: 0, scope: !19038)
!19049 = !DILocation(line: 1642, column: 27, scope: !19038)
!19050 = !DILocation(line: 1644, column: 2, scope: !19051)
!19051 = distinct !DILexicalBlock(scope: !19038, file: !1923, line: 1644, column: 2)
!19052 = !DILocation(line: 1644, column: 2, scope: !19038)
!19053 = !DILocation(line: 1644, column: 2, scope: !19054)
!19054 = distinct !DILexicalBlock(scope: !19051, file: !1923, line: 1644, column: 2)
!19055 = !DILocation(line: 1645, column: 2, scope: !19056)
!19056 = distinct !DILexicalBlock(scope: !19038, file: !1923, line: 1645, column: 2)
!19057 = !DILocation(line: 1645, column: 2, scope: !19038)
!19058 = !DILocation(line: 1645, column: 2, scope: !19059)
!19059 = distinct !DILexicalBlock(scope: !19056, file: !1923, line: 1645, column: 2)
!19060 = !DILocation(line: 1646, column: 2, scope: !19061)
!19061 = distinct !DILexicalBlock(scope: !19038, file: !1923, line: 1646, column: 2)
!19062 = !DILocation(line: 1646, column: 2, scope: !19038)
!19063 = !DILocation(line: 1646, column: 2, scope: !19064)
!19064 = distinct !DILexicalBlock(scope: !19061, file: !1923, line: 1646, column: 2)
!19065 = !DILocation(line: 1662, column: 2, scope: !19038)
!19066 = !DILocation(line: 231, column: 2, scope: !18876, inlinedAt: !19067)
!19067 = distinct !DILocation(line: 1664, column: 27, scope: !19038)
!19068 = !DILocation(line: 0, scope: !18876, inlinedAt: !19067)
!19069 = !DILocation(line: 1667, column: 16, scope: !19070)
!19070 = distinct !DILexicalBlock(scope: !19071, file: !1923, line: 1667, column: 7)
!19071 = distinct !DILexicalBlock(scope: !19038, file: !1923, line: 1665, column: 2)
!19072 = !DILocation(line: 1667, column: 34, scope: !19070)
!19073 = !DILocation(line: 1667, column: 7, scope: !19071)
!19074 = !DILocation(line: 1673, column: 38, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19070, file: !1923, line: 1668, column: 3)
!19076 = !DILocation(line: 1673, column: 40, scope: !19075)
!19077 = !DILocation(line: 1674, column: 4, scope: !19075)
!19078 = !DILocation(line: 1675, column: 26, scope: !19075)
!19079 = !DILocation(line: 1678, column: 3, scope: !19075)
!19080 = !DILocation(line: 0, scope: !19070)
!19081 = !DILocation(line: 0, scope: !18914, inlinedAt: !19082)
!19082 = distinct !DILocation(line: 1685, column: 2, scope: !19038)
!19083 = !DILocation(line: 249, column: 2, scope: !18914, inlinedAt: !19082)
!19084 = !DILocation(line: 1687, column: 2, scope: !19038)
!19085 = distinct !DISubprogram(name: "uxQueueMessagesWaiting", scope: !1923, file: !1923, line: 1691, type: !19086, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19089)
!19086 = !DISubroutineType(types: !19087)
!19087 = !{!1800, !19088}
!19088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1981)
!19089 = !{!19090, !19091}
!19090 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19085, file: !1923, line: 1691, type: !19088)
!19091 = !DILocalVariable(name: "uxReturn", scope: !19085, file: !1923, line: 1693, type: !1800)
!19092 = !DILocation(line: 0, scope: !19085)
!19093 = !DILocation(line: 1695, column: 2, scope: !19094)
!19094 = distinct !DILexicalBlock(scope: !19085, file: !1923, line: 1695, column: 2)
!19095 = !DILocation(line: 1695, column: 2, scope: !19085)
!19096 = !DILocation(line: 1695, column: 2, scope: !19097)
!19097 = distinct !DILexicalBlock(scope: !19094, file: !1923, line: 1695, column: 2)
!19098 = !DILocation(line: 1697, column: 2, scope: !19085)
!19099 = !DILocation(line: 1699, column: 40, scope: !19100)
!19100 = distinct !DILexicalBlock(scope: !19085, file: !1923, line: 1698, column: 2)
!19101 = !DILocation(line: 1701, column: 2, scope: !19085)
!19102 = !DILocation(line: 1703, column: 2, scope: !19085)
!19103 = distinct !DISubprogram(name: "uxQueueSpacesAvailable", scope: !1923, file: !1923, line: 1707, type: !19086, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19104)
!19104 = !{!19105, !19106, !19107}
!19105 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19103, file: !1923, line: 1707, type: !19088)
!19106 = !DILocalVariable(name: "uxReturn", scope: !19103, file: !1923, line: 1709, type: !1800)
!19107 = !DILocalVariable(name: "pxQueue", scope: !19103, file: !1923, line: 1710, type: !1925)
!19108 = !DILocation(line: 0, scope: !19103)
!19109 = !DILocation(line: 1713, column: 2, scope: !19110)
!19110 = distinct !DILexicalBlock(scope: !19103, file: !1923, line: 1713, column: 2)
!19111 = !DILocation(line: 1713, column: 2, scope: !19103)
!19112 = !DILocation(line: 1713, column: 2, scope: !19113)
!19113 = distinct !DILexicalBlock(scope: !19110, file: !1923, line: 1713, column: 2)
!19114 = !DILocation(line: 1715, column: 2, scope: !19103)
!19115 = !DILocation(line: 1717, column: 23, scope: !19116)
!19116 = distinct !DILexicalBlock(scope: !19103, file: !1923, line: 1716, column: 2)
!19117 = !DILocation(line: 1717, column: 43, scope: !19116)
!19118 = !DILocation(line: 1717, column: 32, scope: !19116)
!19119 = !DILocation(line: 1719, column: 2, scope: !19103)
!19120 = !DILocation(line: 1721, column: 2, scope: !19103)
!19121 = distinct !DISubprogram(name: "uxQueueMessagesWaitingFromISR", scope: !1923, file: !1923, line: 1725, type: !19086, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19122)
!19122 = !{!19123, !19124}
!19123 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19121, file: !1923, line: 1725, type: !19088)
!19124 = !DILocalVariable(name: "uxReturn", scope: !19121, file: !1923, line: 1727, type: !1800)
!19125 = !DILocation(line: 0, scope: !19121)
!19126 = !DILocation(line: 1729, column: 2, scope: !19127)
!19127 = distinct !DILexicalBlock(scope: !19121, file: !1923, line: 1729, column: 2)
!19128 = !DILocation(line: 1729, column: 2, scope: !19121)
!19129 = !DILocation(line: 1729, column: 2, scope: !19130)
!19130 = distinct !DILexicalBlock(scope: !19127, file: !1923, line: 1729, column: 2)
!19131 = !DILocation(line: 1731, column: 39, scope: !19121)
!19132 = !DILocation(line: 1733, column: 2, scope: !19121)
!19133 = distinct !DISubprogram(name: "vQueueDelete", scope: !1923, file: !1923, line: 1737, type: !19134, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19136)
!19134 = !DISubroutineType(types: !19135)
!19135 = !{null, !1981}
!19136 = !{!19137, !19138}
!19137 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19133, file: !1923, line: 1737, type: !1981)
!19138 = !DILocalVariable(name: "pxQueue", scope: !19133, file: !1923, line: 1739, type: !18139)
!19139 = !DILocation(line: 0, scope: !19133)
!19140 = !DILocation(line: 1741, column: 2, scope: !19141)
!19141 = distinct !DILexicalBlock(scope: !19133, file: !1923, line: 1741, column: 2)
!19142 = !DILocation(line: 1741, column: 2, scope: !19133)
!19143 = !DILocation(line: 1741, column: 2, scope: !19144)
!19144 = distinct !DILexicalBlock(scope: !19141, file: !1923, line: 1741, column: 2)
!19145 = !DILocation(line: 1746, column: 3, scope: !19146)
!19146 = distinct !DILexicalBlock(scope: !19133, file: !1923, line: 1745, column: 2)
!19147 = !DILocation(line: 1749, column: 2, scope: !19133)
!19148 = !DILocation(line: 1750, column: 1, scope: !19133)
!19149 = distinct !DISubprogram(name: "vQueueUnregisterQueue", scope: !1923, file: !1923, line: 2374, type: !19134, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19150)
!19150 = !{!19151, !19152}
!19151 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19149, file: !1923, line: 2374, type: !1981)
!19152 = !DILocalVariable(name: "ux", scope: !19149, file: !1923, line: 2376, type: !1800)
!19153 = !DILocation(line: 0, scope: !19149)
!19154 = !DILocation(line: 2380, column: 3, scope: !19155)
!19155 = distinct !DILexicalBlock(scope: !19149, file: !1923, line: 2380, column: 3)
!19156 = !DILocation(line: 2382, column: 29, scope: !19157)
!19157 = distinct !DILexicalBlock(scope: !19158, file: !1923, line: 2382, column: 8)
!19158 = distinct !DILexicalBlock(scope: !19159, file: !1923, line: 2381, column: 3)
!19159 = distinct !DILexicalBlock(scope: !19155, file: !1923, line: 2380, column: 3)
!19160 = !DILocation(line: 2382, column: 37, scope: !19157)
!19161 = !DILocation(line: 2382, column: 8, scope: !19158)
!19162 = !DILocation(line: 2385, column: 26, scope: !19163)
!19163 = distinct !DILexicalBlock(scope: !19157, file: !1923, line: 2383, column: 4)
!19164 = !DILocation(line: 2385, column: 38, scope: !19163)
!19165 = !DILocation(line: 2386, column: 5, scope: !19163)
!19166 = !DILocation(line: 2380, column: 83, scope: !19159)
!19167 = !DILocation(line: 2380, column: 36, scope: !19159)
!19168 = distinct !{!19168, !19154, !19169}
!19169 = !DILocation(line: 2392, column: 3, scope: !19155)
!19170 = !DILocation(line: 2394, column: 2, scope: !19149)
!19171 = distinct !DISubprogram(name: "uxQueueGetQueueNumber", scope: !1923, file: !1923, line: 1755, type: !19172, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19174)
!19172 = !DISubroutineType(types: !19173)
!19173 = !{!1800, !1981}
!19174 = !{!19175}
!19175 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19171, file: !1923, line: 1755, type: !1981)
!19176 = !DILocation(line: 0, scope: !19171)
!19177 = !DILocation(line: 1757, column: 36, scope: !19171)
!19178 = !DILocation(line: 1757, column: 3, scope: !19171)
!19179 = distinct !DISubprogram(name: "vQueueSetQueueNumber", scope: !1923, file: !1923, line: 1765, type: !19180, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19182)
!19180 = !DISubroutineType(types: !19181)
!19181 = !{null, !1981, !1800}
!19182 = !{!19183, !19184}
!19183 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19179, file: !1923, line: 1765, type: !1981)
!19184 = !DILocalVariable(name: "uxQueueNumber", arg: 2, scope: !19179, file: !1923, line: 1765, type: !1800)
!19185 = !DILocation(line: 0, scope: !19179)
!19186 = !DILocation(line: 1767, column: 29, scope: !19179)
!19187 = !DILocation(line: 1767, column: 43, scope: !19179)
!19188 = !DILocation(line: 1768, column: 2, scope: !19179)
!19189 = distinct !DISubprogram(name: "ucQueueGetQueueType", scope: !1923, file: !1923, line: 1775, type: !19190, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19192)
!19190 = !DISubroutineType(types: !19191)
!19191 = !{!54, !1981}
!19192 = !{!19193}
!19193 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19189, file: !1923, line: 1775, type: !1981)
!19194 = !DILocation(line: 0, scope: !19189)
!19195 = !DILocation(line: 1777, column: 36, scope: !19189)
!19196 = !DILocation(line: 1777, column: 3, scope: !19189)
!19197 = distinct !DISubprogram(name: "xQueueIsQueueEmptyFromISR", scope: !1923, file: !1923, line: 2011, type: !19198, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19200)
!19198 = !DISubroutineType(types: !19199)
!19199 = !{!1807, !19088}
!19200 = !{!19201, !19202}
!19201 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19197, file: !1923, line: 2011, type: !19088)
!19202 = !DILocalVariable(name: "xReturn", scope: !19197, file: !1923, line: 2013, type: !1807)
!19203 = !DILocation(line: 0, scope: !19197)
!19204 = !DILocation(line: 2015, column: 2, scope: !19205)
!19205 = distinct !DILexicalBlock(scope: !19197, file: !1923, line: 2015, column: 2)
!19206 = !DILocation(line: 2015, column: 2, scope: !19197)
!19207 = !DILocation(line: 2015, column: 2, scope: !19208)
!19208 = distinct !DILexicalBlock(scope: !19205, file: !1923, line: 2015, column: 2)
!19209 = !DILocation(line: 2016, column: 32, scope: !19210)
!19210 = distinct !DILexicalBlock(scope: !19197, file: !1923, line: 2016, column: 6)
!19211 = !DILocation(line: 2016, column: 50, scope: !19210)
!19212 = !DILocation(line: 2025, column: 2, scope: !19197)
!19213 = distinct !DISubprogram(name: "xQueueIsQueueFullFromISR", scope: !1923, file: !1923, line: 2050, type: !19198, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19214)
!19214 = !{!19215, !19216}
!19215 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19213, file: !1923, line: 2050, type: !19088)
!19216 = !DILocalVariable(name: "xReturn", scope: !19213, file: !1923, line: 2052, type: !1807)
!19217 = !DILocation(line: 0, scope: !19213)
!19218 = !DILocation(line: 2054, column: 2, scope: !19219)
!19219 = distinct !DILexicalBlock(scope: !19213, file: !1923, line: 2054, column: 2)
!19220 = !DILocation(line: 2054, column: 2, scope: !19213)
!19221 = !DILocation(line: 2054, column: 2, scope: !19222)
!19222 = distinct !DILexicalBlock(scope: !19219, file: !1923, line: 2054, column: 2)
!19223 = !DILocation(line: 2055, column: 32, scope: !19224)
!19224 = distinct !DILexicalBlock(scope: !19213, file: !1923, line: 2055, column: 6)
!19225 = !DILocation(line: 2055, column: 79, scope: !19224)
!19226 = !DILocation(line: 2055, column: 50, scope: !19224)
!19227 = !DILocation(line: 2064, column: 2, scope: !19213)
!19228 = distinct !DISubprogram(name: "vQueueAddToRegistry", scope: !1923, file: !1923, line: 2345, type: !19229, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19231)
!19229 = !DISubroutineType(types: !19230)
!19230 = !{null, !1981, !662}
!19231 = !{!19232, !19233, !19234}
!19232 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19228, file: !1923, line: 2345, type: !1981)
!19233 = !DILocalVariable(name: "pcQueueName", arg: 2, scope: !19228, file: !1923, line: 2345, type: !662)
!19234 = !DILocalVariable(name: "ux", scope: !19228, file: !1923, line: 2347, type: !1800)
!19235 = !DILocation(line: 0, scope: !19228)
!19236 = !DILocation(line: 2351, column: 3, scope: !19237)
!19237 = distinct !DILexicalBlock(scope: !19228, file: !1923, line: 2351, column: 3)
!19238 = !DILocation(line: 2353, column: 29, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19240, file: !1923, line: 2353, column: 8)
!19240 = distinct !DILexicalBlock(scope: !19241, file: !1923, line: 2352, column: 3)
!19241 = distinct !DILexicalBlock(scope: !19237, file: !1923, line: 2351, column: 3)
!19242 = !DILocation(line: 2353, column: 41, scope: !19239)
!19243 = !DILocation(line: 2353, column: 8, scope: !19240)
!19244 = !DILocation(line: 2356, column: 38, scope: !19245)
!19245 = distinct !DILexicalBlock(scope: !19239, file: !1923, line: 2354, column: 4)
!19246 = !DILocation(line: 2357, column: 26, scope: !19245)
!19247 = !DILocation(line: 2357, column: 34, scope: !19245)
!19248 = !DILocation(line: 2360, column: 5, scope: !19245)
!19249 = !DILocation(line: 2351, column: 83, scope: !19241)
!19250 = !DILocation(line: 2351, column: 36, scope: !19241)
!19251 = distinct !{!19251, !19236, !19252}
!19252 = !DILocation(line: 2366, column: 3, scope: !19237)
!19253 = !DILocation(line: 2367, column: 2, scope: !19228)
!19254 = distinct !DISubprogram(name: "vQueueWaitForMessageRestricted", scope: !1923, file: !1923, line: 2401, type: !19255, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !19257)
!19255 = !DISubroutineType(types: !19256)
!19256 = !{null, !1981, !1822}
!19257 = !{!19258, !19259, !19260}
!19258 = !DILocalVariable(name: "xQueue", arg: 1, scope: !19254, file: !1923, line: 2401, type: !1981)
!19259 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !19254, file: !1923, line: 2401, type: !1822)
!19260 = !DILocalVariable(name: "pxQueue", scope: !19254, file: !1923, line: 2403, type: !18139)
!19261 = !DILocation(line: 0, scope: !19254)
!19262 = !DILocation(line: 2419, column: 3, scope: !19254)
!19263 = !DILocation(line: 2419, column: 3, scope: !19264)
!19264 = distinct !DILexicalBlock(scope: !19265, file: !1923, line: 2419, column: 3)
!19265 = distinct !DILexicalBlock(scope: !19254, file: !1923, line: 2419, column: 3)
!19266 = !DILocation(line: 2419, column: 3, scope: !19265)
!19267 = !DILocation(line: 2419, column: 3, scope: !19268)
!19268 = distinct !DILexicalBlock(scope: !19264, file: !1923, line: 2419, column: 3)
!19269 = !DILocation(line: 2419, column: 3, scope: !19270)
!19270 = distinct !DILexicalBlock(scope: !19265, file: !1923, line: 2419, column: 3)
!19271 = !DILocation(line: 2419, column: 3, scope: !19272)
!19272 = distinct !DILexicalBlock(scope: !19270, file: !1923, line: 2419, column: 3)
!19273 = !DILocation(line: 2420, column: 16, scope: !19274)
!19274 = distinct !DILexicalBlock(scope: !19254, file: !1923, line: 2420, column: 7)
!19275 = !DILocation(line: 2420, column: 34, scope: !19274)
!19276 = !DILocation(line: 2420, column: 7, scope: !19254)
!19277 = !DILocation(line: 2423, column: 49, scope: !19278)
!19278 = distinct !DILexicalBlock(scope: !19274, file: !1923, line: 2421, column: 3)
!19279 = !DILocation(line: 2423, column: 4, scope: !19278)
!19280 = !DILocation(line: 2424, column: 3, scope: !19278)
!19281 = !DILocation(line: 2403, column: 28, scope: !19254)
!19282 = !DILocation(line: 2429, column: 3, scope: !19254)
!19283 = !DILocation(line: 2430, column: 2, scope: !19254)
!19284 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !1986, file: !1986, line: 222, type: !19285, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19287)
!19285 = !DISubroutineType(types: !19286)
!19286 = !{!1804, !1804, !15871, !51}
!19287 = !{!19288, !19289, !19290}
!19288 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !19284, file: !1986, line: 222, type: !1804)
!19289 = !DILocalVariable(name: "pxCode", arg: 2, scope: !19284, file: !1986, line: 222, type: !15871)
!19290 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !19284, file: !1986, line: 222, type: !51)
!19291 = !DILocation(line: 0, scope: !19284)
!19292 = !DILocation(line: 229, column: 14, scope: !19284)
!19293 = !DILocation(line: 231, column: 16, scope: !19284)
!19294 = !DILocation(line: 232, column: 14, scope: !19284)
!19295 = !DILocation(line: 233, column: 18, scope: !19284)
!19296 = !DILocation(line: 233, column: 16, scope: !19284)
!19297 = !DILocation(line: 234, column: 14, scope: !19284)
!19298 = !DILocation(line: 235, column: 16, scope: !19284)
!19299 = !DILocation(line: 238, column: 15, scope: !19284)
!19300 = !DILocation(line: 239, column: 18, scope: !19284)
!19301 = !DILocation(line: 239, column: 16, scope: !19284)
!19302 = !DILocation(line: 243, column: 14, scope: !19284)
!19303 = !DILocation(line: 244, column: 16, scope: !19284)
!19304 = !DILocation(line: 246, column: 15, scope: !19284)
!19305 = !DILocation(line: 248, column: 2, scope: !19284)
!19306 = distinct !DISubprogram(name: "prvTaskExitError", scope: !1986, file: !1986, line: 252, type: !154, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19307 = !DILocation(line: 260, column: 2, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19306, file: !1986, line: 260, column: 2)
!19309 = !DILocation(line: 260, column: 2, scope: !19306)
!19310 = !DILocation(line: 260, column: 2, scope: !19311)
!19311 = distinct !DILexicalBlock(scope: !19308, file: !1986, line: 260, column: 2)
!19312 = !DILocation(line: 215, column: 2, scope: !19313, inlinedAt: !19316)
!19313 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !1801, file: !1801, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19314)
!19314 = !{!19315}
!19315 = !DILocalVariable(name: "ulNewBASEPRI", scope: !19313, file: !1801, line: 213, type: !61)
!19316 = distinct !DILocation(line: 261, column: 2, scope: !19306)
!19317 = !{i64 657654, i64 657687, i64 657723, i64 657750}
!19318 = !DILocation(line: 0, scope: !19313, inlinedAt: !19316)
!19319 = !DILocation(line: 262, column: 2, scope: !19306)
!19320 = !DILocation(line: 262, column: 2, scope: !19321)
!19321 = distinct !DILexicalBlock(scope: !19322, file: !1986, line: 262, column: 2)
!19322 = distinct !DILexicalBlock(scope: !19306, file: !1986, line: 262, column: 2)
!19323 = distinct !{!19323, !19324, !19325}
!19324 = !DILocation(line: 262, column: 2, scope: !19322)
!19325 = !DILocation(line: 262, column: 11, scope: !19322)
!19326 = distinct !DISubprogram(name: "vPortCurrentTaskStackOverflowCheck", scope: !1986, file: !1986, line: 268, type: !154, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19327)
!19327 = !{!19328, !19329}
!19328 = !DILocalVariable(name: "stack_start_address", scope: !19326, file: !1986, line: 270, type: !61)
!19329 = !DILocalVariable(name: "ret", scope: !19326, file: !1986, line: 271, type: !355)
!19330 = !DILocation(line: 273, column: 24, scope: !19326)
!19331 = !DILocation(line: 0, scope: !19326)
!19332 = !DILocation(line: 276, column: 8, scope: !19326)
!19333 = !DILocation(line: 281, column: 1, scope: !19326)
!19334 = distinct !DISubprogram(name: "SVC_Handler", scope: !1986, file: !1986, line: 287, type: !154, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19335 = !DILocation(line: 289, column: 2, scope: !19334)
!19336 = !{i64 11674, i64 11700, i64 11789, i64 11939, i64 11982, i64 12128, i64 12194, i64 12283, i64 12374, i64 12519, i64 12585, i64 12607, i64 12635, i64 12666, i64 12690, i64 12709, i64 12734}
!19337 = !DILocation(line: 312, column: 1, scope: !19334)
!19338 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !1986, file: !1986, line: 335, type: !16271, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19339)
!19339 = !{!19340, !19342, !19344}
!19340 = !DILocalVariable(name: "ulOriginalPriority", scope: !19341, file: !1986, line: 343, type: !60)
!19341 = distinct !DILexicalBlock(scope: !19338, file: !1986, line: 342, column: 2)
!19342 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !19341, file: !1986, line: 344, type: !19343)
!19343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!19344 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !19341, file: !1986, line: 345, type: !53)
!19345 = !DILocation(line: 343, column: 3, scope: !19341)
!19346 = !DILocation(line: 343, column: 21, scope: !19341)
!19347 = !DILocation(line: 0, scope: !19341)
!19348 = !DILocation(line: 345, column: 3, scope: !19341)
!19349 = !DILocation(line: 345, column: 20, scope: !19341)
!19350 = !DILocation(line: 353, column: 24, scope: !19341)
!19351 = !DILocation(line: 353, column: 22, scope: !19341)
!19352 = !DILocation(line: 357, column: 33, scope: !19341)
!19353 = !DILocation(line: 360, column: 24, scope: !19341)
!19354 = !DILocation(line: 360, column: 22, scope: !19341)
!19355 = !DILocation(line: 363, column: 65, scope: !19341)
!19356 = !DILocation(line: 363, column: 63, scope: !19341)
!19357 = !DILocation(line: 363, column: 24, scope: !19341)
!19358 = !DILocation(line: 368, column: 12, scope: !19341)
!19359 = !DILocation(line: 368, column: 55, scope: !19341)
!19360 = !DILocation(line: 368, column: 3, scope: !19341)
!19361 = !DILocation(line: 370, column: 22, scope: !19362)
!19362 = distinct !DILexicalBlock(scope: !19341, file: !1986, line: 369, column: 3)
!19363 = !DILocation(line: 371, column: 23, scope: !19362)
!19364 = distinct !{!19364, !19360, !19365}
!19365 = !DILocation(line: 372, column: 3, scope: !19341)
!19366 = !DILocation(line: 376, column: 22, scope: !19341)
!19367 = !DILocation(line: 377, column: 22, scope: !19341)
!19368 = !DILocation(line: 381, column: 35, scope: !19341)
!19369 = !DILocation(line: 381, column: 33, scope: !19341)
!19370 = !DILocation(line: 382, column: 2, scope: !19338)
!19371 = !DILocation(line: 386, column: 23, scope: !19338)
!19372 = !DILocation(line: 388, column: 23, scope: !19338)
!19373 = !DILocation(line: 392, column: 2, scope: !19338)
!19374 = !DILocation(line: 395, column: 20, scope: !19338)
!19375 = !DILocation(line: 398, column: 2, scope: !19338)
!19376 = !DILocation(line: 401, column: 17, scope: !19338)
!19377 = !DILocation(line: 404, column: 2, scope: !19338)
!19378 = !DILocation(line: 410, column: 2, scope: !19338)
!19379 = !DILocation(line: 413, column: 2, scope: !19338)
!19380 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !1986, file: !1986, line: 723, type: !154, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19381 = !DILocation(line: 735, column: 32, scope: !19380)
!19382 = !DILocation(line: 735, column: 55, scope: !19380)
!19383 = !DILocation(line: 735, column: 78, scope: !19380)
!19384 = !DILocation(line: 735, column: 28, scope: !19380)
!19385 = !DILocation(line: 736, column: 28, scope: !19380)
!19386 = !DILocation(line: 737, column: 1, scope: !19380)
!19387 = distinct !DISubprogram(name: "vPortEnableVFP", scope: !1986, file: !1986, line: 741, type: !154, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19388 = !DILocation(line: 743, column: 2, scope: !19387)
!19389 = !{i64 28402, i64 28478, i64 28502, i64 28517, i64 28609, i64 28633}
!19390 = !DILocation(line: 752, column: 1, scope: !19387)
!19391 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !1986, file: !1986, line: 315, type: !154, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19392 = !DILocation(line: 317, column: 2, scope: !19391)
!19393 = !{i64 12920, i64 13009, i64 13036, i64 13063, i64 13138, i64 13194, i64 13216, i64 13235, i64 13254, i64 13314}
!19394 = !DILocation(line: 329, column: 1, scope: !19391)
!19395 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !1986, file: !1986, line: 417, type: !154, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19396 = !DILocation(line: 421, column: 2, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19395, file: !1986, line: 421, column: 2)
!19398 = !DILocation(line: 421, column: 2, scope: !19395)
!19399 = !DILocation(line: 421, column: 2, scope: !19400)
!19400 = distinct !DILexicalBlock(scope: !19397, file: !1986, line: 421, column: 2)
!19401 = !DILocation(line: 422, column: 1, scope: !19395)
!19402 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !1986, file: !1986, line: 425, type: !154, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19403 = !DILocation(line: 215, column: 2, scope: !19313, inlinedAt: !19404)
!19404 = distinct !DILocation(line: 427, column: 2, scope: !19402)
!19405 = !DILocation(line: 0, scope: !19313, inlinedAt: !19404)
!19406 = !DILocation(line: 428, column: 19, scope: !19402)
!19407 = !DILocation(line: 435, column: 24, scope: !19408)
!19408 = distinct !DILexicalBlock(scope: !19402, file: !1986, line: 435, column: 6)
!19409 = !DILocation(line: 435, column: 6, scope: !19402)
!19410 = !DILocation(line: 437, column: 3, scope: !19411)
!19411 = distinct !DILexicalBlock(scope: !19412, file: !1986, line: 437, column: 3)
!19412 = distinct !DILexicalBlock(scope: !19408, file: !1986, line: 436, column: 2)
!19413 = !DILocation(line: 437, column: 3, scope: !19412)
!19414 = !DILocation(line: 437, column: 3, scope: !19415)
!19415 = distinct !DILexicalBlock(scope: !19411, file: !1986, line: 437, column: 3)
!19416 = !DILocation(line: 439, column: 1, scope: !19402)
!19417 = distinct !DISubprogram(name: "vPortExitCritical", scope: !1986, file: !1986, line: 442, type: !154, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19418 = !DILocation(line: 444, column: 2, scope: !19419)
!19419 = distinct !DILexicalBlock(scope: !19417, file: !1986, line: 444, column: 2)
!19420 = !DILocation(line: 444, column: 2, scope: !19417)
!19421 = !DILocation(line: 444, column: 2, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19419, file: !1986, line: 444, column: 2)
!19423 = !DILocation(line: 445, column: 19, scope: !19417)
!19424 = !DILocation(line: 446, column: 24, scope: !19425)
!19425 = distinct !DILexicalBlock(scope: !19417, file: !1986, line: 446, column: 6)
!19426 = !DILocation(line: 446, column: 6, scope: !19417)
!19427 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !19428, file: !1801, line: 247, type: !61)
!19428 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1801, file: !1801, line: 247, type: !4770, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19429)
!19429 = !{!19427}
!19430 = !DILocation(line: 0, scope: !19428, inlinedAt: !19431)
!19431 = distinct !DILocation(line: 448, column: 3, scope: !19432)
!19432 = distinct !DILexicalBlock(scope: !19425, file: !1986, line: 447, column: 2)
!19433 = !DILocation(line: 249, column: 2, scope: !19428, inlinedAt: !19431)
!19434 = !{i64 658575}
!19435 = !DILocation(line: 449, column: 2, scope: !19432)
!19436 = !DILocation(line: 450, column: 1, scope: !19417)
!19437 = distinct !DISubprogram(name: "PendSV_Handler", scope: !1986, file: !1986, line: 469, type: !154, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !2550)
!19438 = !DILocation(line: 473, column: 2, scope: !19437)
!19439 = !{i64 18243, i64 18266, i64 18289, i64 18376, i64 18399, i64 18421, i64 18446, i64 18465, i64 18481, i64 18559, i64 18584, i64 18600, i64 18701, i64 18721, i64 18755, i64 18771, i64 18836, i64 18852, i64 18943, i64 18959, i64 18987, i64 19012, i64 19040, i64 19059, i64 19080, i64 19258, i64 19436, i64 19460, i64 19488, i64 19516, i64 19532, i64 19620, i64 19645, i64 19661, i64 19725, i64 19741, i64 19849, i64 19869, i64 19903, i64 19919, i64 19944, i64 19963, i64 20148, i64 20164, i64 20185, i64 20201, i64 20223}
!19440 = !DILocation(line: 537, column: 1, scope: !19437)
!19441 = distinct !DISubprogram(name: "SysTick_Handler", scope: !1986, file: !1986, line: 540, type: !154, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19442)
!19442 = !{!19443}
!19443 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !19441, file: !1986, line: 547, type: !1800)
!19444 = !DILocation(line: 231, column: 2, scope: !19445, inlinedAt: !19449)
!19445 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1801, file: !1801, line: 227, type: !2531, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19446)
!19446 = !{!19447, !19448}
!19447 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !19445, file: !1801, line: 229, type: !61)
!19448 = !DILocalVariable(name: "ulNewBASEPRI", scope: !19445, file: !1801, line: 229, type: !61)
!19449 = distinct !DILocation(line: 548, column: 27, scope: !19441)
!19450 = !{i64 658042, i64 658079, i64 658111, i64 658147, i64 658174}
!19451 = !DILocation(line: 0, scope: !19445, inlinedAt: !19449)
!19452 = !DILocation(line: 0, scope: !19441)
!19453 = !DILocation(line: 552, column: 3, scope: !19454)
!19454 = distinct !DILexicalBlock(scope: !19441, file: !1986, line: 549, column: 2)
!19455 = !DILocation(line: 555, column: 7, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19454, file: !1986, line: 555, column: 7)
!19457 = !DILocation(line: 555, column: 28, scope: !19456)
!19458 = !DILocation(line: 555, column: 7, scope: !19454)
!19459 = !DILocation(line: 559, column: 26, scope: !19460)
!19460 = distinct !DILexicalBlock(scope: !19456, file: !1986, line: 556, column: 3)
!19461 = !DILocation(line: 560, column: 3, scope: !19460)
!19462 = !DILocation(line: 0, scope: !19428, inlinedAt: !19463)
!19463 = distinct !DILocation(line: 562, column: 2, scope: !19441)
!19464 = !DILocation(line: 249, column: 2, scope: !19428, inlinedAt: !19463)
!19465 = !DILocation(line: 564, column: 1, scope: !19441)
!19466 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !1986, file: !1986, line: 757, type: !154, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1985, retainedNodes: !19467)
!19467 = !{!19468, !19469}
!19468 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !19466, file: !1986, line: 759, type: !61)
!19469 = !DILocalVariable(name: "ucCurrentPriority", scope: !19466, file: !1986, line: 760, type: !54)
!19470 = !DILocation(line: 763, column: 3, scope: !19466)
!19471 = !{i64 28942}
!19472 = !DILocation(line: 0, scope: !19466)
!19473 = !DILocation(line: 766, column: 26, scope: !19474)
!19474 = distinct !DILexicalBlock(scope: !19466, file: !1986, line: 766, column: 7)
!19475 = !DILocation(line: 766, column: 7, scope: !19466)
!19476 = !DILocation(line: 769, column: 24, scope: !19477)
!19477 = distinct !DILexicalBlock(scope: !19474, file: !1986, line: 767, column: 3)
!19478 = !DILocation(line: 794, column: 4, scope: !19479)
!19479 = distinct !DILexicalBlock(scope: !19477, file: !1986, line: 794, column: 4)
!19480 = !DILocation(line: 794, column: 4, scope: !19477)
!19481 = !DILocation(line: 794, column: 4, scope: !19482)
!19482 = distinct !DILexicalBlock(scope: !19479, file: !1986, line: 794, column: 4)
!19483 = !DILocation(line: 810, column: 3, scope: !19484)
!19484 = distinct !DILexicalBlock(scope: !19466, file: !1986, line: 810, column: 3)
!19485 = !DILocation(line: 810, column: 3, scope: !19466)
!19486 = !DILocation(line: 810, column: 3, scope: !19487)
!19487 = distinct !DILexicalBlock(scope: !19484, file: !1986, line: 810, column: 3)
!19488 = !DILocation(line: 811, column: 2, scope: !19466)
!19489 = distinct !DISubprogram(name: "pvPortMalloc", scope: !2009, file: !2009, line: 162, type: !19490, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19492)
!19490 = !DISubroutineType(types: !19491)
!19491 = !{!51, !1857}
!19492 = !{!19493, !19494, !19495, !19496, !19497}
!19493 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !19489, file: !2009, line: 162, type: !1857)
!19494 = !DILocalVariable(name: "pxBlock", scope: !19489, file: !2009, line: 164, type: !2011)
!19495 = !DILocalVariable(name: "pxPreviousBlock", scope: !19489, file: !2009, line: 164, type: !2011)
!19496 = !DILocalVariable(name: "pxNewBlockLink", scope: !19489, file: !2009, line: 164, type: !2011)
!19497 = !DILocalVariable(name: "pvReturn", scope: !19489, file: !2009, line: 165, type: !51)
!19498 = !DILocation(line: 0, scope: !19489)
!19499 = !DILocation(line: 178, column: 2, scope: !19489)
!19500 = !DILocation(line: 182, column: 7, scope: !19501)
!19501 = distinct !DILexicalBlock(scope: !19502, file: !2009, line: 182, column: 7)
!19502 = distinct !DILexicalBlock(scope: !19489, file: !2009, line: 179, column: 2)
!19503 = !DILocation(line: 182, column: 13, scope: !19501)
!19504 = !DILocation(line: 182, column: 7, scope: !19502)
!19505 = !DILocation(line: 184, column: 4, scope: !19506)
!19506 = distinct !DILexicalBlock(scope: !19501, file: !2009, line: 183, column: 3)
!19507 = !DILocation(line: 185, column: 3, scope: !19506)
!19508 = !DILocation(line: 195, column: 23, scope: !19509)
!19509 = distinct !DILexicalBlock(scope: !19502, file: !2009, line: 195, column: 7)
!19510 = !DILocation(line: 195, column: 21, scope: !19509)
!19511 = !DILocation(line: 195, column: 44, scope: !19509)
!19512 = !DILocation(line: 195, column: 7, scope: !19502)
!19513 = !DILocation(line: 201, column: 17, scope: !19514)
!19514 = distinct !DILexicalBlock(scope: !19515, file: !2009, line: 200, column: 4)
!19515 = distinct !DILexicalBlock(scope: !19516, file: !2009, line: 199, column: 8)
!19516 = distinct !DILexicalBlock(scope: !19509, file: !2009, line: 196, column: 3)
!19517 = !DILocation(line: 205, column: 23, scope: !19518)
!19518 = distinct !DILexicalBlock(scope: !19514, file: !2009, line: 205, column: 9)
!19519 = !DILocation(line: 205, column: 51, scope: !19518)
!19520 = !DILocation(line: 205, column: 9, scope: !19514)
!19521 = !DILocation(line: 221, column: 22, scope: !19522)
!19522 = distinct !DILexicalBlock(scope: !19516, file: !2009, line: 221, column: 8)
!19523 = !DILocation(line: 221, column: 28, scope: !19522)
!19524 = !DILocation(line: 226, column: 22, scope: !19525)
!19525 = distinct !DILexicalBlock(scope: !19522, file: !2009, line: 222, column: 4)
!19526 = !DILocation(line: 227, column: 23, scope: !19525)
!19527 = !DILocation(line: 227, column: 34, scope: !19525)
!19528 = !DILocation(line: 227, column: 50, scope: !19525)
!19529 = !DILocation(line: 227, column: 64, scope: !19525)
!19530 = !DILocation(line: 227, column: 80, scope: !19525)
!19531 = !DILocation(line: 227, column: 5, scope: !19525)
!19532 = distinct !{!19532, !19531, !19533}
!19533 = !DILocation(line: 231, column: 5, scope: !19525)
!19534 = !DILocation(line: 0, scope: !19525)
!19535 = !DILocation(line: 235, column: 20, scope: !19536)
!19536 = distinct !DILexicalBlock(scope: !19525, file: !2009, line: 235, column: 9)
!19537 = !DILocation(line: 235, column: 17, scope: !19536)
!19538 = !DILocation(line: 235, column: 9, scope: !19525)
!19539 = !DILocation(line: 239, column: 63, scope: !19540)
!19540 = distinct !DILexicalBlock(scope: !19536, file: !2009, line: 236, column: 5)
!19541 = !DILocation(line: 239, column: 81, scope: !19540)
!19542 = !DILocation(line: 246, column: 50, scope: !19540)
!19543 = !DILocation(line: 246, column: 39, scope: !19540)
!19544 = !DILocation(line: 250, column: 21, scope: !19545)
!19545 = distinct !DILexicalBlock(scope: !19540, file: !2009, line: 250, column: 10)
!19546 = !DILocation(line: 250, column: 32, scope: !19545)
!19547 = !DILocation(line: 250, column: 48, scope: !19545)
!19548 = !DILocation(line: 250, column: 10, scope: !19540)
!19549 = !DILocation(line: 256, column: 39, scope: !19550)
!19550 = distinct !DILexicalBlock(scope: !19545, file: !2009, line: 251, column: 6)
!19551 = !DILocation(line: 256, column: 63, scope: !19550)
!19552 = !DILocation(line: 256, column: 24, scope: !19550)
!19553 = !DILocation(line: 257, column: 7, scope: !19554)
!19554 = distinct !DILexicalBlock(scope: !19550, file: !2009, line: 257, column: 7)
!19555 = !DILocation(line: 257, column: 7, scope: !19550)
!19556 = !DILocation(line: 257, column: 7, scope: !19557)
!19557 = distinct !DILexicalBlock(scope: !19554, file: !2009, line: 257, column: 7)
!19558 = !DILocation(line: 261, column: 45, scope: !19550)
!19559 = !DILocation(line: 261, column: 56, scope: !19550)
!19560 = !DILocation(line: 261, column: 23, scope: !19550)
!19561 = !DILocation(line: 261, column: 34, scope: !19550)
!19562 = !DILocation(line: 262, column: 27, scope: !19550)
!19563 = !DILocation(line: 265, column: 7, scope: !19550)
!19564 = !DILocation(line: 272, column: 38, scope: !19540)
!19565 = !DILocation(line: 266, column: 6, scope: !19550)
!19566 = !DILocation(line: 272, column: 26, scope: !19540)
!19567 = !DILocation(line: 274, column: 32, scope: !19568)
!19568 = distinct !DILexicalBlock(scope: !19540, file: !2009, line: 274, column: 10)
!19569 = !DILocation(line: 274, column: 30, scope: !19568)
!19570 = !DILocation(line: 274, column: 10, scope: !19540)
!19571 = !DILocation(line: 276, column: 38, scope: !19572)
!19572 = distinct !DILexicalBlock(scope: !19568, file: !2009, line: 275, column: 6)
!19573 = !DILocation(line: 277, column: 6, scope: !19572)
!19574 = !DILocation(line: 285, column: 29, scope: !19540)
!19575 = !DILocation(line: 285, column: 26, scope: !19540)
!19576 = !DILocation(line: 286, column: 31, scope: !19540)
!19577 = !DILocation(line: 287, column: 5, scope: !19540)
!19578 = !DILocation(line: 305, column: 11, scope: !19489)
!19579 = !DILocation(line: 321, column: 2, scope: !19580)
!19580 = distinct !DILexicalBlock(scope: !19489, file: !2009, line: 321, column: 2)
!19581 = !DILocation(line: 321, column: 2, scope: !19489)
!19582 = !DILocation(line: 321, column: 2, scope: !19583)
!19583 = distinct !DILexicalBlock(scope: !19580, file: !2009, line: 321, column: 2)
!19584 = !DILocation(line: 322, column: 2, scope: !19489)
!19585 = distinct !DISubprogram(name: "prvHeapInit", scope: !2009, file: !2009, line: 392, type: !154, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19586)
!19586 = !{!19587, !19588, !19589, !19590}
!19587 = !DILocalVariable(name: "pxFirstFreeBlock", scope: !19585, file: !2009, line: 394, type: !2011)
!19588 = !DILocalVariable(name: "pucAlignedHeap", scope: !19585, file: !2009, line: 395, type: !500)
!19589 = !DILocalVariable(name: "ulAddress", scope: !19585, file: !2009, line: 396, type: !61)
!19590 = !DILocalVariable(name: "xTotalHeapSize", scope: !19585, file: !2009, line: 397, type: !1857)
!19591 = !DILocation(line: 0, scope: !19585)
!19592 = !DILocation(line: 412, column: 25, scope: !19585)
!19593 = !DILocation(line: 413, column: 20, scope: !19585)
!19594 = !DILocation(line: 420, column: 8, scope: !19585)
!19595 = !DILocation(line: 421, column: 20, scope: !19585)
!19596 = !DILocation(line: 422, column: 25, scope: !19585)
!19597 = !DILocation(line: 427, column: 31, scope: !19585)
!19598 = !DILocation(line: 428, column: 38, scope: !19585)
!19599 = !DILocation(line: 428, column: 36, scope: !19585)
!19600 = !DILocation(line: 434, column: 33, scope: !19585)
!19601 = !DILocation(line: 435, column: 22, scope: !19585)
!19602 = !DILocation(line: 438, column: 21, scope: !19585)
!19603 = !DILocation(line: 439, column: 1, scope: !19585)
!19604 = distinct !DISubprogram(name: "prvInsertBlockIntoFreeList", scope: !2009, file: !2009, line: 442, type: !19605, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19607)
!19605 = !DISubroutineType(types: !19606)
!19606 = !{null, !2011}
!19607 = !{!19608, !19609, !19610}
!19608 = !DILocalVariable(name: "pxBlockToInsert", arg: 1, scope: !19604, file: !2009, line: 442, type: !2011)
!19609 = !DILocalVariable(name: "pxIterator", scope: !19604, file: !2009, line: 444, type: !2011)
!19610 = !DILocalVariable(name: "puc", scope: !19604, file: !2009, line: 445, type: !500)
!19611 = !DILocation(line: 0, scope: !19604)
!19612 = !DILocation(line: 449, column: 7, scope: !19613)
!19613 = distinct !DILexicalBlock(scope: !19604, file: !2009, line: 449, column: 2)
!19614 = !DILocation(line: 0, scope: !19613)
!19615 = !DILocation(line: 449, column: 41, scope: !19616)
!19616 = distinct !DILexicalBlock(scope: !19613, file: !2009, line: 449, column: 2)
!19617 = !DILocation(line: 449, column: 57, scope: !19616)
!19618 = !DILocation(line: 449, column: 2, scope: !19613)
!19619 = distinct !{!19619, !19618, !19620}
!19620 = !DILocation(line: 452, column: 2, scope: !19613)
!19621 = !DILocation(line: 456, column: 8, scope: !19604)
!19622 = !DILocation(line: 457, column: 26, scope: !19623)
!19623 = distinct !DILexicalBlock(scope: !19604, file: !2009, line: 457, column: 6)
!19624 = !DILocation(line: 457, column: 12, scope: !19623)
!19625 = !DILocation(line: 457, column: 42, scope: !19623)
!19626 = !DILocation(line: 457, column: 39, scope: !19623)
!19627 = !DILocation(line: 457, column: 6, scope: !19604)
!19628 = !DILocation(line: 459, column: 26, scope: !19629)
!19629 = distinct !DILexicalBlock(scope: !19623, file: !2009, line: 458, column: 2)
!19630 = !DILocation(line: 461, column: 2, scope: !19629)
!19631 = !DILocation(line: 469, column: 8, scope: !19604)
!19632 = !DILocation(line: 470, column: 31, scope: !19633)
!19633 = distinct !DILexicalBlock(scope: !19604, file: !2009, line: 470, column: 6)
!19634 = !DILocation(line: 470, column: 12, scope: !19633)
!19635 = !DILocation(line: 470, column: 47, scope: !19633)
!19636 = !DILocation(line: 470, column: 44, scope: !19633)
!19637 = !DILocation(line: 470, column: 6, scope: !19604)
!19638 = !DILocation(line: 475, column: 64, scope: !19639)
!19639 = distinct !DILexicalBlock(scope: !19640, file: !2009, line: 473, column: 3)
!19640 = distinct !DILexicalBlock(scope: !19641, file: !2009, line: 472, column: 7)
!19641 = distinct !DILexicalBlock(scope: !19633, file: !2009, line: 471, column: 2)
!19642 = !DILocation(line: 475, column: 32, scope: !19639)
!19643 = !DILocation(line: 476, column: 51, scope: !19639)
!19644 = !DILocation(line: 476, column: 68, scope: !19639)
!19645 = !DILocation(line: 477, column: 3, scope: !19639)
!19646 = !DILocation(line: 0, scope: !19633)
!19647 = !DILocation(line: 492, column: 17, scope: !19648)
!19648 = distinct !DILexicalBlock(scope: !19604, file: !2009, line: 492, column: 6)
!19649 = !DILocation(line: 492, column: 6, scope: !19604)
!19650 = !DILocation(line: 494, column: 31, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19648, file: !2009, line: 493, column: 2)
!19652 = !DILocation(line: 495, column: 2, scope: !19651)
!19653 = !DILocation(line: 500, column: 1, scope: !19604)
!19654 = distinct !DISubprogram(name: "vPortFree", scope: !2009, file: !2009, line: 326, type: !945, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19655)
!19655 = !{!19656, !19657, !19658}
!19656 = !DILocalVariable(name: "pv", arg: 1, scope: !19654, file: !2009, line: 326, type: !51)
!19657 = !DILocalVariable(name: "puc", scope: !19654, file: !2009, line: 328, type: !500)
!19658 = !DILocalVariable(name: "pxLink", scope: !19654, file: !2009, line: 329, type: !2011)
!19659 = !DILocation(line: 0, scope: !19654)
!19660 = !DILocation(line: 331, column: 9, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !19654, file: !2009, line: 331, column: 6)
!19662 = !DILocation(line: 331, column: 6, scope: !19654)
!19663 = !DILocation(line: 335, column: 7, scope: !19664)
!19664 = distinct !DILexicalBlock(scope: !19661, file: !2009, line: 332, column: 2)
!19665 = !DILocation(line: 338, column: 12, scope: !19664)
!19666 = !DILocation(line: 341, column: 3, scope: !19667)
!19667 = distinct !DILexicalBlock(scope: !19664, file: !2009, line: 341, column: 3)
!19668 = !DILocation(line: 341, column: 3, scope: !19664)
!19669 = !DILocation(line: 341, column: 3, scope: !19670)
!19670 = distinct !DILexicalBlock(scope: !19667, file: !2009, line: 341, column: 3)
!19671 = !DILocation(line: 342, column: 3, scope: !19672)
!19672 = distinct !DILexicalBlock(scope: !19664, file: !2009, line: 342, column: 3)
!19673 = !DILocation(line: 342, column: 3, scope: !19664)
!19674 = !DILocation(line: 342, column: 3, scope: !19675)
!19675 = distinct !DILexicalBlock(scope: !19672, file: !2009, line: 342, column: 3)
!19676 = !DILocation(line: 344, column: 17, scope: !19677)
!19677 = distinct !DILexicalBlock(scope: !19664, file: !2009, line: 344, column: 7)
!19678 = !DILocation(line: 344, column: 30, scope: !19677)
!19679 = !DILocation(line: 344, column: 28, scope: !19677)
!19680 = !DILocation(line: 344, column: 51, scope: !19677)
!19681 = !DILocation(line: 344, column: 7, scope: !19664)
!19682 = !DILocation(line: 346, column: 16, scope: !19683)
!19683 = distinct !DILexicalBlock(scope: !19684, file: !2009, line: 346, column: 8)
!19684 = distinct !DILexicalBlock(scope: !19677, file: !2009, line: 345, column: 3)
!19685 = !DILocation(line: 346, column: 32, scope: !19683)
!19686 = !DILocation(line: 346, column: 8, scope: !19684)
!19687 = !DILocation(line: 350, column: 27, scope: !19688)
!19688 = distinct !DILexicalBlock(scope: !19683, file: !2009, line: 347, column: 4)
!19689 = !DILocation(line: 350, column: 24, scope: !19688)
!19690 = !DILocation(line: 352, column: 5, scope: !19688)
!19691 = !DILocation(line: 355, column: 37, scope: !19692)
!19692 = distinct !DILexicalBlock(scope: !19688, file: !2009, line: 353, column: 5)
!19693 = !DILocation(line: 355, column: 26, scope: !19692)
!19694 = !DILocation(line: 357, column: 6, scope: !19692)
!19695 = !DILocation(line: 359, column: 14, scope: !19688)
!19696 = !DILocation(line: 360, column: 4, scope: !19688)
!19697 = !DILocation(line: 371, column: 1, scope: !19654)
!19698 = distinct !DISubprogram(name: "xPortGetFreeHeapSize", scope: !2009, file: !2009, line: 374, type: !19699, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !2550)
!19699 = !DISubroutineType(types: !19700)
!19700 = !{!1857}
!19701 = !DILocation(line: 376, column: 9, scope: !19698)
!19702 = !DILocation(line: 376, column: 2, scope: !19698)
!19703 = distinct !DISubprogram(name: "xPortGetMinimumEverFreeHeapSize", scope: !2009, file: !2009, line: 380, type: !19699, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !2550)
!19704 = !DILocation(line: 382, column: 9, scope: !19703)
!19705 = !DILocation(line: 382, column: 2, scope: !19703)
!19706 = distinct !DISubprogram(name: "vPortInitialiseBlocks", scope: !2009, file: !2009, line: 386, type: !154, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !2550)
!19707 = !DILocation(line: 389, column: 1, scope: !19706)
!19708 = distinct !DISubprogram(name: "pvPortCalloc", scope: !2009, file: !2009, line: 505, type: !19709, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19711)
!19709 = !DISubroutineType(types: !19710)
!19710 = !{!51, !1857, !1857}
!19711 = !{!19712, !19713, !19714}
!19712 = !DILocalVariable(name: "nmemb", arg: 1, scope: !19708, file: !2009, line: 505, type: !1857)
!19713 = !DILocalVariable(name: "size", arg: 2, scope: !19708, file: !2009, line: 505, type: !1857)
!19714 = !DILocalVariable(name: "pvReturn", scope: !19708, file: !2009, line: 507, type: !51)
!19715 = !DILocation(line: 0, scope: !19708)
!19716 = !DILocation(line: 516, column: 35, scope: !19708)
!19717 = !DILocation(line: 516, column: 16, scope: !19708)
!19718 = !DILocation(line: 518, column: 9, scope: !19719)
!19719 = distinct !DILexicalBlock(scope: !19708, file: !2009, line: 518, column: 9)
!19720 = !DILocation(line: 518, column: 9, scope: !19708)
!19721 = !DILocation(line: 520, column: 9, scope: !19722)
!19722 = distinct !DILexicalBlock(scope: !19719, file: !2009, line: 519, column: 5)
!19723 = !DILocation(line: 521, column: 5, scope: !19722)
!19724 = !DILocation(line: 523, column: 5, scope: !19708)
!19725 = distinct !DISubprogram(name: "pvPortRealloc", scope: !2009, file: !2009, line: 528, type: !19726, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19728)
!19726 = !DISubroutineType(types: !19727)
!19727 = !{!51, !51, !1857}
!19728 = !{!19729, !19730, !19731, !19732, !19733, !19734}
!19729 = !DILocalVariable(name: "pv", arg: 1, scope: !19725, file: !2009, line: 528, type: !51)
!19730 = !DILocalVariable(name: "size", arg: 2, scope: !19725, file: !2009, line: 528, type: !1857)
!19731 = !DILocalVariable(name: "pvReturn", scope: !19725, file: !2009, line: 530, type: !51)
!19732 = !DILocalVariable(name: "xBlockSize", scope: !19725, file: !2009, line: 531, type: !1857)
!19733 = !DILocalVariable(name: "puc", scope: !19725, file: !2009, line: 532, type: !500)
!19734 = !DILocalVariable(name: "pxLink", scope: !19725, file: !2009, line: 533, type: !2011)
!19735 = !DILocation(line: 0, scope: !19725)
!19736 = !DILocation(line: 535, column: 16, scope: !19725)
!19737 = !DILocation(line: 537, column: 12, scope: !19738)
!19738 = distinct !DILexicalBlock(scope: !19725, file: !2009, line: 537, column: 9)
!19739 = !DILocation(line: 537, column: 9, scope: !19725)
!19740 = !DILocation(line: 540, column: 13, scope: !19741)
!19741 = distinct !DILexicalBlock(scope: !19738, file: !2009, line: 538, column: 5)
!19742 = !DILocation(line: 546, column: 9, scope: !19743)
!19743 = distinct !DILexicalBlock(scope: !19741, file: !2009, line: 546, column: 9)
!19744 = !DILocation(line: 546, column: 9, scope: !19741)
!19745 = !DILocation(line: 546, column: 9, scope: !19746)
!19746 = distinct !DILexicalBlock(scope: !19743, file: !2009, line: 546, column: 9)
!19747 = !DILocation(line: 547, column: 9, scope: !19748)
!19748 = distinct !DILexicalBlock(scope: !19741, file: !2009, line: 547, column: 9)
!19749 = !DILocation(line: 547, column: 9, scope: !19741)
!19750 = !DILocation(line: 547, column: 9, scope: !19751)
!19751 = distinct !DILexicalBlock(scope: !19748, file: !2009, line: 547, column: 9)
!19752 = !DILocation(line: 550, column: 31, scope: !19741)
!19753 = !DILocation(line: 550, column: 45, scope: !19741)
!19754 = !DILocation(line: 550, column: 44, scope: !19741)
!19755 = !DILocation(line: 550, column: 42, scope: !19741)
!19756 = !DILocation(line: 553, column: 34, scope: !19741)
!19757 = !DILocation(line: 555, column: 23, scope: !19758)
!19758 = distinct !DILexicalBlock(scope: !19741, file: !2009, line: 555, column: 12)
!19759 = !DILocation(line: 0, scope: !19758)
!19760 = !DILocation(line: 561, column: 9, scope: !19741)
!19761 = !DILocation(line: 562, column: 5, scope: !19741)
!19762 = !DILocation(line: 564, column: 5, scope: !19725)
!19763 = distinct !DISubprogram(name: "pvPortMallocNC", scope: !2009, file: !2009, line: 570, type: !19490, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19764)
!19764 = !{!19765}
!19765 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !19763, file: !2009, line: 570, type: !1857)
!19766 = !DILocation(line: 0, scope: !19763)
!19767 = !DILocation(line: 649, column: 12, scope: !19763)
!19768 = !DILocation(line: 649, column: 5, scope: !19763)
!19769 = distinct !DISubprogram(name: "vPortFreeNC", scope: !2009, file: !2009, line: 652, type: !945, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19770)
!19770 = !{!19771}
!19771 = !DILocalVariable(name: "pv", arg: 1, scope: !19769, file: !2009, line: 652, type: !51)
!19772 = !DILocation(line: 0, scope: !19769)
!19773 = !DILocation(line: 680, column: 5, scope: !19769)
!19774 = !DILocation(line: 682, column: 1, scope: !19769)
!19775 = distinct !DISubprogram(name: "__wrap_malloc", scope: !2009, file: !2009, line: 686, type: !19490, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19776)
!19776 = !{!19777}
!19777 = !DILocalVariable(name: "size", arg: 1, scope: !19775, file: !2009, line: 686, type: !1857)
!19778 = !DILocation(line: 0, scope: !19775)
!19779 = !DILocation(line: 688, column: 12, scope: !19775)
!19780 = !DILocation(line: 688, column: 5, scope: !19775)
!19781 = distinct !DISubprogram(name: "__wrap_calloc", scope: !2009, file: !2009, line: 690, type: !19709, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19782)
!19782 = !{!19783, !19784}
!19783 = !DILocalVariable(name: "nmemb", arg: 1, scope: !19781, file: !2009, line: 690, type: !1857)
!19784 = !DILocalVariable(name: "size", arg: 2, scope: !19781, file: !2009, line: 690, type: !1857)
!19785 = !DILocation(line: 0, scope: !19781)
!19786 = !DILocation(line: 692, column: 12, scope: !19781)
!19787 = !DILocation(line: 692, column: 5, scope: !19781)
!19788 = distinct !DISubprogram(name: "__wrap_realloc", scope: !2009, file: !2009, line: 694, type: !19726, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19789)
!19789 = !{!19790, !19791}
!19790 = !DILocalVariable(name: "pv", arg: 1, scope: !19788, file: !2009, line: 694, type: !51)
!19791 = !DILocalVariable(name: "size", arg: 2, scope: !19788, file: !2009, line: 694, type: !1857)
!19792 = !DILocation(line: 0, scope: !19788)
!19793 = !DILocation(line: 696, column: 12, scope: !19788)
!19794 = !DILocation(line: 696, column: 5, scope: !19788)
!19795 = distinct !DISubprogram(name: "__wrap_free", scope: !2009, file: !2009, line: 698, type: !945, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !19796)
!19796 = !{!19797}
!19797 = !DILocalVariable(name: "pv", arg: 1, scope: !19795, file: !2009, line: 698, type: !51)
!19798 = !DILocation(line: 0, scope: !19795)
!19799 = !DILocation(line: 700, column: 6, scope: !19795)
!19800 = !DILocation(line: 701, column: 1, scope: !19795)
!19801 = distinct !DISubprogram(name: "abort", scope: !2039, file: !2039, line: 108, type: !154, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!19802 = !DILocation(line: 110, column: 5, scope: !19801)
!19803 = !{i64 4281}
!19804 = !DILocation(line: 111, column: 14, scope: !19801)
!19805 = !DILocation(line: 112, column: 45, scope: !19801)
!19806 = !DILocation(line: 113, column: 5, scope: !19801)
!19807 = !DILocation(line: 113, column: 5, scope: !19808)
!19808 = distinct !DILexicalBlock(scope: !19809, file: !2039, line: 113, column: 5)
!19809 = distinct !DILexicalBlock(scope: !19801, file: !2039, line: 113, column: 5)
!19810 = distinct !{!19810, !19811, !19812}
!19811 = !DILocation(line: 113, column: 5, scope: !19809)
!19812 = !DILocation(line: 113, column: 13, scope: !19809)
!19813 = distinct !DISubprogram(name: "platform_assert", scope: !2039, file: !2039, line: 116, type: !19814, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !19816)
!19814 = !DISubroutineType(types: !19815)
!19815 = !{null, !662, !662, !7}
!19816 = !{!19817, !19818, !19819}
!19817 = !DILocalVariable(name: "expr", arg: 1, scope: !19813, file: !2039, line: 116, type: !662)
!19818 = !DILocalVariable(name: "file", arg: 2, scope: !19813, file: !2039, line: 116, type: !662)
!19819 = !DILocalVariable(name: "line", arg: 3, scope: !19813, file: !2039, line: 116, type: !7)
!19820 = !DILocation(line: 0, scope: !19813)
!19821 = !DILocation(line: 118, column: 5, scope: !19813)
!19822 = !{i64 4480}
!19823 = !DILocation(line: 119, column: 14, scope: !19813)
!19824 = !DILocation(line: 120, column: 26, scope: !19813)
!19825 = !DILocation(line: 121, column: 22, scope: !19813)
!19826 = !DILocation(line: 122, column: 22, scope: !19813)
!19827 = !DILocation(line: 123, column: 22, scope: !19813)
!19828 = !DILocation(line: 124, column: 45, scope: !19813)
!19829 = !DILocation(line: 125, column: 5, scope: !19813)
!19830 = !DILocation(line: 125, column: 5, scope: !19831)
!19831 = distinct !DILexicalBlock(scope: !19832, file: !2039, line: 125, column: 5)
!19832 = distinct !DILexicalBlock(scope: !19813, file: !2039, line: 125, column: 5)
!19833 = distinct !{!19833, !19834, !19835}
!19834 = !DILocation(line: 125, column: 5, scope: !19832)
!19835 = !DILocation(line: 125, column: 13, scope: !19832)
!19836 = distinct !DISubprogram(name: "exception_dump_config", scope: !2039, file: !2039, line: 128, type: !1717, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !19837)
!19837 = !{!19838}
!19838 = !DILocalVariable(name: "flag", arg: 1, scope: !19836, file: !2039, line: 128, type: !7)
!19839 = !DILocation(line: 0, scope: !19836)
!19840 = !DILocation(line: 130, column: 17, scope: !19836)
!19841 = !DILocation(line: 131, column: 1, scope: !19836)
!19842 = distinct !DISubprogram(name: "exception_register_callbacks", scope: !2039, file: !2039, line: 142, type: !19843, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !19846)
!19843 = !DISubroutineType(types: !19844)
!19844 = !{!69, !19845}
!19845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!19846 = !{!19847, !19848}
!19847 = !DILocalVariable(name: "cb", arg: 1, scope: !19842, file: !2039, line: 142, type: !19845)
!19848 = !DILocalVariable(name: "i", scope: !19842, file: !2039, line: 144, type: !7)
!19849 = !DILocation(line: 0, scope: !19842)
!19850 = !DILocation(line: 146, column: 26, scope: !19851)
!19851 = distinct !DILexicalBlock(scope: !19842, file: !2039, line: 146, column: 9)
!19852 = !DILocation(line: 146, column: 32, scope: !19851)
!19853 = !DILocation(line: 146, column: 9, scope: !19842)
!19854 = !DILocation(line: 150, column: 22, scope: !19855)
!19855 = distinct !DILexicalBlock(scope: !19856, file: !2039, line: 150, column: 8)
!19856 = distinct !DILexicalBlock(scope: !19857, file: !2039, line: 150, column: 8)
!19857 = distinct !DILexicalBlock(scope: !19851, file: !2039, line: 148, column: 12)
!19858 = !DILocation(line: 150, column: 8, scope: !19856)
!19859 = !DILocation(line: 151, column: 45, scope: !19860)
!19860 = distinct !DILexicalBlock(scope: !19861, file: !2039, line: 151, column: 17)
!19861 = distinct !DILexicalBlock(scope: !19855, file: !2039, line: 150, column: 53)
!19862 = !DILocation(line: 151, column: 53, scope: !19860)
!19863 = !DILocation(line: 152, column: 14, scope: !19860)
!19864 = !DILocation(line: 152, column: 45, scope: !19860)
!19865 = !DILocation(line: 152, column: 60, scope: !19860)
!19866 = !DILocation(line: 152, column: 53, scope: !19860)
!19867 = !DILocation(line: 151, column: 17, scope: !19861)
!19868 = !DILocation(line: 150, column: 49, scope: !19855)
!19869 = distinct !{!19869, !19858, !19870}
!19870 = !DILocation(line: 155, column: 8, scope: !19856)
!19871 = !DILocation(line: 156, column: 57, scope: !19857)
!19872 = !DILocation(line: 156, column: 65, scope: !19857)
!19873 = !DILocation(line: 157, column: 71, scope: !19857)
!19874 = !DILocation(line: 157, column: 57, scope: !19857)
!19875 = !DILocation(line: 157, column: 65, scope: !19857)
!19876 = !DILocation(line: 158, column: 30, scope: !19857)
!19877 = !DILocation(line: 159, column: 8, scope: !19857)
!19878 = !DILocation(line: 0, scope: !19851)
!19879 = !DILocation(line: 161, column: 1, scope: !19842)
!19880 = distinct !DISubprogram(name: "exception_init", scope: !2039, file: !2039, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !19881)
!19881 = !{!19882}
!19882 = !DILocalVariable(name: "i", scope: !19880, file: !2039, line: 165, type: !7)
!19883 = !DILocation(line: 167, column: 14, scope: !19880)
!19884 = !DILocation(line: 170, column: 5, scope: !19880)
!19885 = !DILocation(line: 0, scope: !19880)
!19886 = !DILocation(line: 177, column: 38, scope: !19887)
!19887 = distinct !DILexicalBlock(scope: !19888, file: !2039, line: 177, column: 5)
!19888 = distinct !DILexicalBlock(scope: !19880, file: !2039, line: 177, column: 5)
!19889 = !DILocation(line: 177, column: 19, scope: !19887)
!19890 = !DILocation(line: 177, column: 5, scope: !19888)
!19891 = !DILocation(line: 178, column: 41, scope: !19892)
!19892 = distinct !DILexicalBlock(scope: !19893, file: !2039, line: 178, column: 13)
!19893 = distinct !DILexicalBlock(scope: !19887, file: !2039, line: 177, column: 50)
!19894 = !DILocation(line: 178, column: 13, scope: !19892)
!19895 = !DILocation(line: 178, column: 13, scope: !19893)
!19896 = !DILocation(line: 179, column: 13, scope: !19897)
!19897 = distinct !DILexicalBlock(scope: !19892, file: !2039, line: 178, column: 50)
!19898 = !DILocation(line: 180, column: 9, scope: !19897)
!19899 = !DILocation(line: 177, column: 46, scope: !19887)
!19900 = distinct !{!19900, !19890, !19901}
!19901 = !DILocation(line: 181, column: 5, scope: !19888)
!19902 = !DILocation(line: 183, column: 21, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19880, file: !2039, line: 183, column: 9)
!19904 = !DILocation(line: 183, column: 9, scope: !19880)
!19905 = !DILocation(line: 185, column: 28, scope: !19906)
!19906 = distinct !DILexicalBlock(scope: !19903, file: !2039, line: 183, column: 31)
!19907 = !DILocation(line: 186, column: 28, scope: !19906)
!19908 = !DILocation(line: 187, column: 28, scope: !19906)
!19909 = !DILocation(line: 184, column: 9, scope: !19906)
!19910 = !DILocation(line: 188, column: 5, scope: !19906)
!19911 = !DILocation(line: 189, column: 1, scope: !19880)
!19912 = distinct !DISubprogram(name: "NMI_Handler", scope: !2039, file: !2039, line: 196, type: !154, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!19913 = !DILocation(line: 198, column: 1, scope: !19912)
!19914 = distinct !DISubprogram(name: "printUsageErrorMsg", scope: !2039, file: !2039, line: 200, type: !4770, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !19915)
!19915 = !{!19916}
!19916 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !19914, file: !2039, line: 200, type: !61)
!19917 = !DILocation(line: 0, scope: !19914)
!19918 = !DILocation(line: 202, column: 5, scope: !19914)
!19919 = !DILocation(line: 204, column: 32, scope: !19920)
!19920 = distinct !DILexicalBlock(scope: !19914, file: !2039, line: 204, column: 9)
!19921 = !DILocation(line: 204, column: 9, scope: !19914)
!19922 = !DILocation(line: 205, column: 9, scope: !19923)
!19923 = distinct !DILexicalBlock(scope: !19920, file: !2039, line: 204, column: 38)
!19924 = !DILocation(line: 206, column: 5, scope: !19923)
!19925 = !DILocation(line: 207, column: 32, scope: !19926)
!19926 = distinct !DILexicalBlock(scope: !19914, file: !2039, line: 207, column: 9)
!19927 = !DILocation(line: 207, column: 9, scope: !19914)
!19928 = !DILocation(line: 208, column: 9, scope: !19929)
!19929 = distinct !DILexicalBlock(scope: !19926, file: !2039, line: 207, column: 38)
!19930 = !DILocation(line: 209, column: 5, scope: !19929)
!19931 = !DILocation(line: 210, column: 32, scope: !19932)
!19932 = distinct !DILexicalBlock(scope: !19914, file: !2039, line: 210, column: 9)
!19933 = !DILocation(line: 210, column: 9, scope: !19914)
!19934 = !DILocation(line: 211, column: 9, scope: !19935)
!19935 = distinct !DILexicalBlock(scope: !19932, file: !2039, line: 210, column: 38)
!19936 = !DILocation(line: 212, column: 5, scope: !19935)
!19937 = !DILocation(line: 213, column: 32, scope: !19938)
!19938 = distinct !DILexicalBlock(scope: !19914, file: !2039, line: 213, column: 9)
!19939 = !DILocation(line: 213, column: 9, scope: !19914)
!19940 = !DILocation(line: 214, column: 9, scope: !19941)
!19941 = distinct !DILexicalBlock(scope: !19938, file: !2039, line: 213, column: 38)
!19942 = !DILocation(line: 215, column: 5, scope: !19941)
!19943 = !DILocation(line: 216, column: 32, scope: !19944)
!19944 = distinct !DILexicalBlock(scope: !19914, file: !2039, line: 216, column: 9)
!19945 = !DILocation(line: 216, column: 9, scope: !19914)
!19946 = !DILocation(line: 217, column: 9, scope: !19947)
!19947 = distinct !DILexicalBlock(scope: !19944, file: !2039, line: 216, column: 38)
!19948 = !DILocation(line: 218, column: 5, scope: !19947)
!19949 = !DILocation(line: 219, column: 32, scope: !19950)
!19950 = distinct !DILexicalBlock(scope: !19914, file: !2039, line: 219, column: 9)
!19951 = !DILocation(line: 219, column: 9, scope: !19914)
!19952 = !DILocation(line: 220, column: 9, scope: !19953)
!19953 = distinct !DILexicalBlock(scope: !19950, file: !2039, line: 219, column: 38)
!19954 = !DILocation(line: 221, column: 5, scope: !19953)
!19955 = !DILocation(line: 222, column: 1, scope: !19914)
!19956 = distinct !DISubprogram(name: "printMemoryManagementErrorMsg", scope: !2039, file: !2039, line: 224, type: !4770, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !19957)
!19957 = !{!19958}
!19958 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !19956, file: !2039, line: 224, type: !61)
!19959 = !DILocation(line: 0, scope: !19956)
!19960 = !DILocation(line: 226, column: 5, scope: !19956)
!19961 = !DILocation(line: 228, column: 20, scope: !19962)
!19962 = distinct !DILexicalBlock(scope: !19956, file: !2039, line: 228, column: 9)
!19963 = !DILocation(line: 228, column: 32, scope: !19962)
!19964 = !DILocation(line: 228, column: 9, scope: !19956)
!19965 = !DILocation(line: 229, column: 9, scope: !19966)
!19966 = distinct !DILexicalBlock(scope: !19962, file: !2039, line: 228, column: 38)
!19967 = !DILocation(line: 230, column: 5, scope: !19966)
!19968 = !DILocation(line: 231, column: 20, scope: !19969)
!19969 = distinct !DILexicalBlock(scope: !19956, file: !2039, line: 231, column: 9)
!19970 = !DILocation(line: 231, column: 32, scope: !19969)
!19971 = !DILocation(line: 231, column: 9, scope: !19956)
!19972 = !DILocation(line: 232, column: 9, scope: !19973)
!19973 = distinct !DILexicalBlock(scope: !19969, file: !2039, line: 231, column: 38)
!19974 = !DILocation(line: 233, column: 5, scope: !19973)
!19975 = !DILocation(line: 234, column: 20, scope: !19976)
!19976 = distinct !DILexicalBlock(scope: !19956, file: !2039, line: 234, column: 9)
!19977 = !DILocation(line: 234, column: 32, scope: !19976)
!19978 = !DILocation(line: 234, column: 9, scope: !19956)
!19979 = !DILocation(line: 235, column: 9, scope: !19980)
!19980 = distinct !DILexicalBlock(scope: !19976, file: !2039, line: 234, column: 38)
!19981 = !DILocation(line: 236, column: 5, scope: !19980)
!19982 = !DILocation(line: 237, column: 20, scope: !19983)
!19983 = distinct !DILexicalBlock(scope: !19956, file: !2039, line: 237, column: 9)
!19984 = !DILocation(line: 237, column: 32, scope: !19983)
!19985 = !DILocation(line: 237, column: 9, scope: !19956)
!19986 = !DILocation(line: 238, column: 72, scope: !19987)
!19987 = distinct !DILexicalBlock(scope: !19983, file: !2039, line: 237, column: 38)
!19988 = !DILocation(line: 238, column: 9, scope: !19987)
!19989 = !DILocation(line: 239, column: 5, scope: !19987)
!19990 = !DILocation(line: 240, column: 20, scope: !19991)
!19991 = distinct !DILexicalBlock(scope: !19956, file: !2039, line: 240, column: 9)
!19992 = !DILocation(line: 240, column: 32, scope: !19991)
!19993 = !DILocation(line: 240, column: 9, scope: !19956)
!19994 = !DILocation(line: 241, column: 9, scope: !19995)
!19995 = distinct !DILexicalBlock(scope: !19991, file: !2039, line: 240, column: 38)
!19996 = !DILocation(line: 242, column: 5, scope: !19995)
!19997 = !DILocation(line: 243, column: 20, scope: !19998)
!19998 = distinct !DILexicalBlock(scope: !19956, file: !2039, line: 243, column: 9)
!19999 = !DILocation(line: 243, column: 32, scope: !19998)
!20000 = !DILocation(line: 243, column: 9, scope: !19956)
!20001 = !DILocation(line: 244, column: 62, scope: !20002)
!20002 = distinct !DILexicalBlock(scope: !19998, file: !2039, line: 243, column: 38)
!20003 = !DILocation(line: 244, column: 9, scope: !20002)
!20004 = !DILocation(line: 245, column: 5, scope: !20002)
!20005 = !DILocation(line: 246, column: 1, scope: !19956)
!20006 = distinct !DISubprogram(name: "printBusFaultErrorMsg", scope: !2039, file: !2039, line: 248, type: !4770, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20007)
!20007 = !{!20008}
!20008 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !20006, file: !2039, line: 248, type: !61)
!20009 = !DILocation(line: 0, scope: !20006)
!20010 = !DILocation(line: 250, column: 5, scope: !20006)
!20011 = !DILocation(line: 253, column: 32, scope: !20012)
!20012 = distinct !DILexicalBlock(scope: !20006, file: !2039, line: 253, column: 9)
!20013 = !DILocation(line: 253, column: 9, scope: !20006)
!20014 = !DILocation(line: 254, column: 9, scope: !20015)
!20015 = distinct !DILexicalBlock(scope: !20012, file: !2039, line: 253, column: 38)
!20016 = !DILocation(line: 255, column: 5, scope: !20015)
!20017 = !DILocation(line: 256, column: 32, scope: !20018)
!20018 = distinct !DILexicalBlock(scope: !20006, file: !2039, line: 256, column: 9)
!20019 = !DILocation(line: 256, column: 9, scope: !20006)
!20020 = !DILocation(line: 257, column: 9, scope: !20021)
!20021 = distinct !DILexicalBlock(scope: !20018, file: !2039, line: 256, column: 38)
!20022 = !DILocation(line: 258, column: 5, scope: !20021)
!20023 = !DILocation(line: 259, column: 32, scope: !20024)
!20024 = distinct !DILexicalBlock(scope: !20006, file: !2039, line: 259, column: 9)
!20025 = !DILocation(line: 259, column: 9, scope: !20006)
!20026 = !DILocation(line: 260, column: 9, scope: !20027)
!20027 = distinct !DILexicalBlock(scope: !20024, file: !2039, line: 259, column: 38)
!20028 = !DILocation(line: 261, column: 5, scope: !20027)
!20029 = !DILocation(line: 262, column: 32, scope: !20030)
!20030 = distinct !DILexicalBlock(scope: !20006, file: !2039, line: 262, column: 9)
!20031 = !DILocation(line: 262, column: 9, scope: !20006)
!20032 = !DILocation(line: 263, column: 9, scope: !20033)
!20033 = distinct !DILexicalBlock(scope: !20030, file: !2039, line: 262, column: 38)
!20034 = !DILocation(line: 264, column: 5, scope: !20033)
!20035 = !DILocation(line: 265, column: 32, scope: !20036)
!20036 = distinct !DILexicalBlock(scope: !20006, file: !2039, line: 265, column: 9)
!20037 = !DILocation(line: 265, column: 9, scope: !20006)
!20038 = !DILocation(line: 266, column: 90, scope: !20039)
!20039 = distinct !DILexicalBlock(scope: !20036, file: !2039, line: 265, column: 38)
!20040 = !DILocation(line: 266, column: 9, scope: !20039)
!20041 = !DILocation(line: 267, column: 5, scope: !20039)
!20042 = !DILocation(line: 268, column: 32, scope: !20043)
!20043 = distinct !DILexicalBlock(scope: !20006, file: !2039, line: 268, column: 9)
!20044 = !DILocation(line: 268, column: 9, scope: !20006)
!20045 = !DILocation(line: 269, column: 9, scope: !20046)
!20046 = distinct !DILexicalBlock(scope: !20043, file: !2039, line: 268, column: 38)
!20047 = !DILocation(line: 270, column: 5, scope: !20046)
!20048 = !DILocation(line: 271, column: 32, scope: !20049)
!20049 = distinct !DILexicalBlock(scope: !20006, file: !2039, line: 271, column: 9)
!20050 = !DILocation(line: 271, column: 9, scope: !20006)
!20051 = !DILocation(line: 272, column: 61, scope: !20052)
!20052 = distinct !DILexicalBlock(scope: !20049, file: !2039, line: 271, column: 38)
!20053 = !DILocation(line: 272, column: 9, scope: !20052)
!20054 = !DILocation(line: 273, column: 5, scope: !20052)
!20055 = !DILocation(line: 274, column: 1, scope: !20006)
!20056 = distinct !DISubprogram(name: "exception_reboot", scope: !2039, file: !2039, line: 799, type: !154, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20057 = !DILocation(line: 805, column: 5, scope: !20056)
!20058 = distinct !DISubprogram(name: "stackDump", scope: !2039, file: !2039, line: 823, type: !20059, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20061)
!20059 = !DISubroutineType(types: !20060)
!20060 = !{null, !4532}
!20061 = !{!20062}
!20062 = !DILocalVariable(name: "stack", arg: 1, scope: !20058, file: !2039, line: 823, type: !4532)
!20063 = !DILocation(line: 0, scope: !20058)
!20064 = !DILocation(line: 825, column: 24, scope: !20058)
!20065 = !DILocation(line: 825, column: 22, scope: !20058)
!20066 = !DILocation(line: 826, column: 24, scope: !20058)
!20067 = !DILocation(line: 826, column: 22, scope: !20058)
!20068 = !DILocation(line: 827, column: 24, scope: !20058)
!20069 = !DILocation(line: 827, column: 22, scope: !20058)
!20070 = !DILocation(line: 828, column: 24, scope: !20058)
!20071 = !DILocation(line: 828, column: 22, scope: !20058)
!20072 = !DILocation(line: 829, column: 24, scope: !20058)
!20073 = !DILocation(line: 829, column: 22, scope: !20058)
!20074 = !DILocation(line: 830, column: 25, scope: !20058)
!20075 = !DILocation(line: 830, column: 42, scope: !20058)
!20076 = !DILocation(line: 830, column: 22, scope: !20058)
!20077 = !DILocation(line: 831, column: 24, scope: !20058)
!20078 = !DILocation(line: 831, column: 22, scope: !20058)
!20079 = !DILocation(line: 832, column: 24, scope: !20058)
!20080 = !DILocation(line: 832, column: 22, scope: !20058)
!20081 = !DILocation(line: 833, column: 24, scope: !20058)
!20082 = !DILocation(line: 833, column: 22, scope: !20058)
!20083 = !DILocation(line: 836, column: 23, scope: !20084)
!20084 = distinct !DILexicalBlock(scope: !20058, file: !2039, line: 836, column: 10)
!20085 = !DILocation(line: 836, column: 34, scope: !20084)
!20086 = !DILocation(line: 836, column: 42, scope: !20084)
!20087 = !DILocation(line: 836, column: 10, scope: !20058)
!20088 = !DILocation(line: 837, column: 26, scope: !20089)
!20089 = distinct !DILexicalBlock(scope: !20084, file: !2039, line: 836, column: 49)
!20090 = !DILocation(line: 837, column: 24, scope: !20089)
!20091 = !DILocation(line: 838, column: 26, scope: !20089)
!20092 = !DILocation(line: 838, column: 24, scope: !20089)
!20093 = !DILocation(line: 839, column: 26, scope: !20089)
!20094 = !DILocation(line: 839, column: 24, scope: !20089)
!20095 = !DILocation(line: 840, column: 26, scope: !20089)
!20096 = !DILocation(line: 840, column: 24, scope: !20089)
!20097 = !DILocation(line: 841, column: 26, scope: !20089)
!20098 = !DILocation(line: 841, column: 24, scope: !20089)
!20099 = !DILocation(line: 842, column: 26, scope: !20089)
!20100 = !DILocation(line: 842, column: 24, scope: !20089)
!20101 = !DILocation(line: 843, column: 26, scope: !20089)
!20102 = !DILocation(line: 843, column: 24, scope: !20089)
!20103 = !DILocation(line: 844, column: 26, scope: !20089)
!20104 = !DILocation(line: 844, column: 24, scope: !20089)
!20105 = !DILocation(line: 845, column: 26, scope: !20089)
!20106 = !DILocation(line: 845, column: 24, scope: !20089)
!20107 = !DILocation(line: 846, column: 26, scope: !20089)
!20108 = !DILocation(line: 846, column: 24, scope: !20089)
!20109 = !DILocation(line: 847, column: 27, scope: !20089)
!20110 = !DILocation(line: 847, column: 25, scope: !20089)
!20111 = !DILocation(line: 848, column: 27, scope: !20089)
!20112 = !DILocation(line: 848, column: 25, scope: !20089)
!20113 = !DILocation(line: 849, column: 27, scope: !20089)
!20114 = !DILocation(line: 849, column: 25, scope: !20089)
!20115 = !DILocation(line: 850, column: 27, scope: !20089)
!20116 = !DILocation(line: 850, column: 25, scope: !20089)
!20117 = !DILocation(line: 851, column: 27, scope: !20089)
!20118 = !DILocation(line: 851, column: 25, scope: !20089)
!20119 = !DILocation(line: 852, column: 27, scope: !20089)
!20120 = !DILocation(line: 852, column: 25, scope: !20089)
!20121 = !DILocation(line: 853, column: 29, scope: !20089)
!20122 = !DILocation(line: 853, column: 27, scope: !20089)
!20123 = !DILocation(line: 854, column: 24, scope: !20089)
!20124 = !DILocation(line: 855, column: 5, scope: !20089)
!20125 = !DILocation(line: 858, column: 16, scope: !20126)
!20126 = distinct !DILexicalBlock(scope: !20058, file: !2039, line: 858, column: 10)
!20127 = !DILocation(line: 858, column: 20, scope: !20126)
!20128 = !DILocation(line: 858, column: 44, scope: !20126)
!20129 = !DILocation(line: 859, column: 24, scope: !20130)
!20130 = distinct !DILexicalBlock(scope: !20126, file: !2039, line: 858, column: 74)
!20131 = !DILocation(line: 860, column: 5, scope: !20130)
!20132 = !DILocation(line: 862, column: 5, scope: !20058)
!20133 = !DILocation(line: 863, column: 44, scope: !20058)
!20134 = !DILocation(line: 863, column: 5, scope: !20058)
!20135 = !DILocation(line: 864, column: 44, scope: !20058)
!20136 = !DILocation(line: 864, column: 5, scope: !20058)
!20137 = !DILocation(line: 865, column: 44, scope: !20058)
!20138 = !DILocation(line: 865, column: 5, scope: !20058)
!20139 = !DILocation(line: 866, column: 44, scope: !20058)
!20140 = !DILocation(line: 866, column: 5, scope: !20058)
!20141 = !DILocation(line: 867, column: 44, scope: !20058)
!20142 = !DILocation(line: 867, column: 5, scope: !20058)
!20143 = !DILocation(line: 868, column: 44, scope: !20058)
!20144 = !DILocation(line: 868, column: 5, scope: !20058)
!20145 = !DILocation(line: 869, column: 44, scope: !20058)
!20146 = !DILocation(line: 869, column: 5, scope: !20058)
!20147 = !DILocation(line: 870, column: 44, scope: !20058)
!20148 = !DILocation(line: 870, column: 5, scope: !20058)
!20149 = !DILocation(line: 871, column: 44, scope: !20058)
!20150 = !DILocation(line: 871, column: 5, scope: !20058)
!20151 = !DILocation(line: 872, column: 44, scope: !20058)
!20152 = !DILocation(line: 872, column: 5, scope: !20058)
!20153 = !DILocation(line: 873, column: 44, scope: !20058)
!20154 = !DILocation(line: 873, column: 5, scope: !20058)
!20155 = !DILocation(line: 874, column: 44, scope: !20058)
!20156 = !DILocation(line: 874, column: 5, scope: !20058)
!20157 = !DILocation(line: 875, column: 44, scope: !20058)
!20158 = !DILocation(line: 875, column: 5, scope: !20058)
!20159 = !DILocation(line: 876, column: 44, scope: !20058)
!20160 = !DILocation(line: 876, column: 5, scope: !20058)
!20161 = !DILocation(line: 877, column: 44, scope: !20058)
!20162 = !DILocation(line: 877, column: 5, scope: !20058)
!20163 = !DILocation(line: 878, column: 48, scope: !20058)
!20164 = !DILocation(line: 878, column: 5, scope: !20058)
!20165 = !DILocation(line: 881, column: 21, scope: !20166)
!20166 = distinct !DILexicalBlock(scope: !20058, file: !2039, line: 881, column: 9)
!20167 = !DILocation(line: 881, column: 32, scope: !20166)
!20168 = !DILocation(line: 881, column: 9, scope: !20058)
!20169 = !DILocation(line: 882, column: 29, scope: !20170)
!20170 = distinct !DILexicalBlock(scope: !20166, file: !2039, line: 881, column: 39)
!20171 = !DILocation(line: 884, column: 5, scope: !20170)
!20172 = !DILocation(line: 0, scope: !20166)
!20173 = !DILocation(line: 889, column: 34, scope: !20174)
!20174 = distinct !DILexicalBlock(scope: !20058, file: !2039, line: 889, column: 10)
!20175 = !DILocation(line: 889, column: 42, scope: !20174)
!20176 = !DILocation(line: 889, column: 10, scope: !20058)
!20177 = !DILocation(line: 890, column: 29, scope: !20178)
!20178 = distinct !DILexicalBlock(scope: !20174, file: !2039, line: 889, column: 49)
!20179 = !DILocation(line: 891, column: 48, scope: !20178)
!20180 = !DILocation(line: 891, column: 9, scope: !20178)
!20181 = !DILocation(line: 892, column: 48, scope: !20178)
!20182 = !DILocation(line: 892, column: 9, scope: !20178)
!20183 = !DILocation(line: 893, column: 48, scope: !20178)
!20184 = !DILocation(line: 893, column: 9, scope: !20178)
!20185 = !DILocation(line: 894, column: 48, scope: !20178)
!20186 = !DILocation(line: 894, column: 9, scope: !20178)
!20187 = !DILocation(line: 895, column: 48, scope: !20178)
!20188 = !DILocation(line: 895, column: 9, scope: !20178)
!20189 = !DILocation(line: 896, column: 48, scope: !20178)
!20190 = !DILocation(line: 896, column: 9, scope: !20178)
!20191 = !DILocation(line: 897, column: 48, scope: !20178)
!20192 = !DILocation(line: 897, column: 9, scope: !20178)
!20193 = !DILocation(line: 898, column: 48, scope: !20178)
!20194 = !DILocation(line: 898, column: 9, scope: !20178)
!20195 = !DILocation(line: 899, column: 48, scope: !20178)
!20196 = !DILocation(line: 899, column: 9, scope: !20178)
!20197 = !DILocation(line: 900, column: 48, scope: !20178)
!20198 = !DILocation(line: 900, column: 9, scope: !20178)
!20199 = !DILocation(line: 901, column: 48, scope: !20178)
!20200 = !DILocation(line: 901, column: 9, scope: !20178)
!20201 = !DILocation(line: 902, column: 48, scope: !20178)
!20202 = !DILocation(line: 902, column: 9, scope: !20178)
!20203 = !DILocation(line: 903, column: 48, scope: !20178)
!20204 = !DILocation(line: 903, column: 9, scope: !20178)
!20205 = !DILocation(line: 904, column: 48, scope: !20178)
!20206 = !DILocation(line: 904, column: 9, scope: !20178)
!20207 = !DILocation(line: 905, column: 48, scope: !20178)
!20208 = !DILocation(line: 905, column: 9, scope: !20178)
!20209 = !DILocation(line: 906, column: 48, scope: !20178)
!20210 = !DILocation(line: 906, column: 9, scope: !20178)
!20211 = !DILocation(line: 907, column: 48, scope: !20178)
!20212 = !DILocation(line: 907, column: 9, scope: !20178)
!20213 = !DILocation(line: 908, column: 48, scope: !20178)
!20214 = !DILocation(line: 908, column: 9, scope: !20178)
!20215 = !DILocation(line: 909, column: 48, scope: !20178)
!20216 = !DILocation(line: 909, column: 9, scope: !20178)
!20217 = !DILocation(line: 910, column: 48, scope: !20178)
!20218 = !DILocation(line: 910, column: 9, scope: !20178)
!20219 = !DILocation(line: 911, column: 48, scope: !20178)
!20220 = !DILocation(line: 911, column: 9, scope: !20178)
!20221 = !DILocation(line: 912, column: 48, scope: !20178)
!20222 = !DILocation(line: 912, column: 9, scope: !20178)
!20223 = !DILocation(line: 913, column: 48, scope: !20178)
!20224 = !DILocation(line: 913, column: 9, scope: !20178)
!20225 = !DILocation(line: 914, column: 48, scope: !20178)
!20226 = !DILocation(line: 914, column: 9, scope: !20178)
!20227 = !DILocation(line: 915, column: 48, scope: !20178)
!20228 = !DILocation(line: 915, column: 9, scope: !20178)
!20229 = !DILocation(line: 916, column: 48, scope: !20178)
!20230 = !DILocation(line: 916, column: 9, scope: !20178)
!20231 = !DILocation(line: 917, column: 48, scope: !20178)
!20232 = !DILocation(line: 917, column: 9, scope: !20178)
!20233 = !DILocation(line: 918, column: 48, scope: !20178)
!20234 = !DILocation(line: 918, column: 9, scope: !20178)
!20235 = !DILocation(line: 919, column: 48, scope: !20178)
!20236 = !DILocation(line: 919, column: 9, scope: !20178)
!20237 = !DILocation(line: 920, column: 48, scope: !20178)
!20238 = !DILocation(line: 920, column: 9, scope: !20178)
!20239 = !DILocation(line: 921, column: 48, scope: !20178)
!20240 = !DILocation(line: 921, column: 9, scope: !20178)
!20241 = !DILocation(line: 922, column: 48, scope: !20178)
!20242 = !DILocation(line: 922, column: 9, scope: !20178)
!20243 = !DILocation(line: 923, column: 50, scope: !20178)
!20244 = !DILocation(line: 923, column: 9, scope: !20178)
!20245 = !DILocation(line: 924, column: 5, scope: !20178)
!20246 = !DILocation(line: 926, column: 48, scope: !20058)
!20247 = !DILocation(line: 926, column: 5, scope: !20058)
!20248 = !DILocation(line: 927, column: 48, scope: !20058)
!20249 = !DILocation(line: 927, column: 5, scope: !20058)
!20250 = !DILocation(line: 928, column: 48, scope: !20058)
!20251 = !DILocation(line: 928, column: 5, scope: !20058)
!20252 = !DILocation(line: 929, column: 48, scope: !20058)
!20253 = !DILocation(line: 929, column: 5, scope: !20058)
!20254 = !DILocation(line: 959, column: 9, scope: !20255)
!20255 = distinct !DILexicalBlock(scope: !20058, file: !2039, line: 959, column: 9)
!20256 = !DILocation(line: 959, column: 9, scope: !20058)
!20257 = !DILocation(line: 960, column: 9, scope: !20258)
!20258 = distinct !DILexicalBlock(scope: !20255, file: !2039, line: 959, column: 33)
!20259 = !DILocation(line: 961, column: 5, scope: !20258)
!20260 = !DILocation(line: 962, column: 1, scope: !20058)
!20261 = distinct !DISubprogram(name: "reboot_check", scope: !2039, file: !2039, line: 808, type: !20262, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20262 = !DISubroutineType(types: !20263)
!20263 = !{!69}
!20264 = !DILocation(line: 810, column: 13, scope: !20261)
!20265 = !DILocation(line: 810, column: 25, scope: !20261)
!20266 = !DILocation(line: 810, column: 5, scope: !20261)
!20267 = distinct !DISubprogram(name: "memoryDumpAll", scope: !2039, file: !2039, line: 964, type: !154, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20268)
!20268 = !{!20269, !20270, !20271}
!20269 = !DILocalVariable(name: "current", scope: !20267, file: !2039, line: 966, type: !2124)
!20270 = !DILocalVariable(name: "end", scope: !20267, file: !2039, line: 966, type: !2124)
!20271 = !DILocalVariable(name: "i", scope: !20267, file: !2039, line: 967, type: !30)
!20272 = !DILocation(line: 0, scope: !20267)
!20273 = !DILocation(line: 971, column: 33, scope: !20274)
!20274 = distinct !DILexicalBlock(scope: !20275, file: !2039, line: 971, column: 14)
!20275 = distinct !DILexicalBlock(scope: !20276, file: !2039, line: 969, column: 24)
!20276 = distinct !DILexicalBlock(scope: !20277, file: !2039, line: 969, column: 5)
!20277 = distinct !DILexicalBlock(scope: !20267, file: !2039, line: 969, column: 5)
!20278 = !DILocation(line: 971, column: 15, scope: !20274)
!20279 = !DILocation(line: 971, column: 14, scope: !20275)
!20280 = !DILocation(line: 1000, column: 38, scope: !20281)
!20281 = distinct !DILexicalBlock(scope: !20282, file: !2039, line: 1000, column: 5)
!20282 = distinct !DILexicalBlock(scope: !20267, file: !2039, line: 1000, column: 5)
!20283 = !DILocation(line: 1000, column: 19, scope: !20281)
!20284 = !DILocation(line: 1000, column: 5, scope: !20282)
!20285 = !DILocation(line: 975, column: 33, scope: !20286)
!20286 = distinct !DILexicalBlock(scope: !20275, file: !2039, line: 975, column: 14)
!20287 = !DILocation(line: 975, column: 15, scope: !20286)
!20288 = !DILocation(line: 975, column: 14, scope: !20275)
!20289 = !DILocation(line: 979, column: 37, scope: !20275)
!20290 = !DILocation(line: 980, column: 37, scope: !20275)
!20291 = !DILocation(line: 982, column: 24, scope: !20292)
!20292 = distinct !DILexicalBlock(scope: !20293, file: !2039, line: 982, column: 9)
!20293 = distinct !DILexicalBlock(scope: !20275, file: !2039, line: 982, column: 9)
!20294 = !DILocation(line: 982, column: 9, scope: !20293)
!20295 = !DILocation(line: 984, column: 17, scope: !20296)
!20296 = distinct !DILexicalBlock(scope: !20297, file: !2039, line: 984, column: 17)
!20297 = distinct !DILexicalBlock(scope: !20292, file: !2039, line: 982, column: 45)
!20298 = !DILocation(line: 984, column: 32, scope: !20296)
!20299 = !DILocation(line: 0, scope: !20297)
!20300 = !DILocation(line: 984, column: 37, scope: !20296)
!20301 = !DILocation(line: 986, column: 27, scope: !20296)
!20302 = !DILocation(line: 986, column: 17, scope: !20296)
!20303 = !DILocation(line: 986, column: 32, scope: !20296)
!20304 = !DILocation(line: 986, column: 37, scope: !20296)
!20305 = !DILocation(line: 987, column: 27, scope: !20296)
!20306 = !DILocation(line: 987, column: 17, scope: !20296)
!20307 = !DILocation(line: 987, column: 32, scope: !20296)
!20308 = !DILocation(line: 984, column: 17, scope: !20297)
!20309 = !DILocation(line: 994, column: 20, scope: !20297)
!20310 = !DILocation(line: 992, column: 20, scope: !20297)
!20311 = !DILocation(line: 995, column: 30, scope: !20297)
!20312 = !DILocation(line: 995, column: 20, scope: !20297)
!20313 = !DILocation(line: 996, column: 30, scope: !20297)
!20314 = !DILocation(line: 996, column: 20, scope: !20297)
!20315 = !DILocation(line: 991, column: 13, scope: !20297)
!20316 = !DILocation(line: 997, column: 10, scope: !20297)
!20317 = !DILocation(line: 982, column: 39, scope: !20292)
!20318 = distinct !{!20318, !20294, !20319}
!20319 = !DILocation(line: 997, column: 10, scope: !20293)
!20320 = !DILocation(line: 969, column: 20, scope: !20276)
!20321 = distinct !{!20321, !20322, !20323}
!20322 = !DILocation(line: 969, column: 5, scope: !20277)
!20323 = !DILocation(line: 998, column: 5, scope: !20277)
!20324 = !DILocation(line: 1001, column: 41, scope: !20325)
!20325 = distinct !DILexicalBlock(scope: !20326, file: !2039, line: 1001, column: 13)
!20326 = distinct !DILexicalBlock(scope: !20281, file: !2039, line: 1000, column: 50)
!20327 = !DILocation(line: 1001, column: 13, scope: !20325)
!20328 = !DILocation(line: 1001, column: 13, scope: !20326)
!20329 = !DILocation(line: 1002, column: 13, scope: !20330)
!20330 = distinct !DILexicalBlock(scope: !20325, file: !2039, line: 1001, column: 50)
!20331 = !DILocation(line: 1003, column: 9, scope: !20330)
!20332 = !DILocation(line: 1000, column: 46, scope: !20281)
!20333 = distinct !{!20333, !20284, !20334}
!20334 = !DILocation(line: 1004, column: 5, scope: !20282)
!20335 = !DILocation(line: 1006, column: 5, scope: !20267)
!20336 = !DILocation(line: 1017, column: 1, scope: !20267)
!20337 = distinct !DISubprogram(name: "Hard_Fault_Handler", scope: !2039, file: !2039, line: 1040, type: !20059, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20338)
!20338 = !{!20339}
!20339 = !DILocalVariable(name: "stack", arg: 1, scope: !20337, file: !2039, line: 1040, type: !4532)
!20340 = !DILocation(line: 0, scope: !20337)
!20341 = !DILocation(line: 1042, column: 5, scope: !20337)
!20342 = !DILocation(line: 1043, column: 57, scope: !20337)
!20343 = !DILocation(line: 1043, column: 5, scope: !20337)
!20344 = !DILocation(line: 1044, column: 15, scope: !20345)
!20345 = distinct !DILexicalBlock(scope: !20337, file: !2039, line: 1044, column: 9)
!20346 = !DILocation(line: 1044, column: 20, scope: !20345)
!20347 = !DILocation(line: 1044, column: 33, scope: !20345)
!20348 = !DILocation(line: 1044, column: 9, scope: !20337)
!20349 = !DILocation(line: 1045, column: 9, scope: !20350)
!20350 = distinct !DILexicalBlock(scope: !20345, file: !2039, line: 1044, column: 39)
!20351 = !DILocation(line: 1046, column: 61, scope: !20350)
!20352 = !DILocation(line: 1046, column: 9, scope: !20350)
!20353 = !DILocation(line: 1047, column: 19, scope: !20354)
!20354 = distinct !DILexicalBlock(scope: !20350, file: !2039, line: 1047, column: 13)
!20355 = !DILocation(line: 1047, column: 38, scope: !20354)
!20356 = !DILocation(line: 1047, column: 13, scope: !20350)
!20357 = !DILocation(line: 1048, column: 37, scope: !20358)
!20358 = distinct !DILexicalBlock(scope: !20354, file: !2039, line: 1047, column: 44)
!20359 = !DILocation(line: 1048, column: 13, scope: !20358)
!20360 = !DILocation(line: 1049, column: 9, scope: !20358)
!20361 = !DILocation(line: 1050, column: 19, scope: !20362)
!20362 = distinct !DILexicalBlock(scope: !20350, file: !2039, line: 1050, column: 13)
!20363 = !DILocation(line: 1050, column: 24, scope: !20362)
!20364 = !DILocation(line: 1050, column: 38, scope: !20362)
!20365 = !DILocation(line: 1050, column: 13, scope: !20350)
!20366 = !DILocation(line: 1051, column: 40, scope: !20367)
!20367 = distinct !DILexicalBlock(scope: !20362, file: !2039, line: 1050, column: 45)
!20368 = !DILocation(line: 1051, column: 13, scope: !20367)
!20369 = !DILocation(line: 1052, column: 9, scope: !20367)
!20370 = !DILocation(line: 1053, column: 19, scope: !20371)
!20371 = distinct !DILexicalBlock(scope: !20350, file: !2039, line: 1053, column: 13)
!20372 = !DILocation(line: 1053, column: 24, scope: !20371)
!20373 = !DILocation(line: 1053, column: 38, scope: !20371)
!20374 = !DILocation(line: 1053, column: 13, scope: !20350)
!20375 = !DILocation(line: 1054, column: 48, scope: !20376)
!20376 = distinct !DILexicalBlock(scope: !20371, file: !2039, line: 1053, column: 45)
!20377 = !DILocation(line: 1054, column: 13, scope: !20376)
!20378 = !DILocation(line: 1055, column: 9, scope: !20376)
!20379 = !DILocation(line: 1058, column: 5, scope: !20337)
!20380 = !DILocation(line: 1060, column: 5, scope: !20337)
!20381 = !DILocation(line: 1065, column: 5, scope: !20337)
!20382 = distinct !{!20382, !20381, !20383}
!20383 = !DILocation(line: 1065, column: 14, scope: !20337)
!20384 = distinct !DISubprogram(name: "MemManage_Fault_Handler", scope: !2039, file: !2039, line: 1069, type: !20059, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20385)
!20385 = !{!20386}
!20386 = !DILocalVariable(name: "stack", arg: 1, scope: !20384, file: !2039, line: 1069, type: !4532)
!20387 = !DILocation(line: 0, scope: !20384)
!20388 = !DILocation(line: 1071, column: 5, scope: !20384)
!20389 = !DILocation(line: 1072, column: 57, scope: !20384)
!20390 = !DILocation(line: 1072, column: 5, scope: !20384)
!20391 = !DILocation(line: 1073, column: 15, scope: !20392)
!20392 = distinct !DILexicalBlock(scope: !20384, file: !2039, line: 1073, column: 9)
!20393 = !DILocation(line: 1073, column: 20, scope: !20392)
!20394 = !DILocation(line: 1073, column: 28, scope: !20392)
!20395 = !DILocation(line: 1073, column: 9, scope: !20384)
!20396 = !DILocation(line: 1074, column: 44, scope: !20397)
!20397 = distinct !DILexicalBlock(scope: !20392, file: !2039, line: 1073, column: 34)
!20398 = !DILocation(line: 1074, column: 9, scope: !20397)
!20399 = !DILocation(line: 1075, column: 5, scope: !20397)
!20400 = !DILocation(line: 1077, column: 5, scope: !20384)
!20401 = !DILocation(line: 1079, column: 5, scope: !20384)
!20402 = !DILocation(line: 1084, column: 5, scope: !20384)
!20403 = distinct !{!20403, !20402, !20404}
!20404 = !DILocation(line: 1084, column: 14, scope: !20384)
!20405 = distinct !DISubprogram(name: "Bus_Fault_Handler", scope: !2039, file: !2039, line: 1088, type: !20059, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20406)
!20406 = !{!20407}
!20407 = !DILocalVariable(name: "stack", arg: 1, scope: !20405, file: !2039, line: 1088, type: !4532)
!20408 = !DILocation(line: 0, scope: !20405)
!20409 = !DILocation(line: 1090, column: 5, scope: !20405)
!20410 = !DILocation(line: 1091, column: 57, scope: !20405)
!20411 = !DILocation(line: 1091, column: 5, scope: !20405)
!20412 = !DILocation(line: 1092, column: 15, scope: !20413)
!20413 = distinct !DILexicalBlock(scope: !20405, file: !2039, line: 1092, column: 9)
!20414 = !DILocation(line: 1092, column: 20, scope: !20413)
!20415 = !DILocation(line: 1092, column: 30, scope: !20413)
!20416 = !DILocation(line: 1092, column: 9, scope: !20405)
!20417 = !DILocation(line: 1093, column: 36, scope: !20418)
!20418 = distinct !DILexicalBlock(scope: !20413, file: !2039, line: 1092, column: 36)
!20419 = !DILocation(line: 1093, column: 9, scope: !20418)
!20420 = !DILocation(line: 1094, column: 5, scope: !20418)
!20421 = !DILocation(line: 1096, column: 5, scope: !20405)
!20422 = !DILocation(line: 1098, column: 5, scope: !20405)
!20423 = !DILocation(line: 1103, column: 5, scope: !20405)
!20424 = distinct !{!20424, !20423, !20425}
!20425 = !DILocation(line: 1103, column: 14, scope: !20405)
!20426 = distinct !DISubprogram(name: "Usage_Fault_Handler", scope: !2039, file: !2039, line: 1107, type: !20059, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20427)
!20427 = !{!20428}
!20428 = !DILocalVariable(name: "stack", arg: 1, scope: !20426, file: !2039, line: 1107, type: !4532)
!20429 = !DILocation(line: 0, scope: !20426)
!20430 = !DILocation(line: 1109, column: 5, scope: !20426)
!20431 = !DILocation(line: 1110, column: 57, scope: !20426)
!20432 = !DILocation(line: 1110, column: 5, scope: !20426)
!20433 = !DILocation(line: 1111, column: 15, scope: !20434)
!20434 = distinct !DILexicalBlock(scope: !20426, file: !2039, line: 1111, column: 9)
!20435 = !DILocation(line: 1111, column: 34, scope: !20434)
!20436 = !DILocation(line: 1111, column: 9, scope: !20426)
!20437 = !DILocation(line: 1112, column: 33, scope: !20438)
!20438 = distinct !DILexicalBlock(scope: !20434, file: !2039, line: 1111, column: 40)
!20439 = !DILocation(line: 1112, column: 9, scope: !20438)
!20440 = !DILocation(line: 1113, column: 5, scope: !20438)
!20441 = !DILocation(line: 1115, column: 5, scope: !20426)
!20442 = !DILocation(line: 1117, column: 5, scope: !20426)
!20443 = !DILocation(line: 1122, column: 5, scope: !20426)
!20444 = distinct !{!20444, !20443, !20445}
!20445 = !DILocation(line: 1122, column: 14, scope: !20426)
!20446 = distinct !DISubprogram(name: "Debug_Monitor_Handler", scope: !2039, file: !2039, line: 1127, type: !20059, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !20447)
!20447 = !{!20448, !20449, !20450, !20451}
!20448 = !DILocalVariable(name: "stack", arg: 1, scope: !20446, file: !2039, line: 1127, type: !4532)
!20449 = !DILocalVariable(name: "offset", scope: !20446, file: !2039, line: 1129, type: !61)
!20450 = !DILocalVariable(name: "stack_end", scope: !20446, file: !2039, line: 1129, type: !61)
!20451 = !DILocalVariable(name: "is_match", scope: !20446, file: !2039, line: 1129, type: !61)
!20452 = !DILocation(line: 0, scope: !20446)
!20453 = !DILocation(line: 1131, column: 5, scope: !20446)
!20454 = !DILocation(line: 1136, column: 22, scope: !20455)
!20455 = distinct !DILexicalBlock(scope: !20446, file: !2039, line: 1134, column: 5)
!20456 = !DILocation(line: 1137, column: 21, scope: !20455)
!20457 = !DILocation(line: 1138, column: 63, scope: !20455)
!20458 = !DILocation(line: 1138, column: 9, scope: !20455)
!20459 = !DILocation(line: 1141, column: 5, scope: !20446)
!20460 = !DILocation(line: 1143, column: 5, scope: !20446)
!20461 = !DILocation(line: 1148, column: 5, scope: !20446)
!20462 = distinct !{!20462, !20461, !20463}
!20463 = !DILocation(line: 1148, column: 14, scope: !20446)
!20464 = distinct !DISubprogram(name: "CommonFault_Handler", scope: !2039, file: !2039, line: 1165, type: !154, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20465 = !DILocation(line: 1167, column: 5, scope: !20464)
!20466 = !{i64 35854, i64 35936, i64 35979, i64 36060, i64 36103, i64 36184, i64 36265, i64 36346, i64 36427, i64 36508, i64 36589, i64 36670, i64 36751, i64 36832, i64 36913, i64 36994, i64 37075, i64 37156, i64 37199, i64 37280, i64 37361, i64 37442, i64 37485, i64 37566, i64 37609, i64 37652, i64 37695, i64 37776, i64 37819, i64 37862, i64 37905}
!20467 = !DILocation(line: 1201, column: 1, scope: !20464)
!20468 = distinct !DISubprogram(name: "HardFault_Handler", scope: !2039, file: !2039, line: 1208, type: !154, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20469 = !DILocation(line: 1210, column: 5, scope: !20468)
!20470 = !{i64 38128, i64 38172, i64 38215}
!20471 = !DILocation(line: 1216, column: 1, scope: !20468)
!20472 = distinct !DISubprogram(name: "MemManage_Handler", scope: !2039, file: !2039, line: 1223, type: !154, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20473 = !DILocation(line: 1225, column: 5, scope: !20472)
!20474 = !{i64 38441, i64 38485, i64 38528}
!20475 = !DILocation(line: 1231, column: 1, scope: !20472)
!20476 = distinct !DISubprogram(name: "BusFault_Handler", scope: !2039, file: !2039, line: 1238, type: !154, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20477 = !DILocation(line: 1240, column: 5, scope: !20476)
!20478 = !{i64 38749, i64 38793, i64 38836}
!20479 = !DILocation(line: 1246, column: 1, scope: !20476)
!20480 = distinct !DISubprogram(name: "UsageFault_Handler", scope: !2039, file: !2039, line: 1253, type: !154, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20481 = !DILocation(line: 1255, column: 5, scope: !20480)
!20482 = !{i64 39061, i64 39105, i64 39148}
!20483 = !DILocation(line: 1261, column: 1, scope: !20480)
!20484 = distinct !DISubprogram(name: "DebugMon_Handler", scope: !2039, file: !2039, line: 1264, type: !154, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2038, retainedNodes: !2550)
!20485 = !DILocation(line: 1266, column: 5, scope: !20484)
!20486 = !{i64 39302, i64 39346, i64 39389}
!20487 = !DILocation(line: 1272, column: 1, scope: !20484)
!20488 = distinct !DISubprogram(name: "vApplicationStackOverflowHook", scope: !2518, file: !2518, line: 100, type: !20489, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !20491)
!20489 = !DISubroutineType(types: !20490)
!20490 = !{null, !1806, !491}
!20491 = !{!20492, !20493}
!20492 = !DILocalVariable(name: "xTask", arg: 1, scope: !20488, file: !2518, line: 100, type: !1806)
!20493 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !20488, file: !2518, line: 100, type: !491)
!20494 = !DILocation(line: 0, scope: !20488)
!20495 = !DILocation(line: 102, column: 40, scope: !20488)
!20496 = !DILocation(line: 102, column: 5, scope: !20488)
!20497 = !DILocation(line: 103, column: 5, scope: !20498)
!20498 = distinct !DILexicalBlock(scope: !20499, file: !2518, line: 103, column: 5)
!20499 = distinct !DILexicalBlock(scope: !20488, file: !2518, line: 103, column: 5)
!20500 = !DILocation(line: 104, column: 1, scope: !20488)
!20501 = distinct !DISubprogram(name: "print_module_log", scope: !2237, file: !2237, line: 1102, type: !697, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20502)
!20502 = !{!20503, !20504, !20505, !20506, !20507, !20508}
!20503 = !DILocalVariable(name: "handle", arg: 1, scope: !20501, file: !2237, line: 1102, type: !51)
!20504 = !DILocalVariable(name: "func", arg: 2, scope: !20501, file: !2237, line: 1103, type: !662)
!20505 = !DILocalVariable(name: "line", arg: 3, scope: !20501, file: !2237, line: 1104, type: !7)
!20506 = !DILocalVariable(name: "level", arg: 4, scope: !20501, file: !2237, line: 1105, type: !693)
!20507 = !DILocalVariable(name: "message", arg: 5, scope: !20501, file: !2237, line: 1106, type: !662)
!20508 = !DILocalVariable(name: "ap", scope: !20501, file: !2237, line: 1108, type: !20509)
!20509 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7491, line: 46, baseType: !20510)
!20510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !7493, line: 32, baseType: !20511)
!20511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2237, baseType: !20512)
!20512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !20513)
!20513 = !{!20514}
!20514 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !20512, file: !2237, line: 1044, baseType: !51, size: 32)
!20515 = !DILocation(line: 0, scope: !20501)
!20516 = !DILocation(line: 1108, column: 5, scope: !20501)
!20517 = !DILocation(line: 1108, column: 13, scope: !20501)
!20518 = !DILocation(line: 1109, column: 5, scope: !20501)
!20519 = !DILocation(line: 1110, column: 5, scope: !20501)
!20520 = !DILocation(line: 1111, column: 5, scope: !20501)
!20521 = !DILocation(line: 1112, column: 1, scope: !20501)
!20522 = distinct !DISubprogram(name: "dump_module_buffer", scope: !2237, file: !2237, line: 1200, type: !702, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20523)
!20523 = !{!20524, !20525, !20526, !20527, !20528, !20529, !20530, !20531}
!20524 = !DILocalVariable(name: "handle", arg: 1, scope: !20522, file: !2237, line: 1200, type: !51)
!20525 = !DILocalVariable(name: "func", arg: 2, scope: !20522, file: !2237, line: 1201, type: !662)
!20526 = !DILocalVariable(name: "line", arg: 3, scope: !20522, file: !2237, line: 1202, type: !7)
!20527 = !DILocalVariable(name: "level", arg: 4, scope: !20522, file: !2237, line: 1203, type: !693)
!20528 = !DILocalVariable(name: "data", arg: 5, scope: !20522, file: !2237, line: 1204, type: !704)
!20529 = !DILocalVariable(name: "length", arg: 6, scope: !20522, file: !2237, line: 1205, type: !7)
!20530 = !DILocalVariable(name: "message", arg: 7, scope: !20522, file: !2237, line: 1206, type: !662)
!20531 = !DILocalVariable(name: "ap", scope: !20522, file: !2237, line: 1208, type: !20509)
!20532 = !DILocation(line: 0, scope: !20522)
!20533 = !DILocation(line: 1208, column: 5, scope: !20522)
!20534 = !DILocation(line: 1208, column: 13, scope: !20522)
!20535 = !DILocation(line: 1209, column: 5, scope: !20522)
!20536 = !DILocation(line: 1210, column: 5, scope: !20522)
!20537 = !DILocation(line: 1211, column: 5, scope: !20522)
!20538 = !DILocation(line: 1212, column: 1, scope: !20522)
!20539 = distinct !DISubprogram(name: "vdump_module_buffer", scope: !2237, file: !2237, line: 1114, type: !20540, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20542)
!20540 = !DISubroutineType(types: !20541)
!20541 = !{null, !51, !662, !7, !693, !704, !7, !662, !20509}
!20542 = !{!20543, !20544, !20545, !20546, !20547, !20548, !20549, !20550, !20551, !20552, !20553, !20560, !20562, !20563}
!20543 = !DILocalVariable(name: "handle", arg: 1, scope: !20539, file: !2237, line: 1114, type: !51)
!20544 = !DILocalVariable(name: "func", arg: 2, scope: !20539, file: !2237, line: 1115, type: !662)
!20545 = !DILocalVariable(name: "line", arg: 3, scope: !20539, file: !2237, line: 1116, type: !7)
!20546 = !DILocalVariable(name: "level", arg: 4, scope: !20539, file: !2237, line: 1117, type: !693)
!20547 = !DILocalVariable(name: "data", arg: 5, scope: !20539, file: !2237, line: 1118, type: !704)
!20548 = !DILocalVariable(name: "length", arg: 6, scope: !20539, file: !2237, line: 1119, type: !7)
!20549 = !DILocalVariable(name: "message", arg: 7, scope: !20539, file: !2237, line: 1120, type: !662)
!20550 = !DILocalVariable(name: "list", arg: 8, scope: !20539, file: !2237, line: 1121, type: !20509)
!20551 = !DILocalVariable(name: "context", scope: !20539, file: !2237, line: 1123, type: !2304)
!20552 = !DILocalVariable(name: "additional_length", scope: !20539, file: !2237, line: 1124, type: !7)
!20553 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !20554, file: !2237, line: 1133, type: !1800)
!20554 = distinct !DILexicalBlock(scope: !20555, file: !2237, line: 1132, column: 39)
!20555 = distinct !DILexicalBlock(scope: !20556, file: !2237, line: 1132, column: 17)
!20556 = distinct !DILexicalBlock(scope: !20557, file: !2237, line: 1131, column: 62)
!20557 = distinct !DILexicalBlock(scope: !20558, file: !2237, line: 1129, column: 13)
!20558 = distinct !DILexicalBlock(scope: !20559, file: !2237, line: 1127, column: 49)
!20559 = distinct !DILexicalBlock(scope: !20539, file: !2237, line: 1126, column: 9)
!20560 = !DILocalVariable(name: "syslog_buffer", scope: !20561, file: !2237, line: 1151, type: !2313)
!20561 = distinct !DILexicalBlock(scope: !20557, file: !2237, line: 1149, column: 16)
!20562 = !DILocalVariable(name: "log_message", scope: !20561, file: !2237, line: 1152, type: !2265)
!20563 = !DILocalVariable(name: "hex_dump_message", scope: !20561, file: !2237, line: 1153, type: !20564)
!20564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!20565 = !DILocation(line: 0, scope: !20539)
!20566 = !DILocation(line: 1126, column: 19, scope: !20559)
!20567 = !DILocation(line: 1126, column: 30, scope: !20559)
!20568 = !DILocation(line: 1127, column: 13, scope: !20559)
!20569 = !DILocation(line: 1127, column: 26, scope: !20559)
!20570 = !DILocation(line: 1127, column: 38, scope: !20559)
!20571 = !DILocation(line: 1126, column: 9, scope: !20539)
!20572 = !DILocation(line: 1129, column: 14, scope: !20557)
!20573 = !DILocation(line: 1130, column: 17, scope: !20557)
!20574 = !DILocation(line: 1130, column: 21, scope: !20557)
!20575 = !DILocation(line: 1130, column: 46, scope: !20557)
!20576 = !DILocation(line: 1131, column: 21, scope: !20557)
!20577 = !DILocation(line: 1131, column: 25, scope: !20557)
!20578 = !DILocation(line: 1131, column: 47, scope: !20557)
!20579 = !DILocation(line: 1131, column: 55, scope: !20557)
!20580 = !DILocation(line: 1129, column: 13, scope: !20558)
!20581 = !DILocation(line: 1132, column: 17, scope: !20555)
!20582 = !DILocation(line: 1132, column: 34, scope: !20555)
!20583 = !DILocation(line: 1132, column: 17, scope: !20556)
!20584 = !DILocation(line: 231, column: 2, scope: !20585, inlinedAt: !20589)
!20585 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1801, file: !1801, line: 227, type: !2531, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20586)
!20586 = !{!20587, !20588}
!20587 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !20585, file: !1801, line: 229, type: !61)
!20588 = !DILocalVariable(name: "ulNewBASEPRI", scope: !20585, file: !1801, line: 229, type: !61)
!20589 = distinct !DILocation(line: 1134, column: 42, scope: !20554)
!20590 = !{i64 690507, i64 690544, i64 690576, i64 690612, i64 690639}
!20591 = !DILocation(line: 0, scope: !20585, inlinedAt: !20589)
!20592 = !DILocation(line: 0, scope: !20554)
!20593 = !DILocation(line: 1135, column: 21, scope: !20594)
!20594 = distinct !DILexicalBlock(scope: !20554, file: !2237, line: 1135, column: 21)
!20595 = !DILocation(line: 1135, column: 38, scope: !20594)
!20596 = !DILocation(line: 1135, column: 21, scope: !20554)
!20597 = !DILocation(line: 1138, column: 28, scope: !20598)
!20598 = distinct !DILexicalBlock(scope: !20594, file: !2237, line: 1135, column: 63)
!20599 = !DILocation(line: 1139, column: 37, scope: !20598)
!20600 = !DILocation(line: 1140, column: 28, scope: !20598)
!20601 = !DILocation(line: 1137, column: 21, scope: !20598)
!20602 = !DILocation(line: 1143, column: 17, scope: !20598)
!20603 = !DILocation(line: 1144, column: 17, scope: !20554)
!20604 = !DILocation(line: 1145, column: 17, scope: !20554)
!20605 = !DILocation(line: 1146, column: 17, scope: !20554)
!20606 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !20607, file: !1801, line: 247, type: !61)
!20607 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1801, file: !1801, line: 247, type: !4770, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20608)
!20608 = !{!20606}
!20609 = !DILocation(line: 0, scope: !20607, inlinedAt: !20610)
!20610 = distinct !DILocation(line: 1147, column: 17, scope: !20554)
!20611 = !DILocation(line: 249, column: 2, scope: !20607, inlinedAt: !20610)
!20612 = !{i64 691040}
!20613 = !DILocation(line: 1148, column: 13, scope: !20554)
!20614 = !DILocation(line: 1151, column: 13, scope: !20561)
!20615 = !DILocation(line: 1151, column: 46, scope: !20561)
!20616 = !DILocation(line: 0, scope: !20561)
!20617 = !DILocation(line: 1151, column: 30, scope: !20561)
!20618 = !DILocation(line: 1155, column: 22, scope: !20619)
!20619 = distinct !DILexicalBlock(scope: !20561, file: !2237, line: 1155, column: 17)
!20620 = !DILocation(line: 1155, column: 17, scope: !20561)
!20621 = !DILocation(line: 1159, column: 44, scope: !20561)
!20622 = !DILocation(line: 1160, column: 26, scope: !20561)
!20623 = !DILocation(line: 1160, column: 39, scope: !20561)
!20624 = !DILocation(line: 1161, column: 46, scope: !20561)
!20625 = !DILocation(line: 1162, column: 54, scope: !20561)
!20626 = !DILocation(line: 1162, column: 31, scope: !20561)
!20627 = !DILocation(line: 1162, column: 43, scope: !20561)
!20628 = !DILocation(line: 1163, column: 31, scope: !20561)
!20629 = !DILocation(line: 1163, column: 43, scope: !20561)
!20630 = !DILocation(line: 1164, column: 31, scope: !20561)
!20631 = !DILocation(line: 1164, column: 41, scope: !20561)
!20632 = !DILocation(line: 1165, column: 31, scope: !20561)
!20633 = !DILocation(line: 1165, column: 43, scope: !20561)
!20634 = !DILocation(line: 1166, column: 43, scope: !20561)
!20635 = !DILocation(line: 1166, column: 31, scope: !20561)
!20636 = !DILocation(line: 1166, column: 41, scope: !20561)
!20637 = !DILocation(line: 1170, column: 47, scope: !20561)
!20638 = !DILocation(line: 1170, column: 19, scope: !20561)
!20639 = !DILocation(line: 1172, column: 17, scope: !20561)
!20640 = !DILocation(line: 1177, column: 24, scope: !20641)
!20641 = distinct !DILexicalBlock(scope: !20561, file: !2237, line: 1177, column: 17)
!20642 = !DILocation(line: 1177, column: 17, scope: !20561)
!20643 = !DILocation(line: 1178, column: 23, scope: !20644)
!20644 = distinct !DILexicalBlock(scope: !20645, file: !2237, line: 1178, column: 22)
!20645 = distinct !DILexicalBlock(scope: !20641, file: !2237, line: 1177, column: 46)
!20646 = !DILocation(line: 1178, column: 45, scope: !20644)
!20647 = !DILocation(line: 1178, column: 53, scope: !20644)
!20648 = !DILocation(line: 0, scope: !20645)
!20649 = !DILocation(line: 1184, column: 38, scope: !20561)
!20650 = !DILocation(line: 1184, column: 13, scope: !20561)
!20651 = !DILocation(line: 1185, column: 31, scope: !20561)
!20652 = !DILocation(line: 1185, column: 43, scope: !20561)
!20653 = !DILocation(line: 1187, column: 31, scope: !20561)
!20654 = !DILocation(line: 1187, column: 47, scope: !20561)
!20655 = !DILocation(line: 1188, column: 17, scope: !20656)
!20656 = distinct !DILexicalBlock(scope: !20561, file: !2237, line: 1188, column: 17)
!20657 = !DILocation(line: 1188, column: 17, scope: !20561)
!20658 = !DILocation(line: 1189, column: 67, scope: !20659)
!20659 = distinct !DILexicalBlock(scope: !20660, file: !2237, line: 1189, column: 21)
!20660 = distinct !DILexicalBlock(scope: !20656, file: !2237, line: 1188, column: 36)
!20661 = !DILocation(line: 1189, column: 56, scope: !20659)
!20662 = !DILocation(line: 1189, column: 100, scope: !20659)
!20663 = !DILocation(line: 1189, column: 21, scope: !20660)
!20664 = !DILocation(line: 1190, column: 76, scope: !20665)
!20665 = distinct !DILexicalBlock(scope: !20659, file: !2237, line: 1189, column: 109)
!20666 = !DILocation(line: 1190, column: 21, scope: !20665)
!20667 = !DILocation(line: 1191, column: 51, scope: !20665)
!20668 = !DILocation(line: 1192, column: 17, scope: !20665)
!20669 = !DILocation(line: 1195, column: 13, scope: !20561)
!20670 = !DILocation(line: 1196, column: 9, scope: !20557)
!20671 = !DILocation(line: 1198, column: 1, scope: !20539)
!20672 = distinct !DISubprogram(name: "get_current_time_in_ms", scope: !2237, file: !2237, line: 601, type: !20673, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20675)
!20673 = !DISubroutineType(types: !20674)
!20674 = !{!30}
!20675 = !{!20676, !20677}
!20676 = !DILocalVariable(name: "count", scope: !20672, file: !2237, line: 603, type: !61)
!20677 = !DILocalVariable(name: "count64", scope: !20672, file: !2237, line: 604, type: !2322)
!20678 = !DILocation(line: 603, column: 5, scope: !20672)
!20679 = !DILocation(line: 0, scope: !20672)
!20680 = !DILocation(line: 603, column: 14, scope: !20672)
!20681 = !DILocation(line: 605, column: 5, scope: !20672)
!20682 = !DILocation(line: 606, column: 26, scope: !20672)
!20683 = !DILocation(line: 606, column: 16, scope: !20672)
!20684 = !DILocation(line: 606, column: 32, scope: !20672)
!20685 = !DILocation(line: 606, column: 37, scope: !20672)
!20686 = !DILocation(line: 607, column: 12, scope: !20672)
!20687 = !DILocation(line: 608, column: 1, scope: !20672)
!20688 = !DILocation(line: 607, column: 5, scope: !20672)
!20689 = distinct !DISubprogram(name: "hex_dump_data", scope: !2237, file: !2237, line: 865, type: !20690, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20692)
!20690 = !DISubroutineType(types: !20691)
!20691 = !{null, !662, !7}
!20692 = !{!20693, !20694, !20695}
!20693 = !DILocalVariable(name: "data", arg: 1, scope: !20689, file: !2237, line: 865, type: !662)
!20694 = !DILocalVariable(name: "length", arg: 2, scope: !20689, file: !2237, line: 865, type: !7)
!20695 = !DILocalVariable(name: "index", scope: !20689, file: !2237, line: 867, type: !7)
!20696 = !DILocation(line: 0, scope: !20689)
!20697 = !DILocation(line: 868, column: 27, scope: !20698)
!20698 = distinct !DILexicalBlock(scope: !20699, file: !2237, line: 868, column: 5)
!20699 = distinct !DILexicalBlock(scope: !20689, file: !2237, line: 868, column: 5)
!20700 = !DILocation(line: 868, column: 5, scope: !20699)
!20701 = !DILocation(line: 869, column: 30, scope: !20702)
!20702 = distinct !DILexicalBlock(scope: !20698, file: !2237, line: 868, column: 46)
!20703 = !DILocation(line: 869, column: 24, scope: !20702)
!20704 = !DILocation(line: 869, column: 9, scope: !20702)
!20705 = !DILocation(line: 870, column: 20, scope: !20706)
!20706 = distinct !DILexicalBlock(scope: !20702, file: !2237, line: 870, column: 13)
!20707 = !DILocation(line: 870, column: 25, scope: !20706)
!20708 = !DILocation(line: 870, column: 30, scope: !20706)
!20709 = !DILocation(line: 870, column: 13, scope: !20702)
!20710 = !DILocation(line: 874, column: 23, scope: !20711)
!20711 = distinct !DILexicalBlock(scope: !20702, file: !2237, line: 874, column: 13)
!20712 = !DILocation(line: 874, column: 13, scope: !20702)
!20713 = !DILocation(line: 0, scope: !20702)
!20714 = distinct !{!20714, !20700, !20715}
!20715 = !DILocation(line: 877, column: 5, scope: !20699)
!20716 = !DILocation(line: 878, column: 20, scope: !20717)
!20717 = distinct !DILexicalBlock(scope: !20689, file: !2237, line: 878, column: 9)
!20718 = !DILocation(line: 879, column: 9, scope: !20719)
!20719 = distinct !DILexicalBlock(scope: !20717, file: !2237, line: 878, column: 40)
!20720 = !DILocation(line: 880, column: 5, scope: !20719)
!20721 = !DILocation(line: 881, column: 1, scope: !20689)
!20722 = distinct !DISubprogram(name: "buffer_pool_alloc", scope: !2237, file: !2237, line: 562, type: !20723, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20725)
!20723 = !DISubroutineType(types: !20724)
!20724 = !{!2313}
!20725 = !{!20726, !20727}
!20726 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !20722, file: !2237, line: 564, type: !1800)
!20727 = !DILocalVariable(name: "index", scope: !20722, file: !2237, line: 565, type: !61)
!20728 = !DILocation(line: 231, column: 2, scope: !20585, inlinedAt: !20729)
!20729 = distinct !DILocation(line: 567, column: 30, scope: !20722)
!20730 = !DILocation(line: 0, scope: !20585, inlinedAt: !20729)
!20731 = !DILocation(line: 0, scope: !20722)
!20732 = !DILocation(line: 568, column: 5, scope: !20733)
!20733 = distinct !DILexicalBlock(scope: !20722, file: !2237, line: 568, column: 5)
!20734 = !DILocation(line: 568, column: 50, scope: !20735)
!20735 = distinct !DILexicalBlock(scope: !20733, file: !2237, line: 568, column: 5)
!20736 = !DILocation(line: 568, column: 27, scope: !20735)
!20737 = distinct !{!20737, !20732, !20738}
!20738 = !DILocation(line: 574, column: 5, scope: !20733)
!20739 = !DILocation(line: 569, column: 14, scope: !20740)
!20740 = distinct !DILexicalBlock(scope: !20741, file: !2237, line: 569, column: 13)
!20741 = distinct !DILexicalBlock(scope: !20735, file: !2237, line: 568, column: 54)
!20742 = !DILocation(line: 569, column: 40, scope: !20740)
!20743 = !DILocation(line: 569, column: 13, scope: !20741)
!20744 = !DILocation(line: 570, column: 48, scope: !20745)
!20745 = distinct !DILexicalBlock(scope: !20740, file: !2237, line: 569, column: 50)
!20746 = !DILocation(line: 0, scope: !20607, inlinedAt: !20747)
!20747 = distinct !DILocation(line: 571, column: 13, scope: !20745)
!20748 = !DILocation(line: 249, column: 2, scope: !20607, inlinedAt: !20747)
!20749 = !DILocation(line: 572, column: 13, scope: !20745)
!20750 = !DILocation(line: 575, column: 22, scope: !20722)
!20751 = !DILocation(line: 0, scope: !20607, inlinedAt: !20752)
!20752 = distinct !DILocation(line: 576, column: 5, scope: !20722)
!20753 = !DILocation(line: 249, column: 2, scope: !20607, inlinedAt: !20752)
!20754 = !DILocation(line: 582, column: 5, scope: !20722)
!20755 = !DILocation(line: 583, column: 1, scope: !20722)
!20756 = distinct !DISubprogram(name: "log_queue_send", scope: !2237, file: !2237, line: 621, type: !20757, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20760)
!20757 = !DISubroutineType(types: !20758)
!20758 = !{null, !20759}
!20759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!20760 = !{!20761, !20762}
!20761 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !20756, file: !2237, line: 621, type: !20759)
!20762 = !DILocalVariable(name: "xTaskWokenByPost", scope: !20763, file: !2237, line: 624, type: !1807)
!20763 = distinct !DILexicalBlock(scope: !20764, file: !2237, line: 623, column: 39)
!20764 = distinct !DILexicalBlock(scope: !20756, file: !2237, line: 623, column: 9)
!20765 = !DILocation(line: 0, scope: !20756)
!20766 = !DILocation(line: 623, column: 9, scope: !20764)
!20767 = !DILocation(line: 623, column: 31, scope: !20764)
!20768 = !DILocation(line: 623, column: 9, scope: !20756)
!20769 = !DILocation(line: 624, column: 9, scope: !20763)
!20770 = !DILocation(line: 0, scope: !20763)
!20771 = !DILocation(line: 624, column: 20, scope: !20763)
!20772 = !DILocation(line: 625, column: 13, scope: !20773)
!20773 = distinct !DILexicalBlock(scope: !20763, file: !2237, line: 625, column: 13)
!20774 = !DILocation(line: 625, column: 75, scope: !20773)
!20775 = !DILocation(line: 625, column: 13, scope: !20763)
!20776 = !DILocation(line: 626, column: 33, scope: !20777)
!20777 = distinct !DILexicalBlock(scope: !20773, file: !2237, line: 625, column: 95)
!20778 = !DILocation(line: 626, column: 13, scope: !20777)
!20779 = !DILocation(line: 627, column: 9, scope: !20777)
!20780 = !DILocation(line: 628, column: 13, scope: !20781)
!20781 = distinct !DILexicalBlock(scope: !20782, file: !2237, line: 628, column: 13)
!20782 = distinct !DILexicalBlock(scope: !20773, file: !2237, line: 627, column: 16)
!20783 = !DILocation(line: 628, column: 13, scope: !20782)
!20784 = !DILocation(line: 628, column: 13, scope: !20785)
!20785 = distinct !DILexicalBlock(scope: !20781, file: !2237, line: 628, column: 13)
!20786 = !{i64 2148485198}
!20787 = !{i64 2148485238}
!20788 = !DILocation(line: 630, column: 5, scope: !20764)
!20789 = !DILocation(line: 630, column: 5, scope: !20763)
!20790 = !DILocation(line: 631, column: 9, scope: !20791)
!20791 = distinct !DILexicalBlock(scope: !20764, file: !2237, line: 630, column: 12)
!20792 = !DILocation(line: 633, column: 1, scope: !20756)
!20793 = distinct !DISubprogram(name: "buffer_pool_release", scope: !2237, file: !2237, line: 587, type: !20794, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20796)
!20794 = !DISubroutineType(types: !20795)
!20795 = !{null, !2313}
!20796 = !{!20797, !20798, !20799}
!20797 = !DILocalVariable(name: "syslog_buffer", arg: 1, scope: !20793, file: !2237, line: 587, type: !2313)
!20798 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !20793, file: !2237, line: 589, type: !1800)
!20799 = !DILocalVariable(name: "log_message", scope: !20793, file: !2237, line: 590, type: !2265)
!20800 = !DILocation(line: 0, scope: !20793)
!20801 = !DILocation(line: 590, column: 51, scope: !20793)
!20802 = !DILocation(line: 231, column: 2, scope: !20585, inlinedAt: !20803)
!20803 = distinct !DILocation(line: 592, column: 30, scope: !20793)
!20804 = !DILocation(line: 0, scope: !20585, inlinedAt: !20803)
!20805 = !DILocation(line: 593, column: 20, scope: !20793)
!20806 = !DILocation(line: 593, column: 29, scope: !20793)
!20807 = !DILocation(line: 594, column: 23, scope: !20808)
!20808 = distinct !DILexicalBlock(scope: !20793, file: !2237, line: 594, column: 9)
!20809 = !DILocation(line: 594, column: 36, scope: !20808)
!20810 = !DILocation(line: 595, column: 13, scope: !20808)
!20811 = !DILocation(line: 595, column: 49, scope: !20808)
!20812 = !DILocation(line: 595, column: 16, scope: !20808)
!20813 = !DILocation(line: 594, column: 9, scope: !20793)
!20814 = !DILocation(line: 596, column: 9, scope: !20815)
!20815 = distinct !DILexicalBlock(scope: !20808, file: !2237, line: 595, column: 68)
!20816 = !DILocation(line: 597, column: 5, scope: !20815)
!20817 = !DILocation(line: 0, scope: !20607, inlinedAt: !20818)
!20818 = distinct !DILocation(line: 598, column: 5, scope: !20793)
!20819 = !DILocation(line: 249, column: 2, scope: !20607, inlinedAt: !20818)
!20820 = !DILocation(line: 599, column: 1, scope: !20793)
!20821 = distinct !DISubprogram(name: "vprint_module_log", scope: !2237, file: !2237, line: 1046, type: !20822, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20824)
!20822 = !DISubroutineType(types: !20823)
!20823 = !{null, !51, !662, !7, !693, !662, !20509}
!20824 = !{!20825, !20826, !20827, !20828, !20829, !20830, !20831, !20832, !20839, !20841, !20842}
!20825 = !DILocalVariable(name: "handle", arg: 1, scope: !20821, file: !2237, line: 1046, type: !51)
!20826 = !DILocalVariable(name: "func", arg: 2, scope: !20821, file: !2237, line: 1047, type: !662)
!20827 = !DILocalVariable(name: "line", arg: 3, scope: !20821, file: !2237, line: 1048, type: !7)
!20828 = !DILocalVariable(name: "level", arg: 4, scope: !20821, file: !2237, line: 1049, type: !693)
!20829 = !DILocalVariable(name: "message", arg: 5, scope: !20821, file: !2237, line: 1050, type: !662)
!20830 = !DILocalVariable(name: "list", arg: 6, scope: !20821, file: !2237, line: 1051, type: !20509)
!20831 = !DILocalVariable(name: "context", scope: !20821, file: !2237, line: 1053, type: !2304)
!20832 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !20833, file: !2237, line: 1061, type: !1800)
!20833 = distinct !DILexicalBlock(scope: !20834, file: !2237, line: 1060, column: 39)
!20834 = distinct !DILexicalBlock(scope: !20835, file: !2237, line: 1060, column: 17)
!20835 = distinct !DILexicalBlock(scope: !20836, file: !2237, line: 1059, column: 62)
!20836 = distinct !DILexicalBlock(scope: !20837, file: !2237, line: 1057, column: 13)
!20837 = distinct !DILexicalBlock(scope: !20838, file: !2237, line: 1055, column: 49)
!20838 = distinct !DILexicalBlock(scope: !20821, file: !2237, line: 1054, column: 9)
!20839 = !DILocalVariable(name: "syslog_buffer", scope: !20840, file: !2237, line: 1078, type: !2313)
!20840 = distinct !DILexicalBlock(scope: !20836, file: !2237, line: 1076, column: 16)
!20841 = !DILocalVariable(name: "log_message", scope: !20840, file: !2237, line: 1079, type: !2265)
!20842 = !DILocalVariable(name: "normal_log_message", scope: !20840, file: !2237, line: 1080, type: !20843)
!20843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!20844 = !DILocation(line: 0, scope: !20821)
!20845 = !DILocation(line: 1054, column: 19, scope: !20838)
!20846 = !DILocation(line: 1054, column: 30, scope: !20838)
!20847 = !DILocation(line: 1055, column: 13, scope: !20838)
!20848 = !DILocation(line: 1055, column: 26, scope: !20838)
!20849 = !DILocation(line: 1055, column: 38, scope: !20838)
!20850 = !DILocation(line: 1054, column: 9, scope: !20821)
!20851 = !DILocation(line: 1057, column: 14, scope: !20836)
!20852 = !DILocation(line: 1058, column: 17, scope: !20836)
!20853 = !DILocation(line: 1058, column: 21, scope: !20836)
!20854 = !DILocation(line: 1058, column: 46, scope: !20836)
!20855 = !DILocation(line: 1059, column: 21, scope: !20836)
!20856 = !DILocation(line: 1059, column: 25, scope: !20836)
!20857 = !DILocation(line: 1059, column: 47, scope: !20836)
!20858 = !DILocation(line: 1059, column: 55, scope: !20836)
!20859 = !DILocation(line: 1057, column: 13, scope: !20837)
!20860 = !DILocation(line: 1060, column: 17, scope: !20834)
!20861 = !DILocation(line: 1060, column: 34, scope: !20834)
!20862 = !DILocation(line: 1060, column: 17, scope: !20835)
!20863 = !DILocation(line: 231, column: 2, scope: !20585, inlinedAt: !20864)
!20864 = distinct !DILocation(line: 1062, column: 42, scope: !20833)
!20865 = !DILocation(line: 0, scope: !20585, inlinedAt: !20864)
!20866 = !DILocation(line: 0, scope: !20833)
!20867 = !DILocation(line: 1063, column: 21, scope: !20868)
!20868 = distinct !DILexicalBlock(scope: !20833, file: !2237, line: 1063, column: 21)
!20869 = !DILocation(line: 1063, column: 38, scope: !20868)
!20870 = !DILocation(line: 1063, column: 21, scope: !20833)
!20871 = !DILocation(line: 1066, column: 28, scope: !20872)
!20872 = distinct !DILexicalBlock(scope: !20868, file: !2237, line: 1063, column: 63)
!20873 = !DILocation(line: 1067, column: 37, scope: !20872)
!20874 = !DILocation(line: 1068, column: 28, scope: !20872)
!20875 = !DILocation(line: 1065, column: 21, scope: !20872)
!20876 = !DILocation(line: 1071, column: 17, scope: !20872)
!20877 = !DILocation(line: 1072, column: 17, scope: !20833)
!20878 = !DILocation(line: 1073, column: 17, scope: !20833)
!20879 = !DILocation(line: 0, scope: !20607, inlinedAt: !20880)
!20880 = distinct !DILocation(line: 1074, column: 17, scope: !20833)
!20881 = !DILocation(line: 249, column: 2, scope: !20607, inlinedAt: !20880)
!20882 = !DILocation(line: 1075, column: 13, scope: !20833)
!20883 = !DILocation(line: 1078, column: 13, scope: !20840)
!20884 = !DILocation(line: 1078, column: 46, scope: !20840)
!20885 = !DILocation(line: 0, scope: !20840)
!20886 = !DILocation(line: 1078, column: 30, scope: !20840)
!20887 = !DILocation(line: 1082, column: 22, scope: !20888)
!20888 = distinct !DILexicalBlock(scope: !20840, file: !2237, line: 1082, column: 17)
!20889 = !DILocation(line: 1082, column: 17, scope: !20840)
!20890 = !DILocation(line: 1085, column: 44, scope: !20840)
!20891 = !DILocation(line: 1086, column: 26, scope: !20840)
!20892 = !DILocation(line: 1086, column: 39, scope: !20840)
!20893 = !DILocation(line: 1087, column: 48, scope: !20840)
!20894 = !DILocation(line: 1088, column: 56, scope: !20840)
!20895 = !DILocation(line: 1088, column: 33, scope: !20840)
!20896 = !DILocation(line: 1088, column: 45, scope: !20840)
!20897 = !DILocation(line: 1089, column: 33, scope: !20840)
!20898 = !DILocation(line: 1089, column: 45, scope: !20840)
!20899 = !DILocation(line: 1090, column: 33, scope: !20840)
!20900 = !DILocation(line: 1090, column: 43, scope: !20840)
!20901 = !DILocation(line: 1091, column: 33, scope: !20840)
!20902 = !DILocation(line: 1091, column: 45, scope: !20840)
!20903 = !DILocation(line: 1092, column: 45, scope: !20840)
!20904 = !DILocation(line: 1092, column: 33, scope: !20840)
!20905 = !DILocation(line: 1092, column: 43, scope: !20840)
!20906 = !DILocation(line: 1096, column: 49, scope: !20840)
!20907 = !DILocation(line: 1096, column: 19, scope: !20840)
!20908 = !DILocation(line: 1097, column: 13, scope: !20840)
!20909 = !DILocation(line: 1098, column: 9, scope: !20836)
!20910 = !DILocation(line: 1100, column: 1, scope: !20821)
!20911 = distinct !DISubprogram(name: "log_uart_init", scope: !2237, file: !2237, line: 185, type: !9174, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20912)
!20912 = !{!20913, !20914, !20922}
!20913 = !DILocalVariable(name: "port", arg: 1, scope: !20911, file: !2237, line: 185, type: !1161)
!20914 = !DILocalVariable(name: "uart_config", scope: !20911, file: !2237, line: 187, type: !20915)
!20915 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !1056, line: 378, baseType: !20916)
!20916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1056, line: 373, size: 128, elements: !20917)
!20917 = !{!20918, !20919, !20920, !20921}
!20918 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !20916, file: !1056, line: 374, baseType: !1118, size: 32)
!20919 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !20916, file: !1056, line: 375, baseType: !1120, size: 32, offset: 32)
!20920 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !20916, file: !1056, line: 376, baseType: !1122, size: 32, offset: 64)
!20921 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !20916, file: !1056, line: 377, baseType: !1124, size: 32, offset: 96)
!20922 = !DILocalVariable(name: "ret", scope: !20911, file: !2237, line: 188, type: !9023)
!20923 = !DILocation(line: 0, scope: !20911)
!20924 = !DILocation(line: 187, column: 5, scope: !20911)
!20925 = !DILocation(line: 187, column: 23, scope: !20911)
!20926 = !DILocation(line: 191, column: 17, scope: !20911)
!20927 = !DILocation(line: 191, column: 26, scope: !20911)
!20928 = !DILocation(line: 192, column: 17, scope: !20911)
!20929 = !DILocation(line: 192, column: 24, scope: !20911)
!20930 = !DILocation(line: 193, column: 17, scope: !20911)
!20931 = !DILocation(line: 193, column: 26, scope: !20911)
!20932 = !DILocation(line: 194, column: 17, scope: !20911)
!20933 = !DILocation(line: 194, column: 29, scope: !20911)
!20934 = !DILocation(line: 196, column: 21, scope: !20911)
!20935 = !DILocation(line: 197, column: 11, scope: !20911)
!20936 = !DILocation(line: 199, column: 22, scope: !20911)
!20937 = !DILocation(line: 202, column: 1, scope: !20911)
!20938 = !DILocation(line: 201, column: 5, scope: !20911)
!20939 = distinct !DISubprogram(name: "log_putchar", scope: !2237, file: !2237, line: 204, type: !20940, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20942)
!20940 = !DISubroutineType(types: !20941)
!20941 = !{null, !492}
!20942 = !{!20943}
!20943 = !DILocalVariable(name: "byte", arg: 1, scope: !20939, file: !2237, line: 204, type: !492)
!20944 = !DILocation(line: 0, scope: !20939)
!20945 = !DILocation(line: 206, column: 23, scope: !20939)
!20946 = !DILocation(line: 206, column: 5, scope: !20939)
!20947 = !DILocation(line: 207, column: 1, scope: !20939)
!20948 = distinct !DISubprogram(name: "buffer_pool_init", scope: !2237, file: !2237, line: 524, type: !154, scopeLine: 525, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !2550)
!20949 = !DILocation(line: 526, column: 5, scope: !20948)
!20950 = !DILocation(line: 527, column: 1, scope: !20948)
!20951 = distinct !DISubprogram(name: "log_queue_create", scope: !2237, file: !2237, line: 613, type: !154, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !2550)
!20952 = !DILocation(line: 615, column: 19, scope: !20951)
!20953 = !DILocation(line: 615, column: 17, scope: !20951)
!20954 = !DILocation(line: 616, column: 14, scope: !20955)
!20955 = distinct !DILexicalBlock(scope: !20951, file: !2237, line: 616, column: 9)
!20956 = !DILocation(line: 616, column: 9, scope: !20951)
!20957 = !DILocation(line: 617, column: 9, scope: !20958)
!20958 = distinct !DILexicalBlock(scope: !20955, file: !2237, line: 616, column: 30)
!20959 = !DILocation(line: 618, column: 5, scope: !20958)
!20960 = !DILocation(line: 619, column: 1, scope: !20951)
!20961 = distinct !DISubprogram(name: "log_queue_receive", scope: !2237, file: !2237, line: 635, type: !20962, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20964)
!20962 = !DISubroutineType(types: !20963)
!20963 = !{!7, !20759}
!20964 = !{!20965, !20966}
!20965 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !20961, file: !2237, line: 635, type: !20759)
!20966 = !DILocalVariable(name: "ret_val", scope: !20961, file: !2237, line: 637, type: !1807)
!20967 = !DILocation(line: 0, scope: !20961)
!20968 = !DILocation(line: 637, column: 26, scope: !20961)
!20969 = !DILocation(line: 638, column: 20, scope: !20961)
!20970 = !DILocation(line: 638, column: 12, scope: !20961)
!20971 = !DILocation(line: 638, column: 5, scope: !20961)
!20972 = distinct !DISubprogram(name: "print_normal_log", scope: !2237, file: !2237, line: 854, type: !20973, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20977)
!20973 = !DISubroutineType(types: !20974)
!20974 = !{null, !20975}
!20975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20976, size: 32)
!20976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2275)
!20977 = !{!20978}
!20978 = !DILocalVariable(name: "normal_log_message", arg: 1, scope: !20972, file: !2237, line: 854, type: !20975)
!20979 = !DILocation(line: 0, scope: !20972)
!20980 = !DILocation(line: 857, column: 46, scope: !20972)
!20981 = !DILocation(line: 858, column: 32, scope: !20972)
!20982 = !DILocation(line: 859, column: 12, scope: !20972)
!20983 = !DILocation(line: 860, column: 32, scope: !20972)
!20984 = !DILocation(line: 861, column: 32, scope: !20972)
!20985 = !DILocation(line: 856, column: 5, scope: !20972)
!20986 = !DILocation(line: 862, column: 30, scope: !20972)
!20987 = !DILocation(line: 862, column: 5, scope: !20972)
!20988 = !DILocation(line: 863, column: 1, scope: !20972)
!20989 = distinct !DISubprogram(name: "print_hex_dump", scope: !2237, file: !2237, line: 883, type: !20990, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !20994)
!20990 = !DISubroutineType(types: !20991)
!20991 = !{null, !20992}
!20992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20993, size: 32)
!20993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2288)
!20994 = !{!20995}
!20995 = !DILocalVariable(name: "hex_dump_message", arg: 1, scope: !20989, file: !2237, line: 883, type: !20992)
!20996 = !DILocation(line: 0, scope: !20989)
!20997 = !DILocation(line: 886, column: 44, scope: !20989)
!20998 = !DILocation(line: 887, column: 30, scope: !20989)
!20999 = !DILocation(line: 888, column: 12, scope: !20989)
!21000 = !DILocation(line: 889, column: 30, scope: !20989)
!21001 = !DILocation(line: 890, column: 30, scope: !20989)
!21002 = !DILocation(line: 885, column: 5, scope: !20989)
!21003 = !DILocation(line: 891, column: 30, scope: !20989)
!21004 = !DILocation(line: 891, column: 5, scope: !20989)
!21005 = !DILocation(line: 892, column: 27, scope: !21006)
!21006 = distinct !DILexicalBlock(scope: !20989, file: !2237, line: 892, column: 9)
!21007 = !DILocation(line: 892, column: 39, scope: !21006)
!21008 = !DILocation(line: 0, scope: !21006)
!21009 = !DILocation(line: 892, column: 9, scope: !20989)
!21010 = !DILocation(line: 893, column: 9, scope: !21011)
!21011 = distinct !DILexicalBlock(scope: !21006, file: !2237, line: 892, column: 61)
!21012 = !DILocation(line: 894, column: 41, scope: !21011)
!21013 = !DILocation(line: 894, column: 76, scope: !21011)
!21014 = !DILocation(line: 894, column: 88, scope: !21011)
!21015 = !DILocation(line: 894, column: 9, scope: !21011)
!21016 = !DILocation(line: 895, column: 5, scope: !21011)
!21017 = !DILocation(line: 896, column: 9, scope: !21018)
!21018 = distinct !DILexicalBlock(scope: !21006, file: !2237, line: 895, column: 12)
!21019 = !DILocation(line: 898, column: 1, scope: !20989)
!21020 = distinct !DISubprogram(name: "process_log_message", scope: !2237, file: !2237, line: 900, type: !21021, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21025)
!21021 = !DISubroutineType(types: !21022)
!21022 = !{null, !21023}
!21023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21024, size: 32)
!21024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2266)
!21025 = !{!21026, !21027}
!21026 = !DILocalVariable(name: "log_message", arg: 1, scope: !21020, file: !2237, line: 900, type: !21023)
!21027 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !21028, file: !2237, line: 903, type: !1800)
!21028 = distinct !DILexicalBlock(scope: !21029, file: !2237, line: 902, column: 28)
!21029 = distinct !DILexicalBlock(scope: !21020, file: !2237, line: 902, column: 9)
!21030 = !DILocation(line: 0, scope: !21020)
!21031 = !DILocation(line: 902, column: 9, scope: !21029)
!21032 = !DILocation(line: 902, column: 9, scope: !21020)
!21033 = !DILocation(line: 231, column: 2, scope: !20585, inlinedAt: !21034)
!21034 = distinct !DILocation(line: 903, column: 46, scope: !21028)
!21035 = !DILocation(line: 0, scope: !20585, inlinedAt: !21034)
!21036 = !DILocation(line: 0, scope: !21028)
!21037 = !DILocation(line: 904, column: 67, scope: !21028)
!21038 = !DILocation(line: 904, column: 9, scope: !21028)
!21039 = !DILocation(line: 905, column: 27, scope: !21028)
!21040 = !DILocation(line: 0, scope: !20607, inlinedAt: !21041)
!21041 = distinct !DILocation(line: 906, column: 9, scope: !21028)
!21042 = !DILocation(line: 249, column: 2, scope: !20607, inlinedAt: !21041)
!21043 = !DILocation(line: 907, column: 5, scope: !21028)
!21044 = !DILocation(line: 909, column: 49, scope: !21045)
!21045 = distinct !DILexicalBlock(scope: !21020, file: !2237, line: 909, column: 9)
!21046 = !DILocation(line: 909, column: 33, scope: !21045)
!21047 = !DILocation(line: 909, column: 9, scope: !21020)
!21048 = !DILocation(line: 910, column: 40, scope: !21049)
!21049 = distinct !DILexicalBlock(scope: !21045, file: !2237, line: 909, column: 63)
!21050 = !DILocation(line: 910, column: 42, scope: !21049)
!21051 = !DILocation(line: 910, column: 9, scope: !21049)
!21052 = !DILocation(line: 911, column: 5, scope: !21049)
!21053 = !DILocation(line: 912, column: 40, scope: !21054)
!21054 = distinct !DILexicalBlock(scope: !21045, file: !2237, line: 911, column: 12)
!21055 = !DILocation(line: 912, column: 9, scope: !21054)
!21056 = !DILocation(line: 914, column: 1, scope: !21020)
!21057 = distinct !DISubprogram(name: "syslog_task_entry", scope: !2237, file: !2237, line: 966, type: !945, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21058)
!21058 = !{!21059, !21060}
!21059 = !DILocalVariable(name: "args", arg: 1, scope: !21057, file: !2237, line: 966, type: !51)
!21060 = !DILocalVariable(name: "log_buffer", scope: !21061, file: !2237, line: 983, type: !2313)
!21061 = distinct !DILexicalBlock(scope: !21062, file: !2237, line: 982, column: 14)
!21062 = distinct !DILexicalBlock(scope: !21063, file: !2237, line: 982, column: 5)
!21063 = distinct !DILexicalBlock(scope: !21057, file: !2237, line: 982, column: 5)
!21064 = !DILocation(line: 0, scope: !21057)
!21065 = !DILocation(line: 979, column: 23, scope: !21057)
!21066 = !DILocation(line: 980, column: 5, scope: !21057)
!21067 = !DILocation(line: 982, column: 5, scope: !21057)
!21068 = !DILocation(line: 983, column: 9, scope: !21061)
!21069 = !DILocation(line: 0, scope: !21061)
!21070 = !DILocation(line: 983, column: 26, scope: !21061)
!21071 = !DILocation(line: 984, column: 18, scope: !21072)
!21072 = distinct !DILexicalBlock(scope: !21061, file: !2237, line: 984, column: 13)
!21073 = !DILocation(line: 984, column: 15, scope: !21072)
!21074 = !DILocation(line: 984, column: 13, scope: !21061)
!21075 = !DILocation(line: 993, column: 42, scope: !21076)
!21076 = distinct !DILexicalBlock(scope: !21072, file: !2237, line: 984, column: 50)
!21077 = !DILocation(line: 993, column: 41, scope: !21076)
!21078 = !DILocation(line: 993, column: 24, scope: !21076)
!21079 = !DILocation(line: 993, column: 4, scope: !21076)
!21080 = !DILocation(line: 995, column: 33, scope: !21076)
!21081 = !DILocation(line: 995, column: 13, scope: !21076)
!21082 = !DILocation(line: 996, column: 9, scope: !21076)
!21083 = !DILocation(line: 997, column: 5, scope: !21062)
!21084 = !DILocation(line: 982, column: 5, scope: !21062)
!21085 = distinct !{!21085, !21086, !21087}
!21086 = !DILocation(line: 982, column: 5, scope: !21063)
!21087 = !DILocation(line: 997, column: 5, scope: !21063)
!21088 = distinct !DISubprogram(name: "log_init", scope: !2237, file: !2237, line: 1000, type: !21089, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21096)
!21089 = !DISubroutineType(types: !21090)
!21090 = !{null, !2336, !21091, !2343}
!21091 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_load_fn", file: !675, line: 117, baseType: !21092)
!21092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21093, size: 32)
!21093 = !DISubroutineType(types: !21094)
!21094 = !{!61, !21095}
!21095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!21096 = !{!21097, !21098, !21099, !21100}
!21097 = !DILocalVariable(name: "save", arg: 1, scope: !21088, file: !2237, line: 1000, type: !2336)
!21098 = !DILocalVariable(name: "load", arg: 2, scope: !21088, file: !2237, line: 1001, type: !21091)
!21099 = !DILocalVariable(name: "entries", arg: 3, scope: !21088, file: !2237, line: 1002, type: !2343)
!21100 = !DILocalVariable(name: "exception_config", scope: !21088, file: !2237, line: 1004, type: !21101)
!21101 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !2205, line: 99, baseType: !21102)
!21102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2205, line: 95, size: 64, elements: !21103)
!21103 = !{!21104, !21105}
!21104 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !21102, file: !2205, line: 97, baseType: !2209, size: 32)
!21105 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !21102, file: !2205, line: 98, baseType: !2209, size: 32, offset: 32)
!21106 = !DILocation(line: 0, scope: !21088)
!21107 = !DILocation(line: 1004, column: 5, scope: !21088)
!21108 = !DILocation(line: 1004, column: 27, scope: !21088)
!21109 = !DILocation(line: 1006, column: 9, scope: !21110)
!21110 = distinct !DILexicalBlock(scope: !21088, file: !2237, line: 1006, column: 9)
!21111 = !DILocation(line: 1006, column: 26, scope: !21110)
!21112 = !DILocation(line: 1006, column: 9, scope: !21088)
!21113 = !DILocation(line: 1011, column: 22, scope: !21088)
!21114 = !DILocation(line: 1012, column: 5, scope: !21088)
!21115 = !DILocation(line: 1013, column: 5, scope: !21088)
!21116 = !DILocation(line: 1014, column: 23, scope: !21088)
!21117 = !DILocation(line: 1016, column: 22, scope: !21088)
!21118 = !DILocation(line: 1016, column: 30, scope: !21088)
!21119 = !DILocation(line: 1017, column: 22, scope: !21088)
!21120 = !DILocation(line: 1017, column: 30, scope: !21088)
!21121 = !DILocation(line: 1018, column: 5, scope: !21088)
!21122 = !DILocation(line: 1021, column: 19, scope: !21123)
!21123 = distinct !DILexicalBlock(scope: !21088, file: !2237, line: 1021, column: 9)
!21124 = !DILocation(line: 1021, column: 16, scope: !21123)
!21125 = !DILocation(line: 1021, column: 9, scope: !21088)
!21126 = !DILocation(line: 1027, column: 9, scope: !21127)
!21127 = distinct !DILexicalBlock(scope: !21123, file: !2237, line: 1026, column: 53)
!21128 = !DILocation(line: 1028, column: 5, scope: !21127)
!21129 = !DILocation(line: 1030, column: 24, scope: !21088)
!21130 = !DILocation(line: 1031, column: 22, scope: !21088)
!21131 = !DILocation(line: 1034, column: 27, scope: !21088)
!21132 = !DILocation(line: 1035, column: 27, scope: !21088)
!21133 = !DILocation(line: 1037, column: 9, scope: !21134)
!21134 = distinct !DILexicalBlock(scope: !21088, file: !2237, line: 1037, column: 9)
!21135 = !DILocation(line: 1037, column: 9, scope: !21088)
!21136 = !DILocation(line: 1039, column: 13, scope: !21137)
!21137 = distinct !DILexicalBlock(scope: !21138, file: !2237, line: 1039, column: 13)
!21138 = distinct !DILexicalBlock(scope: !21134, file: !2237, line: 1037, column: 15)
!21139 = !DILocation(line: 1039, column: 34, scope: !21137)
!21140 = !DILocation(line: 1039, column: 13, scope: !21138)
!21141 = !DILocation(line: 1040, column: 13, scope: !21142)
!21142 = distinct !DILexicalBlock(scope: !21143, file: !2237, line: 1040, column: 13)
!21143 = distinct !DILexicalBlock(scope: !21137, file: !2237, line: 1039, column: 40)
!21144 = !DILocation(line: 1041, column: 9, scope: !21143)
!21145 = !DILocation(line: 1043, column: 22, scope: !21088)
!21146 = !DILocation(line: 1044, column: 1, scope: !21088)
!21147 = distinct !DISubprogram(name: "syslog_exception_cb", scope: !2237, file: !2237, line: 513, type: !154, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !2550)
!21148 = !DILocation(line: 518, column: 5, scope: !21147)
!21149 = !DILocation(line: 519, column: 1, scope: !21147)
!21150 = distinct !DISubprogram(name: "syslog_buffer_dump", scope: !2237, file: !2237, line: 483, type: !154, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21151)
!21151 = !{!21152, !21153, !21154}
!21152 = !DILocalVariable(name: "index", scope: !21150, file: !2237, line: 485, type: !61)
!21153 = !DILocalVariable(name: "pHead", scope: !21150, file: !2237, line: 486, type: !2313)
!21154 = !DILocalVariable(name: "pCurr", scope: !21150, file: !2237, line: 486, type: !2313)
!21155 = !DILocation(line: 0, scope: !21150)
!21156 = !DILocation(line: 489, column: 5, scope: !21157)
!21157 = distinct !DILexicalBlock(scope: !21150, file: !2237, line: 489, column: 5)
!21158 = !DILocation(line: 491, column: 13, scope: !21159)
!21159 = distinct !DILexicalBlock(scope: !21160, file: !2237, line: 491, column: 13)
!21160 = distinct !DILexicalBlock(scope: !21161, file: !2237, line: 489, column: 54)
!21161 = distinct !DILexicalBlock(scope: !21157, file: !2237, line: 489, column: 5)
!21162 = !DILocation(line: 491, column: 39, scope: !21159)
!21163 = !DILocation(line: 491, column: 13, scope: !21160)
!21164 = !DILocation(line: 492, column: 50, scope: !21165)
!21165 = distinct !DILexicalBlock(scope: !21159, file: !2237, line: 491, column: 49)
!21166 = !DILocation(line: 492, column: 48, scope: !21165)
!21167 = !DILocation(line: 494, column: 9, scope: !21165)
!21168 = !DILocation(line: 489, column: 50, scope: !21161)
!21169 = !DILocation(line: 489, column: 27, scope: !21161)
!21170 = distinct !{!21170, !21156, !21171}
!21171 = !DILocation(line: 495, column: 5, scope: !21157)
!21172 = !DILocation(line: 498, column: 13, scope: !21150)
!21173 = !DILocation(line: 500, column: 5, scope: !21150)
!21174 = !DILocation(line: 503, column: 5, scope: !21150)
!21175 = !DILocation(line: 505, column: 43, scope: !21176)
!21176 = distinct !DILexicalBlock(scope: !21150, file: !2237, line: 503, column: 19)
!21177 = !DILocation(line: 505, column: 17, scope: !21176)
!21178 = !DILocation(line: 506, column: 25, scope: !21176)
!21179 = !DILocation(line: 507, column: 46, scope: !21176)
!21180 = !DILocation(line: 507, column: 29, scope: !21176)
!21181 = !DILocation(line: 507, column: 9, scope: !21176)
!21182 = distinct !{!21182, !21174, !21183}
!21183 = !DILocation(line: 508, column: 5, scope: !21150)
!21184 = !DILocation(line: 509, column: 1, scope: !21150)
!21185 = distinct !DISubprogram(name: "sort_syslog_buffer", scope: !2237, file: !2237, line: 338, type: !21186, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21188)
!21186 = !DISubroutineType(types: !21187)
!21187 = !{!2313, !2313}
!21188 = !{!21189, !21190, !21191, !21192}
!21189 = !DILocalVariable(name: "pList", arg: 1, scope: !21185, file: !2237, line: 338, type: !2313)
!21190 = !DILocalVariable(name: "pHead", scope: !21185, file: !2237, line: 340, type: !2313)
!21191 = !DILocalVariable(name: "pCurr", scope: !21185, file: !2237, line: 340, type: !2313)
!21192 = !DILocalVariable(name: "p", scope: !21185, file: !2237, line: 340, type: !2313)
!21193 = !DILocation(line: 0, scope: !21185)
!21194 = !DILocation(line: 342, column: 15, scope: !21195)
!21195 = distinct !DILexicalBlock(scope: !21185, file: !2237, line: 342, column: 9)
!21196 = !DILocation(line: 342, column: 23, scope: !21195)
!21197 = !DILocation(line: 342, column: 33, scope: !21195)
!21198 = !DILocation(line: 342, column: 42, scope: !21195)
!21199 = !DILocation(line: 342, column: 9, scope: !21185)
!21200 = !DILocation(line: 348, column: 43, scope: !21201)
!21201 = distinct !DILexicalBlock(scope: !21185, file: !2237, line: 346, column: 27)
!21202 = !DILocation(line: 348, column: 17, scope: !21201)
!21203 = !DILocation(line: 349, column: 20, scope: !21204)
!21204 = distinct !DILexicalBlock(scope: !21201, file: !2237, line: 349, column: 13)
!21205 = !DILocation(line: 349, column: 29, scope: !21204)
!21206 = !DILocation(line: 349, column: 32, scope: !21204)
!21207 = !DILocation(line: 349, column: 48, scope: !21204)
!21208 = !DILocation(line: 349, column: 46, scope: !21204)
!21209 = !DILocation(line: 349, column: 13, scope: !21201)
!21210 = !DILocation(line: 0, scope: !21211)
!21211 = distinct !DILexicalBlock(scope: !21204, file: !2237, line: 353, column: 14)
!21212 = !DILocation(line: 356, column: 23, scope: !21213)
!21213 = distinct !DILexicalBlock(scope: !21214, file: !2237, line: 356, column: 19)
!21214 = distinct !DILexicalBlock(scope: !21211, file: !2237, line: 355, column: 30)
!21215 = !DILocation(line: 356, column: 32, scope: !21213)
!21216 = !DILocation(line: 356, column: 38, scope: !21213)
!21217 = !DILocation(line: 357, column: 35, scope: !21213)
!21218 = !DILocation(line: 357, column: 33, scope: !21213)
!21219 = !DILocation(line: 356, column: 19, scope: !21214)
!21220 = distinct !{!21220, !21221, !21222}
!21221 = !DILocation(line: 355, column: 12, scope: !21211)
!21222 = !DILocation(line: 363, column: 12, scope: !21211)
!21223 = !DILocation(line: 358, column: 35, scope: !21224)
!21224 = distinct !DILexicalBlock(scope: !21213, file: !2237, line: 357, column: 76)
!21225 = !DILocation(line: 360, column: 19, scope: !21224)
!21226 = !DILocation(line: 0, scope: !21204)
!21227 = !DILocation(line: 346, column: 18, scope: !21185)
!21228 = !DILocation(line: 346, column: 5, scope: !21185)
!21229 = distinct !{!21229, !21228, !21230}
!21230 = !DILocation(line: 365, column: 5, scope: !21185)
!21231 = !DILocation(line: 367, column: 1, scope: !21185)
!21232 = distinct !DISubprogram(name: "syslog_get_config", scope: !2237, file: !2237, line: 1215, type: !21233, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21235)
!21233 = !DISubroutineType(types: !21234)
!21234 = !{null, !21095}
!21235 = !{!21236}
!21236 = !DILocalVariable(name: "config", arg: 1, scope: !21232, file: !2237, line: 1215, type: !21095)
!21237 = !DILocation(line: 0, scope: !21232)
!21238 = !DILocation(line: 1217, column: 15, scope: !21232)
!21239 = !DILocation(line: 1218, column: 1, scope: !21232)
!21240 = distinct !DISubprogram(name: "syslog_set_filter", scope: !2237, file: !2237, line: 1271, type: !21241, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21243)
!21241 = !DISubroutineType(types: !21242)
!21242 = !{!7, !491, !491, !491, !7}
!21243 = !{!21244, !21245, !21246, !21247, !21248, !21249, !21250}
!21244 = !DILocalVariable(name: "module_name", arg: 1, scope: !21240, file: !2237, line: 1271, type: !491)
!21245 = !DILocalVariable(name: "log_switch_str", arg: 2, scope: !21240, file: !2237, line: 1271, type: !491)
!21246 = !DILocalVariable(name: "print_level_str", arg: 3, scope: !21240, file: !2237, line: 1271, type: !491)
!21247 = !DILocalVariable(name: "save", arg: 4, scope: !21240, file: !2237, line: 1271, type: !7)
!21248 = !DILocalVariable(name: "i", scope: !21240, file: !2237, line: 1273, type: !7)
!21249 = !DILocalVariable(name: "log_switch", scope: !21240, file: !2237, line: 1274, type: !7)
!21250 = !DILocalVariable(name: "print_level", scope: !21240, file: !2237, line: 1275, type: !7)
!21251 = !DILocation(line: 0, scope: !21240)
!21252 = !DILocation(line: 1277, column: 18, scope: !21240)
!21253 = !DILocation(line: 1278, column: 20, scope: !21254)
!21254 = distinct !DILexicalBlock(scope: !21240, file: !2237, line: 1278, column: 9)
!21255 = !DILocation(line: 1278, column: 9, scope: !21240)
!21256 = !DILocation(line: 1282, column: 19, scope: !21240)
!21257 = !DILocation(line: 1283, column: 21, scope: !21258)
!21258 = distinct !DILexicalBlock(scope: !21240, file: !2237, line: 1283, column: 9)
!21259 = !DILocation(line: 1283, column: 9, scope: !21240)
!21260 = !DILocation(line: 1287, column: 9, scope: !21261)
!21261 = distinct !DILexicalBlock(scope: !21240, file: !2237, line: 1287, column: 9)
!21262 = !DILocation(line: 1287, column: 34, scope: !21261)
!21263 = !DILocation(line: 0, scope: !21261)
!21264 = !DILocation(line: 1287, column: 9, scope: !21240)
!21265 = !DILocation(line: 1289, column: 35, scope: !21266)
!21266 = distinct !DILexicalBlock(scope: !21267, file: !2237, line: 1289, column: 13)
!21267 = distinct !DILexicalBlock(scope: !21261, file: !2237, line: 1287, column: 40)
!21268 = !DILocation(line: 1289, column: 13, scope: !21267)
!21269 = !DILocation(line: 1294, column: 16, scope: !21267)
!21270 = !DILocation(line: 1294, column: 9, scope: !21267)
!21271 = !DILocation(line: 1295, column: 39, scope: !21272)
!21272 = distinct !DILexicalBlock(scope: !21267, file: !2237, line: 1294, column: 42)
!21273 = !DILocation(line: 1295, column: 50, scope: !21272)
!21274 = !DILocation(line: 1296, column: 27, scope: !21272)
!21275 = !DILocation(line: 1296, column: 13, scope: !21272)
!21276 = !DILocation(line: 1296, column: 39, scope: !21272)
!21277 = !DILocation(line: 1296, column: 51, scope: !21272)
!21278 = !DILocation(line: 1297, column: 14, scope: !21272)
!21279 = distinct !{!21279, !21270, !21280}
!21280 = !DILocation(line: 1298, column: 9, scope: !21267)
!21281 = !DILocation(line: 1302, column: 13, scope: !21282)
!21282 = distinct !DILexicalBlock(scope: !21261, file: !2237, line: 1300, column: 12)
!21283 = !DILocation(line: 1304, column: 15, scope: !21284)
!21284 = distinct !DILexicalBlock(scope: !21282, file: !2237, line: 1304, column: 13)
!21285 = !DILocation(line: 1304, column: 13, scope: !21282)
!21286 = !DILocation(line: 1307, column: 23, scope: !21282)
!21287 = !DILocation(line: 1307, column: 9, scope: !21282)
!21288 = !DILocation(line: 1307, column: 35, scope: !21282)
!21289 = !DILocation(line: 1307, column: 46, scope: !21282)
!21290 = !DILocation(line: 1308, column: 23, scope: !21282)
!21291 = !DILocation(line: 1308, column: 9, scope: !21282)
!21292 = !DILocation(line: 1308, column: 35, scope: !21282)
!21293 = !DILocation(line: 1308, column: 47, scope: !21282)
!21294 = !DILocation(line: 1312, column: 9, scope: !21295)
!21295 = distinct !DILexicalBlock(scope: !21240, file: !2237, line: 1312, column: 9)
!21296 = !DILocation(line: 1312, column: 9, scope: !21240)
!21297 = !DILocation(line: 1313, column: 23, scope: !21298)
!21298 = distinct !DILexicalBlock(scope: !21295, file: !2237, line: 1312, column: 15)
!21299 = !DILocation(line: 1313, column: 9, scope: !21298)
!21300 = !DILocation(line: 1314, column: 5, scope: !21298)
!21301 = !DILocation(line: 1317, column: 1, scope: !21240)
!21302 = distinct !DISubprogram(name: "str_to_log_switch", scope: !2237, file: !2237, line: 1484, type: !21303, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21305)
!21303 = !DISubroutineType(types: !21304)
!21304 = !{!7, !662}
!21305 = !{!21306, !21307}
!21306 = !DILocalVariable(name: "log_switch_str", arg: 1, scope: !21302, file: !2237, line: 1484, type: !662)
!21307 = !DILocalVariable(name: "i", scope: !21302, file: !2237, line: 1486, type: !7)
!21308 = !DILocation(line: 0, scope: !21302)
!21309 = !DILocation(line: 1488, column: 5, scope: !21310)
!21310 = distinct !DILexicalBlock(scope: !21302, file: !2237, line: 1488, column: 5)
!21311 = !DILocation(line: 1489, column: 37, scope: !21312)
!21312 = distinct !DILexicalBlock(scope: !21313, file: !2237, line: 1489, column: 13)
!21313 = distinct !DILexicalBlock(scope: !21314, file: !2237, line: 1488, column: 69)
!21314 = distinct !DILexicalBlock(scope: !21310, file: !2237, line: 1488, column: 5)
!21315 = !DILocation(line: 1489, column: 14, scope: !21312)
!21316 = !DILocation(line: 1489, column: 13, scope: !21313)
!21317 = !DILocation(line: 1494, column: 1, scope: !21302)
!21318 = distinct !DISubprogram(name: "str_to_print_level", scope: !2237, file: !2237, line: 1496, type: !21303, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21319)
!21319 = !{!21320, !21321}
!21320 = !DILocalVariable(name: "print_level_str", arg: 1, scope: !21318, file: !2237, line: 1496, type: !662)
!21321 = !DILocalVariable(name: "i", scope: !21318, file: !2237, line: 1498, type: !7)
!21322 = !DILocation(line: 0, scope: !21318)
!21323 = !DILocation(line: 1500, column: 5, scope: !21324)
!21324 = distinct !DILexicalBlock(scope: !21318, file: !2237, line: 1500, column: 5)
!21325 = !DILocation(line: 1501, column: 38, scope: !21326)
!21326 = distinct !DILexicalBlock(scope: !21327, file: !2237, line: 1501, column: 13)
!21327 = distinct !DILexicalBlock(scope: !21328, file: !2237, line: 1500, column: 70)
!21328 = distinct !DILexicalBlock(scope: !21324, file: !2237, line: 1500, column: 5)
!21329 = !DILocation(line: 1501, column: 14, scope: !21326)
!21330 = !DILocation(line: 1501, column: 13, scope: !21327)
!21331 = !DILocation(line: 1500, column: 66, scope: !21328)
!21332 = !DILocation(line: 1500, column: 19, scope: !21328)
!21333 = distinct !{!21333, !21323, !21334}
!21334 = !DILocation(line: 1504, column: 5, scope: !21324)
!21335 = !DILocation(line: 1506, column: 1, scope: !21318)
!21336 = distinct !DISubprogram(name: "syslog_get_index_from_module_name", scope: !2237, file: !2237, line: 1252, type: !21337, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21339)
!21337 = !DISubroutineType(types: !21338)
!21338 = !{!7, !2343, !662}
!21339 = !{!21340, !21341, !21342}
!21340 = !DILocalVariable(name: "filters", arg: 1, scope: !21336, file: !2237, line: 1252, type: !2343)
!21341 = !DILocalVariable(name: "module_name", arg: 2, scope: !21336, file: !2237, line: 1252, type: !662)
!21342 = !DILocalVariable(name: "i", scope: !21336, file: !2237, line: 1254, type: !7)
!21343 = !DILocation(line: 0, scope: !21336)
!21344 = !DILocation(line: 1256, column: 17, scope: !21345)
!21345 = distinct !DILexicalBlock(scope: !21336, file: !2237, line: 1256, column: 9)
!21346 = !DILocation(line: 1256, column: 9, scope: !21336)
!21347 = !DILocation(line: 1260, column: 12, scope: !21336)
!21348 = !DILocation(line: 1260, column: 5, scope: !21336)
!21349 = !DILocation(line: 1261, column: 33, scope: !21350)
!21350 = distinct !DILexicalBlock(scope: !21351, file: !2237, line: 1261, column: 13)
!21351 = distinct !DILexicalBlock(scope: !21336, file: !2237, line: 1260, column: 24)
!21352 = !DILocation(line: 1261, column: 14, scope: !21350)
!21353 = !DILocation(line: 1261, column: 13, scope: !21351)
!21354 = !DILocation(line: 1264, column: 10, scope: !21351)
!21355 = distinct !{!21355, !21348, !21356}
!21356 = !DILocation(line: 1265, column: 5, scope: !21336)
!21357 = !DILocation(line: 1269, column: 1, scope: !21336)
!21358 = distinct !DISubprogram(name: "syslog_at_set_filter", scope: !2237, file: !2237, line: 1319, type: !21359, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21361)
!21359 = !DISubroutineType(types: !21360)
!21360 = !{!7, !491, !7, !7, !7}
!21361 = !{!21362, !21363, !21364, !21365, !21366}
!21362 = !DILocalVariable(name: "module_name", arg: 1, scope: !21358, file: !2237, line: 1319, type: !491)
!21363 = !DILocalVariable(name: "log_switch", arg: 2, scope: !21358, file: !2237, line: 1319, type: !7)
!21364 = !DILocalVariable(name: "print_level", arg: 3, scope: !21358, file: !2237, line: 1319, type: !7)
!21365 = !DILocalVariable(name: "save", arg: 4, scope: !21358, file: !2237, line: 1319, type: !7)
!21366 = !DILocalVariable(name: "i", scope: !21358, file: !2237, line: 1321, type: !7)
!21367 = !DILocation(line: 0, scope: !21358)
!21368 = !DILocation(line: 1323, column: 9, scope: !21369)
!21369 = distinct !DILexicalBlock(scope: !21358, file: !2237, line: 1323, column: 9)
!21370 = !DILocation(line: 1323, column: 34, scope: !21369)
!21371 = !DILocation(line: 0, scope: !21369)
!21372 = !DILocation(line: 1323, column: 9, scope: !21358)
!21373 = !DILocation(line: 1325, column: 35, scope: !21374)
!21374 = distinct !DILexicalBlock(scope: !21375, file: !2237, line: 1325, column: 13)
!21375 = distinct !DILexicalBlock(scope: !21369, file: !2237, line: 1323, column: 40)
!21376 = !DILocation(line: 1325, column: 13, scope: !21375)
!21377 = !DILocation(line: 1330, column: 16, scope: !21375)
!21378 = !DILocation(line: 1330, column: 9, scope: !21375)
!21379 = !DILocation(line: 1331, column: 39, scope: !21380)
!21380 = distinct !DILexicalBlock(scope: !21375, file: !2237, line: 1330, column: 42)
!21381 = !DILocation(line: 1331, column: 50, scope: !21380)
!21382 = !DILocation(line: 1332, column: 27, scope: !21380)
!21383 = !DILocation(line: 1332, column: 13, scope: !21380)
!21384 = !DILocation(line: 1332, column: 39, scope: !21380)
!21385 = !DILocation(line: 1332, column: 51, scope: !21380)
!21386 = !DILocation(line: 1333, column: 14, scope: !21380)
!21387 = distinct !{!21387, !21378, !21388}
!21388 = !DILocation(line: 1334, column: 9, scope: !21375)
!21389 = !DILocation(line: 1338, column: 13, scope: !21390)
!21390 = distinct !DILexicalBlock(scope: !21369, file: !2237, line: 1336, column: 12)
!21391 = !DILocation(line: 1340, column: 15, scope: !21392)
!21392 = distinct !DILexicalBlock(scope: !21390, file: !2237, line: 1340, column: 13)
!21393 = !DILocation(line: 1340, column: 13, scope: !21390)
!21394 = !DILocation(line: 1343, column: 23, scope: !21390)
!21395 = !DILocation(line: 1343, column: 9, scope: !21390)
!21396 = !DILocation(line: 1343, column: 35, scope: !21390)
!21397 = !DILocation(line: 1343, column: 46, scope: !21390)
!21398 = !DILocation(line: 1344, column: 23, scope: !21390)
!21399 = !DILocation(line: 1344, column: 9, scope: !21390)
!21400 = !DILocation(line: 1344, column: 35, scope: !21390)
!21401 = !DILocation(line: 1344, column: 47, scope: !21390)
!21402 = !DILocation(line: 1348, column: 9, scope: !21403)
!21403 = distinct !DILexicalBlock(scope: !21358, file: !2237, line: 1348, column: 9)
!21404 = !DILocation(line: 1348, column: 9, scope: !21358)
!21405 = !DILocation(line: 1349, column: 23, scope: !21406)
!21406 = distinct !DILexicalBlock(scope: !21403, file: !2237, line: 1348, column: 15)
!21407 = !DILocation(line: 1349, column: 9, scope: !21406)
!21408 = !DILocation(line: 1350, column: 5, scope: !21406)
!21409 = !DILocation(line: 1353, column: 1, scope: !21358)
!21410 = distinct !DISubprogram(name: "syslog_convert_filter_str2val", scope: !2237, file: !2237, line: 1358, type: !21411, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21413)
!21411 = !DISubroutineType(types: !21412)
!21412 = !{!7, !2343, !491}
!21413 = !{!21414, !21415, !21416, !21417, !21418, !21419, !21420, !21421, !21422, !21423, !21424}
!21414 = !DILocalVariable(name: "filters", arg: 1, scope: !21410, file: !2237, line: 1358, type: !2343)
!21415 = !DILocalVariable(name: "buff", arg: 2, scope: !21410, file: !2237, line: 1358, type: !491)
!21416 = !DILocalVariable(name: "pos", scope: !21410, file: !2237, line: 1360, type: !7)
!21417 = !DILocalVariable(name: "i", scope: !21410, file: !2237, line: 1361, type: !7)
!21418 = !DILocalVariable(name: "module_name", scope: !21410, file: !2237, line: 1362, type: !491)
!21419 = !DILocalVariable(name: "log_switch_str", scope: !21410, file: !2237, line: 1363, type: !491)
!21420 = !DILocalVariable(name: "print_level_str", scope: !21410, file: !2237, line: 1364, type: !491)
!21421 = !DILocalVariable(name: "done", scope: !21410, file: !2237, line: 1365, type: !69)
!21422 = !DILocalVariable(name: "log_switch", scope: !21410, file: !2237, line: 1366, type: !61)
!21423 = !DILocalVariable(name: "print_level", scope: !21410, file: !2237, line: 1367, type: !61)
!21424 = !DILocalVariable(name: "type", scope: !21410, file: !2237, line: 1368, type: !54)
!21425 = !DILocation(line: 0, scope: !21410)
!21426 = !DILocation(line: 1362, column: 5, scope: !21410)
!21427 = !DILocation(line: 1363, column: 5, scope: !21410)
!21428 = !DILocation(line: 1364, column: 5, scope: !21410)
!21429 = !DILocation(line: 1368, column: 5, scope: !21410)
!21430 = !DILocation(line: 1370, column: 5, scope: !21410)
!21431 = !DILocation(line: 1376, column: 34, scope: !21432)
!21432 = distinct !DILexicalBlock(scope: !21410, file: !2237, line: 1370, column: 19)
!21433 = !DILocation(line: 1376, column: 13, scope: !21432)
!21434 = !DILocation(line: 1377, column: 15, scope: !21435)
!21435 = distinct !DILexicalBlock(scope: !21432, file: !2237, line: 1377, column: 13)
!21436 = !DILocation(line: 1377, column: 20, scope: !21435)
!21437 = !DILocation(line: 1377, column: 32, scope: !21435)
!21438 = !DILocation(line: 1377, column: 23, scope: !21435)
!21439 = !DILocation(line: 1377, column: 37, scope: !21435)
!21440 = !DILocation(line: 1377, column: 13, scope: !21432)
!21441 = !DILocation(line: 1382, column: 24, scope: !21432)
!21442 = !DILocation(line: 1383, column: 23, scope: !21432)
!21443 = !DILocation(line: 1389, column: 34, scope: !21432)
!21444 = !DILocation(line: 1389, column: 13, scope: !21432)
!21445 = !DILocation(line: 1390, column: 15, scope: !21446)
!21446 = distinct !DILexicalBlock(scope: !21432, file: !2237, line: 1390, column: 13)
!21447 = !DILocation(line: 1390, column: 13, scope: !21432)
!21448 = !DILocation(line: 1395, column: 24, scope: !21432)
!21449 = !DILocation(line: 1395, column: 17, scope: !21432)
!21450 = !DILocation(line: 1397, column: 24, scope: !21432)
!21451 = !DILocation(line: 1398, column: 23, scope: !21432)
!21452 = !DILocation(line: 1404, column: 34, scope: !21432)
!21453 = !DILocation(line: 1404, column: 13, scope: !21432)
!21454 = !DILocation(line: 1405, column: 15, scope: !21455)
!21455 = distinct !DILexicalBlock(scope: !21432, file: !2237, line: 1405, column: 13)
!21456 = !DILocation(line: 1405, column: 13, scope: !21432)
!21457 = !DILocation(line: 1410, column: 24, scope: !21432)
!21458 = !DILocation(line: 1410, column: 17, scope: !21432)
!21459 = !DILocation(line: 1410, column: 31, scope: !21432)
!21460 = !DILocation(line: 1412, column: 24, scope: !21432)
!21461 = !DILocation(line: 1413, column: 23, scope: !21432)
!21462 = !DILocation(line: 1417, column: 56, scope: !21432)
!21463 = !DILocation(line: 1417, column: 13, scope: !21432)
!21464 = !DILocation(line: 1420, column: 15, scope: !21465)
!21465 = distinct !DILexicalBlock(scope: !21432, file: !2237, line: 1420, column: 13)
!21466 = !DILocation(line: 1420, column: 13, scope: !21432)
!21467 = !DILocation(line: 1424, column: 26, scope: !21432)
!21468 = !DILocation(line: 1424, column: 22, scope: !21432)
!21469 = !DILocation(line: 1427, column: 13, scope: !21470)
!21470 = distinct !DILexicalBlock(scope: !21432, file: !2237, line: 1427, column: 13)
!21471 = !DILocation(line: 1427, column: 18, scope: !21470)
!21472 = !DILocation(line: 1427, column: 13, scope: !21432)
!21473 = !DILocation(line: 1434, column: 27, scope: !21432)
!21474 = !DILocation(line: 1434, column: 23, scope: !21432)
!21475 = !DILocation(line: 1437, column: 13, scope: !21476)
!21476 = distinct !DILexicalBlock(scope: !21432, file: !2237, line: 1437, column: 13)
!21477 = !DILocation(line: 1437, column: 18, scope: !21476)
!21478 = !DILocation(line: 1437, column: 13, scope: !21432)
!21479 = !DILocation(line: 1432, column: 22, scope: !21432)
!21480 = !DILocation(line: 1442, column: 23, scope: !21432)
!21481 = !DILocation(line: 1444, column: 9, scope: !21432)
!21482 = !DILocation(line: 1444, column: 21, scope: !21432)
!21483 = !DILocation(line: 1444, column: 32, scope: !21432)
!21484 = !DILocation(line: 1445, column: 9, scope: !21432)
!21485 = !DILocation(line: 1445, column: 21, scope: !21432)
!21486 = !DILocation(line: 1445, column: 33, scope: !21432)
!21487 = distinct !{!21487, !21430, !21488}
!21488 = !DILocation(line: 1446, column: 5, scope: !21410)
!21489 = !DILocation(line: 1449, column: 1, scope: !21410)
!21490 = distinct !DISubprogram(name: "syslog_get_a_string", scope: !2237, file: !2237, line: 1227, type: !21491, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21494)
!21491 = !DISubroutineType(types: !21492)
!21492 = !{!7, !662, !21493}
!21493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 32)
!21494 = !{!21495, !21496, !21497}
!21495 = !DILocalVariable(name: "p", arg: 1, scope: !21490, file: !2237, line: 1227, type: !662)
!21496 = !DILocalVariable(name: "pp", arg: 2, scope: !21490, file: !2237, line: 1227, type: !21493)
!21497 = !DILocalVariable(name: "start", scope: !21490, file: !2237, line: 1229, type: !662)
!21498 = !DILocation(line: 0, scope: !21490)
!21499 = !DILocation(line: 1231, column: 5, scope: !21490)
!21500 = !DILocation(line: 1231, column: 12, scope: !21490)
!21501 = !DILocation(line: 1232, column: 10, scope: !21502)
!21502 = distinct !DILexicalBlock(scope: !21490, file: !2237, line: 1231, column: 23)
!21503 = distinct !{!21503, !21499, !21504}
!21504 = !DILocation(line: 1233, column: 5, scope: !21490)
!21505 = !DILocation(line: 1239, column: 13, scope: !21506)
!21506 = distinct !DILexicalBlock(scope: !21507, file: !2237, line: 1238, column: 21)
!21507 = distinct !DILexicalBlock(scope: !21490, file: !2237, line: 1238, column: 9)
!21508 = !DILocation(line: 1240, column: 9, scope: !21506)
!21509 = !DILocation(line: 1243, column: 9, scope: !21490)
!21510 = !DILocation(line: 1245, column: 5, scope: !21490)
!21511 = !DILocation(line: 1245, column: 12, scope: !21490)
!21512 = !DILocation(line: 1245, column: 22, scope: !21490)
!21513 = !DILocation(line: 1246, column: 10, scope: !21514)
!21514 = distinct !DILexicalBlock(scope: !21490, file: !2237, line: 1245, column: 37)
!21515 = distinct !{!21515, !21510, !21516}
!21516 = !DILocation(line: 1247, column: 5, scope: !21490)
!21517 = !DILocation(line: 1249, column: 15, scope: !21490)
!21518 = !DILocation(line: 1249, column: 5, scope: !21490)
!21519 = !DILocation(line: 1250, column: 1, scope: !21490)
!21520 = distinct !DISubprogram(name: "syslog_convert_filter_val2str", scope: !2237, file: !2237, line: 1451, type: !21521, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21526)
!21521 = !DISubroutineType(types: !21522)
!21522 = !{!7, !21523, !491}
!21523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21524, size: 32)
!21524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21525, size: 32)
!21525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2305)
!21526 = !{!21527, !21528, !21529, !21530, !21531}
!21527 = !DILocalVariable(name: "filters", arg: 1, scope: !21520, file: !2237, line: 1451, type: !21523)
!21528 = !DILocalVariable(name: "buff", arg: 2, scope: !21520, file: !2237, line: 1451, type: !491)
!21529 = !DILocalVariable(name: "i", scope: !21520, file: !2237, line: 1453, type: !7)
!21530 = !DILocalVariable(name: "pos", scope: !21520, file: !2237, line: 1454, type: !7)
!21531 = !DILocalVariable(name: "n", scope: !21520, file: !2237, line: 1455, type: !7)
!21532 = !DILocation(line: 0, scope: !21520)
!21533 = !DILocation(line: 1457, column: 20, scope: !21520)
!21534 = !DILocation(line: 1457, column: 23, scope: !21520)
!21535 = !DILocation(line: 1457, column: 5, scope: !21520)
!21536 = !DILocation(line: 1458, column: 23, scope: !21537)
!21537 = distinct !DILexicalBlock(scope: !21520, file: !2237, line: 1457, column: 35)
!21538 = !DILocation(line: 1458, column: 52, scope: !21537)
!21539 = !DILocation(line: 1459, column: 24, scope: !21537)
!21540 = !DILocation(line: 1459, column: 21, scope: !21537)
!21541 = !DILocation(line: 1460, column: 33, scope: !21537)
!21542 = !DILocation(line: 1461, column: 33, scope: !21537)
!21543 = !DILocation(line: 1462, column: 33, scope: !21537)
!21544 = !DILocation(line: 1458, column: 13, scope: !21537)
!21545 = !DILocation(line: 1463, column: 13, scope: !21537)
!21546 = !DILocation(line: 1464, column: 10, scope: !21537)
!21547 = distinct !{!21547, !21535, !21548}
!21548 = !DILocation(line: 1465, column: 5, scope: !21520)
!21549 = !DILocation(line: 1467, column: 5, scope: !21550)
!21550 = distinct !DILexicalBlock(scope: !21520, file: !2237, line: 1467, column: 5)
!21551 = !DILocation(line: 1467, column: 5, scope: !21520)
!21552 = !DILocation(line: 1467, column: 5, scope: !21553)
!21553 = distinct !DILexicalBlock(scope: !21550, file: !2237, line: 1467, column: 5)
!21554 = !DILocation(line: 1469, column: 5, scope: !21520)
!21555 = distinct !DISubprogram(name: "log_switch_to_str", scope: !2237, file: !2237, line: 1472, type: !21556, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21558)
!21556 = !DISubroutineType(types: !21557)
!21557 = !{!662, !691}
!21558 = !{!21559}
!21559 = !DILocalVariable(name: "log_switch", arg: 1, scope: !21555, file: !2237, line: 1472, type: !691)
!21560 = !DILocation(line: 0, scope: !21555)
!21561 = !DILocation(line: 1474, column: 5, scope: !21562)
!21562 = distinct !DILexicalBlock(scope: !21555, file: !2237, line: 1474, column: 5)
!21563 = !DILocation(line: 1474, column: 5, scope: !21555)
!21564 = !DILocation(line: 1474, column: 5, scope: !21565)
!21565 = distinct !DILexicalBlock(scope: !21562, file: !2237, line: 1474, column: 5)
!21566 = !DILocation(line: 1475, column: 13, scope: !21555)
!21567 = !DILocation(line: 1475, column: 5, scope: !21555)
!21568 = distinct !DISubprogram(name: "print_level_to_str", scope: !2237, file: !2237, line: 1478, type: !21569, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21571)
!21569 = !DISubroutineType(types: !21570)
!21570 = !{!662, !693}
!21571 = !{!21572}
!21572 = !DILocalVariable(name: "print_level", arg: 1, scope: !21568, file: !2237, line: 1478, type: !693)
!21573 = !DILocation(line: 0, scope: !21568)
!21574 = !DILocation(line: 1480, column: 5, scope: !21575)
!21575 = distinct !DILexicalBlock(scope: !21568, file: !2237, line: 1480, column: 5)
!21576 = !DILocation(line: 1480, column: 5, scope: !21568)
!21577 = !DILocation(line: 1480, column: 5, scope: !21578)
!21578 = distinct !DILexicalBlock(scope: !21575, file: !2237, line: 1480, column: 5)
!21579 = !DILocation(line: 1481, column: 13, scope: !21568)
!21580 = !DILocation(line: 1481, column: 5, scope: !21568)
!21581 = distinct !DISubprogram(name: "__wrap_printf", scope: !2237, file: !2237, line: 1508, type: !21582, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !21584)
!21582 = !DISubroutineType(types: !21583)
!21583 = !{!7, !662, null}
!21584 = !{!21585, !21586, !21587, !21588}
!21585 = !DILocalVariable(name: "format", arg: 1, scope: !21581, file: !2237, line: 1508, type: !662)
!21586 = !DILocalVariable(name: "ap", scope: !21581, file: !2237, line: 1510, type: !20509)
!21587 = !DILocalVariable(name: "ret", scope: !21581, file: !2237, line: 1511, type: !7)
!21588 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !21581, file: !2237, line: 1512, type: !1800)
!21589 = !DILocation(line: 0, scope: !21581)
!21590 = !DILocation(line: 1510, column: 5, scope: !21581)
!21591 = !DILocation(line: 1510, column: 13, scope: !21581)
!21592 = !DILocation(line: 1514, column: 11, scope: !21593)
!21593 = distinct !DILexicalBlock(scope: !21581, file: !2237, line: 1514, column: 10)
!21594 = !DILocation(line: 1514, column: 10, scope: !21581)
!21595 = !DILocation(line: 231, column: 2, scope: !20585, inlinedAt: !21596)
!21596 = distinct !DILocation(line: 1518, column: 30, scope: !21581)
!21597 = !DILocation(line: 0, scope: !20585, inlinedAt: !21596)
!21598 = !DILocation(line: 1520, column: 5, scope: !21581)
!21599 = !DILocation(line: 1521, column: 11, scope: !21581)
!21600 = !DILocation(line: 1522, column: 5, scope: !21581)
!21601 = !DILocation(line: 0, scope: !20607, inlinedAt: !21602)
!21602 = distinct !DILocation(line: 1524, column: 5, scope: !21581)
!21603 = !DILocation(line: 249, column: 2, scope: !20607, inlinedAt: !21602)
!21604 = !DILocation(line: 1526, column: 5, scope: !21581)
!21605 = !DILocation(line: 1527, column: 1, scope: !21581)
