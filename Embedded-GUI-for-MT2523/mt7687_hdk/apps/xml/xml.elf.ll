; ModuleID = './build/xml.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%struct.log_control_block_t = type { i8*, i32, i32, void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.uart_context_t = type { i8, %struct.hal_uart_config_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [6 x i8], i32, i32, i32, i32, i32, i32 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.QUEUE_REGISTRY_ITEM = type { i8*, i8* }
%struct.A_BLOCK_LINK = type { %struct.A_BLOCK_LINK*, i32 }
%struct.anon.17 = type { i8*, i32 }
%struct.mxml_node_s = type { i32, %struct.mxml_node_s*, %struct.mxml_node_s*, %struct.mxml_node_s*, %struct.mxml_node_s*, %struct.mxml_node_s*, %union.mxml_value_u, i32, i8* }
%union.mxml_value_u = type { double, [8 x i8] }
%struct.exception_config_t = type { i32, [6 x %struct.exception_config_type] }
%struct.exception_config_type = type { void ()*, void ()* }
%struct.TaskContextType = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.syslog_buffer_t = type { i32, [292 x i8] }
%struct.syslog_config_s = type { {}*, %struct.log_control_block_t** }
%struct.memory_region_type = type { i8*, i32*, i32*, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.anon.17, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.anon.17, i8*, i32, [3 x i8], [1 x i8], %struct.anon.17, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }
%struct.__va_list = type { i8* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%struct.xTASK_STATUS = type { i8*, i8*, i32, i32, i32, i32, i32, i16 }
%struct.QueueDefinition = type { i8*, i8*, i8*, %struct.__va_list, %struct.xLIST, %struct.xLIST, i32, i32, i32, i32, i32, i32, i8 }
%struct.tmrTimerQueueMessage = type { i32, %union.anon }
%union.anon = type { %struct.tmrTimerParameters }
%struct.tmrTimerParameters = type { i32, %struct.tmrTimerControl* }
%struct.tmrTimerControl = type { i8*, %struct.xLIST_ITEM, i32, i32, i8*, void (i8*)*, i32 }
%struct.mxml_element_s = type { i8*, i32, %struct.QUEUE_REGISTRY_ITEM* }
%struct._mxml_global_s = type { void (i8*)*, i32, [10 x i32 (i8*)*], i32, i32 (%struct.mxml_node_s*, i8*)*, i8* (%struct.mxml_node_s*)* }
%struct.mxml_text_s = type { i32, i8* }
%struct.mxml_index_s = type { i8*, i32, i32, i32, %struct.mxml_node_s** }
%struct.mxml_custom_s = type { i8*, void (i8*)* }
%struct.normal_log_message_t = type { i8*, i32, i8*, i32, i32, [257 x i8] }
%struct.hex_dump_message_t = type { i8*, i32, i8*, i32, i32, [129 x i8], i32, [128 x i8], i8* }
%struct.log_message_t = type { i32, %union.anon.44 }
%union.anon.44 = type { %struct.hex_dump_message_t }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }

@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !0
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !67
@.str = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !80
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !72
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !74
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !76
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !81
@.str.3 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.4 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !160
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !161
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !162
@.str.9 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.10 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !181
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !212
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !217
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !222
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !227
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !230
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !232
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !237
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !239
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !241
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !243
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !245
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !247
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !249
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !251
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !253
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !255
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !257
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !259
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !264
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !266
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !268
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !270
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !70
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.23, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.24, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !273
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !64
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.22 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.25 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.26 = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9.23 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21.24 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !278
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !288
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@.str.55 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.56 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !290
@.str.57 = private unnamed_addr constant [4 x i8] c"hal\00", align 1
@log_control_block_hal = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !340
@g_cache_status = dso_local global i8 0, align 1, !dbg !377
@.str.66 = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.67 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !460
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !465
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !468
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !513
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !605
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.81 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.82 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.85 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.86 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.87 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !644
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !700
@g_uart_send_lock_status = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !746
@g_uart_sleep_handler = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !743
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.56, i32 0, i32 0)], align 4, !dbg !327
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [2 x i32] [i32 0, i32 5], align 4, !dbg !335
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !749
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@DWT_NUMCOMP = internal unnamed_addr global i32 0, align 4, !dbg !760
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !810
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !830
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !832
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !834
@__const.gpio_mode_init.mode_temp = private unnamed_addr constant [10 x i32] [i32 -2004322441, i32 -2004318072, i32 -2004318072, i32 -2004596600, i32 -2005464952, i32 -2004318072, i32 -2004318072, i32 -2004457336, i32 -2004318072, i32 8], align 4
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !836
@.str.100 = private unnamed_addr constant [11 x i8] c"pxTaskCode\00", align 1
@.str.1.101 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/tasks.c\00", align 1
@.str.2.102 = private unnamed_addr constant [67 x i8] c"( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES )\00", align 1
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !953
@xSchedulerRunning = internal global i32 0, align 4, !dbg !956
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !959
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !961
@pxReadyTasksLists = internal global [20 x %struct.xLIST] zeroinitializer, align 4, !dbg !939
@xTasksWaitingTermination = internal global %struct.xLIST zeroinitializer, align 4, !dbg !949
@uxTasksDeleted = internal global i32 0, align 4, !dbg !963
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !965
@.str.4.103 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended == 0\00", align 1
@.str.5.104 = private unnamed_addr constant [19 x i8] c"pxPreviousWakeTime\00", align 1
@.str.6.105 = private unnamed_addr constant [24 x i8] c"( xTimeIncrement > 0U )\00", align 1
@xTickCount = internal global i32 0, align 4, !dbg !967
@.str.7.108 = private unnamed_addr constant [6 x i8] c"pxTCB\00", align 1
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !942
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !945
@xSuspendedTaskList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !951
@.str.8.109 = private unnamed_addr constant [41 x i8] c"( uxNewPriority < configMAX_PRIORITIES )\00", align 1
@.str.9.111 = private unnamed_addr constant [14 x i8] c"xTaskToResume\00", align 1
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !947
@.str.10.112 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.11.113 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.12.106 = private unnamed_addr constant [21 x i8] c"uxSchedulerSuspended\00", align 1
@xYieldPending = internal global i32 0, align 4, !dbg !970
@uxPendedTicks = internal global i32 0, align 4, !dbg !972
@.str.13.107 = private unnamed_addr constant [43 x i8] c"( listLIST_IS_EMPTY( pxDelayedTaskList ) )\00", align 1
@xNumOfOverflows = internal global i32 0, align 4, !dbg !974
@xNextTaskUnblockTime = internal global i32 -1, align 4, !dbg !976
@vTaskSwitchContext.ucExpectedStackBytes = internal constant [20 x i8] c"\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5", align 1, !dbg !924
@.str.14.110 = private unnamed_addr constant [71 x i8] c"listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0\00", align 1
@.str.15.114 = private unnamed_addr constant [12 x i8] c"pxEventList\00", align 1
@.str.16.115 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended != 0\00", align 1
@.str.17.116 = private unnamed_addr constant [15 x i8] c"pxUnblockedTCB\00", align 1
@.str.18.117 = private unnamed_addr constant [32 x i8] c"uxSchedulerSuspended != pdFALSE\00", align 1
@.str.19.118 = private unnamed_addr constant [10 x i8] c"pxTimeOut\00", align 1
@.str.20.119 = private unnamed_addr constant [14 x i8] c"pxTicksToWait\00", align 1
@.str.21.120 = private unnamed_addr constant [21 x i8] c"pxTCB->uxMutexesHeld\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"\09%c\09%u\09%u\09%u\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"xTaskToNotify\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"xTask\00", align 1
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !978
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !980
@switch.table.vTaskList = private unnamed_addr constant [4 x i32] [i32 82, i32 66, i32 83, i32 68], align 4
@.str.131 = private unnamed_addr constant [8 x i8] c"pxQueue\00", align 1
@.str.1.132 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/queue.c\00", align 1
@.str.2.133 = private unnamed_addr constant [34 x i8] c"uxQueueLength > ( UBaseType_t ) 0\00", align 1
@.str.3.134 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.4.135 = private unnamed_addr constant [11 x i8] c"pxNewQueue\00", align 1
@.str.5.139 = private unnamed_addr constant [8 x i8] c"pxMutex\00", align 1
@.str.6.141 = private unnamed_addr constant [16 x i8] c"uxMaxCount != 0\00", align 1
@.str.7.142 = private unnamed_addr constant [29 x i8] c"uxInitialCount <= uxMaxCount\00", align 1
@.str.8.143 = private unnamed_addr constant [8 x i8] c"xHandle\00", align 1
@.str.9.136 = private unnamed_addr constant [80 x i8] c"!( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.10.137 = private unnamed_addr constant [71 x i8] c"!( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) )\00", align 1
@.str.11.138 = private unnamed_addr constant [86 x i8] c"!( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) )\00", align 1
@.str.12.144 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize == 0\00", align 1
@.str.13.140 = private unnamed_addr constant [75 x i8] c"!( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.14.145 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize != 0\00", align 1
@.str.15.146 = private unnamed_addr constant [7 x i8] c"xQueue\00", align 1
@xQueueRegistry = dso_local local_unnamed_addr global [8 x %struct.QUEUE_REGISTRY_ITEM] zeroinitializer, align 4, !dbg !983
@xTimerQueue = internal unnamed_addr global i8* null, align 4, !dbg !1046
@.str.149 = private unnamed_addr constant [8 x i8] c"Tmr Svc\00", align 1
@.str.1.150 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.2.151 = private unnamed_addr constant [52 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/timers.c\00", align 1
@.str.3.156 = private unnamed_addr constant [28 x i8] c"( xTimerPeriodInTicks > 0 )\00", align 1
@pxCurrentTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1079
@prvSampleTimeNow.xLastTime = internal unnamed_addr global i32 0, align 4, !dbg !1095
@.str.4.152 = private unnamed_addr constant [8 x i8] c"xResult\00", align 1
@pxOverflowTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1105
@.str.5.153 = private unnamed_addr constant [37 x i8] c"( pxTimer->xTimerPeriodInTicks > 0 )\00", align 1
@xActiveTimerList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1107
@xActiveTimerList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1109
@.str.6.154 = private unnamed_addr constant [12 x i8] c"xTimerQueue\00", align 1
@.str.7.155 = private unnamed_addr constant [5 x i8] c"TmrQ\00", align 1
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !1111
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !1130
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !1132
@.str.165 = private unnamed_addr constant [28 x i8] c"uxCriticalNesting == 1000UL\00", align 1
@.str.1.160 = private unnamed_addr constant [72 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c\00", align 1
@.str.2.168 = private unnamed_addr constant [53 x i8] c"( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0\00", align 1
@.str.3.171 = private unnamed_addr constant [18 x i8] c"uxCriticalNesting\00", align 1
@.str.4.174 = private unnamed_addr constant [42 x i8] c"ucCurrentPriority >= ucMaxSysCallPriority\00", align 1
@.str.5.175 = private unnamed_addr constant [66 x i8] c"( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue\00", align 1
@.str.6.159 = private unnamed_addr constant [26 x i8] c"uxCriticalNesting == ~0UL\00", align 1
@pxEnd = internal unnamed_addr global %struct.A_BLOCK_LINK* null, align 4, !dbg !1134
@xBlockAllocatedBit = internal unnamed_addr global i1 false, align 4, !dbg !1163
@.str.1.179 = private unnamed_addr constant [69 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c\00", align 1
@xFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1154
@xStart = internal global %struct.A_BLOCK_LINK zeroinitializer, align 4, !dbg !1150
@.str.2.178 = private unnamed_addr constant [67 x i8] c"( ( ( uint32_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@xMinimumEverFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1156
@.str.3.180 = private unnamed_addr constant [61 x i8] c"( ( ( uint32_t ) pvReturn ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@.str.4.183 = private unnamed_addr constant [49 x i8] c"( pxLink->xBlockSize & xBlockAllocatedBit ) != 0\00", align 1
@.str.5.184 = private unnamed_addr constant [32 x i8] c"pxLink->pxNextFreeBlock == NULL\00", align 1
@ucHeap = internal global [148480 x i8] zeroinitializer, align 1, !dbg !1158
@.str.187 = private unnamed_addr constant [60 x i8] c"Unable to allocate memory for attribute '%s' in element %s!\00", align 1
@.str.188 = private unnamed_addr constant [31 x i8] c"Unable to add entity callback!\00", align 1
@.str.1.192 = private unnamed_addr constant [4 x i8] c"amp\00", align 1
@.str.2.191 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.3.190 = private unnamed_addr constant [3 x i8] c"gt\00", align 1
@.str.4.189 = private unnamed_addr constant [5 x i8] c"quot\00", align 1
@_mxml_entity_cb.entities = internal unnamed_addr constant [257 x %struct.anon.17] [%struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.193, i32 0, i32 0), i32 198 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.194, i32 0, i32 0), i32 193 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.195, i32 0, i32 0), i32 194 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.196, i32 0, i32 0), i32 192 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.197, i32 0, i32 0), i32 913 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.198, i32 0, i32 0), i32 197 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.199, i32 0, i32 0), i32 195 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.200, i32 0, i32 0), i32 196 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.201, i32 0, i32 0), i32 914 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.202, i32 0, i32 0), i32 199 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.203, i32 0, i32 0), i32 935 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.204, i32 0, i32 0), i32 8225 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.205, i32 0, i32 0), i32 916 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.206, i32 0, i32 0), i32 208 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.207, i32 0, i32 0), i32 208 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.208, i32 0, i32 0), i32 201 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.209, i32 0, i32 0), i32 202 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22.210, i32 0, i32 0), i32 200 }, %struct.anon.17 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23.211, i32 0, i32 0), i32 917 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.212, i32 0, i32 0), i32 919 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.213, i32 0, i32 0), i32 203 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 915 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i32 205 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i32 206 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i32 204 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i32 921 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i32 207 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i32 0, i32 0), i32 922 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i32 923 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i32 0, i32 0), i32 924 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i32 209 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i32 925 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i32 0, i32 0), i32 338 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i32 211 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i32 212 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i32 210 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), i32 937 }, %struct.anon.17 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 927 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i32 216 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 213 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 214 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i32 934 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i32 928 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 8243 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i32 936 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i32 929 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i32 352 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 931 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 222 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), i32 932 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55.214, i32 0, i32 0), i32 920 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i32 218 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57.215, i32 0, i32 0), i32 219 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i32 217 }, %struct.anon.17 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i32 933 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 220 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i32 926 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i32 221 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 376 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i32 918 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 225 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66.216, i32 0, i32 0), i32 226 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i32 180 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0), i32 230 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i32 224 }, %struct.anon.17 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i32 8501 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i32 0, i32 0), i32 945 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.192, i32 0, i32 0), i32 38 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i32 8743 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i32 0, i32 0), i32 8736 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i32 39 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i32 229 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i32 0, i32 0), i32 8776 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), i32 227 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78.217, i32 0, i32 0), i32 228 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), i32 8222 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i32 946 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81.218, i32 0, i32 0), i32 166 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0), i32 166 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i32 8226 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), i32 8745 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i32 231 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), i32 184 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i32 162 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i32 967 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i32 710 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i32 0, i32 0), i32 9827 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), i32 8773 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), i32 169 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0), i32 8629 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i32 8746 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i32 0, i32 0), i32 164 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.96, i32 0, i32 0), i32 8659 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.97, i32 0, i32 0), i32 8224 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), i32 8595 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0), i32 176 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100.219, i32 0, i32 0), i32 948 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0), i32 9830 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), i32 168 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i32 0, i32 0), i32 247 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.104, i32 0, i32 0), i32 233 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i32 234 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i32 0, i32 0), i32 232 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i32 0, i32 0), i32 8709 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i32 8195 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0), i32 8194 }, %struct.anon.17 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0), i32 949 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i32 8801 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i32 0, i32 0), i32 951 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i32 240 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), i32 235 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), i32 8364 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i32 0, i32 0), i32 8707 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0), i32 402 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), i32 8704 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0), i32 189 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i32 0, i32 0), i32 188 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i32 0, i32 0), i32 190 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i32 0, i32 0), i32 8260 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), i32 947 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i32 0, i32 0), i32 8805 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.190, i32 0, i32 0), i32 62 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i32 8660 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i32 0, i32 0), i32 8596 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i32 9829 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.128, i32 0, i32 0), i32 8230 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i32 0, i32 0), i32 175 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i32 237 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131.220, i32 0, i32 0), i32 238 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i32 161 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.133, i32 0, i32 0), i32 236 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i32 8465 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i32 0, i32 0), i32 8734 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.136, i32 0, i32 0), i32 8747 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i32 0, i32 0), i32 953 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0), i32 191 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i32 0, i32 0), i32 8712 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.140, i32 0, i32 0), i32 239 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i32 0, i32 0), i32 954 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142, i32 0, i32 0), i32 8656 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.143, i32 0, i32 0), i32 955 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), i32 9001 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i32 171 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.146, i32 0, i32 0), i32 8592 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i32 0, i32 0), i32 8968 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.148, i32 0, i32 0), i32 8220 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149.221, i32 0, i32 0), i32 8804 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i32 0, i32 0), i32 8970 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.151, i32 0, i32 0), i32 8727 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.152, i32 0, i32 0), i32 9674 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.153, i32 0, i32 0), i32 8206 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i32 8249 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.155, i32 0, i32 0), i32 8216 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.191, i32 0, i32 0), i32 60 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.156, i32 0, i32 0), i32 175 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i32 0, i32 0), i32 8212 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.158, i32 0, i32 0), i32 181 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i32 0, i32 0), i32 183 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i32 0, i32 0), i32 8722 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i32 956 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.162, i32 0, i32 0), i32 8711 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.163, i32 0, i32 0), i32 160 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.164, i32 0, i32 0), i32 8211 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165.222, i32 0, i32 0), i32 8800 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i32 0, i32 0), i32 8715 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.167, i32 0, i32 0), i32 172 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.168, i32 0, i32 0), i32 8713 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i32 8836 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i32 0, i32 0), i32 241 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.171, i32 0, i32 0), i32 957 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i32 0, i32 0), i32 243 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i32 244 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.174, i32 0, i32 0), i32 339 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.175, i32 0, i32 0), i32 242 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.176, i32 0, i32 0), i32 8254 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i32 0, i32 0), i32 969 }, %struct.anon.17 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i32 0, i32 0), i32 959 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0), i32 8853 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i32 8744 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.181, i32 0, i32 0), i32 170 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0), i32 186 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i32 248 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.184, i32 0, i32 0), i32 245 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i32 0), i32 8855 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i32 246 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187.223, i32 0, i32 0), i32 182 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.188.224, i32 0, i32 0), i32 8706 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i32 8240 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190, i32 0, i32 0), i32 8869 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i32 966 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i32 0, i32 0), i32 960 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.193, i32 0, i32 0), i32 982 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.194, i32 0, i32 0), i32 177 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i32 0, i32 0), i32 163 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0), i32 8242 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), i32 8719 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), i32 8733 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.199, i32 0, i32 0), i32 968 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.189, i32 0, i32 0), i32 34 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i32 8658 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i32 0, i32 0), i32 8730 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0), i32 9002 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.203, i32 0, i32 0), i32 187 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.204, i32 0, i32 0), i32 8594 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i32 0, i32 0), i32 8969 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.206, i32 0, i32 0), i32 8221 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.207, i32 0, i32 0), i32 8476 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.208, i32 0, i32 0), i32 174 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i32 0, i32 0), i32 8971 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0), i32 961 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.211, i32 0, i32 0), i32 8207 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.212, i32 0, i32 0), i32 8250 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.213, i32 0, i32 0), i32 8217 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), i32 8218 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i32 0, i32 0), i32 353 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.216, i32 0, i32 0), i32 8901 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.217, i32 0, i32 0), i32 167 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.218, i32 0, i32 0), i32 173 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.219, i32 0, i32 0), i32 963 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i32 0, i32 0), i32 962 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.221, i32 0, i32 0), i32 8764 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i32 9824 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.223, i32 0, i32 0), i32 8834 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i32 0, i32 0), i32 8838 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.225, i32 0, i32 0), i32 8721 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.226, i32 0, i32 0), i32 8835 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.227, i32 0, i32 0), i32 185 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.228, i32 0, i32 0), i32 178 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i32 0, i32 0), i32 179 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i32 0, i32 0), i32 8839 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.231, i32 0, i32 0), i32 223 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.232, i32 0, i32 0), i32 964 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.233, i32 0, i32 0), i32 8756 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.234, i32 0, i32 0), i32 952 }, %struct.anon.17 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0), i32 977 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i32 0, i32 0), i32 8201 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.237, i32 0, i32 0), i32 254 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.238, i32 0, i32 0), i32 732 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.239, i32 0, i32 0), i32 215 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.240, i32 0, i32 0), i32 8482 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i32 0, i32 0), i32 8657 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.242, i32 0, i32 0), i32 250 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243, i32 0, i32 0), i32 8593 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i32 251 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.245, i32 0, i32 0), i32 249 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.246, i32 0, i32 0), i32 168 }, %struct.anon.17 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.247, i32 0, i32 0), i32 978 }, %struct.anon.17 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.248, i32 0, i32 0), i32 965 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.249, i32 0, i32 0), i32 252 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.250, i32 0, i32 0), i32 8472 }, %struct.anon.17 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i32 0, i32 0), i32 958 }, %struct.anon.17 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.252, i32 0, i32 0), i32 253 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.253, i32 0, i32 0), i32 165 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i32 0, i32 0), i32 255 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i32 0, i32 0), i32 950 }, %struct.anon.17 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.256, i32 0, i32 0), i32 8205 }, %struct.anon.17 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.257, i32 0, i32 0), i32 8204 }], align 4, !dbg !1164
@.str.5.193 = private unnamed_addr constant [6 x i8] c"AElig\00", align 1
@.str.6.194 = private unnamed_addr constant [7 x i8] c"Aacute\00", align 1
@.str.7.195 = private unnamed_addr constant [6 x i8] c"Acirc\00", align 1
@.str.8.196 = private unnamed_addr constant [7 x i8] c"Agrave\00", align 1
@.str.9.197 = private unnamed_addr constant [6 x i8] c"Alpha\00", align 1
@.str.10.198 = private unnamed_addr constant [6 x i8] c"Aring\00", align 1
@.str.11.199 = private unnamed_addr constant [7 x i8] c"Atilde\00", align 1
@.str.12.200 = private unnamed_addr constant [5 x i8] c"Auml\00", align 1
@.str.13.201 = private unnamed_addr constant [5 x i8] c"Beta\00", align 1
@.str.14.202 = private unnamed_addr constant [7 x i8] c"Ccedil\00", align 1
@.str.15.203 = private unnamed_addr constant [4 x i8] c"Chi\00", align 1
@.str.16.204 = private unnamed_addr constant [7 x i8] c"Dagger\00", align 1
@.str.17.205 = private unnamed_addr constant [6 x i8] c"Delta\00", align 1
@.str.18.206 = private unnamed_addr constant [7 x i8] c"Dstrok\00", align 1
@.str.19.207 = private unnamed_addr constant [4 x i8] c"ETH\00", align 1
@.str.20.208 = private unnamed_addr constant [7 x i8] c"Eacute\00", align 1
@.str.21.209 = private unnamed_addr constant [6 x i8] c"Ecirc\00", align 1
@.str.22.210 = private unnamed_addr constant [7 x i8] c"Egrave\00", align 1
@.str.23.211 = private unnamed_addr constant [8 x i8] c"Epsilon\00", align 1
@.str.24.212 = private unnamed_addr constant [4 x i8] c"Eta\00", align 1
@.str.25.213 = private unnamed_addr constant [5 x i8] c"Euml\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"Gamma\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"Iacute\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"Icirc\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"Igrave\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"Iota\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"Iuml\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"Kappa\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"Lambda\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"Mu\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"Ntilde\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"Nu\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"OElig\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"Oacute\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"Ocirc\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"Ograve\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"Omega\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"Omicron\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"Oslash\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"Otilde\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"Ouml\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"Phi\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"Pi\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"Prime\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"Psi\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"Rho\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"Scaron\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"Sigma\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"THORN\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"Tau\00", align 1
@.str.55.214 = private unnamed_addr constant [6 x i8] c"Theta\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"Uacute\00", align 1
@.str.57.215 = private unnamed_addr constant [6 x i8] c"Ucirc\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"Ugrave\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"Upsilon\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"Uuml\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"Xi\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"Yacute\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"Yuml\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"Zeta\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"aacute\00", align 1
@.str.66.216 = private unnamed_addr constant [6 x i8] c"acirc\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"acute\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"aelig\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"agrave\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"alefsym\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"ang\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"apos\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"aring\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"asymp\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"atilde\00", align 1
@.str.78.217 = private unnamed_addr constant [5 x i8] c"auml\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"bdquo\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.81.218 = private unnamed_addr constant [7 x i8] c"brkbar\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"brvbar\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"bull\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"cap\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"ccedil\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"cedil\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"cent\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"chi\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"circ\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"clubs\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"cong\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"crarr\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"cup\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c"curren\00", align 1
@.str.96 = private unnamed_addr constant [5 x i8] c"dArr\00", align 1
@.str.97 = private unnamed_addr constant [7 x i8] c"dagger\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"darr\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"deg\00", align 1
@.str.100.219 = private unnamed_addr constant [6 x i8] c"delta\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"diams\00", align 1
@.str.102 = private unnamed_addr constant [4 x i8] c"die\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"divide\00", align 1
@.str.104 = private unnamed_addr constant [7 x i8] c"eacute\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"ecirc\00", align 1
@.str.106 = private unnamed_addr constant [7 x i8] c"egrave\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"emsp\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"ensp\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"epsilon\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"equiv\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"eta\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"eth\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"euml\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"euro\00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"exist\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"fnof\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"forall\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"frac12\00", align 1
@.str.120 = private unnamed_addr constant [7 x i8] c"frac14\00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"frac34\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"frasl\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c"ge\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"hArr\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"harr\00", align 1
@.str.127 = private unnamed_addr constant [7 x i8] c"hearts\00", align 1
@.str.128 = private unnamed_addr constant [7 x i8] c"hellip\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"hibar\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"iacute\00", align 1
@.str.131.220 = private unnamed_addr constant [6 x i8] c"icirc\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"iexcl\00", align 1
@.str.133 = private unnamed_addr constant [7 x i8] c"igrave\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"infin\00", align 1
@.str.136 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"iota\00", align 1
@.str.138 = private unnamed_addr constant [7 x i8] c"iquest\00", align 1
@.str.139 = private unnamed_addr constant [5 x i8] c"isin\00", align 1
@.str.140 = private unnamed_addr constant [5 x i8] c"iuml\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c"kappa\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c"lArr\00", align 1
@.str.143 = private unnamed_addr constant [7 x i8] c"lambda\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"laquo\00", align 1
@.str.146 = private unnamed_addr constant [5 x i8] c"larr\00", align 1
@.str.147 = private unnamed_addr constant [6 x i8] c"lceil\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"ldquo\00", align 1
@.str.149.221 = private unnamed_addr constant [3 x i8] c"le\00", align 1
@.str.150 = private unnamed_addr constant [7 x i8] c"lfloor\00", align 1
@.str.151 = private unnamed_addr constant [7 x i8] c"lowast\00", align 1
@.str.152 = private unnamed_addr constant [4 x i8] c"loz\00", align 1
@.str.153 = private unnamed_addr constant [4 x i8] c"lrm\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"lsaquo\00", align 1
@.str.155 = private unnamed_addr constant [6 x i8] c"lsquo\00", align 1
@.str.156 = private unnamed_addr constant [5 x i8] c"macr\00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"mdash\00", align 1
@.str.158 = private unnamed_addr constant [6 x i8] c"micro\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c"middot\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"minus\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"mu\00", align 1
@.str.162 = private unnamed_addr constant [6 x i8] c"nabla\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"nbsp\00", align 1
@.str.164 = private unnamed_addr constant [6 x i8] c"ndash\00", align 1
@.str.165.222 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"ni\00", align 1
@.str.167 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.168 = private unnamed_addr constant [6 x i8] c"notin\00", align 1
@.str.169 = private unnamed_addr constant [5 x i8] c"nsub\00", align 1
@.str.170 = private unnamed_addr constant [7 x i8] c"ntilde\00", align 1
@.str.171 = private unnamed_addr constant [3 x i8] c"nu\00", align 1
@.str.172 = private unnamed_addr constant [7 x i8] c"oacute\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"ocirc\00", align 1
@.str.174 = private unnamed_addr constant [6 x i8] c"oelig\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c"ograve\00", align 1
@.str.176 = private unnamed_addr constant [6 x i8] c"oline\00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"omega\00", align 1
@.str.178 = private unnamed_addr constant [8 x i8] c"omicron\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"oplus\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.181 = private unnamed_addr constant [5 x i8] c"ordf\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"ordm\00", align 1
@.str.183 = private unnamed_addr constant [7 x i8] c"oslash\00", align 1
@.str.184 = private unnamed_addr constant [7 x i8] c"otilde\00", align 1
@.str.185 = private unnamed_addr constant [7 x i8] c"otimes\00", align 1
@.str.186 = private unnamed_addr constant [5 x i8] c"ouml\00", align 1
@.str.187.223 = private unnamed_addr constant [5 x i8] c"para\00", align 1
@.str.188.224 = private unnamed_addr constant [5 x i8] c"part\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"permil\00", align 1
@.str.190 = private unnamed_addr constant [5 x i8] c"perp\00", align 1
@.str.191 = private unnamed_addr constant [4 x i8] c"phi\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.193 = private unnamed_addr constant [4 x i8] c"piv\00", align 1
@.str.194 = private unnamed_addr constant [7 x i8] c"plusmn\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"pound\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"prime\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"prod\00", align 1
@.str.198 = private unnamed_addr constant [5 x i8] c"prop\00", align 1
@.str.199 = private unnamed_addr constant [4 x i8] c"psi\00", align 1
@.str.200 = private unnamed_addr constant [5 x i8] c"rArr\00", align 1
@.str.201 = private unnamed_addr constant [6 x i8] c"radic\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"rang\00", align 1
@.str.203 = private unnamed_addr constant [6 x i8] c"raquo\00", align 1
@.str.204 = private unnamed_addr constant [5 x i8] c"rarr\00", align 1
@.str.205 = private unnamed_addr constant [6 x i8] c"rceil\00", align 1
@.str.206 = private unnamed_addr constant [6 x i8] c"rdquo\00", align 1
@.str.207 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.208 = private unnamed_addr constant [4 x i8] c"reg\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"rfloor\00", align 1
@.str.210 = private unnamed_addr constant [4 x i8] c"rho\00", align 1
@.str.211 = private unnamed_addr constant [4 x i8] c"rlm\00", align 1
@.str.212 = private unnamed_addr constant [7 x i8] c"rsaquo\00", align 1
@.str.213 = private unnamed_addr constant [6 x i8] c"rsquo\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"sbquo\00", align 1
@.str.215 = private unnamed_addr constant [7 x i8] c"scaron\00", align 1
@.str.216 = private unnamed_addr constant [5 x i8] c"sdot\00", align 1
@.str.217 = private unnamed_addr constant [5 x i8] c"sect\00", align 1
@.str.218 = private unnamed_addr constant [4 x i8] c"shy\00", align 1
@.str.219 = private unnamed_addr constant [6 x i8] c"sigma\00", align 1
@.str.220 = private unnamed_addr constant [7 x i8] c"sigmaf\00", align 1
@.str.221 = private unnamed_addr constant [4 x i8] c"sim\00", align 1
@.str.222 = private unnamed_addr constant [7 x i8] c"spades\00", align 1
@.str.223 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.224 = private unnamed_addr constant [5 x i8] c"sube\00", align 1
@.str.225 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.226 = private unnamed_addr constant [4 x i8] c"sup\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"sup1\00", align 1
@.str.228 = private unnamed_addr constant [5 x i8] c"sup2\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"sup3\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"supe\00", align 1
@.str.231 = private unnamed_addr constant [6 x i8] c"szlig\00", align 1
@.str.232 = private unnamed_addr constant [4 x i8] c"tau\00", align 1
@.str.233 = private unnamed_addr constant [7 x i8] c"there4\00", align 1
@.str.234 = private unnamed_addr constant [6 x i8] c"theta\00", align 1
@.str.235 = private unnamed_addr constant [9 x i8] c"thetasym\00", align 1
@.str.236 = private unnamed_addr constant [7 x i8] c"thinsp\00", align 1
@.str.237 = private unnamed_addr constant [6 x i8] c"thorn\00", align 1
@.str.238 = private unnamed_addr constant [6 x i8] c"tilde\00", align 1
@.str.239 = private unnamed_addr constant [6 x i8] c"times\00", align 1
@.str.240 = private unnamed_addr constant [6 x i8] c"trade\00", align 1
@.str.241 = private unnamed_addr constant [5 x i8] c"uArr\00", align 1
@.str.242 = private unnamed_addr constant [7 x i8] c"uacute\00", align 1
@.str.243 = private unnamed_addr constant [5 x i8] c"uarr\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"ucirc\00", align 1
@.str.245 = private unnamed_addr constant [7 x i8] c"ugrave\00", align 1
@.str.246 = private unnamed_addr constant [4 x i8] c"uml\00", align 1
@.str.247 = private unnamed_addr constant [6 x i8] c"upsih\00", align 1
@.str.248 = private unnamed_addr constant [8 x i8] c"upsilon\00", align 1
@.str.249 = private unnamed_addr constant [5 x i8] c"uuml\00", align 1
@.str.250 = private unnamed_addr constant [7 x i8] c"weierp\00", align 1
@.str.251 = private unnamed_addr constant [3 x i8] c"xi\00", align 1
@.str.252 = private unnamed_addr constant [7 x i8] c"yacute\00", align 1
@.str.253 = private unnamed_addr constant [4 x i8] c"yen\00", align 1
@.str.254 = private unnamed_addr constant [5 x i8] c"yuml\00", align 1
@.str.255 = private unnamed_addr constant [5 x i8] c"zeta\00", align 1
@.str.256 = private unnamed_addr constant [4 x i8] c"zwj\00", align 1
@.str.257 = private unnamed_addr constant [5 x i8] c"zwnj\00", align 1
@mxml_load_data.types = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.262, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.263, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.265, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.266, i32 0, i32 0)], align 4, !dbg !1198
@.str.261 = private unnamed_addr constant [13 x i8] c"MXML_ELEMENT\00", align 1
@.str.1.262 = private unnamed_addr constant [13 x i8] c"MXML_INTEGER\00", align 1
@.str.2.263 = private unnamed_addr constant [12 x i8] c"MXML_OPAQUE\00", align 1
@.str.3.264 = private unnamed_addr constant [10 x i8] c"MXML_REAL\00", align 1
@.str.4.265 = private unnamed_addr constant [10 x i8] c"MXML_TEXT\00", align 1
@.str.5.266 = private unnamed_addr constant [12 x i8] c"MXML_CUSTOM\00", align 1
@.str.6.225 = private unnamed_addr constant [34 x i8] c"Unable to allocate string buffer!\00", align 1
@.str.7.227 = private unnamed_addr constant [38 x i8] c"Bad custom value '%s' in parent <%s>!\00", align 1
@.str.8.226 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.9.230 = private unnamed_addr constant [34 x i8] c"Bad %s value '%s' in parent <%s>!\00", align 1
@.str.10.228 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.11.229 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.12.231 = private unnamed_addr constant [52 x i8] c"Unable to add value node of type %s to parent <%s>!\00", align 1
@.str.13.232 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14.233 = private unnamed_addr constant [19 x i8] c"Bare < in element!\00", align 1
@.str.15.234 = private unnamed_addr constant [4 x i8] c"!--\00", align 1
@.str.16.235 = private unnamed_addr constant [9 x i8] c"![CDATA[\00", align 1
@.str.17.236 = private unnamed_addr constant [27 x i8] c"Early EOF in comment node!\00", align 1
@.str.18.237 = private unnamed_addr constant [45 x i8] c"<%s> cannot be a second root node after <%s>\00", align 1
@.str.19.238 = private unnamed_addr constant [43 x i8] c"Unable to add comment node to parent <%s>!\00", align 1
@.str.20.239 = private unnamed_addr constant [3 x i8] c"]]\00", align 1
@.str.21.240 = private unnamed_addr constant [25 x i8] c"Early EOF in CDATA node!\00", align 1
@.str.22.241 = private unnamed_addr constant [41 x i8] c"Unable to add CDATA node to parent <%s>!\00", align 1
@.str.23.242 = private unnamed_addr constant [42 x i8] c"Early EOF in processing instruction node!\00", align 1
@.str.24.243 = private unnamed_addr constant [58 x i8] c"Unable to add processing instruction node to parent <%s>!\00", align 1
@.str.25.244 = private unnamed_addr constant [31 x i8] c"Early EOF in declaration node!\00", align 1
@.str.26.245 = private unnamed_addr constant [47 x i8] c"Unable to add declaration node to parent <%s>!\00", align 1
@.str.27.247 = private unnamed_addr constant [45 x i8] c"Mismatched close tag <%s> under parent <%s>!\00", align 1
@.str.28.246 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.29.248 = private unnamed_addr constant [43 x i8] c"Unable to add element node to parent <%s>!\00", align 1
@.str.30.249 = private unnamed_addr constant [51 x i8] c"Expected > but got '%c' instead for element <%s/>!\00", align 1
@.str.31.250 = private unnamed_addr constant [43 x i8] c"Missing close tag </%s> under parent <%s>!\00", align 1
@_ctype_ = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.32.257 = private unnamed_addr constant [40 x i8] c"Entity name too long under parent <%s>!\00", align 1
@.str.33.258 = private unnamed_addr constant [56 x i8] c"Character entity \22%s\22 not terminated under parent <%s>!\00", align 1
@.str.34.259 = private unnamed_addr constant [51 x i8] c"Entity name \22%s;\22 not supported under parent <%s>!\00", align 1
@.str.35.260 = private unnamed_addr constant [76 x i8] c"Bad control character 0x%02x under parent <%s> not allowed by XML standard!\00", align 1
@.str.36.256 = private unnamed_addr constant [44 x i8] c"Unable to expand string buffer to %d bytes!\00", align 1
@.str.37.251 = private unnamed_addr constant [36 x i8] c"Unable to allocate memory for name!\00", align 1
@.str.38.252 = private unnamed_addr constant [37 x i8] c"Unable to allocate memory for value!\00", align 1
@.str.39.253 = private unnamed_addr constant [54 x i8] c"Expected '>' after '%c' for element %s, but got '%c'!\00", align 1
@.str.40.254 = private unnamed_addr constant [22 x i8] c"Bare < in element %s!\00", align 1
@.str.41.255 = private unnamed_addr constant [48 x i8] c"Missing value for attribute '%s' in element %s!\00", align 1
@.str.42.267 = private unnamed_addr constant [58 x i8] c"Bad control character 0x%02x not allowed by XML standard!\00", align 1
@.str.43.268 = private unnamed_addr constant [45 x i8] c"Invalid UTF-8 sequence for character 0x%04x!\00", align 1
@.str.44.269 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.45.270 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.271 = private unnamed_addr constant [9 x i8] c"![CDATA[\00", align 1
@.str.272 = private unnamed_addr constant [43 x i8] c"Unable to allocate %d bytes for index - %s\00", align 1
@.str.1.273 = private unnamed_addr constant [42 x i8] c"Unable to allocate %d bytes for index: %s\00", align 1
@.str.276 = private unnamed_addr constant [13 x i8] c"![CDATA[%s]]\00", align 1
@.str.1.290 = private unnamed_addr constant [36 x i8] c"?xml version=\22%s\22 encoding=\22utf-8\22?\00", align 1
@.str.2.289 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.295 = private unnamed_addr constant [10 x i8] c"mxml: %s\0A\00", align 1
@_mxml_global.global = internal global { void (i8*)*, i32, <{ i32 (i8*)*, [9 x i32 (i8*)*] }>, i32, i32 (%struct.mxml_node_s*, i8*)*, i8* (%struct.mxml_node_s*)* } { void (i8*)* null, i32 1, <{ i32 (i8*)*, [9 x i32 (i8*)*] }> <{ i32 (i8*)* @_mxml_entity_cb, [9 x i32 (i8*)*] zeroinitializer }>, i32 72, i32 (%struct.mxml_node_s*, i8*)* null, i8* (%struct.mxml_node_s*)* null }, align 4, !dbg !1326
@.str.300 = private unnamed_addr constant [3 x i8] c"*/\00", align 1
@xExceptionStack = internal global [192 x i32] zeroinitializer, align 4, !dbg !1398
@pxExceptionStack = dso_local local_unnamed_addr global i32* getelementptr inbounds ([192 x i32], [192 x i32]* @xExceptionStack, i32 0, i32 191), align 4, !dbg !1484
@assert_expr.0 = internal unnamed_addr global i1 false, align 4, !dbg !1578
@assert_expr.1 = internal unnamed_addr global i8* null, align 4, !dbg !1579
@assert_expr.2 = internal unnamed_addr global i8* null, align 4, !dbg !1580
@assert_expr.3 = internal unnamed_addr global i32 0, align 4, !dbg !1581
@reboot_flag = internal unnamed_addr global i32 0, align 4, !dbg !1556
@exception_config = internal unnamed_addr global %struct.exception_config_t zeroinitializer, align 4, !dbg !1558
@.str.309 = private unnamed_addr constant [40 x i8] c"assert failed: %s, file: %s, line: %d\0A\0D\00", align 1
@.str.1.310 = private unnamed_addr constant [14 x i8] c"Usage fault: \00", align 1
@.str.2.311 = private unnamed_addr constant [17 x i8] c"Divide by zero\0A\0D\00", align 1
@.str.3.312 = private unnamed_addr constant [19 x i8] c"Unaligned access\0A\0D\00", align 1
@.str.4.313 = private unnamed_addr constant [20 x i8] c"Coprocessor error\0A\0D\00", align 1
@.str.5.314 = private unnamed_addr constant [21 x i8] c"Invalid EXC_RETURN\0A\0D\00", align 1
@.str.6.315 = private unnamed_addr constant [16 x i8] c"Invalid state\0A\0D\00", align 1
@.str.7.316 = private unnamed_addr constant [24 x i8] c"Undefined instruction\0A\0D\00", align 1
@.str.8.317 = private unnamed_addr constant [26 x i8] c"Memory Management fault: \00", align 1
@.str.9.318 = private unnamed_addr constant [63 x i8] c"A MemManage fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.10.319 = private unnamed_addr constant [56 x i8] c"A derived MemManage fault occurred on exception entry\0A\0D\00", align 1
@.str.11.320 = private unnamed_addr constant [57 x i8] c"A derived MemManage fault occurred on exception return\0A\0D\00", align 1
@.str.12.321 = private unnamed_addr constant [32 x i8] c"Data access violation @0x%08x\0A\0D\00", align 1
@.str.13.322 = private unnamed_addr constant [64 x i8] c"MPU or Execute Never (XN) default memory map access violation\0A\0D\00", align 1
@.str.14.323 = private unnamed_addr constant [22 x i8] c"SCB->MMFAR = 0x%08x\0A\0D\00", align 1
@.str.15.324 = private unnamed_addr constant [12 x i8] c"Bus fault: \00", align 1
@.str.16.325 = private unnamed_addr constant [57 x i8] c"A bus fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.17.326 = private unnamed_addr constant [54 x i8] c"A derived bus fault has occurred on exception entry\0A\0D\00", align 1
@.str.18.327 = private unnamed_addr constant [55 x i8] c"A derived bus fault has occurred on exception return\0A\0D\00", align 1
@.str.19.328 = private unnamed_addr constant [43 x i8] c"Imprecise data access error has occurred\0A\0D\00", align 1
@.str.20.329 = private unnamed_addr constant [50 x i8] c"A precise data access error has occurred @x%08x\0A\0D\00", align 1
@.str.21.330 = private unnamed_addr constant [54 x i8] c"A bus fault on an instruction prefetch has occurred\0A\0D\00", align 1
@.str.22.331 = private unnamed_addr constant [21 x i8] c"SCB->BFAR = 0x%08x\0A\0D\00", align 1
@taskContext = internal global %struct.TaskContextType zeroinitializer, align 4, !dbg !1573
@pTaskContext = dso_local local_unnamed_addr global %struct.TaskContextType* @taskContext, align 4, !dbg !1487
@.str.23.332 = private unnamed_addr constant [15 x i8] c"r0  = 0x%08x\0A\0D\00", align 1
@.str.24.333 = private unnamed_addr constant [15 x i8] c"r1  = 0x%08x\0A\0D\00", align 1
@.str.25.334 = private unnamed_addr constant [15 x i8] c"r2  = 0x%08x\0A\0D\00", align 1
@.str.26.335 = private unnamed_addr constant [15 x i8] c"r3  = 0x%08x\0A\0D\00", align 1
@.str.27.336 = private unnamed_addr constant [15 x i8] c"r4  = 0x%08x\0A\0D\00", align 1
@.str.28.337 = private unnamed_addr constant [15 x i8] c"r5  = 0x%08x\0A\0D\00", align 1
@.str.29.338 = private unnamed_addr constant [15 x i8] c"r6  = 0x%08x\0A\0D\00", align 1
@.str.30.339 = private unnamed_addr constant [15 x i8] c"r7  = 0x%08x\0A\0D\00", align 1
@.str.31.340 = private unnamed_addr constant [15 x i8] c"r8  = 0x%08x\0A\0D\00", align 1
@.str.32.341 = private unnamed_addr constant [15 x i8] c"r9  = 0x%08x\0A\0D\00", align 1
@.str.33.342 = private unnamed_addr constant [15 x i8] c"r10 = 0x%08x\0A\0D\00", align 1
@.str.34.343 = private unnamed_addr constant [15 x i8] c"r11 = 0x%08x\0A\0D\00", align 1
@.str.35.344 = private unnamed_addr constant [15 x i8] c"r12 = 0x%08x\0A\0D\00", align 1
@.str.36.345 = private unnamed_addr constant [15 x i8] c"lr  = 0x%08x\0A\0D\00", align 1
@.str.37.346 = private unnamed_addr constant [15 x i8] c"pc  = 0x%08x\0A\0D\00", align 1
@.str.38.347 = private unnamed_addr constant [15 x i8] c"psr = 0x%08x\0A\0D\00", align 1
@.str.39.348 = private unnamed_addr constant [19 x i8] c"EXC_RET = 0x%08x\0A\0D\00", align 1
@.str.40.349 = private unnamed_addr constant [15 x i8] c"s0  = 0x%08x\0A\0D\00", align 1
@.str.41.350 = private unnamed_addr constant [15 x i8] c"s1  = 0x%08x\0A\0D\00", align 1
@.str.42.351 = private unnamed_addr constant [15 x i8] c"s2  = 0x%08x\0A\0D\00", align 1
@.str.43.352 = private unnamed_addr constant [15 x i8] c"s3  = 0x%08x\0A\0D\00", align 1
@.str.44.353 = private unnamed_addr constant [15 x i8] c"s4  = 0x%08x\0A\0D\00", align 1
@.str.45.354 = private unnamed_addr constant [15 x i8] c"s5  = 0x%08x\0A\0D\00", align 1
@.str.46.355 = private unnamed_addr constant [15 x i8] c"s6  = 0x%08x\0A\0D\00", align 1
@.str.47.356 = private unnamed_addr constant [15 x i8] c"s7  = 0x%08x\0A\0D\00", align 1
@.str.48.357 = private unnamed_addr constant [15 x i8] c"s8  = 0x%08x\0A\0D\00", align 1
@.str.49.358 = private unnamed_addr constant [15 x i8] c"s9  = 0x%08x\0A\0D\00", align 1
@.str.50.359 = private unnamed_addr constant [15 x i8] c"s10 = 0x%08x\0A\0D\00", align 1
@.str.51.360 = private unnamed_addr constant [15 x i8] c"s11 = 0x%08x\0A\0D\00", align 1
@.str.52.361 = private unnamed_addr constant [15 x i8] c"s12 = 0x%08x\0A\0D\00", align 1
@.str.53.362 = private unnamed_addr constant [15 x i8] c"s13 = 0x%08x\0A\0D\00", align 1
@.str.54.363 = private unnamed_addr constant [15 x i8] c"s14 = 0x%08x\0A\0D\00", align 1
@.str.55.364 = private unnamed_addr constant [15 x i8] c"s15 = 0x%08x\0A\0D\00", align 1
@.str.56.365 = private unnamed_addr constant [15 x i8] c"s16 = 0x%08x\0A\0D\00", align 1
@.str.57.366 = private unnamed_addr constant [15 x i8] c"s17 = 0x%08x\0A\0D\00", align 1
@.str.58.367 = private unnamed_addr constant [15 x i8] c"s18 = 0x%08x\0A\0D\00", align 1
@.str.59.368 = private unnamed_addr constant [15 x i8] c"s19 = 0x%08x\0A\0D\00", align 1
@.str.60.369 = private unnamed_addr constant [15 x i8] c"s20 = 0x%08x\0A\0D\00", align 1
@.str.61.370 = private unnamed_addr constant [15 x i8] c"s21 = 0x%08x\0A\0D\00", align 1
@.str.62.371 = private unnamed_addr constant [15 x i8] c"s22 = 0x%08x\0A\0D\00", align 1
@.str.63.372 = private unnamed_addr constant [15 x i8] c"s23 = 0x%08x\0A\0D\00", align 1
@.str.64.373 = private unnamed_addr constant [15 x i8] c"s24 = 0x%08x\0A\0D\00", align 1
@.str.65.374 = private unnamed_addr constant [15 x i8] c"s25 = 0x%08x\0A\0D\00", align 1
@.str.66.375 = private unnamed_addr constant [15 x i8] c"s26 = 0x%08x\0A\0D\00", align 1
@.str.67.376 = private unnamed_addr constant [15 x i8] c"s27 = 0x%08x\0A\0D\00", align 1
@.str.68.377 = private unnamed_addr constant [15 x i8] c"s28 = 0x%08x\0A\0D\00", align 1
@.str.69.378 = private unnamed_addr constant [15 x i8] c"s29 = 0x%08x\0A\0D\00", align 1
@.str.70.379 = private unnamed_addr constant [15 x i8] c"s30 = 0x%08x\0A\0D\00", align 1
@.str.71.380 = private unnamed_addr constant [15 x i8] c"s31 = 0x%08x\0A\0D\00", align 1
@.str.72.381 = private unnamed_addr constant [17 x i8] c"fpscr = 0x%08x\0A\0D\00", align 1
@.str.73.382 = private unnamed_addr constant [19 x i8] c"CONTROL = 0x%08x\0A\0D\00", align 1
@.str.74.383 = private unnamed_addr constant [19 x i8] c"MSP     = 0x%08x\0A\0D\00", align 1
@.str.75.384 = private unnamed_addr constant [19 x i8] c"PSP     = 0x%08x\0A\0D\00", align 1
@.str.76.385 = private unnamed_addr constant [19 x i8] c"sp      = 0x%08x\0A\0D\00", align 1
@.str.77.386 = private unnamed_addr constant [30 x i8] c"0x%08x: %08x %08x %08x %08x\0A\0D\00", align 1
@.str.78.387 = private unnamed_addr constant [27 x i8] c"\0A\0Dmemory dump completed.\0A\0D\00", align 1
@.str.79.388 = private unnamed_addr constant [26 x i8] c"\0A\0DIn Hard Fault Handler\0A\0D\00", align 1
@.str.80.389 = private unnamed_addr constant [21 x i8] c"SCB->HFSR = 0x%08x\0A\0D\00", align 1
@.str.81.390 = private unnamed_addr constant [20 x i8] c"Forced Hard Fault\0A\0D\00", align 1
@.str.82.391 = private unnamed_addr constant [21 x i8] c"SCB->CFSR = 0x%08x\0A\0D\00", align 1
@.str.83.392 = private unnamed_addr constant [31 x i8] c"\0A\0DIn MemManage Fault Handler\0A\0D\00", align 1
@.str.84.393 = private unnamed_addr constant [25 x i8] c"\0A\0DIn Bus Fault Handler\0A\0D\00", align 1
@.str.85.394 = private unnamed_addr constant [27 x i8] c"\0A\0DIn Usage Fault Handler\0A\0D\00", align 1
@.str.86.395 = private unnamed_addr constant [35 x i8] c"\0A\0DIn Debug Monitor Fault Handler\0D\0A\00", align 1
@.str.87.396 = private unnamed_addr constant [42 x i8] c"Task stack overflow:%c, stack end:0x%x \0D\0A\00", align 1
@.str.399 = private unnamed_addr constant [24 x i8] c"stack overflow: %x %s\0D\0A\00", align 1
@.str.1.400 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.401 = private unnamed_addr constant [53 x i8] c"../../../../../kernel/service/src/os_port_callback.c\00", align 1
@.str.402 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@g_log_uart_port = internal unnamed_addr global i32 0, align 4, !dbg !1582
@syslog_init_done = internal unnamed_addr global i32 0, align 4, !dbg !1695
@syslog_buffer_pool = internal global [16 x %struct.syslog_buffer_t] zeroinitializer, align 4, !dbg !1678
@syslog_drop_count = internal unnamed_addr global i32 0, align 4, !dbg !1697
@g_log_queue = internal unnamed_addr global i8* null, align 4, !dbg !1699
@.str.1.419 = private unnamed_addr constant [45 x i8] c"log_queue_create: create log queue failed.\0D\0A\00", align 1
@.str.2.410 = private unnamed_addr constant [34 x i8] c"[T: %u M: %s C: %s F: %s L: %d]: \00", align 1
@print_level_table = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.409, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.414, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.415, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.416, i32 0, i32 0)], align 4, !dbg !1701
@.str.3.409 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4.420 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.5.412 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.6.411 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7.413 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8.421 = private unnamed_addr constant [29 x i8] c"\09\09>>> log drop count = %u\0D\0A\0A\00", align 1
@syslog_task_ready = internal unnamed_addr global i1 false, align 4, !dbg !1711
@.str.9.422 = private unnamed_addr constant [7 x i8] c"SYSLOG\00", align 1
@syslog_task_handle = internal global i8* null, align 4, !dbg !1676
@.str.10.423 = private unnamed_addr constant [39 x i8] c"log_init: create syslog task failed.\0D\0A\00", align 1
@syslog_config = internal global %struct.syslog_config_s zeroinitializer, align 8, !dbg !1681
@__FUNCTION__.log_init = private unnamed_addr constant [9 x i8] c"log_init\00", align 1
@.str.11.424 = private unnamed_addr constant [27 x i8] c"load syslog config failed\0A\00", align 1
@.str.12.426 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.13.430 = private unnamed_addr constant [19 x i8] c"%s%s 0x%01x 0x%01x\00", align 1
@.str.14.429 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15.431 = private unnamed_addr constant [24 x i8] c"pos < SYSLOG_FILTER_LEN\00", align 1
@.str.16.432 = private unnamed_addr constant [43 x i8] c"../../../../../kernel/service/src/syslog.c\00", align 1
@.str.17.433 = private unnamed_addr constant [43 x i8] c"log_switch - DEBUG_LOG_ON <= DEBUG_LOG_OFF\00", align 1
@log_switch_table = internal unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.427, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.428, i32 0, i32 0)], align 4, !dbg !1708
@.str.18.434 = private unnamed_addr constant [53 x i8] c"print_level - PRINT_LEVEL_DEBUG <= PRINT_LEVEL_ERROR\00", align 1
@.str.19.414 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.20.415 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.21.416 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.22.425 = private unnamed_addr constant [29 x i8] c"\0A\0D>>> dump syslog buffer\0A\0D\0A\0D\00", align 1
@.str.23.427 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.24.428 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@__FUNCTION__.nvdm_port_log_notice = private unnamed_addr constant [21 x i8] c"nvdm_port_log_notice\00", align 1
@__FUNCTION__.nvdm_port_log_error = private unnamed_addr constant [20 x i8] c"nvdm_port_log_error\00", align 1
@.str.435 = private unnamed_addr constant [51 x i8] c"../../../../../middleware/MTK/nvdm/src/nvdm_port.c\00", align 1
@.str.1.436 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.437 = private unnamed_addr constant [76 x i8] c"hal_flash_read: address = 0x%08x, buffer = 0x%08x, length = %d, status = %d\00", align 1
@.str.3.438 = private unnamed_addr constant [77 x i8] c"hal_flash_write: address = 0x%08x, buffer = 0x%08x, length = %d, status = %d\00", align 1
@.str.4.439 = private unnamed_addr constant [47 x i8] c"hal_flash_erase: address = 0x%08x, status = %d\00", align 1
@g_nvdm_mutex = internal unnamed_addr global i8* null, align 4, !dbg !1712
@.str.5.440 = private unnamed_addr constant [30 x i8] c"nvdm_port_mutex_creat error\0D\0A\00", align 1
@.str.7.441 = private unnamed_addr constant [29 x i8] c"nvdm_port_mutex_take error\0D\0A\00", align 1
@.str.9.442 = private unnamed_addr constant [29 x i8] c"nvdm_port_mutex_give error\0D\0A\00", align 1
@g_task_handler = internal unnamed_addr global i8* null, align 4, !dbg !1729
@log_control_block_common = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.402, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1674
@__FUNCTION__._main_sys_random_init = private unnamed_addr constant [22 x i8] c"_main_sys_random_init\00", align 1
@.str.1.443 = private unnamed_addr constant [18 x i8] c"trng init failed\0A\00", align 1
@.str.446 = private unnamed_addr constant [6 x i8] c"flash\00", align 1
@__FLASH_segment_start__ = external dso_local global [0 x i32], align 4
@__FLASH_segment_end__ = external dso_local global [0 x i32], align 4
@.str.1.447 = private unnamed_addr constant [5 x i8] c"sram\00", align 1
@__SRAM_segment_start__ = external dso_local global [0 x i32], align 4
@__SRAM_segment_end__ = external dso_local global [0 x i32], align 4
@.str.2.448 = private unnamed_addr constant [8 x i8] c"ramtext\00", align 1
@__ramtext_start__ = external dso_local global [0 x i32], align 4
@__ramtext_end__ = external dso_local global [0 x i32], align 4
@.str.3.449 = private unnamed_addr constant [7 x i8] c"tcmbss\00", align 1
@__tcmbss_start__ = external dso_local global [0 x i32], align 4
@__tcmbss_end__ = external dso_local global [0 x i32], align 4
@.str.4.450 = private unnamed_addr constant [4 x i8] c"scs\00", align 1
@memory_regions = dso_local local_unnamed_addr constant [6 x %struct.memory_region_type] [%struct.memory_region_type { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.446, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_end__, i32 0, i32 0), i32 0 }, %struct.memory_region_type { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.447, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.448, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.449, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.450, i32 0, i32 0), i32* inttoptr (i32 -536813568 to i32*), i32* inttoptr (i32 -536809472 to i32*), i32 1 }, %struct.memory_region_type zeroinitializer], align 4, !dbg !1734
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !1748
@System_Initialize_Done = internal global i32 0, align 4, !dbg !1806
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !1808
@end = external dso_local global i8, align 1
@.str.457 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.458 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.459 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@.str.460 = private unnamed_addr constant [12 x i8] c"xml_example\00", align 1
@__FUNCTION__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.1.461 = private unnamed_addr constant [22 x i8] c"start to create task.\00", align 1
@.str.2.462 = private unnamed_addr constant [9 x i8] c"xml_test\00", align 1
@.str.3.463 = private unnamed_addr constant [22 x i8] c"create user task fail\00", align 1
@__FUNCTION__.xml_test_proc = private unnamed_addr constant [14 x i8] c"xml_test_proc\00", align 1
@.str.4.464 = private unnamed_addr constant [8 x i8] c"starts\0A\00", align 1
@.str.5.465 = private unnamed_addr constant [19 x i8] c"ret=%d, completed\0A\00", align 1
@.str.6.466 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@test_xml = dso_local constant [868 x i8] c"<?xml version=\221.0\22 encoding=\22UTF-8\22?> \0A <group> \0A <option> \0A <keyword type=\22opaque\22>InputSlot</keyword> \0A <default type=\22opaque\22>Auto</default> \0A <text>Media Source</text> \0A <order type=\22real\22>10.000000</order> \0A <choice> \0A <keyword type=\22opaque\22>Auto</keyword> \0A <text>Auto Tray Selection</text> \0A <code type=\22opaque\22 /> \0A </choice> \0A <choice> \0A <keyword type=\22opaque\22>Upper</keyword> \0A <text>Tray 1</text> \0A <code type=\22opaque\22>&lt;&lt;/MediaPosition 0&gt;&gt;setpagedevice</code> \0A </choice> \0A <choice> \0A <keyword type=\22opaque\22>Lower</keyword> \0A <text>Tray 2</text> \0A <code type=\22opaque\22>&lt;&lt;/MediaPosition 1&gt;&gt;setpagedevice</code> \0A </choice> \0A </option> \0A <integer>123</integer> \0A <string>Now is the time for all good men to come to the aid of their country.</string> \0A <!-- this is a comment --> \0A <![CDATA[this is CDATA 0123456789ABCDEF]]> \0A </group>\00", align 1, !dbg !2008
@xml_main.types = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.662, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.663, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.664, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.665, i32 0, i32 0)], align 4, !dbg !2015
@.str.661 = private unnamed_addr constant [13 x i8] c"MXML_ELEMENT\00", align 1
@.str.1.662 = private unnamed_addr constant [13 x i8] c"MXML_INTEGER\00", align 1
@.str.2.663 = private unnamed_addr constant [12 x i8] c"MXML_OPAQUE\00", align 1
@.str.3.664 = private unnamed_addr constant [10 x i8] c"MXML_REAL\00", align 1
@.str.4.665 = private unnamed_addr constant [10 x i8] c"MXML_TEXT\00", align 1
@log_control_block_xml_example = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.460, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !2091
@__FUNCTION__.xml_main = private unnamed_addr constant [9 x i8] c"xml_main\00", align 1
@.str.5.467 = private unnamed_addr constant [43 x i8] c"[xml_test]Test the basic functionality...\0A\00", align 1
@.str.6.468 = private unnamed_addr constant [8 x i8] c"element\00", align 1
@.str.7.469 = private unnamed_addr constant [38 x i8] c"ERROR: No parent node in basic test!\0A\00", align 1
@_impure_ptr = external dso_local local_unnamed_addr global %struct._reent*, align 4
@.str.8.470 = private unnamed_addr constant [48 x i8] c"[xml_test]ERROR: No parent node in basic test!\0A\00", align 1
@.str.9.471 = private unnamed_addr constant [45 x i8] c"[xml_test]mxmlNewElement create tree, pass.\0A\00", align 1
@.str.10.473 = private unnamed_addr constant [56 x i8] c"ERROR: Parent has type %s (%d), expected MXML_ELEMENT!\0A\00", align 1
@.str.11.472 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.12.474 = private unnamed_addr constant [66 x i8] c"[xml_test]ERROR: Parent has type %s (%d), expected MXML_ELEMENT!\0A\00", align 1
@.str.13.475 = private unnamed_addr constant [39 x i8] c"[xml_test]Check the tree->type, pass.\0A\00", align 1
@.str.14.476 = private unnamed_addr constant [50 x i8] c"ERROR: Parent value is \22%s\22, expected \22element\22!\0A\00", align 1
@.str.15.477 = private unnamed_addr constant [60 x i8] c"[xml_test]ERROR: Parent value is \22%s\22, expected \22element\22!\0A\00", align 1
@.str.16.478 = private unnamed_addr constant [53 x i8] c"[xml_test]Check the tree->value.element.name, pass.\0A\00", align 1
@.str.17.479 = private unnamed_addr constant [32 x i8] c"[xml_test]mxmlNewInteger: 123.\0A\00", align 1
@.str.18.480 = private unnamed_addr constant [7 x i8] c"opaque\00", align 1
@.str.19.481 = private unnamed_addr constant [34 x i8] c"[xml_test]mxmlNewOpaque: opaque.\0A\00", align 1
@.str.20.482 = private unnamed_addr constant [32 x i8] c"[xml_test]mxmlNewReal: 123.4f.\0A\00", align 1
@.str.21.483 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.22.484 = private unnamed_addr constant [30 x i8] c"[xml_test]mxmlNewText: text.\0A\00", align 1
@.str.23.485 = private unnamed_addr constant [50 x i8] c"<group type='string'>string string string</group>\00", align 1
@.str.24.486 = private unnamed_addr constant [45 x i8] c"[xml_test]mxmlLoadString: MXML_NO_CALLBACK.\0A\00", align 1
@.str.25.487 = private unnamed_addr constant [36 x i8] c"<group type='integer'>1 2 3</group>\00", align 1
@.str.26.488 = private unnamed_addr constant [50 x i8] c"[xml_test]mxmlLoadString: MXML_INTEGER_CALLBACK.\0A\00", align 1
@.str.27.489 = private unnamed_addr constant [39 x i8] c"<group type='real'>1.0 2.0 3.0</group>\00", align 1
@.str.28.490 = private unnamed_addr constant [47 x i8] c"[xml_test]mxmlLoadString: MXML_REAL_CALLBACK.\0A\00", align 1
@.str.29.491 = private unnamed_addr constant [36 x i8] c"<group>opaque opaque opaque</group>\00", align 1
@.str.30.492 = private unnamed_addr constant [53 x i8] c"[xml_test]mxmlLoadString: MXML_OPAQUE_CALLBACK - 1.\0A\00", align 1
@.str.31.493 = private unnamed_addr constant [67 x i8] c"<foo><bar><one><two>value<two>value2</two></two></one></bar></foo>\00", align 1
@.str.32.494 = private unnamed_addr constant [53 x i8] c"[xml_test]mxmlLoadString: MXML_OPAQUE_CALLBACK - 2.\0A\00", align 1
@.str.33.495 = private unnamed_addr constant [43 x i8] c"ERROR: No first child node in basic test!\0A\00", align 1
@.str.34.496 = private unnamed_addr constant [53 x i8] c"[xml_test]ERROR: No first child node in basic test!\0A\00", align 1
@.str.35.497 = private unnamed_addr constant [53 x i8] c"[xml_test]Check the tree->child(first child), pass.\0A\00", align 1
@.str.36.498 = private unnamed_addr constant [61 x i8] c"ERROR: First child has type %s (%d), expected MXML_INTEGER!\0A\00", align 1
@.str.37.499 = private unnamed_addr constant [71 x i8] c"[xml_test]ERROR: First child has type %s (%d), expected MXML_INTEGER!\0A\00", align 1
@.str.38.500 = private unnamed_addr constant [59 x i8] c"[xml_test]Check the tree->child(first child)->type, pass.\0A\00", align 1
@.str.39.501 = private unnamed_addr constant [47 x i8] c"ERROR: First child value is %d, expected 123!\0A\00", align 1
@.str.40.502 = private unnamed_addr constant [57 x i8] c"[xml_test]ERROR: First child value is %d, expected 123!\0A\00", align 1
@.str.41.503 = private unnamed_addr constant [68 x i8] c"[xml_test]Check the tree->child(first child)->value.integer, pass.\0A\00", align 1
@.str.42.504 = private unnamed_addr constant [44 x i8] c"ERROR: No second child node in basic test!\0A\00", align 1
@.str.43.505 = private unnamed_addr constant [47 x i8] c"[xml_test]No second child node in basic test!\0A\00", align 1
@.str.44.506 = private unnamed_addr constant [57 x i8] c"[xml_test]Check the tree->child->next(2nd child), pass.\0A\00", align 1
@.str.45.507 = private unnamed_addr constant [61 x i8] c"ERROR: Second child has type %s (%d), expected MXML_OPAQUE!\0A\00", align 1
@.str.46.508 = private unnamed_addr constant [71 x i8] c"[xml_test]ERROR: Second child has type %s (%d), expected MXML_OPAQUE!\0A\00", align 1
@.str.47.509 = private unnamed_addr constant [63 x i8] c"[xml_test]Check the tree->child->next(2nd child)->type, pass.\0A\00", align 1
@.str.48.511 = private unnamed_addr constant [55 x i8] c"ERROR: Second child value is \22%s\22, expected \22opaque\22!\0A\00", align 1
@.str.49.510 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.50.512 = private unnamed_addr constant [65 x i8] c"[xml_test]ERROR: Second child value is \22%s\22, expected \22opaque\22!\0A\00", align 1
@.str.51.513 = private unnamed_addr constant [71 x i8] c"[xml_test]Check the tree->child->next(2nd child)->value.opaque, pass.\0A\00", align 1
@.str.52.514 = private unnamed_addr constant [43 x i8] c"ERROR: No third child node in basic test!\0A\00", align 1
@.str.53.515 = private unnamed_addr constant [53 x i8] c"[xml_test]ERROR: No third child node in basic test!\0A\00", align 1
@.str.54.516 = private unnamed_addr constant [71 x i8] c"[xml_test]Check the tree->child->next->next->next(third child), pass.\0A\00", align 1
@.str.55.517 = private unnamed_addr constant [58 x i8] c"ERROR: Third child has type %s (%d), expected MXML_REAL!\0A\00", align 1
@.str.56.518 = private unnamed_addr constant [68 x i8] c"[xml_test]ERROR: Third child has type %s (%d), expected MXML_REAL!\0A\00", align 1
@.str.57.519 = private unnamed_addr constant [48 x i8] c"[xml_test]Check the (third child)->type, pass.\0A\00", align 1
@.str.58.520 = private unnamed_addr constant [49 x i8] c"ERROR: Third child value is %f, expected 123.4!\0A\00", align 1
@.str.59.521 = private unnamed_addr constant [59 x i8] c"[xml_test]ERROR: Third child value is %f, expected 123.4!\0A\00", align 1
@.str.60.522 = private unnamed_addr constant [54 x i8] c"[xml_test]Check the (third child)->value.real, pass.\0A\00", align 1
@.str.61.523 = private unnamed_addr constant [44 x i8] c"ERROR: No fourth child node in basic test!\0A\00", align 1
@.str.62.524 = private unnamed_addr constant [54 x i8] c"[xml_test]ERROR: No fourth child node in basic test!\0A\00", align 1
@.str.63.525 = private unnamed_addr constant [78 x i8] c"[xml_test]Check the tree->child->next->next->next->next(fourth child), pass.\0A\00", align 1
@.str.64.526 = private unnamed_addr constant [59 x i8] c"ERROR: Fourth child has type %s (%d), expected MXML_TEXT!\0A\00", align 1
@.str.65.527 = private unnamed_addr constant [69 x i8] c"[xml_test]ERROR: Fourth child has type %s (%d), expected MXML_TEXT!\0A\00", align 1
@.str.66.528 = private unnamed_addr constant [49 x i8] c"[xml_test]Check the (fourth child)->type, pass.\0A\00", align 1
@.str.67.529 = private unnamed_addr constant [58 x i8] c"ERROR: Fourth child value is %d,\22%s\22, expected 1,\22text\22!\0A\00", align 1
@.str.68.530 = private unnamed_addr constant [68 x i8] c"[xml_test]ERROR: Fourth child value is %d,\22%s\22, expected 1,\22text\22!\0A\00", align 1
@.str.69.531 = private unnamed_addr constant [66 x i8] c"[xml_test]Check the (fourth child)->value.text.whitespace, pass.\0A\00", align 1
@.str.70.532 = private unnamed_addr constant [47 x i8] c"ERROR: No group #%d child node in basic test!\0A\00", align 1
@.str.71.533 = private unnamed_addr constant [57 x i8] c"[xml_test]ERROR: No group #%d child node in basic test!\0A\00", align 1
@.str.72.534 = private unnamed_addr constant [38 x i8] c"[xml_test]Check the group #%d, pass.\0A\00", align 1
@.str.73.535 = private unnamed_addr constant [65 x i8] c"ERROR: Group child #%d has type %s (%d), expected MXML_ELEMENT!\0A\00", align 1
@.str.74.536 = private unnamed_addr constant [75 x i8] c"[xml_test]ERROR: Group child #%d has type %s (%d), expected MXML_ELEMENT!\0A\00", align 1
@.str.75.537 = private unnamed_addr constant [45 x i8] c"[xml_test]Check the group #%d ->type, pass.\0A\00", align 1
@.str.76.538 = private unnamed_addr constant [32 x i8] c"[xml_test]Test mxmlFindPath...\0A\00", align 1
@.str.77.539 = private unnamed_addr constant [6 x i8] c"*/two\00", align 1
@.str.78.540 = private unnamed_addr constant [42 x i8] c"ERROR: Unable to find value for \22*/two\22.\0A\00", align 1
@.str.79.541 = private unnamed_addr constant [52 x i8] c"[xml_test]ERROR: Unable to find value for \22*/two\22.\0A\00", align 1
@.str.80.542 = private unnamed_addr constant [45 x i8] c"[xml_test]mxmlFindPath node = \22*/two\22, pass.\00", align 1
@.str.81.543 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.82.544 = private unnamed_addr constant [31 x i8] c"ERROR: Bad value for \22*/two\22.\0A\00", align 1
@.str.83.545 = private unnamed_addr constant [41 x i8] c"[xml_test]ERROR: Bad value for \22*/two\22.\0A\00", align 1
@.str.84.546 = private unnamed_addr constant [48 x i8] c"[xml_test]mxmlFindPath, check node value, pass.\00", align 1
@.str.85.547 = private unnamed_addr constant [10 x i8] c"foo/*/two\00", align 1
@.str.86.548 = private unnamed_addr constant [46 x i8] c"ERROR: Unable to find value for \22foo/*/two\22.\0A\00", align 1
@.str.87.549 = private unnamed_addr constant [56 x i8] c"[xml_test]ERROR: Unable to find value for \22foo/*/two\22.\0A\00", align 1
@.str.88.550 = private unnamed_addr constant [49 x i8] c"[xml_test]mxmlFindPath node = \22foo/*/two\22, pass.\00", align 1
@.str.89.551 = private unnamed_addr constant [35 x i8] c"ERROR: Bad value for \22foo/*/two\22.\0A\00", align 1
@.str.90.552 = private unnamed_addr constant [45 x i8] c"[xml_test]ERROR: Bad value for \22foo/*/two\22.\0A\00", align 1
@.str.91.553 = private unnamed_addr constant [16 x i8] c"foo/bar/one/two\00", align 1
@.str.92.554 = private unnamed_addr constant [52 x i8] c"ERROR: Unable to find value for \22foo/bar/one/two\22.\0A\00", align 1
@.str.93.555 = private unnamed_addr constant [62 x i8] c"[xml_test]ERROR: Unable to find value for \22foo/bar/one/two\22.\0A\00", align 1
@.str.94.556 = private unnamed_addr constant [55 x i8] c"[xml_test]mxmlFindPath node = \22foo/bar/one/two\22, pass.\00", align 1
@.str.95.557 = private unnamed_addr constant [41 x i8] c"ERROR: Bad value for \22foo/bar/one/two\22.\0A\00", align 1
@.str.96.558 = private unnamed_addr constant [51 x i8] c"[xml_test]ERROR: Bad value for \22foo/bar/one/two\22.\0A\00", align 1
@.str.97.559 = private unnamed_addr constant [27 x i8] c"[xml_test]Test indices...\0A\00", align 1
@.str.98.560 = private unnamed_addr constant [45 x i8] c"ERROR: Unable to create index of all nodes!\0A\00", align 1
@.str.99.561 = private unnamed_addr constant [55 x i8] c"[xml_test]ERROR: Unable to create index of all nodes!\0A\00", align 1
@.str.100.562 = private unnamed_addr constant [43 x i8] c"[xml_test]create index of all nodes, pass\0A\00", align 1
@.str.101.563 = private unnamed_addr constant [59 x i8] c"ERROR: Index of all nodes contains %d nodes; expected 10!\0A\00", align 1
@.str.102.564 = private unnamed_addr constant [69 x i8] c"[xml_test]ERROR: Index of all nodes contains %d nodes; expected 10!\0A\00", align 1
@.str.103.565 = private unnamed_addr constant [47 x i8] c"[xml_test]check the number of all nodes, pass\0A\00", align 1
@.str.104.566 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.105.567 = private unnamed_addr constant [42 x i8] c"ERROR: mxmlIndexFind for \22group\22 failed!\0A\00", align 1
@.str.106.568 = private unnamed_addr constant [52 x i8] c"[xml_test]ERROR: mxmlIndexFind for \22group\22 failed!\0A\00", align 1
@.str.107.569 = private unnamed_addr constant [40 x i8] c"[xml_test]find the index \22group\22, pass\0A\00", align 1
@.str.108.570 = private unnamed_addr constant [47 x i8] c"[xml_test]delete the index of all nodes, pass\0A\00", align 1
@.str.109.571 = private unnamed_addr constant [42 x i8] c"ERROR: Unable to create index of groups!\0A\00", align 1
@.str.110.572 = private unnamed_addr constant [52 x i8] c"[xml_test]ERROR: Unable to create index of groups!\0A\00", align 1
@.str.111.573 = private unnamed_addr constant [52 x i8] c"[xml_test]create index for the \22group\22 nodes, pass\0A\00", align 1
@.str.112.574 = private unnamed_addr constant [55 x i8] c"ERROR: Index of groups contains %d nodes; expected 4!\0A\00", align 1
@.str.113.575 = private unnamed_addr constant [65 x i8] c"[xml_test]ERROR: Index of groups contains %d nodes; expected 4!\0A\00", align 1
@.str.114.576 = private unnamed_addr constant [55 x i8] c"[xml_test]check the number of the \22group\22 nodes, pass\0A\00", align 1
@.str.115.577 = private unnamed_addr constant [69 x i8] c"[xml_test]mxmlIndexReset, set the index to the first element , pass\0A\00", align 1
@.str.116.578 = private unnamed_addr constant [30 x i8] c"ERROR: mxmlIndexEnum failed!\0A\00", align 1
@.str.117.579 = private unnamed_addr constant [40 x i8] c"[xml_test]ERROR: mxmlIndexEnum failed!\0A\00", align 1
@.str.118.580 = private unnamed_addr constant [72 x i8] c"[xml_test]mxmlIndexEnum, check the next node in the sorted order, pass\0A\00", align 1
@.str.119.581 = private unnamed_addr constant [52 x i8] c"[xml_test]delete the index of  \22group\22 nodes, pass\0A\00", align 1
@.str.120.582 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.121.583 = private unnamed_addr constant [51 x i8] c"ERROR: Unable to create index of type attributes!\0A\00", align 1
@.str.122.584 = private unnamed_addr constant [61 x i8] c"[xml_test]ERROR: Unable to create index of type attributes!\0A\00", align 1
@.str.123.585 = private unnamed_addr constant [49 x i8] c"[xml_test]create index of type attributes, pass\0A\00", align 1
@.str.124.586 = private unnamed_addr constant [64 x i8] c"ERROR: Index of type attributes contains %d nodes; expected 3!\0A\00", align 1
@.str.125.587 = private unnamed_addr constant [74 x i8] c"[xml_test]ERROR: Index of type attributes contains %d nodes; expected 3!\0A\00", align 1
@.str.126.588 = private unnamed_addr constant [56 x i8] c"[xml_test]check the number of node in this index, pass\0A\00", align 1
@.str.127.589 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.128.590 = private unnamed_addr constant [43 x i8] c"ERROR: mxmlIndexFind for \22string\22 failed!\0A\00", align 1
@.str.129.591 = private unnamed_addr constant [53 x i8] c"[xml_test]ERROR: mxmlIndexFind for \22string\22 failed!\0A\00", align 1
@.str.130.592 = private unnamed_addr constant [49 x i8] c"[xml_test]find the \22string\22 in this index, pass\0A\00", align 1
@.str.131.593 = private unnamed_addr constant [38 x i8] c"[xml_test]delete in this index, pass\0A\00", align 1
@.str.132.594 = private unnamed_addr constant [59 x i8] c"ERROR: Unable to create index of elements and attributes!\0A\00", align 1
@.str.133.595 = private unnamed_addr constant [69 x i8] c"[xml_test]ERROR: Unable to create index of elements and attributes!\0A\00", align 1
@.str.134.596 = private unnamed_addr constant [57 x i8] c"[xml_test]create index of elements and attributes, pass\0A\00", align 1
@.str.135.597 = private unnamed_addr constant [72 x i8] c"ERROR: Index of elements and attributes contains %d nodes; expected 3!\0A\00", align 1
@.str.136.598 = private unnamed_addr constant [82 x i8] c"[xml_test]ERROR: Index of elements and attributes contains %d nodes; expected 3!\0A\00", align 1
@.str.137.599 = private unnamed_addr constant [51 x i8] c"ERROR: mxmlIndexFind for \22group\22 \22string\22 failed!\0A\00", align 1
@.str.138.600 = private unnamed_addr constant [61 x i8] c"[xml_test]ERROR: mxmlIndexFind for \22group\22 \22string\22 failed!\0A\00", align 1
@.str.139.601 = private unnamed_addr constant [52 x i8] c"[xml_test]mxmlIndexFind for \22group\22 \22string\22, pass\0A\00", align 1
@.str.140.602 = private unnamed_addr constant [52 x i8] c"[xml_test]Check the mxmlDelete() works properly...\0A\00", align 1
@.str.141.603 = private unnamed_addr constant [34 x i8] c"[xml_test]delete child #%d, pass\0A\00", align 1
@.str.142.604 = private unnamed_addr constant [52 x i8] c"ERROR: Child pointer prematurely NULL on child #%d\0A\00", align 1
@.str.143.605 = private unnamed_addr constant [62 x i8] c"[xml_test]ERROR: Child pointer prematurely NULL on child #%d\0A\00", align 1
@.str.144.606 = private unnamed_addr constant [60 x i8] c"ERROR: Child pointer not NULL after deleting all children!\0A\00", align 1
@.str.145.607 = private unnamed_addr constant [70 x i8] c"[xml_test]ERROR: Child pointer not NULL after deleting all children!\0A\00", align 1
@.str.146.608 = private unnamed_addr constant [65 x i8] c"ERROR: Last child pointer not NULL after deleting all children!\0A\00", align 1
@.str.147.609 = private unnamed_addr constant [75 x i8] c"[xml_test]ERROR: Last child pointer not NULL after deleting all children!\0A\00", align 1
@.str.148.610 = private unnamed_addr constant [41 x i8] c"[xml_test]all children is deleted, pass\0A\00", align 1
@.str.149.611 = private unnamed_addr constant [33 x i8] c"[xml_test]tree is deleted, pass\0A\00", align 1
@.str.150.612 = private unnamed_addr constant [76 x i8] c"[xml_test]load the string using the default (MXML_NO_CALLBACK) callback...\0A\00", align 1
@.str.151.613 = private unnamed_addr constant [48 x i8] c"Unable to read XML file with default callback!\0A\00", align 1
@.str.152.614 = private unnamed_addr constant [65 x i8] c"[xml_test]ERROR: Unable to read XML file with default callback!\0A\00", align 1
@.str.153.615 = private unnamed_addr constant [49 x i8] c"[xml_test]create tree with loaded string, pass.\0A\00", align 1
@.str.154.616 = private unnamed_addr constant [88 x i8] c"[xml_test]Verify that mxmlFindElement() and indirectly mxmlWalkNext() work properly...\0A\00", align 1
@.str.155.617 = private unnamed_addr constant [47 x i8] c"[xml_test]this test is ONLY for \22test.xml\22...\0A\00", align 1
@.str.156.618 = private unnamed_addr constant [21 x i8] c"group/option/keyword\00", align 1
@.str.157.619 = private unnamed_addr constant [58 x i8] c"Unable to find group/option/keyword element in XML tree!\0A\00", align 1
@.str.158.620 = private unnamed_addr constant [83 x i8] c"[xml_test][test.xml ONLY]Unable to find group/option/keyword element in XML tree!\0A\00", align 1
@.str.159.621 = private unnamed_addr constant [40 x i8] c"No child node of group/option/keyword!\0A\00", align 1
@.str.160.622 = private unnamed_addr constant [65 x i8] c"[xml_test][test.xml ONLY]No child node of group/option/keyword!\0A\00", align 1
@.str.161.623 = private unnamed_addr constant [10 x i8] c"InputSlot\00", align 1
@.str.162.624 = private unnamed_addr constant [73 x i8] c"Child node of group/option/value has value \22%s\22 instead of \22InputSlot\22!\0A\00", align 1
@.str.163.625 = private unnamed_addr constant [98 x i8] c"[xml_test][test.xml ONLY]Child node of group/option/value has value \22%s\22 instead of \22InputSlot\22!\0A\00", align 1
@.str.164.626 = private unnamed_addr constant [49 x i8] c"[xml_test][test.xml ONLY] test.xml is finished.\0A\00", align 1
@.str.165.627 = private unnamed_addr constant [56 x i8] c"[xml_test][test.xml ONLY] remove the tree of test.xml.\0A\00", align 1
@.str.166.628 = private unnamed_addr constant [68 x i8] c"[xml_test]load the string using the special callback, type_cb()...\0A\00", align 1
@.str.167.629 = private unnamed_addr constant [26 x i8] c"Unable to read XML file!\0A\00", align 1
@.str.168.630 = private unnamed_addr constant [45 x i8] c"[xml_test]ERROR: Unable to load XML string!\0A\00", align 1
@.str.169.631 = private unnamed_addr constant [52 x i8] c"[xml_test]create tree with the loaded string, pass\0A\00", align 1
@.str.170.632 = private unnamed_addr constant [91 x i8] c"[xml_test]Verify that mxmlFindElement() and indirectly mxmlWalkNext() work properly...(2)\0A\00", align 1
@.str.171.633 = private unnamed_addr constant [50 x i8] c"[xml_test]this test is ONLY for \22test.xml\22...(2)\0A\00", align 1
@.str.172.634 = private unnamed_addr constant [7 x i8] c"choice\00", align 1
@.str.173.635 = private unnamed_addr constant [52 x i8] c"Unable to find first <choice> element in XML tree!\0A\00", align 1
@.str.174.636 = private unnamed_addr constant [81 x i8] c"[xml_test][test.xml ONLY] Unable to find first <choice> element in XML tree!(2)\0A\00", align 1
@.str.175.637 = private unnamed_addr constant [53 x i8] c"Unable to find second <choice> element in XML tree!\0A\00", align 1
@.str.176.638 = private unnamed_addr constant [82 x i8] c"[xml_test][test.xml ONLY] Unable to find second <choice> element in XML tree!(2)\0A\00", align 1
@.str.177.639 = private unnamed_addr constant [52 x i8] c"[xml_test][test.xml ONLY] test.xml is finished.(2)\0A\00", align 1
@.str.178.640 = private unnamed_addr constant [59 x i8] c"[xml_test][test.xml ONLY] remove the tree of test.xml.(2)\0A\00", align 1
@.str.179.641 = private unnamed_addr constant [31 x i8] c"[xml_test]Test SAX methods...\0A\00", align 1
@event_counts = internal global [6 x i32] zeroinitializer, align 4, !dbg !2085
@.str.180.642 = private unnamed_addr constant [49 x i8] c"MXML_SAX_CDATA seen %d times, expected 1 times!\0A\00", align 1
@.str.181.643 = private unnamed_addr constant [74 x i8] c"[xml_test][test.xml ONLY]MXML_SAX_CDATA seen %d times, expected 1 times!\0A\00", align 1
@.str.182.644 = private unnamed_addr constant [51 x i8] c"MXML_SAX_COMMENT seen %d times, expected 1 times!\0A\00", align 1
@.str.183.645 = private unnamed_addr constant [76 x i8] c"[xml_test][test.xml ONLY]MXML_SAX_COMMENT seen %d times, expected 1 times!\0A\00", align 1
@.str.184.646 = private unnamed_addr constant [49 x i8] c"MXML_SAX_DATA seen %d times, expected 60 times!\0A\00", align 1
@.str.185.647 = private unnamed_addr constant [74 x i8] c"[xml_test][test.xml ONLY]MXML_SAX_DATA seen %d times, expected 60 times!\0A\00", align 1
@.str.186.648 = private unnamed_addr constant [53 x i8] c"MXML_SAX_DIRECTIVE seen %d times, expected 1 times!\0A\00", align 1
@.str.187.649 = private unnamed_addr constant [78 x i8] c"[xml_test][test.xml ONLY]MXML_SAX_DIRECTIVE seen %d times, expected 1 times!\0A\00", align 1
@.str.188.650 = private unnamed_addr constant [58 x i8] c"MXML_SAX_ELEMENT_CLOSE seen %d times, expected 20 times!\0A\00", align 1
@.str.189.651 = private unnamed_addr constant [83 x i8] c"[xml_test][test.xml ONLY]MXML_SAX_ELEMENT_CLOSE seen %d times, expected 20 times!\0A\00", align 1
@.str.190.652 = private unnamed_addr constant [57 x i8] c"MXML_SAX_ELEMENT_OPEN seen %d times, expected 20 times!\0A\00", align 1
@.str.191.653 = private unnamed_addr constant [82 x i8] c"[xml_test][test.xml ONLY]MXML_SAX_ELEMENT_OPEN seen %d times, expected 20 times!\0A\00", align 1
@.str.192.654 = private unnamed_addr constant [41 x i8] c"[xml_test]check the event_counts, pass.\0A\00", align 1
@.str.193.655 = private unnamed_addr constant [38 x i8] c"[xml_test]all test cases are finish.\0A\00", align 1
@__FUNCTION__.sax_cb = private unnamed_addr constant [7 x i8] c"sax_cb\00", align 1
@.str.194.656 = private unnamed_addr constant [65 x i8] c"[xml_test]SAX callback sax_cb(), event = %d, event_counts = %d \0A\00", align 1
@__FUNCTION__.type_cb = private unnamed_addr constant [8 x i8] c"type_cb\00", align 1
@.str.195.657 = private unnamed_addr constant [56 x i8] c"[xml_test]XML data type callback type_cb(), type = %s \0A\00", align 1
@.str.196.658 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.197.659 = private unnamed_addr constant [4 x i8] c"pre\00", align 1
@.str.198.660 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@__FUNCTION__.xml_test = private unnamed_addr constant [9 x i8] c"xml_test\00", align 1
@.str.199.668 = private unnamed_addr constant [27 x i8] c"[xml_test]test.xml: \0A %s \0A\00", align 1
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:55:52 GMT +00:00\00", align 1, !dbg !2106
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2111
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt7687_hdk\00", align 1, !dbg !2117

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #0 section ".ramTEXT" !dbg !2254 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !2261
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #17, !dbg !2261
  call void @llvm.dbg.value(metadata i32 0, metadata !2258, metadata !DIExpression()), !dbg !2262
  store i32 0, i32* %1, align 4, !dbg !2263
  call void @llvm.dbg.value(metadata i32* %1, metadata !2258, metadata !DIExpression(DW_OP_deref)), !dbg !2262
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #18, !dbg !2264
  call void @llvm.dbg.value(metadata i32 %3, metadata !2259, metadata !DIExpression()), !dbg !2262
  %4 = icmp eq i32 %3, 0, !dbg !2265
  br i1 %4, label %6, label %5, !dbg !2267

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2268
  unreachable, !dbg !2268

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !2270
  call void @llvm.dbg.value(metadata i32 %7, metadata !2258, metadata !DIExpression()), !dbg !2262
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #17, !dbg !2271
  ret i32 %7, !dbg !2272
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !2273 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !2274
  ret void, !dbg !2275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !2276 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !2277
  ret void, !dbg !2278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !2279 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2280
  ret void, !dbg !2281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !2282 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2283
  ret void, !dbg !2284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #0 !dbg !2285 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !2290
  call void @llvm.dbg.value(metadata i32 %1, metadata !2289, metadata !DIExpression()), !dbg !2291
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !2292
  br i1 %2, label %4, label %3, !dbg !2294

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !2295
  br label %4, !dbg !2297

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !2298
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !2298
  ret i32 %5, !dbg !2299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #0 !dbg !2300 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !2303
  call void @llvm.dbg.value(metadata i32 %1, metadata !2302, metadata !DIExpression()), !dbg !2304
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !2305
  br i1 %2, label %3, label %4, !dbg !2307

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !2308
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !2310
  ret void, !dbg !2311

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !2312
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2314
  unreachable, !dbg !2314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #0 !dbg !2315 {
  br label %1, !dbg !2318

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #20, !dbg !2319
  call void @llvm.dbg.value(metadata i32 %2, metadata !2317, metadata !DIExpression()), !dbg !2321
  %3 = icmp eq i32 %2, 0, !dbg !2322
  br i1 %3, label %4, label %1, !dbg !2323, !llvm.loop !2324

4:                                                ; preds = %1
  ret void, !dbg !2326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #0 !dbg !2327 {
  tail call void @free_sf_lock() #20, !dbg !2328
  ret void, !dbg !2329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2330 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2334, metadata !DIExpression()), !dbg !2337
  call void @llvm.dbg.value(metadata i32 0, metadata !2335, metadata !DIExpression()), !dbg !2337
  tail call fastcc void @sfc_pad_config() #20, !dbg !2338
  %2 = tail call i32 @gpt_get_current_time() #20, !dbg !2339
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #18, !dbg !2340
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !2342
  br i1 %4, label %6, label %5, !dbg !2343

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !2344
  br label %6, !dbg !2346

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #18, !dbg !2347
  ret i32 0, !dbg !2348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #5 !dbg !2349 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2351, metadata !DIExpression()), !dbg !2352
  %1 = load volatile i32, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2353
  call void @llvm.dbg.value(metadata i32 %1, metadata !2351, metadata !DIExpression()), !dbg !2352
  %2 = or i32 %1, 32256, !dbg !2354
  call void @llvm.dbg.value(metadata i32 %2, metadata !2351, metadata !DIExpression()), !dbg !2352
  store volatile i32 %2, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2355
  ret void, !dbg !2356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2357 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2361, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata i8* %1, metadata !2362, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata i32 %2, metadata !2363, metadata !DIExpression()), !dbg !2364
  tail call void @retrieve_sf_lock() #20, !dbg !2365
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #18, !dbg !2366
  tail call void @release_sf_lock() #20, !dbg !2367
  ret void, !dbg !2368
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2373, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i32 %1, metadata !2374, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i8* %2, metadata !2375, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i32 0, metadata !2376, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i32 %1, metadata !2377, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i32 0, metadata !2378, metadata !DIExpression()), !dbg !2379
  tail call void @retrieve_sf_lock() #20, !dbg !2380
  call void @llvm.dbg.value(metadata i32 %1, metadata !2377, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i32 %0, metadata !2373, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i8* %2, metadata !2375, metadata !DIExpression()), !dbg !2379
  %4 = icmp ugt i32 %1, 127, !dbg !2381
  br i1 %4, label %5, label %19, !dbg !2382

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2377, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i32 %7, metadata !2373, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i8* %8, metadata !2375, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata i32 128, metadata !2378, metadata !DIExpression()), !dbg !2379
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2383
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !2386

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #18, !dbg !2387
  br label %14, !dbg !2389

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #18, !dbg !2390
  br label %14, !dbg !2393

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !2394
  call void @llvm.dbg.value(metadata i8* %15, metadata !2375, metadata !DIExpression()), !dbg !2379
  %16 = add i32 %7, 128, !dbg !2395
  call void @llvm.dbg.value(metadata i32 %16, metadata !2373, metadata !DIExpression()), !dbg !2379
  %17 = add i32 %6, -128, !dbg !2396
  call void @llvm.dbg.value(metadata i32 %17, metadata !2377, metadata !DIExpression()), !dbg !2379
  %18 = icmp ugt i32 %17, 127, !dbg !2381
  br i1 %18, label %5, label %19, !dbg !2382, !llvm.loop !2397

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !2379
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2399
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !2401

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #18, !dbg !2402
  br label %28, !dbg !2404

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #18, !dbg !2405
  br label %28, !dbg !2408

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2409
  tail call void @release_sf_lock() #20, !dbg !2410
  ret i32 0, !dbg !2411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !2412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2417, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i32 %1, metadata !2418, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i8* %2, metadata !2419, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.value(metadata i32 0, metadata !2420, metadata !DIExpression()), !dbg !2421
  tail call void @retrieve_sf_lock() #20, !dbg !2422
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #18, !dbg !2423
  %5 = tail call i32 @hal_cache_disable() #18, !dbg !2424
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #18, !dbg !2425
  call void @llvm.dbg.value(metadata i32 %6, metadata !2420, metadata !DIExpression()), !dbg !2421
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2426
  %7 = tail call i32 @hal_cache_enable() #18, !dbg !2427
  tail call void @release_sf_lock() #20, !dbg !2428
  ret i32 %6, !dbg !2429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2434, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata i32 %1, metadata !2435, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata i32 0, metadata !2436, metadata !DIExpression()), !dbg !2437
  tail call void @retrieve_sf_lock() #20, !dbg !2438
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #18, !dbg !2439
  %4 = tail call i32 @hal_cache_disable() #18, !dbg !2440
  %5 = tail call i32 @flash_write_enable() #18, !dbg !2441
  %6 = tail call i32 @flash_unprotect() #18, !dbg !2442
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !2443

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !2444
  %9 = icmp eq i32 %8, 0, !dbg !2448
  br i1 %9, label %10, label %22, !dbg !2449

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #18, !dbg !2450
  call void @llvm.dbg.value(metadata i32 %11, metadata !2436, metadata !DIExpression()), !dbg !2437
  br label %22, !dbg !2451

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !2452
  %14 = icmp eq i32 %13, 0, !dbg !2456
  br i1 %14, label %15, label %22, !dbg !2457

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #18, !dbg !2458
  call void @llvm.dbg.value(metadata i32 %16, metadata !2436, metadata !DIExpression()), !dbg !2437
  br label %22, !dbg !2459

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !2460
  %19 = icmp eq i32 %18, 0, !dbg !2464
  br i1 %19, label %20, label %22, !dbg !2465

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #18, !dbg !2466
  call void @llvm.dbg.value(metadata i32 %21, metadata !2436, metadata !DIExpression()), !dbg !2437
  br label %22, !dbg !2467

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !2437
  %24 = tail call i32 @hal_cache_enable() #18, !dbg !2437
  tail call void @release_sf_lock() #20, !dbg !2437
  ret i32 %23, !dbg !2468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ramTEXT" !dbg !2469 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !2473
  call void @llvm.dbg.value(metadata i8 0, metadata !2471, metadata !DIExpression()), !dbg !2474
  store i8 0, i8* %1, align 1, !dbg !2475
  call void @llvm.dbg.value(metadata i32 0, metadata !2472, metadata !DIExpression()), !dbg !2474
  %2 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !2476
  call void @llvm.dbg.value(metadata i32 %2, metadata !2472, metadata !DIExpression()), !dbg !2474
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2477, !range !2479
  %4 = icmp ne i8 %3, 0, !dbg !2477
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !2480
  br i1 %7, label %27, label %8, !dbg !2480

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !2471, metadata !DIExpression(DW_OP_deref)), !dbg !2474
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #18, !dbg !2481
  %10 = icmp slt i32 %9, 0, !dbg !2484
  br i1 %10, label %11, label %12, !dbg !2485

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2486
  unreachable, !dbg !2486

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !2488
  call void @llvm.dbg.value(metadata i8 %13, metadata !2471, metadata !DIExpression()), !dbg !2474
  %14 = and i8 %13, 1, !dbg !2490
  %15 = icmp eq i8 %14, 0, !dbg !2491
  br i1 %15, label %26, label %16, !dbg !2492

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #18, !dbg !2493
  br label %17, !dbg !2495

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !2471, metadata !DIExpression(DW_OP_deref)), !dbg !2474
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #18, !dbg !2496
  %19 = icmp slt i32 %18, 0, !dbg !2499
  br i1 %19, label %20, label %21, !dbg !2500

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2501
  unreachable, !dbg !2501

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !2503
  call void @llvm.dbg.value(metadata i8 %22, metadata !2471, metadata !DIExpression()), !dbg !2474
  %23 = and i8 %22, 1, !dbg !2505
  %24 = icmp eq i8 %23, 0, !dbg !2506
  br i1 %24, label %25, label %17, !dbg !2507, !llvm.loop !2508

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !2510
  br label %27, !dbg !2511

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !2512
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #18, !dbg !2514
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !2515
  ret void, !dbg !2515
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2516 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2520, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i32 %1, metadata !2521, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i32 0, metadata !2523, metadata !DIExpression()), !dbg !2531
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17, !dbg !2532
  call void @llvm.dbg.value(metadata i8 0, metadata !2526, metadata !DIExpression()), !dbg !2531
  store i8 0, i8* %3, align 1, !dbg !2533
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2534
  call void @llvm.dbg.value(metadata i8 0, metadata !2527, metadata !DIExpression()), !dbg !2531
  store i8 0, i8* %4, align 1, !dbg !2535
  call void @llvm.dbg.value(metadata i8* %3, metadata !2526, metadata !DIExpression(DW_OP_deref)), !dbg !2531
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #18, !dbg !2536
  %6 = icmp slt i32 %5, 0, !dbg !2538
  br i1 %6, label %7, label %8, !dbg !2539

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2540
  unreachable, !dbg !2540

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !2542
  call void @llvm.dbg.value(metadata i8 %9, metadata !2526, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i8 %9, metadata !2524, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i8* %4, metadata !2527, metadata !DIExpression(DW_OP_deref)), !dbg !2531
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #18, !dbg !2544
  %11 = icmp slt i32 %10, 0, !dbg !2546
  br i1 %11, label %12, label %13, !dbg !2547

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2548
  unreachable, !dbg !2548

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !2550
  call void @llvm.dbg.value(metadata i8 %14, metadata !2527, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i8 %14, metadata !2525, metadata !DIExpression()), !dbg !2531
  %15 = call i32 @save_and_set_interrupt_mask() #18, !dbg !2552
  call void @llvm.dbg.value(metadata i32 %15, metadata !2523, metadata !DIExpression()), !dbg !2531
  %16 = and i8 %9, 1, !dbg !2553
  %17 = icmp eq i8 %16, 0, !dbg !2554
  br i1 %17, label %18, label %46, !dbg !2555

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !2528, metadata !DIExpression()), !dbg !2556
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !2557
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !2559

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !2528, metadata !DIExpression()), !dbg !2556
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !2560
  %22 = icmp eq i32 %21, 49, !dbg !2563
  %23 = select i1 %22, i32 132, i32 128, !dbg !2564
  br label %28, !dbg !2564

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !2528, metadata !DIExpression()), !dbg !2556
  br label %28, !dbg !2565

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #18, !dbg !2569
  call void @llvm.dbg.value(metadata i8 %26, metadata !2528, metadata !DIExpression()), !dbg !2556
  %27 = zext i8 %26 to i32, !dbg !2572
  br label %28, !dbg !2572

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !2528, metadata !DIExpression()), !dbg !2556
  %30 = zext i8 %14 to i32, !dbg !2573
  %31 = and i32 %29, %30, !dbg !2575
  %32 = icmp eq i32 %31, 0, !dbg !2576
  br i1 %32, label %33, label %38, !dbg !2577

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !2578
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !2579
  br i1 %37, label %43, label %38, !dbg !2579

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2580, !range !2479
  %40 = icmp eq i8 %39, 0, !dbg !2580
  br i1 %40, label %41, label %42, !dbg !2580

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #19, !dbg !2580
  unreachable, !dbg !2580

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #18, !dbg !2582
  call void @llvm.dbg.value(metadata i32 -121, metadata !2522, metadata !DIExpression()), !dbg !2531
  br label %44, !dbg !2583

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !2584
  call void @llvm.dbg.value(metadata i32 0, metadata !2522, metadata !DIExpression()), !dbg !2531
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !2586
  br label %46, !dbg !2587

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !2588
  call void @llvm.dbg.value(metadata i32 %47, metadata !2522, metadata !DIExpression()), !dbg !2531
  call void @restore_interrupt_mask(i32 noundef %15) #18, !dbg !2587
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2589
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17, !dbg !2589
  ret i32 %47, !dbg !2590
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2591 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2595, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata i32 %1, metadata !2596, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata i8 %2, metadata !2597, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata i32 0, metadata !2599, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata i16 0, metadata !2601, metadata !DIExpression()), !dbg !2603
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2604
  call void @llvm.dbg.value(metadata i8 0, metadata !2602, metadata !DIExpression()), !dbg !2603
  store i8 0, i8* %4, align 1, !dbg !2605
  call void @llvm.dbg.value(metadata i8* %4, metadata !2602, metadata !DIExpression(DW_OP_deref)), !dbg !2603
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #18, !dbg !2606
  %6 = icmp slt i32 %5, 0, !dbg !2608
  br i1 %6, label %7, label %8, !dbg !2609

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2610
  unreachable, !dbg !2610

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !2612
  call void @llvm.dbg.value(metadata i8 %9, metadata !2602, metadata !DIExpression()), !dbg !2603
  call void @llvm.dbg.value(metadata i8 %9, metadata !2601, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2603
  %10 = call i32 @save_and_set_interrupt_mask() #18, !dbg !2614
  call void @llvm.dbg.value(metadata i32 %10, metadata !2598, metadata !DIExpression()), !dbg !2603
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2615, !range !2479
  %12 = icmp eq i8 %11, 0, !dbg !2615
  br i1 %12, label %18, label %13, !dbg !2617

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2618, !range !2479
  %15 = icmp eq i8 %14, 0, !dbg !2618
  br i1 %15, label %16, label %17, !dbg !2618

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #19, !dbg !2618
  unreachable, !dbg !2618

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #18, !dbg !2620
  call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !2621
  call void @restore_interrupt_mask(i32 noundef %10) #18, !dbg !2622
  br label %26, !dbg !2623

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !2601, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2603
  %19 = and i8 %9, 1, !dbg !2624
  %20 = icmp eq i8 %19, 0, !dbg !2626
  br i1 %20, label %21, label %26, !dbg !2627

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !2628
  %22 = inttoptr i32 %1 to i8*, !dbg !2630
  %23 = load volatile i8, i8* %22, align 1, !dbg !2631
  call void @llvm.dbg.value(metadata i8 %23, metadata !2600, metadata !DIExpression()), !dbg !2603
  %24 = icmp eq i8 %23, %2, !dbg !2632
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !2603
  call void @llvm.dbg.value(metadata i32 %27, metadata !2599, metadata !DIExpression()), !dbg !2603
  call void @restore_interrupt_mask(i32 noundef %10) #18, !dbg !2634
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2635
  ret i32 %27, !dbg !2636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 !dbg !2637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2641, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i32 %1, metadata !2642, metadata !DIExpression()), !dbg !2644
  call void @llvm.dbg.value(metadata i1 %2, metadata !2643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2644
  %4 = icmp ugt i32 %0, 1, !dbg !2645
  br i1 %4, label %5, label %8, !dbg !2647

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 75) #18, !dbg !2648
  br label %7, !dbg !2648

7:                                                ; preds = %5, %7
  br label %7, !dbg !2648, !llvm.loop !2650

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !2651

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !2652
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2655
  br i1 %2, label %11, label %13, !dbg !2657

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !2658
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2658
  br label %21, !dbg !2660

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !2661
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2661
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !2663
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2666
  br i1 %2, label %17, label %19, !dbg !2668

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !2669
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2669
  br label %21, !dbg !2671

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !2672
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2672
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !2674
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !2675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2679, metadata !DIExpression()), !dbg !2680
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !2681

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 96) #18, !dbg !2682
  br label %4, !dbg !2682

4:                                                ; preds = %2, %4
  br label %4, !dbg !2682, !llvm.loop !2685

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2686
  %7 = or i32 %6, 1, !dbg !2686
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2686
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !2689
  br label %16, !dbg !2690

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2691
  %11 = or i32 %10, 1, !dbg !2691
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2691
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !2694
  br label %16, !dbg !2695

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2696
  %15 = or i32 %14, 1, !dbg !2696
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2696
  br label %16, !dbg !2699

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !2700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #5 !dbg !2701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2703, metadata !DIExpression()), !dbg !2704
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !2705

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2706
  %4 = and i32 %3, -2, !dbg !2706
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2706
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2709
  %6 = and i32 %5, -2, !dbg !2709
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2709
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2710
  br label %18, !dbg !2711

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2712
  %9 = and i32 %8, -3, !dbg !2712
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2712
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2715
  %11 = and i32 %10, -2, !dbg !2715
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2715
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2716
  br label %18, !dbg !2717

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2718
  %14 = and i32 %13, -2, !dbg !2718
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2718
  br label %18, !dbg !2721

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2722
  %17 = and i32 %16, -2, !dbg !2722
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2722
  br label %18, !dbg !2725

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !2726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #0 !dbg !2727 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2729, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.value(metadata i32 undef, metadata !2729, metadata !DIExpression()), !dbg !2731
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2732
  %3 = and i32 %2, 65535, !dbg !2733
  call void @llvm.dbg.value(metadata i32 %2, metadata !2730, metadata !DIExpression()), !dbg !2731
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2734
  %4 = and i32 %2, 1, !dbg !2735
  %5 = icmp eq i32 %4, 0, !dbg !2735
  br i1 %5, label %6, label %9, !dbg !2737

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !2738
  %8 = icmp eq i32 %7, 0, !dbg !2738
  br i1 %8, label %13, label %9, !dbg !2740

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #18, !dbg !2741
  %12 = load void ()*, void ()** %11, align 4, !dbg !2741
  tail call void %12() #18, !dbg !2741
  br label %13, !dbg !2742

13:                                               ; preds = %9, %6
  ret void, !dbg !2742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #0 !dbg !2743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2747, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.value(metadata i32 %1, metadata !2748, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.value(metadata void ()* %2, metadata !2749, metadata !DIExpression()), !dbg !2750
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !2751

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 149) #18, !dbg !2752
  br label %6, !dbg !2752

6:                                                ; preds = %4, %6
  br label %6, !dbg !2752, !llvm.loop !2755

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !2756
  br i1 %8, label %9, label %13, !dbg !2757

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #18, !dbg !2759
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #18, !dbg !2761
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !2762
  br label %13, !dbg !2763

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !2764

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !2765
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2768
  %16 = or i32 %15, 1, !dbg !2768
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2768
  %17 = shl i32 %1, 2, !dbg !2769
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2770
  %19 = or i32 %18, %17, !dbg !2770
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2770
  br label %36, !dbg !2771

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !2772
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2775
  %22 = or i32 %21, 2, !dbg !2775
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2775
  %23 = shl i32 %1, 2, !dbg !2776
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2777
  %25 = or i32 %24, %23, !dbg !2777
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2777
  br label %36, !dbg !2778

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !2779
  %28 = or i32 %27, 1, !dbg !2782
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2783
  %30 = or i32 %29, %28, !dbg !2783
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2783
  br label %36, !dbg !2784

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !2785
  %33 = or i32 %32, 1, !dbg !2788
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2789
  %35 = or i32 %34, %33, !dbg !2789
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2789
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !2790
  br label %36, !dbg !2791

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !2792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #0 !dbg !2793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2797, metadata !DIExpression()), !dbg !2799
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !2800

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 177) #18, !dbg !2801
  br label %4, !dbg !2801

4:                                                ; preds = %4, %2
  br label %4, !dbg !2801, !llvm.loop !2804

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2798, metadata !DIExpression()), !dbg !2799
  br label %8, !dbg !2805

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2798, metadata !DIExpression()), !dbg !2799
  br label %8, !dbg !2809

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2798, metadata !DIExpression()), !dbg !2799
  br label %8, !dbg !2812

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !2815
  call void @llvm.dbg.value(metadata i32 %10, metadata !2798, metadata !DIExpression()), !dbg !2799
  ret i32 %10, !dbg !2816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #0 !dbg !2817 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #20, !dbg !2818
  ret void, !dbg !2819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #0 !dbg !2820 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #20, !dbg !2821
  ret void, !dbg !2822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_init() local_unnamed_addr #7 !dbg !2823 {
  ret i32 0, !dbg !2827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_deinit() local_unnamed_addr #7 !dbg !2828 {
  ret i32 0, !dbg !2829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_get_generated_random_number(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !2830 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !2835, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata i16 0, metadata !2836, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !2838, metadata !DIExpression()), !dbg !2845
  %2 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2846
  %3 = or i32 %2, 1, !dbg !2846
  store volatile i32 %3, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2846
  call void @llvm.dbg.value(metadata i16 0, metadata !2836, metadata !DIExpression()), !dbg !2844
  br label %4, !dbg !2847

4:                                                ; preds = %1, %9
  %5 = phi i16 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i16 %5, metadata !2836, metadata !DIExpression()), !dbg !2844
  %6 = load volatile i32, i32* inttoptr (i32 -2096107504 to i32*), align 16, !dbg !2848
  %7 = and i32 %6, 1, !dbg !2848
  %8 = icmp eq i32 %7, 0, !dbg !2851
  br i1 %8, label %9, label %12, !dbg !2852

9:                                                ; preds = %4
  tail call void @delay_time(i32 noundef 32) #18, !dbg !2853
  %10 = add nuw nsw i16 %5, 1, !dbg !2854
  call void @llvm.dbg.value(metadata i16 %10, metadata !2836, metadata !DIExpression()), !dbg !2844
  %11 = icmp ult i16 %5, 99, !dbg !2855
  br i1 %11, label %4, label %12, !dbg !2847, !llvm.loop !2856

12:                                               ; preds = %4, %9
  %13 = phi i16 [ %5, %4 ], [ 100, %9 ], !dbg !2844
  %14 = load volatile i32, i32* inttoptr (i32 -2096107512 to i32*), align 8, !dbg !2858
  store i32 %14, i32* %0, align 4, !dbg !2859
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107500 to i32*), metadata !2840, metadata !DIExpression()), !dbg !2860
  %15 = load volatile i32, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !2861
  store volatile i32 1, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !2861
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !2842, metadata !DIExpression()), !dbg !2862
  %16 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2863
  %17 = and i32 %16, -2, !dbg !2863
  store volatile i32 %17, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2863
  %18 = icmp ugt i16 %13, 99, !dbg !2864
  br i1 %18, label %19, label %20, !dbg !2866

19:                                               ; preds = %12
  store i32 0, i32* %0, align 4, !dbg !2867
  br label %20, !dbg !2869

20:                                               ; preds = %12, %19
  %21 = phi i32 [ -2, %19 ], [ 0, %12 ], !dbg !2870
  ret i32 %21, !dbg !2871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #0 !dbg !2872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2876, metadata !DIExpression()), !dbg !2877
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !2878
  tail call void asm sideeffect "dsb", ""() #17, !dbg !2879, !srcloc !2880
  tail call void asm sideeffect "isb", ""() #17, !dbg !2881, !srcloc !2882
  ret void, !dbg !2883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #5 !dbg !2884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2888, metadata !DIExpression()), !dbg !2889
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !2890
  ret void, !dbg !2891
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".ramTEXT" !dbg !2892 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #17, !dbg !2895, !srcloc !2902
  call void @llvm.dbg.value(metadata i32 %1, metadata !2899, metadata !DIExpression()) #17, !dbg !2903
  call void @llvm.dbg.value(metadata i32 %1, metadata !2894, metadata !DIExpression()), !dbg !2904
  tail call void asm sideeffect "cpsid i", "~{memory}"() #17, !dbg !2905, !srcloc !2908
  ret i32 %1, !dbg !2909
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2912, metadata !DIExpression()), !dbg !2913
  call void @llvm.dbg.value(metadata i32 %0, metadata !2914, metadata !DIExpression()) #17, !dbg !2917
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #17, !dbg !2920, !srcloc !2921
  ret void, !dbg !2922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #8 section ".ramTEXT" !dbg !2923 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !2928
  call void @llvm.dbg.value(metadata i32 %1, metadata !2927, metadata !DIExpression()), !dbg !2929
  ret i32 %1, !dbg !2930
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #8 section ".ramTEXT" !dbg !2931 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #20, !dbg !2932
  ret i32 %1, !dbg !2933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2936, metadata !DIExpression()), !dbg !2939
  %2 = tail call i32 @sfc_get_systime() #20, !dbg !2940
  %3 = add i32 %2, %0, !dbg !2941
  %4 = xor i32 %3, -1, !dbg !2942
  call void @llvm.dbg.value(metadata i32 %3, metadata !2937, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2939
  %5 = tail call i32 @sfc_get_systime() #20, !dbg !2943
  call void @llvm.dbg.value(metadata i32 %5, metadata !2938, metadata !DIExpression()), !dbg !2939
  %6 = add i32 %5, %4, !dbg !2944
  %7 = icmp slt i32 %6, 0, !dbg !2944
  br i1 %7, label %8, label %12, !dbg !2945

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #20, !dbg !2946
  call void @llvm.dbg.value(metadata i32 %9, metadata !2938, metadata !DIExpression()), !dbg !2939
  %10 = add i32 %9, %4, !dbg !2944
  %11 = icmp slt i32 %10, 0, !dbg !2944
  br i1 %11, label %8, label %12, !dbg !2945, !llvm.loop !2948

12:                                               ; preds = %8, %1
  ret void, !dbg !2950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2953, metadata !DIExpression()), !dbg !2954
  %2 = shl i32 %0, 5, !dbg !2955
  tail call void @sfc_delay_time(i32 noundef %2) #20, !dbg !2956
  ret void, !dbg !2957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #7 section ".ramTEXT" !dbg !2958 {
  ret i32 128, !dbg !2960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2963, metadata !DIExpression()), !dbg !2965
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !2966
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2967
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2968
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2969
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !2970
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !2971
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !2972
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2973
  call void @llvm.dbg.value(metadata i32 %2, metadata !2964, metadata !DIExpression()), !dbg !2965
  %3 = and i32 %2, -4194305, !dbg !2974
  call void @llvm.dbg.value(metadata i32 %3, metadata !2964, metadata !DIExpression()), !dbg !2965
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2975
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2976
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2977
  call void @llvm.dbg.value(metadata i32 %4, metadata !2964, metadata !DIExpression()), !dbg !2965
  %5 = or i32 %4, 4194304, !dbg !2978
  call void @llvm.dbg.value(metadata i32 %5, metadata !2964, metadata !DIExpression()), !dbg !2965
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2979
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2980
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2981
  call void @llvm.dbg.value(metadata i32 %6, metadata !2964, metadata !DIExpression()), !dbg !2965
  %7 = and i32 %6, -4194305, !dbg !2982
  call void @llvm.dbg.value(metadata i32 %7, metadata !2964, metadata !DIExpression()), !dbg !2965
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2983
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2984
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2985
  call void @llvm.dbg.value(metadata i32 %8, metadata !2964, metadata !DIExpression()), !dbg !2965
  %9 = or i32 %8, 4194304, !dbg !2986
  call void @llvm.dbg.value(metadata i32 %9, metadata !2964, metadata !DIExpression()), !dbg !2965
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2987
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2988
  %10 = icmp eq i32 %0, 0, !dbg !2989
  br i1 %10, label %12, label %11, !dbg !2991

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !2992
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !2994
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !2995
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2996
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2997
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2998
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2999
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !3000
  br label %12, !dbg !3001

12:                                               ; preds = %11, %1
  ret void, !dbg !3002
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #8 section ".ramTEXT" !dbg !3003 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3007
  call void @llvm.dbg.value(metadata i32 %1, metadata !3005, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !3008
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3009
  %3 = lshr i32 %2, 4, !dbg !3010
  %4 = and i32 %3, 7, !dbg !3010
  call void @llvm.dbg.value(metadata i32 %4, metadata !3006, metadata !DIExpression()), !dbg !3008
  %5 = icmp ne i32 %4, 7, !dbg !3011
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !3013
  call void @llvm.dbg.value(metadata i32 %6, metadata !3005, metadata !DIExpression()), !dbg !3008
  %9 = icmp ult i32 %4, 2, !dbg !3013
  %10 = zext i1 %9 to i32, !dbg !3013
  %11 = select i1 %8, i32 %10, i32 3, !dbg !3013
  ret i32 %11, !dbg !3014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 section ".ramTEXT" !dbg !3015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3019, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.value(metadata i32 %1, metadata !3020, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.value(metadata i32 0, metadata !3021, metadata !DIExpression()), !dbg !3022
  %3 = add i32 %1, -1, !dbg !3023
  %4 = icmp ult i32 %3, 3, !dbg !3023
  br i1 %4, label %5, label %8, !dbg !3023

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !3023
  %7 = load i32, i32* %6, align 4, !dbg !3023
  br label %8, !dbg !3023

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !3022
  call void @llvm.dbg.value(metadata i32 %9, metadata !3021, metadata !DIExpression()), !dbg !3022
  %10 = or i32 %9, %0, !dbg !3024
  call void @llvm.dbg.value(metadata i32 %10, metadata !3021, metadata !DIExpression()), !dbg !3022
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3025
  ret void, !dbg !3026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3027 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3031, metadata !DIExpression()), !dbg !3035
  call void @llvm.dbg.value(metadata i32 0, metadata !3032, metadata !DIExpression()), !dbg !3035
  call void @llvm.dbg.value(metadata i32 0, metadata !3034, metadata !DIExpression()), !dbg !3035
  %2 = icmp eq i8* %0, null, !dbg !3036
  br i1 %2, label %25, label %3, !dbg !3038

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3039
  call void @llvm.dbg.value(metadata i32 %4, metadata !3033, metadata !DIExpression()), !dbg !3035
  br label %5, !dbg !3040

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !3035
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !3035
  call void @llvm.dbg.value(metadata i32 %7, metadata !3034, metadata !DIExpression()), !dbg !3035
  call void @llvm.dbg.value(metadata i32 %6, metadata !3032, metadata !DIExpression()), !dbg !3035
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3041
  %9 = load i8, i8* %8, align 1, !dbg !3041
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !3043

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !3034, metadata !DIExpression()), !dbg !3035
  br label %12, !dbg !3044

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3046
  br label %25, !dbg !3047

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !3035
  call void @llvm.dbg.value(metadata i32 %13, metadata !3034, metadata !DIExpression()), !dbg !3035
  %14 = add i32 %6, 2, !dbg !3048
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !3049
  %16 = add i32 %6, 1, !dbg !3050
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !3051
  %18 = load i8, i8* %17, align 1, !dbg !3051
  %19 = zext i8 %18 to i32, !dbg !3051
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #20, !dbg !3052
  %21 = load i8, i8* %17, align 1, !dbg !3053
  %22 = zext i8 %21 to i32, !dbg !3053
  %23 = add i32 %14, %22, !dbg !3054
  call void @llvm.dbg.value(metadata i32 %23, metadata !3032, metadata !DIExpression()), !dbg !3035
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #18, !dbg !3055
  br label %5, !dbg !3040, !llvm.loop !3056

25:                                               ; preds = %1, %11
  ret void, !dbg !3058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !3059 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3064, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %1, metadata !3065, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i8* %2, metadata !3066, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %3, metadata !3067, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %4, metadata !3068, metadata !DIExpression()), !dbg !3075
  %7 = bitcast i32* %6 to i8*, !dbg !3076
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !3076
  %8 = add i32 %3, %1, !dbg !3077
  %9 = icmp ugt i32 %8, 160, !dbg !3079
  br i1 %9, label %59, label %10, !dbg !3080

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !3072, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 0, metadata !3070, metadata !DIExpression()), !dbg !3075
  %11 = icmp eq i32 %1, 0, !dbg !3081
  br i1 %11, label %41, label %12, !dbg !3084

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !3072, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %14, metadata !3070, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 0, metadata !3071, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 0, metadata !3069, metadata !DIExpression()), !dbg !3075
  store i32 0, i32* %6, align 4, !dbg !3085
  call void @llvm.dbg.value(metadata i32 0, metadata !3071, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %14, metadata !3070, metadata !DIExpression()), !dbg !3075
  %15 = icmp ult i32 %14, %1, !dbg !3088
  br i1 %15, label %16, label %29, !dbg !3090

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3071, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %18, metadata !3070, metadata !DIExpression()), !dbg !3075
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !3091
  %20 = load i8, i8* %19, align 1, !dbg !3091
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !3093
  store i8 %20, i8* %21, align 1, !dbg !3094
  %22 = add nuw i32 %18, 1, !dbg !3095
  call void @llvm.dbg.value(metadata i32 %22, metadata !3070, metadata !DIExpression()), !dbg !3075
  %23 = add nuw nsw i32 %17, 1, !dbg !3096
  call void @llvm.dbg.value(metadata i32 %23, metadata !3071, metadata !DIExpression()), !dbg !3075
  %24 = icmp ult i32 %22, %1, !dbg !3088
  %25 = icmp ult i32 %17, 3, !dbg !3097
  %26 = select i1 %24, i1 %25, i1 false, !dbg !3097
  br i1 %26, label %16, label %27, !dbg !3090, !llvm.loop !3098

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !3100
  br label %29, !dbg !3100

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !3100
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !3101
  call void @llvm.dbg.value(metadata i32 %30, metadata !3069, metadata !DIExpression()), !dbg !3075
  %32 = bitcast i8* %13 to i32*, !dbg !3100
  store volatile i32 %30, i32* %32, align 4, !dbg !3100
  %33 = icmp eq i32 %31, 4, !dbg !3102
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !3104
  br i1 %36, label %37, label %38, !dbg !3104

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3105
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3107
  br label %38, !dbg !3108

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !3109
  call void @llvm.dbg.value(metadata i8* %39, metadata !3072, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %31, metadata !3070, metadata !DIExpression()), !dbg !3075
  %40 = icmp ult i32 %31, %1, !dbg !3081
  br i1 %40, label %12, label %41, !dbg !3084, !llvm.loop !3110

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !3112
  call void @llvm.dbg.value(metadata i32 %42, metadata !3074, metadata !DIExpression()), !dbg !3075
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !3113
  %44 = icmp eq i32 %43, 0, !dbg !3113
  br i1 %44, label %46, label %45, !dbg !3115

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3116
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3118
  br label %46, !dbg !3119

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !3120
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !3121
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #20, !dbg !3122
  tail call fastcc void @sfc_MacWaitReady() #20, !dbg !3123
  tail call void @restore_interrupt_mask(i32 noundef %42) #18, !dbg !3124
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !3072, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3075
  call void @llvm.dbg.value(metadata i8* %2, metadata !3066, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 0, metadata !3070, metadata !DIExpression()), !dbg !3075
  %47 = icmp eq i32 %3, 0, !dbg !3125
  br i1 %47, label %59, label %48, !dbg !3128

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !3129
  call void @llvm.dbg.value(metadata i8* %49, metadata !3072, metadata !DIExpression()), !dbg !3075
  br label %50, !dbg !3128

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !3066, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i8* %52, metadata !3072, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %53, metadata !3070, metadata !DIExpression()), !dbg !3075
  %54 = load volatile i8, i8* %52, align 1, !dbg !3130
  store i8 %54, i8* %51, align 1, !dbg !3132
  %55 = add nuw i32 %53, 1, !dbg !3133
  call void @llvm.dbg.value(metadata i32 %55, metadata !3070, metadata !DIExpression()), !dbg !3075
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !3134
  call void @llvm.dbg.value(metadata i8* %56, metadata !3066, metadata !DIExpression()), !dbg !3075
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !3135
  call void @llvm.dbg.value(metadata i8* %57, metadata !3072, metadata !DIExpression()), !dbg !3075
  %58 = icmp eq i32 %55, %3, !dbg !3125
  br i1 %58, label %59, label %50, !dbg !3128, !llvm.loop !3136

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !3075
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !3138
  ret i32 %60, !dbg !3138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #5 section ".ramTEXT" !dbg !3139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3141, metadata !DIExpression()), !dbg !3143
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3144
  call void @llvm.dbg.value(metadata i32 %2, metadata !3142, metadata !DIExpression()), !dbg !3143
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3145
  %4 = and i32 %3, 1, !dbg !3145
  %5 = or i32 %4, %0, !dbg !3147
  %6 = icmp eq i32 %5, 0, !dbg !3147
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !3147
  call void @llvm.dbg.value(metadata i32 %8, metadata !3142, metadata !DIExpression()), !dbg !3143
  %9 = or i32 %8, 8, !dbg !3148
  call void @llvm.dbg.value(metadata i32 %9, metadata !3142, metadata !DIExpression()), !dbg !3143
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3149
  ret void, !dbg !3150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #5 section ".ramTEXT" !dbg !3151 {
  tail call fastcc void @sfc_MacTrigger() #20, !dbg !3152
  tail call fastcc void @sfc_MacLeave() #20, !dbg !3153
  ret void, !dbg !3154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #5 section ".ramTEXT" !dbg !3155 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3159, metadata !DIExpression()), !dbg !3161
  call void @llvm.dbg.value(metadata i32 0, metadata !3160, metadata !DIExpression()), !dbg !3161
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3162
  call void @llvm.dbg.value(metadata i32 %1, metadata !3159, metadata !DIExpression()), !dbg !3161
  %2 = or i32 %1, 12, !dbg !3163
  call void @llvm.dbg.value(metadata i32 %2, metadata !3159, metadata !DIExpression()), !dbg !3161
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3164
  br label %3, !dbg !3165

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3166
  %5 = and i32 %4, 2, !dbg !3167
  %6 = icmp eq i32 %5, 0, !dbg !3168
  br i1 %6, label %3, label %7, !dbg !3165, !llvm.loop !3169

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3171
  %9 = and i32 %8, 1, !dbg !3172
  %10 = icmp eq i32 %9, 0, !dbg !3173
  br i1 %10, label %11, label %7, !dbg !3173, !llvm.loop !3174

11:                                               ; preds = %7
  ret void, !dbg !3176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #5 section ".ramTEXT" !dbg !3177 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3180
  call void @llvm.dbg.value(metadata i32 %1, metadata !3179, metadata !DIExpression()), !dbg !3181
  %2 = and i32 %1, -268435477, !dbg !3182
  call void @llvm.dbg.value(metadata i32 %2, metadata !3179, metadata !DIExpression()), !dbg !3181
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3183
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3184
  call void @llvm.dbg.value(metadata i32 %3, metadata !3179, metadata !DIExpression()), !dbg !3181
  %4 = and i32 %3, -9, !dbg !3185
  call void @llvm.dbg.value(metadata i32 %4, metadata !3179, metadata !DIExpression()), !dbg !3181
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3186
  ret void, !dbg !3187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #5 section ".ramTEXT" !dbg !3188 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !3191, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.value(metadata i32 0, metadata !3190, metadata !DIExpression()), !dbg !3192
  br label %1, !dbg !3193

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !3191, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.value(metadata i32 %3, metadata !3190, metadata !DIExpression()), !dbg !3192
  %4 = bitcast i8* %2 to i32*, !dbg !3195
  store volatile i32 0, i32* %4, align 4, !dbg !3195
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3198
  call void @llvm.dbg.value(metadata i8* %5, metadata !3191, metadata !DIExpression()), !dbg !3192
  %6 = add nuw nsw i32 %3, 1, !dbg !3199
  call void @llvm.dbg.value(metadata i32 %6, metadata !3190, metadata !DIExpression()), !dbg !3192
  %7 = icmp eq i32 %6, 40, !dbg !3200
  br i1 %7, label %8, label %1, !dbg !3193, !llvm.loop !3201

8:                                                ; preds = %1
  ret void, !dbg !3203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3208, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i32 %1, metadata !3209, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i8* %2, metadata !3210, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i32 %3, metadata !3211, metadata !DIExpression()), !dbg !3212
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #20, !dbg !3213
  ret i32 %5, !dbg !3214
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3215 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3219, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 %1, metadata !3220, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %2, metadata !3221, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 %3, metadata !3222, metadata !DIExpression()), !dbg !3228
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !3229
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #17, !dbg !3229
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !3223, metadata !DIExpression()), !dbg !3230
  %7 = add i32 %3, %1, !dbg !3231
  call void @llvm.dbg.value(metadata i32 %7, metadata !3227, metadata !DIExpression()), !dbg !3228
  %8 = icmp ugt i32 %7, 159, !dbg !3232
  br i1 %8, label %9, label %12, !dbg !3234

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 496) #18, !dbg !3235
  br label %11, !dbg !3235

11:                                               ; preds = %11, %9
  br label %11, !dbg !3235, !llvm.loop !3239

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #18, !dbg !3240
  %14 = icmp ne i8* %2, null, !dbg !3241
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !3243
  br i1 %16, label %17, label %20, !dbg !3243

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !3244
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #18, !dbg !3246
  br label %20, !dbg !3247

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !3248
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #17, !dbg !3249
  ret i32 %21, !dbg !3250
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3251 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3255, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.value(metadata i32 %1, metadata !3256, metadata !DIExpression()), !dbg !3260
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !3261
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #17, !dbg !3261
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !3257, metadata !DIExpression()), !dbg !3262
  %6 = bitcast i32* %4 to i8*, !dbg !3263
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17, !dbg !3263
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !3264
  call void @llvm.dbg.value(metadata i32 %7, metadata !3258, metadata !DIExpression()), !dbg !3260
  store i32 %7, i32* %4, align 4, !dbg !3265
  %8 = add i32 %1, 4, !dbg !3266
  call void @llvm.dbg.value(metadata i32 %8, metadata !3259, metadata !DIExpression()), !dbg !3260
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #18, !dbg !3267
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !3268
  call void @llvm.dbg.value(metadata i32* %4, metadata !3258, metadata !DIExpression(DW_OP_deref)), !dbg !3260
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #18, !dbg !3269
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !3270
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17, !dbg !3271
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #17, !dbg !3271
  ret i32 %12, !dbg !3272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !3273 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3275, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i32 %1, metadata !3276, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i8* %2, metadata !3277, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i32 %3, metadata !3278, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i32 %4, metadata !3279, metadata !DIExpression()), !dbg !3282
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !3283
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #17, !dbg !3283
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !3280, metadata !DIExpression()), !dbg !3284
  %8 = add i32 %3, %1, !dbg !3285
  call void @llvm.dbg.value(metadata i32 %8, metadata !3281, metadata !DIExpression()), !dbg !3282
  %9 = icmp ugt i32 %8, 160, !dbg !3286
  br i1 %9, label %10, label %13, !dbg !3288

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 544) #18, !dbg !3289
  br label %12, !dbg !3289

12:                                               ; preds = %12, %10
  br label %12, !dbg !3289, !llvm.loop !3293

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #18, !dbg !3294
  %15 = icmp ne i8* %2, null, !dbg !3295
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !3297
  br i1 %17, label %18, label %21, !dbg !3297

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !3298
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #18, !dbg !3300
  br label %21, !dbg !3301

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !3302
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #17, !dbg !3303
  ret i32 %22, !dbg !3304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3305 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #18, !dbg !3306
  ret void, !dbg !3307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3308 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #18, !dbg !3309
  ret void, !dbg !3310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #0 section ".ramTEXT" !dbg !3311 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3318
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3318
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3315, metadata !DIExpression()), !dbg !3319
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #20, !dbg !3320
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3321
  %5 = load i8, i8* %4, align 1, !dbg !3321
  %6 = zext i8 %5 to i32, !dbg !3322
  %7 = shl nuw i32 %6, 24, !dbg !3323
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3324
  %9 = load i8, i8* %8, align 1, !dbg !3324
  %10 = zext i8 %9 to i32, !dbg !3325
  %11 = shl nuw nsw i32 %10, 16, !dbg !3326
  %12 = or i32 %11, %7, !dbg !3327
  call void @llvm.dbg.value(metadata i32 %12, metadata !3314, metadata !DIExpression()), !dbg !3328
  %13 = call i32 @sfc_GetDirectMode() #18, !dbg !3329
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !3330
  call void @llvm.dbg.value(metadata i32 1, metadata !3313, metadata !DIExpression()), !dbg !3328
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !3313, metadata !DIExpression()), !dbg !3328
  br label %15, !dbg !3331

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3313, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !3317, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3328
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !3333
  %18 = load i8, i8* %17, align 4, !dbg !3333
  %19 = icmp eq i8 %18, %14, !dbg !3337
  br i1 %19, label %20, label %44, !dbg !3338

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !3339
  %22 = load i32, i32* %21, align 4, !dbg !3339
  %23 = icmp eq i32 %22, %12, !dbg !3340
  br i1 %23, label %24, label %44, !dbg !3341

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !3342
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3343
  %26 = add nsw i32 %16, -4, !dbg !3345
  %27 = icmp ult i32 %26, 5, !dbg !3345
  br i1 %27, label %42, label %28, !dbg !3347

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !3348
  %30 = icmp ult i32 %29, 3, !dbg !3348
  br i1 %30, label %42, label %31, !dbg !3350

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !3351
  %33 = icmp ult i32 %32, 3, !dbg !3351
  br i1 %33, label %34, label %40, !dbg !3353

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !3354
  %36 = icmp eq i32 %35, 1, !dbg !3354
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !3357
  %39 = select i1 %38, i32 49, i32 1, !dbg !3357
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !3358
  br label %42, !dbg !3359

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !3360
  br i1 %41, label %42, label %67, !dbg !3362

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !3363
  br label %67, !dbg !3364

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !3365
  call void @llvm.dbg.value(metadata i32 %45, metadata !3313, metadata !DIExpression()), !dbg !3328
  %46 = icmp eq i32 %45, 13, !dbg !3366
  br i1 %46, label %47, label %15, !dbg !3331, !llvm.loop !3367

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3369
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !3370
  %49 = icmp eq i32 %48, 255, !dbg !3372
  br i1 %49, label %50, label %67, !dbg !3373

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #18, !dbg !3374
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3376
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3317, metadata !DIExpression()), !dbg !3328
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !3377
  %53 = load i8, i8* %52, align 4, !dbg !3377
  %54 = load i8, i8* %2, align 1, !dbg !3379
  %55 = icmp eq i8 %53, %54, !dbg !3380
  br i1 %55, label %56, label %60, !dbg !3381

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3317, metadata !DIExpression()), !dbg !3328
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !3382
  %58 = load i32, i32* %57, align 4, !dbg !3382
  %59 = icmp eq i32 %58, %12, !dbg !3383
  br i1 %59, label %67, label %60, !dbg !3384

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #18, !dbg !3385
  %61 = load i8, i8* %2, align 1, !dbg !3387
  %62 = zext i8 %61 to i32, !dbg !3387
  %63 = load i8, i8* %4, align 1, !dbg !3387
  %64 = zext i8 %63 to i32, !dbg !3387
  %65 = load i8, i8* %8, align 1, !dbg !3387
  %66 = zext i8 %65 to i32, !dbg !3387
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #18, !dbg !3387
  br label %67, !dbg !3388

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !3328
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !3328
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3389
  ret i32 %69, !dbg !3389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3390 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3394, metadata !DIExpression()), !dbg !3398
  call void @llvm.dbg.value(metadata i32 %1, metadata !3395, metadata !DIExpression()), !dbg !3398
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17, !dbg !3399
  call void @llvm.dbg.value(metadata i8 -97, metadata !3396, metadata !DIExpression()), !dbg !3398
  store i8 -97, i8* %3, align 1, !dbg !3400
  call void @llvm.dbg.value(metadata i8* %3, metadata !3396, metadata !DIExpression(DW_OP_deref)), !dbg !3398
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #18, !dbg !3401
  call void @llvm.dbg.value(metadata i32 %4, metadata !3397, metadata !DIExpression()), !dbg !3398
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17, !dbg !3402
  ret i32 %4, !dbg !3403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3408, metadata !DIExpression()), !dbg !3409
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #18, !dbg !3410
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !3412
  br i1 %3, label %5, label %4, !dbg !3413

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !3414
  br label %5, !dbg !3416

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #20, !dbg !3417
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #20, !dbg !3418
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !3419

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #18, !dbg !3420
  br label %17, !dbg !3423

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !3424
  %10 = icmp eq i32 %9, 32, !dbg !3428
  br i1 %10, label %11, label %12, !dbg !3429

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #18, !dbg !3430
  br label %17, !dbg !3432

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #18, !dbg !3433
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #18, !dbg !3435
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 352) #18, !dbg !3438
  br label %16, !dbg !3438

16:                                               ; preds = %14, %16
  br label %16, !dbg !3438, !llvm.loop !3442

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !3443
  ret void, !dbg !3444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3447, metadata !DIExpression()), !dbg !3449
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !3450

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3451
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !3454

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3455
  %6 = icmp eq i32 %5, 49, !dbg !3459
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !3460
  call void @llvm.dbg.value(metadata i8* %7, metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3461

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3462

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #18, !dbg !3465
  call void @llvm.dbg.value(metadata i8* %10, metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3468

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !3469
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !3471

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3472
  %15 = icmp eq i32 %14, 49, !dbg !3476
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3477
  call void @llvm.dbg.value(metadata i8* %16, metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3478

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3479

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #18, !dbg !3482
  call void @llvm.dbg.value(metadata i8* %19, metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3485

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !3486
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !3488

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3489
  %24 = icmp eq i32 %23, 49, !dbg !3493
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3494
  call void @llvm.dbg.value(metadata i8* %25, metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3495

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3496

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #18, !dbg !3499
  call void @llvm.dbg.value(metadata i8* %28, metadata !3448, metadata !DIExpression()), !dbg !3449
  br label %35, !dbg !3502

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 268) #18, !dbg !3503
  br label %31, !dbg !3503

31:                                               ; preds = %31, %29
  br label %31, !dbg !3503, !llvm.loop !3506

32:                                               ; preds = %2
  br label %35, !dbg !3507

33:                                               ; preds = %11
  br label %35, !dbg !3507

34:                                               ; preds = %20
  br label %35, !dbg !3507

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !3508
  call void @llvm.dbg.value(metadata i8* %36, metadata !3448, metadata !DIExpression()), !dbg !3449
  tail call void @sfc_Command_List(i8* noundef %36) #18, !dbg !3507
  ret void, !dbg !3509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #0 section ".ramTEXT" !dbg !3510 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3516
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3516
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3514, metadata !DIExpression()), !dbg !3517
  %3 = tail call i32 @sfc_getMaxGPRamSize() #18, !dbg !3518
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !3519
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3520
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #20, !dbg !3521
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3522
  %6 = load i8, i8* %5, align 1, !dbg !3522
  %7 = zext i8 %6 to i32, !dbg !3523
  %8 = shl nuw i32 %7, 24, !dbg !3524
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3525
  %10 = load i8, i8* %9, align 1, !dbg !3525
  %11 = zext i8 %10 to i32, !dbg !3526
  %12 = shl nuw nsw i32 %11, 16, !dbg !3527
  %13 = or i32 %12, %8, !dbg !3528
  call void @llvm.dbg.value(metadata i32 %13, metadata !3513, metadata !DIExpression()), !dbg !3529
  %14 = load i8, i8* %2, align 1, !dbg !3530
  %15 = zext i8 %14 to i32, !dbg !3530
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #18, !dbg !3530
  call void @llvm.dbg.value(metadata i32 1, metadata !3512, metadata !DIExpression()), !dbg !3529
  br label %16, !dbg !3531

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3512, metadata !DIExpression()), !dbg !3529
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !3533
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !3515, metadata !DIExpression()), !dbg !3529
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !3536
  %20 = load i8, i8* %19, align 4, !dbg !3536
  %21 = load i8, i8* %2, align 1, !dbg !3538
  %22 = icmp eq i8 %20, %21, !dbg !3539
  br i1 %22, label %23, label %43, !dbg !3540

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !3541
  %25 = load i32, i32* %24, align 4, !dbg !3541
  %26 = icmp eq i32 %25, %13, !dbg !3542
  br i1 %26, label %27, label %43, !dbg !3543

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !3544
  %29 = load i8*, i8** %28, align 4, !dbg !3544
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %29) #18, !dbg !3544
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3546
  %30 = add nsw i32 %17, -4, !dbg !3547
  %31 = icmp ult i32 %30, 5, !dbg !3547
  br i1 %31, label %41, label %32, !dbg !3549

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !3550
  %34 = icmp ult i32 %33, 3, !dbg !3550
  br i1 %34, label %41, label %35, !dbg !3552

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !3553
  %37 = icmp ult i32 %36, 3, !dbg !3553
  br i1 %37, label %41, label %38, !dbg !3555

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !3556
  br i1 %39, label %40, label %43, !dbg !3558

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %44, metadata !3512, metadata !DIExpression()), !dbg !3529
  br label %66, !dbg !3561

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !3562
  br label %43, !dbg !3563

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %44, metadata !3512, metadata !DIExpression()), !dbg !3529
  %45 = icmp eq i32 %44, 13, !dbg !3564
  br i1 %45, label %46, label %16, !dbg !3531, !llvm.loop !3565

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !3567
  %48 = icmp eq i32 %47, 255, !dbg !3569
  br i1 %48, label %49, label %66, !dbg !3561

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #18, !dbg !3570
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3572
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3515, metadata !DIExpression()), !dbg !3529
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !3573
  %52 = load i8, i8* %51, align 4, !dbg !3573
  %53 = load i8, i8* %2, align 1, !dbg !3575
  %54 = icmp eq i8 %52, %53, !dbg !3576
  br i1 %54, label %55, label %59, !dbg !3577

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3515, metadata !DIExpression()), !dbg !3529
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !3578
  %57 = load i32, i32* %56, align 4, !dbg !3578
  %58 = icmp eq i32 %57, %13, !dbg !3579
  br i1 %58, label %71, label %59, !dbg !3580

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #18, !dbg !3581
  %60 = load i8, i8* %2, align 1, !dbg !3583
  %61 = zext i8 %60 to i32, !dbg !3583
  %62 = load i8, i8* %5, align 1, !dbg !3583
  %63 = zext i8 %62 to i32, !dbg !3583
  %64 = load i8, i8* %9, align 1, !dbg !3583
  %65 = zext i8 %64 to i32, !dbg !3583
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #18, !dbg !3583
  br label %66, !dbg !3584

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3585
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !3585
  br i1 %68, label %69, label %71, !dbg !3587

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !3588
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %70) #18, !dbg !3588
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3590
  br label %71, !dbg !3591

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3529
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3592
  ret void, !dbg !3592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3593 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3595, metadata !DIExpression()), !dbg !3600
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3601
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3601
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3598, metadata !DIExpression()), !dbg !3602
  tail call void @sfc_Init(i32 noundef %0) #18, !dbg !3603
  %4 = tail call i32 @sfc_getMaxGPRamSize() #18, !dbg !3604
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !3605
  tail call fastcc void @flash_reset() #20, !dbg !3606
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3607
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #20, !dbg !3608
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3609
  %7 = load i8, i8* %6, align 1, !dbg !3609
  %8 = zext i8 %7 to i32, !dbg !3610
  %9 = shl nuw i32 %8, 24, !dbg !3611
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3612
  %11 = load i8, i8* %10, align 1, !dbg !3612
  %12 = zext i8 %11 to i32, !dbg !3613
  %13 = shl nuw nsw i32 %12, 16, !dbg !3614
  %14 = or i32 %13, %9, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %14, metadata !3597, metadata !DIExpression()), !dbg !3600
  %15 = load i8, i8* %3, align 1, !dbg !3616
  %16 = zext i8 %15 to i32, !dbg !3616
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #18, !dbg !3616
  call void @llvm.dbg.value(metadata i32 1, metadata !3596, metadata !DIExpression()), !dbg !3600
  br label %17, !dbg !3617

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !3596, metadata !DIExpression()), !dbg !3600
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !3599, metadata !DIExpression()), !dbg !3600
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !3622
  %21 = load i8, i8* %20, align 4, !dbg !3622
  %22 = load i8, i8* %3, align 1, !dbg !3624
  %23 = icmp eq i8 %21, %22, !dbg !3625
  br i1 %23, label %24, label %31, !dbg !3626

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !3627
  %26 = load i32, i32* %25, align 4, !dbg !3627
  %27 = icmp eq i32 %26, %14, !dbg !3628
  br i1 %27, label %28, label %31, !dbg !3629

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !3630
  %30 = load i8*, i8** %29, align 4, !dbg !3630
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %30) #18, !dbg !3630
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3632
  br label %31, !dbg !3633

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %32, metadata !3596, metadata !DIExpression()), !dbg !3600
  %33 = icmp eq i32 %32, 13, !dbg !3635
  br i1 %33, label %34, label %17, !dbg !3617, !llvm.loop !3636

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3638
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !3638
  br i1 %36, label %37, label %39, !dbg !3640

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !3641
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %38) #18, !dbg !3641
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3643
  br label %39, !dbg !3644

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3645
  ret void, !dbg !3645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #0 section ".ramTEXT" !dbg !3646 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #18, !dbg !3647
  tail call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !3648
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #18, !dbg !3649
  tail call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !3650
  ret void, !dbg !3651
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3652 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3656, metadata !DIExpression()), !dbg !3659
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3660
  call void @llvm.dbg.value(metadata i8 0, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i8 0, i8* %2, align 1, !dbg !3661
  call void @llvm.dbg.value(metadata i32 0, metadata !3657, metadata !DIExpression()), !dbg !3659
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !3657, metadata !DIExpression()), !dbg !3659
  %5 = icmp sgt i32 %4, 0, !dbg !3662
  br i1 %5, label %6, label %18, !dbg !3665

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3657, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i8* %2, metadata !3658, metadata !DIExpression(DW_OP_deref)), !dbg !3659
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #20, !dbg !3666
  %9 = icmp slt i32 %8, 0, !dbg !3669
  br i1 %9, label %18, label %10, !dbg !3670

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !3671
  call void @llvm.dbg.value(metadata i8 %11, metadata !3658, metadata !DIExpression()), !dbg !3659
  %12 = and i8 %11, 1, !dbg !3673
  %13 = icmp eq i8 %12, 0, !dbg !3673
  br i1 %13, label %14, label %15, !dbg !3674

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3675
  ret i32 0, !dbg !3676

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !3678
  %16 = add nuw nsw i32 %7, 1, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %16, metadata !3657, metadata !DIExpression()), !dbg !3659
  %17 = icmp eq i32 %16, %4, !dbg !3662
  br i1 %17, label %18, label %6, !dbg !3665, !llvm.loop !3680

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #19, !dbg !3682
  unreachable, !dbg !3682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3683 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3687, metadata !DIExpression()), !dbg !3690
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i8 5, metadata !3689, metadata !DIExpression()), !dbg !3690
  store i8 5, i8* %2, align 1, !dbg !3692
  call void @llvm.dbg.value(metadata i8* %2, metadata !3689, metadata !DIExpression(DW_OP_deref)), !dbg !3690
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %3, metadata !3688, metadata !DIExpression()), !dbg !3690
  %4 = icmp ne i32 %3, 1, !dbg !3694
  %5 = sext i1 %4 to i32, !dbg !3690
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3696
  ret i32 %5, !dbg !3696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3697 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3699, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32 %1, metadata !3700, metadata !DIExpression()), !dbg !3703
  %4 = bitcast i32* %3 to i8*, !dbg !3704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3704
  call void @llvm.dbg.value(metadata i32 0, metadata !3701, metadata !DIExpression()), !dbg !3703
  store i32 144, i32* %3, align 4, !dbg !3705
  call void @llvm.dbg.value(metadata i8 undef, metadata !3701, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32* %3, metadata !3701, metadata !DIExpression(DW_OP_deref)), !dbg !3703
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #18, !dbg !3706
  call void @llvm.dbg.value(metadata i32 %5, metadata !3702, metadata !DIExpression()), !dbg !3703
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3707
  ret i32 %5, !dbg !3708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3709 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3711, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i32 %1, metadata !3712, metadata !DIExpression()), !dbg !3715
  %4 = bitcast i32* %3 to i8*, !dbg !3716
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3716
  call void @llvm.dbg.value(metadata i32 0, metadata !3713, metadata !DIExpression()), !dbg !3715
  store i32 144, i32* %3, align 4, !dbg !3717
  call void @llvm.dbg.value(metadata i8 undef, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i32* %3, metadata !3713, metadata !DIExpression(DW_OP_deref)), !dbg !3715
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #18, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %5, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3719
  ret i32 %5, !dbg !3720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3721 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3725, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %1, metadata !3726, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.value(metadata i32 %2, metadata !3727, metadata !DIExpression()), !dbg !3730
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !3731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !3731
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !3728, metadata !DIExpression()), !dbg !3732
  %6 = icmp eq i32 %2, 0, !dbg !3733
  br i1 %6, label %18, label %7, !dbg !3735

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #20, !dbg !3736
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !3738
  store i8 3, i8* %5, align 1, !dbg !3739
  %9 = lshr i32 %1, 16, !dbg !3740
  %10 = trunc i32 %9 to i8, !dbg !3741
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !3742
  store i8 %10, i8* %11, align 1, !dbg !3743
  %12 = lshr i32 %1, 8, !dbg !3744
  %13 = trunc i32 %12 to i8, !dbg !3745
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !3746
  store i8 %13, i8* %14, align 1, !dbg !3747
  %15 = trunc i32 %1 to i8, !dbg !3748
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !3749
  store i8 %15, i8* %16, align 1, !dbg !3750
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #18, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %17, metadata !3729, metadata !DIExpression()), !dbg !3730
  br label %18, !dbg !3752

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !3730
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !3753
  ret i32 %19, !dbg !3753
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3754 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3758, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 %1, metadata !3759, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 %2, metadata !3760, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 %3, metadata !3761, metadata !DIExpression()), !dbg !3767
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !3768
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #17, !dbg !3768
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !3762, metadata !DIExpression()), !dbg !3769
  %7 = icmp eq i32 %2, 0, !dbg !3770
  br i1 %7, label %33, label %8, !dbg !3772

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #20, !dbg !3773
  store i8 11, i8* %6, align 1, !dbg !3775
  %10 = lshr i32 %1, 16, !dbg !3776
  %11 = trunc i32 %10 to i8, !dbg !3777
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !3778
  store i8 %11, i8* %12, align 1, !dbg !3779
  %13 = lshr i32 %1, 8, !dbg !3780
  %14 = trunc i32 %13 to i8, !dbg !3781
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !3782
  store i8 %14, i8* %15, align 1, !dbg !3783
  %16 = trunc i32 %1 to i8, !dbg !3784
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !3785
  store i8 %16, i8* %17, align 1, !dbg !3786
  call void @llvm.dbg.value(metadata i32 4, metadata !3764, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 0, metadata !3766, metadata !DIExpression()), !dbg !3767
  %18 = icmp sgt i32 %3, 0, !dbg !3787
  br i1 %18, label %19, label %30, !dbg !3790

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !3790
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !3790
  br label %22, !dbg !3790

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 undef, metadata !3764, metadata !DIExpression()), !dbg !3767
  %24 = add nuw nsw i32 %23, 4, !dbg !3791
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !3793
  store i8 0, i8* %25, align 1, !dbg !3794
  call void @llvm.dbg.value(metadata i32 undef, metadata !3764, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3767
  %26 = add nuw nsw i32 %23, 1, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %26, metadata !3766, metadata !DIExpression()), !dbg !3767
  %27 = icmp eq i32 %23, %21, !dbg !3796
  br i1 %27, label %28, label %22, !dbg !3790, !llvm.loop !3797

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !3790
  br label %30, !dbg !3799

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !3767
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #18, !dbg !3799
  call void @llvm.dbg.value(metadata i32 %32, metadata !3765, metadata !DIExpression()), !dbg !3767
  br label %33, !dbg !3800

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !3767
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #17, !dbg !3801
  ret i32 %34, !dbg !3801
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3802 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3804, metadata !DIExpression()), !dbg !3807
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3808
  call void @llvm.dbg.value(metadata i8 53, metadata !3806, metadata !DIExpression()), !dbg !3807
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3809
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !3811

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i8 53, i8* %2, align 1, !dbg !3812
  br label %10, !dbg !3814

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i8 43, i8* %2, align 1, !dbg !3815
  br label %10, !dbg !3818

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i8 112, i8* %2, align 1, !dbg !3819
  br label %10, !dbg !3822

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #18, !dbg !3823
  call void @llvm.dbg.value(metadata i8 %8, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i8 %8, i8* %2, align 1, !dbg !3826
  br label %10, !dbg !3827

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0)) #18, !dbg !3828
  call void @llvm.dbg.value(metadata i8 5, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i8 5, i8* %2, align 1, !dbg !3830
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !3806, metadata !DIExpression(DW_OP_deref)), !dbg !3807
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %11, metadata !3805, metadata !DIExpression()), !dbg !3807
  %12 = icmp ne i32 %11, 1, !dbg !3832
  %13 = sext i1 %12 to i32, !dbg !3807
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3834
  ret i32 %13, !dbg !3834
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3835 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3838
  call void @llvm.dbg.value(metadata i8 0, metadata !3837, metadata !DIExpression()), !dbg !3839
  store i8 0, i8* %1, align 1, !dbg !3840
  call void @llvm.dbg.value(metadata i8* %1, metadata !3837, metadata !DIExpression(DW_OP_deref)), !dbg !3839
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !3841
  %3 = icmp slt i32 %2, 0, !dbg !3843
  br i1 %3, label %9, label %4, !dbg !3844

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3845
  call void @llvm.dbg.value(metadata i8 %5, metadata !3837, metadata !DIExpression()), !dbg !3839
  %6 = and i8 %5, 28, !dbg !3847
  %7 = icmp eq i8 %6, 0, !dbg !3848
  br i1 %7, label %9, label %8, !dbg !3849

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !3837, metadata !DIExpression()), !dbg !3839
  store i8 0, i8* %1, align 1, !dbg !3850
  call void @llvm.dbg.value(metadata i8* %1, metadata !3837, metadata !DIExpression(DW_OP_deref)), !dbg !3839
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #20, !dbg !3852
  br label %9, !dbg !3853

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !3839
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3854
  ret i32 %10, !dbg !3854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3855 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3857, metadata !DIExpression()), !dbg !3860
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3861
  call void @llvm.dbg.value(metadata i8 1, metadata !3859, metadata !DIExpression()), !dbg !3860
  store i8 1, i8* %2, align 1, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %2, metadata !3859, metadata !DIExpression(DW_OP_deref)), !dbg !3860
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %3, metadata !3858, metadata !DIExpression()), !dbg !3860
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3864
  ret void, !dbg !3864
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3865 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3868
  call void @llvm.dbg.value(metadata i8 0, metadata !3867, metadata !DIExpression()), !dbg !3869
  store i8 0, i8* %1, align 1, !dbg !3870
  call void @llvm.dbg.value(metadata i8* %1, metadata !3867, metadata !DIExpression(DW_OP_deref)), !dbg !3869
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !3871
  %3 = icmp slt i32 %2, 0, !dbg !3873
  br i1 %3, label %7, label %4, !dbg !3874

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3875
  call void @llvm.dbg.value(metadata i8 %5, metadata !3867, metadata !DIExpression()), !dbg !3869
  %6 = or i8 %5, 28, !dbg !3875
  call void @llvm.dbg.value(metadata i8 %6, metadata !3867, metadata !DIExpression()), !dbg !3869
  store i8 %6, i8* %1, align 1, !dbg !3875
  call void @llvm.dbg.value(metadata i8* %1, metadata !3867, metadata !DIExpression(DW_OP_deref)), !dbg !3869
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #20, !dbg !3876
  br label %7, !dbg !3877

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !3869
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3878
  ret i32 %8, !dbg !3878
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3879 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3882
  call void @llvm.dbg.value(metadata i8 6, metadata !3881, metadata !DIExpression()), !dbg !3883
  store i8 6, i8* %1, align 1, !dbg !3884
  call void @llvm.dbg.value(metadata i8* %1, metadata !3881, metadata !DIExpression(DW_OP_deref)), !dbg !3883
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !3885
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3886
  ret i32 %2, !dbg !3887
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3888 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3891
  call void @llvm.dbg.value(metadata i8 4, metadata !3890, metadata !DIExpression()), !dbg !3892
  store i8 4, i8* %1, align 1, !dbg !3893
  call void @llvm.dbg.value(metadata i8* %1, metadata !3890, metadata !DIExpression(DW_OP_deref)), !dbg !3892
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !3894
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3895
  ret i32 %2, !dbg !3896
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3897 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3901, metadata !DIExpression()), !dbg !3905
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3906
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3906
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3902, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 0, metadata !3904, metadata !DIExpression()), !dbg !3905
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3908
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !3910
  br label %5, !dbg !3911

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3912
  call void @llvm.dbg.value(metadata i32 %6, metadata !3904, metadata !DIExpression()), !dbg !3905
  %7 = icmp eq i32 %6, -121, !dbg !3914
  br i1 %7, label %5, label %8, !dbg !3915, !llvm.loop !3916

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %9, metadata !3903, metadata !DIExpression()), !dbg !3905
  store i8 -40, i8* %3, align 1, !dbg !3919
  %10 = lshr i32 %0, 16, !dbg !3920
  %11 = trunc i32 %10 to i8, !dbg !3921
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3922
  store i8 %11, i8* %12, align 1, !dbg !3923
  %13 = lshr i32 %0, 8, !dbg !3924
  %14 = trunc i32 %13 to i8, !dbg !3925
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3926
  store i8 %14, i8* %15, align 1, !dbg !3927
  %16 = trunc i32 %0 to i8, !dbg !3928
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3929
  store i8 %16, i8* %17, align 1, !dbg !3930
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !3931
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !3932
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !3933
  br label %19, !dbg !3934

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %20, metadata !3904, metadata !DIExpression()), !dbg !3905
  %21 = icmp eq i32 %20, -121, !dbg !3937
  br i1 %21, label %19, label %22, !dbg !3938, !llvm.loop !3939

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #20, !dbg !3941
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3942
  ret i32 0, !dbg !3942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3943 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3945, metadata !DIExpression()), !dbg !3949
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3950
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3950
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3946, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i32 0, metadata !3948, metadata !DIExpression()), !dbg !3949
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3952
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !3954
  br label %5, !dbg !3955

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3956
  call void @llvm.dbg.value(metadata i32 %6, metadata !3948, metadata !DIExpression()), !dbg !3949
  %7 = icmp eq i32 %6, -121, !dbg !3958
  br i1 %7, label %5, label %8, !dbg !3959, !llvm.loop !3960

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %9, metadata !3947, metadata !DIExpression()), !dbg !3949
  store i8 82, i8* %3, align 1, !dbg !3963
  %10 = lshr i32 %0, 16, !dbg !3964
  %11 = trunc i32 %10 to i8, !dbg !3965
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3966
  store i8 %11, i8* %12, align 1, !dbg !3967
  %13 = lshr i32 %0, 8, !dbg !3968
  %14 = trunc i32 %13 to i8, !dbg !3969
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3970
  store i8 %14, i8* %15, align 1, !dbg !3971
  %16 = trunc i32 %0 to i8, !dbg !3972
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3973
  store i8 %16, i8* %17, align 1, !dbg !3974
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !3975
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !3976
  br label %19, !dbg !3977

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %20, metadata !3948, metadata !DIExpression()), !dbg !3949
  %21 = icmp eq i32 %20, -121, !dbg !3980
  br i1 %21, label %19, label %22, !dbg !3981, !llvm.loop !3982

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !3984
  %23 = call i32 @flash_write_disable() #20, !dbg !3985
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3986
  ret i32 0, !dbg !3986
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3987 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3989, metadata !DIExpression()), !dbg !3993
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3994
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3994
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3990, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i32 0, metadata !3992, metadata !DIExpression()), !dbg !3993
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3996
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !3998
  br label %5, !dbg !3999

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %6, metadata !3992, metadata !DIExpression()), !dbg !3993
  %7 = icmp eq i32 %6, -121, !dbg !4002
  br i1 %7, label %5, label %8, !dbg !4003, !llvm.loop !4004

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !4006
  call void @llvm.dbg.value(metadata i32 %9, metadata !3991, metadata !DIExpression()), !dbg !3993
  store i8 32, i8* %3, align 1, !dbg !4007
  %10 = lshr i32 %0, 16, !dbg !4008
  %11 = trunc i32 %10 to i8, !dbg !4009
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4010
  store i8 %11, i8* %12, align 1, !dbg !4011
  %13 = lshr i32 %0, 8, !dbg !4012
  %14 = trunc i32 %13 to i8, !dbg !4013
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4014
  store i8 %14, i8* %15, align 1, !dbg !4015
  %16 = trunc i32 %0 to i8, !dbg !4016
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4017
  store i8 %16, i8* %17, align 1, !dbg !4018
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !4019
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !4020
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !4021
  br label %19, !dbg !4022

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %20, metadata !3992, metadata !DIExpression()), !dbg !3993
  %21 = icmp eq i32 %20, -121, !dbg !4025
  br i1 %21, label %19, label %22, !dbg !4026, !llvm.loop !4027

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #20, !dbg !4029
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !4030
  ret i32 0, !dbg !4030
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #0 section ".ramTEXT" !dbg !4031 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !4034
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #17, !dbg !4034
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !4033, metadata !DIExpression()), !dbg !4035
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !4036
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !4038
  %4 = tail call i32 @flash_write_enable() #20, !dbg !4039
  %5 = tail call i32 @flash_unprotect() #20, !dbg !4040
  store i8 96, i8* %2, align 1, !dbg !4041
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !4042
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #20, !dbg !4043
  %8 = call i32 @flash_write_disable() #20, !dbg !4045
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4046
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #17, !dbg !4047
  ret i32 0, !dbg !4047
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !4048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4052, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i32 %1, metadata !4053, metadata !DIExpression()), !dbg !4054
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !4053, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i32 %0, metadata !4052, metadata !DIExpression()), !dbg !4054
  br i1 %3, label %4, label %14, !dbg !4055

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4053, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i32 %6, metadata !4052, metadata !DIExpression()), !dbg !4054
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #20, !dbg !4056
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4059
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !4060
  %10 = load i32, i32* %9, align 4, !dbg !4060
  %11 = add i32 %10, %6, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %11, metadata !4052, metadata !DIExpression()), !dbg !4054
  %12 = sub i32 %5, %10, !dbg !4062
  call void @llvm.dbg.value(metadata i32 %12, metadata !4053, metadata !DIExpression()), !dbg !4054
  %13 = icmp sgt i32 %12, 0, !dbg !4063
  br i1 %13, label %4, label %14, !dbg !4064, !llvm.loop !4065

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !4067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !4068 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4072, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %1, metadata !4073, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %2, metadata !4074, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4077, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4078, metadata !DIExpression()), !dbg !4086
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !4087
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #17, !dbg !4087
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !4080, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 %1, metadata !4083, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %0, metadata !4084, metadata !DIExpression()), !dbg !4086
  %6 = icmp eq i32 %2, 0, !dbg !4089
  br i1 %6, label %86, label %7, !dbg !4091

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !4092
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4094
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !4095
  %11 = load i32, i32* %10, align 4, !dbg !4095
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !4096
  %13 = load i32, i32* %12, align 4, !dbg !4096
  %14 = mul i32 %13, %11, !dbg !4097
  %15 = icmp ugt i32 %8, %14, !dbg !4098
  br i1 %15, label %86, label %16, !dbg !4099

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #20, !dbg !4100
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !4102
  call void @llvm.dbg.value(metadata i32 %19, metadata !4081, metadata !DIExpression()), !dbg !4086
  %20 = icmp eq i32 %19, -121, !dbg !4104
  br i1 %20, label %18, label %21, !dbg !4105, !llvm.loop !4106

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !4109
  %22 = tail call i32 @sfc_GetDirectMode() #18, !dbg !4110
  call void @llvm.dbg.value(metadata i32 %22, metadata !4079, metadata !DIExpression()), !dbg !4086
  %23 = icmp eq i32 %22, 2, !dbg !4111
  br i1 %23, label %24, label %29, !dbg !4113

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4114
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !4115
  %27 = load i8, i8* %26, align 4, !dbg !4115
  %28 = icmp eq i8 %27, 0, !dbg !4114
  br i1 %28, label %29, label %30, !dbg !4116

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !4117
  store i8 %31, i8* %5, align 1, !dbg !4117
  call void @llvm.dbg.value(metadata i32 undef, metadata !4075, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %0, metadata !4084, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %1, metadata !4083, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %2, metadata !4074, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4078, metadata !DIExpression()), !dbg !4086
  %32 = icmp sgt i32 %2, 0, !dbg !4118
  br i1 %32, label %33, label %41, !dbg !4119

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !4120
  %35 = urem i32 %1, %34, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %35, metadata !4075, metadata !DIExpression()), !dbg !4086
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !4119

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !4086
  br label %81, !dbg !4122

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !4123
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !4084, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %46, metadata !4083, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %47, metadata !4074, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %48, metadata !4075, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %49, metadata !4078, metadata !DIExpression()), !dbg !4086
  %50 = sub i32 %44, %48, !dbg !4123
  %51 = icmp ugt i32 %47, %50, !dbg !4123
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %52, metadata !4076, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4075, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %45, metadata !4085, metadata !DIExpression()), !dbg !4086
  %53 = lshr i32 %46, 16, !dbg !4125
  %54 = trunc i32 %53 to i8, !dbg !4126
  store i8 %54, i8* %36, align 1, !dbg !4127
  %55 = lshr i32 %46, 8, !dbg !4128
  %56 = trunc i32 %55 to i8, !dbg !4129
  store i8 %56, i8* %37, align 1, !dbg !4130
  %57 = trunc i32 %46 to i8, !dbg !4131
  store i8 %57, i8* %38, align 1, !dbg !4132
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !4133
  %59 = call i32 @flash_write_enable() #20, !dbg !4135
  %60 = call i32 @save_and_set_interrupt_mask() #18, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %60, metadata !4082, metadata !DIExpression()), !dbg !4086
  call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !4137
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #18, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %61, metadata !4077, metadata !DIExpression()), !dbg !4086
  call void @restore_interrupt_mask(i32 noundef %60) #18, !dbg !4139
  br label %62, !dbg !4140

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !4141
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #18, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %64, metadata !4081, metadata !DIExpression()), !dbg !4086
  %65 = icmp eq i32 %64, 0, !dbg !4144
  br i1 %65, label %62, label %66, !dbg !4145, !llvm.loop !4146

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !4148
  br i1 %67, label %68, label %73, !dbg !4150

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !4151
  call void @llvm.dbg.value(metadata i32 %69, metadata !4078, metadata !DIExpression()), !dbg !4086
  %70 = icmp ult i32 %61, %52, !dbg !4153
  br i1 %70, label %71, label %73, !dbg !4155

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #20, !dbg !4156
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #19, !dbg !4158
  unreachable, !dbg !4158

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !4086
  call void @llvm.dbg.value(metadata i32 %74, metadata !4078, metadata !DIExpression()), !dbg !4086
  %75 = sub i32 %47, %52, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %75, metadata !4074, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !4083, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4086
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !4084, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4075, metadata !DIExpression()), !dbg !4086
  %76 = icmp sgt i32 %75, 0, !dbg !4118
  br i1 %76, label %77, label %41, !dbg !4119, !llvm.loop !4160

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %78, metadata !4084, metadata !DIExpression()), !dbg !4086
  %79 = add i32 %52, %46, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %79, metadata !4083, metadata !DIExpression()), !dbg !4086
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !4123
  br label %43, !dbg !4119

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %82, metadata !4081, metadata !DIExpression()), !dbg !4086
  %83 = icmp eq i32 %82, -121, !dbg !4166
  br i1 %83, label %81, label %84, !dbg !4167, !llvm.loop !4168

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #20, !dbg !4170
  br label %86, !dbg !4171

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !4086
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #17, !dbg !4172
  ret i32 %87, !dbg !4172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4173 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4175, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 4, metadata !4176, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 0, metadata !4177, metadata !DIExpression()), !dbg !4179
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4180
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !4180
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4178, metadata !DIExpression()), !dbg !4181
  %4 = and i32 %0, 4095, !dbg !4182
  %5 = icmp eq i32 %4, 0, !dbg !4182
  br i1 %5, label %6, label %29, !dbg !4184

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !4185
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4187
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !4188
  %10 = load i32, i32* %9, align 4, !dbg !4188
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !4189
  %12 = load i32, i32* %11, align 4, !dbg !4189
  %13 = mul i32 %12, %10, !dbg !4190
  %14 = icmp ugt i32 %7, %13, !dbg !4191
  br i1 %14, label %29, label %15, !dbg !4192

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !4193
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #20, !dbg !4194
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #20, !dbg !4196
  store i8 2, i8* %3, align 1, !dbg !4197
  %18 = lshr i32 %0, 16, !dbg !4198
  %19 = trunc i32 %18 to i8, !dbg !4199
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4200
  store i8 %19, i8* %20, align 1, !dbg !4201
  %21 = lshr i32 %0, 8, !dbg !4202
  %22 = trunc i32 %21 to i8, !dbg !4203
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4204
  store i8 %22, i8* %23, align 1, !dbg !4205
  %24 = trunc i32 %0 to i8, !dbg !4206
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4207
  store i8 %24, i8* %25, align 1, !dbg !4208
  %26 = tail call i32 @flash_write_enable() #20, !dbg !4209
  %27 = tail call i32 @flash_unprotect() #20, !dbg !4210
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #18, !dbg !4211
  call void @llvm.dbg.value(metadata i32 %28, metadata !4177, metadata !DIExpression()), !dbg !4179
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4212
  br label %29, !dbg !4213

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !4179
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !4214
  ret i32 %30, !dbg !4214
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !4215 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4217, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %1, metadata !4218, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %2, metadata !4219, metadata !DIExpression()), !dbg !4234
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !4235
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #17, !dbg !4235
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !4220, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 4096, metadata !4224, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 4095, metadata !4225, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i8* %0, metadata !4217, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %1, metadata !4218, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %2, metadata !4219, metadata !DIExpression()), !dbg !4234
  %6 = icmp sgt i32 %2, 0, !dbg !4237
  br i1 %6, label %7, label %43, !dbg !4238

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !4217, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %9, metadata !4218, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %10, metadata !4219, metadata !DIExpression()), !dbg !4234
  %11 = and i32 %9, 4095, !dbg !4239
  %12 = icmp ne i32 %11, 0, !dbg !4239
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !4240
  br i1 %14, label %15, label %30, !dbg !4240

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !4241
  call void @llvm.dbg.value(metadata i32 %16, metadata !4230, metadata !DIExpression()), !dbg !4242
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #20, !dbg !4243
  %18 = icmp eq i32 %17, 4096, !dbg !4245
  br i1 %18, label %19, label %45, !dbg !4246

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !4247
  call void @llvm.dbg.value(metadata i32 %11, metadata !4226, metadata !DIExpression()), !dbg !4242
  %20 = sub nuw nsw i32 4096, %11, !dbg !4248
  %21 = icmp ugt i32 %10, %20, !dbg !4248
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %22, metadata !4231, metadata !DIExpression()), !dbg !4242
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !4249
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #18, !dbg !4250
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #20, !dbg !4251
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #20, !dbg !4253
  %27 = icmp eq i32 %26, 4096, !dbg !4255
  br i1 %27, label %28, label %45, !dbg !4256

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !4217, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4234
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !4218, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4234
  %29 = sub nsw i32 %10, %22, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %29, metadata !4219, metadata !DIExpression()), !dbg !4234
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %31, metadata !4232, metadata !DIExpression()), !dbg !4259
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #20, !dbg !4260
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #20, !dbg !4262
  %34 = icmp eq i32 %33, %31, !dbg !4264
  br i1 %34, label %35, label %43, !dbg !4265

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !4217, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4234
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !4218, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4234
  %36 = and i32 %10, 4095, !dbg !4266
  call void @llvm.dbg.value(metadata i8* %8, metadata !4217, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %9, metadata !4218, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %10, metadata !4219, metadata !DIExpression()), !dbg !4234
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !4267
  %41 = add i32 %39, %9, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %40, metadata !4217, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %41, metadata !4218, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %38, metadata !4219, metadata !DIExpression()), !dbg !4234
  %42 = icmp sgt i32 %38, 0, !dbg !4237
  br i1 %42, label %7, label %43, !dbg !4238, !llvm.loop !4268

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4234
  br label %45, !dbg !4270

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !4234
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #17, !dbg !4270
  ret i32 %46, !dbg !4270
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #0 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #9 section ".ramTEXT" !dbg !4271 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !4275
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !4277

2:                                                ; preds = %0
  br label %7, !dbg !4278

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !4281
  %5 = icmp ult i32 %4, 3, !dbg !4281
  %6 = select i1 %5, i32 1, i32 2, !dbg !4283
  br label %7, !dbg !4283

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !4284
  ret i32 %8, !dbg !4285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #0 !dbg !4286 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #18, !dbg !4287
  ret i32 %1, !dbg !4288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #0 !dbg !4289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4291, metadata !DIExpression()), !dbg !4294
  %2 = tail call i32 @get_current_count() #20, !dbg !4295
  %3 = add i32 %2, %0, !dbg !4296
  %4 = xor i32 %3, -1, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %3, metadata !4292, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4294
  %5 = tail call i32 @get_current_count() #20, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %5, metadata !4293, metadata !DIExpression()), !dbg !4294
  %6 = add i32 %5, %4, !dbg !4299
  %7 = icmp slt i32 %6, 0, !dbg !4299
  br i1 %7, label %8, label %12, !dbg !4300

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #20, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %9, metadata !4293, metadata !DIExpression()), !dbg !4294
  %10 = add i32 %9, %4, !dbg !4299
  %11 = icmp slt i32 %10, 0, !dbg !4299
  br i1 %11, label %8, label %12, !dbg !4300, !llvm.loop !4303

12:                                               ; preds = %8, %1
  ret void, !dbg !4305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #0 !dbg !4306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4308, metadata !DIExpression()), !dbg !4311
  %2 = tail call i32 @get_current_gpt4_count() #20, !dbg !4312
  %3 = add i32 %2, %0, !dbg !4313
  %4 = xor i32 %3, -1, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %3, metadata !4309, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4311
  %5 = tail call i32 @get_current_gpt4_count() #20, !dbg !4315
  call void @llvm.dbg.value(metadata i32 %5, metadata !4310, metadata !DIExpression()), !dbg !4311
  %6 = add i32 %5, %4, !dbg !4316
  %7 = icmp slt i32 %6, 0, !dbg !4316
  br i1 %7, label %8, label %12, !dbg !4317

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #20, !dbg !4318
  call void @llvm.dbg.value(metadata i32 %9, metadata !4310, metadata !DIExpression()), !dbg !4311
  %10 = add i32 %9, %4, !dbg !4316
  %11 = icmp slt i32 %10, 0, !dbg !4316
  br i1 %11, label %8, label %12, !dbg !4317, !llvm.loop !4320

12:                                               ; preds = %8, %1
  ret void, !dbg !4322
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #0 !dbg !4323 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #18, !dbg !4324
  ret i32 %1, !dbg !4325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !4326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4328, metadata !DIExpression()), !dbg !4330
  %2 = shl i32 %0, 5, !dbg !4331
  call void @llvm.dbg.value(metadata i32 %2, metadata !4329, metadata !DIExpression()), !dbg !4330
  %3 = mul i32 %0, 7, !dbg !4332
  %4 = udiv i32 %3, 10, !dbg !4333
  %5 = add i32 %4, %2, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %5, metadata !4329, metadata !DIExpression()), !dbg !4330
  %6 = mul i32 %0, 6, !dbg !4335
  %7 = udiv i32 %6, 100, !dbg !4336
  %8 = add i32 %5, %7, !dbg !4337
  call void @llvm.dbg.value(metadata i32 %8, metadata !4329, metadata !DIExpression()), !dbg !4330
  %9 = shl i32 %0, 3, !dbg !4338
  %10 = udiv i32 %9, 1000, !dbg !4339
  %11 = add i32 %8, %10, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %11, metadata !4329, metadata !DIExpression()), !dbg !4330
  tail call void @delay_time(i32 noundef %11) #20, !dbg !4341
  ret void, !dbg !4342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !4343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4345, metadata !DIExpression()), !dbg !4348
  %2 = tail call i32 @top_mcu_freq_get() #18, !dbg !4349
  %3 = udiv i32 %2, 1000000, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %3, metadata !4347, metadata !DIExpression()), !dbg !4348
  %4 = mul i32 %3, %0, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %4, metadata !4346, metadata !DIExpression()), !dbg !4348
  tail call void @delay_time_for_gpt4(i32 noundef %4) #20, !dbg !4352
  ret void, !dbg !4353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #0 !dbg !4354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4358, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.value(metadata i32 %1, metadata !4359, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.value(metadata i1 %2, metadata !4360, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4362
  call void @llvm.dbg.value(metadata void ()* %3, metadata !4361, metadata !DIExpression()), !dbg !4362
  tail call void @GPT_Stop(i32 noundef %0) #18, !dbg !4363
  %5 = icmp eq i32 %0, 0, !dbg !4364
  br i1 %5, label %6, label %7, !dbg !4366

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !4367
  br label %8, !dbg !4369

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !4370
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #18, !dbg !4372
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #18, !dbg !4373
  ret void, !dbg !4374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !4375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4377, metadata !DIExpression()), !dbg !4378
  tail call void @GPT_Start(i32 noundef %0) #18, !dbg !4379
  ret void, !dbg !4380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #0 !dbg !4381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4383, metadata !DIExpression()), !dbg !4384
  tail call void @GPT_Stop(i32 noundef %0) #18, !dbg !4385
  ret void, !dbg !4386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #0 !dbg !4387 {
  tail call void @CM4_GPT2Init() #18, !dbg !4388
  ret void, !dbg !4389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #0 !dbg !4390 {
  tail call void @CM4_GPT4Init() #18, !dbg !4391
  ret void, !dbg !4392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #5 !dbg !4393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4395, metadata !DIExpression()), !dbg !4396
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4397

2:                                                ; preds = %1
  br label %3, !dbg !4398

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !4396
  br label %5, !dbg !4401

5:                                                ; preds = %3, %1
  ret void, !dbg !4401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #0 !dbg !4402 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4404, metadata !DIExpression()), !dbg !4406
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %1, metadata !4405, metadata !DIExpression()), !dbg !4406
  %2 = lshr i32 %1, 13, !dbg !4408
  %3 = and i32 %2, 7, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %3, metadata !4405, metadata !DIExpression()), !dbg !4406
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %4, metadata !4404, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.value(metadata i32 %4, metadata !4404, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !4406
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !4411
  %6 = load i32, i32* %5, align 4, !dbg !4411
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !4411
  %8 = load i32, i32* %7, align 4, !dbg !4411
  %9 = and i32 %4, -2048, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %9, metadata !4404, metadata !DIExpression()), !dbg !4406
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !4413
  %10 = or i32 %9, %8, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %10, metadata !4404, metadata !DIExpression()), !dbg !4406
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4415
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !4416
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !4417
  tail call void @SystemCoreClockUpdate() #18, !dbg !4418
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !4419
  %13 = udiv i32 %12, 1000, !dbg !4420
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #18, !dbg !4421
  ret void, !dbg !4422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #9 !dbg !4423 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !4424
  ret i32 %1, !dbg !4425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #9 !dbg !4426 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !4427
  ret i32 %1, !dbg !4428
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #10 !dbg !4429 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4433
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4431, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4432, metadata !DIExpression()), !dbg !4435
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4436
  store volatile i32 %3, i32* %1, align 4, !dbg !4437
  %4 = load volatile i32, i32* %1, align 4, !dbg !4438
  %5 = lshr i32 %4, 28, !dbg !4439
  %6 = and i32 %5, 3, !dbg !4440
  store volatile i32 %6, i32* %1, align 4, !dbg !4441
  %7 = load volatile i32, i32* %1, align 4, !dbg !4442
  %8 = icmp eq i32 %7, 0, !dbg !4444
  br i1 %8, label %9, label %22, !dbg !4445

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4446
  store volatile i32 %10, i32* %1, align 4, !dbg !4448
  %11 = load volatile i32, i32* %1, align 4, !dbg !4449
  %12 = and i32 %11, -16777217, !dbg !4450
  store volatile i32 %12, i32* %1, align 4, !dbg !4451
  %13 = load volatile i32, i32* %1, align 4, !dbg !4452
  %14 = or i32 %13, 536870912, !dbg !4453
  store volatile i32 %14, i32* %1, align 4, !dbg !4454
  %15 = load volatile i32, i32* %1, align 4, !dbg !4455
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #20, !dbg !4456
  br label %16, !dbg !4457

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4458
  store volatile i32 %17, i32* %1, align 4, !dbg !4460
  %18 = load volatile i32, i32* %1, align 4, !dbg !4461
  %19 = and i32 %18, 134217728, !dbg !4462
  store volatile i32 %19, i32* %1, align 4, !dbg !4463
  %20 = load volatile i32, i32* %1, align 4, !dbg !4464
  %21 = icmp eq i32 %20, 0, !dbg !4465
  br i1 %21, label %16, label %22, !dbg !4466, !llvm.loop !4467

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4469
  ret void, !dbg !4469
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32(i8* noundef %0) unnamed_addr #8 !dbg !4470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4477, metadata !DIExpression()), !dbg !4478
  %2 = bitcast i8* %0 to i32*, !dbg !4479
  %3 = load volatile i32, i32* %2, align 4, !dbg !4480
  ret i32 %3, !dbg !4481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4482 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4486, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.value(metadata i32 %1, metadata !4487, metadata !DIExpression()), !dbg !4488
  %3 = bitcast i8* %0 to i32*, !dbg !4489
  store volatile i32 %1, i32* %3, align 4, !dbg !4490
  ret void, !dbg !4491
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #10 !dbg !4492 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4496, metadata !DIExpression()), !dbg !4499
  %3 = bitcast i32* %2 to i8*, !dbg !4500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4500
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4497, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4498, metadata !DIExpression()), !dbg !4499
  %4 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4502
  store volatile i32 %4, i32* %2, align 4, !dbg !4503
  %5 = load volatile i32, i32* %2, align 4, !dbg !4504
  %6 = lshr i32 %5, 28, !dbg !4505
  %7 = and i32 %6, 3, !dbg !4506
  store volatile i32 %7, i32* %2, align 4, !dbg !4507
  %8 = load volatile i32, i32* %2, align 4, !dbg !4508
  %9 = icmp eq i32 %8, 3, !dbg !4510
  br i1 %9, label %38, label %10, !dbg !4511

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4512
  store volatile i32 %11, i32* %2, align 4, !dbg !4514
  %12 = load volatile i32, i32* %2, align 4, !dbg !4515
  %13 = and i32 %12, -262145, !dbg !4516
  store volatile i32 %13, i32* %2, align 4, !dbg !4517
  %14 = load volatile i32, i32* %2, align 4, !dbg !4518
  %15 = and i32 %14, -16777217, !dbg !4519
  store volatile i32 %15, i32* %2, align 4, !dbg !4520
  %16 = load volatile i32, i32* %2, align 4, !dbg !4521
  store volatile i32 %16, i32* %2, align 4, !dbg !4522
  %17 = load volatile i32, i32* %2, align 4, !dbg !4523
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #20, !dbg !4524
  %18 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4525
  store volatile i32 %18, i32* %2, align 4, !dbg !4526
  %19 = load volatile i32, i32* %2, align 4, !dbg !4527
  %20 = and i32 %19, -805306369, !dbg !4528
  store volatile i32 %20, i32* %2, align 4, !dbg !4529
  %21 = load volatile i32, i32* %2, align 4, !dbg !4530
  %22 = and i32 %21, -16777217, !dbg !4531
  store volatile i32 %22, i32* %2, align 4, !dbg !4532
  %23 = load volatile i32, i32* %2, align 4, !dbg !4533
  %24 = or i32 %23, 805306368, !dbg !4534
  store volatile i32 %24, i32* %2, align 4, !dbg !4535
  %25 = load volatile i32, i32* %2, align 4, !dbg !4536
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #20, !dbg !4537
  br label %26, !dbg !4538

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4539
  store volatile i32 %27, i32* %2, align 4, !dbg !4541
  %28 = load volatile i32, i32* %2, align 4, !dbg !4542
  %29 = and i32 %28, 67108864, !dbg !4543
  store volatile i32 %29, i32* %2, align 4, !dbg !4544
  %30 = load volatile i32, i32* %2, align 4, !dbg !4545
  %31 = icmp eq i32 %30, 0, !dbg !4546
  br i1 %31, label %26, label %32, !dbg !4547, !llvm.loop !4548

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4550
  store volatile i32 %33, i32* %2, align 4, !dbg !4551
  %34 = load volatile i32, i32* %2, align 4, !dbg !4552
  %35 = and i32 %34, -262145, !dbg !4553
  store volatile i32 %35, i32* %2, align 4, !dbg !4554
  %36 = load volatile i32, i32* %2, align 4, !dbg !4555
  %37 = and i32 %36, -16777217, !dbg !4556
  store volatile i32 %37, i32* %2, align 4, !dbg !4557
  br label %38, !dbg !4558

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4559
  store volatile i32 %39, i32* %2, align 4, !dbg !4560
  %40 = icmp eq i8 %0, 0, !dbg !4561
  %41 = load volatile i32, i32* %2, align 4, !dbg !4563
  br i1 %40, label %44, label %42, !dbg !4564

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !4565
  store volatile i32 %43, i32* %2, align 4, !dbg !4567
  br label %45, !dbg !4568

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !4569
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !4571
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #20, !dbg !4572
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4573
  ret void, !dbg !4573
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #10 !dbg !4574 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4578
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4578
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4576, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4577, metadata !DIExpression()), !dbg !4580
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4581
  store volatile i32 %3, i32* %1, align 4, !dbg !4582
  %4 = load volatile i32, i32* %1, align 4, !dbg !4583
  %5 = and i32 %4, -805306369, !dbg !4584
  store volatile i32 %5, i32* %1, align 4, !dbg !4585
  %6 = load volatile i32, i32* %1, align 4, !dbg !4586
  %7 = and i32 %6, -16777217, !dbg !4587
  store volatile i32 %7, i32* %1, align 4, !dbg !4588
  %8 = load volatile i32, i32* %1, align 4, !dbg !4589
  store volatile i32 %8, i32* %1, align 4, !dbg !4590
  %9 = load volatile i32, i32* %1, align 4, !dbg !4591
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #20, !dbg !4592
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4593
  store volatile i32 %10, i32* %1, align 4, !dbg !4594
  %11 = load volatile i32, i32* %1, align 4, !dbg !4595
  %12 = and i32 %11, -262145, !dbg !4596
  store volatile i32 %12, i32* %1, align 4, !dbg !4597
  %13 = load volatile i32, i32* %1, align 4, !dbg !4598
  %14 = and i32 %13, -16777217, !dbg !4599
  store volatile i32 %14, i32* %1, align 4, !dbg !4600
  %15 = load volatile i32, i32* %1, align 4, !dbg !4601
  store volatile i32 %15, i32* %1, align 4, !dbg !4602
  %16 = load volatile i32, i32* %1, align 4, !dbg !4603
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #20, !dbg !4604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4605
  ret void, !dbg !4605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #0 !dbg !4606 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4610
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4610
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4608, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4609, metadata !DIExpression()), !dbg !4612
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4613
  store volatile i32 %3, i32* %1, align 4, !dbg !4614
  %4 = load volatile i32, i32* %1, align 4, !dbg !4615
  %5 = and i32 %4, -8, !dbg !4616
  store volatile i32 %5, i32* %1, align 4, !dbg !4617
  %6 = load volatile i32, i32* %1, align 4, !dbg !4618
  store volatile i32 %6, i32* %1, align 4, !dbg !4619
  %7 = load volatile i32, i32* %1, align 4, !dbg !4620
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #20, !dbg !4621
  %8 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4622
  store volatile i32 %8, i32* %1, align 4, !dbg !4623
  %9 = load volatile i32, i32* %1, align 4, !dbg !4624
  %10 = and i32 %9, -49153, !dbg !4625
  store volatile i32 %10, i32* %1, align 4, !dbg !4626
  %11 = load volatile i32, i32* %1, align 4, !dbg !4627
  store volatile i32 %11, i32* %1, align 4, !dbg !4628
  %12 = load volatile i32, i32* %1, align 4, !dbg !4629
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #20, !dbg !4630
  br label %13, !dbg !4631

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !4632
  %15 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4633
  %16 = icmp eq i32 %14, %15, !dbg !4634
  br i1 %16, label %17, label %13, !dbg !4631, !llvm.loop !4635

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #20, !dbg !4637
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !4638
  tail call void @SystemCoreClockUpdate() #18, !dbg !4639
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4640
  %20 = udiv i32 %19, 1000, !dbg !4641
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #18, !dbg !4642
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4643
  ret void, !dbg !4643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #0 !dbg !4644 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4648
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4648
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4646, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4647, metadata !DIExpression()), !dbg !4650
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #20, !dbg !4651
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4652
  store volatile i32 %3, i32* %1, align 4, !dbg !4653
  %4 = load volatile i32, i32* %1, align 4, !dbg !4654
  %5 = and i32 %4, -49153, !dbg !4655
  store volatile i32 %5, i32* %1, align 4, !dbg !4656
  %6 = load volatile i32, i32* %1, align 4, !dbg !4657
  %7 = or i32 %6, 16384, !dbg !4658
  store volatile i32 %7, i32* %1, align 4, !dbg !4659
  %8 = load volatile i32, i32* %1, align 4, !dbg !4660
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #20, !dbg !4661
  br label %9, !dbg !4662

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4663
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4664
  %12 = icmp eq i32 %10, %11, !dbg !4665
  br i1 %12, label %13, label %9, !dbg !4662, !llvm.loop !4666

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4668
  store volatile i32 %14, i32* %1, align 4, !dbg !4669
  %15 = load volatile i32, i32* %1, align 4, !dbg !4670
  %16 = and i32 %15, -1009, !dbg !4671
  store volatile i32 %16, i32* %1, align 4, !dbg !4672
  %17 = load volatile i32, i32* %1, align 4, !dbg !4673
  %18 = or i32 %17, 128, !dbg !4674
  store volatile i32 %18, i32* %1, align 4, !dbg !4675
  %19 = load volatile i32, i32* %1, align 4, !dbg !4676
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #20, !dbg !4677
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4678
  store volatile i32 %20, i32* %1, align 4, !dbg !4679
  %21 = load volatile i32, i32* %1, align 4, !dbg !4680
  %22 = and i32 %21, -8, !dbg !4681
  store volatile i32 %22, i32* %1, align 4, !dbg !4682
  %23 = load volatile i32, i32* %1, align 4, !dbg !4683
  %24 = or i32 %23, 4, !dbg !4684
  store volatile i32 %24, i32* %1, align 4, !dbg !4685
  %25 = load volatile i32, i32* %1, align 4, !dbg !4686
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #20, !dbg !4687
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !4688
  tail call void @SystemCoreClockUpdate() #18, !dbg !4689
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4690
  %27 = udiv i32 %26, 1000, !dbg !4691
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #18, !dbg !4692
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4693
  ret void, !dbg !4693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #0 !dbg !4694 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4698
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4698
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4696, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4697, metadata !DIExpression()), !dbg !4700
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #20, !dbg !4701
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4702
  store volatile i32 %3, i32* %1, align 4, !dbg !4703
  %4 = load volatile i32, i32* %1, align 4, !dbg !4704
  %5 = and i32 %4, -49153, !dbg !4705
  store volatile i32 %5, i32* %1, align 4, !dbg !4706
  %6 = load volatile i32, i32* %1, align 4, !dbg !4707
  %7 = or i32 %6, 32768, !dbg !4708
  store volatile i32 %7, i32* %1, align 4, !dbg !4709
  %8 = load volatile i32, i32* %1, align 4, !dbg !4710
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #20, !dbg !4711
  br label %9, !dbg !4712

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4713
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4714
  %12 = icmp eq i32 %10, %11, !dbg !4715
  br i1 %12, label %13, label %9, !dbg !4712, !llvm.loop !4716

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4718
  store volatile i32 %14, i32* %1, align 4, !dbg !4719
  %15 = load volatile i32, i32* %1, align 4, !dbg !4720
  %16 = and i32 %15, -1009, !dbg !4721
  store volatile i32 %16, i32* %1, align 4, !dbg !4722
  %17 = load volatile i32, i32* %1, align 4, !dbg !4723
  %18 = or i32 %17, 32, !dbg !4724
  store volatile i32 %18, i32* %1, align 4, !dbg !4725
  %19 = load volatile i32, i32* %1, align 4, !dbg !4726
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #20, !dbg !4727
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4728
  store volatile i32 %20, i32* %1, align 4, !dbg !4729
  %21 = load volatile i32, i32* %1, align 4, !dbg !4730
  %22 = and i32 %21, -8, !dbg !4731
  store volatile i32 %22, i32* %1, align 4, !dbg !4732
  %23 = load volatile i32, i32* %1, align 4, !dbg !4733
  %24 = or i32 %23, 4, !dbg !4734
  store volatile i32 %24, i32* %1, align 4, !dbg !4735
  %25 = load volatile i32, i32* %1, align 4, !dbg !4736
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #20, !dbg !4737
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !4738
  tail call void @SystemCoreClockUpdate() #18, !dbg !4739
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4740
  %27 = udiv i32 %26, 1000, !dbg !4741
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #18, !dbg !4742
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4743
  ret void, !dbg !4743
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #0 !dbg !4744 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4748
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4748
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4746, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4747, metadata !DIExpression()), !dbg !4750
  tail call void @cmnPLL1ON() #20, !dbg !4751
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4752
  store volatile i32 %3, i32* %1, align 4, !dbg !4753
  %4 = load volatile i32, i32* %1, align 4, !dbg !4754
  %5 = and i32 %4, -49153, !dbg !4755
  store volatile i32 %5, i32* %1, align 4, !dbg !4756
  %6 = load volatile i32, i32* %1, align 4, !dbg !4757
  store volatile i32 %6, i32* %1, align 4, !dbg !4758
  %7 = load volatile i32, i32* %1, align 4, !dbg !4759
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #20, !dbg !4760
  br label %8, !dbg !4761

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !4762
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4763
  %11 = icmp eq i32 %9, %10, !dbg !4764
  br i1 %11, label %12, label %8, !dbg !4761, !llvm.loop !4765

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4767
  store volatile i32 %13, i32* %1, align 4, !dbg !4768
  %14 = load volatile i32, i32* %1, align 4, !dbg !4769
  %15 = and i32 %14, -8, !dbg !4770
  store volatile i32 %15, i32* %1, align 4, !dbg !4771
  %16 = load volatile i32, i32* %1, align 4, !dbg !4772
  %17 = or i32 %16, 2, !dbg !4773
  store volatile i32 %17, i32* %1, align 4, !dbg !4774
  %18 = load volatile i32, i32* %1, align 4, !dbg !4775
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #20, !dbg !4776
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !4777
  tail call void @SystemCoreClockUpdate() #18, !dbg !4778
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4779
  %20 = udiv i32 %19, 1000, !dbg !4780
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #18, !dbg !4781
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4782
  ret void, !dbg !4782
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #10 section ".ramTEXT" !dbg !4783 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4787
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4787
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4785, metadata !DIExpression()), !dbg !4788
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4786, metadata !DIExpression()), !dbg !4789
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #20, !dbg !4790
  store volatile i32 %3, i32* %1, align 4, !dbg !4791
  %4 = load volatile i32, i32* %1, align 4, !dbg !4792
  %5 = and i32 %4, -24577, !dbg !4793
  store volatile i32 %5, i32* %1, align 4, !dbg !4794
  %6 = load volatile i32, i32* %1, align 4, !dbg !4795
  store volatile i32 %6, i32* %1, align 4, !dbg !4796
  %7 = load volatile i32, i32* %1, align 4, !dbg !4797
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #20, !dbg !4798
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4799
  ret void, !dbg !4799
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #10 section ".ramTEXT" !dbg !4800 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4810
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4810
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4802, metadata !DIExpression()), !dbg !4811
  store volatile i32 0, i32* %1, align 4, !dbg !4811
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4803, metadata !DIExpression()), !dbg !4812
  tail call void @cmnPLL1ON() #20, !dbg !4813
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #20, !dbg !4814
  store volatile i32 %3, i32* %1, align 4, !dbg !4815
  %4 = load volatile i32, i32* %1, align 4, !dbg !4816
  %5 = and i32 %4, -24577, !dbg !4817
  store volatile i32 %5, i32* %1, align 4, !dbg !4818
  %6 = load volatile i32, i32* %1, align 4, !dbg !4819
  %7 = or i32 %6, 8192, !dbg !4820
  store volatile i32 %7, i32* %1, align 4, !dbg !4821
  %8 = load volatile i32, i32* %1, align 4, !dbg !4822
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #20, !dbg !4823
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4804, metadata !DIExpression()), !dbg !4824
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4825
  %10 = and i32 %9, -4, !dbg !4825
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4825
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4806, metadata !DIExpression()), !dbg !4826
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4827
  %12 = or i32 %11, 16, !dbg !4827
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4827
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !4808, metadata !DIExpression()), !dbg !4828
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4829
  %14 = and i32 %13, -64, !dbg !4829
  %15 = or i32 %14, 24, !dbg !4829
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4829
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4830
  ret void, !dbg !4830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #8 !dbg !4831 {
  %1 = tail call i32 @getc_nowait() #20, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %1, metadata !4833, metadata !DIExpression()), !dbg !4835
  ret i32 %1, !dbg !4836
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #8 !dbg !4837 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !4840
  %2 = and i32 %1, 1, !dbg !4842
  %3 = icmp eq i32 %2, 0, !dbg !4842
  br i1 %3, label %7, label %4, !dbg !4843

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !4844
  %6 = and i32 %5, 255, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %5, metadata !4839, metadata !DIExpression()), !dbg !4847
  br label %7, !dbg !4848

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !4849
  ret i32 %8, !dbg !4850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !4851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4856, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.value(metadata i8 %1, metadata !4857, metadata !DIExpression()), !dbg !4859
  %3 = icmp eq i32 %0, 0, !dbg !4860
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %4, metadata !4858, metadata !DIExpression()), !dbg !4859
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !4861

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !4862
  %9 = and i32 %8, 32, !dbg !4863
  %10 = icmp eq i32 %9, 0, !dbg !4864
  br i1 %10, label %7, label %11, !dbg !4861, !llvm.loop !4865

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !4867
  %13 = inttoptr i32 %4 to i32*, !dbg !4868
  store volatile i32 %12, i32* %13, align 65536, !dbg !4869
  ret void, !dbg !4870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #5 !dbg !4871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4875, metadata !DIExpression()), !dbg !4878
  %2 = icmp eq i32 %0, 0, !dbg !4879
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %3, metadata !4876, metadata !DIExpression()), !dbg !4878
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !4880

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !4881
  %8 = and i32 %7, 1, !dbg !4882
  %9 = icmp eq i32 %8, 0, !dbg !4883
  br i1 %9, label %6, label %10, !dbg !4880, !llvm.loop !4884

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !4886
  %12 = load volatile i32, i32* %11, align 65536, !dbg !4886
  %13 = trunc i32 %12 to i8, !dbg !4886
  call void @llvm.dbg.value(metadata i8 %13, metadata !4877, metadata !DIExpression()), !dbg !4878
  ret i8 %13, !dbg !4887
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #8 !dbg !4888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4892, metadata !DIExpression()), !dbg !4895
  %2 = icmp eq i32 %0, 0, !dbg !4896
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %3, metadata !4893, metadata !DIExpression()), !dbg !4895
  %4 = or i32 %3, 20, !dbg !4897
  %5 = inttoptr i32 %4 to i32*, !dbg !4897
  %6 = load volatile i32, i32* %5, align 4, !dbg !4897
  %7 = and i32 %6, 1, !dbg !4899
  %8 = icmp eq i32 %7, 0, !dbg !4899
  br i1 %8, label %13, label %9, !dbg !4900

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !4901
  %11 = load volatile i32, i32* %10, align 65536, !dbg !4901
  %12 = and i32 %11, 255, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %11, metadata !4894, metadata !DIExpression()), !dbg !4895
  br label %13, !dbg !4904

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !4905
  ret i32 %14, !dbg !4906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #0 !dbg !4907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4911, metadata !DIExpression()), !dbg !4912
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #20, !dbg !4913
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4914

2:                                                ; preds = %1
  br label %3, !dbg !4915

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !4919
  %6 = or i32 %5, 1, !dbg !4919
  store volatile i32 %6, i32* %4, align 4, !dbg !4919
  br label %7, !dbg !4920

7:                                                ; preds = %3, %1
  ret void, !dbg !4920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 !dbg !4921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4925, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i32 %1, metadata !4926, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i16 %2, metadata !4927, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i16 %3, metadata !4928, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i16 %4, metadata !4929, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !4931, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !4938, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !4940, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()), !dbg !4942
  %6 = tail call i32 @top_xtal_freq_get() #18, !dbg !4945
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !4946
  %7 = icmp eq i32 %0, 1, !dbg !4947
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %8, metadata !4931, metadata !DIExpression()), !dbg !4942
  %9 = or i32 %8, 36, !dbg !4948
  %10 = inttoptr i32 %9 to i32*, !dbg !4948
  store volatile i32 3, i32* %10, align 4, !dbg !4949
  %11 = or i32 %8, 12, !dbg !4950
  %12 = inttoptr i32 %11 to i32*, !dbg !4950
  %13 = load volatile i32, i32* %12, align 4, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %13, metadata !4933, metadata !DIExpression()), !dbg !4942
  %14 = or i32 %13, 128, !dbg !4951
  store volatile i32 %14, i32* %12, align 4, !dbg !4952
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !4953
  %16 = udiv i32 %15, %1, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %16, metadata !4932, metadata !DIExpression()), !dbg !4942
  %17 = lshr i32 %16, 8, !dbg !4955
  %18 = add nuw nsw i32 %17, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %18, metadata !4934, metadata !DIExpression()), !dbg !4942
  %19 = udiv i32 %16, %18, !dbg !4957
  %20 = add i32 %19, -1, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %20, metadata !4935, metadata !DIExpression()), !dbg !4942
  %21 = icmp eq i32 %20, 3, !dbg !4960
  %22 = lshr i32 %20, 1, !dbg !4962
  %23 = add nsw i32 %22, -1, !dbg !4962
  %24 = select i1 %21, i32 0, i32 %23, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %24, metadata !4936, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i32 undef, metadata !4941, metadata !DIExpression()), !dbg !4942
  %25 = mul i32 %15, 10, !dbg !4963
  %26 = udiv i32 %25, %1, !dbg !4964
  %27 = udiv i32 %26, %16, !dbg !4965
  %28 = mul i32 %19, -10, !dbg !4966
  %29 = add i32 %27, %28, !dbg !4967
  %30 = urem i32 %29, 10, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %30, metadata !4937, metadata !DIExpression()), !dbg !4942
  %31 = and i32 %18, 255, !dbg !4969
  %32 = inttoptr i32 %8 to i32*, !dbg !4970
  store volatile i32 %31, i32* %32, align 65536, !dbg !4971
  %33 = lshr i32 %18, 8, !dbg !4972
  %34 = and i32 %33, 255, !dbg !4973
  %35 = or i32 %8, 4, !dbg !4974
  %36 = inttoptr i32 %35 to i32*, !dbg !4974
  store volatile i32 %34, i32* %36, align 4, !dbg !4975
  %37 = or i32 %8, 40, !dbg !4976
  %38 = inttoptr i32 %37 to i32*, !dbg !4976
  store volatile i32 %20, i32* %38, align 8, !dbg !4977
  %39 = or i32 %8, 44, !dbg !4978
  %40 = inttoptr i32 %39 to i32*, !dbg !4978
  store volatile i32 %24, i32* %40, align 4, !dbg !4979
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !4980
  %42 = load i16, i16* %41, align 2, !dbg !4980
  %43 = zext i16 %42 to i32, !dbg !4980
  %44 = or i32 %8, 88, !dbg !4981
  %45 = inttoptr i32 %44 to i32*, !dbg !4981
  store volatile i32 %43, i32* %45, align 8, !dbg !4982
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !4983
  %47 = load i16, i16* %46, align 2, !dbg !4983
  %48 = zext i16 %47 to i32, !dbg !4983
  %49 = or i32 %8, 84, !dbg !4984
  %50 = inttoptr i32 %49 to i32*, !dbg !4984
  store volatile i32 %48, i32* %50, align 4, !dbg !4985
  store volatile i32 %13, i32* %12, align 4, !dbg !4986
  %51 = or i32 %8, 8, !dbg !4987
  %52 = inttoptr i32 %51 to i32*, !dbg !4987
  store volatile i32 71, i32* %52, align 8, !dbg !4988
  %53 = inttoptr i32 %11 to i16*, !dbg !4989
  %54 = load volatile i16, i16* %53, align 4, !dbg !4989
  call void @llvm.dbg.value(metadata i16 %54, metadata !4930, metadata !DIExpression()), !dbg !4942
  %55 = and i16 %54, -64, !dbg !4990
  call void @llvm.dbg.value(metadata i16 %54, metadata !4930, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !4942
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !4930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4942
  %56 = and i16 %2, -61, !dbg !4991
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !4930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4942
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !4930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4942
  %57 = and i16 %4, -57, !dbg !4992
  call void @llvm.dbg.value(metadata i16 undef, metadata !4930, metadata !DIExpression()), !dbg !4942
  %58 = or i16 %56, %3, !dbg !4991
  %59 = or i16 %58, %57, !dbg !4992
  %60 = or i16 %59, %55, !dbg !4993
  call void @llvm.dbg.value(metadata i16 %60, metadata !4930, metadata !DIExpression()), !dbg !4942
  store volatile i16 %60, i16* %53, align 4, !dbg !4994
  ret void, !dbg !4995
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #8 !dbg !4996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5000, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i32 %1, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i32* %2, metadata !5002, metadata !DIExpression()), !dbg !5003
  %4 = icmp eq i32 %0, 0, !dbg !5004
  %5 = icmp eq i32 %1, 0, !dbg !5006
  br i1 %4, label %6, label %16, !dbg !5007

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !5008

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !5010
  %9 = zext i16 %8 to i32, !dbg !5010
  br label %26, !dbg !5013

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !5014
  %12 = zext i16 %11 to i32, !dbg !5014
  store i32 %12, i32* %2, align 4, !dbg !5016
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !5017
  %14 = zext i16 %13 to i32, !dbg !5017
  %15 = sub nsw i32 %12, %14, !dbg !5018
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !5019

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !5021
  %19 = zext i16 %18 to i32, !dbg !5021
  br label %26, !dbg !5024

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !5025
  %22 = zext i16 %21 to i32, !dbg !5025
  store i32 %22, i32* %2, align 4, !dbg !5027
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !5028
  %24 = zext i16 %23 to i32, !dbg !5028
  %25 = sub nsw i32 %22, %24, !dbg !5029
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !5006
  ret void, !dbg !5030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !5031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5035, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8* %1, metadata !5036, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 %2, metadata !5037, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 0, metadata !5038, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 0, metadata !5038, metadata !DIExpression()), !dbg !5039
  %4 = icmp eq i32 %2, 0, !dbg !5040
  br i1 %4, label %15, label %5, !dbg !5043

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5038, metadata !DIExpression()), !dbg !5039
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !5044

7:                                                ; preds = %5
  br label %8, !dbg !5046

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !5050
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5050
  store i8 %10, i8* %11, align 1, !dbg !5050
  br label %12, !dbg !5051

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %13, metadata !5038, metadata !DIExpression()), !dbg !5039
  %14 = icmp eq i32 %13, %2, !dbg !5040
  br i1 %14, label %15, label %5, !dbg !5043, !llvm.loop !5052

15:                                               ; preds = %12, %3
  ret void, !dbg !5054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !5055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5059, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %1, metadata !5060, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 %2, metadata !5061, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 0, metadata !5062, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 0, metadata !5062, metadata !DIExpression()), !dbg !5063
  %4 = icmp eq i32 %2, 0, !dbg !5064
  br i1 %4, label %16, label %5, !dbg !5067

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5062, metadata !DIExpression()), !dbg !5063
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !5068

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5070
  %9 = load i8, i8* %8, align 1, !dbg !5070
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !5073
  br label %13, !dbg !5074

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5075
  %12 = load i8, i8* %11, align 1, !dbg !5075
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !5078
  br label %13, !dbg !5079

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !5080
  call void @llvm.dbg.value(metadata i32 %14, metadata !5062, metadata !DIExpression()), !dbg !5063
  %15 = icmp eq i32 %14, %2, !dbg !5064
  br i1 %15, label %16, label %5, !dbg !5067, !llvm.loop !5081

16:                                               ; preds = %13, %3
  ret void, !dbg !5083
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !5084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5088, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %1, metadata !5089, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %2, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %3, metadata !5091, metadata !DIExpression()), !dbg !5092
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !5093

5:                                                ; preds = %4
  br label %6, !dbg !5094

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !5098
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #18, !dbg !5098
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #18, !dbg !5098
  br label %9, !dbg !5099

9:                                                ; preds = %6, %4
  ret void, !dbg !5099
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_SetAdrs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Flush(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #0 !dbg !5100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5104, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %1, metadata !5105, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 %2, metadata !5106, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 %3, metadata !5107, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 %4, metadata !5108, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 %5, metadata !5109, metadata !DIExpression()), !dbg !5110
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !5111

7:                                                ; preds = %6
  br label %8, !dbg !5112

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !5116
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #18, !dbg !5116
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #18, !dbg !5116
  br label %11, !dbg !5117

11:                                               ; preds = %8, %6
  ret void, !dbg !5117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !5118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5122, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata void ()* %1, metadata !5123, metadata !DIExpression()), !dbg !5124
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !5125

3:                                                ; preds = %2
  br label %4, !dbg !5126

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #18, !dbg !5130
  br label %6, !dbg !5131

6:                                                ; preds = %4, %2
  ret void, !dbg !5131
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !5132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5134, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata void ()* %1, metadata !5135, metadata !DIExpression()), !dbg !5136
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !5137

3:                                                ; preds = %2
  br label %4, !dbg !5138

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #18, !dbg !5142
  br label %6, !dbg !5143

6:                                                ; preds = %4, %2
  ret void, !dbg !5143
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !5144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5146, metadata !DIExpression()), !dbg !5150
  %2 = icmp eq i32 %0, 0, !dbg !5151
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %3, metadata !5147, metadata !DIExpression()), !dbg !5150
  %4 = or i32 %3, 12, !dbg !5152
  %5 = inttoptr i32 %4 to i32*, !dbg !5152
  %6 = load volatile i32, i32* %5, align 4, !dbg !5152
  call void @llvm.dbg.value(metadata i32 %6, metadata !5149, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5150
  store volatile i32 191, i32* %5, align 4, !dbg !5153
  %7 = or i32 %3, 8, !dbg !5154
  %8 = inttoptr i32 %7 to i32*, !dbg !5154
  %9 = load volatile i32, i32* %8, align 8, !dbg !5154
  call void @llvm.dbg.value(metadata i32 %9, metadata !5148, metadata !DIExpression()), !dbg !5150
  %10 = and i32 %9, 65327, !dbg !5155
  %11 = or i32 %10, 208, !dbg !5155
  call void @llvm.dbg.value(metadata i32 %9, metadata !5148, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !5150
  store volatile i32 %11, i32* %8, align 8, !dbg !5156
  %12 = or i32 %3, 68, !dbg !5157
  %13 = inttoptr i32 %12 to i32*, !dbg !5157
  store volatile i32 0, i32* %13, align 4, !dbg !5158
  store volatile i32 0, i32* %5, align 4, !dbg !5159
  %14 = or i32 %3, 16, !dbg !5160
  %15 = inttoptr i32 %14 to i32*, !dbg !5160
  store volatile i32 2, i32* %15, align 16, !dbg !5161
  %16 = and i32 %6, 65535, !dbg !5162
  store volatile i32 %16, i32* %5, align 4, !dbg !5163
  ret void, !dbg !5164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #5 !dbg !5165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5169, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8 %1, metadata !5170, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8 %2, metadata !5171, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8 %3, metadata !5172, metadata !DIExpression()), !dbg !5176
  %5 = icmp eq i32 %0, 0, !dbg !5177
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %6, metadata !5173, metadata !DIExpression()), !dbg !5176
  %7 = or i32 %6, 12, !dbg !5178
  %8 = inttoptr i32 %7 to i32*, !dbg !5178
  %9 = load volatile i32, i32* %8, align 4, !dbg !5178
  call void @llvm.dbg.value(metadata i32 %9, metadata !5175, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5176
  store volatile i32 191, i32* %8, align 4, !dbg !5179
  %10 = zext i8 %1 to i32, !dbg !5180
  %11 = or i32 %6, 16, !dbg !5181
  %12 = inttoptr i32 %11 to i32*, !dbg !5181
  store volatile i32 %10, i32* %12, align 16, !dbg !5182
  %13 = or i32 %6, 20, !dbg !5183
  %14 = inttoptr i32 %13 to i32*, !dbg !5183
  store volatile i32 %10, i32* %14, align 4, !dbg !5184
  %15 = zext i8 %2 to i32, !dbg !5185
  %16 = or i32 %6, 24, !dbg !5186
  %17 = inttoptr i32 %16 to i32*, !dbg !5186
  store volatile i32 %15, i32* %17, align 8, !dbg !5187
  %18 = or i32 %6, 28, !dbg !5188
  %19 = inttoptr i32 %18 to i32*, !dbg !5188
  store volatile i32 %15, i32* %19, align 4, !dbg !5189
  %20 = or i32 %6, 8, !dbg !5190
  %21 = inttoptr i32 %20 to i32*, !dbg !5190
  %22 = load volatile i32, i32* %21, align 8, !dbg !5190
  call void @llvm.dbg.value(metadata i32 %22, metadata !5174, metadata !DIExpression()), !dbg !5176
  %23 = and i32 %22, 65525, !dbg !5191
  %24 = or i32 %23, 10, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %22, metadata !5174, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !5176
  store volatile i32 %24, i32* %21, align 8, !dbg !5192
  %25 = and i32 %9, 65535, !dbg !5193
  store volatile i32 %25, i32* %8, align 4, !dbg !5194
  %26 = zext i8 %3 to i32, !dbg !5195
  %27 = or i32 %6, 64, !dbg !5196
  %28 = inttoptr i32 %27 to i32*, !dbg !5196
  store volatile i32 %26, i32* %28, align 64, !dbg !5197
  %29 = or i32 %6, 68, !dbg !5198
  %30 = inttoptr i32 %29 to i32*, !dbg !5198
  store volatile i32 1, i32* %30, align 4, !dbg !5199
  ret void, !dbg !5200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !5201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5203, metadata !DIExpression()), !dbg !5206
  %2 = icmp eq i32 %0, 0, !dbg !5207
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %3, metadata !5204, metadata !DIExpression()), !dbg !5206
  %4 = or i32 %3, 12, !dbg !5208
  %5 = inttoptr i32 %4 to i32*, !dbg !5208
  %6 = load volatile i32, i32* %5, align 4, !dbg !5208
  call void @llvm.dbg.value(metadata i32 %6, metadata !5205, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5206
  store volatile i32 191, i32* %5, align 4, !dbg !5209
  %7 = or i32 %3, 8, !dbg !5210
  %8 = inttoptr i32 %7 to i32*, !dbg !5210
  store volatile i32 0, i32* %8, align 8, !dbg !5211
  store volatile i32 0, i32* %5, align 4, !dbg !5212
  %9 = and i32 %6, 65535, !dbg !5213
  store volatile i32 %9, i32* %5, align 4, !dbg !5214
  ret void, !dbg !5215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(i32 noundef %0) local_unnamed_addr #5 !dbg !5216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5218, metadata !DIExpression()), !dbg !5220
  %2 = icmp eq i32 %0, 0, !dbg !5221
  call void @llvm.dbg.value(metadata i32 undef, metadata !5219, metadata !DIExpression()), !dbg !5220
  %3 = select i1 %2, i32 -2096955320, i32 -2096889784, !dbg !5222
  %4 = inttoptr i32 %3 to i32*, !dbg !5222
  store volatile i32 1, i32* %4, align 8, !dbg !5223
  ret void, !dbg !5224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !5225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5227, metadata !DIExpression()), !dbg !5231
  %2 = icmp eq i32 %0, 0, !dbg !5232
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5232
  call void @llvm.dbg.value(metadata i32 %3, metadata !5228, metadata !DIExpression()), !dbg !5231
  %4 = or i32 %3, 12, !dbg !5233
  %5 = inttoptr i32 %4 to i32*, !dbg !5233
  %6 = load volatile i32, i32* %5, align 4, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %6, metadata !5230, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5231
  store volatile i32 0, i32* %5, align 4, !dbg !5234
  %7 = or i32 %3, 4, !dbg !5235
  %8 = inttoptr i32 %7 to i32*, !dbg !5235
  %9 = load volatile i32, i32* %8, align 4, !dbg !5235
  call void @llvm.dbg.value(metadata i32 %9, metadata !5229, metadata !DIExpression()), !dbg !5231
  %10 = and i32 %9, 65533, !dbg !5236
  %11 = or i32 %10, 2, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %9, metadata !5229, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !5231
  store volatile i32 %11, i32* %8, align 4, !dbg !5237
  %12 = and i32 %6, 65535, !dbg !5238
  store volatile i32 %12, i32* %5, align 4, !dbg !5239
  %13 = or i32 %3, 72, !dbg !5240
  %14 = inttoptr i32 %13 to i32*, !dbg !5240
  store volatile i32 1, i32* %14, align 8, !dbg !5241
  ret void, !dbg !5242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_mask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !5243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5245, metadata !DIExpression()), !dbg !5249
  %2 = icmp eq i32 %0, 0, !dbg !5250
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %3, metadata !5246, metadata !DIExpression()), !dbg !5249
  %4 = or i32 %3, 12, !dbg !5251
  %5 = inttoptr i32 %4 to i32*, !dbg !5251
  %6 = load volatile i32, i32* %5, align 4, !dbg !5251
  call void @llvm.dbg.value(metadata i32 %6, metadata !5248, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5249
  store volatile i32 0, i32* %5, align 4, !dbg !5252
  %7 = or i32 %3, 4, !dbg !5253
  %8 = inttoptr i32 %7 to i32*, !dbg !5253
  %9 = load volatile i32, i32* %8, align 4, !dbg !5253
  call void @llvm.dbg.value(metadata i32 %9, metadata !5247, metadata !DIExpression()), !dbg !5249
  %10 = and i32 %9, 65533, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %10, metadata !5247, metadata !DIExpression()), !dbg !5249
  store volatile i32 %10, i32* %8, align 4, !dbg !5255
  %11 = and i32 %6, 65535, !dbg !5256
  store volatile i32 %11, i32* %5, align 4, !dbg !5257
  %12 = or i32 %3, 72, !dbg !5258
  %13 = inttoptr i32 %12 to i32*, !dbg !5258
  store volatile i32 0, i32* %13, align 8, !dbg !5259
  ret void, !dbg !5260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !5261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5263, metadata !DIExpression()), !dbg !5267
  %2 = icmp eq i32 %0, 0, !dbg !5268
  %3 = select i1 %2, i32* inttoptr (i32 -2096955384 to i32*), i32* inttoptr (i32 -2096889848 to i32*)
  call void @llvm.dbg.value(metadata i32 undef, metadata !5264, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i32 undef, metadata !5265, metadata !DIExpression()), !dbg !5267
  %4 = load volatile i32, i32* %3, align 8, !dbg !5270
  call void @llvm.dbg.value(metadata i32 %4, metadata !5266, metadata !DIExpression()), !dbg !5267
  %5 = and i32 %4, 63, !dbg !5271
  %6 = icmp eq i32 %5, 2, !dbg !5272
  br i1 %6, label %7, label %10, !dbg !5272

7:                                                ; preds = %1
  %8 = xor i1 %2, true
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !5264, metadata !DIExpression()), !dbg !5267
  tail call void @uart_send_handler(i32 noundef %9) #18, !dbg !5273
  br label %10, !dbg !5275

10:                                               ; preds = %1, %7
  ret void, !dbg !5276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #5 !dbg !5277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5279, metadata !DIExpression()), !dbg !5281
  %2 = icmp eq i32 %0, 0, !dbg !5282
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5282
  call void @llvm.dbg.value(metadata i32 %3, metadata !5280, metadata !DIExpression()), !dbg !5281
  %4 = or i32 %3, 12, !dbg !5283
  %5 = inttoptr i32 %4 to i32*, !dbg !5283
  store volatile i32 191, i32* %5, align 4, !dbg !5284
  %6 = or i32 %3, 8, !dbg !5285
  %7 = inttoptr i32 %6 to i32*, !dbg !5285
  store volatile i32 16, i32* %7, align 8, !dbg !5286
  %8 = or i32 %3, 16, !dbg !5287
  %9 = inttoptr i32 %8 to i32*, !dbg !5287
  store volatile i32 0, i32* %9, align 16, !dbg !5288
  %10 = or i32 %3, 24, !dbg !5289
  %11 = inttoptr i32 %10 to i32*, !dbg !5289
  store volatile i32 0, i32* %11, align 8, !dbg !5290
  store volatile i32 128, i32* %5, align 4, !dbg !5291
  %12 = inttoptr i32 %3 to i32*, !dbg !5292
  store volatile i32 0, i32* %12, align 65536, !dbg !5293
  %13 = or i32 %3, 4, !dbg !5294
  %14 = inttoptr i32 %13 to i32*, !dbg !5294
  store volatile i32 0, i32* %14, align 4, !dbg !5295
  store volatile i32 0, i32* %5, align 4, !dbg !5296
  store volatile i32 0, i32* %14, align 4, !dbg !5297
  store volatile i32 0, i32* %7, align 8, !dbg !5298
  store volatile i32 191, i32* %5, align 4, !dbg !5299
  store volatile i32 0, i32* %7, align 8, !dbg !5300
  store volatile i32 0, i32* %5, align 4, !dbg !5301
  store volatile i32 0, i32* %9, align 16, !dbg !5302
  %15 = or i32 %3, 28, !dbg !5303
  %16 = inttoptr i32 %15 to i32*, !dbg !5303
  store volatile i32 0, i32* %16, align 4, !dbg !5304
  %17 = or i32 %3, 36, !dbg !5305
  %18 = inttoptr i32 %17 to i32*, !dbg !5305
  store volatile i32 0, i32* %18, align 4, !dbg !5306
  %19 = or i32 %3, 40, !dbg !5307
  %20 = inttoptr i32 %19 to i32*, !dbg !5307
  store volatile i32 0, i32* %20, align 8, !dbg !5308
  %21 = or i32 %3, 44, !dbg !5309
  %22 = inttoptr i32 %21 to i32*, !dbg !5309
  store volatile i32 0, i32* %22, align 4, !dbg !5310
  %23 = or i32 %3, 52, !dbg !5311
  %24 = inttoptr i32 %23 to i32*, !dbg !5311
  store volatile i32 0, i32* %24, align 4, !dbg !5312
  %25 = or i32 %3, 60, !dbg !5313
  %26 = inttoptr i32 %25 to i32*, !dbg !5313
  store volatile i32 0, i32* %26, align 4, !dbg !5314
  %27 = or i32 %3, 64, !dbg !5315
  %28 = inttoptr i32 %27 to i32*, !dbg !5315
  store volatile i32 0, i32* %28, align 64, !dbg !5316
  %29 = or i32 %3, 68, !dbg !5317
  %30 = inttoptr i32 %29 to i32*, !dbg !5317
  store volatile i32 0, i32* %30, align 4, !dbg !5318
  %31 = or i32 %3, 72, !dbg !5319
  %32 = inttoptr i32 %31 to i32*, !dbg !5319
  store volatile i32 0, i32* %32, align 8, !dbg !5320
  %33 = or i32 %3, 76, !dbg !5321
  %34 = inttoptr i32 %33 to i32*, !dbg !5321
  store volatile i32 0, i32* %34, align 4, !dbg !5322
  %35 = or i32 %3, 80, !dbg !5323
  %36 = inttoptr i32 %35 to i32*, !dbg !5323
  store volatile i32 0, i32* %36, align 16, !dbg !5324
  %37 = or i32 %3, 84, !dbg !5325
  %38 = inttoptr i32 %37 to i32*, !dbg !5325
  store volatile i32 0, i32* %38, align 4, !dbg !5326
  %39 = or i32 %3, 88, !dbg !5327
  %40 = inttoptr i32 %39 to i32*, !dbg !5327
  store volatile i32 0, i32* %40, align 8, !dbg !5328
  %41 = or i32 %3, 96, !dbg !5329
  %42 = inttoptr i32 %41 to i32*, !dbg !5329
  store volatile i32 0, i32* %42, align 32, !dbg !5330
  ret void, !dbg !5331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #5 !dbg !5332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5334, metadata !DIExpression()), !dbg !5336
  %2 = icmp eq i32 %0, 0, !dbg !5337
  call void @llvm.dbg.value(metadata i32 undef, metadata !5335, metadata !DIExpression()), !dbg !5336
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !5338

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !5339
  %7 = and i32 %6, 64, !dbg !5340
  %8 = icmp eq i32 %7, 0, !dbg !5341
  br i1 %8, label %5, label %9, !dbg !5338, !llvm.loop !5342

9:                                                ; preds = %5
  ret void, !dbg !5344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5345 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5349, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 %1, metadata !5350, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8* %2, metadata !5351, metadata !DIExpression()), !dbg !5361
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5362
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5352, metadata !DIExpression()), !dbg !5363
  call void @llvm.va_start(i8* nonnull %5), !dbg !5364
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5365
  %7 = load i32, i32* %6, align 4, !dbg !5365
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5365
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #18, !dbg !5365
  call void @llvm.va_end(i8* nonnull %5), !dbg !5366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5367
  ret void, !dbg !5367
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5368 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5370, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i32 %1, metadata !5371, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i8* %2, metadata !5372, metadata !DIExpression()), !dbg !5374
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5375
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5375
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5373, metadata !DIExpression()), !dbg !5376
  call void @llvm.va_start(i8* nonnull %5), !dbg !5377
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5378
  %7 = load i32, i32* %6, align 4, !dbg !5378
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5378
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #18, !dbg !5378
  call void @llvm.va_end(i8* nonnull %5), !dbg !5379
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5380
  ret void, !dbg !5380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5381 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5383, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata i32 %1, metadata !5384, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata i8* %2, metadata !5385, metadata !DIExpression()), !dbg !5387
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5388
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5388
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5386, metadata !DIExpression()), !dbg !5389
  call void @llvm.va_start(i8* nonnull %5), !dbg !5390
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5391
  %7 = load i32, i32* %6, align 4, !dbg !5391
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5391
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 2, i8* noundef %2, [1 x i32] %8) #18, !dbg !5391
  call void @llvm.va_end(i8* nonnull %5), !dbg !5392
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5393
  ret void, !dbg !5393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5394 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5396, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i32 %1, metadata !5397, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %2, metadata !5398, metadata !DIExpression()), !dbg !5400
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5401
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5401
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5399, metadata !DIExpression()), !dbg !5402
  call void @llvm.va_start(i8* nonnull %5), !dbg !5403
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5404
  %7 = load i32, i32* %6, align 4, !dbg !5404
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5404
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %2, [1 x i32] %8) #18, !dbg !5404
  call void @llvm.va_end(i8* nonnull %5), !dbg !5405
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5406
  ret void, !dbg !5406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_dump_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3, i32 noundef %4, ...) local_unnamed_addr #0 !dbg !5407 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5411, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 %1, metadata !5412, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8* %2, metadata !5413, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8* %3, metadata !5414, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 %4, metadata !5415, metadata !DIExpression()), !dbg !5417
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !5418
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !5418
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !5416, metadata !DIExpression()), !dbg !5419
  call void @llvm.va_start(i8* nonnull %7), !dbg !5420
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !5421
  %9 = load i32, i32* %8, align 4, !dbg !5421
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !5421
  call void @vdump_module_buffer(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %3, i32 noundef %4, i8* noundef %2, [1 x i32] %10) #18, !dbg !5421
  call void @llvm.va_end(i8* nonnull %7), !dbg !5422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !5423
  ret void, !dbg !5423
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !5424 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5431
  call void @llvm.dbg.value(metadata i32 %1, metadata !5430, metadata !DIExpression()), !dbg !5432
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !5433, !range !2479
  %3 = icmp eq i8 %2, 0, !dbg !5433
  br i1 %3, label %5, label %4, !dbg !5435

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5436
  br label %15, !dbg !5438

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !5439
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5441
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !5442
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5443
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5444
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5445
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5446
  call void @llvm.dbg.value(metadata i32 0, metadata !5429, metadata !DIExpression()), !dbg !5432
  br label %7, !dbg !5447

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5429, metadata !DIExpression()), !dbg !5432
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !5449
  store volatile i32 0, i32* %9, align 4, !dbg !5452
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !5453
  store volatile i32 0, i32* %10, align 4, !dbg !5454
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !5455
  store i32 0, i32* %11, align 4, !dbg !5456
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !5457
  store i32 0, i32* %12, align 4, !dbg !5458
  %13 = add nuw nsw i32 %8, 1, !dbg !5459
  call void @llvm.dbg.value(metadata i32 %13, metadata !5429, metadata !DIExpression()), !dbg !5432
  %14 = icmp eq i32 %13, 16, !dbg !5460
  br i1 %14, label %15, label %7, !dbg !5447, !llvm.loop !5461

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !5432
  ret i32 %16, !dbg !5463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5464 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5467
  call void @llvm.dbg.value(metadata i32 %1, metadata !5466, metadata !DIExpression()), !dbg !5468
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5469
  %3 = and i32 %2, -31, !dbg !5469
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5469
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5470
  %5 = or i32 %4, 19, !dbg !5470
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5470
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5471
  %7 = and i32 %6, -31, !dbg !5471
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5471
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5472
  %9 = or i32 %8, 3, !dbg !5472
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5472
  tail call void asm sideeffect "isb", ""() #17, !dbg !5473, !srcloc !5477
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5478
  ret i32 0, !dbg !5479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !5480 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !5483
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5484
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5485
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5486
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5487
  call void @llvm.dbg.value(metadata i32 0, metadata !5482, metadata !DIExpression()), !dbg !5488
  br label %2, !dbg !5489

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5482, metadata !DIExpression()), !dbg !5488
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !5491
  store volatile i32 0, i32* %4, align 4, !dbg !5494
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !5495
  store volatile i32 0, i32* %5, align 4, !dbg !5496
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !5497
  store i32 0, i32* %6, align 4, !dbg !5498
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !5499
  store i32 0, i32* %7, align 4, !dbg !5500
  %8 = add nuw nsw i32 %3, 1, !dbg !5501
  call void @llvm.dbg.value(metadata i32 %8, metadata !5482, metadata !DIExpression()), !dbg !5488
  %9 = icmp eq i32 %8, 16, !dbg !5502
  br i1 %9, label %10, label %2, !dbg !5489, !llvm.loop !5503

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !5505
  ret i32 0, !dbg !5506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #5 !dbg !5507 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5508
  %2 = and i32 %1, 768, !dbg !5510
  %3 = icmp eq i32 %2, 0, !dbg !5510
  br i1 %3, label %8, label %4, !dbg !5511

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5512
  %6 = or i32 %5, 13, !dbg !5512
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5512
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5513
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5514
  br label %8, !dbg !5515

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !5516
  ret i32 %9, !dbg !5517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !5518 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %1, metadata !5520, metadata !DIExpression()), !dbg !5522
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5523
  %3 = and i32 %2, 1, !dbg !5525
  %4 = icmp eq i32 %3, 0, !dbg !5525
  br i1 %4, label %7, label %5, !dbg !5526

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !5527
  br label %7, !dbg !5529

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5530
  %9 = and i32 %8, -2, !dbg !5530
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5530
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5531
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5532
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5533
  ret i32 0, !dbg !5534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #5 !dbg !5535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5539, metadata !DIExpression()), !dbg !5540
  %2 = icmp ugt i32 %0, 15, !dbg !5541
  br i1 %2, label %13, label %3, !dbg !5543

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5544
  %5 = load volatile i32, i32* %4, align 4, !dbg !5544
  %6 = and i32 %5, 256, !dbg !5546
  %7 = icmp eq i32 %6, 0, !dbg !5546
  br i1 %7, label %13, label %8, !dbg !5547

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !5548
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5550
  %11 = or i32 %10, %9, !dbg !5550
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5550
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5551
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !5552
  br label %13, !dbg !5553

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !5540
  ret i32 %14, !dbg !5554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #5 !dbg !5555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5557, metadata !DIExpression()), !dbg !5558
  %2 = icmp ugt i32 %0, 15, !dbg !5559
  br i1 %2, label %11, label %3, !dbg !5561

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !5562
  %5 = xor i32 %4, -1, !dbg !5563
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5564
  %7 = and i32 %6, %5, !dbg !5564
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5564
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5565
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !5566
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5567
  store i32 0, i32* %9, align 4, !dbg !5568
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5569
  store i32 0, i32* %10, align 4, !dbg !5570
  br label %11, !dbg !5571

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !5558
  ret i32 %12, !dbg !5572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #5 !dbg !5573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5578, metadata !DIExpression()), !dbg !5579
  %2 = icmp ugt i32 %0, 3, !dbg !5580
  br i1 %2, label %13, label %3, !dbg !5582

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5583
  %5 = and i32 %4, -769, !dbg !5583
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5583
  %6 = shl nuw nsw i32 %0, 8, !dbg !5584
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5585
  %8 = or i32 %7, %6, !dbg !5585
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5585
  %9 = icmp eq i32 %0, 0, !dbg !5586
  br i1 %9, label %10, label %11, !dbg !5588

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5589
  br label %11, !dbg !5591

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5592
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5593
  br label %13, !dbg !5594

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !5579
  ret i32 %14, !dbg !5595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !5596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5607, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !5608, metadata !DIExpression()), !dbg !5609
  %3 = icmp ugt i32 %0, 15, !dbg !5610
  br i1 %3, label %30, label %4, !dbg !5612

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !5613
  br i1 %5, label %30, label %6, !dbg !5615

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !5616
  %8 = load i32, i32* %7, align 4, !dbg !5616
  %9 = and i32 %8, 4095, !dbg !5618
  %10 = icmp eq i32 %9, 0, !dbg !5618
  br i1 %10, label %12, label %11, !dbg !5619

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.67, i32 0, i32 0)) #19, !dbg !5620
  unreachable, !dbg !5620

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !5622
  %14 = load i32, i32* %13, align 4, !dbg !5622
  %15 = and i32 %14, 4095, !dbg !5624
  %16 = icmp eq i32 %15, 0, !dbg !5624
  br i1 %16, label %18, label %17, !dbg !5625

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.67, i32 0, i32 0)) #19, !dbg !5626
  unreachable, !dbg !5626

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5628
  store volatile i32 %8, i32* %19, align 4, !dbg !5629
  %20 = load i32, i32* %7, align 4, !dbg !5630
  %21 = load i32, i32* %13, align 4, !dbg !5631
  %22 = add i32 %21, %20, !dbg !5632
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !5633
  store volatile i32 %22, i32* %23, align 4, !dbg !5634
  %24 = load volatile i32, i32* %19, align 4, !dbg !5635
  %25 = or i32 %24, 256, !dbg !5635
  store volatile i32 %25, i32* %19, align 4, !dbg !5635
  %26 = load volatile i32, i32* %19, align 4, !dbg !5636
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5637
  store i32 %26, i32* %27, align 4, !dbg !5638
  %28 = load volatile i32, i32* %23, align 4, !dbg !5639
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5640
  store i32 %28, i32* %29, align 4, !dbg !5641
  br label %30, !dbg !5642

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !5609
  ret i32 %31, !dbg !5643
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5648, metadata !DIExpression()), !dbg !5650
  %2 = and i32 %0, 31, !dbg !5651
  %3 = icmp eq i32 %2, 0, !dbg !5651
  br i1 %3, label %4, label %9, !dbg !5653

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5654
  call void @llvm.dbg.value(metadata i32 %5, metadata !5649, metadata !DIExpression()), !dbg !5650
  %6 = and i32 %0, -32, !dbg !5655
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5656
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5657
  %8 = or i32 %7, 5, !dbg !5657
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5657
  tail call void asm sideeffect "isb", ""() #17, !dbg !5658, !srcloc !5477
  tail call void @restore_interrupt_mask(i32 noundef %5) #18, !dbg !5660
  br label %9, !dbg !5661

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5650
  ret i32 %10, !dbg !5662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5667, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.value(metadata i32 %1, metadata !5668, metadata !DIExpression()), !dbg !5671
  %3 = add i32 %1, %0, !dbg !5672
  call void @llvm.dbg.value(metadata i32 %3, metadata !5670, metadata !DIExpression()), !dbg !5671
  %4 = or i32 %1, %0, !dbg !5673
  %5 = and i32 %4, 31, !dbg !5673
  %6 = icmp eq i32 %5, 0, !dbg !5673
  br i1 %6, label %7, label %16, !dbg !5673

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5675
  call void @llvm.dbg.value(metadata i32 %8, metadata !5669, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.value(metadata i32 %0, metadata !5667, metadata !DIExpression()), !dbg !5671
  %9 = icmp ugt i32 %3, %0, !dbg !5676
  br i1 %9, label %10, label %15, !dbg !5677

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5667, metadata !DIExpression()), !dbg !5671
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #20, !dbg !5678
  %13 = add i32 %11, 32, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %13, metadata !5667, metadata !DIExpression()), !dbg !5671
  %14 = icmp ult i32 %13, %3, !dbg !5676
  br i1 %14, label %10, label %15, !dbg !5677, !llvm.loop !5681

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #17, !dbg !5683, !srcloc !5477
  tail call void @restore_interrupt_mask(i32 noundef %8) #18, !dbg !5685
  br label %16, !dbg !5686

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5671
  ret i32 %17, !dbg !5687
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5690, metadata !DIExpression()), !dbg !5692
  %2 = and i32 %0, 31, !dbg !5693
  %3 = icmp eq i32 %2, 0, !dbg !5693
  br i1 %3, label %4, label %9, !dbg !5695

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5696
  call void @llvm.dbg.value(metadata i32 %5, metadata !5691, metadata !DIExpression()), !dbg !5692
  %6 = and i32 %0, -32, !dbg !5697
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5698
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5699
  %8 = or i32 %7, 21, !dbg !5699
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5699
  tail call void asm sideeffect "isb", ""() #17, !dbg !5700, !srcloc !5477
  tail call void @restore_interrupt_mask(i32 noundef %5) #18, !dbg !5702
  br label %9, !dbg !5703

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5692
  ret i32 %10, !dbg !5704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5707, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i32 %1, metadata !5708, metadata !DIExpression()), !dbg !5711
  %3 = add i32 %1, %0, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %3, metadata !5710, metadata !DIExpression()), !dbg !5711
  %4 = or i32 %1, %0, !dbg !5713
  %5 = and i32 %4, 31, !dbg !5713
  %6 = icmp eq i32 %5, 0, !dbg !5713
  br i1 %6, label %7, label %16, !dbg !5713

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5715
  call void @llvm.dbg.value(metadata i32 %8, metadata !5709, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i32 %0, metadata !5707, metadata !DIExpression()), !dbg !5711
  %9 = icmp ugt i32 %3, %0, !dbg !5716
  br i1 %9, label %10, label %15, !dbg !5717

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5707, metadata !DIExpression()), !dbg !5711
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #20, !dbg !5718
  %13 = add i32 %11, 32, !dbg !5720
  call void @llvm.dbg.value(metadata i32 %13, metadata !5707, metadata !DIExpression()), !dbg !5711
  %14 = icmp ult i32 %13, %3, !dbg !5716
  br i1 %14, label %10, label %15, !dbg !5717, !llvm.loop !5721

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #17, !dbg !5723, !srcloc !5477
  tail call void @restore_interrupt_mask(i32 noundef %8) #18, !dbg !5725
  br label %16, !dbg !5726

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5711
  ret i32 %17, !dbg !5727
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5728 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5731
  call void @llvm.dbg.value(metadata i32 %1, metadata !5730, metadata !DIExpression()), !dbg !5732
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5733
  %3 = and i32 %2, -31, !dbg !5733
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5733
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5734
  %5 = or i32 %4, 19, !dbg !5734
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5734
  tail call void asm sideeffect "isb", ""() #17, !dbg !5735, !srcloc !5477
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5737
  ret i32 0, !dbg !5738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #5 !dbg !5739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5743, metadata !DIExpression()), !dbg !5745
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5746
  %3 = and i32 %2, 8, !dbg !5748
  %4 = icmp eq i32 %3, 0, !dbg !5748
  br i1 %4, label %23, label %5, !dbg !5749

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5744, metadata !DIExpression()), !dbg !5745
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5750
  %8 = shl nuw nsw i32 1, %6, !dbg !5755
  %9 = and i32 %7, %8, !dbg !5756
  %10 = icmp eq i32 %9, 0, !dbg !5756
  br i1 %10, label %20, label %11, !dbg !5757

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !5758
  %13 = load volatile i32, i32* %12, align 4, !dbg !5758
  %14 = and i32 %13, -257, !dbg !5761
  %15 = icmp ugt i32 %14, %0, !dbg !5762
  br i1 %15, label %20, label %16, !dbg !5763

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !5764
  %18 = load volatile i32, i32* %17, align 4, !dbg !5764
  %19 = icmp ugt i32 %18, %0, !dbg !5765
  br i1 %19, label %23, label %20, !dbg !5766

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %21, metadata !5744, metadata !DIExpression()), !dbg !5745
  %22 = icmp eq i32 %21, 16, !dbg !5768
  br i1 %22, label %23, label %5, !dbg !5769, !llvm.loop !5770

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !5745
  ret i1 %24, !dbg !5772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #7 !dbg !5773 {
  ret i32 0, !dbg !5777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5782, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i32 -1, metadata !5783, metadata !DIExpression()), !dbg !5784
  %2 = icmp ugt i32 %0, 95, !dbg !5785
  br i1 %2, label %4, label %3, !dbg !5785

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #20, !dbg !5787
  call void @llvm.dbg.value(metadata i32 0, metadata !5783, metadata !DIExpression()), !dbg !5784
  br label %4, !dbg !5789

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5784
  ret i32 %5, !dbg !5790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5795, metadata !DIExpression()), !dbg !5796
  %2 = and i32 %0, 31, !dbg !5797
  %3 = shl nuw i32 1, %2, !dbg !5798
  %4 = lshr i32 %0, 5, !dbg !5799
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5800
  store volatile i32 %3, i32* %5, align 4, !dbg !5801
  ret void, !dbg !5802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5805, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata i32 -1, metadata !5806, metadata !DIExpression()), !dbg !5807
  %2 = icmp ugt i32 %0, 95, !dbg !5808
  br i1 %2, label %4, label %3, !dbg !5808

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #20, !dbg !5810
  call void @llvm.dbg.value(metadata i32 0, metadata !5806, metadata !DIExpression()), !dbg !5807
  br label %4, !dbg !5812

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5807
  ret i32 %5, !dbg !5813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5816, metadata !DIExpression()), !dbg !5817
  %2 = and i32 %0, 31, !dbg !5818
  %3 = shl nuw i32 1, %2, !dbg !5819
  %4 = lshr i32 %0, 5, !dbg !5820
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5821
  store volatile i32 %3, i32* %5, align 4, !dbg !5822
  ret void, !dbg !5823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #8 !dbg !5824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5828, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 255, metadata !5829, metadata !DIExpression()), !dbg !5830
  %2 = icmp ugt i32 %0, 95, !dbg !5831
  br i1 %2, label %5, label %3, !dbg !5831

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #20, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %4, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %5, !dbg !5835

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !5830
  ret i32 %6, !dbg !5836
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #8 !dbg !5837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5841, metadata !DIExpression()), !dbg !5842
  %2 = lshr i32 %0, 5, !dbg !5843
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !5844
  %4 = load volatile i32, i32* %3, align 4, !dbg !5844
  %5 = and i32 %0, 31, !dbg !5845
  %6 = lshr i32 %4, %5, !dbg !5846
  %7 = and i32 %6, 1, !dbg !5846
  ret i32 %7, !dbg !5847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5850, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i32 -1, metadata !5851, metadata !DIExpression()), !dbg !5852
  %2 = icmp ugt i32 %0, 95, !dbg !5853
  br i1 %2, label %4, label %3, !dbg !5853

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #20, !dbg !5855
  call void @llvm.dbg.value(metadata i32 0, metadata !5851, metadata !DIExpression()), !dbg !5852
  br label %4, !dbg !5857

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5852
  ret i32 %5, !dbg !5858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5861, metadata !DIExpression()), !dbg !5862
  %2 = and i32 %0, 31, !dbg !5863
  %3 = shl nuw i32 1, %2, !dbg !5864
  %4 = lshr i32 %0, 5, !dbg !5865
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5866
  store volatile i32 %3, i32* %5, align 4, !dbg !5867
  ret void, !dbg !5868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5871, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 -1, metadata !5872, metadata !DIExpression()), !dbg !5873
  %2 = icmp ugt i32 %0, 95, !dbg !5874
  br i1 %2, label %4, label %3, !dbg !5874

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5876
  call void @llvm.dbg.value(metadata i32 0, metadata !5872, metadata !DIExpression()), !dbg !5873
  br label %4, !dbg !5878

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5873
  ret i32 %5, !dbg !5879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5882, metadata !DIExpression()), !dbg !5883
  %2 = and i32 %0, 31, !dbg !5884
  %3 = shl nuw i32 1, %2, !dbg !5885
  %4 = lshr i32 %0, 5, !dbg !5886
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5887
  store volatile i32 %3, i32* %5, align 4, !dbg !5888
  ret void, !dbg !5889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5894, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i32 %1, metadata !5895, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i32 -1, metadata !5896, metadata !DIExpression()), !dbg !5897
  %3 = icmp ugt i32 %0, 95, !dbg !5898
  br i1 %3, label %5, label %4, !dbg !5898

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #20, !dbg !5900
  call void @llvm.dbg.value(metadata i32 0, metadata !5896, metadata !DIExpression()), !dbg !5897
  br label %5, !dbg !5902

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !5897
  ret i32 %6, !dbg !5903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5908, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i32 %1, metadata !5909, metadata !DIExpression()), !dbg !5910
  %3 = trunc i32 %1 to i8, !dbg !5911
  %4 = shl i8 %3, 5, !dbg !5911
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5914
  store volatile i8 %4, i8* %5, align 1, !dbg !5915
  ret void, !dbg !5916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #8 !dbg !5917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5919, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata i32 68, metadata !5920, metadata !DIExpression()), !dbg !5921
  %2 = icmp ugt i32 %0, 95, !dbg !5922
  br i1 %2, label %5, label %3, !dbg !5922

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #20, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %4, metadata !5920, metadata !DIExpression()), !dbg !5921
  br label %5, !dbg !5926

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !5921
  ret i32 %6, !dbg !5927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #8 !dbg !5928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5930, metadata !DIExpression()), !dbg !5931
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5932
  %3 = load volatile i8, i8* %2, align 1, !dbg !5932
  %4 = lshr i8 %3, 5, !dbg !5935
  %5 = zext i8 %4 to i32, !dbg !5935
  ret i32 %5, !dbg !5936
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".ramTEXT" !dbg !5937 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5939, metadata !DIExpression()), !dbg !5941
  tail call void @Flash_ReturnReady() #18, !dbg !5942
  %1 = tail call fastcc i32 @get_current_irq() #20, !dbg !5943
  call void @llvm.dbg.value(metadata i32 %1, metadata !5940, metadata !DIExpression()), !dbg !5941
  %2 = icmp ugt i32 %1, 95, !dbg !5944
  br i1 %2, label %12, label %3, !dbg !5944

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !5946
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !5946
  %6 = icmp eq void (i32)* %5, null, !dbg !5948
  br i1 %6, label %7, label %8, !dbg !5949

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !5939, metadata !DIExpression()), !dbg !5941
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i32 0, i32 0)) #18, !dbg !5950
  br label %12, !dbg !5952

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #20, !dbg !5953
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !5955
  store i32 %9, i32* %10, align 4, !dbg !5956
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !5957
  tail call void %11(i32 noundef %1) #18, !dbg !5958
  call void @llvm.dbg.value(metadata i32 0, metadata !5939, metadata !DIExpression()), !dbg !5941
  br label %12, !dbg !5959

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !5941
  ret i32 %13, !dbg !5960
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #8 !dbg !5961 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5964
  %2 = and i32 %1, 511, !dbg !5965
  call void @llvm.dbg.value(metadata i32 %2, metadata !5963, metadata !DIExpression()), !dbg !5966
  %3 = add nsw i32 %2, -16, !dbg !5967
  ret i32 %3, !dbg !5968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #8 !dbg !5969 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5970
  %2 = lshr i32 %1, 22, !dbg !5971
  %3 = and i32 %2, 1, !dbg !5971
  ret i32 %3, !dbg !5972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !5973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5978, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !5979, metadata !DIExpression()), !dbg !5981
  %3 = icmp ugt i32 %0, 95, !dbg !5982
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !5982
  br i1 %5, label %10, label %6, !dbg !5982

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %7, metadata !5980, metadata !DIExpression()), !dbg !5981
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5985
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !5986
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !5987
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !5988
  store i32 0, i32* %9, align 4, !dbg !5989
  tail call void @restore_interrupt_mask(i32 noundef %7) #18, !dbg !5990
  br label %10, !dbg !5991

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !5981
  ret i32 %11, !dbg !5992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !5993 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5997, metadata !DIExpression()), !dbg !5998
  %2 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5999
  store i32 %2, i32* %0, align 4, !dbg !6000
  ret i32 0, !dbg !6001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6006, metadata !DIExpression()), !dbg !6007
  tail call void @restore_interrupt_mask(i32 noundef %0) #18, !dbg !6008
  ret i32 0, !dbg !6009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !6010 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6015, metadata !DIExpression()), !dbg !6016
  %1 = tail call i32 @flash_sfc_config(i8 noundef zeroext 0) #18, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %1, metadata !6015, metadata !DIExpression()), !dbg !6016
  %2 = ashr i32 %1, 31, !dbg !6018
  ret i32 %2, !dbg !6019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #7 !dbg !6020 {
  ret i32 0, !dbg !6021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6027, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i32 %1, metadata !6028, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i32 -1, metadata !6029, metadata !DIExpression()), !dbg !6030
  %3 = tail call i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) #18, !dbg !6031
  call void @llvm.dbg.value(metadata i32 %3, metadata !6029, metadata !DIExpression()), !dbg !6030
  %4 = ashr i32 %3, 31, !dbg !6032
  ret i32 %4, !dbg !6033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6038, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata i8* %1, metadata !6039, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata i32 %2, metadata !6040, metadata !DIExpression()), !dbg !6041
  %4 = add i32 %0, 268435456, !dbg !6042
  %5 = inttoptr i32 %4 to i8*, !dbg !6043
  tail call void @hal_flash_direct_read(i8* noundef %5, i8* noundef %1, i32 noundef %2) #18, !dbg !6044
  ret i32 0, !dbg !6045
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6050, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %1, metadata !6051, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 %2, metadata !6052, metadata !DIExpression()), !dbg !6054
  %4 = tail call i32 @flash_sfc_write(i32 noundef %0, i32 noundef %2, i8* noundef %1) #18, !dbg !6055
  call void @llvm.dbg.value(metadata i32 %4, metadata !6053, metadata !DIExpression()), !dbg !6054
  %5 = ashr i32 %4, 31, !dbg !6056
  ret i32 %5, !dbg !6057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !6058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6063, metadata !DIExpression()), !dbg !6064
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6065
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6067
  %4 = load i8, i8* %3, align 4, !dbg !6067, !range !2479
  %5 = icmp eq i8 %4, 0, !dbg !6067
  br i1 %5, label %6, label %12, !dbg !6068

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !6069
  br i1 %7, label %9, label %8, !dbg !6071

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i32 0, i32 0), i32 noundef %0) #18, !dbg !6072
  br label %12, !dbg !6074

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !6075
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #18, !dbg !6076
  store i8 1, i8* %3, align 4, !dbg !6077
  br label %12, !dbg !6078

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !6064
  ret i32 %13, !dbg !6079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #7 !dbg !6080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6084, metadata !DIExpression()), !dbg !6085
  %2 = icmp ult i32 %0, 5, !dbg !6086
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !6088
  ret i1 %4, !dbg !6089
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6092, metadata !DIExpression()), !dbg !6093
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !6094
  br i1 %2, label %4, label %3, !dbg !6096

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i32 0, i32 0), i32 noundef %0) #18, !dbg !6097
  br label %14, !dbg !6099

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6100
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !6102
  %7 = load i32, i32* %6, align 4, !dbg !6102
  %8 = icmp eq i32 %7, 0, !dbg !6103
  br i1 %8, label %10, label %9, !dbg !6104

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.82, i32 0, i32 0), i32 noundef %0) #18, !dbg !6105
  br label %14, !dbg !6107

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !6108
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #18, !dbg !6109
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6110
  store i8 0, i8* %13, align 4, !dbg !6111
  br label %14, !dbg !6112

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !6093
  ret i32 %15, !dbg !6113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6119, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata i32* %1, metadata !6120, metadata !DIExpression()), !dbg !6121
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !6122

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6123
  %5 = icmp eq i32 %4, 1, !dbg !6127
  br i1 %5, label %7, label %6, !dbg !6128

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #18, !dbg !6129
  br label %7, !dbg !6131

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #18, !dbg !6132
  store i32 %8, i32* %1, align 4, !dbg !6133
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6134
  br label %25, !dbg !6135

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6136
  %11 = icmp eq i32 %10, 1, !dbg !6140
  br i1 %11, label %13, label %12, !dbg !6141

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #18, !dbg !6142
  br label %13, !dbg !6144

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #18, !dbg !6145
  %15 = tail call i32 @top_mcu_freq_get() #18, !dbg !6146
  %16 = udiv i32 %15, 1000000, !dbg !6147
  %17 = udiv i32 %14, %16, !dbg !6148
  store i32 %17, i32* %1, align 4, !dbg !6149
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6150
  br label %25, !dbg !6151

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6152
  %20 = icmp eq i32 %19, 1, !dbg !6156
  br i1 %20, label %22, label %21, !dbg !6157

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #18, !dbg !6158
  br label %22, !dbg !6160

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #18, !dbg !6161
  store i32 %23, i32* %1, align 4, !dbg !6162
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6163
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.85, i32 0, i32 0), i32 noundef %0) #18, !dbg !6164
  br label %25, !dbg !6166

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !6121
  ret i32 %26, !dbg !6167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 !dbg !6168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6172, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i32 %1, metadata !6173, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i32* %2, metadata !6174, metadata !DIExpression()), !dbg !6175
  %4 = icmp eq i32* %2, null, !dbg !6176
  br i1 %4, label %7, label %5, !dbg !6178

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !6179
  store i32 %6, i32* %2, align 4, !dbg !6179
  br label %7, !dbg !6181

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !6175
  ret i32 %8, !dbg !6182
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6188, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32* %1, metadata !6189, metadata !DIExpression()), !dbg !6190
  %3 = icmp ugt i32 %0, 4, !dbg !6191
  br i1 %3, label %4, label %5, !dbg !6193

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.86, i32 0, i32 0), i32 noundef %0) #18, !dbg !6194
  br label %8, !dbg !6196

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6197
  %7 = load i32, i32* %6, align 4, !dbg !6197
  store i32 %7, i32* %1, align 4, !dbg !6198
  br label %8, !dbg !6199

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !6190
  ret i32 %9, !dbg !6200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6205, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !6206, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.value(metadata i8* %2, metadata !6207, metadata !DIExpression()), !dbg !6208
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !6209
  br i1 %4, label %6, label %5, !dbg !6211

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #18, !dbg !6212
  br label %15, !dbg !6214

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6215
  %8 = load i8, i8* %7, align 4, !dbg !6215, !range !2479
  %9 = icmp eq i8 %8, 1, !dbg !6217
  br i1 %9, label %10, label %15, !dbg !6218

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !6219
  br i1 %11, label %15, label %12, !dbg !6221

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !6222
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !6223
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !6224
  store i8* %2, i8** %14, align 4, !dbg !6225
  br label %15, !dbg !6226

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6208
  ret i32 %16, !dbg !6227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6233, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata i32 %1, metadata !6234, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata i32 %2, metadata !6235, metadata !DIExpression()), !dbg !6236
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !6237
  br i1 %4, label %6, label %5, !dbg !6239

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #18, !dbg !6240
  br label %17, !dbg !6242

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6243
  %8 = load i8, i8* %7, align 4, !dbg !6243, !range !2479
  %9 = icmp eq i8 %8, 1, !dbg !6245
  br i1 %9, label %10, label %17, !dbg !6246

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !6247
  br i1 %11, label %17, label %12, !dbg !6249

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #20, !dbg !6250
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #20, !dbg !6251
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #20, !dbg !6252
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #18, !dbg !6253
  tail call void @TMR_Start(i32 noundef %0) #18, !dbg !6254
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6255
  store i32 1, i32* %16, align 4, !dbg !6256
  br label %17, !dbg !6257

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6236
  ret i32 %18, !dbg !6258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #7 !dbg !6259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6263, metadata !DIExpression()), !dbg !6264
  %2 = shl i32 %0, 5, !dbg !6265
  %3 = mul i32 %0, 7, !dbg !6266
  %4 = udiv i32 %3, 10, !dbg !6267
  %5 = add i32 %4, %2, !dbg !6268
  %6 = mul i32 %0, 6, !dbg !6269
  %7 = udiv i32 %6, 100, !dbg !6270
  %8 = add i32 %5, %7, !dbg !6271
  %9 = shl i32 %0, 3, !dbg !6272
  %10 = udiv i32 %9, 1000, !dbg !6273
  %11 = add i32 %8, %10, !dbg !6274
  ret i32 %11, !dbg !6275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #7 !dbg !6276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6280, metadata !DIExpression()), !dbg !6281
  %2 = icmp eq i32 %0, 1, !dbg !6282
  ret i1 %2, !dbg !6283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #7 !dbg !6284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6289, metadata !DIExpression()), !dbg !6290
  %2 = icmp eq i32 %0, 0, !dbg !6291
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !6292
  ret void ()* %3, !dbg !6293
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #0 !dbg !6294 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !6298
  %2 = icmp eq void (i8*)* %1, null, !dbg !6300
  br i1 %2, label %5, label %3, !dbg !6301

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !6302
  tail call void %1(i8* noundef %4) #18, !dbg !6304
  br label %5, !dbg !6305

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #0 !dbg !6308 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !6311
  %2 = icmp eq void (i8*)* %1, null, !dbg !6313
  br i1 %2, label %5, label %3, !dbg !6314

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !6315
  tail call void %1(i8* noundef %4) #18, !dbg !6317
  br label %5, !dbg !6318

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !6319
  ret void, !dbg !6320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !6321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6323, metadata !DIExpression()), !dbg !6324
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !6325
  br i1 %2, label %4, label %3, !dbg !6327

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #18, !dbg !6328
  br label %6, !dbg !6330

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #18, !dbg !6331
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6332
  store i32 0, i32* %5, align 4, !dbg !6333
  br label %6, !dbg !6334

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !6324
  ret i32 %7, !dbg !6335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !6336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6340, metadata !DIExpression()), !dbg !6341
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6342
  %3 = icmp eq i32 %2, 1, !dbg !6344
  br i1 %3, label %5, label %4, !dbg !6345

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #18, !dbg !6346
  br label %5, !dbg !6348

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #18, !dbg !6349
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6350
  ret i32 0, !dbg !6351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !6352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6354, metadata !DIExpression()), !dbg !6355
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6356
  %3 = icmp eq i32 %2, 1, !dbg !6358
  br i1 %3, label %5, label %4, !dbg !6359

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #18, !dbg !6360
  br label %5, !dbg !6362

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #18, !dbg !6363
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6364
  ret i32 0, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !6366 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6368, metadata !DIExpression()), !dbg !6371
  %4 = bitcast i32* %2 to i8*, !dbg !6372
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !6372
  %5 = bitcast i32* %3 to i8*, !dbg !6373
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6373
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6374
  %7 = load i8, i8* %6, align 1, !dbg !6374, !range !2479
  %8 = icmp eq i8 %7, 0, !dbg !6376
  br i1 %8, label %9, label %26, !dbg !6377

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %3, metadata !6370, metadata !DIExpression(DW_OP_deref)), !dbg !6371
  %10 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %3) #18, !dbg !6378
  call void @llvm.dbg.value(metadata i32* %2, metadata !6369, metadata !DIExpression(DW_OP_deref)), !dbg !6371
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %2) #18, !dbg !6380
  %11 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6381
  %12 = load i32, i32* %11, align 4, !dbg !6381
  %13 = load i32, i32* %2, align 4, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %13, metadata !6369, metadata !DIExpression()), !dbg !6371
  %14 = icmp eq i32 %12, %13, !dbg !6384
  br i1 %14, label %15, label %23, !dbg !6385

15:                                               ; preds = %9
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6386
  %17 = load i8, i8* %16, align 1, !dbg !6386, !range !2479
  %18 = icmp eq i8 %17, 0, !dbg !6386
  br i1 %18, label %23, label %19, !dbg !6389

19:                                               ; preds = %15
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6390
  %21 = load i8, i8* %20, align 1, !dbg !6390
  %22 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %21) #18, !dbg !6392
  store i8 0, i8* %16, align 1, !dbg !6393
  br label %23, !dbg !6394

23:                                               ; preds = %15, %19, %9
  %24 = load i32, i32* %3, align 4, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %24, metadata !6370, metadata !DIExpression()), !dbg !6371
  %25 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %24) #18, !dbg !6396
  br label %27, !dbg !6397

26:                                               ; preds = %1
  store i8 0, i8* %6, align 1, !dbg !6398
  br label %27

27:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6400
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !6400
  ret void, !dbg !6400
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6407, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6408, metadata !DIExpression()), !dbg !6409
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6410
  br i1 %3, label %4, label %24, !dbg !6412

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6413
  %6 = load i8, i8* %5, align 4, !dbg !6413, !range !2479
  %7 = icmp eq i8 %6, 0, !dbg !6413
  br i1 %7, label %8, label %24, !dbg !6415

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #18, !dbg !6416
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6417
  %11 = bitcast %struct.hal_uart_config_t* %10 to i8*, !dbg !6418
  %12 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6419
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #18, !dbg !6420
  store i8 1, i8* %5, align 4, !dbg !6421
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6422, !range !6423
  tail call void @uart_reset_default_value(i32 noundef %14) #18, !dbg !6424
  tail call void @halUART_HWInit(i32 noundef %14) #18, !dbg !6425
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6426
  %16 = icmp eq i32 %15, 0, !dbg !6428
  br i1 %16, label %17, label %24, !dbg !6429

17:                                               ; preds = %8
  tail call void @uart_set_sleep_mode(i32 noundef %14) #18, !dbg !6430
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6431
  store i8 0, i8* %18, align 1, !dbg !6432
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6433
  store i8 0, i8* %19, align 1, !dbg !6434
  %20 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([2 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !6435
  %21 = load i8*, i8** %20, align 4, !dbg !6435
  %22 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %21) #18, !dbg !6436
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6437
  store i8 %22, i8* %23, align 1, !dbg !6438
  br label %24, !dbg !6439

24:                                               ; preds = %8, %4, %2, %17
  %25 = phi i32 [ 0, %17 ], [ -4, %2 ], [ -3, %4 ], [ -4, %8 ], !dbg !6409
  ret i32 %25, !dbg !6440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef readonly %1) unnamed_addr #9 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6447, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6448, metadata !DIExpression()), !dbg !6449
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6450
  %4 = icmp ne %struct.hal_uart_config_t* %1, null
  %5 = and i1 %4, %3, !dbg !6452
  br i1 %5, label %6, label %22, !dbg !6452

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6453
  %8 = load i32, i32* %7, align 4, !dbg !6453
  %9 = icmp ugt i32 %8, 12, !dbg !6455
  br i1 %9, label %22, label %10, !dbg !6456

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6457
  %12 = load i32, i32* %11, align 4, !dbg !6457
  %13 = icmp ugt i32 %12, 2, !dbg !6458
  br i1 %13, label %22, label %14, !dbg !6459

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6460
  %16 = load i32, i32* %15, align 4, !dbg !6460
  %17 = icmp ugt i32 %16, 1, !dbg !6461
  br i1 %17, label %22, label %18, !dbg !6462

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6463
  %20 = load i32, i32* %19, align 4, !dbg !6463
  %21 = icmp ult i32 %20, 4, !dbg !6464
  br label %22, !dbg !6465

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !6449
  ret i1 %23, !dbg !6466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #7 !dbg !6467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6471, metadata !DIExpression()), !dbg !6472
  %2 = icmp ne i32 %0, 0, !dbg !6473
  %3 = zext i1 %2 to i32, !dbg !6474
  ret i32 %3, !dbg !6475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6480, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6481, metadata !DIExpression()), !dbg !6482
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6483
  br i1 %3, label %4, label %22, !dbg !6485

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6486
  %6 = bitcast %struct.hal_uart_config_t* %5 to i8*, !dbg !6487
  %7 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6488
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #18, !dbg !6489
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6490
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6491
  %11 = load i32, i32* %10, align 4, !dbg !6491
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #20, !dbg !6492
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6493
  %14 = load i32, i32* %13, align 4, !dbg !6493
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #20, !dbg !6494
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6495
  %17 = load i32, i32* %16, align 4, !dbg !6495
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #20, !dbg !6496
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6497
  %20 = load i32, i32* %19, align 4, !dbg !6497
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #20, !dbg !6498
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #18, !dbg !6499
  br label %22, !dbg !6500

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !6482
  ret i32 %23, !dbg !6501
}

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #7 !dbg !6502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6506, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !6507, metadata !DIExpression()), !dbg !6510
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !6511
  %3 = load i32, i32* %2, align 4, !dbg !6511
  ret i32 %3, !dbg !6512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #7 !dbg !6513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6517, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !6518, metadata !DIExpression()), !dbg !6521
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !6522
  %3 = load i16, i16* %2, align 2, !dbg !6522
  ret i16 %3, !dbg !6523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #7 !dbg !6524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6528, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !6529, metadata !DIExpression()), !dbg !6532
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !6533
  %3 = load i16, i16* %2, align 2, !dbg !6533
  ret i16 %3, !dbg !6534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #7 !dbg !6535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6539, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !6540, metadata !DIExpression()), !dbg !6543
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !6544
  %3 = load i16, i16* %2, align 2, !dbg !6544
  ret i16 %3, !dbg !6545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #7 !dbg !6546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6550, metadata !DIExpression()), !dbg !6551
  %2 = icmp ult i32 %0, 2, !dbg !6552
  ret i1 %2, !dbg !6553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6558, metadata !DIExpression()), !dbg !6559
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6560
  br i1 %2, label %3, label %18, !dbg !6562

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6563
  %5 = load i8, i8* %4, align 4, !dbg !6563, !range !2479
  %6 = icmp eq i8 %5, 0, !dbg !6565
  br i1 %6, label %18, label %7, !dbg !6566

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #18, !dbg !6567
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6568, !range !6423
  tail call void @uart_query_empty(i32 noundef %9) #18, !dbg !6569
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6570
  %11 = load i32, i32* %10, align 4, !dbg !6570
  %12 = tail call i32 @hal_nvic_disable_irq(i32 noundef %11) #18, !dbg !6571
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6572
  store i8 0, i8* %13, align 1, !dbg !6573
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6574
  store i8 0, i8* %14, align 1, !dbg !6575
  tail call void @uart_mask_send_interrupt(i32 noundef %9) #18, !dbg !6576
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6577
  %16 = load i8, i8* %15, align 1, !dbg !6577
  %17 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %16) #18, !dbg !6578
  tail call void @uart_reset_default_value(i32 noundef %9) #18, !dbg !6579
  br label %18, !dbg !6580

18:                                               ; preds = %3, %1, %7
  %19 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6559
  ret i32 %19, !dbg !6581
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6586, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8 %1, metadata !6587, metadata !DIExpression()), !dbg !6589
  %3 = icmp eq i32 %0, 0, !dbg !6590
  %4 = icmp eq i32 %0, 1, !dbg !6590
  %5 = select i1 %4, i32 1, i32 2, !dbg !6590
  %6 = select i1 %3, i32 0, i32 %5, !dbg !6590
  call void @llvm.dbg.value(metadata i32 %6, metadata !6588, metadata !DIExpression()), !dbg !6589
  %7 = icmp eq i32 %6, 2, !dbg !6591
  br i1 %7, label %9, label %8, !dbg !6593

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #18, !dbg !6594
  br label %9, !dbg !6596

9:                                                ; preds = %2, %8
  ret void, !dbg !6597
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6602, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.value(metadata i8* %1, metadata !6603, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.value(metadata i32 %2, metadata !6604, metadata !DIExpression()), !dbg !6607
  %4 = icmp eq i32 %0, 0, !dbg !6608
  %5 = icmp eq i32 %0, 1, !dbg !6608
  %6 = select i1 %5, i32 1, i32 2, !dbg !6608
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6608
  call void @llvm.dbg.value(metadata i32 %7, metadata !6605, metadata !DIExpression()), !dbg !6607
  %8 = icmp eq i8* %1, null, !dbg !6609
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6611
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6611
  call void @llvm.dbg.value(metadata i32 0, metadata !6606, metadata !DIExpression()), !dbg !6607
  br i1 %12, label %19, label %13, !dbg !6611

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6606, metadata !DIExpression()), !dbg !6607
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6612
  %16 = load i8, i8* %15, align 1, !dbg !6612
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #18, !dbg !6618
  %17 = add nuw i32 %14, 1, !dbg !6619
  call void @llvm.dbg.value(metadata i32 %17, metadata !6606, metadata !DIExpression()), !dbg !6607
  %18 = icmp eq i32 %17, %2, !dbg !6620
  br i1 %18, label %19, label %13, !dbg !6621, !llvm.loop !6622

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6607
  ret i32 %20, !dbg !6624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6625 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6627, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.value(metadata i8* %1, metadata !6628, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.value(metadata i32 %2, metadata !6629, metadata !DIExpression()), !dbg !6635
  %6 = bitcast i32* %4 to i8*, !dbg !6636
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6636
  %7 = bitcast i32* %5 to i8*, !dbg !6637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !6637
  %8 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6638
  br i1 %8, label %9, label %37, !dbg !6640

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null, !dbg !6641
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6643
  br i1 %12, label %37, label %13, !dbg !6643

13:                                               ; preds = %9
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6644
  %15 = load i8, i8* %14, align 4, !dbg !6644, !range !2479
  %16 = icmp eq i8 %15, 0, !dbg !6644
  br i1 %16, label %37, label %17, !dbg !6646

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32* %5, metadata !6634, metadata !DIExpression(DW_OP_deref)), !dbg !6635
  %18 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #18, !dbg !6647
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6648
  %20 = load i8, i8* %19, align 1, !dbg !6648, !range !2479
  %21 = icmp eq i8 %20, 0, !dbg !6650
  br i1 %21, label %22, label %26, !dbg !6651

22:                                               ; preds = %17
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6652
  %24 = load i8, i8* %23, align 1, !dbg !6652
  %25 = call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %24) #18, !dbg !6654
  store i8 1, i8* %19, align 1, !dbg !6655
  br label %26, !dbg !6656

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %5, align 4, !dbg !6657
  call void @llvm.dbg.value(metadata i32 %27, metadata !6634, metadata !DIExpression()), !dbg !6635
  %28 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %27) #18, !dbg !6658
  %29 = call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6659, !range !6423
  call void @llvm.dbg.value(metadata i32* %4, metadata !6630, metadata !DIExpression(DW_OP_deref)), !dbg !6635
  call void @halUART_Get_VFIFO_Length(i32 noundef %29, i32 noundef 0, i32* noundef nonnull %4) #18, !dbg !6660
  %30 = load i32, i32* %4, align 4, !dbg !6661
  call void @llvm.dbg.value(metadata i32 %30, metadata !6630, metadata !DIExpression()), !dbg !6635
  %31 = icmp ult i32 %30, %2, !dbg !6663
  %32 = select i1 %31, i32 %30, i32 %2
  call void @llvm.dbg.value(metadata i32 %32, metadata !6631, metadata !DIExpression()), !dbg !6635
  call void @halUART_Write_VFIFO_Data(i32 noundef %29, i8* noundef nonnull %1, i32 noundef %32) #18, !dbg !6664
  %33 = load i32, i32* %4, align 4, !dbg !6665
  call void @llvm.dbg.value(metadata i32 %33, metadata !6630, metadata !DIExpression()), !dbg !6635
  %34 = icmp eq i32 %32, %33, !dbg !6667
  br i1 %34, label %35, label %37, !dbg !6668

35:                                               ; preds = %26
  %36 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %29, i1 noundef zeroext false) #20, !dbg !6669, !range !6671
  call void @llvm.dbg.value(metadata i32 %36, metadata !6632, metadata !DIExpression()), !dbg !6635
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %36) #18, !dbg !6672
  br label %37, !dbg !6673

37:                                               ; preds = %26, %35, %13, %9, %3
  %38 = phi i32 [ 0, %3 ], [ 0, %9 ], [ 0, %13 ], [ %32, %35 ], [ %32, %26 ], !dbg !6635
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !6674
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6674
  ret i32 %38, !dbg !6674
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #7 !dbg !6675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6679, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i1 %1, metadata !6680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6682
  %3 = icmp eq i32 %0, 0, !dbg !6683
  %4 = select i1 %1, i32 15, i32 14, !dbg !6685
  %5 = select i1 %1, i32 17, i32 16, !dbg !6685
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !6685
  call void @llvm.dbg.value(metadata i32 %6, metadata !6681, metadata !DIExpression()), !dbg !6682
  ret i32 %6, !dbg !6686
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6691, metadata !DIExpression()), !dbg !6693
  %2 = icmp eq i32 %0, 0, !dbg !6694
  %3 = icmp eq i32 %0, 1, !dbg !6694
  %4 = select i1 %3, i32 1, i32 2, !dbg !6694
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6694
  call void @llvm.dbg.value(metadata i32 %5, metadata !6692, metadata !DIExpression()), !dbg !6693
  %6 = icmp ult i32 %5, 2, !dbg !6695
  br i1 %6, label %7, label %9, !dbg !6697

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #18, !dbg !6698
  br label %9, !dbg !6700

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !6701
  ret i8 %10, !dbg !6702
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6707, metadata !DIExpression()), !dbg !6709
  %2 = icmp eq i32 %0, 0, !dbg !6710
  %3 = icmp eq i32 %0, 1, !dbg !6710
  %4 = select i1 %3, i32 1, i32 2, !dbg !6710
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6710
  call void @llvm.dbg.value(metadata i32 %5, metadata !6708, metadata !DIExpression()), !dbg !6709
  %6 = icmp ult i32 %5, 2, !dbg !6711
  br i1 %6, label %7, label %9, !dbg !6713

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #18, !dbg !6714
  br label %9, !dbg !6716

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !6717
  ret i32 %10, !dbg !6718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6723, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.value(metadata i8* %1, metadata !6724, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.value(metadata i32 %2, metadata !6725, metadata !DIExpression()), !dbg !6728
  %4 = icmp eq i32 %0, 0, !dbg !6729
  %5 = icmp eq i32 %0, 1, !dbg !6729
  %6 = select i1 %5, i32 1, i32 2, !dbg !6729
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6729
  call void @llvm.dbg.value(metadata i32 %7, metadata !6726, metadata !DIExpression()), !dbg !6728
  %8 = icmp eq i8* %1, null, !dbg !6730
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6732
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6732
  call void @llvm.dbg.value(metadata i32 0, metadata !6727, metadata !DIExpression()), !dbg !6728
  br i1 %12, label %19, label %13, !dbg !6732

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6727, metadata !DIExpression()), !dbg !6728
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #18, !dbg !6733
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6739
  store i8 %15, i8* %16, align 1, !dbg !6740
  %17 = add nuw i32 %14, 1, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %17, metadata !6727, metadata !DIExpression()), !dbg !6728
  %18 = icmp eq i32 %17, %2, !dbg !6742
  br i1 %18, label %19, label %13, !dbg !6743, !llvm.loop !6744

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6728
  ret i32 %20, !dbg !6746
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6747 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6749, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %1, metadata !6750, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %2, metadata !6751, metadata !DIExpression()), !dbg !6755
  %5 = bitcast i32* %4 to i8*, !dbg !6756
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6756
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6757
  br i1 %6, label %7, label %20, !dbg !6759

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !6760
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !6762
  br i1 %10, label %20, label %11, !dbg !6762

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6763, !range !6423
  call void @llvm.dbg.value(metadata i32* %4, metadata !6752, metadata !DIExpression(DW_OP_deref)), !dbg !6755
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #18, !dbg !6764
  %13 = load i32, i32* %4, align 4, !dbg !6765
  call void @llvm.dbg.value(metadata i32 %13, metadata !6752, metadata !DIExpression()), !dbg !6755
  %14 = icmp ult i32 %13, %2, !dbg !6767
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !6753, metadata !DIExpression()), !dbg !6755
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #18, !dbg !6768
  %16 = load i32, i32* %4, align 4, !dbg !6769
  call void @llvm.dbg.value(metadata i32 %16, metadata !6752, metadata !DIExpression()), !dbg !6755
  %17 = icmp eq i32 %15, %16, !dbg !6771
  br i1 %17, label %18, label %20, !dbg !6772

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #20, !dbg !6773, !range !6671
  call void @llvm.dbg.value(metadata i32 %19, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #18, !dbg !6775
  br label %20, !dbg !6776

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !6755
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6777
  ret i32 %21, !dbg !6777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6778 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6780, metadata !DIExpression()), !dbg !6782
  %3 = bitcast i32* %2 to i8*, !dbg !6783
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6783
  call void @llvm.dbg.value(metadata i32 0, metadata !6781, metadata !DIExpression()), !dbg !6782
  store i32 0, i32* %2, align 4, !dbg !6784
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6785
  br i1 %4, label %5, label %8, !dbg !6787

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6788, !range !6423
  call void @llvm.dbg.value(metadata i32* %2, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6782
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #18, !dbg !6789
  %7 = load i32, i32* %2, align 4, !dbg !6790
  call void @llvm.dbg.value(metadata i32 %7, metadata !6781, metadata !DIExpression()), !dbg !6782
  br label %8, !dbg !6791

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6782
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6792
  ret i32 %9, !dbg !6792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6793 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6795, metadata !DIExpression()), !dbg !6797
  %3 = bitcast i32* %2 to i8*, !dbg !6798
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6798
  call void @llvm.dbg.value(metadata i32 0, metadata !6796, metadata !DIExpression()), !dbg !6797
  store i32 0, i32* %2, align 4, !dbg !6799
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6800
  br i1 %4, label %5, label %8, !dbg !6802

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6803, !range !6423
  call void @llvm.dbg.value(metadata i32* %2, metadata !6796, metadata !DIExpression(DW_OP_deref)), !dbg !6797
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #18, !dbg !6804
  %7 = load i32, i32* %2, align 4, !dbg !6805
  call void @llvm.dbg.value(metadata i32 %7, metadata !6796, metadata !DIExpression()), !dbg !6797
  br label %8, !dbg !6806

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6797
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6807
  ret i32 %9, !dbg !6807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6812, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6813, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata i8* %2, metadata !6814, metadata !DIExpression()), !dbg !6816
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6817
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6819
  br i1 %6, label %7, label %24, !dbg !6819

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !6820
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !6821
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !6822
  store i8* %2, i8** %9, align 4, !dbg !6823
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !6824
  store i8 1, i8* %10, align 4, !dbg !6825
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6826
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #20, !dbg !6827
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #18, !dbg !6828
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #18, !dbg !6829
  %13 = icmp eq i32 %11, 0, !dbg !6830
  br i1 %13, label %14, label %15, !dbg !6832

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #18, !dbg !6833
  br label %16, !dbg !6835

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #18, !dbg !6836
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #20, !dbg !6838, !range !6671
  call void @llvm.dbg.value(metadata i32 %17, metadata !6815, metadata !DIExpression()), !dbg !6816
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #18, !dbg !6839
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6840
  store i8 1, i8* %18, align 1, !dbg !6841
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6842
  %20 = load i32, i32* %19, align 4, !dbg !6842
  %21 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %20, void (i32)* noundef nonnull @uart_interrupt_handler) #18, !dbg !6843
  tail call void @uart_unmask_send_interrupt(i32 noundef %11) #18, !dbg !6844
  %22 = load i32, i32* %19, align 4, !dbg !6845
  %23 = tail call i32 @hal_nvic_enable_irq(i32 noundef %22) #18, !dbg !6846
  br label %24, !dbg !6847

24:                                               ; preds = %3, %16
  %25 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !6816
  ret i32 %25, !dbg !6848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #7 !dbg !751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !757, metadata !DIExpression()), !dbg !6849
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !6850
  %3 = load void ()*, void ()** %2, align 4, !dbg !6850
  ret void ()* %3, !dbg !6851
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #0 !dbg !6852 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6858, !range !2479
  %2 = icmp eq i8 %1, 0, !dbg !6858
  br i1 %2, label %8, label %3, !dbg !6859

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6860
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6862
  br i1 %5, label %8, label %6, !dbg !6863

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6864
  tail call void %4(i32 noundef 2, i8* noundef %7) #18, !dbg !6866
  br label %8, !dbg !6867

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #20, !dbg !6868, !range !6423
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #20, !dbg !6869
  ret void, !dbg !6870
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #0 !dbg !6871 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6876, !range !2479
  %2 = icmp eq i8 %1, 0, !dbg !6876
  br i1 %2, label %8, label %3, !dbg !6877

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6878
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6880
  br i1 %5, label %8, label %6, !dbg !6881

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6882
  tail call void %4(i32 noundef 2, i8* noundef %7) #18, !dbg !6884
  br label %8, !dbg !6885

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #20, !dbg !6886, !range !6423
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #20, !dbg !6887
  ret void, !dbg !6888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #0 !dbg !6889 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6893, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i1 %1, metadata !6894, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6900
  %5 = bitcast i32* %3 to i8*, !dbg !6901
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6901
  %6 = bitcast i32* %4 to i8*, !dbg !6901
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6901
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6897, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6900
  br i1 %1, label %7, label %12, !dbg !6902

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6897, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6900
  call void @llvm.dbg.value(metadata i32* %3, metadata !6895, metadata !DIExpression(DW_OP_deref)), !dbg !6900
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #18, !dbg !6903
  %8 = load i32, i32* %3, align 4, !dbg !6906
  call void @llvm.dbg.value(metadata i32 %8, metadata !6895, metadata !DIExpression()), !dbg !6900
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !6908
  %10 = load i32, i32* %9, align 4, !dbg !6908
  %11 = icmp ult i32 %8, %10, !dbg !6909
  br i1 %11, label %22, label %20, !dbg !6910

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !6896, metadata !DIExpression(DW_OP_deref)), !dbg !6900
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #18, !dbg !6911
  %13 = load i32, i32* %4, align 4, !dbg !6913
  call void @llvm.dbg.value(metadata i32 %13, metadata !6896, metadata !DIExpression()), !dbg !6900
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6915
  %15 = load i32, i32* %14, align 4, !dbg !6915
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !6916
  %17 = load i32, i32* %16, align 4, !dbg !6916
  %18 = sub i32 %15, %17, !dbg !6917
  %19 = icmp ult i32 %13, %18, !dbg !6918
  br i1 %19, label %22, label %20, !dbg !6919

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #20, !dbg !6920, !range !6671
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #18, !dbg !6920
  br label %22, !dbg !6921

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6921
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6921
  ret void, !dbg !6921
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #0 !dbg !6922 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6927, !range !2479
  %2 = icmp eq i8 %1, 0, !dbg !6927
  br i1 %2, label %11, label %3, !dbg !6928

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #20, !dbg !6929
  %5 = icmp eq i32 %4, 0, !dbg !6930
  br i1 %5, label %11, label %6, !dbg !6931

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6932
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6934
  br i1 %8, label %11, label %9, !dbg !6935

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6936
  tail call void %7(i32 noundef 1, i8* noundef %10) #18, !dbg !6938
  br label %11, !dbg !6939

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #20, !dbg !6940, !range !6423
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #20, !dbg !6941
  ret void, !dbg !6942
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #0 !dbg !6943 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6948, !range !2479
  %2 = icmp eq i8 %1, 0, !dbg !6948
  br i1 %2, label %11, label %3, !dbg !6949

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #20, !dbg !6950
  %5 = icmp eq i32 %4, 0, !dbg !6951
  br i1 %5, label %11, label %6, !dbg !6952

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6953
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6955
  br i1 %8, label %11, label %9, !dbg !6956

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6957
  tail call void %7(i32 noundef 1, i8* noundef %10) #18, !dbg !6959
  br label %11, !dbg !6960

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #20, !dbg !6961, !range !6423
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #20, !dbg !6962
  ret void, !dbg !6963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6968, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.value(metadata i32 %1, metadata !6969, metadata !DIExpression()), !dbg !6970
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6971
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !6973
  br i1 %5, label %6, label %10, !dbg !6973

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6974
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !6975
  store i32 %1, i32* %8, align 4, !dbg !6976
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %7) #20, !dbg !6977
  br label %10, !dbg !6978

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !6970
  ret i32 %11, !dbg !6979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #0 !dbg !6980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6986, metadata !DIExpression()), !dbg !6988
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6987, metadata !DIExpression()), !dbg !6988
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6989
  br i1 %3, label %4, label %28, !dbg !6991

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #20, !dbg !6992
  br i1 %5, label %6, label %28, !dbg !6994

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6995
  store i8 1, i8* %7, align 4, !dbg !6996
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !6997
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !6998
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !6999
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #18, !dbg !7000
  tail call void @DMA_Init() #18, !dbg !7001
  tail call void @DMA_Vfifo_init() #18, !dbg !7002
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !7003
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !7004
  %14 = load i8*, i8** %13, align 4, !dbg !7004
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !7005
  %16 = load i32, i32* %15, align 4, !dbg !7005
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !7006
  %18 = load i32, i32* %17, align 4, !dbg !7006
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !7007
  %20 = load i32, i32* %19, align 4, !dbg !7007
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #20, !dbg !7008
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #18, !dbg !7009
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !7010
  %23 = load i8*, i8** %22, align 4, !dbg !7010
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !7011
  %25 = load i32, i32* %24, align 4, !dbg !7011
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !7012
  %27 = load i32, i32* %26, align 4, !dbg !7012
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #18, !dbg !7013
  br label %28, !dbg !7014

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !6988
  ret i32 %29, !dbg !7015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #9 !dbg !7016 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !7020, metadata !DIExpression()), !dbg !7021
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !7022
  br i1 %2, label %27, label %3, !dbg !7024

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !7025
  %5 = load i8*, i8** %4, align 4, !dbg !7025
  %6 = icmp eq i8* %5, null, !dbg !7027
  br i1 %6, label %27, label %7, !dbg !7028

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !7029
  %9 = load i32, i32* %8, align 4, !dbg !7029
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !7031
  %11 = load i32, i32* %10, align 4, !dbg !7031
  %12 = icmp ult i32 %9, %11, !dbg !7032
  br i1 %12, label %27, label %13, !dbg !7033

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !7034
  %15 = load i32, i32* %14, align 4, !dbg !7034
  %16 = icmp ult i32 %9, %15, !dbg !7036
  br i1 %16, label %27, label %17, !dbg !7037

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !7038
  %19 = load i8*, i8** %18, align 4, !dbg !7038
  %20 = icmp eq i8* %19, null, !dbg !7040
  br i1 %20, label %27, label %21, !dbg !7041

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !7042
  %23 = load i32, i32* %22, align 4, !dbg !7042
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !7044
  %25 = load i32, i32* %24, align 4, !dbg !7044
  %26 = icmp uge i32 %23, %25, !dbg !7045
  br label %27, !dbg !7046

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !7021
  ret i1 %28, !dbg !7047
}

; Function Attrs: optsize
declare dso_local void @DMA_Init() local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #0 !dbg !7048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7050, metadata !DIExpression()), !dbg !7052
  %2 = tail call i32 @top_mcu_freq_get() #18, !dbg !7053
  %3 = udiv i32 %2, 1000000, !dbg !7054
  call void @llvm.dbg.value(metadata i32 %3, metadata !7051, metadata !DIExpression()), !dbg !7052
  %4 = mul i32 %3, %0, !dbg !7055
  ret i32 %4, !dbg !7056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !7057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7059, metadata !DIExpression()), !dbg !7061
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !7062
  br i1 %2, label %3, label %8, !dbg !7064

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7065
  %5 = icmp eq i32 %0, 1, !dbg !7065
  %6 = select i1 %5, i32 1, i32 2, !dbg !7065
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7065
  call void @llvm.dbg.value(metadata i32 %7, metadata !7060, metadata !DIExpression()), !dbg !7061
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #18, !dbg !7066
  br label %8, !dbg !7067

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7061
  ret i32 %9, !dbg !7068
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !7069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7073, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i8 %1, metadata !7074, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i8 %2, metadata !7075, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i8 %3, metadata !7076, metadata !DIExpression()), !dbg !7078
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !7079
  br i1 %5, label %6, label %11, !dbg !7081

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !7082
  %8 = icmp eq i32 %0, 1, !dbg !7082
  %9 = select i1 %8, i32 1, i32 2, !dbg !7082
  %10 = select i1 %7, i32 0, i32 %9, !dbg !7082
  call void @llvm.dbg.value(metadata i32 %10, metadata !7077, metadata !DIExpression()), !dbg !7078
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #18, !dbg !7083
  br label %11, !dbg !7084

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !7078
  ret i32 %12, !dbg !7085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !7086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7088, metadata !DIExpression()), !dbg !7090
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !7091
  br i1 %2, label %3, label %8, !dbg !7093

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7094
  %5 = icmp eq i32 %0, 1, !dbg !7094
  %6 = select i1 %5, i32 1, i32 2, !dbg !7094
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7094
  call void @llvm.dbg.value(metadata i32 %7, metadata !7089, metadata !DIExpression()), !dbg !7090
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #18, !dbg !7095
  br label %8, !dbg !7096

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7090
  ret i32 %9, !dbg !7097
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7102, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i32 %1, metadata !7103, metadata !DIExpression()), !dbg !7104
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !7105
  br i1 %3, label %4, label %8, !dbg !7107

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !7108
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #20, !dbg !7110
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #18, !dbg !7110
  br label %8, !dbg !7111

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !7104
  ret i32 %9, !dbg !7111
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Set_timeout(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_reset() local_unnamed_addr #5 !dbg !7112 {
  store volatile i32 0, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !7113
  store volatile i32 0, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !7114
  store volatile i32 0, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !7115
  store volatile i32 0, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !7116
  store volatile i32 0, i32* inttoptr (i32 -536866784 to i32*), align 32, !dbg !7117
  store volatile i32 0, i32* inttoptr (i32 -536866768 to i32*), align 16, !dbg !7118
  store volatile i32 0, i32* inttoptr (i32 -536866752 to i32*), align 64, !dbg !7119
  store volatile i32 0, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !7120
  %1 = load volatile i32, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !7121
  %2 = and i32 %1, -16, !dbg !7121
  store volatile i32 %2, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !7121
  %3 = load volatile i32, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !7122
  %4 = and i32 %3, -16, !dbg !7122
  store volatile i32 %4, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !7122
  %5 = load volatile i32, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !7123
  %6 = and i32 %5, -16, !dbg !7123
  store volatile i32 %6, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !7123
  %7 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !7124
  %8 = and i32 %7, -16, !dbg !7124
  store volatile i32 %8, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !7124
  ret void, !dbg !7125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_init() local_unnamed_addr #5 !dbg !7126 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !7127
  %2 = and i32 %1, 1, !dbg !7129
  %3 = icmp eq i32 %2, 0, !dbg !7129
  br i1 %3, label %4, label %22, !dbg !7130

4:                                                ; preds = %0
  tail call void @hal_dwt_reset() #20, !dbg !7131
  %5 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !7133
  %6 = and i32 %5, 65536, !dbg !7135
  %7 = icmp eq i32 %6, 0, !dbg !7135
  br i1 %7, label %8, label %11, !dbg !7136

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !7137
  %10 = or i32 %9, 16842752, !dbg !7137
  store volatile i32 %10, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !7137
  br label %11, !dbg !7139

11:                                               ; preds = %8, %4
  %12 = load volatile i32, i32* inttoptr (i32 -536866816 to i32*), align 4096, !dbg !7140
  %13 = lshr i32 %12, 28, !dbg !7141
  store i32 %13, i32* @DWT_NUMCOMP, align 4, !dbg !7142
  %14 = load volatile i32, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !7143
  %15 = or i32 %14, 31, !dbg !7143
  store volatile i32 %15, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !7143
  %16 = load volatile i32, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !7144
  %17 = or i32 %16, 31, !dbg !7144
  store volatile i32 %17, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !7144
  %18 = load volatile i32, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !7145
  %19 = or i32 %18, 31, !dbg !7145
  store volatile i32 %19, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !7145
  %20 = load volatile i32, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !7146
  %21 = or i32 %20, 31, !dbg !7146
  store volatile i32 %21, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !7146
  br label %22, !dbg !7147

22:                                               ; preds = %11, %0
  ret void, !dbg !7148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dwt_request_watchpoint(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 !dbg !7149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7154, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata i32 %1, metadata !7155, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata i32 %2, metadata !7156, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.value(metadata i32 %3, metadata !7157, metadata !DIExpression()), !dbg !7159
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !7160
  %6 = and i32 %5, 1, !dbg !7162
  %7 = icmp eq i32 %6, 0, !dbg !7162
  br i1 %7, label %8, label %23, !dbg !7163

8:                                                ; preds = %4
  %9 = load i32, i32* @DWT_NUMCOMP, align 4, !dbg !7164
  %10 = icmp ugt i32 %9, %0, !dbg !7167
  %11 = and i32 %2, %1
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %12, %10, !dbg !7168
  br i1 %13, label %14, label %23, !dbg !7168

14:                                               ; preds = %8
  %15 = shl i32 %0, 2, !dbg !7169
  %16 = and i32 %15, 1073741820, !dbg !7169
  call void @llvm.dbg.value(metadata i32 %16, metadata !7158, metadata !DIExpression()), !dbg !7159
  %17 = getelementptr inbounds i32, i32* inttoptr (i32 -536866784 to i32*), i32 %16, !dbg !7170
  store volatile i32 %1, i32* %17, align 16, !dbg !7171
  %18 = getelementptr inbounds i32, i32* inttoptr (i32 -536866780 to i32*), i32 %16, !dbg !7172
  store volatile i32 %2, i32* %18, align 4, !dbg !7173
  %19 = getelementptr inbounds i32, i32* inttoptr (i32 -536866776 to i32*), i32 %16, !dbg !7174
  %20 = load volatile i32, i32* %19, align 8, !dbg !7175
  %21 = and i32 %20, 15, !dbg !7176
  %22 = or i32 %21, %3, !dbg !7177
  store volatile i32 %22, i32* %19, align 8, !dbg !7178
  br label %23, !dbg !7179

23:                                               ; preds = %4, %8, %14
  %24 = phi i32 [ 0, %14 ], [ -1, %8 ], [ -1, %4 ], !dbg !7180
  ret i32 %24, !dbg !7181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #7 !dbg !7182 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7186, metadata !DIExpression()), !dbg !7187
  ret i8 5, !dbg !7188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #7 !dbg !7189 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !7192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #7 !dbg !7193 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !7194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #7 !dbg !7195 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7197, metadata !DIExpression()), !dbg !7198
  ret i8 5, !dbg !7199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #7 !dbg !7200 {
  ret %struct.flash_info_t* null, !dbg !7203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_mode_init() local_unnamed_addr #5 !dbg !7204 {
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.gpio_mode_init.mode_temp, metadata !7207, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 0, metadata !7206, metadata !DIExpression()), !dbg !7210
  br label %1, !dbg !7211

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7206, metadata !DIExpression()), !dbg !7210
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.gpio_mode_init.mode_temp, i32 0, i32 %2, !dbg !7213
  %4 = load i32, i32* %3, align 4, !dbg !7213
  %5 = shl nuw nsw i32 %2, 2, !dbg !7213
  %6 = add nuw nsw i32 %5, -2130563040, !dbg !7213
  %7 = inttoptr i32 %6 to i32*, !dbg !7213
  store volatile i32 %4, i32* %7, align 4, !dbg !7213
  %8 = add nuw nsw i32 %2, 1, !dbg !7216
  call void @llvm.dbg.value(metadata i32 %8, metadata !7206, metadata !DIExpression()), !dbg !7210
  %9 = icmp eq i32 %8, 10, !dbg !7217
  br i1 %9, label %10, label %1, !dbg !7211, !llvm.loop !7218

10:                                               ; preds = %1
  ret void, !dbg !7220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_oe_init() local_unnamed_addr #5 !dbg !7221 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7226
  store volatile i32 -419430160, i32* inttoptr (i32 -2097106800 to i32*), align 16, !dbg !7227
  call void @llvm.dbg.value(metadata i32 1, metadata !7223, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i32 1, metadata !7223, metadata !DIExpression()), !dbg !7226
  store volatile i32 100663495, i32* inttoptr (i32 -2097106784 to i32*), align 32, !dbg !7227
  call void @llvm.dbg.value(metadata i32 2, metadata !7223, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i32 2, metadata !7223, metadata !DIExpression()), !dbg !7226
  store volatile i32 0, i32* inttoptr (i32 -2097106768 to i32*), align 16, !dbg !7227
  call void @llvm.dbg.value(metadata i32 3, metadata !7223, metadata !DIExpression()), !dbg !7226
  ret void, !dbg !7231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_ies_init() local_unnamed_addr #5 !dbg !7232 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7234, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i32 0, metadata !7234, metadata !DIExpression()), !dbg !7236
  store volatile i32 419430159, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !7237
  call void @llvm.dbg.value(metadata i32 1, metadata !7234, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i32 1, metadata !7234, metadata !DIExpression()), !dbg !7236
  store volatile i32 -100663496, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !7237
  call void @llvm.dbg.value(metadata i32 2, metadata !7234, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i32 2, metadata !7234, metadata !DIExpression()), !dbg !7236
  store volatile i32 511, i32* inttoptr (i32 -2097106680 to i32*), align 8, !dbg !7237
  call void @llvm.dbg.value(metadata i32 3, metadata !7234, metadata !DIExpression()), !dbg !7236
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7241
  %2 = and i32 %1, -3, !dbg !7241
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7241
  %3 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7242
  %4 = or i32 %3, 2, !dbg !7242
  store volatile i32 %4, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7242
  %5 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7243
  %6 = or i32 %5, 2048, !dbg !7243
  store volatile i32 %6, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7243
  %7 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7244
  %8 = and i32 %7, -3, !dbg !7244
  store volatile i32 %8, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7244
  %9 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7245
  %10 = or i32 %9, 2, !dbg !7245
  store volatile i32 %10, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7245
  %11 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7246
  %12 = or i32 %11, 2048, !dbg !7246
  store volatile i32 %12, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7246
  %13 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7247
  %14 = and i32 %13, -3, !dbg !7247
  store volatile i32 %14, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7247
  %15 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7248
  store volatile i32 %15, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7248
  %16 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7249
  %17 = or i32 %16, 2048, !dbg !7249
  store volatile i32 %17, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7249
  %18 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7250
  %19 = and i32 %18, -3, !dbg !7250
  store volatile i32 %19, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7250
  %20 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7251
  store volatile i32 %20, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7251
  %21 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7252
  %22 = or i32 %21, 2048, !dbg !7252
  store volatile i32 %22, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7252
  %23 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7253
  %24 = and i32 %23, -3, !dbg !7253
  store volatile i32 %24, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7253
  %25 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7254
  store volatile i32 %25, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7254
  %26 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7255
  %27 = or i32 %26, 2048, !dbg !7255
  store volatile i32 %27, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7255
  %28 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7256
  %29 = and i32 %28, -3, !dbg !7256
  store volatile i32 %29, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7256
  %30 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7257
  store volatile i32 %30, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7257
  %31 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7258
  %32 = or i32 %31, 2048, !dbg !7258
  store volatile i32 %32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7258
  ret void, !dbg !7259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_up_init() local_unnamed_addr #5 !dbg !7260 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7262, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i32 0, metadata !7262, metadata !DIExpression()), !dbg !7264
  store volatile i32 4, i32* inttoptr (i32 -2097106944 to i32*), align 4096, !dbg !7265
  call void @llvm.dbg.value(metadata i32 1, metadata !7262, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i32 1, metadata !7262, metadata !DIExpression()), !dbg !7264
  store volatile i32 16, i32* inttoptr (i32 -2097106928 to i32*), align 16, !dbg !7265
  call void @llvm.dbg.value(metadata i32 2, metadata !7262, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i32 2, metadata !7262, metadata !DIExpression()), !dbg !7264
  store volatile i32 0, i32* inttoptr (i32 -2097106912 to i32*), align 32, !dbg !7265
  call void @llvm.dbg.value(metadata i32 3, metadata !7262, metadata !DIExpression()), !dbg !7264
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7269
  %2 = and i32 %1, -29, !dbg !7269
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !7269
  %3 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7270
  %4 = and i32 %3, -29, !dbg !7270
  store volatile i32 %4, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !7270
  %5 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7271
  %6 = and i32 %5, -29, !dbg !7271
  store volatile i32 %6, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !7271
  %7 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7272
  %8 = and i32 %7, -29, !dbg !7272
  store volatile i32 %8, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !7272
  %9 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7273
  %10 = and i32 %9, -29, !dbg !7273
  store volatile i32 %10, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !7273
  %11 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7274
  %12 = and i32 %11, -29, !dbg !7274
  store volatile i32 %12, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !7274
  ret void, !dbg !7275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_down_init() local_unnamed_addr #5 !dbg !7276 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7278, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 0, metadata !7278, metadata !DIExpression()), !dbg !7280
  store volatile i32 16776960, i32* inttoptr (i32 -2097106896 to i32*), align 16, !dbg !7281
  call void @llvm.dbg.value(metadata i32 1, metadata !7278, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 1, metadata !7278, metadata !DIExpression()), !dbg !7280
  store volatile i32 -100663544, i32* inttoptr (i32 -2097106880 to i32*), align 64, !dbg !7281
  call void @llvm.dbg.value(metadata i32 2, metadata !7278, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 2, metadata !7278, metadata !DIExpression()), !dbg !7280
  store volatile i32 511, i32* inttoptr (i32 -2097106864 to i32*), align 16, !dbg !7281
  call void @llvm.dbg.value(metadata i32 3, metadata !7278, metadata !DIExpression()), !dbg !7280
  ret void, !dbg !7285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_output_init() local_unnamed_addr #5 !dbg !7286 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7288, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i32 0, metadata !7288, metadata !DIExpression()), !dbg !7290
  store volatile i32 64, i32* inttoptr (i32 -2097106848 to i32*), align 32, !dbg !7291
  call void @llvm.dbg.value(metadata i32 1, metadata !7288, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i32 1, metadata !7288, metadata !DIExpression()), !dbg !7290
  store volatile i32 64, i32* inttoptr (i32 -2097106832 to i32*), align 16, !dbg !7291
  call void @llvm.dbg.value(metadata i32 2, metadata !7288, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i32 2, metadata !7288, metadata !DIExpression()), !dbg !7290
  store volatile i32 0, i32* inttoptr (i32 -2097106816 to i32*), align 128, !dbg !7291
  call void @llvm.dbg.value(metadata i32 3, metadata !7288, metadata !DIExpression()), !dbg !7290
  ret void, !dbg !7295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_set_control_by_cm4() local_unnamed_addr #5 !dbg !7296 {
  store volatile i32 -1, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !7297
  store volatile i32 -1, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !7298
  store volatile i32 50397183, i32* inttoptr (i32 -2130571128 to i32*), align 8, !dbg !7299
  ret void, !dbg !7300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_setting_init() local_unnamed_addr #5 !dbg !7301 {
  tail call void @gpio_mode_init() #20, !dbg !7302
  tail call void @gpio_oe_init() #20, !dbg !7303
  tail call void @gpio_ies_init() #20, !dbg !7304
  tail call void @gpio_pull_up_init() #20, !dbg !7305
  tail call void @gpio_pull_down_init() #20, !dbg !7306
  tail call void @gpio_output_init() #20, !dbg !7307
  ret void, !dbg !7308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericCreate(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i16 noundef zeroext %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, i32* noundef %6, %struct.xMEMORY_REGION* nocapture readnone %7) local_unnamed_addr #0 !dbg !7309 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !7329, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8* %1, metadata !7330, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i16 %2, metadata !7331, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8* %3, metadata !7332, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32 %4, metadata !7333, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8** %5, metadata !7334, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i32* %6, metadata !7335, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !7336, metadata !DIExpression()), !dbg !7340
  %9 = icmp eq void (i8*)* %0, null, !dbg !7341
  br i1 %9, label %10, label %11, !dbg !7343

10:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 553) #18, !dbg !7344
  br label %11, !dbg !7344

11:                                               ; preds = %10, %8
  %12 = icmp ugt i32 %4, 19, !dbg !7346
  br i1 %12, label %13, label %14, !dbg !7348

13:                                               ; preds = %11
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 554) #18, !dbg !7349
  br label %14, !dbg !7349

14:                                               ; preds = %13, %11
  %15 = tail call fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %2, i32* noundef %6) #20, !dbg !7351
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %15, metadata !7338, metadata !DIExpression()), !dbg !7340
  %16 = icmp eq %struct.tskTaskControlBlock* %15, null, !dbg !7352
  br i1 %16, label %68, label %17, !dbg !7354

17:                                               ; preds = %14
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i16 %2), metadata !7339, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7340
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 4, !dbg !7355
  %19 = load i32*, i32** %18, align 4, !dbg !7355
  call void @llvm.dbg.value(metadata !DIArgList(i32* %19, i16 %2), metadata !7339, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7340
  %20 = zext i16 %2 to i32, !dbg !7358
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %20), metadata !7339, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7340
  %21 = add nsw i32 %20, -1, !dbg !7359
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %21), metadata !7339, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7340
  %22 = getelementptr inbounds i32, i32* %19, i32 %21, !dbg !7360
  call void @llvm.dbg.value(metadata i32* %22, metadata !7339, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7340
  %23 = ptrtoint i32* %22 to i32, !dbg !7361
  call void @llvm.dbg.value(metadata i32 %23, metadata !7339, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7340
  %24 = and i32 %23, -8, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %24, metadata !7339, metadata !DIExpression()), !dbg !7340
  %25 = inttoptr i32 %24 to i32*, !dbg !7363
  call void @llvm.dbg.value(metadata i32* %25, metadata !7339, metadata !DIExpression()), !dbg !7340
  tail call fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef nonnull %15, i8* noundef %1, i32 noundef %4) #20, !dbg !7364
  %26 = tail call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #18, !dbg !7365
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 0, !dbg !7367
  store i32* %26, i32** %27, align 4, !dbg !7368
  %28 = icmp eq i8** %5, null, !dbg !7369
  br i1 %28, label %31, label %29, !dbg !7371

29:                                               ; preds = %17
  %30 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !7372
  store %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** %30, align 4, !dbg !7372
  br label %31, !dbg !7374

31:                                               ; preds = %17, %29
  tail call void @vPortEnterCritical() #18, !dbg !7375
  %32 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7376
  %33 = add i32 %32, 1, !dbg !7376
  store volatile i32 %33, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7376
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7378
  %35 = icmp eq %struct.tskTaskControlBlock* %34, null, !dbg !7380
  br i1 %35, label %36, label %40, !dbg !7381

36:                                               ; preds = %31
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7382
  %37 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7384
  %38 = icmp eq i32 %37, 1, !dbg !7386
  br i1 %38, label %39, label %49, !dbg !7387

39:                                               ; preds = %36
  tail call fastcc void @prvInitialiseTaskLists() #20, !dbg !7388
  br label %49, !dbg !7390

40:                                               ; preds = %31
  %41 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7391
  %42 = icmp eq i32 %41, 0, !dbg !7394
  br i1 %42, label %43, label %49, !dbg !7395

43:                                               ; preds = %40
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7396
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !7399
  %46 = load i32, i32* %45, align 4, !dbg !7399
  %47 = icmp ugt i32 %46, %4, !dbg !7400
  br i1 %47, label %49, label %48, !dbg !7401

48:                                               ; preds = %43
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7402
  br label %49, !dbg !7404

49:                                               ; preds = %43, %48, %40, %39, %36
  %50 = load i32, i32* @uxTaskNumber, align 4, !dbg !7405
  %51 = add i32 %50, 1, !dbg !7405
  store i32 %51, i32* @uxTaskNumber, align 4, !dbg !7405
  %52 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 6, !dbg !7406
  store i32 %51, i32* %52, align 4, !dbg !7408
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !7409
  %54 = load i32, i32* %53, align 4, !dbg !7409
  %55 = shl nuw i32 1, %54, !dbg !7409
  %56 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7409
  %57 = or i32 %56, %55, !dbg !7409
  store volatile i32 %57, i32* @uxTopReadyPriority, align 4, !dbg !7409
  %58 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %54, !dbg !7409
  %59 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 1, !dbg !7409
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %58, %struct.xLIST_ITEM* noundef nonnull %59) #18, !dbg !7409
  call void @llvm.dbg.value(metadata i32 1, metadata !7337, metadata !DIExpression()), !dbg !7340
  tail call void @vPortExitCritical() #18, !dbg !7410
  %60 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7411
  %61 = icmp eq i32 %60, 0, !dbg !7415
  br i1 %61, label %68, label %62, !dbg !7416

62:                                               ; preds = %49
  %63 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7417
  %64 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %63, i32 0, i32 3, !dbg !7420
  %65 = load i32, i32* %64, align 4, !dbg !7420
  %66 = icmp ult i32 %65, %4, !dbg !7421
  br i1 %66, label %67, label %68, !dbg !7422

67:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7423
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7423, !srcloc !7426
  tail call void asm sideeffect "isb", ""() #17, !dbg !7423, !srcloc !7427
  br label %68, !dbg !7428

68:                                               ; preds = %14, %62, %67, %49
  %69 = phi i32 [ 1, %62 ], [ 1, %67 ], [ 1, %49 ], [ -1, %14 ]
  ret i32 %69, !dbg !7429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %0, i32* noundef %1) unnamed_addr #0 !dbg !7430 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7434, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32* %1, metadata !7435, metadata !DIExpression()), !dbg !7439
  %3 = icmp eq i32* %1, null, !dbg !7440
  br i1 %3, label %4, label %8, !dbg !7440

4:                                                ; preds = %2
  %5 = zext i16 %0 to i32, !dbg !7440
  %6 = shl nuw nsw i32 %5, 2, !dbg !7440
  %7 = tail call i8* @pvPortMalloc(i32 noundef %6) #18, !dbg !7440
  br label %10, !dbg !7440

8:                                                ; preds = %2
  %9 = bitcast i32* %1 to i8*, !dbg !7440
  br label %10, !dbg !7440

10:                                               ; preds = %8, %4
  %11 = phi i8* [ %7, %4 ], [ %9, %8 ], !dbg !7440
  call void @llvm.dbg.value(metadata i8* %11, metadata !7437, metadata !DIExpression()), !dbg !7441
  %12 = icmp eq i8* %11, null, !dbg !7442
  br i1 %12, label %24, label %13, !dbg !7444

13:                                               ; preds = %10
  %14 = tail call i8* @pvPortMalloc(i32 noundef 84) #18, !dbg !7445
  call void @llvm.dbg.value(metadata i8* %14, metadata !7436, metadata !DIExpression()), !dbg !7439
  %15 = icmp eq i8* %14, null, !dbg !7447
  br i1 %15, label %16, label %17, !dbg !7449

16:                                               ; preds = %13
  tail call void @vPortFree(i8* noundef nonnull %11) #18, !dbg !7450
  br label %24

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8* %14, metadata !7436, metadata !DIExpression()), !dbg !7439
  %18 = getelementptr inbounds i8, i8* %14, i32 48, !dbg !7452
  %19 = bitcast i8* %18 to i8**, !dbg !7454
  store i8* %11, i8** %19, align 4, !dbg !7454
  %20 = bitcast i8* %14 to %struct.tskTaskControlBlock*, !dbg !7455
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %20, metadata !7436, metadata !DIExpression()), !dbg !7439
  %21 = zext i16 %0 to i32, !dbg !7456
  %22 = shl nuw nsw i32 %21, 2, !dbg !7460
  %23 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 165, i32 noundef %22) #18, !dbg !7461
  br label %24, !dbg !7462

24:                                               ; preds = %10, %16, %17
  %25 = phi %struct.tskTaskControlBlock* [ %20, %17 ], [ null, %16 ], [ null, %10 ]
  ret %struct.tskTaskControlBlock* %25, !dbg !7463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 !dbg !7464 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !7469, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i8* %1, metadata !7470, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i32 %2, metadata !7471, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !7472, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i16 undef, metadata !7473, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i32 0, metadata !7474, metadata !DIExpression()), !dbg !7475
  br label %4, !dbg !7476

4:                                                ; preds = %4, %3
  %5 = phi i32 [ 0, %3 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7474, metadata !DIExpression()), !dbg !7475
  %6 = getelementptr inbounds i8, i8* %1, i32 %5, !dbg !7478
  %7 = load i8, i8* %6, align 1, !dbg !7478
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 %5, !dbg !7481
  store i8 %7, i8* %8, align 1, !dbg !7482
  %9 = load i8, i8* %6, align 1, !dbg !7483
  %10 = icmp eq i8 %9, 0, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %5, metadata !7474, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7475
  %11 = add nuw nsw i32 %5, 1
  %12 = icmp eq i32 %11, 6
  %13 = select i1 %10, i1 true, i1 %12, !dbg !7486
  call void @llvm.dbg.value(metadata i32 %11, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i32 %5, metadata !7474, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7475
  br i1 %13, label %14, label %4, !dbg !7486, !llvm.loop !7487

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 5, !dbg !7489
  store i8 0, i8* %15, align 1, !dbg !7490
  %16 = icmp ult i32 %2, 19, !dbg !7491
  %17 = select i1 %16, i32 %2, i32 19, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %17, metadata !7471, metadata !DIExpression()), !dbg !7475
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !7492
  store i32 %17, i32* %18, align 4, !dbg !7493
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !7494
  store i32 %17, i32* %19, align 4, !dbg !7496
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !7497
  store i32 0, i32* %20, align 4, !dbg !7498
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !7499
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !7500
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !7501
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !7502
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 3, !dbg !7503
  %24 = bitcast i8** %23 to %struct.tskTaskControlBlock**, !dbg !7503
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %24, align 4, !dbg !7503
  %25 = sub nuw nsw i32 20, %17, !dbg !7504
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 0, !dbg !7504
  store i32 %25, i32* %26, align 4, !dbg !7504
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 3, !dbg !7505
  %28 = bitcast i8** %27 to %struct.tskTaskControlBlock**, !dbg !7505
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %28, align 4, !dbg !7505
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !7506
  store volatile i32 0, i32* %29, align 4, !dbg !7508
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !7509
  store volatile i32 0, i32* %30, align 4, !dbg !7510
  ret void, !dbg !7511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #0 !dbg !7512 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7514, metadata !DIExpression()), !dbg !7515
  br label %1, !dbg !7516

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7514, metadata !DIExpression()), !dbg !7515
  %3 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !7518
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #18, !dbg !7521
  %4 = add nuw nsw i32 %2, 1, !dbg !7522
  call void @llvm.dbg.value(metadata i32 %4, metadata !7514, metadata !DIExpression()), !dbg !7515
  %5 = icmp eq i32 %4, 20, !dbg !7523
  br i1 %5, label %6, label %1, !dbg !7516, !llvm.loop !7524

6:                                                ; preds = %1
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #18, !dbg !7526
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #18, !dbg !7527
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #18, !dbg !7528
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xTasksWaitingTermination) #18, !dbg !7529
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xSuspendedTaskList) #18, !dbg !7531
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7533
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7534
  ret void, !dbg !7535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !7536 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7540, metadata !DIExpression()), !dbg !7542
  tail call void @vPortEnterCritical() #18, !dbg !7543
  %2 = icmp eq i8* %0, null, !dbg !7544
  br i1 %2, label %3, label %5, !dbg !7544

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7544
  br label %7, !dbg !7544

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7544
  br label %7, !dbg !7544

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !7544
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !7541, metadata !DIExpression()), !dbg !7542
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !7546
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !7548
  %11 = icmp eq i32 %10, 0, !dbg !7549
  br i1 %11, label %12, label %23, !dbg !7550

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !7551
  %14 = load i32, i32* %13, align 4, !dbg !7551
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !7551
  %16 = load i32, i32* %15, align 4, !dbg !7551
  %17 = icmp eq i32 %16, 0, !dbg !7551
  br i1 %17, label %18, label %23, !dbg !7555

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !7556
  %20 = xor i32 %19, -1, !dbg !7556
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7556
  %22 = and i32 %21, %20, !dbg !7556
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !7556
  br label %23, !dbg !7556

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !7558
  %25 = load i8*, i8** %24, align 4, !dbg !7558
  %26 = icmp eq i8* %25, null, !dbg !7560
  br i1 %26, label %30, label %27, !dbg !7561

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !7558
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !7562
  br label %30, !dbg !7564

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !7565
  %31 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !7566
  %32 = add i32 %31, 1, !dbg !7566
  store volatile i32 %32, i32* @uxTasksDeleted, align 4, !dbg !7566
  %33 = load i32, i32* @uxTaskNumber, align 4, !dbg !7567
  %34 = add i32 %33, 1, !dbg !7567
  store i32 %34, i32* @uxTaskNumber, align 4, !dbg !7567
  tail call void @vPortExitCritical() #18, !dbg !7568
  %35 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7569
  %36 = icmp eq i32 %35, 0, !dbg !7571
  br i1 %36, label %46, label %37, !dbg !7572

37:                                               ; preds = %30
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7573
  %39 = icmp eq %struct.tskTaskControlBlock* %8, %38, !dbg !7576
  br i1 %39, label %40, label %45, !dbg !7577

40:                                               ; preds = %37
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7578
  %42 = icmp eq i32 %41, 0, !dbg !7578
  br i1 %42, label %44, label %43, !dbg !7581

43:                                               ; preds = %40
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 794) #18, !dbg !7582
  br label %44, !dbg !7582

44:                                               ; preds = %43, %40
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7584
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7584, !srcloc !7586
  tail call void asm sideeffect "isb", ""() #17, !dbg !7584, !srcloc !7587
  br label %46, !dbg !7588

45:                                               ; preds = %37
  tail call void @vPortEnterCritical() #18, !dbg !7589
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !7591
  tail call void @vPortExitCritical() #18, !dbg !7593
  br label %46

46:                                               ; preds = %44, %45, %30
  ret void, !dbg !7594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #5 !dbg !7595 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7598
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !7598
  %3 = load i32, i32* %2, align 4, !dbg !7598
  %4 = icmp eq i32 %3, 0, !dbg !7598
  br i1 %4, label %14, label %5, !dbg !7600

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7601
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !7601
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !7601
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !7601
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !7601
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !7601
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !7597, metadata !DIExpression()), !dbg !7603
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !7604
  %13 = load i32, i32* %12, align 4, !dbg !7604
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !7605
  ret void, !dbg !7606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelayUntil(i32* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7607 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7614, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.value(metadata i32 %1, metadata !7615, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.value(metadata i32 0, metadata !7618, metadata !DIExpression()), !dbg !7621
  %3 = icmp eq i32* %0, null, !dbg !7622
  br i1 %3, label %4, label %5, !dbg !7624

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 827) #18, !dbg !7625
  br label %5, !dbg !7625

5:                                                ; preds = %4, %2
  %6 = icmp eq i32 %1, 0, !dbg !7627
  br i1 %6, label %7, label %8, !dbg !7629

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 828) #18, !dbg !7630
  br label %8, !dbg !7630

8:                                                ; preds = %7, %5
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7632
  %10 = icmp eq i32 %9, 0, !dbg !7632
  br i1 %10, label %12, label %11, !dbg !7634

11:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 829) #18, !dbg !7635
  br label %12, !dbg !7635

12:                                               ; preds = %11, %8
  tail call void @vTaskSuspendAll() #20, !dbg !7637
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !7638
  call void @llvm.dbg.value(metadata i32 %13, metadata !7619, metadata !DIExpression()), !dbg !7639
  %14 = load i32, i32* %0, align 4, !dbg !7640
  %15 = add i32 %14, %1, !dbg !7641
  call void @llvm.dbg.value(metadata i32 %15, metadata !7616, metadata !DIExpression()), !dbg !7621
  %16 = icmp ult i32 %13, %14, !dbg !7642
  %17 = icmp ult i32 %15, %14, !dbg !7644
  %18 = icmp ugt i32 %15, %13
  br i1 %16, label %19, label %21, !dbg !7645

19:                                               ; preds = %12
  %20 = select i1 %17, i1 %18, i1 false, !dbg !7646
  br i1 %20, label %24, label %23, !dbg !7646

21:                                               ; preds = %12
  %22 = select i1 %17, i1 true, i1 %18, !dbg !7649
  br i1 %22, label %24, label %23, !dbg !7649

23:                                               ; preds = %21, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !7618, metadata !DIExpression()), !dbg !7621
  store i32 %15, i32* %0, align 4, !dbg !7652
  br label %38, !dbg !7653

24:                                               ; preds = %19, %21
  store i32 %15, i32* %0, align 4, !dbg !7652
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7654
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 1, !dbg !7658
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #18, !dbg !7659
  %28 = icmp eq i32 %27, 0, !dbg !7660
  br i1 %28, label %29, label %37, !dbg !7661

29:                                               ; preds = %24
  %30 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7662
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %30, i32 0, i32 3, !dbg !7662
  %32 = load i32, i32* %31, align 4, !dbg !7662
  %33 = shl nuw i32 1, %32, !dbg !7662
  %34 = xor i32 %33, -1, !dbg !7662
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7662
  %36 = and i32 %35, %34, !dbg !7662
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !7662
  br label %37, !dbg !7664

37:                                               ; preds = %24, %29
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %15) #20, !dbg !7665
  br label %38, !dbg !7666

38:                                               ; preds = %23, %37
  %39 = tail call i32 @xTaskResumeAll() #20, !dbg !7667
  call void @llvm.dbg.value(metadata i32 %39, metadata !7617, metadata !DIExpression()), !dbg !7621
  %40 = icmp eq i32 %39, 0, !dbg !7668
  br i1 %40, label %41, label %42, !dbg !7670

41:                                               ; preds = %38
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7671
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7671, !srcloc !7674
  tail call void asm sideeffect "isb", ""() #17, !dbg !7671, !srcloc !7675
  br label %42, !dbg !7676

42:                                               ; preds = %38, %41
  ret void, !dbg !7677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskSuspendAll() local_unnamed_addr #5 !dbg !7678 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7679
  %2 = add i32 %1, 1, !dbg !7679
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !7679
  ret void, !dbg !7680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #0 !dbg !7681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7685, metadata !DIExpression()), !dbg !7686
  %2 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7687
  %3 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, i32 0, !dbg !7687
  store i32 %0, i32* %3, align 4, !dbg !7687
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !7688
  %5 = icmp ugt i32 %4, %0, !dbg !7690
  br i1 %5, label %6, label %10, !dbg !7691

6:                                                ; preds = %1
  %7 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7692
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7694
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !7695
  tail call void @vListInsert(%struct.xLIST* noundef %7, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !7696
  br label %17, !dbg !7697

10:                                               ; preds = %1
  %11 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7698
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7700
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !7701
  tail call void @vListInsert(%struct.xLIST* noundef %11, %struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !7702
  %14 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !7703
  %15 = icmp ugt i32 %14, %0, !dbg !7705
  br i1 %15, label %16, label %17, !dbg !7706

16:                                               ; preds = %10
  store volatile i32 %0, i32* @xNextTaskUnblockTime, align 4, !dbg !7707
  br label %17, !dbg !7709

17:                                               ; preds = %16, %10, %6
  ret void, !dbg !7710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #0 !dbg !7711 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7716, metadata !DIExpression()), !dbg !7717
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7718
  %2 = icmp eq i32 %1, 0, !dbg !7718
  br i1 %2, label %3, label %4, !dbg !7720

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12.106, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1673) #18, !dbg !7721
  br label %4, !dbg !7721

4:                                                ; preds = %3, %0
  tail call void @vPortEnterCritical() #18, !dbg !7723
  %5 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7724
  %6 = add i32 %5, -1, !dbg !7724
  store volatile i32 %6, i32* @uxSchedulerSuspended, align 4, !dbg !7724
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7726
  %8 = icmp eq i32 %7, 0, !dbg !7728
  br i1 %8, label %9, label %58, !dbg !7729

9:                                                ; preds = %4
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7730
  %11 = icmp eq i32 %10, 0, !dbg !7733
  br i1 %11, label %58, label %12, !dbg !7734

12:                                               ; preds = %9
  %13 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !7735
  %14 = icmp eq i32 %13, 0, !dbg !7735
  br i1 %14, label %39, label %15, !dbg !7737

15:                                               ; preds = %12, %36
  %16 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !7738
  %17 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %16, i32 0, i32 3, !dbg !7738
  %18 = bitcast i8** %17 to %struct.tskTaskControlBlock**, !dbg !7738
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %18, align 4, !dbg !7738
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %19, metadata !7715, metadata !DIExpression()), !dbg !7717
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 2, !dbg !7740
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #18, !dbg !7741
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !7742
  %23 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !7743
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 3, !dbg !7744
  %25 = load i32, i32* %24, align 4, !dbg !7744
  %26 = shl nuw i32 1, %25, !dbg !7744
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7744
  %28 = or i32 %27, %26, !dbg !7744
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !7744
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !7744
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !7744
  %30 = load i32, i32* %24, align 4, !dbg !7745
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7747
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 3, !dbg !7748
  %33 = load i32, i32* %32, align 4, !dbg !7748
  %34 = icmp ult i32 %30, %33, !dbg !7749
  br i1 %34, label %36, label %35, !dbg !7750

35:                                               ; preds = %15
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !7751
  br label %36, !dbg !7753

36:                                               ; preds = %15, %35
  %37 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !7735
  %38 = icmp eq i32 %37, 0, !dbg !7735
  br i1 %38, label %39, label %15, !dbg !7737, !llvm.loop !7754

39:                                               ; preds = %36, %12
  %40 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7756
  %41 = icmp eq i32 %40, 0, !dbg !7758
  br i1 %41, label %54, label %42, !dbg !7759

42:                                               ; preds = %39
  %43 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7760
  %44 = icmp eq i32 %43, 0, !dbg !7762
  br i1 %44, label %54, label %45, !dbg !7763

45:                                               ; preds = %42, %49
  %46 = tail call i32 @xTaskIncrementTick() #20, !dbg !7764
  %47 = icmp eq i32 %46, 0, !dbg !7767
  br i1 %47, label %49, label %48, !dbg !7768

48:                                               ; preds = %45
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !7769
  br label %49, !dbg !7771

49:                                               ; preds = %45, %48
  %50 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7772
  %51 = add i32 %50, -1, !dbg !7772
  store volatile i32 %51, i32* @uxPendedTicks, align 4, !dbg !7772
  %52 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7760
  %53 = icmp eq i32 %52, 0, !dbg !7762
  br i1 %53, label %54, label %45, !dbg !7763, !llvm.loop !7773

54:                                               ; preds = %49, %42, %39
  %55 = load volatile i32, i32* @xYieldPending, align 4, !dbg !7775
  %56 = icmp eq i32 %55, 1, !dbg !7777
  br i1 %56, label %57, label %58, !dbg !7778

57:                                               ; preds = %54
  call void @llvm.dbg.value(metadata i32 1, metadata !7716, metadata !DIExpression()), !dbg !7717
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7779
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7779, !srcloc !7782
  tail call void asm sideeffect "isb", ""() #17, !dbg !7779, !srcloc !7783
  br label %58, !dbg !7784

58:                                               ; preds = %4, %9, %54, %57
  %59 = phi i32 [ 1, %57 ], [ 0, %54 ], [ 0, %9 ], [ 0, %4 ], !dbg !7717
  call void @llvm.dbg.value(metadata i32 %59, metadata !7716, metadata !DIExpression()), !dbg !7717
  tail call void @vPortExitCritical() #18, !dbg !7785
  ret i32 %59, !dbg !7786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #0 !dbg !7787 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7791, metadata !DIExpression()), !dbg !7800
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7801
  %2 = icmp eq i32 %1, 0, !dbg !7802
  br i1 %2, label %3, label %76, !dbg !7803

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !7804
  %5 = add i32 %4, 1, !dbg !7804
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !7804
  %6 = load volatile i32, i32* @xTickCount, align 4, !dbg !7805
  call void @llvm.dbg.value(metadata i32 %6, metadata !7792, metadata !DIExpression()), !dbg !7806
  %7 = icmp eq i32 %6, 0, !dbg !7807
  br i1 %7, label %8, label %19, !dbg !7808

8:                                                ; preds = %3
  %9 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7809
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %9, i32 0, i32 0, !dbg !7809
  %11 = load i32, i32* %10, align 4, !dbg !7809
  %12 = icmp eq i32 %11, 0, !dbg !7809
  br i1 %12, label %14, label %13, !dbg !7811

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1957) #18, !dbg !7812
  br label %14, !dbg !7812

14:                                               ; preds = %13, %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7811
  call void @llvm.dbg.value(metadata %struct.xLIST* %15, metadata !7796, metadata !DIExpression()), !dbg !7814
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7811
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7811
  store volatile %struct.xLIST* %15, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7811
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !7811
  %18 = add nsw i32 %17, 1, !dbg !7811
  store volatile i32 %18, i32* @xNumOfOverflows, align 4, !dbg !7811
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !7811
  br label %19, !dbg !7815

19:                                               ; preds = %3, %14
  %20 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !7816
  %21 = icmp ult i32 %6, %20, !dbg !7818
  br i1 %21, label %67, label %22, !dbg !7819

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !7791, metadata !DIExpression()), !dbg !7800
  %23 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7820
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %23, i32 0, i32 0, !dbg !7820
  %25 = load i32, i32* %24, align 4, !dbg !7820
  %26 = icmp eq i32 %25, 0, !dbg !7820
  br i1 %26, label %64, label %27, !dbg !7826

27:                                               ; preds = %22, %47
  %28 = phi i32 [ %59, %47 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !7791, metadata !DIExpression()), !dbg !7800
  %29 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7827
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %29, i32 0, i32 2, i32 1, !dbg !7827
  %31 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %30, align 4, !dbg !7827
  %32 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 3, !dbg !7827
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !7827
  %34 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %33, align 4, !dbg !7827
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %34, metadata !7789, metadata !DIExpression()), !dbg !7800
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !7829
  %36 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %35, i32 0, i32 0, !dbg !7829
  %37 = load i32, i32* %36, align 4, !dbg !7829
  call void @llvm.dbg.value(metadata i32 %37, metadata !7790, metadata !DIExpression()), !dbg !7800
  %38 = icmp ult i32 %6, %37, !dbg !7830
  br i1 %38, label %64, label %39, !dbg !7832

39:                                               ; preds = %27
  %40 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !7833
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, i32 4, !dbg !7834
  %42 = load i8*, i8** %41, align 4, !dbg !7834
  %43 = icmp eq i8* %42, null, !dbg !7836
  br i1 %43, label %47, label %44, !dbg !7837

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, !dbg !7834
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !7838
  br label %47, !dbg !7840

47:                                               ; preds = %39, %44
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 3, !dbg !7841
  %49 = load i32, i32* %48, align 4, !dbg !7841
  %50 = shl nuw i32 1, %49, !dbg !7841
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7841
  %52 = or i32 %51, %50, !dbg !7841
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !7841
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !7841
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !7841
  %54 = load i32, i32* %48, align 4, !dbg !7842
  %55 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7845
  %56 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %55, i32 0, i32 3, !dbg !7846
  %57 = load i32, i32* %56, align 4, !dbg !7846
  %58 = icmp ult i32 %54, %57, !dbg !7847
  %59 = select i1 %58, i32 %28, i32 1, !dbg !7848
  call void @llvm.dbg.value(metadata i32 %59, metadata !7791, metadata !DIExpression()), !dbg !7800
  %60 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7820
  %61 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %60, i32 0, i32 0, !dbg !7820
  %62 = load i32, i32* %61, align 4, !dbg !7820
  %63 = icmp eq i32 %62, 0, !dbg !7820
  br i1 %63, label %64, label %27, !dbg !7826, !llvm.loop !7849

64:                                               ; preds = %27, %47, %22
  %65 = phi i32 [ -1, %22 ], [ -1, %47 ], [ %37, %27 ]
  %66 = phi i32 [ 0, %22 ], [ %59, %47 ], [ %28, %27 ]
  store volatile i32 %65, i32* @xNextTaskUnblockTime, align 4, !dbg !7852
  br label %67, !dbg !7853

67:                                               ; preds = %64, %19
  %68 = phi i32 [ 0, %19 ], [ %66, %64 ], !dbg !7856
  call void @llvm.dbg.value(metadata i32 %68, metadata !7791, metadata !DIExpression()), !dbg !7800
  %69 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7853
  %70 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %69, i32 0, i32 3, !dbg !7853
  %71 = load i32, i32* %70, align 4, !dbg !7853
  %72 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %71, i32 0, !dbg !7853
  %73 = load i32, i32* %72, align 4, !dbg !7853
  %74 = icmp ugt i32 %73, 1, !dbg !7857
  %75 = select i1 %74, i32 1, i32 %68, !dbg !7858
  br label %79, !dbg !7858

76:                                               ; preds = %0
  %77 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7859
  %78 = add i32 %77, 1, !dbg !7859
  store volatile i32 %78, i32* @uxPendedTicks, align 4, !dbg !7859
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi i32 [ 0, %76 ], [ %75, %67 ], !dbg !7800
  call void @llvm.dbg.value(metadata i32 %80, metadata !7791, metadata !DIExpression()), !dbg !7800
  %81 = load volatile i32, i32* @xYieldPending, align 4, !dbg !7861
  %82 = icmp eq i32 %81, 0, !dbg !7864
  %83 = select i1 %82, i32 %80, i32 1, !dbg !7865
  call void @llvm.dbg.value(metadata i32 %83, metadata !7791, metadata !DIExpression()), !dbg !7800
  ret i32 %83, !dbg !7866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #0 !dbg !7867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7869, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i32 0, metadata !7871, metadata !DIExpression()), !dbg !7872
  %2 = icmp eq i32 %0, 0, !dbg !7873
  br i1 %2, label %25, label %3, !dbg !7875

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7876
  %5 = icmp eq i32 %4, 0, !dbg !7876
  br i1 %5, label %7, label %6, !dbg !7879

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 927) #18, !dbg !7880
  br label %7, !dbg !7880

7:                                                ; preds = %6, %3
  tail call void @vTaskSuspendAll() #20, !dbg !7882
  %8 = load volatile i32, i32* @xTickCount, align 4, !dbg !7883
  %9 = add i32 %8, %0, !dbg !7885
  call void @llvm.dbg.value(metadata i32 %9, metadata !7870, metadata !DIExpression()), !dbg !7872
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7886
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 1, !dbg !7888
  %12 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %11) #18, !dbg !7889
  %13 = icmp eq i32 %12, 0, !dbg !7890
  br i1 %13, label %14, label %22, !dbg !7891

14:                                               ; preds = %7
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7892
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !7892
  %17 = load i32, i32* %16, align 4, !dbg !7892
  %18 = shl nuw i32 1, %17, !dbg !7892
  %19 = xor i32 %18, -1, !dbg !7892
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7892
  %21 = and i32 %20, %19, !dbg !7892
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !7892
  br label %22, !dbg !7894

22:                                               ; preds = %7, %14
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %9) #20, !dbg !7895
  %23 = tail call i32 @xTaskResumeAll() #20, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %23, metadata !7871, metadata !DIExpression()), !dbg !7872
  %24 = icmp eq i32 %23, 0, !dbg !7897
  call void @llvm.dbg.value(metadata i32 undef, metadata !7871, metadata !DIExpression()), !dbg !7872
  br i1 %24, label %25, label %26, !dbg !7898

25:                                               ; preds = %1, %22
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7899
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7899, !srcloc !7903
  tail call void asm sideeffect "isb", ""() #17, !dbg !7899, !srcloc !7904
  br label %26, !dbg !7905

26:                                               ; preds = %22, %25
  ret void, !dbg !7906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eTaskGetState(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7912, metadata !DIExpression()), !dbg !7919
  %2 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7920
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %2, metadata !7915, metadata !DIExpression()), !dbg !7919
  %3 = icmp eq i8* %0, null, !dbg !7921
  br i1 %3, label %4, label %5, !dbg !7923

4:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 990) #18, !dbg !7924
  br label %5, !dbg !7924

5:                                                ; preds = %4, %1
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7926
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %2, !dbg !7928
  br i1 %7, label %28, label %8, !dbg !7929

8:                                                ; preds = %5
  tail call void @vPortEnterCritical() #18, !dbg !7930
  %9 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7932
  %10 = bitcast i8* %9 to %struct.xLIST**, !dbg !7932
  %11 = load %struct.xLIST*, %struct.xLIST** %10, align 4, !dbg !7932
  call void @llvm.dbg.value(metadata %struct.xLIST* %11, metadata !7914, metadata !DIExpression()), !dbg !7919
  tail call void @vPortExitCritical() #18, !dbg !7934
  %12 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7935
  %13 = icmp eq %struct.xLIST* %11, %12, !dbg !7937
  br i1 %13, label %28, label %14, !dbg !7938

14:                                               ; preds = %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7939
  %16 = icmp eq %struct.xLIST* %11, %15, !dbg !7940
  br i1 %16, label %28, label %17, !dbg !7941

17:                                               ; preds = %14
  %18 = icmp eq %struct.xLIST* %11, @xSuspendedTaskList, !dbg !7942
  br i1 %18, label %19, label %25, !dbg !7944

19:                                               ; preds = %17
  %20 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !7945
  %21 = bitcast i8* %20 to i8**, !dbg !7945
  %22 = load i8*, i8** %21, align 4, !dbg !7945
  %23 = icmp eq i8* %22, null, !dbg !7948
  %24 = select i1 %23, i32 3, i32 2
  br label %28

25:                                               ; preds = %17
  %26 = icmp eq %struct.xLIST* %11, @xTasksWaitingTermination, !dbg !7949
  %27 = select i1 %26, i32 4, i32 1
  br label %28

28:                                               ; preds = %25, %19, %8, %14, %5
  %29 = phi i32 [ 0, %5 ], [ 2, %14 ], [ 2, %8 ], [ %24, %19 ], [ %27, %25 ], !dbg !7951
  call void @llvm.dbg.value(metadata i32 %29, metadata !7913, metadata !DIExpression()), !dbg !7919
  ret i32 %29, !dbg !7952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGet(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7953 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7957, metadata !DIExpression()), !dbg !7960
  tail call void @vPortEnterCritical() #18, !dbg !7961
  %2 = icmp eq i8* %0, null, !dbg !7962
  br i1 %2, label %3, label %5, !dbg !7962

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7962
  br label %7, !dbg !7962

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7962
  br label %7, !dbg !7962

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !7962
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !7958, metadata !DIExpression()), !dbg !7960
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !7964
  %10 = load i32, i32* %9, align 4, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %10, metadata !7959, metadata !DIExpression()), !dbg !7960
  tail call void @vPortExitCritical() #18, !dbg !7965
  ret i32 %10, !dbg !7966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGetFromISR(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7969, metadata !DIExpression()), !dbg !7973
  tail call void @vPortValidateInterruptPriority() #18, !dbg !7974
  %2 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !7975, !srcloc !7981
  call void @llvm.dbg.value(metadata i32 undef, metadata !7978, metadata !DIExpression()) #17, !dbg !7982
  call void @llvm.dbg.value(metadata i32 undef, metadata !7979, metadata !DIExpression()) #17, !dbg !7982
  call void @llvm.dbg.value(metadata i32 undef, metadata !7972, metadata !DIExpression()), !dbg !7973
  %3 = icmp eq i8* %0, null, !dbg !7983
  br i1 %3, label %4, label %6, !dbg !7983

4:                                                ; preds = %1
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7983
  br label %8, !dbg !7983

6:                                                ; preds = %1
  %7 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7983
  br label %8, !dbg !7983

8:                                                ; preds = %6, %4
  %9 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %7, %6 ], !dbg !7983
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !7975
  call void @llvm.dbg.value(metadata i32 %10, metadata !7978, metadata !DIExpression()) #17, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %10, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %9, metadata !7970, metadata !DIExpression()), !dbg !7973
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !7985
  %12 = load i32, i32* %11, align 4, !dbg !7985
  call void @llvm.dbg.value(metadata i32 %12, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 undef, metadata !7986, metadata !DIExpression()) #17, !dbg !7989
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %10) #17, !dbg !7991, !srcloc !7992
  ret i32 %12, !dbg !7993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPrioritySet(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7998, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i32 %1, metadata !7999, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i32 0, metadata !8003, metadata !DIExpression()), !dbg !8004
  %3 = icmp ugt i32 %1, 19, !dbg !8005
  br i1 %3, label %4, label %5, !dbg !8007

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1122) #18, !dbg !8008
  br label %5, !dbg !8008

5:                                                ; preds = %4, %2
  %6 = icmp ult i32 %1, 19, !dbg !8010
  %7 = select i1 %6, i32 %1, i32 19, !dbg !8010
  call void @llvm.dbg.value(metadata i32 %7, metadata !7999, metadata !DIExpression()), !dbg !8004
  tail call void @vPortEnterCritical() #18, !dbg !8011
  %8 = icmp eq i8* %0, null, !dbg !8012
  br i1 %8, label %9, label %11, !dbg !8012

9:                                                ; preds = %5
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8012
  br label %13, !dbg !8012

11:                                               ; preds = %5
  %12 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8012
  br label %13, !dbg !8012

13:                                               ; preds = %11, %9
  %14 = phi %struct.tskTaskControlBlock* [ %10, %9 ], [ %12, %11 ], !dbg !8012
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %14, metadata !8000, metadata !DIExpression()), !dbg !8004
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 8, !dbg !8014
  %16 = load i32, i32* %15, align 4, !dbg !8014
  call void @llvm.dbg.value(metadata i32 %16, metadata !8001, metadata !DIExpression()), !dbg !8004
  %17 = icmp eq i32 %16, %7, !dbg !8016
  br i1 %17, label %64, label %18, !dbg !8018

18:                                               ; preds = %13
  %19 = icmp ule i32 %7, %16, !dbg !8019
  %20 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8022
  %21 = icmp eq %struct.tskTaskControlBlock* %14, %20, !dbg !8022
  %22 = select i1 %19, i1 true, i1 %21, !dbg !8023
  %23 = select i1 %19, i1 %21, i1 false, !dbg !8023
  br i1 %22, label %29, label %24, !dbg !8023

24:                                               ; preds = %18
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8024
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !8029
  %27 = load i32, i32* %26, align 4, !dbg !8029
  %28 = icmp uge i32 %7, %27, !dbg !8030
  br label %29, !dbg !8031

29:                                               ; preds = %18, %24
  %30 = phi i1 [ %28, %24 ], [ %23, %18 ], !dbg !8004
  call void @llvm.dbg.value(metadata i32 undef, metadata !8003, metadata !DIExpression()), !dbg !8004
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !8032
  %32 = load i32, i32* %31, align 4, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %32, metadata !8002, metadata !DIExpression()), !dbg !8004
  %33 = icmp eq i32 %16, %32, !dbg !8033
  br i1 %33, label %34, label %35, !dbg !8036

34:                                               ; preds = %29
  store i32 %7, i32* %31, align 4, !dbg !8037
  br label %35, !dbg !8039

35:                                               ; preds = %29, %34
  store i32 %7, i32* %15, align 4, !dbg !8040
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, i32 0, !dbg !8041
  %37 = load i32, i32* %36, align 4, !dbg !8041
  %38 = icmp sgt i32 %37, -1, !dbg !8043
  br i1 %38, label %39, label %41, !dbg !8044

39:                                               ; preds = %35
  %40 = sub nuw nsw i32 20, %7, !dbg !8045
  store i32 %40, i32* %36, align 4, !dbg !8045
  br label %41, !dbg !8047

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, !dbg !8048
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, i32 4, !dbg !8048
  %44 = load i8*, i8** %43, align 4, !dbg !8048
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !8048
  %46 = bitcast %struct.xLIST* %45 to i8*, !dbg !8048
  %47 = icmp eq i8* %44, %46, !dbg !8048
  br i1 %47, label %48, label %62, !dbg !8050

48:                                               ; preds = %41
  %49 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %42) #18, !dbg !8051
  %50 = icmp eq i32 %49, 0, !dbg !8054
  br i1 %50, label %51, label %56, !dbg !8055

51:                                               ; preds = %48
  %52 = shl nuw i32 1, %32, !dbg !8056
  %53 = xor i32 %52, -1, !dbg !8056
  %54 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8056
  %55 = and i32 %54, %53, !dbg !8056
  store volatile i32 %55, i32* @uxTopReadyPriority, align 4, !dbg !8056
  br label %56, !dbg !8058

56:                                               ; preds = %48, %51
  %57 = load i32, i32* %31, align 4, !dbg !8059
  %58 = shl nuw i32 1, %57, !dbg !8059
  %59 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8059
  %60 = or i32 %59, %58, !dbg !8059
  store volatile i32 %60, i32* @uxTopReadyPriority, align 4, !dbg !8059
  %61 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %57, !dbg !8059
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %61, %struct.xLIST_ITEM* noundef nonnull %42) #18, !dbg !8059
  br label %62, !dbg !8060

62:                                               ; preds = %41, %56
  br i1 %30, label %63, label %64, !dbg !8061

63:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8062
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8062, !srcloc !8066
  tail call void asm sideeffect "isb", ""() #17, !dbg !8062, !srcloc !8067
  br label %64, !dbg !8068

64:                                               ; preds = %63, %62, %13
  tail call void @vPortExitCritical() #18, !dbg !8069
  ret void, !dbg !8070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspend(i8* noundef %0) local_unnamed_addr #0 !dbg !8071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8073, metadata !DIExpression()), !dbg !8075
  tail call void @vPortEnterCritical() #18, !dbg !8076
  %2 = icmp eq i8* %0, null, !dbg !8077
  br i1 %2, label %3, label %5, !dbg !8077

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8077
  br label %7, !dbg !8077

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8077
  br label %7, !dbg !8077

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8077
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8074, metadata !DIExpression()), !dbg !8075
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8079
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8081
  %11 = icmp eq i32 %10, 0, !dbg !8082
  br i1 %11, label %12, label %23, !dbg !8083

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !8084
  %14 = load i32, i32* %13, align 4, !dbg !8084
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !8084
  %16 = load i32, i32* %15, align 4, !dbg !8084
  %17 = icmp eq i32 %16, 0, !dbg !8084
  br i1 %17, label %18, label %23, !dbg !8088

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !8089
  %20 = xor i32 %19, -1, !dbg !8089
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8089
  %22 = and i32 %21, %20, !dbg !8089
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !8089
  br label %23, !dbg !8089

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !8091
  %25 = load i8*, i8** %24, align 4, !dbg !8091
  %26 = icmp eq i8* %25, null, !dbg !8093
  br i1 %26, label %30, label %27, !dbg !8094

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !8091
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !8095
  br label %30, !dbg !8097

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8098
  tail call void @vPortExitCritical() #18, !dbg !8099
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8100
  %32 = icmp eq %struct.tskTaskControlBlock* %8, %31, !dbg !8102
  %33 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8103
  %34 = icmp eq i32 %33, 0, !dbg !8103
  br i1 %32, label %35, label %47, !dbg !8104

35:                                               ; preds = %30
  br i1 %34, label %41, label %36, !dbg !8105

36:                                               ; preds = %35
  %37 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8107
  %38 = icmp eq i32 %37, 0, !dbg !8107
  br i1 %38, label %40, label %39, !dbg !8111

39:                                               ; preds = %36
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1322) #18, !dbg !8112
  br label %40, !dbg !8112

40:                                               ; preds = %39, %36
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8114
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8114, !srcloc !8116
  tail call void asm sideeffect "isb", ""() #17, !dbg !8114, !srcloc !8117
  br label %49, !dbg !8118

41:                                               ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0), align 4, !dbg !8119
  %43 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8122
  %44 = icmp eq i32 %42, %43, !dbg !8123
  br i1 %44, label %45, label %46, !dbg !8124

45:                                               ; preds = %41
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8125
  br label %49, !dbg !8127

46:                                               ; preds = %41
  tail call void @vTaskSwitchContext() #20, !dbg !8128
  br label %49

47:                                               ; preds = %30
  br i1 %34, label %49, label %48, !dbg !8130

48:                                               ; preds = %47
  tail call void @vPortEnterCritical() #18, !dbg !8132
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !8135
  tail call void @vPortExitCritical() #18, !dbg !8137
  br label %49, !dbg !8138

49:                                               ; preds = %48, %47, %40, %46, %45
  ret void, !dbg !8139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSwitchContext() local_unnamed_addr #0 !dbg !926 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8140
  %2 = icmp eq i32 %1, 0, !dbg !8141
  br i1 %2, label %4, label %3, !dbg !8142

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8143
  br label %62, !dbg !8145

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !8146
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !8147
  %6 = and i32 %5, 1, !dbg !8147
  %7 = icmp eq i32 %6, 0, !dbg !8147
  br i1 %7, label %21, label %8, !dbg !8150

8:                                                ; preds = %4
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8151
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 0, !dbg !8151
  %11 = load i32*, i32** %10, align 4, !dbg !8151
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8151
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 4, !dbg !8151
  %14 = load i32*, i32** %13, align 4, !dbg !8151
  %15 = icmp ugt i32* %11, %14, !dbg !8151
  br i1 %15, label %21, label %16, !dbg !8154

16:                                               ; preds = %8
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8155
  %18 = bitcast %struct.tskTaskControlBlock* %17 to i8*, !dbg !8155
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8155
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 5, i32 0, !dbg !8155
  tail call void @vApplicationStackOverflowHook(i8* noundef %18, i8* noundef nonnull %20) #18, !dbg !8155
  br label %21, !dbg !8155

21:                                               ; preds = %8, %16, %4
  %22 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !8157
  %23 = and i32 %22, 1, !dbg !8157
  %24 = icmp eq i32 %23, 0, !dbg !8157
  br i1 %24, label %37, label %25, !dbg !8160

25:                                               ; preds = %21
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8161
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 4, !dbg !8161
  %28 = bitcast i32** %27 to i8**, !dbg !8161
  %29 = load i8*, i8** %28, align 4, !dbg !8161
  %30 = tail call i32 @memcmp(i8* noundef %29, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @vTaskSwitchContext.ucExpectedStackBytes, i32 0, i32 0), i32 noundef 20) #18, !dbg !8161
  %31 = icmp eq i32 %30, 0, !dbg !8161
  br i1 %31, label %37, label %32, !dbg !8164

32:                                               ; preds = %25
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8165
  %34 = bitcast %struct.tskTaskControlBlock* %33 to i8*, !dbg !8165
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8165
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 5, i32 0, !dbg !8165
  tail call void @vApplicationStackOverflowHook(i8* noundef %34, i8* noundef nonnull %36) #18, !dbg !8165
  br label %37, !dbg !8165

37:                                               ; preds = %25, %32, %21
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8167
  call void @llvm.dbg.value(metadata i32 %38, metadata !8168, metadata !DIExpression()) #17, !dbg !8174
  %39 = tail call i8 asm sideeffect "clz $0, $1", "=r,r"(i32 %38) #17, !dbg !8176, !srcloc !8177
  call void @llvm.dbg.value(metadata i8 %39, metadata !8173, metadata !DIExpression()) #17, !dbg !8174
  %40 = zext i8 %39 to i32, !dbg !8167
  %41 = sub nsw i32 31, %40, !dbg !8167
  call void @llvm.dbg.value(metadata i32 %41, metadata !928, metadata !DIExpression()), !dbg !8178
  %42 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 0, !dbg !8179
  %43 = load i32, i32* %42, align 4, !dbg !8179
  %44 = icmp eq i32 %43, 0, !dbg !8179
  br i1 %44, label %45, label %46, !dbg !8167

45:                                               ; preds = %37
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.14.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2244) #18, !dbg !8181
  br label %46, !dbg !8181

46:                                               ; preds = %45, %37
  call void @llvm.dbg.value(metadata !DIArgList([20 x %struct.xLIST]* @pxReadyTasksLists, i32 %41), metadata !932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8183
  %47 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 1, !dbg !8184
  %48 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %47, align 4, !dbg !8184
  %49 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %48, i32 0, i32 1, !dbg !8184
  %50 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %49, align 4, !dbg !8184
  store %struct.xLIST_ITEM* %50, %struct.xLIST_ITEM** %47, align 4, !dbg !8184
  %51 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 2, !dbg !8185
  %52 = bitcast %struct.xMINI_LIST_ITEM* %51 to %struct.xLIST_ITEM*, !dbg !8185
  %53 = icmp eq %struct.xLIST_ITEM* %50, %52, !dbg !8185
  br i1 %53, label %54, label %57, !dbg !8184

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %50, i32 0, i32 1, !dbg !8187
  %56 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %55, align 4, !dbg !8187
  store %struct.xLIST_ITEM* %56, %struct.xLIST_ITEM** %47, align 4, !dbg !8187
  br label %57, !dbg !8187

57:                                               ; preds = %54, %46
  %58 = phi %struct.xLIST_ITEM* [ %56, %54 ], [ %50, %46 ], !dbg !8184
  %59 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %58, i32 0, i32 3, !dbg !8184
  %60 = bitcast i8** %59 to %struct.tskTaskControlBlock**, !dbg !8184
  %61 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %60, align 4, !dbg !8184
  store volatile %struct.tskTaskControlBlock* %61, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8184
  br label %62

62:                                               ; preds = %57, %3
  ret void, !dbg !8189
}

; Function Attrs: optsize
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskResume(i8* noundef %0) local_unnamed_addr #0 !dbg !8190 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i8* %0, metadata !8193, metadata !DIExpression()), !dbg !8194
  %2 = icmp eq i8* %0, null, !dbg !8195
  br i1 %2, label %3, label %4, !dbg !8195

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1420) #18, !dbg !8196
  br label %29, !dbg !8199

4:                                                ; preds = %1
  %5 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8201
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %5, metadata !8193, metadata !DIExpression()), !dbg !8194
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8202
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %5, !dbg !8203
  br i1 %7, label %29, label %8, !dbg !8204

8:                                                ; preds = %4
  tail call void @vPortEnterCritical() #18, !dbg !8205
  %9 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef nonnull %0) #20, !dbg !8207
  %10 = icmp eq i32 %9, 1, !dbg !8210
  br i1 %10, label %11, label %28, !dbg !8211

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8212
  %13 = bitcast i8* %12 to %struct.xLIST_ITEM*, !dbg !8212
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !8214
  %15 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8215
  %16 = bitcast i8* %15 to i32*, !dbg !8215
  %17 = load i32, i32* %16, align 4, !dbg !8215
  %18 = shl nuw i32 1, %17, !dbg !8215
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8215
  %20 = or i32 %19, %18, !dbg !8215
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !8215
  %21 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %17, !dbg !8215
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %21, %struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !8215
  %22 = load i32, i32* %16, align 4, !dbg !8216
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8218
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 3, !dbg !8219
  %25 = load i32, i32* %24, align 4, !dbg !8219
  %26 = icmp ult i32 %22, %25, !dbg !8220
  br i1 %26, label %28, label %27, !dbg !8221

27:                                               ; preds = %11
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8222
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8222, !srcloc !8225
  tail call void asm sideeffect "isb", ""() #17, !dbg !8222, !srcloc !8226
  br label %28, !dbg !8227

28:                                               ; preds = %8, %27, %11
  tail call void @vPortExitCritical() #18, !dbg !8228
  br label %29, !dbg !8229

29:                                               ; preds = %3, %4, %28
  ret void, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvTaskIsTaskSuspended(i8* noundef readonly %0) unnamed_addr #0 !dbg !8231 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8236, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.value(metadata i32 0, metadata !8237, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.value(metadata i8* %0, metadata !8238, metadata !DIExpression()), !dbg !8239
  %2 = icmp eq i8* %0, null, !dbg !8240
  br i1 %2, label %3, label %4, !dbg !8242

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1378) #18, !dbg !8243
  br label %4, !dbg !8243

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8245
  %6 = bitcast i8* %5 to i8**, !dbg !8245
  %7 = load i8*, i8** %6, align 4, !dbg !8245
  %8 = icmp eq i8* %7, bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), !dbg !8245
  br i1 %8, label %9, label %15, !dbg !8247

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !8248
  %11 = bitcast i8* %10 to i8**, !dbg !8248
  %12 = load i8*, i8** %11, align 4, !dbg !8248
  %13 = icmp eq i8* %12, null
  %14 = zext i1 %13 to i32, !dbg !8251
  br label %15, !dbg !8251

15:                                               ; preds = %9, %4
  %16 = phi i32 [ 0, %4 ], [ %14, %9 ], !dbg !8239
  call void @llvm.dbg.value(metadata i32 %16, metadata !8237, metadata !DIExpression()), !dbg !8239
  ret i32 %16, !dbg !8252
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !8253 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8257, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i32 0, metadata !8258, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i8* %0, metadata !8259, metadata !DIExpression()), !dbg !8261
  %2 = icmp eq i8* %0, null, !dbg !8262
  br i1 %2, label %3, label %4, !dbg !8264

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1475) #18, !dbg !8265
  br label %4, !dbg !8265

4:                                                ; preds = %3, %1
  tail call void @vPortValidateInterruptPriority() #18, !dbg !8267
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !8268, !srcloc !7981
  call void @llvm.dbg.value(metadata i32 undef, metadata !7978, metadata !DIExpression()) #17, !dbg !8270
  call void @llvm.dbg.value(metadata i32 undef, metadata !7979, metadata !DIExpression()) #17, !dbg !8270
  call void @llvm.dbg.value(metadata i32 undef, metadata !8260, metadata !DIExpression()), !dbg !8261
  %6 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef %0) #20, !dbg !8271
  %7 = icmp eq i32 %6, 1, !dbg !8274
  br i1 %7, label %8, label %31, !dbg !8275

8:                                                ; preds = %4
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8276
  %10 = icmp eq i32 %9, 0, !dbg !8279
  br i1 %10, label %11, label %28, !dbg !8280

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8281
  %13 = bitcast i8* %12 to i32*, !dbg !8281
  %14 = load i32, i32* %13, align 4, !dbg !8281
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8284
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !8285
  %17 = load i32, i32* %16, align 4, !dbg !8285
  %18 = icmp uge i32 %14, %17, !dbg !8286
  %19 = zext i1 %18 to i32, !dbg !8287
  call void @llvm.dbg.value(metadata i32 %19, metadata !8258, metadata !DIExpression()), !dbg !8261
  %20 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8288
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !8288
  %22 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !8289
  %23 = load i32, i32* %13, align 4, !dbg !8290
  %24 = shl nuw i32 1, %23, !dbg !8290
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8290
  %26 = or i32 %25, %24, !dbg !8290
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !8290
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !8290
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !8290
  br label %31, !dbg !8291

28:                                               ; preds = %8
  %29 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8292
  %30 = bitcast i8* %29 to %struct.xLIST_ITEM*, !dbg !8292
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %30) #18, !dbg !8294
  br label %31

31:                                               ; preds = %4, %11, %28
  %32 = phi i32 [ %19, %11 ], [ 0, %28 ], [ 0, %4 ], !dbg !8261
  %33 = extractvalue { i32, i32 } %5, 0, !dbg !8268
  call void @llvm.dbg.value(metadata i32 %33, metadata !7978, metadata !DIExpression()) #17, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %33, metadata !8260, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i32 %32, metadata !8258, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i32 undef, metadata !7986, metadata !DIExpression()) #17, !dbg !8295
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #17, !dbg !8297, !srcloc !7992
  ret i32 %32, !dbg !8298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskStartScheduler() local_unnamed_addr #0 !dbg !8299 {
  %1 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.112, i32 0, i32 0), i16 noundef zeroext 256, i8* noundef null, i32 noundef 0, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* undef) #20, !dbg !8302
  call void @llvm.dbg.value(metadata i32 %1, metadata !8301, metadata !DIExpression()), !dbg !8304
  %2 = icmp eq i32 %1, 1, !dbg !8305
  br i1 %2, label %3, label %5, !dbg !8308

3:                                                ; preds = %0
  %4 = tail call i32 @xTimerCreateTimerTask() #18, !dbg !8309
  call void @llvm.dbg.value(metadata i32 %4, metadata !8301, metadata !DIExpression()), !dbg !8304
  br label %5, !dbg !8311

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !8304
  call void @llvm.dbg.value(metadata i32 %6, metadata !8301, metadata !DIExpression()), !dbg !8304
  switch i32 %6, label %11 [
    i32 1, label %7
    i32 0, label %10
  ], !dbg !8312

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !8313, !srcloc !8320
  call void @llvm.dbg.value(metadata i32 %8, metadata !8316, metadata !DIExpression()) #17, !dbg !8321
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !8322
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !8323
  %9 = tail call i32 @xPortStartScheduler() #18, !dbg !8324
  br label %11, !dbg !8326

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1612) #18, !dbg !8327
  br label %11, !dbg !8327

11:                                               ; preds = %5, %10, %7
  ret void, !dbg !8331
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #12 !dbg !8332 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8334, metadata !DIExpression()), !dbg !8335
  br label %2, !dbg !8336

2:                                                ; preds = %5, %1
  tail call fastcc void @prvCheckTasksWaitingTermination() #20, !dbg !8337
  %3 = load i32, i32* getelementptr inbounds ([20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0), align 4, !dbg !8341
  %4 = icmp ugt i32 %3, 1, !dbg !8344
  br i1 %4, label %6, label %5, !dbg !8345

5:                                                ; preds = %2, %6
  br label %2, !dbg !8337, !llvm.loop !8346

6:                                                ; preds = %2
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8349
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8349, !srcloc !8352
  tail call void asm sideeffect "isb", ""() #17, !dbg !8349, !srcloc !8353
  br label %5, !dbg !8354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #0 !dbg !8355 {
  %1 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8363
  %2 = icmp eq i32 %1, 0, !dbg !8364
  br i1 %2, label %21, label %3, !dbg !8365

3:                                                ; preds = %0, %18
  tail call void @vTaskSuspendAll() #20, !dbg !8366
  %4 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 0), align 4, !dbg !8367
  %5 = icmp eq i32 %4, 0, !dbg !8367
  call void @llvm.dbg.value(metadata i1 %5, metadata !8357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8369
  %6 = tail call i32 @xTaskResumeAll() #20, !dbg !8370
  br i1 %5, label %18, label %7, !dbg !8371

7:                                                ; preds = %3
  tail call void @vPortEnterCritical() #18, !dbg !8372
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1), align 4, !dbg !8373
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !8373
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !8373
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !8373
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !8359, metadata !DIExpression()), !dbg !8375
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !8376
  %13 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #18, !dbg !8377
  %14 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8378
  %15 = add i32 %14, -1, !dbg !8378
  store volatile i32 %15, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8378
  %16 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8379
  %17 = add i32 %16, -1, !dbg !8379
  store volatile i32 %17, i32* @uxTasksDeleted, align 4, !dbg !8379
  tail call void @vPortExitCritical() #18, !dbg !8380
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %11) #20, !dbg !8381
  br label %18, !dbg !8382

18:                                               ; preds = %3, %7
  %19 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8363
  %20 = icmp eq i32 %19, 0, !dbg !8364
  br i1 %20, label %21, label %3, !dbg !8365, !llvm.loop !8383

21:                                               ; preds = %18, %0
  ret void, !dbg !8385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #0 !dbg !8386 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 4, !dbg !8392
  %3 = bitcast i32** %2 to i8**, !dbg !8392
  %4 = load i8*, i8** %3, align 4, !dbg !8392
  tail call void @vPortFree(i8* noundef %4) #18, !dbg !8392
  %5 = bitcast %struct.tskTaskControlBlock* %0 to i8*, !dbg !8394
  tail call void @vPortFree(i8* noundef %5) #18, !dbg !8395
  ret void, !dbg !8396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskEndScheduler() local_unnamed_addr #0 !dbg !8397 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !8398, !srcloc !8320
  call void @llvm.dbg.value(metadata i32 %1, metadata !8316, metadata !DIExpression()) #17, !dbg !8400
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !8401
  tail call void @vPortEndScheduler() #18, !dbg !8402
  ret void, !dbg !8403
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #8 !dbg !8404 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !8409
  call void @llvm.dbg.value(metadata i32 %1, metadata !8408, metadata !DIExpression()), !dbg !8411
  ret i32 %1, !dbg !8412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #0 !dbg !8413 {
  tail call void @vPortValidateInterruptPriority() #18, !dbg !8417
  call void @llvm.dbg.value(metadata i32 0, metadata !8416, metadata !DIExpression()), !dbg !8418
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !8419
  call void @llvm.dbg.value(metadata i32 %1, metadata !8415, metadata !DIExpression()), !dbg !8418
  ret i32 %1, !dbg !8421
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #8 !dbg !8422 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8425
  ret i32 %1, !dbg !8426
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @pcTaskGetTaskName(i8* noundef readnone %0) local_unnamed_addr #0 !dbg !8427 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8431, metadata !DIExpression()), !dbg !8433
  %2 = icmp eq i8* %0, null, !dbg !8434
  br i1 %2, label %3, label %5, !dbg !8434

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8434
  br label %7, !dbg !8434

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8434
  br label %7, !dbg !8434

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8434
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8432, metadata !DIExpression()), !dbg !8433
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !8435
  br i1 %9, label %10, label %11, !dbg !8437

10:                                               ; preds = %7
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 1821) #18, !dbg !8438
  br label %11, !dbg !8438

11:                                               ; preds = %10, %7
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !8440
  ret i8* %12, !dbg !8441
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture noundef writeonly %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !8442 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !8461, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i32 %1, metadata !8462, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i32* %2, metadata !8463, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i32 0, metadata !8464, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i32 20, metadata !8465, metadata !DIExpression()), !dbg !8466
  tail call void @vTaskSuspendAll() #20, !dbg !8467
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8468
  %5 = icmp ugt i32 %4, %1, !dbg !8471
  br i1 %5, label %32, label %6, !dbg !8472

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %3 ], !dbg !8466
  %8 = phi i32 [ %9, %6 ], [ 20, %3 ], !dbg !8466
  call void @llvm.dbg.value(metadata i32 %8, metadata !8465, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i32 %7, metadata !8464, metadata !DIExpression()), !dbg !8466
  %9 = add nsw i32 %8, -1, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %9, metadata !8465, metadata !DIExpression()), !dbg !8466
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %7, !dbg !8476
  %11 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !8477
  %12 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %10, %struct.xLIST* noundef nonnull %11, i32 noundef 1) #20, !dbg !8478
  %13 = add i32 %12, %7, !dbg !8479
  call void @llvm.dbg.value(metadata i32 %13, metadata !8464, metadata !DIExpression()), !dbg !8466
  %14 = icmp eq i32 %9, 0, !dbg !8480
  br i1 %14, label %15, label %6, !dbg !8481, !llvm.loop !8482

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %13, !dbg !8485
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8486
  %18 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %16, %struct.xLIST* noundef %17, i32 noundef 2) #20, !dbg !8487
  %19 = add i32 %18, %13, !dbg !8488
  call void @llvm.dbg.value(metadata i32 %19, metadata !8464, metadata !DIExpression()), !dbg !8466
  %20 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %19, !dbg !8489
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !8490
  %22 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %20, %struct.xLIST* noundef %21, i32 noundef 2) #20, !dbg !8491
  %23 = add i32 %22, %19, !dbg !8492
  call void @llvm.dbg.value(metadata i32 %23, metadata !8464, metadata !DIExpression()), !dbg !8466
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %23, !dbg !8493
  %25 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %24, %struct.xLIST* noundef nonnull @xTasksWaitingTermination, i32 noundef 4) #20, !dbg !8495
  %26 = add i32 %23, %25, !dbg !8496
  call void @llvm.dbg.value(metadata i32 %26, metadata !8464, metadata !DIExpression()), !dbg !8466
  %27 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !8497
  %28 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %27, %struct.xLIST* noundef nonnull @xSuspendedTaskList, i32 noundef 3) #20, !dbg !8499
  %29 = add i32 %26, %28, !dbg !8500
  call void @llvm.dbg.value(metadata i32 %29, metadata !8464, metadata !DIExpression()), !dbg !8466
  %30 = icmp eq i32* %2, null, !dbg !8501
  br i1 %30, label %32, label %31, !dbg !8504

31:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !8505
  br label %32, !dbg !8507

32:                                               ; preds = %3, %15, %31
  %33 = phi i32 [ %29, %31 ], [ %29, %15 ], [ 0, %3 ], !dbg !8466
  call void @llvm.dbg.value(metadata i32 %33, metadata !8464, metadata !DIExpression()), !dbg !8466
  %34 = tail call i32 @xTaskResumeAll() #20, !dbg !8508
  ret i32 %33, !dbg !8509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* nocapture noundef writeonly %0, %struct.xLIST* noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !8510 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !8514, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8515, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i32 %2, metadata !8516, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i32 0, metadata !8521, metadata !DIExpression()), !dbg !8529
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !8530
  %5 = load i32, i32* %4, align 4, !dbg !8530
  %6 = icmp eq i32 %5, 0, !dbg !8531
  br i1 %6, label %72, label %7, !dbg !8532

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8522, metadata !DIExpression()), !dbg !8533
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 1, !dbg !8534
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !8534
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !8534
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %10, align 4, !dbg !8534
  store %struct.xLIST_ITEM* %11, %struct.xLIST_ITEM** %8, align 4, !dbg !8534
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, !dbg !8535
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !8535
  %14 = icmp eq %struct.xLIST_ITEM* %11, %13, !dbg !8535
  br i1 %14, label %15, label %18, !dbg !8534

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !8537
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !8537
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %8, align 4, !dbg !8537
  br label %18, !dbg !8537

18:                                               ; preds = %15, %7
  %19 = phi %struct.xLIST_ITEM* [ %17, %15 ], [ %11, %7 ], !dbg !8534
  %20 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 3, !dbg !8534
  %21 = bitcast i8** %20 to %struct.tskTaskControlBlock**, !dbg !8534
  %22 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %21, align 4, !dbg !8534
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %22, metadata !8520, metadata !DIExpression()), !dbg !8529
  %23 = icmp eq i32 %2, 3
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, i32 1
  br label %25, !dbg !8539

25:                                               ; preds = %70, %18
  %26 = phi %struct.xLIST_ITEM* [ %19, %18 ], [ %71, %70 ], !dbg !8540
  %27 = phi i32 [ 0, %18 ], [ %68, %70 ], !dbg !8529
  call void @llvm.dbg.value(metadata i32 %27, metadata !8521, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8526, metadata !DIExpression()), !dbg !8541
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %26, i32 0, i32 1, !dbg !8540
  %29 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %28, align 4, !dbg !8540
  store %struct.xLIST_ITEM* %29, %struct.xLIST_ITEM** %8, align 4, !dbg !8540
  %30 = icmp eq %struct.xLIST_ITEM* %29, %13, !dbg !8542
  br i1 %30, label %31, label %33, !dbg !8540

31:                                               ; preds = %25
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !8544
  store %struct.xLIST_ITEM* %32, %struct.xLIST_ITEM** %8, align 4, !dbg !8544
  br label %33, !dbg !8544

33:                                               ; preds = %31, %25
  %34 = phi %struct.xLIST_ITEM* [ %32, %31 ], [ %29, %25 ], !dbg !8540
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %34, i32 0, i32 3, !dbg !8540
  %36 = load i8*, i8** %35, align 4, !dbg !8540
  %37 = bitcast i8* %36 to %struct.tskTaskControlBlock*, !dbg !8540
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %37, metadata !8517, metadata !DIExpression()), !dbg !8529
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 0, !dbg !8546
  store i8* %36, i8** %38, align 4, !dbg !8547
  %39 = getelementptr inbounds i8, i8* %36, i32 52, !dbg !8548
  %40 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 1, !dbg !8549
  store i8* %39, i8** %40, align 4, !dbg !8550
  %41 = getelementptr inbounds i8, i8* %36, i32 60, !dbg !8551
  %42 = bitcast i8* %41 to i32*, !dbg !8551
  %43 = load volatile i32, i32* %42, align 4, !dbg !8551
  %44 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 2, !dbg !8552
  store i32 %43, i32* %44, align 4, !dbg !8553
  %45 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 3, !dbg !8554
  store i32 %2, i32* %45, align 4, !dbg !8555
  %46 = getelementptr inbounds i8, i8* %36, i32 44, !dbg !8556
  %47 = bitcast i8* %46 to i32*, !dbg !8556
  %48 = load volatile i32, i32* %47, align 4, !dbg !8556
  %49 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 4, !dbg !8557
  store i32 %48, i32* %49, align 4, !dbg !8558
  br i1 %23, label %50, label %56, !dbg !8559

50:                                               ; preds = %33
  %51 = getelementptr inbounds i8, i8* %36, i32 40, !dbg !8561
  %52 = bitcast i8* %51 to i8**, !dbg !8561
  %53 = load volatile i8*, i8** %52, align 4, !dbg !8561
  %54 = icmp eq i8* %53, null, !dbg !8565
  br i1 %54, label %56, label %55, !dbg !8566

55:                                               ; preds = %50
  store i32 2, i32* %45, align 4, !dbg !8567
  br label %56, !dbg !8569

56:                                               ; preds = %50, %55, %33
  %57 = getelementptr inbounds i8, i8* %36, i32 68, !dbg !8570
  %58 = bitcast i8* %57 to i32*, !dbg !8570
  %59 = load volatile i32, i32* %58, align 4, !dbg !8570
  %60 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 5, !dbg !8572
  store i32 %59, i32* %60, align 4, !dbg !8573
  %61 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 6, !dbg !8574
  store i32 0, i32* %61, align 4, !dbg !8576
  %62 = getelementptr inbounds i8, i8* %36, i32 48, !dbg !8577
  %63 = bitcast i8* %62 to i32**, !dbg !8577
  %64 = load volatile i32*, i32** %63, align 4, !dbg !8577
  %65 = bitcast i32* %64 to i8*, !dbg !8579
  %66 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %65) #20, !dbg !8580
  %67 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 7, !dbg !8581
  store i16 %66, i16* %67, align 4, !dbg !8582
  %68 = add i32 %27, 1, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %68, metadata !8521, metadata !DIExpression()), !dbg !8529
  %69 = icmp eq %struct.tskTaskControlBlock* %22, %37, !dbg !8584
  br i1 %69, label %72, label %70, !dbg !8585, !llvm.loop !8586

70:                                               ; preds = %56
  %71 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !8540
  br label %25, !dbg !8585

72:                                               ; preds = %56, %3
  %73 = phi i32 [ 0, %3 ], [ %68, %56 ], !dbg !8529
  call void @llvm.dbg.value(metadata i32 %73, metadata !8521, metadata !DIExpression()), !dbg !8529
  ret i32 %73, !dbg !8588
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture noundef readonly %0) unnamed_addr #13 !dbg !8589 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8593, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i32 0, metadata !8594, metadata !DIExpression()), !dbg !8595
  %2 = load i8, i8* %0, align 1, !dbg !8596
  %3 = icmp eq i8 %2, -91, !dbg !8597
  br i1 %3, label %4, label %14, !dbg !8598

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8594, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i8* %6, metadata !8593, metadata !DIExpression()), !dbg !8595
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8599
  call void @llvm.dbg.value(metadata i8* %7, metadata !8593, metadata !DIExpression()), !dbg !8595
  %8 = add i32 %5, 1, !dbg !8601
  call void @llvm.dbg.value(metadata i32 %8, metadata !8594, metadata !DIExpression()), !dbg !8595
  %9 = load i8, i8* %7, align 1, !dbg !8596
  %10 = icmp eq i8 %9, -91, !dbg !8597
  br i1 %10, label %4, label %11, !dbg !8598, !llvm.loop !8602

11:                                               ; preds = %4
  %12 = lshr i32 %8, 2, !dbg !8604
  %13 = trunc i32 %12 to i16, !dbg !8604
  br label %14, !dbg !8604

14:                                               ; preds = %11, %1
  %15 = phi i16 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8594, metadata !DIExpression()), !dbg !8595
  ret i16 %15, !dbg !8605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8606 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8610, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 %1, metadata !8611, metadata !DIExpression()), !dbg !8613
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !8614
  br i1 %3, label %4, label %5, !dbg !8616

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2262) #18, !dbg !8617
  br label %5, !dbg !8617

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8619
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8620
  tail call void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #18, !dbg !8621
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8622
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8624
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8625
  %11 = icmp eq i32 %10, 0, !dbg !8626
  br i1 %11, label %12, label %20, !dbg !8627

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8628
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !8628
  %15 = load i32, i32* %14, align 4, !dbg !8628
  %16 = shl nuw i32 1, %15, !dbg !8628
  %17 = xor i32 %16, -1, !dbg !8628
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8628
  %19 = and i32 %18, %17, !dbg !8628
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !8628
  br label %20, !dbg !8630

20:                                               ; preds = %5, %12
  %21 = icmp eq i32 %1, -1, !dbg !8631
  br i1 %21, label %22, label %25, !dbg !8634

22:                                               ; preds = %20
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8635
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 1, !dbg !8637
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !8638
  br label %28, !dbg !8639

25:                                               ; preds = %20
  %26 = load volatile i32, i32* @xTickCount, align 4, !dbg !8640
  %27 = add i32 %26, %1, !dbg !8642
  call void @llvm.dbg.value(metadata i32 %27, metadata !8612, metadata !DIExpression()), !dbg !8613
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %27) #20, !dbg !8643
  br label %28

28:                                               ; preds = %25, %22
  ret void, !dbg !8644
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8645 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8649, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i32 %1, metadata !8650, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i32 %2, metadata !8651, metadata !DIExpression()), !dbg !8653
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !8654
  br i1 %4, label %5, label %6, !dbg !8656

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2321) #18, !dbg !8657
  br label %6, !dbg !8657

6:                                                ; preds = %5, %3
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8659
  %8 = icmp eq i32 %7, 0, !dbg !8659
  br i1 %8, label %9, label %10, !dbg !8661

9:                                                ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2325) #18, !dbg !8662
  br label %10, !dbg !8662

10:                                               ; preds = %9, %6
  %11 = or i32 %1, -2147483648, !dbg !8664
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8664
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 2, i32 0, !dbg !8664
  store i32 %11, i32* %13, align 4, !dbg !8664
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8665
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !8666
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !8667
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8668
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 1, !dbg !8670
  %18 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #18, !dbg !8671
  %19 = icmp eq i32 %18, 0, !dbg !8672
  br i1 %19, label %20, label %28, !dbg !8673

20:                                               ; preds = %10
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8674
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !8674
  %23 = load i32, i32* %22, align 4, !dbg !8674
  %24 = shl nuw i32 1, %23, !dbg !8674
  %25 = xor i32 %24, -1, !dbg !8674
  %26 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8674
  %27 = and i32 %26, %25, !dbg !8674
  store volatile i32 %27, i32* @uxTopReadyPriority, align 4, !dbg !8674
  br label %28, !dbg !8676

28:                                               ; preds = %10, %20
  %29 = icmp eq i32 %2, -1, !dbg !8677
  br i1 %29, label %30, label %33, !dbg !8680

30:                                               ; preds = %28
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8681
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 1, !dbg !8683
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !8684
  br label %36, !dbg !8685

33:                                               ; preds = %28
  %34 = load volatile i32, i32* @xTickCount, align 4, !dbg !8686
  %35 = add i32 %34, %2, !dbg !8688
  call void @llvm.dbg.value(metadata i32 %35, metadata !8652, metadata !DIExpression()), !dbg !8653
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %35) #20, !dbg !8689
  br label %36

36:                                               ; preds = %33, %30
  ret void, !dbg !8690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8691 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8693, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %1, metadata !8694, metadata !DIExpression()), !dbg !8696
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !8697
  br i1 %3, label %4, label %5, !dbg !8699

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2389) #18, !dbg !8700
  br label %5, !dbg !8700

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8702
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8703
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #18, !dbg !8704
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8705
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8707
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8708
  %11 = icmp eq i32 %10, 0, !dbg !8709
  br i1 %11, label %12, label %20, !dbg !8710

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8711
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !8711
  %15 = load i32, i32* %14, align 4, !dbg !8711
  %16 = shl nuw i32 1, %15, !dbg !8711
  %17 = xor i32 %16, -1, !dbg !8711
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8711
  %19 = and i32 %18, %17, !dbg !8711
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !8711
  br label %20, !dbg !8713

20:                                               ; preds = %5, %12
  %21 = load volatile i32, i32* @xTickCount, align 4, !dbg !8714
  %22 = add i32 %21, %1, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %22, metadata !8695, metadata !DIExpression()), !dbg !8696
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %22) #20, !dbg !8716
  ret void, !dbg !8717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !8718 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8725, metadata !DIExpression()), !dbg !8728
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !8729
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !8729
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !8729
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !8729
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !8729
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !8726, metadata !DIExpression()), !dbg !8728
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !8730
  br i1 %7, label %8, label %9, !dbg !8732

8:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2447) #18, !dbg !8733
  br label %9, !dbg !8733

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8735
  %11 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %10) #18, !dbg !8736
  %12 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8737
  %13 = icmp eq i32 %12, 0, !dbg !8739
  br i1 %13, label %14, label %23, !dbg !8740

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !8741
  %16 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !8743
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !8744
  %18 = load i32, i32* %17, align 4, !dbg !8744
  %19 = shl nuw i32 1, %18, !dbg !8744
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8744
  %21 = or i32 %20, %19, !dbg !8744
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !8744
  %22 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %18, !dbg !8744
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %22, %struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !8744
  br label %24, !dbg !8745

23:                                               ; preds = %9
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %10) #18, !dbg !8746
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !8748
  %26 = load i32, i32* %25, align 4, !dbg !8748
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8750
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 3, !dbg !8751
  %29 = load i32, i32* %28, align 4, !dbg !8751
  %30 = icmp ugt i32 %26, %29, !dbg !8752
  br i1 %30, label %31, label %32, !dbg !8753

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 1, metadata !8727, metadata !DIExpression()), !dbg !8728
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8754
  br label %32, !dbg !8756

32:                                               ; preds = %24, %31
  %33 = phi i32 [ 1, %31 ], [ 0, %24 ], !dbg !8757
  call void @llvm.dbg.value(metadata i32 %33, metadata !8727, metadata !DIExpression()), !dbg !8728
  ret i32 %33, !dbg !8758
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8759 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !8763, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i32 %1, metadata !8764, metadata !DIExpression()), !dbg !8767
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8768
  %4 = icmp eq i32 %3, 0, !dbg !8768
  br i1 %4, label %5, label %6, !dbg !8770

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2503) #18, !dbg !8771
  br label %6, !dbg !8771

6:                                                ; preds = %5, %2
  %7 = or i32 %1, -2147483648, !dbg !8773
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !8773
  store i32 %7, i32* %8, align 4, !dbg !8773
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !8774
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !8774
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !8774
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !8765, metadata !DIExpression()), !dbg !8767
  %12 = icmp eq %struct.tskTaskControlBlock* %11, null, !dbg !8775
  br i1 %12, label %13, label %14, !dbg !8777

13:                                               ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2511) #18, !dbg !8778
  br label %14, !dbg !8778

14:                                               ; preds = %13, %6
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %0) #18, !dbg !8780
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !8781
  %17 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %16) #18, !dbg !8782
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 3, !dbg !8783
  %19 = load i32, i32* %18, align 4, !dbg !8783
  %20 = shl nuw i32 1, %19, !dbg !8783
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8783
  %22 = or i32 %21, %20, !dbg !8783
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !8783
  %23 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %19, !dbg !8783
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %23, %struct.xLIST_ITEM* noundef nonnull %16) #18, !dbg !8783
  %24 = load i32, i32* %18, align 4, !dbg !8784
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8786
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !8787
  %27 = load i32, i32* %26, align 4, !dbg !8787
  %28 = icmp ugt i32 %24, %27, !dbg !8788
  br i1 %28, label %29, label %30, !dbg !8789

29:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 1, metadata !8766, metadata !DIExpression()), !dbg !8767
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8790
  br label %30, !dbg !8792

30:                                               ; preds = %14, %29
  %31 = phi i32 [ 1, %29 ], [ 0, %14 ], !dbg !8793
  call void @llvm.dbg.value(metadata i32 %31, metadata !8766, metadata !DIExpression()), !dbg !8767
  ret i32 %31, !dbg !8794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef writeonly %0) local_unnamed_addr #0 !dbg !8795 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !8806, metadata !DIExpression()), !dbg !8807
  %2 = icmp eq %struct.hal_cache_region_config_t* %0, null, !dbg !8808
  br i1 %2, label %3, label %4, !dbg !8810

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2543) #18, !dbg !8811
  br label %4, !dbg !8811

4:                                                ; preds = %3, %1
  %5 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !8813
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !8814
  store i32 %5, i32* %6, align 4, !dbg !8815
  %7 = load volatile i32, i32* @xTickCount, align 4, !dbg !8816
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 1, !dbg !8817
  store i32 %7, i32* %8, align 4, !dbg !8818
  ret void, !dbg !8819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef %0, i32* noundef %1) local_unnamed_addr #0 !dbg !8820 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !8824, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32* %1, metadata !8825, metadata !DIExpression()), !dbg !8829
  %3 = icmp eq %struct.hal_cache_region_config_t* %0, null, !dbg !8830
  br i1 %3, label %4, label %5, !dbg !8832

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2553) #18, !dbg !8833
  br label %5, !dbg !8833

5:                                                ; preds = %4, %2
  %6 = icmp eq i32* %1, null, !dbg !8835
  br i1 %6, label %7, label %8, !dbg !8837

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 2554) #18, !dbg !8838
  br label %8, !dbg !8838

8:                                                ; preds = %7, %5
  tail call void @vPortEnterCritical() #18, !dbg !8840
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !8841
  call void @llvm.dbg.value(metadata i32 %9, metadata !8827, metadata !DIExpression()), !dbg !8842
  %10 = load i32, i32* %1, align 4, !dbg !8843
  %11 = icmp eq i32 %10, -1, !dbg !8845
  br i1 %11, label %26, label %12, !dbg !8846

12:                                               ; preds = %8
  %13 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !8847
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !8849
  %15 = load i32, i32* %14, align 4, !dbg !8849
  %16 = icmp eq i32 %13, %15, !dbg !8850
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4, !dbg !8851
  %19 = icmp ult i32 %9, %18
  %20 = select i1 %16, i1 true, i1 %19, !dbg !8852
  br i1 %20, label %21, label %26, !dbg !8852

21:                                               ; preds = %12
  %22 = sub i32 %9, %18, !dbg !8853
  %23 = icmp ugt i32 %10, %22, !dbg !8855
  br i1 %23, label %24, label %26, !dbg !8856

24:                                               ; preds = %21
  %25 = sub i32 %10, %22, !dbg !8857
  store i32 %25, i32* %1, align 4, !dbg !8857
  tail call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %0) #20, !dbg !8859
  call void @llvm.dbg.value(metadata i32 0, metadata !8826, metadata !DIExpression()), !dbg !8829
  br label %26, !dbg !8860

26:                                               ; preds = %12, %21, %8, %24
  %27 = phi i32 [ 0, %24 ], [ 0, %8 ], [ 1, %21 ], [ 1, %12 ], !dbg !8861
  call void @llvm.dbg.value(metadata i32 %27, metadata !8826, metadata !DIExpression()), !dbg !8829
  tail call void @vPortExitCritical() #18, !dbg !8862
  ret i32 %27, !dbg !8863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskMissedYield() local_unnamed_addr #5 !dbg !8864 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(i8* noundef readonly %0) local_unnamed_addr #9 !dbg !8867 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8869, metadata !DIExpression()), !dbg !8872
  %2 = icmp eq i8* %0, null, !dbg !8873
  br i1 %2, label %7, label %3, !dbg !8875

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8871, metadata !DIExpression()), !dbg !8872
  %4 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !8876
  %5 = bitcast i8* %4 to i32*, !dbg !8876
  %6 = load i32, i32* %5, align 4, !dbg !8876
  call void @llvm.dbg.value(metadata i32 %6, metadata !8870, metadata !DIExpression()), !dbg !8872
  br label %7, !dbg !8878

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ], !dbg !8879
  call void @llvm.dbg.value(metadata i32 %8, metadata !8870, metadata !DIExpression()), !dbg !8872
  ret i32 %8, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTaskSetTaskNumber(i8* noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !8881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %1, metadata !8886, metadata !DIExpression()), !dbg !8888
  %3 = icmp eq i8* %0, null, !dbg !8889
  br i1 %3, label %7, label %4, !dbg !8891

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %0, metadata !8887, metadata !DIExpression()), !dbg !8888
  %5 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !8892
  %6 = bitcast i8* %5 to i32*, !dbg !8892
  store i32 %1, i32* %6, align 4, !dbg !8894
  br label %7, !dbg !8895

7:                                                ; preds = %4, %2
  ret void, !dbg !8896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @uxTaskGetStackHighWaterMark(i8* noundef readonly %0) local_unnamed_addr #5 !dbg !8897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8899, metadata !DIExpression()), !dbg !8903
  %2 = icmp eq i8* %0, null, !dbg !8904
  br i1 %2, label %3, label %5, !dbg !8904

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8904
  br label %7, !dbg !8904

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8904
  br label %7, !dbg !8904

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8904
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8900, metadata !DIExpression()), !dbg !8903
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !8905
  %10 = bitcast i32** %9 to i8**, !dbg !8905
  %11 = load i8*, i8** %10, align 4, !dbg !8905
  call void @llvm.dbg.value(metadata i8* %11, metadata !8901, metadata !DIExpression()), !dbg !8903
  %12 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %11) #20, !dbg !8907
  %13 = zext i16 %12 to i32, !dbg !8908
  call void @llvm.dbg.value(metadata i32 %13, metadata !8902, metadata !DIExpression()), !dbg !8903
  ret i32 %13, !dbg !8909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @xTaskGetCurrentTaskHandle() local_unnamed_addr #8 !dbg !8910 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8915
  %2 = bitcast %struct.tskTaskControlBlock* %1 to i8*, !dbg !8915
  call void @llvm.dbg.value(metadata i8* %2, metadata !8914, metadata !DIExpression()), !dbg !8916
  ret i8* %2, !dbg !8917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #8 !dbg !8918 {
  %1 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8921
  %2 = icmp eq i32 %1, 0, !dbg !8923
  br i1 %2, label %7, label %3, !dbg !8924

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8925
  %5 = icmp eq i32 %4, 0, !dbg !8928
  %6 = select i1 %5, i32 2, i32 0
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ 1, %0 ], [ %6, %3 ], !dbg !8929
  call void @llvm.dbg.value(metadata i32 %8, metadata !8920, metadata !DIExpression()), !dbg !8930
  ret i32 %8, !dbg !8931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPriorityInherit(i8* noundef %0) local_unnamed_addr #0 !dbg !8932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8936, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %0, metadata !8937, metadata !DIExpression()), !dbg !8938
  %2 = icmp eq i8* %0, null, !dbg !8939
  br i1 %2, label %55, label %3, !dbg !8941

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8942
  %5 = bitcast i8* %4 to i32*, !dbg !8942
  %6 = load i32, i32* %5, align 4, !dbg !8942
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8945
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 3, !dbg !8946
  %9 = load i32, i32* %8, align 4, !dbg !8946
  %10 = icmp ult i32 %6, %9, !dbg !8947
  br i1 %10, label %11, label %55, !dbg !8948

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8949
  %13 = bitcast i8* %12 to i32*, !dbg !8949
  %14 = load i32, i32* %13, align 4, !dbg !8949
  %15 = icmp sgt i32 %14, -1, !dbg !8952
  br i1 %15, label %16, label %21, !dbg !8953

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8954
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !8954
  %19 = load i32, i32* %18, align 4, !dbg !8954
  %20 = sub i32 20, %19, !dbg !8954
  store i32 %20, i32* %13, align 4, !dbg !8954
  br label %21, !dbg !8956

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8957
  %23 = bitcast i8* %22 to %struct.xLIST_ITEM*, !dbg !8957
  %24 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8957
  %25 = bitcast i8* %24 to i8**, !dbg !8957
  %26 = load i8*, i8** %25, align 4, !dbg !8957
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !8957
  %28 = bitcast %struct.xLIST* %27 to i8*, !dbg !8957
  %29 = icmp eq i8* %26, %28, !dbg !8957
  br i1 %29, label %30, label %51, !dbg !8959

30:                                               ; preds = %21
  %31 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %23) #18, !dbg !8960
  %32 = icmp eq i32 %31, 0, !dbg !8963
  br i1 %32, label %33, label %43, !dbg !8964

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !8965
  %35 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %34, i32 0, !dbg !8965
  %36 = load i32, i32* %35, align 4, !dbg !8965
  %37 = icmp eq i32 %36, 0, !dbg !8965
  br i1 %37, label %38, label %43, !dbg !8969

38:                                               ; preds = %33
  %39 = shl nuw i32 1, %34, !dbg !8970
  %40 = xor i32 %39, -1, !dbg !8970
  %41 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8970
  %42 = and i32 %41, %40, !dbg !8970
  store volatile i32 %42, i32* @uxTopReadyPriority, align 4, !dbg !8970
  br label %43, !dbg !8970

43:                                               ; preds = %30, %33, %38
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8972
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !8973
  %46 = load i32, i32* %45, align 4, !dbg !8973
  store i32 %46, i32* %5, align 4, !dbg !8974
  %47 = shl nuw i32 1, %46, !dbg !8975
  %48 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8975
  %49 = or i32 %48, %47, !dbg !8975
  store volatile i32 %49, i32* @uxTopReadyPriority, align 4, !dbg !8975
  %50 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %46, !dbg !8975
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %50, %struct.xLIST_ITEM* noundef nonnull %23) #18, !dbg !8975
  br label %55, !dbg !8976

51:                                               ; preds = %21
  %52 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8977
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %52, i32 0, i32 3, !dbg !8979
  %54 = load i32, i32* %53, align 4, !dbg !8979
  store i32 %54, i32* %5, align 4, !dbg !8980
  br label %55

55:                                               ; preds = %1, %51, %43, %3
  ret void, !dbg !8981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityDisinherit(i8* noundef %0) local_unnamed_addr #0 !dbg !8982 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8984, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i8* %0, metadata !8985, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 0, metadata !8986, metadata !DIExpression()), !dbg !8987
  %2 = icmp eq i8* %0, null, !dbg !8988
  br i1 %2, label %46, label %3, !dbg !8990

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !8991
  %5 = bitcast i8* %4 to i32*, !dbg !8991
  %6 = load i32, i32* %5, align 4, !dbg !8991
  %7 = icmp eq i32 %6, 0, !dbg !8991
  br i1 %7, label %8, label %10, !dbg !8994

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 3409) #18, !dbg !8995
  %9 = load i32, i32* %5, align 4, !dbg !8997
  br label %10, !dbg !8995

10:                                               ; preds = %8, %3
  %11 = phi i32 [ %9, %8 ], [ %6, %3 ], !dbg !8997
  %12 = add i32 %11, -1, !dbg !8997
  store i32 %12, i32* %5, align 4, !dbg !8997
  %13 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8998
  %14 = bitcast i8* %13 to i32*, !dbg !8998
  %15 = load i32, i32* %14, align 4, !dbg !8998
  %16 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !9000
  %17 = bitcast i8* %16 to i32*, !dbg !9000
  %18 = load i32, i32* %17, align 4, !dbg !9000
  %19 = icmp ne i32 %15, %18, !dbg !9001
  %20 = icmp eq i32 %12, 0
  %21 = select i1 %19, i1 %20, i1 false, !dbg !9002
  br i1 %21, label %22, label %46, !dbg !9002

22:                                               ; preds = %10
  %23 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9003
  %24 = bitcast i8* %23 to %struct.xLIST_ITEM*, !dbg !9003
  %25 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !9008
  %26 = icmp eq i32 %25, 0, !dbg !9009
  br i1 %26, label %27, label %37, !dbg !9010

27:                                               ; preds = %22
  %28 = load i32, i32* %14, align 4, !dbg !9011
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %28, i32 0, !dbg !9011
  %30 = load i32, i32* %29, align 4, !dbg !9011
  %31 = icmp eq i32 %30, 0, !dbg !9011
  br i1 %31, label %32, label %37, !dbg !9015

32:                                               ; preds = %27
  %33 = shl nuw i32 1, %28, !dbg !9016
  %34 = xor i32 %33, -1, !dbg !9016
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9016
  %36 = and i32 %35, %34, !dbg !9016
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !9016
  br label %37, !dbg !9016

37:                                               ; preds = %22, %27, %32
  %38 = load i32, i32* %17, align 4, !dbg !9018
  store i32 %38, i32* %14, align 4, !dbg !9019
  %39 = sub i32 20, %38, !dbg !9020
  %40 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9020
  %41 = bitcast i8* %40 to i32*, !dbg !9020
  store i32 %39, i32* %41, align 4, !dbg !9020
  %42 = shl nuw i32 1, %38, !dbg !9021
  %43 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9021
  %44 = or i32 %43, %42, !dbg !9021
  store volatile i32 %44, i32* @uxTopReadyPriority, align 4, !dbg !9021
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %38, !dbg !9021
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %45, %struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !9021
  call void @llvm.dbg.value(metadata i32 1, metadata !8986, metadata !DIExpression()), !dbg !8987
  br label %46, !dbg !9022

46:                                               ; preds = %1, %37, %10
  %47 = phi i32 [ 1, %37 ], [ 0, %10 ], [ 0, %1 ], !dbg !8987
  call void @llvm.dbg.value(metadata i32 %47, metadata !8986, metadata !DIExpression()), !dbg !8987
  ret i32 %47, !dbg !9023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskList(i8* noundef %0) local_unnamed_addr #0 !dbg !9024 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9028, metadata !DIExpression()), !dbg !9033
  %4 = bitcast i32* %2 to i8*, !dbg !9034
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !9034
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9030, metadata !DIExpression()), !dbg !9035
  %5 = bitcast i32* %3 to i8*, !dbg !9034
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !9034
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9031, metadata !DIExpression()), !dbg !9036
  store i8 0, i8* %0, align 1, !dbg !9037
  %6 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !9038
  store volatile i32 %6, i32* %2, align 4, !dbg !9039
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !9040
  %8 = shl i32 %7, 5, !dbg !9041
  %9 = tail call i8* @pvPortMalloc(i32 noundef %8) #18, !dbg !9042
  %10 = bitcast i8* %9 to %struct.xTASK_STATUS*, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %10, metadata !9029, metadata !DIExpression()), !dbg !9033
  %11 = icmp eq i8* %9, null, !dbg !9043
  br i1 %11, label %53, label %12, !dbg !9045

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %2, align 4, !dbg !9046
  %14 = tail call i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* noundef nonnull %10, i32 noundef %13, i32* noundef null) #20, !dbg !9048
  store volatile i32 %14, i32* %2, align 4, !dbg !9049
  store volatile i32 0, i32* %3, align 4, !dbg !9050
  call void @llvm.dbg.value(metadata i8* %0, metadata !9028, metadata !DIExpression()), !dbg !9033
  %15 = load volatile i32, i32* %3, align 4, !dbg !9052
  %16 = load volatile i32, i32* %2, align 4, !dbg !9054
  %17 = icmp ult i32 %15, %16, !dbg !9055
  br i1 %17, label %18, label %52, !dbg !9056

18:                                               ; preds = %12, %28
  %19 = phi i8* [ %46, %28 ], [ %0, %12 ]
  call void @llvm.dbg.value(metadata i8* %19, metadata !9028, metadata !DIExpression()), !dbg !9033
  %20 = load volatile i32, i32* %3, align 4, !dbg !9057
  %21 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %20, i32 3, !dbg !9059
  %22 = load i32, i32* %21, align 4, !dbg !9059
  %23 = add i32 %22, -1, !dbg !9060
  %24 = icmp ult i32 %23, 4, !dbg !9060
  br i1 %24, label %25, label %28, !dbg !9060

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.vTaskList, i32 0, i32 %23, !dbg !9060
  %27 = load i32, i32* %26, align 4, !dbg !9060
  br label %28, !dbg !9060

28:                                               ; preds = %18, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !9032, metadata !DIExpression()), !dbg !9033
  %30 = load volatile i32, i32* %3, align 4, !dbg !9061
  %31 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %30, i32 1, !dbg !9062
  %32 = load i8*, i8** %31, align 4, !dbg !9062
  %33 = tail call fastcc i8* @prvWriteNameToBuffer(i8* noundef %19, i8* noundef %32) #20, !dbg !9063
  call void @llvm.dbg.value(metadata i8* %33, metadata !9028, metadata !DIExpression()), !dbg !9033
  %34 = load volatile i32, i32* %3, align 4, !dbg !9064
  %35 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %34, i32 4, !dbg !9065
  %36 = load i32, i32* %35, align 4, !dbg !9065
  %37 = load volatile i32, i32* %3, align 4, !dbg !9066
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %37, i32 7, !dbg !9067
  %39 = load i16, i16* %38, align 4, !dbg !9067
  %40 = zext i16 %39 to i32, !dbg !9068
  %41 = load volatile i32, i32* %3, align 4, !dbg !9069
  %42 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %41, i32 2, !dbg !9070
  %43 = load i32, i32* %42, align 4, !dbg !9070
  %44 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %33, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 noundef %29, i32 noundef %36, i32 noundef %40, i32 noundef %43) #18, !dbg !9071
  %45 = tail call i32 @strlen(i8* noundef %33) #18, !dbg !9072
  %46 = getelementptr inbounds i8, i8* %33, i32 %45, !dbg !9073
  call void @llvm.dbg.value(metadata i8* %46, metadata !9028, metadata !DIExpression()), !dbg !9033
  %47 = load volatile i32, i32* %3, align 4, !dbg !9074
  %48 = add i32 %47, 1, !dbg !9074
  store volatile i32 %48, i32* %3, align 4, !dbg !9074
  %49 = load volatile i32, i32* %3, align 4, !dbg !9052
  %50 = load volatile i32, i32* %2, align 4, !dbg !9054
  %51 = icmp ult i32 %49, %50, !dbg !9055
  br i1 %51, label %18, label %52, !dbg !9056, !llvm.loop !9075

52:                                               ; preds = %28, %12
  tail call void @vPortFree(i8* noundef nonnull %9) #18, !dbg !9077
  br label %53, !dbg !9078

53:                                               ; preds = %1, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !9079
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !9079
  ret void, !dbg !9079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prvWriteNameToBuffer(i8* noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !9080 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9084, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i8* %1, metadata !9085, metadata !DIExpression()), !dbg !9087
  %3 = tail call i8* @strcpy(i8* noundef %0, i8* noundef %1) #18, !dbg !9088
  %4 = tail call i32 @strlen(i8* noundef %0) #18, !dbg !9089
  call void @llvm.dbg.value(metadata i32 %4, metadata !9086, metadata !DIExpression()), !dbg !9087
  %5 = icmp slt i32 %4, 5, !dbg !9091
  br i1 %5, label %6, label %11, !dbg !9093

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %9, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9086, metadata !DIExpression()), !dbg !9087
  %8 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !9094
  store i8 32, i8* %8, align 1, !dbg !9096
  %9 = add i32 %7, 1, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %9, metadata !9086, metadata !DIExpression()), !dbg !9087
  %10 = icmp eq i32 %9, 5, !dbg !9091
  br i1 %10, label %11, label %6, !dbg !9093, !llvm.loop !9098

11:                                               ; preds = %6, %2
  %12 = phi i32 [ %4, %2 ], [ 5, %6 ], !dbg !9100
  %13 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9101
  store i8 0, i8* %13, align 1, !dbg !9102
  ret i8* %13, !dbg !9103
}

; Function Attrs: optsize
declare dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @strlen(i8* noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i8* @strcpy(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #8 !dbg !9104 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9107
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !9107
  %3 = load i32, i32* %2, align 4, !dbg !9107
  call void @llvm.dbg.value(metadata i32 %3, metadata !9106, metadata !DIExpression()), !dbg !9108
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9109
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !9109
  %6 = load i32, i32* %5, align 4, !dbg !9109
  %7 = sub i32 20, %6, !dbg !9109
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9109
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !9109
  store i32 %7, i32* %9, align 4, !dbg !9109
  ret i32 %3, !dbg !9110
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #8 !dbg !9111 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9113
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !9115
  br i1 %2, label %8, label %3, !dbg !9116

3:                                                ; preds = %0
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9117
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 9, !dbg !9119
  %6 = load i32, i32* %5, align 4, !dbg !9120
  %7 = add i32 %6, 1, !dbg !9120
  store i32 %7, i32* %5, align 4, !dbg !9120
  br label %8, !dbg !9121

8:                                                ; preds = %3, %0
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9122
  %10 = bitcast %struct.tskTaskControlBlock* %9 to i8*, !dbg !9122
  ret i8* %10, !dbg !9123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9128, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %1, metadata !9129, metadata !DIExpression()), !dbg !9132
  tail call void @vPortEnterCritical() #18, !dbg !9133
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9134
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, !dbg !9137
  %5 = load volatile i32, i32* %4, align 4, !dbg !9137
  %6 = icmp eq i32 %5, 0, !dbg !9138
  br i1 %6, label %7, label %33, !dbg !9139

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9140
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, !dbg !9142
  store volatile i32 1, i32* %9, align 4, !dbg !9143
  %10 = icmp eq i32 %1, 0, !dbg !9144
  br i1 %10, label %33, label %11, !dbg !9146

11:                                               ; preds = %7
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9147
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !9150
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !9151
  %15 = icmp eq i32 %14, 0, !dbg !9152
  br i1 %15, label %16, label %24, !dbg !9153

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9154
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !9154
  %19 = load i32, i32* %18, align 4, !dbg !9154
  %20 = shl nuw i32 1, %19, !dbg !9154
  %21 = xor i32 %20, -1, !dbg !9154
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9154
  %23 = and i32 %22, %21, !dbg !9154
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !9154
  br label %24, !dbg !9156

24:                                               ; preds = %11, %16
  %25 = icmp eq i32 %1, -1, !dbg !9157
  br i1 %25, label %26, label %29, !dbg !9160

26:                                               ; preds = %24
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9161
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 1, !dbg !9163
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !9164
  br label %32, !dbg !9165

29:                                               ; preds = %24
  %30 = load volatile i32, i32* @xTickCount, align 4, !dbg !9166
  %31 = add i32 %30, %1, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %31, metadata !9130, metadata !DIExpression()), !dbg !9132
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %31) #20, !dbg !9169
  br label %32

32:                                               ; preds = %29, %26
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9170
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9170, !srcloc !9172
  tail call void asm sideeffect "isb", ""() #17, !dbg !9170, !srcloc !9173
  br label %33, !dbg !9174

33:                                               ; preds = %2, %32, %7
  tail call void @vPortExitCritical() #18, !dbg !9175
  tail call void @vPortEnterCritical() #18, !dbg !9176
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9177
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 10, !dbg !9179
  %36 = load volatile i32, i32* %35, align 4, !dbg !9179
  call void @llvm.dbg.value(metadata i32 %36, metadata !9131, metadata !DIExpression()), !dbg !9132
  %37 = icmp eq i32 %36, 0, !dbg !9180
  br i1 %37, label %47, label %38, !dbg !9182

38:                                               ; preds = %33
  %39 = icmp eq i32 %0, 0, !dbg !9183
  %40 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9186
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %40, i32 0, i32 10, !dbg !9186
  br i1 %39, label %42, label %45, !dbg !9187

42:                                               ; preds = %38
  %43 = load volatile i32, i32* %41, align 4, !dbg !9188
  %44 = add i32 %43, -1, !dbg !9188
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %38 ]
  store volatile i32 %46, i32* %41, align 4, !dbg !9186
  br label %47, !dbg !9190

47:                                               ; preds = %45, %33
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9190
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 11, !dbg !9191
  store volatile i32 0, i32* %49, align 4, !dbg !9192
  tail call void @vPortExitCritical() #18, !dbg !9193
  ret i32 %36, !dbg !9194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9199, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %1, metadata !9200, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32* %2, metadata !9201, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %3, metadata !9202, metadata !DIExpression()), !dbg !9205
  tail call void @vPortEnterCritical() #18, !dbg !9206
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9207
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, !dbg !9210
  %7 = load volatile i32, i32* %6, align 4, !dbg !9210
  %8 = icmp eq i32 %7, 2, !dbg !9211
  br i1 %8, label %40, label %9, !dbg !9212

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !9213
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9215
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 10, !dbg !9216
  %13 = load volatile i32, i32* %12, align 4, !dbg !9217
  %14 = and i32 %13, %10, !dbg !9217
  store volatile i32 %14, i32* %12, align 4, !dbg !9217
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9218
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 11, !dbg !9219
  store volatile i32 1, i32* %16, align 4, !dbg !9220
  %17 = icmp eq i32 %3, 0, !dbg !9221
  br i1 %17, label %40, label %18, !dbg !9223

18:                                               ; preds = %9
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9224
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !9227
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #18, !dbg !9228
  %22 = icmp eq i32 %21, 0, !dbg !9229
  br i1 %22, label %23, label %31, !dbg !9230

23:                                               ; preds = %18
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9231
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 3, !dbg !9231
  %26 = load i32, i32* %25, align 4, !dbg !9231
  %27 = shl nuw i32 1, %26, !dbg !9231
  %28 = xor i32 %27, -1, !dbg !9231
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9231
  %30 = and i32 %29, %28, !dbg !9231
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !9231
  br label %31, !dbg !9233

31:                                               ; preds = %18, %23
  %32 = icmp eq i32 %3, -1, !dbg !9234
  br i1 %32, label %33, label %36, !dbg !9237

33:                                               ; preds = %31
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9238
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !9240
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !9241
  br label %39, !dbg !9242

36:                                               ; preds = %31
  %37 = load volatile i32, i32* @xTickCount, align 4, !dbg !9243
  %38 = add i32 %37, %3, !dbg !9245
  call void @llvm.dbg.value(metadata i32 %38, metadata !9203, metadata !DIExpression()), !dbg !9205
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %38) #20, !dbg !9246
  br label %39

39:                                               ; preds = %36, %33
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9247
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9247, !srcloc !9249
  tail call void asm sideeffect "isb", ""() #17, !dbg !9247, !srcloc !9250
  br label %40, !dbg !9251

40:                                               ; preds = %4, %39, %9
  tail call void @vPortExitCritical() #18, !dbg !9252
  tail call void @vPortEnterCritical() #18, !dbg !9253
  %41 = icmp eq i32* %2, null, !dbg !9254
  br i1 %41, label %46, label %42, !dbg !9257

42:                                               ; preds = %40
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9258
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %43, i32 0, i32 10, !dbg !9260
  %45 = load volatile i32, i32* %44, align 4, !dbg !9260
  store i32 %45, i32* %2, align 4, !dbg !9261
  br label %46, !dbg !9262

46:                                               ; preds = %42, %40
  %47 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9263
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %47, i32 0, i32 11, !dbg !9265
  %49 = load volatile i32, i32* %48, align 4, !dbg !9265
  %50 = icmp eq i32 %49, 1, !dbg !9266
  br i1 %50, label %57, label %51, !dbg !9267

51:                                               ; preds = %46
  %52 = xor i32 %1, -1, !dbg !9268
  %53 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9270
  %54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %53, i32 0, i32 10, !dbg !9271
  %55 = load volatile i32, i32* %54, align 4, !dbg !9272
  %56 = and i32 %55, %52, !dbg !9272
  store volatile i32 %56, i32* %54, align 4, !dbg !9272
  call void @llvm.dbg.value(metadata i32 1, metadata !9204, metadata !DIExpression()), !dbg !9205
  br label %57

57:                                               ; preds = %46, %51
  %58 = phi i32 [ 1, %51 ], [ 0, %46 ], !dbg !9273
  call void @llvm.dbg.value(metadata i32 %58, metadata !9204, metadata !DIExpression()), !dbg !9205
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9274
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 11, !dbg !9275
  store volatile i32 0, i32* %60, align 4, !dbg !9276
  tail call void @vPortExitCritical() #18, !dbg !9277
  ret i32 %58, !dbg !9278
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9284, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %1, metadata !9285, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %2, metadata !9286, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 1, metadata !9289, metadata !DIExpression()), !dbg !9290
  %4 = icmp eq i8* %0, null, !dbg !9291
  br i1 %4, label %5, label %6, !dbg !9293

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4049) #18, !dbg !9294
  br label %6, !dbg !9294

6:                                                ; preds = %5, %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9287, metadata !DIExpression()), !dbg !9290
  tail call void @vPortEnterCritical() #18, !dbg !9296
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9297
  %8 = bitcast i8* %7 to i32*, !dbg !9297
  %9 = load volatile i32, i32* %8, align 4, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %9, metadata !9288, metadata !DIExpression()), !dbg !9290
  store volatile i32 2, i32* %8, align 4, !dbg !9299
  switch i32 %2, label %28 [
    i32 1, label %10
    i32 2, label %15
    i32 3, label %20
    i32 4, label %23
  ], !dbg !9300

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %0, metadata !9287, metadata !DIExpression()), !dbg !9290
  %11 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9301
  %12 = bitcast i8* %11 to i32*, !dbg !9301
  %13 = load volatile i32, i32* %12, align 4, !dbg !9303
  %14 = or i32 %13, %1, !dbg !9303
  store volatile i32 %14, i32* %12, align 4, !dbg !9303
  br label %28, !dbg !9304

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9305
  %17 = bitcast i8* %16 to i32*, !dbg !9305
  %18 = load volatile i32, i32* %17, align 4, !dbg !9306
  %19 = add i32 %18, 1, !dbg !9306
  store volatile i32 %19, i32* %17, align 4, !dbg !9306
  br label %28, !dbg !9307

20:                                               ; preds = %6
  %21 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9308
  %22 = bitcast i8* %21 to i32*, !dbg !9308
  store volatile i32 %1, i32* %22, align 4, !dbg !9309
  br label %28, !dbg !9310

23:                                               ; preds = %6
  %24 = icmp eq i32 %9, 2, !dbg !9311
  br i1 %24, label %53, label %25, !dbg !9313

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9314
  %27 = bitcast i8* %26 to i32*, !dbg !9314
  store volatile i32 %1, i32* %27, align 4, !dbg !9316
  br label %28, !dbg !9317

28:                                               ; preds = %25, %6, %20, %15, %10
  call void @llvm.dbg.value(metadata i32 1, metadata !9289, metadata !DIExpression()), !dbg !9290
  %29 = icmp eq i32 %9, 1, !dbg !9318
  br i1 %29, label %30, label %53, !dbg !9320

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9321
  %32 = bitcast i8* %31 to %struct.xLIST_ITEM*, !dbg !9321
  %33 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !9323
  %34 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9324
  %35 = bitcast i8* %34 to i32*, !dbg !9324
  %36 = load i32, i32* %35, align 4, !dbg !9324
  %37 = shl nuw i32 1, %36, !dbg !9324
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9324
  %39 = or i32 %38, %37, !dbg !9324
  store volatile i32 %39, i32* @uxTopReadyPriority, align 4, !dbg !9324
  %40 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %36, !dbg !9324
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %40, %struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !9324
  %41 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9325
  %42 = bitcast i8* %41 to i8**, !dbg !9325
  %43 = load i8*, i8** %42, align 4, !dbg !9325
  %44 = icmp eq i8* %43, null, !dbg !9325
  br i1 %44, label %46, label %45, !dbg !9327

45:                                               ; preds = %30
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4099) #18, !dbg !9328
  br label %46, !dbg !9328

46:                                               ; preds = %45, %30
  %47 = load i32, i32* %35, align 4, !dbg !9330
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9332
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 3, !dbg !9333
  %50 = load i32, i32* %49, align 4, !dbg !9333
  %51 = icmp ugt i32 %47, %50, !dbg !9334
  br i1 %51, label %52, label %53, !dbg !9335

52:                                               ; preds = %46
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9336
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9336, !srcloc !9339
  tail call void asm sideeffect "isb", ""() #17, !dbg !9336, !srcloc !9340
  br label %53, !dbg !9341

53:                                               ; preds = %23, %28, %52, %46
  %54 = phi i32 [ 1, %28 ], [ 1, %52 ], [ 1, %46 ], [ 0, %23 ]
  tail call void @vPortExitCritical() #18, !dbg !9342
  ret i32 %54, !dbg !9343
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #0 !dbg !9344 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9348, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 %1, metadata !9349, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 %2, metadata !9350, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32* %3, metadata !9351, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 1, metadata !9354, metadata !DIExpression()), !dbg !9356
  %5 = icmp eq i8* %0, null, !dbg !9357
  br i1 %5, label %6, label %7, !dbg !9359

6:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4134) #18, !dbg !9360
  br label %7, !dbg !9360

7:                                                ; preds = %6, %4
  tail call void @vPortValidateInterruptPriority() #18, !dbg !9362
  call void @llvm.dbg.value(metadata i8* %0, metadata !9352, metadata !DIExpression()), !dbg !9356
  %8 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !9363, !srcloc !7981
  call void @llvm.dbg.value(metadata i32 undef, metadata !7978, metadata !DIExpression()) #17, !dbg !9365
  call void @llvm.dbg.value(metadata i32 undef, metadata !7979, metadata !DIExpression()) #17, !dbg !9365
  call void @llvm.dbg.value(metadata i32 undef, metadata !9355, metadata !DIExpression()), !dbg !9356
  %9 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9366
  %10 = bitcast i8* %9 to i32*, !dbg !9366
  %11 = load volatile i32, i32* %10, align 4, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %11, metadata !9353, metadata !DIExpression()), !dbg !9356
  store volatile i32 2, i32* %10, align 4, !dbg !9368
  switch i32 %2, label %30 [
    i32 1, label %12
    i32 2, label %17
    i32 3, label %22
    i32 4, label %25
  ], !dbg !9369

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !9352, metadata !DIExpression()), !dbg !9356
  %13 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9370
  %14 = bitcast i8* %13 to i32*, !dbg !9370
  %15 = load volatile i32, i32* %14, align 4, !dbg !9372
  %16 = or i32 %15, %1, !dbg !9372
  store volatile i32 %16, i32* %14, align 4, !dbg !9372
  br label %30, !dbg !9373

17:                                               ; preds = %7
  %18 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9374
  %19 = bitcast i8* %18 to i32*, !dbg !9374
  %20 = load volatile i32, i32* %19, align 4, !dbg !9375
  %21 = add i32 %20, 1, !dbg !9375
  store volatile i32 %21, i32* %19, align 4, !dbg !9375
  br label %30, !dbg !9376

22:                                               ; preds = %7
  %23 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9377
  %24 = bitcast i8* %23 to i32*, !dbg !9377
  store volatile i32 %1, i32* %24, align 4, !dbg !9378
  br label %30, !dbg !9379

25:                                               ; preds = %7
  %26 = icmp eq i32 %11, 2, !dbg !9380
  br i1 %26, label %66, label %27, !dbg !9382

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9383
  %29 = bitcast i8* %28 to i32*, !dbg !9383
  store volatile i32 %1, i32* %29, align 4, !dbg !9385
  br label %30, !dbg !9386

30:                                               ; preds = %27, %7, %22, %17, %12
  call void @llvm.dbg.value(metadata i32 1, metadata !9354, metadata !DIExpression()), !dbg !9356
  %31 = icmp eq i32 %11, 1, !dbg !9387
  br i1 %31, label %32, label %66, !dbg !9389

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9390
  %34 = bitcast i8* %33 to %struct.xLIST_ITEM*, !dbg !9390
  %35 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9390
  %36 = bitcast i8* %35 to i8**, !dbg !9390
  %37 = load i8*, i8** %36, align 4, !dbg !9390
  %38 = icmp eq i8* %37, null, !dbg !9390
  br i1 %38, label %40, label %39, !dbg !9393

39:                                               ; preds = %32
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4200) #18, !dbg !9394
  br label %40, !dbg !9394

40:                                               ; preds = %39, %32
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9396
  %42 = icmp eq i32 %41, 0, !dbg !9398
  br i1 %42, label %43, label %54, !dbg !9399

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9400
  %45 = bitcast i8* %44 to %struct.xLIST_ITEM*, !dbg !9400
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !9402
  %47 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9403
  %48 = bitcast i8* %47 to i32*, !dbg !9403
  %49 = load i32, i32* %48, align 4, !dbg !9403
  %50 = shl nuw i32 1, %49, !dbg !9403
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9403
  %52 = or i32 %51, %50, !dbg !9403
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !9403
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !9403
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !9403
  br label %55, !dbg !9404

54:                                               ; preds = %40
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %34) #18, !dbg !9405
  br label %55

55:                                               ; preds = %54, %43
  %56 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9407
  %57 = bitcast i8* %56 to i32*, !dbg !9407
  %58 = load i32, i32* %57, align 4, !dbg !9407
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9409
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 3, !dbg !9410
  %61 = load i32, i32* %60, align 4, !dbg !9410
  %62 = icmp ugt i32 %58, %61, !dbg !9411
  %63 = icmp ne i32* %3, null
  %64 = and i1 %63, %62, !dbg !9412
  br i1 %64, label %65, label %66, !dbg !9412

65:                                               ; preds = %55
  store i32 1, i32* %3, align 4, !dbg !9413
  br label %66, !dbg !9417

66:                                               ; preds = %25, %65, %55, %30
  %67 = phi i32 [ 1, %65 ], [ 1, %55 ], [ 1, %30 ], [ 0, %25 ]
  %68 = extractvalue { i32, i32 } %8, 0, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %68, metadata !7978, metadata !DIExpression()) #17, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %68, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 undef, metadata !7986, metadata !DIExpression()) #17, !dbg !9418
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %68) #17, !dbg !9420, !srcloc !7992
  ret i32 %67, !dbg !9421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !9422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9426, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32* %1, metadata !9427, metadata !DIExpression()), !dbg !9431
  %3 = icmp eq i8* %0, null, !dbg !9432
  br i1 %3, label %4, label %5, !dbg !9434

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4245) #18, !dbg !9435
  br label %5, !dbg !9435

5:                                                ; preds = %4, %2
  tail call void @vPortValidateInterruptPriority() #18, !dbg !9437
  call void @llvm.dbg.value(metadata i8* %0, metadata !9428, metadata !DIExpression()), !dbg !9431
  %6 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !9438, !srcloc !7981
  call void @llvm.dbg.value(metadata i32 undef, metadata !7978, metadata !DIExpression()) #17, !dbg !9440
  call void @llvm.dbg.value(metadata i32 undef, metadata !7979, metadata !DIExpression()) #17, !dbg !9440
  call void @llvm.dbg.value(metadata i32 undef, metadata !9430, metadata !DIExpression()), !dbg !9431
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9441
  %8 = bitcast i8* %7 to i32*, !dbg !9441
  %9 = load volatile i32, i32* %8, align 4, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %9, metadata !9429, metadata !DIExpression()), !dbg !9431
  store volatile i32 2, i32* %8, align 4, !dbg !9443
  %10 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9444
  %11 = bitcast i8* %10 to i32*, !dbg !9444
  %12 = load volatile i32, i32* %11, align 4, !dbg !9445
  %13 = add i32 %12, 1, !dbg !9445
  store volatile i32 %13, i32* %11, align 4, !dbg !9445
  %14 = icmp eq i32 %9, 1, !dbg !9446
  br i1 %14, label %15, label %49, !dbg !9448

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9449
  %17 = bitcast i8* %16 to %struct.xLIST_ITEM*, !dbg !9449
  %18 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9449
  %19 = bitcast i8* %18 to i8**, !dbg !9449
  %20 = load i8*, i8** %19, align 4, !dbg !9449
  %21 = icmp eq i8* %20, null, !dbg !9449
  br i1 %21, label %23, label %22, !dbg !9452

22:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.101, i32 0, i32 0), i32 noundef 4281) #18, !dbg !9453
  br label %23, !dbg !9453

23:                                               ; preds = %22, %15
  %24 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9455
  %25 = icmp eq i32 %24, 0, !dbg !9457
  br i1 %25, label %26, label %37, !dbg !9458

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9459
  %28 = bitcast i8* %27 to %struct.xLIST_ITEM*, !dbg !9459
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !9461
  %30 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9462
  %31 = bitcast i8* %30 to i32*, !dbg !9462
  %32 = load i32, i32* %31, align 4, !dbg !9462
  %33 = shl nuw i32 1, %32, !dbg !9462
  %34 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9462
  %35 = or i32 %34, %33, !dbg !9462
  store volatile i32 %35, i32* @uxTopReadyPriority, align 4, !dbg !9462
  %36 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !9462
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %36, %struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !9462
  br label %38, !dbg !9463

37:                                               ; preds = %23
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %17) #18, !dbg !9464
  br label %38

38:                                               ; preds = %37, %26
  %39 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9466
  %40 = bitcast i8* %39 to i32*, !dbg !9466
  %41 = load i32, i32* %40, align 4, !dbg !9466
  %42 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9468
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %42, i32 0, i32 3, !dbg !9469
  %44 = load i32, i32* %43, align 4, !dbg !9469
  %45 = icmp ugt i32 %41, %44, !dbg !9470
  %46 = icmp ne i32* %1, null
  %47 = and i1 %46, %45, !dbg !9471
  br i1 %47, label %48, label %49, !dbg !9471

48:                                               ; preds = %38
  store i32 1, i32* %1, align 4, !dbg !9472
  br label %49, !dbg !9476

49:                                               ; preds = %48, %38, %5
  %50 = extractvalue { i32, i32 } %6, 0, !dbg !9438
  call void @llvm.dbg.value(metadata i32 %50, metadata !7978, metadata !DIExpression()) #17, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %50, metadata !9430, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32 undef, metadata !7986, metadata !DIExpression()) #17, !dbg !9477
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %50) #17, !dbg !9479, !srcloc !7992
  ret void, !dbg !9480
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetBottomOfStack(i8* noundef readonly %0) local_unnamed_addr #8 !dbg !9481 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9483, metadata !DIExpression()), !dbg !9485
  %2 = icmp eq i8* %0, null, !dbg !9486
  br i1 %2, label %3, label %5, !dbg !9487

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9488
  br label %7, !dbg !9487

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !9489
  br label %7, !dbg !9487

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !9487
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !9484, metadata !DIExpression()), !dbg !9485
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !9490
  %10 = load i32*, i32** %9, align 4, !dbg !9490
  %11 = ptrtoint i32* %10 to i32, !dbg !9491
  ret i32 %11, !dbg !9492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #4 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9498, metadata !DIExpression()), !dbg !9499
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !9500
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !9501
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !9502
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !9502
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !9503
  store i32 -1, i32* %5, align 4, !dbg !9504
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !9505
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !9506
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !9506
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !9507
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !9508
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !9508
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9509
  store i32 0, i32* %10, align 4, !dbg !9510
  ret void, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !9512 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !9517, metadata !DIExpression()), !dbg !9518
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !9519
  store i8* null, i8** %2, align 4, !dbg !9520
  ret void, !dbg !9521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #14 !dbg !9522 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9526, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !9527, metadata !DIExpression()), !dbg !9529
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !9530
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !9530
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !9528, metadata !DIExpression()), !dbg !9529
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !9531
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !9532
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !9533
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !9533
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !9534
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !9535
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !9536
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !9537
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !9538
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !9539
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !9540
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !9541
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !9541
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9542
  %14 = load i32, i32* %13, align 4, !dbg !9543
  %15 = add i32 %14, 1, !dbg !9543
  store i32 %15, i32* %13, align 4, !dbg !9543
  ret void, !dbg !9544
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #15 !dbg !9545 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9547, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !9548, metadata !DIExpression()), !dbg !9551
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !9552
  %4 = load i32, i32* %3, align 4, !dbg !9552
  call void @llvm.dbg.value(metadata i32 %4, metadata !9550, metadata !DIExpression()), !dbg !9551
  %5 = icmp eq i32 %4, -1, !dbg !9553
  br i1 %5, label %6, label %11, !dbg !9555

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !9556
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9556
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !9549, metadata !DIExpression()), !dbg !9551
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %9, align 4, !dbg !9558
  br label %21, !dbg !9559

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !9560
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !9563
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !9549, metadata !DIExpression()), !dbg !9551
  br label %14, !dbg !9564

14:                                               ; preds = %14, %11
  %15 = phi %struct.xLIST_ITEM* [ %13, %11 ], [ %17, %14 ], !dbg !9565
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %15, metadata !9549, metadata !DIExpression()), !dbg !9551
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 1, !dbg !9566
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !9566
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 0, !dbg !9568
  %19 = load i32, i32* %18, align 4, !dbg !9568
  %20 = icmp ugt i32 %19, %4, !dbg !9569
  br i1 %20, label %21, label %14, !dbg !9570, !llvm.loop !9571

21:                                               ; preds = %14, %6
  %22 = phi %struct.xLIST_ITEM* [ %10, %6 ], [ %17, %14 ], !dbg !9558
  %23 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %15, %14 ], !dbg !9573
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %23, metadata !9549, metadata !DIExpression()), !dbg !9551
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %23, i32 0, i32 1, !dbg !9558
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !9574
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %25, align 4, !dbg !9575
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !9576
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %26, align 4, !dbg !9577
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !9578
  store %struct.xLIST_ITEM* %23, %struct.xLIST_ITEM** %27, align 4, !dbg !9579
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !9580
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !9581
  %29 = bitcast i8** %28 to %struct.xLIST**, !dbg !9582
  store %struct.xLIST* %0, %struct.xLIST** %29, align 4, !dbg !9582
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9583
  %31 = load i32, i32* %30, align 4, !dbg !9584
  %32 = add i32 %31, 1, !dbg !9584
  store i32 %32, i32* %30, align 4, !dbg !9584
  ret void, !dbg !9585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #14 !dbg !9586 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !9590, metadata !DIExpression()), !dbg !9592
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !9593
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !9593
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !9593
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !9591, metadata !DIExpression()), !dbg !9592
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !9594
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9594
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !9595
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9595
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !9596
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !9597
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9598
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9599
  %12 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !9600
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !9601
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !9602
  %14 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %13, align 4, !dbg !9602
  %15 = icmp eq %struct.xLIST_ITEM* %14, %0, !dbg !9604
  br i1 %15, label %16, label %18, !dbg !9605

16:                                               ; preds = %1
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9606
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %13, align 4, !dbg !9608
  br label %18, !dbg !9609

18:                                               ; preds = %1, %16
  store i8* null, i8** %2, align 4, !dbg !9610
  %19 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !9611
  %20 = load i32, i32* %19, align 4, !dbg !9612
  %21 = add i32 %20, -1, !dbg !9612
  store i32 %21, i32* %19, align 4, !dbg !9612
  ret i32 %21, !dbg !9613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReset(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9614 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9618, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 %1, metadata !9619, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i8* %0, metadata !9620, metadata !DIExpression()), !dbg !9622
  %3 = icmp eq i8* %0, null, !dbg !9623
  br i1 %3, label %4, label %5, !dbg !9625

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 264) #18, !dbg !9626
  br label %5, !dbg !9626

5:                                                ; preds = %4, %2
  tail call void @vPortEnterCritical() #18, !dbg !9628
  %6 = bitcast i8* %0 to i8**, !dbg !9629
  %7 = load i8*, i8** %6, align 4, !dbg !9629
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9631
  %9 = bitcast i8* %8 to i32*, !dbg !9631
  %10 = load i32, i32* %9, align 4, !dbg !9631
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9632
  %12 = bitcast i8* %11 to i32*, !dbg !9632
  %13 = load i32, i32* %12, align 4, !dbg !9632
  %14 = mul i32 %13, %10, !dbg !9633
  %15 = getelementptr inbounds i8, i8* %7, i32 %14, !dbg !9634
  %16 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9635
  %17 = bitcast i8* %16 to i8**, !dbg !9635
  store i8* %15, i8** %17, align 4, !dbg !9636
  %18 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !9637
  %19 = bitcast i8* %18 to i32*, !dbg !9637
  store volatile i32 0, i32* %19, align 4, !dbg !9638
  %20 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !9639
  %21 = bitcast i8* %20 to i8**, !dbg !9639
  store i8* %7, i8** %21, align 4, !dbg !9640
  %22 = add i32 %10, -1, !dbg !9641
  %23 = mul i32 %22, %13, !dbg !9642
  %24 = getelementptr inbounds i8, i8* %7, i32 %23, !dbg !9643
  %25 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !9644
  %26 = bitcast i8* %25 to i8**, !dbg !9645
  store i8* %24, i8** %26, align 4, !dbg !9646
  %27 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !9647
  %28 = bitcast i8* %27 to i32*, !dbg !9647
  store volatile i32 -1, i32* %28, align 4, !dbg !9648
  %29 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !9649
  %30 = bitcast i8* %29 to i32*, !dbg !9649
  store volatile i32 -1, i32* %30, align 4, !dbg !9650
  %31 = icmp eq i32 %1, 0, !dbg !9651
  %32 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !9653
  br i1 %31, label %33, label %42, !dbg !9654

33:                                               ; preds = %5
  %34 = bitcast i8* %32 to i32*, !dbg !9655
  %35 = load i32, i32* %34, align 4, !dbg !9655
  %36 = icmp eq i32 %35, 0, !dbg !9655
  br i1 %36, label %46, label %37, !dbg !9658

37:                                               ; preds = %33
  %38 = bitcast i8* %32 to %struct.xLIST*, !dbg !9655
  %39 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %38) #18, !dbg !9659
  %40 = icmp eq i32 %39, 1, !dbg !9662
  br i1 %40, label %41, label %46, !dbg !9663

41:                                               ; preds = %37
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9664
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9664, !srcloc !9667
  tail call void asm sideeffect "isb", ""() #17, !dbg !9664, !srcloc !9668
  br label %46, !dbg !9669

42:                                               ; preds = %5
  %43 = bitcast i8* %32 to %struct.xLIST*, !dbg !9670
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %43) #18, !dbg !9672
  %44 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !9673
  %45 = bitcast i8* %44 to %struct.xLIST*, !dbg !9673
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %45) #18, !dbg !9674
  br label %46

46:                                               ; preds = %37, %41, %33, %42
  tail call void @vPortExitCritical() #18, !dbg !9675
  ret i32 1, !dbg !9676
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !9677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9681, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i32 %1, metadata !9682, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i8 %2, metadata !9683, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i8* null, metadata !9686, metadata !DIExpression()), !dbg !9688
  %4 = icmp eq i32 %0, 0, !dbg !9689
  br i1 %4, label %5, label %6, !dbg !9691

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.133, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 324) #18, !dbg !9692
  br label %6, !dbg !9692

6:                                                ; preds = %5, %3
  %7 = icmp eq i32 %1, 0, !dbg !9694
  %8 = mul i32 %1, %0, !dbg !9696
  %9 = add i32 %8, 85, !dbg !9696
  %10 = select i1 %7, i32 84, i32 %9, !dbg !9696
  call void @llvm.dbg.value(metadata i32 undef, metadata !9685, metadata !DIExpression()), !dbg !9688
  %11 = tail call i8* @pvPortMalloc(i32 noundef %10) #18, !dbg !9697
  call void @llvm.dbg.value(metadata i8* %11, metadata !9687, metadata !DIExpression()), !dbg !9688
  %12 = icmp eq i8* %11, null, !dbg !9698
  br i1 %12, label %23, label %13, !dbg !9700

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !9684, metadata !DIExpression()), !dbg !9688
  %14 = select i1 %7, i32 0, i32 84, !dbg !9701
  %15 = getelementptr i8, i8* %11, i32 %14, !dbg !9701
  %16 = bitcast i8* %11 to i8**, !dbg !9703
  store i8* %15, i8** %16, align 4, !dbg !9703
  %17 = getelementptr inbounds i8, i8* %11, i32 60, !dbg !9705
  %18 = bitcast i8* %17 to i32*, !dbg !9705
  store i32 %0, i32* %18, align 4, !dbg !9706
  %19 = getelementptr inbounds i8, i8* %11, i32 64, !dbg !9707
  %20 = bitcast i8* %19 to i32*, !dbg !9707
  store i32 %1, i32* %20, align 4, !dbg !9708
  %21 = tail call i32 @xQueueGenericReset(i8* noundef nonnull %11, i32 noundef 1) #20, !dbg !9709
  %22 = getelementptr inbounds i8, i8* %11, i32 80, !dbg !9710
  store i8 %2, i8* %22, align 4, !dbg !9712
  call void @llvm.dbg.value(metadata i8* %11, metadata !9686, metadata !DIExpression()), !dbg !9688
  br label %24, !dbg !9713

23:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !9686, metadata !DIExpression()), !dbg !9688
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 386) #18, !dbg !9714
  br label %24, !dbg !9714

24:                                               ; preds = %13, %23
  ret i8* %11, !dbg !9717
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateMutex(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9718 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9722, metadata !DIExpression()), !dbg !9724
  %2 = tail call i8* @pvPortMalloc(i32 noundef 84) #18, !dbg !9725
  call void @llvm.dbg.value(metadata i8* %2, metadata !9723, metadata !DIExpression()), !dbg !9724
  %3 = icmp eq i8* %2, null, !dbg !9726
  br i1 %3, label %28, label %4, !dbg !9726

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !9723, metadata !DIExpression()), !dbg !9724
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !9727
  %6 = bitcast i8* %5 to i8**, !dbg !9727
  store i8* null, i8** %6, align 4, !dbg !9730
  %7 = bitcast i8* %2 to i8**, !dbg !9731
  store i8* null, i8** %7, align 4, !dbg !9732
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !9733
  %9 = bitcast i8* %8 to i8**, !dbg !9733
  store i8* null, i8** %9, align 4, !dbg !9734
  %10 = getelementptr inbounds i8, i8* %2, i32 12, !dbg !9735
  %11 = bitcast i8* %10 to i8**, !dbg !9736
  store i8* null, i8** %11, align 4, !dbg !9737
  %12 = getelementptr inbounds i8, i8* %2, i32 56, !dbg !9738
  %13 = bitcast i8* %12 to i32*, !dbg !9738
  store volatile i32 0, i32* %13, align 4, !dbg !9739
  %14 = getelementptr inbounds i8, i8* %2, i32 60, !dbg !9740
  %15 = bitcast i8* %14 to i32*, !dbg !9740
  store i32 1, i32* %15, align 4, !dbg !9741
  %16 = getelementptr inbounds i8, i8* %2, i32 64, !dbg !9742
  %17 = bitcast i8* %16 to i32*, !dbg !9742
  store i32 0, i32* %17, align 4, !dbg !9743
  %18 = getelementptr inbounds i8, i8* %2, i32 68, !dbg !9744
  %19 = bitcast i8* %18 to i32*, !dbg !9744
  store volatile i32 -1, i32* %19, align 4, !dbg !9745
  %20 = getelementptr inbounds i8, i8* %2, i32 72, !dbg !9746
  %21 = bitcast i8* %20 to i32*, !dbg !9746
  store volatile i32 -1, i32* %21, align 4, !dbg !9747
  %22 = getelementptr inbounds i8, i8* %2, i32 80, !dbg !9748
  store i8 %0, i8* %22, align 4, !dbg !9750
  %23 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !9751
  %24 = bitcast i8* %23 to %struct.xLIST*, !dbg !9751
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %24) #18, !dbg !9752
  %25 = getelementptr inbounds i8, i8* %2, i32 36, !dbg !9753
  %26 = bitcast i8* %25 to %struct.xLIST*, !dbg !9753
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %26) #18, !dbg !9754
  %27 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %2, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !9755
  br label %29, !dbg !9756

28:                                               ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 450) #18, !dbg !9757
  br label %29, !dbg !9757

29:                                               ; preds = %4, %28
  ret i8* %2, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSend(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9761 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9767, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i8* %1, metadata !9768, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %2, metadata !9769, metadata !DIExpression()), !dbg !9780
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !9770, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 0, metadata !9771, metadata !DIExpression()), !dbg !9780
  %7 = bitcast %struct.hal_cache_region_config_t* %6 to i8*, !dbg !9781
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17, !dbg !9781
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %6, metadata !9773, metadata !DIExpression()), !dbg !9782
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !9783
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !9779, metadata !DIExpression()), !dbg !9780
  %9 = icmp eq i8* %0, null, !dbg !9784
  br i1 %9, label %10, label %11, !dbg !9786

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 619) #18, !dbg !9787
  br label %11, !dbg !9787

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !9789
  br i1 %12, label %13, label %19, !dbg !9789

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9789
  %15 = bitcast i8* %14 to i32*, !dbg !9789
  %16 = load i32, i32* %15, align 4, !dbg !9789
  %17 = icmp eq i32 %16, 0, !dbg !9789
  br i1 %17, label %19, label %18, !dbg !9791

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 620) #18, !dbg !9792
  br label %19, !dbg !9792

19:                                               ; preds = %11, %18, %13
  %20 = icmp eq i32 %3, 2, !dbg !9794
  br i1 %20, label %21, label %27, !dbg !9794

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9794
  %23 = bitcast i8* %22 to i32*, !dbg !9794
  %24 = load i32, i32* %23, align 4, !dbg !9794
  %25 = icmp eq i32 %24, 1, !dbg !9794
  br i1 %25, label %27, label %26, !dbg !9796

26:                                               ; preds = %21
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 621) #18, !dbg !9797
  br label %27, !dbg !9797

27:                                               ; preds = %19, %26, %21
  %28 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !9799
  %29 = icmp eq i32 %28, 0, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %2, metadata !9769, metadata !DIExpression()), !dbg !9780
  %30 = icmp ne i32 %2, 0, !dbg !9799
  %31 = and i1 %29, %30, !dbg !9799
  br i1 %31, label %32, label %33, !dbg !9802

32:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 624) #18, !dbg !9803
  br label %33, !dbg !9803

33:                                               ; preds = %32, %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !9771, metadata !DIExpression()), !dbg !9780
  call void @vPortEnterCritical() #18, !dbg !9805
  %34 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !9809
  %35 = bitcast i8* %34 to i32*, !dbg !9809
  %36 = load volatile i32, i32* %35, align 4, !dbg !9809
  %37 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9812
  %38 = bitcast i8* %37 to i32*, !dbg !9812
  %39 = load i32, i32* %38, align 4, !dbg !9812
  %40 = icmp ult i32 %36, %39, !dbg !9813
  %41 = or i1 %20, %40, !dbg !9814
  br i1 %41, label %50, label %42, !dbg !9814

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %0, i32 68
  %44 = bitcast i8* %43 to i32*
  %45 = getelementptr inbounds i8, i8* %0, i32 72
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %0, i32 16
  %48 = bitcast i8* %47 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !9769, metadata !DIExpression()), !dbg !9780
  %49 = icmp eq i32 %2, 0, !dbg !9815
  br i1 %49, label %65, label %66, !dbg !9818

50:                                               ; preds = %90, %33
  %51 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1, i32 noundef %3) #20, !dbg !9819
  call void @llvm.dbg.value(metadata i32 %51, metadata !9772, metadata !DIExpression()), !dbg !9780
  %52 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !9821
  %53 = bitcast i8* %52 to i32*, !dbg !9821
  %54 = load i32, i32* %53, align 4, !dbg !9821
  %55 = icmp eq i32 %54, 0, !dbg !9821
  br i1 %55, label %61, label %56, !dbg !9824

56:                                               ; preds = %50
  %57 = bitcast i8* %52 to %struct.xLIST*, !dbg !9821
  %58 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %57) #18, !dbg !9825
  %59 = icmp eq i32 %58, 1, !dbg !9828
  br i1 %59, label %60, label %64, !dbg !9829

60:                                               ; preds = %56
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9830
  call void asm sideeffect "dsb", ""() #17, !dbg !9830, !srcloc !9833
  call void asm sideeffect "isb", ""() #17, !dbg !9830, !srcloc !9834
  br label %64, !dbg !9835

61:                                               ; preds = %50
  %62 = icmp eq i32 %51, 0, !dbg !9836
  br i1 %62, label %64, label %63, !dbg !9838

63:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9839
  call void asm sideeffect "dsb", ""() #17, !dbg !9839, !srcloc !9842
  call void asm sideeffect "isb", ""() #17, !dbg !9839, !srcloc !9843
  br label %64, !dbg !9844

64:                                               ; preds = %63, %61, %60, %56
  call void @vPortExitCritical() #18, !dbg !9845
  br label %97, !dbg !9846

65:                                               ; preds = %94, %42
  call void @vPortExitCritical() #18, !dbg !9847
  br label %97, !dbg !9849

66:                                               ; preds = %42
  call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %6) #18, !dbg !9850
  call void @llvm.dbg.value(metadata i32 1, metadata !9771, metadata !DIExpression()), !dbg !9780
  br label %67, !dbg !9853

67:                                               ; preds = %94, %66
  call void @llvm.dbg.value(metadata i32 1, metadata !9771, metadata !DIExpression()), !dbg !9780
  call void @vPortExitCritical() #18, !dbg !9854
  call void @vTaskSuspendAll() #18, !dbg !9855
  call void @vPortEnterCritical() #18, !dbg !9856
  %68 = load volatile i32, i32* %44, align 4, !dbg !9857
  %69 = icmp eq i32 %68, -1, !dbg !9857
  br i1 %69, label %70, label %71, !dbg !9860

70:                                               ; preds = %67
  store volatile i32 0, i32* %44, align 4, !dbg !9861
  br label %71, !dbg !9861

71:                                               ; preds = %70, %67
  %72 = load volatile i32, i32* %46, align 4, !dbg !9863
  %73 = icmp eq i32 %72, -1, !dbg !9863
  br i1 %73, label %74, label %75, !dbg !9860

74:                                               ; preds = %71
  store volatile i32 0, i32* %46, align 4, !dbg !9865
  br label %75, !dbg !9865

75:                                               ; preds = %74, %71
  call void @vPortExitCritical() #18, !dbg !9856
  call void @llvm.dbg.value(metadata i32* %5, metadata !9769, metadata !DIExpression(DW_OP_deref)), !dbg !9780
  %76 = call i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef nonnull %6, i32* noundef nonnull %5) #18, !dbg !9867
  %77 = icmp eq i32 %76, 0, !dbg !9869
  br i1 %77, label %78, label %88, !dbg !9870

78:                                               ; preds = %75
  %79 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9871
  %80 = icmp eq i32 %79, 0, !dbg !9874
  br i1 %80, label %86, label %81, !dbg !9875

81:                                               ; preds = %78
  %82 = load i32, i32* %5, align 4, !dbg !9876
  call void @llvm.dbg.value(metadata i32 %82, metadata !9769, metadata !DIExpression()), !dbg !9780
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %48, i32 noundef %82) #18, !dbg !9878
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9879
  %83 = call i32 @xTaskResumeAll() #18, !dbg !9880
  %84 = icmp eq i32 %83, 0, !dbg !9882
  br i1 %84, label %85, label %90, !dbg !9883

85:                                               ; preds = %81
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9884
  call void asm sideeffect "dsb", ""() #17, !dbg !9884, !srcloc !9887
  call void asm sideeffect "isb", ""() #17, !dbg !9884, !srcloc !9888
  br label %90, !dbg !9889

86:                                               ; preds = %78
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9890
  %87 = call i32 @xTaskResumeAll() #18, !dbg !9892
  br label %90

88:                                               ; preds = %75
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9893
  %89 = call i32 @xTaskResumeAll() #18, !dbg !9895
  br label %97, !dbg !9896

90:                                               ; preds = %86, %85, %81
  call void @llvm.dbg.value(metadata i32 undef, metadata !9771, metadata !DIExpression()), !dbg !9780
  call void @vPortEnterCritical() #18, !dbg !9805
  %91 = load volatile i32, i32* %35, align 4, !dbg !9809
  %92 = load i32, i32* %38, align 4, !dbg !9812
  %93 = icmp ult i32 %91, %92, !dbg !9813
  br i1 %93, label %50, label %94, !dbg !9814, !llvm.loop !9897

94:                                               ; preds = %90
  %95 = load i32, i32* %5, align 4, !dbg !9900
  call void @llvm.dbg.value(metadata i32 %95, metadata !9769, metadata !DIExpression()), !dbg !9780
  %96 = icmp eq i32 %95, 0, !dbg !9815
  br i1 %96, label %65, label %67, !dbg !9818

97:                                               ; preds = %88, %65, %64
  %98 = phi i32 [ 1, %64 ], [ 0, %65 ], [ 0, %88 ], !dbg !9901
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17, !dbg !9902
  ret i32 %98, !dbg !9902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !9903 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9907, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i8* %1, metadata !9908, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 0, metadata !9910, metadata !DIExpression()), !dbg !9911
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !9912
  %5 = load i32, i32* %4, align 4, !dbg !9912
  %6 = icmp eq i32 %5, 0, !dbg !9914
  br i1 %6, label %7, label %15, !dbg !9915

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9916
  %9 = load i8*, i8** %8, align 4, !dbg !9916
  %10 = icmp eq i8* %9, null, !dbg !9920
  br i1 %10, label %11, label %54, !dbg !9921

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9922
  %13 = load i8*, i8** %12, align 4, !dbg !9922
  %14 = tail call i32 @xTaskPriorityDisinherit(i8* noundef %13) #18, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %14, metadata !9910, metadata !DIExpression()), !dbg !9911
  store i8* null, i8** %12, align 4, !dbg !9925
  br label %54, !dbg !9926

15:                                               ; preds = %3
  %16 = icmp eq i32 %2, 0, !dbg !9927
  br i1 %16, label %17, label %30, !dbg !9929

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !9930
  %19 = load i8*, i8** %18, align 4, !dbg !9930
  %20 = tail call i8* @memcpy(i8* noundef %19, i8* noundef %1, i32 noundef %5) #18, !dbg !9932
  %21 = load i32, i32* %4, align 4, !dbg !9933
  %22 = load i8*, i8** %18, align 4, !dbg !9934
  %23 = getelementptr inbounds i8, i8* %22, i32 %21, !dbg !9934
  store i8* %23, i8** %18, align 4, !dbg !9934
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9935
  %25 = load i8*, i8** %24, align 4, !dbg !9935
  %26 = icmp ult i8* %23, %25, !dbg !9937
  br i1 %26, label %54, label %27, !dbg !9938

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9939
  %29 = load i8*, i8** %28, align 4, !dbg !9939
  store i8* %29, i8** %18, align 4, !dbg !9941
  br label %54, !dbg !9942

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !9943
  %32 = load i8*, i8** %31, align 4, !dbg !9943
  %33 = tail call i8* @memcpy(i8* noundef %32, i8* noundef %1, i32 noundef %5) #18, !dbg !9945
  %34 = load i32, i32* %4, align 4, !dbg !9946
  %35 = load i8*, i8** %31, align 4, !dbg !9947
  %36 = sub i32 0, %34, !dbg !9947
  %37 = getelementptr inbounds i8, i8* %35, i32 %36, !dbg !9947
  store i8* %37, i8** %31, align 4, !dbg !9947
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9948
  %39 = load i8*, i8** %38, align 4, !dbg !9948
  %40 = icmp ult i8* %37, %39, !dbg !9950
  br i1 %40, label %41, label %45, !dbg !9951

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9952
  %43 = load i8*, i8** %42, align 4, !dbg !9952
  %44 = getelementptr inbounds i8, i8* %43, i32 %36, !dbg !9954
  store i8* %44, i8** %31, align 4, !dbg !9955
  br label %45, !dbg !9956

45:                                               ; preds = %30, %41
  %46 = icmp eq i32 %2, 2, !dbg !9957
  br i1 %46, label %47, label %54, !dbg !9959

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9960
  %49 = load volatile i32, i32* %48, align 4, !dbg !9960
  %50 = icmp eq i32 %49, 0, !dbg !9963
  br i1 %50, label %54, label %51, !dbg !9964

51:                                               ; preds = %47
  %52 = load volatile i32, i32* %48, align 4, !dbg !9965
  %53 = add i32 %52, -1, !dbg !9965
  store volatile i32 %53, i32* %48, align 4, !dbg !9965
  br label %54, !dbg !9967

54:                                               ; preds = %17, %27, %45, %51, %47, %11, %7
  %55 = phi i32 [ %14, %11 ], [ 0, %7 ], [ 0, %27 ], [ 0, %17 ], [ 0, %51 ], [ 0, %47 ], [ 0, %45 ], !dbg !9911
  call void @llvm.dbg.value(metadata i32 %55, metadata !9910, metadata !DIExpression()), !dbg !9911
  %56 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9968
  %57 = load volatile i32, i32* %56, align 4, !dbg !9969
  %58 = add i32 %57, 1, !dbg !9969
  store volatile i32 %58, i32* %56, align 4, !dbg !9969
  ret i32 %55, !dbg !9970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9977, metadata !DIExpression()), !dbg !9979
  tail call void @vPortEnterCritical() #18, !dbg !9980
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9981
  %3 = load volatile i32, i32* %2, align 4, !dbg !9981
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !9984
  %5 = load i32, i32* %4, align 4, !dbg !9984
  %6 = icmp eq i32 %3, %5, !dbg !9985
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !9978, metadata !DIExpression()), !dbg !9979
  tail call void @vPortExitCritical() #18, !dbg !9986
  ret i32 %7, !dbg !9987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !9988 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9992, metadata !DIExpression()), !dbg !9993
  tail call void @vPortEnterCritical() #18, !dbg !9994
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !9995
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !9995
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10
  %5 = load volatile i32, i32* %4, align 4, !dbg !10000
  %6 = icmp sgt i32 %5, 0, !dbg !10001
  br i1 %6, label %7, label %19, !dbg !10002

7:                                                ; preds = %1, %14
  %8 = load i32, i32* %3, align 4, !dbg !9995
  %9 = icmp eq i32 %8, 0, !dbg !9995
  br i1 %9, label %19, label %10, !dbg !10003

10:                                               ; preds = %7
  %11 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %2) #18, !dbg !10004
  %12 = icmp eq i32 %11, 0, !dbg !10007
  br i1 %12, label %14, label %13, !dbg !10008

13:                                               ; preds = %10
  tail call void @vTaskMissedYield() #18, !dbg !10009
  br label %14, !dbg !10011

14:                                               ; preds = %13, %10
  %15 = load volatile i32, i32* %4, align 4, !dbg !10012
  %16 = add nsw i32 %15, -1, !dbg !10012
  store volatile i32 %16, i32* %4, align 4, !dbg !10012
  %17 = load volatile i32, i32* %4, align 4, !dbg !10000
  %18 = icmp sgt i32 %17, 0, !dbg !10001
  br i1 %18, label %7, label %19, !dbg !10002, !llvm.loop !10013

19:                                               ; preds = %14, %7, %1
  store volatile i32 -1, i32* %4, align 4, !dbg !10015
  tail call void @vPortExitCritical() #18, !dbg !10016
  tail call void @vPortEnterCritical() #18, !dbg !10017
  %20 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !10018
  %21 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %20, i32 0, i32 0, !dbg !10018
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %23 = load volatile i32, i32* %22, align 4, !dbg !10022
  %24 = icmp sgt i32 %23, 0, !dbg !10023
  br i1 %24, label %25, label %37, !dbg !10024

25:                                               ; preds = %19, %32
  %26 = load i32, i32* %21, align 4, !dbg !10018
  %27 = icmp eq i32 %26, 0, !dbg !10018
  br i1 %27, label %37, label %28, !dbg !10025

28:                                               ; preds = %25
  %29 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %20) #18, !dbg !10026
  %30 = icmp eq i32 %29, 0, !dbg !10029
  br i1 %30, label %32, label %31, !dbg !10030

31:                                               ; preds = %28
  tail call void @vTaskMissedYield() #18, !dbg !10031
  br label %32, !dbg !10033

32:                                               ; preds = %28, %31
  %33 = load volatile i32, i32* %22, align 4, !dbg !10034
  %34 = add nsw i32 %33, -1, !dbg !10034
  store volatile i32 %34, i32* %22, align 4, !dbg !10034
  %35 = load volatile i32, i32* %22, align 4, !dbg !10022
  %36 = icmp sgt i32 %35, 0, !dbg !10023
  br i1 %36, label %25, label %37, !dbg !10024, !llvm.loop !10035

37:                                               ; preds = %32, %25, %19
  store volatile i32 -1, i32* %22, align 4, !dbg !10037
  tail call void @vPortExitCritical() #18, !dbg !10038
  ret void, !dbg !10039
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveMutexRecursive(i8* noundef %0) local_unnamed_addr #0 !dbg !10040 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10044, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.value(metadata i8* %0, metadata !10046, metadata !DIExpression()), !dbg !10047
  %2 = icmp eq i8* %0, null, !dbg !10048
  br i1 %2, label %3, label %4, !dbg !10050

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 494) #18, !dbg !10051
  br label %4, !dbg !10051

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10053
  %6 = bitcast i8* %5 to i8**, !dbg !10053
  %7 = load i8*, i8** %6, align 4, !dbg !10053
  %8 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !10055
  %9 = icmp eq i8* %7, %8, !dbg !10056
  br i1 %9, label %10, label %18, !dbg !10057

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10058
  %12 = bitcast i8* %11 to i32*, !dbg !10060
  %13 = load i32, i32* %12, align 4, !dbg !10061
  %14 = add i32 %13, -1, !dbg !10061
  store i32 %14, i32* %12, align 4, !dbg !10061
  %15 = icmp eq i32 %14, 0, !dbg !10062
  br i1 %15, label %16, label %18, !dbg !10064

16:                                               ; preds = %10
  %17 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !10065
  br label %18, !dbg !10067

18:                                               ; preds = %4, %16, %10
  %19 = phi i32 [ 1, %10 ], [ 1, %16 ], [ 0, %4 ], !dbg !10068
  call void @llvm.dbg.value(metadata i32 %19, metadata !10045, metadata !DIExpression()), !dbg !10047
  ret i32 %19, !dbg !10069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueTakeMutexRecursive(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10074, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %1, metadata !10075, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i8* %0, metadata !10077, metadata !DIExpression()), !dbg !10078
  %3 = icmp eq i8* %0, null, !dbg !10079
  br i1 %3, label %4, label %5, !dbg !10081

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 549) #18, !dbg !10082
  br label %5, !dbg !10082

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10084
  %7 = bitcast i8* %6 to i8**, !dbg !10084
  %8 = load i8*, i8** %7, align 4, !dbg !10084
  %9 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !10086
  %10 = icmp eq i8* %8, %9, !dbg !10087
  br i1 %10, label %14, label %11, !dbg !10088

11:                                               ; preds = %5
  %12 = tail call i32 @xQueueGenericReceive(i8* noundef nonnull %0, i8* noundef null, i32 noundef %1, i32 noundef 0) #20, !dbg !10089
  call void @llvm.dbg.value(metadata i32 %12, metadata !10076, metadata !DIExpression()), !dbg !10078
  %13 = icmp eq i32 %12, 1, !dbg !10091
  br i1 %13, label %14, label %19, !dbg !10093

14:                                               ; preds = %11, %5
  %15 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10094
  %16 = bitcast i8* %15 to i32*, !dbg !10094
  %17 = load i32, i32* %16, align 4, !dbg !10094
  %18 = add i32 %17, 1, !dbg !10094
  store i32 %18, i32* %16, align 4, !dbg !10094
  br label %19, !dbg !10095

19:                                               ; preds = %14, %11
  %20 = phi i32 [ %12, %11 ], [ 1, %14 ], !dbg !10094
  call void @llvm.dbg.value(metadata i32 %20, metadata !10076, metadata !DIExpression()), !dbg !10078
  ret i32 %20, !dbg !10095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReceive(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10096 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10100, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.value(metadata i8* %1, metadata !10101, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.value(metadata i32 %2, metadata !10102, metadata !DIExpression()), !dbg !10108
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !10103, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.value(metadata i32 0, metadata !10104, metadata !DIExpression()), !dbg !10108
  %7 = bitcast %struct.hal_cache_region_config_t* %6 to i8*, !dbg !10109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17, !dbg !10109
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %6, metadata !10105, metadata !DIExpression()), !dbg !10110
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10111
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !10107, metadata !DIExpression()), !dbg !10108
  %9 = icmp eq i8* %0, null, !dbg !10112
  br i1 %9, label %10, label %11, !dbg !10114

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1368) #18, !dbg !10115
  br label %11, !dbg !10115

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !10117
  br i1 %12, label %13, label %19, !dbg !10117

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10117
  %15 = bitcast i8* %14 to i32*, !dbg !10117
  %16 = load i32, i32* %15, align 4, !dbg !10117
  %17 = icmp eq i32 %16, 0, !dbg !10117
  br i1 %17, label %19, label %18, !dbg !10119

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1369) #18, !dbg !10120
  br label %19, !dbg !10120

19:                                               ; preds = %11, %18, %13
  %20 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !10122
  %21 = icmp eq i32 %20, 0, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %2, metadata !10102, metadata !DIExpression()), !dbg !10108
  %22 = icmp ne i32 %2, 0, !dbg !10122
  %23 = and i1 %21, %22, !dbg !10122
  br i1 %23, label %24, label %25, !dbg !10125

24:                                               ; preds = %19
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1372) #18, !dbg !10126
  br label %25, !dbg !10126

25:                                               ; preds = %24, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !10104, metadata !DIExpression()), !dbg !10108
  call void @vPortEnterCritical() #18, !dbg !10128
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10132
  %27 = bitcast i8* %26 to i32*, !dbg !10132
  %28 = load volatile i32, i32* %27, align 4, !dbg !10132
  %29 = icmp eq i32 %28, 0, !dbg !10135
  br i1 %29, label %30, label %41, !dbg !10136

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %0, i32 68
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %0, i32 72
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %0 to i8**
  %36 = getelementptr inbounds i8, i8* %0, i32 4
  %37 = bitcast i8* %36 to i8**
  %38 = getelementptr inbounds i8, i8* %0, i32 36
  %39 = bitcast i8* %38 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !10102, metadata !DIExpression()), !dbg !10108
  %40 = icmp eq i32 %2, 0, !dbg !10137
  br i1 %40, label %77, label %78, !dbg !10140

41:                                               ; preds = %107, %25
  %42 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10141
  %43 = bitcast i8* %42 to i8**, !dbg !10143
  %44 = load i8*, i8** %43, align 4, !dbg !10143
  call void @llvm.dbg.value(metadata i8* %44, metadata !10106, metadata !DIExpression()), !dbg !10108
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1) #20, !dbg !10144
  %45 = icmp eq i32 %3, 0, !dbg !10145
  br i1 %45, label %46, label %66, !dbg !10147

46:                                               ; preds = %41
  %47 = load volatile i32, i32* %27, align 4, !dbg !10148
  %48 = add i32 %47, -1, !dbg !10148
  store volatile i32 %48, i32* %27, align 4, !dbg !10148
  %49 = bitcast i8* %0 to i8**, !dbg !10150
  %50 = load i8*, i8** %49, align 4, !dbg !10150
  %51 = icmp eq i8* %50, null, !dbg !10153
  br i1 %51, label %52, label %56, !dbg !10154

52:                                               ; preds = %46
  %53 = call i8* @pvTaskIncrementMutexHeldCount() #18, !dbg !10155
  %54 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10157
  %55 = bitcast i8* %54 to i8**, !dbg !10157
  store i8* %53, i8** %55, align 4, !dbg !10158
  br label %56, !dbg !10159

56:                                               ; preds = %46, %52
  %57 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !10160
  %58 = bitcast i8* %57 to i32*, !dbg !10160
  %59 = load i32, i32* %58, align 4, !dbg !10160
  %60 = icmp eq i32 %59, 0, !dbg !10160
  br i1 %60, label %76, label %61, !dbg !10162

61:                                               ; preds = %56
  %62 = bitcast i8* %57 to %struct.xLIST*, !dbg !10160
  %63 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %62) #18, !dbg !10163
  %64 = icmp eq i32 %63, 1, !dbg !10166
  br i1 %64, label %65, label %76, !dbg !10167

65:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10168
  call void asm sideeffect "dsb", ""() #17, !dbg !10168, !srcloc !10171
  call void asm sideeffect "isb", ""() #17, !dbg !10168, !srcloc !10172
  br label %76, !dbg !10173

66:                                               ; preds = %41
  store i8* %44, i8** %43, align 4, !dbg !10174
  %67 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10176
  %68 = bitcast i8* %67 to i32*, !dbg !10176
  %69 = load i32, i32* %68, align 4, !dbg !10176
  %70 = icmp eq i32 %69, 0, !dbg !10176
  br i1 %70, label %76, label %71, !dbg !10178

71:                                               ; preds = %66
  %72 = bitcast i8* %67 to %struct.xLIST*, !dbg !10176
  %73 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %72) #18, !dbg !10179
  %74 = icmp eq i32 %73, 0, !dbg !10182
  br i1 %74, label %76, label %75, !dbg !10183

75:                                               ; preds = %71
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10184
  call void asm sideeffect "dsb", ""() #17, !dbg !10184, !srcloc !10187
  call void asm sideeffect "isb", ""() #17, !dbg !10184, !srcloc !10188
  br label %76, !dbg !10189

76:                                               ; preds = %71, %75, %66, %61, %65, %56
  call void @vPortExitCritical() #18, !dbg !10190
  br label %113, !dbg !10191

77:                                               ; preds = %110, %30
  call void @vPortExitCritical() #18, !dbg !10192
  br label %113, !dbg !10194

78:                                               ; preds = %30
  call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %6) #18, !dbg !10195
  call void @llvm.dbg.value(metadata i32 1, metadata !10104, metadata !DIExpression()), !dbg !10108
  br label %79, !dbg !10198

79:                                               ; preds = %110, %78
  call void @llvm.dbg.value(metadata i32 1, metadata !10104, metadata !DIExpression()), !dbg !10108
  call void @vPortExitCritical() #18, !dbg !10199
  call void @vTaskSuspendAll() #18, !dbg !10200
  call void @vPortEnterCritical() #18, !dbg !10201
  %80 = load volatile i32, i32* %32, align 4, !dbg !10202
  %81 = icmp eq i32 %80, -1, !dbg !10202
  br i1 %81, label %82, label %83, !dbg !10205

82:                                               ; preds = %79
  store volatile i32 0, i32* %32, align 4, !dbg !10206
  br label %83, !dbg !10206

83:                                               ; preds = %82, %79
  %84 = load volatile i32, i32* %34, align 4, !dbg !10208
  %85 = icmp eq i32 %84, -1, !dbg !10208
  br i1 %85, label %86, label %87, !dbg !10205

86:                                               ; preds = %83
  store volatile i32 0, i32* %34, align 4, !dbg !10210
  br label %87, !dbg !10210

87:                                               ; preds = %86, %83
  call void @vPortExitCritical() #18, !dbg !10201
  call void @llvm.dbg.value(metadata i32* %5, metadata !10102, metadata !DIExpression(DW_OP_deref)), !dbg !10108
  %88 = call i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef nonnull %6, i32* noundef nonnull %5) #18, !dbg !10212
  %89 = icmp eq i32 %88, 0, !dbg !10214
  br i1 %89, label %90, label %105, !dbg !10215

90:                                               ; preds = %87
  %91 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10216
  %92 = icmp eq i32 %91, 0, !dbg !10219
  br i1 %92, label %103, label %93, !dbg !10220

93:                                               ; preds = %90
  %94 = load i8*, i8** %35, align 4, !dbg !10221
  %95 = icmp eq i8* %94, null, !dbg !10225
  br i1 %95, label %96, label %98, !dbg !10226

96:                                               ; preds = %93
  call void @vPortEnterCritical() #18, !dbg !10227
  %97 = load i8*, i8** %37, align 4, !dbg !10229
  call void @vTaskPriorityInherit(i8* noundef %97) #18, !dbg !10231
  call void @vPortExitCritical() #18, !dbg !10232
  br label %98, !dbg !10233

98:                                               ; preds = %93, %96
  %99 = load i32, i32* %5, align 4, !dbg !10234
  call void @llvm.dbg.value(metadata i32 %99, metadata !10102, metadata !DIExpression()), !dbg !10108
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %39, i32 noundef %99) #18, !dbg !10235
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10236
  %100 = call i32 @xTaskResumeAll() #18, !dbg !10237
  %101 = icmp eq i32 %100, 0, !dbg !10239
  br i1 %101, label %102, label %107, !dbg !10240

102:                                              ; preds = %98
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10241
  call void asm sideeffect "dsb", ""() #17, !dbg !10241, !srcloc !10244
  call void asm sideeffect "isb", ""() #17, !dbg !10241, !srcloc !10245
  br label %107, !dbg !10246

103:                                              ; preds = %90
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10247
  %104 = call i32 @xTaskResumeAll() #18, !dbg !10249
  br label %107

105:                                              ; preds = %87
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10250
  %106 = call i32 @xTaskResumeAll() #18, !dbg !10252
  br label %113, !dbg !10253

107:                                              ; preds = %103, %98, %102
  call void @llvm.dbg.value(metadata i32 undef, metadata !10104, metadata !DIExpression()), !dbg !10108
  call void @vPortEnterCritical() #18, !dbg !10128
  %108 = load volatile i32, i32* %27, align 4, !dbg !10132
  %109 = icmp eq i32 %108, 0, !dbg !10135
  br i1 %109, label %110, label %41, !dbg !10136, !llvm.loop !10254

110:                                              ; preds = %107
  %111 = load i32, i32* %5, align 4, !dbg !10257
  call void @llvm.dbg.value(metadata i32 %111, metadata !10102, metadata !DIExpression()), !dbg !10108
  %112 = icmp eq i32 %111, 0, !dbg !10137
  br i1 %112, label %77, label %79, !dbg !10140

113:                                              ; preds = %105, %77, %76
  %114 = phi i32 [ 1, %76 ], [ 0, %77 ], [ 0, %105 ], !dbg !10258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17, !dbg !10259
  ret i32 %114, !dbg !10259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !10260 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10264, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.value(metadata i8* %1, metadata !10265, metadata !DIExpression()), !dbg !10266
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !10267
  %4 = load i32, i32* %3, align 4, !dbg !10267
  %5 = icmp eq i32 %4, 0, !dbg !10269
  br i1 %5, label %19, label %6, !dbg !10270

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !10271
  %8 = load i8*, i8** %7, align 4, !dbg !10273
  %9 = getelementptr inbounds i8, i8* %8, i32 %4, !dbg !10273
  store i8* %9, i8** %7, align 4, !dbg !10273
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !10274
  %11 = load i8*, i8** %10, align 4, !dbg !10274
  %12 = icmp ult i8* %9, %11, !dbg !10276
  br i1 %12, label %16, label %13, !dbg !10277

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !10278
  %15 = load i8*, i8** %14, align 4, !dbg !10278
  store i8* %15, i8** %7, align 4, !dbg !10280
  br label %16, !dbg !10281

16:                                               ; preds = %6, %13
  %17 = phi i8* [ %9, %6 ], [ %15, %13 ], !dbg !10282
  %18 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %17, i32 noundef %4) #18, !dbg !10283
  br label %19, !dbg !10284

19:                                               ; preds = %16, %2
  ret void, !dbg !10285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !10286 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10288, metadata !DIExpression()), !dbg !10290
  tail call void @vPortEnterCritical() #18, !dbg !10291
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !10292
  %3 = load volatile i32, i32* %2, align 4, !dbg !10292
  %4 = icmp eq i32 %3, 0, !dbg !10295
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !10289, metadata !DIExpression()), !dbg !10290
  tail call void @vPortExitCritical() #18, !dbg !10296
  ret i32 %5, !dbg !10297
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateCountingSemaphore(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10302, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.value(metadata i32 %1, metadata !10303, metadata !DIExpression()), !dbg !10305
  %3 = icmp eq i32 %0, 0, !dbg !10306
  br i1 %3, label %4, label %5, !dbg !10308

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 590) #18, !dbg !10309
  br label %5, !dbg !10309

5:                                                ; preds = %4, %2
  %6 = icmp ugt i32 %1, %0, !dbg !10311
  br i1 %6, label %7, label %8, !dbg !10313

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 591) #18, !dbg !10314
  br label %8, !dbg !10314

8:                                                ; preds = %7, %5
  %9 = tail call i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef 0, i8 noundef zeroext 2) #20, !dbg !10316
  call void @llvm.dbg.value(metadata i8* %9, metadata !10304, metadata !DIExpression()), !dbg !10305
  %10 = icmp eq i8* %9, null, !dbg !10317
  br i1 %10, label %14, label %11, !dbg !10317

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %9, i32 56, !dbg !10318
  %13 = bitcast i8* %12 to i32*, !dbg !10318
  store volatile i32 %1, i32* %13, align 4, !dbg !10321
  br label %15, !dbg !10322

14:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 606) #18, !dbg !10323
  br label %15, !dbg !10323

15:                                               ; preds = %11, %14
  ret i8* %9, !dbg !10326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSendFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10327 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10331, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.value(metadata i8* %1, metadata !10332, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.value(metadata i32* %2, metadata !10333, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.value(metadata i32 %3, metadata !10334, metadata !DIExpression()), !dbg !10338
  %5 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10339
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %5, metadata !10337, metadata !DIExpression()), !dbg !10338
  %6 = icmp eq i8* %0, null, !dbg !10340
  br i1 %6, label %7, label %8, !dbg !10342

7:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1064) #18, !dbg !10343
  br label %8, !dbg !10343

8:                                                ; preds = %7, %4
  %9 = icmp eq i8* %1, null, !dbg !10345
  br i1 %9, label %10, label %16, !dbg !10345

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10345
  %12 = bitcast i8* %11 to i32*, !dbg !10345
  %13 = load i32, i32* %12, align 4, !dbg !10345
  %14 = icmp eq i32 %13, 0, !dbg !10345
  br i1 %14, label %16, label %15, !dbg !10347

15:                                               ; preds = %10
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1065) #18, !dbg !10348
  br label %16, !dbg !10348

16:                                               ; preds = %8, %15, %10
  %17 = icmp eq i32 %3, 2, !dbg !10350
  br i1 %17, label %18, label %24, !dbg !10350

18:                                               ; preds = %16
  %19 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10350
  %20 = bitcast i8* %19 to i32*, !dbg !10350
  %21 = load i32, i32* %20, align 4, !dbg !10350
  %22 = icmp eq i32 %21, 1, !dbg !10350
  br i1 %22, label %24, label %23, !dbg !10352

23:                                               ; preds = %18
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1066) #18, !dbg !10353
  br label %24, !dbg !10353

24:                                               ; preds = %16, %23, %18
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10355
  %25 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10356, !srcloc !10362
  call void @llvm.dbg.value(metadata i32 undef, metadata !10359, metadata !DIExpression()) #17, !dbg !10363
  call void @llvm.dbg.value(metadata i32 undef, metadata !10360, metadata !DIExpression()) #17, !dbg !10363
  call void @llvm.dbg.value(metadata i32 undef, metadata !10336, metadata !DIExpression()), !dbg !10338
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10364
  %27 = bitcast i8* %26 to i32*, !dbg !10364
  %28 = load volatile i32, i32* %27, align 4, !dbg !10364
  %29 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10367
  %30 = bitcast i8* %29 to i32*, !dbg !10367
  %31 = load i32, i32* %30, align 4, !dbg !10367
  %32 = icmp ult i32 %28, %31, !dbg !10368
  %33 = or i1 %17, %32, !dbg !10369
  br i1 %33, label %34, label %55, !dbg !10369

34:                                               ; preds = %24
  %35 = tail call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %5, i8* noundef %1, i32 noundef %3) #20, !dbg !10370
  %36 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10372
  %37 = bitcast i8* %36 to i32*, !dbg !10372
  %38 = load volatile i32, i32* %37, align 4, !dbg !10372
  %39 = icmp eq i32 %38, -1, !dbg !10374
  br i1 %39, label %40, label %52, !dbg !10375

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10376
  %42 = bitcast i8* %41 to i32*, !dbg !10376
  %43 = load i32, i32* %42, align 4, !dbg !10376
  %44 = icmp eq i32 %43, 0, !dbg !10376
  br i1 %44, label %55, label %45, !dbg !10380

45:                                               ; preds = %40
  %46 = bitcast i8* %41 to %struct.xLIST*, !dbg !10376
  %47 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %46) #18, !dbg !10381
  %48 = icmp ne i32 %47, 0, !dbg !10384
  %49 = icmp ne i32* %2, null
  %50 = and i1 %49, %48, !dbg !10385
  br i1 %50, label %51, label %55, !dbg !10385

51:                                               ; preds = %45
  store i32 1, i32* %2, align 4, !dbg !10386
  br label %55, !dbg !10390

52:                                               ; preds = %34
  %53 = load volatile i32, i32* %37, align 4, !dbg !10391
  %54 = add nsw i32 %53, 1, !dbg !10391
  store volatile i32 %54, i32* %37, align 4, !dbg !10391
  br label %55

55:                                               ; preds = %24, %52, %40, %51, %45
  %56 = phi i32 [ 1, %45 ], [ 1, %51 ], [ 1, %40 ], [ 1, %52 ], [ 0, %24 ], !dbg !10393
  %57 = extractvalue { i32, i32 } %25, 0, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %57, metadata !10359, metadata !DIExpression()) #17, !dbg !10363
  call void @llvm.dbg.value(metadata i32 %57, metadata !10336, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.value(metadata i32 %56, metadata !10335, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.value(metadata i32 undef, metadata !10394, metadata !DIExpression()) #17, !dbg !10397
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %57) #17, !dbg !10399, !srcloc !10400
  ret i32 %56, !dbg !10401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !10402 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10406, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32* %1, metadata !10407, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i8* %0, metadata !10410, metadata !DIExpression()), !dbg !10411
  %3 = icmp eq i8* %0, null, !dbg !10412
  br i1 %3, label %4, label %5, !dbg !10414

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1213) #18, !dbg !10415
  br label %5, !dbg !10415

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10417
  %7 = bitcast i8* %6 to i32*, !dbg !10417
  %8 = load i32, i32* %7, align 4, !dbg !10417
  %9 = icmp eq i32 %8, 0, !dbg !10417
  br i1 %9, label %11, label %10, !dbg !10419

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1216) #18, !dbg !10420
  br label %11, !dbg !10420

11:                                               ; preds = %10, %5
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10422
  %12 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10423, !srcloc !10362
  call void @llvm.dbg.value(metadata i32 undef, metadata !10359, metadata !DIExpression()) #17, !dbg !10425
  call void @llvm.dbg.value(metadata i32 undef, metadata !10360, metadata !DIExpression()) #17, !dbg !10425
  call void @llvm.dbg.value(metadata i32 undef, metadata !10409, metadata !DIExpression()), !dbg !10411
  %13 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10426
  %14 = bitcast i8* %13 to i32*, !dbg !10426
  %15 = load volatile i32, i32* %14, align 4, !dbg !10426
  %16 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10429
  %17 = bitcast i8* %16 to i32*, !dbg !10429
  %18 = load i32, i32* %17, align 4, !dbg !10429
  %19 = icmp ult i32 %15, %18, !dbg !10430
  br i1 %19, label %20, label %42, !dbg !10431

20:                                               ; preds = %11
  %21 = load volatile i32, i32* %14, align 4, !dbg !10432
  %22 = add i32 %21, 1, !dbg !10432
  store volatile i32 %22, i32* %14, align 4, !dbg !10432
  %23 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10434
  %24 = bitcast i8* %23 to i32*, !dbg !10434
  %25 = load volatile i32, i32* %24, align 4, !dbg !10434
  %26 = icmp eq i32 %25, -1, !dbg !10436
  br i1 %26, label %27, label %39, !dbg !10437

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10438
  %29 = bitcast i8* %28 to i32*, !dbg !10438
  %30 = load i32, i32* %29, align 4, !dbg !10438
  %31 = icmp eq i32 %30, 0, !dbg !10438
  br i1 %31, label %42, label %32, !dbg !10442

32:                                               ; preds = %27
  %33 = bitcast i8* %28 to %struct.xLIST*, !dbg !10438
  %34 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %33) #18, !dbg !10443
  %35 = icmp ne i32 %34, 0, !dbg !10446
  %36 = icmp ne i32* %1, null
  %37 = and i1 %36, %35, !dbg !10447
  br i1 %37, label %38, label %42, !dbg !10447

38:                                               ; preds = %32
  store i32 1, i32* %1, align 4, !dbg !10448
  br label %42, !dbg !10452

39:                                               ; preds = %20
  %40 = load volatile i32, i32* %24, align 4, !dbg !10453
  %41 = add nsw i32 %40, 1, !dbg !10453
  store volatile i32 %41, i32* %24, align 4, !dbg !10453
  br label %42

42:                                               ; preds = %11, %39, %27, %38, %32
  %43 = phi i32 [ 1, %32 ], [ 1, %38 ], [ 1, %27 ], [ 1, %39 ], [ 0, %11 ], !dbg !10455
  %44 = extractvalue { i32, i32 } %12, 0, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %44, metadata !10359, metadata !DIExpression()) #17, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %44, metadata !10409, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 %43, metadata !10408, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 undef, metadata !10394, metadata !DIExpression()) #17, !dbg !10456
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %44) #17, !dbg !10458, !srcloc !10400
  ret i32 %43, !dbg !10459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceiveFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !10460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10464, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8* %1, metadata !10465, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32* %2, metadata !10466, metadata !DIExpression()), !dbg !10470
  %4 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10471
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %4, metadata !10469, metadata !DIExpression()), !dbg !10470
  %5 = icmp eq i8* %0, null, !dbg !10472
  br i1 %5, label %6, label %7, !dbg !10474

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1556) #18, !dbg !10475
  br label %7, !dbg !10475

7:                                                ; preds = %6, %3
  %8 = icmp eq i8* %1, null, !dbg !10477
  br i1 %8, label %9, label %15, !dbg !10477

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10477
  %11 = bitcast i8* %10 to i32*, !dbg !10477
  %12 = load i32, i32* %11, align 4, !dbg !10477
  %13 = icmp eq i32 %12, 0, !dbg !10477
  br i1 %13, label %15, label %14, !dbg !10479

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1557) #18, !dbg !10480
  br label %15, !dbg !10480

15:                                               ; preds = %7, %14, %9
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10482
  %16 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10483, !srcloc !10362
  call void @llvm.dbg.value(metadata i32 undef, metadata !10359, metadata !DIExpression()) #17, !dbg !10485
  call void @llvm.dbg.value(metadata i32 undef, metadata !10360, metadata !DIExpression()) #17, !dbg !10485
  call void @llvm.dbg.value(metadata i32 undef, metadata !10468, metadata !DIExpression()), !dbg !10470
  %17 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10486
  %18 = bitcast i8* %17 to i32*, !dbg !10486
  %19 = load volatile i32, i32* %18, align 4, !dbg !10486
  %20 = icmp eq i32 %19, 0, !dbg !10489
  br i1 %20, label %43, label %21, !dbg !10490

21:                                               ; preds = %15
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %4, i8* noundef %1) #20, !dbg !10491
  %22 = load volatile i32, i32* %18, align 4, !dbg !10493
  %23 = add i32 %22, -1, !dbg !10493
  store volatile i32 %23, i32* %18, align 4, !dbg !10493
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !10494
  %25 = bitcast i8* %24 to i32*, !dbg !10494
  %26 = load volatile i32, i32* %25, align 4, !dbg !10494
  %27 = icmp eq i32 %26, -1, !dbg !10496
  br i1 %27, label %28, label %40, !dbg !10497

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !10498
  %30 = bitcast i8* %29 to i32*, !dbg !10498
  %31 = load i32, i32* %30, align 4, !dbg !10498
  %32 = icmp eq i32 %31, 0, !dbg !10498
  br i1 %32, label %43, label %33, !dbg !10501

33:                                               ; preds = %28
  %34 = bitcast i8* %29 to %struct.xLIST*, !dbg !10498
  %35 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %34) #18, !dbg !10502
  %36 = icmp ne i32 %35, 0, !dbg !10505
  %37 = icmp ne i32* %2, null
  %38 = and i1 %37, %36, !dbg !10506
  br i1 %38, label %39, label %43, !dbg !10506

39:                                               ; preds = %33
  store i32 1, i32* %2, align 4, !dbg !10507
  br label %43, !dbg !10511

40:                                               ; preds = %21
  %41 = load volatile i32, i32* %25, align 4, !dbg !10512
  %42 = add nsw i32 %41, 1, !dbg !10512
  store volatile i32 %42, i32* %25, align 4, !dbg !10512
  br label %43

43:                                               ; preds = %15, %40, %28, %39, %33
  %44 = phi i32 [ 1, %33 ], [ 1, %39 ], [ 1, %28 ], [ 1, %40 ], [ 0, %15 ], !dbg !10514
  %45 = extractvalue { i32, i32 } %16, 0, !dbg !10483
  call void @llvm.dbg.value(metadata i32 %45, metadata !10359, metadata !DIExpression()) #17, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %45, metadata !10468, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %44, metadata !10467, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 undef, metadata !10394, metadata !DIExpression()) #17, !dbg !10515
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %45) #17, !dbg !10517, !srcloc !10400
  ret i32 %44, !dbg !10518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeekFromISR(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !10519 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10523, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i8* %1, metadata !10524, metadata !DIExpression()), !dbg !10529
  %3 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10530
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %3, metadata !10528, metadata !DIExpression()), !dbg !10529
  %4 = icmp eq i8* %0, null, !dbg !10531
  br i1 %4, label %5, label %6, !dbg !10533

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1644) #18, !dbg !10534
  br label %6, !dbg !10534

6:                                                ; preds = %5, %2
  %7 = icmp eq i8* %1, null, !dbg !10536
  br i1 %7, label %8, label %14, !dbg !10536

8:                                                ; preds = %6
  %9 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10536
  %10 = bitcast i8* %9 to i32*, !dbg !10536
  %11 = load i32, i32* %10, align 4, !dbg !10536
  %12 = icmp eq i32 %11, 0, !dbg !10536
  br i1 %12, label %14, label %13, !dbg !10538

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1645) #18, !dbg !10539
  br label %14, !dbg !10539

14:                                               ; preds = %6, %13, %8
  %15 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10541
  %16 = bitcast i8* %15 to i32*, !dbg !10541
  %17 = load i32, i32* %16, align 4, !dbg !10541
  %18 = icmp eq i32 %17, 0, !dbg !10541
  br i1 %18, label %19, label %20, !dbg !10543

19:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1646) #18, !dbg !10544
  br label %20, !dbg !10544

20:                                               ; preds = %19, %14
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10546
  %21 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10547, !srcloc !10362
  call void @llvm.dbg.value(metadata i32 undef, metadata !10359, metadata !DIExpression()) #17, !dbg !10549
  call void @llvm.dbg.value(metadata i32 undef, metadata !10360, metadata !DIExpression()) #17, !dbg !10549
  call void @llvm.dbg.value(metadata i32 undef, metadata !10526, metadata !DIExpression()), !dbg !10529
  %22 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10550
  %23 = bitcast i8* %22 to i32*, !dbg !10550
  %24 = load volatile i32, i32* %23, align 4, !dbg !10550
  %25 = icmp eq i32 %24, 0, !dbg !10553
  br i1 %25, label %30, label %26, !dbg !10554

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10555
  %28 = bitcast i8* %27 to i8**, !dbg !10557
  %29 = load i8*, i8** %28, align 4, !dbg !10557
  call void @llvm.dbg.value(metadata i8* %29, metadata !10527, metadata !DIExpression()), !dbg !10529
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %3, i8* noundef %1) #20, !dbg !10558
  store i8* %29, i8** %28, align 4, !dbg !10559
  call void @llvm.dbg.value(metadata i32 1, metadata !10525, metadata !DIExpression()), !dbg !10529
  br label %30, !dbg !10560

30:                                               ; preds = %20, %26
  %31 = phi i32 [ 1, %26 ], [ 0, %20 ], !dbg !10561
  %32 = extractvalue { i32, i32 } %21, 0, !dbg !10547
  call void @llvm.dbg.value(metadata i32 %32, metadata !10359, metadata !DIExpression()) #17, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %32, metadata !10526, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i32 %31, metadata !10525, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i32 undef, metadata !10394, metadata !DIExpression()) #17, !dbg !10562
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %32) #17, !dbg !10564, !srcloc !10400
  ret i32 %31, !dbg !10565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaiting(i8* noundef %0) local_unnamed_addr #0 !dbg !10566 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10571, metadata !DIExpression()), !dbg !10573
  %2 = icmp eq i8* %0, null, !dbg !10574
  br i1 %2, label %3, label %4, !dbg !10576

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1695) #18, !dbg !10577
  br label %4, !dbg !10577

4:                                                ; preds = %3, %1
  tail call void @vPortEnterCritical() #18, !dbg !10579
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10580
  %6 = bitcast i8* %5 to i32*, !dbg !10580
  %7 = load volatile i32, i32* %6, align 4, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %7, metadata !10572, metadata !DIExpression()), !dbg !10573
  tail call void @vPortExitCritical() #18, !dbg !10582
  ret i32 %7, !dbg !10583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueSpacesAvailable(i8* noundef %0) local_unnamed_addr #0 !dbg !10584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10586, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.value(metadata i8* %0, metadata !10588, metadata !DIExpression()), !dbg !10589
  %2 = icmp eq i8* %0, null, !dbg !10590
  br i1 %2, label %3, label %4, !dbg !10592

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1713) #18, !dbg !10593
  br label %4, !dbg !10593

4:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !10588, metadata !DIExpression()), !dbg !10589
  tail call void @vPortEnterCritical() #18, !dbg !10595
  %5 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10596
  %6 = bitcast i8* %5 to i32*, !dbg !10596
  %7 = load i32, i32* %6, align 4, !dbg !10596
  %8 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10598
  %9 = bitcast i8* %8 to i32*, !dbg !10598
  %10 = load volatile i32, i32* %9, align 4, !dbg !10598
  %11 = sub i32 %7, %10, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %11, metadata !10587, metadata !DIExpression()), !dbg !10589
  tail call void @vPortExitCritical() #18, !dbg !10600
  ret i32 %11, !dbg !10601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaitingFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10604, metadata !DIExpression()), !dbg !10606
  %2 = icmp eq i8* %0, null, !dbg !10607
  br i1 %2, label %3, label %4, !dbg !10609

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1729) #18, !dbg !10610
  br label %4, !dbg !10610

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10612
  %6 = bitcast i8* %5 to i32*, !dbg !10612
  %7 = load volatile i32, i32* %6, align 4, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %7, metadata !10605, metadata !DIExpression()), !dbg !10606
  ret i32 %7, !dbg !10613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !10614 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10618, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i8* %0, metadata !10619, metadata !DIExpression()), !dbg !10620
  %2 = icmp eq i8* %0, null, !dbg !10621
  br i1 %2, label %3, label %4, !dbg !10623

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 1741) #18, !dbg !10624
  br label %4, !dbg !10624

4:                                                ; preds = %3, %1
  tail call void @vQueueUnregisterQueue(i8* noundef %0) #20, !dbg !10626
  tail call void @vPortFree(i8* noundef %0) #18, !dbg !10628
  ret void, !dbg !10629
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueUnregisterQueue(i8* noundef readnone %0) local_unnamed_addr #15 !dbg !10630 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10632, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata i32 0, metadata !10633, metadata !DIExpression()), !dbg !10634
  br label %2, !dbg !10635

2:                                                ; preds = %1, %9
  %3 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !10633, metadata !DIExpression()), !dbg !10634
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !10637
  %5 = load i8*, i8** %4, align 4, !dbg !10637
  %6 = icmp eq i8* %5, %0, !dbg !10641
  br i1 %6, label %7, label %9, !dbg !10642

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !10643
  store i8* null, i8** %8, align 4, !dbg !10645
  br label %12, !dbg !10646

9:                                                ; preds = %2
  %10 = add nuw nsw i32 %3, 1, !dbg !10647
  call void @llvm.dbg.value(metadata i32 %10, metadata !10633, metadata !DIExpression()), !dbg !10634
  %11 = icmp eq i32 %10, 8, !dbg !10648
  br i1 %11, label %12, label %2, !dbg !10635, !llvm.loop !10649

12:                                               ; preds = %9, %7
  ret void, !dbg !10651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10656, metadata !DIExpression()), !dbg !10657
  %2 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10658
  %3 = bitcast i8* %2 to i32*, !dbg !10658
  %4 = load i32, i32* %3, align 4, !dbg !10658
  ret i32 %4, !dbg !10659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vQueueSetQueueNumber(i8* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !10660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10664, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 %1, metadata !10665, metadata !DIExpression()), !dbg !10666
  %3 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10667
  %4 = bitcast i8* %3 to i32*, !dbg !10667
  store i32 %1, i32* %4, align 4, !dbg !10668
  ret void, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10674, metadata !DIExpression()), !dbg !10675
  %2 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !10676
  %3 = load i8, i8* %2, align 4, !dbg !10676
  ret i8 %3, !dbg !10677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueEmptyFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10678 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10682, metadata !DIExpression()), !dbg !10684
  %2 = icmp eq i8* %0, null, !dbg !10685
  br i1 %2, label %3, label %4, !dbg !10687

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 2015) #18, !dbg !10688
  br label %4, !dbg !10688

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10690
  %6 = bitcast i8* %5 to i32*, !dbg !10690
  %7 = load volatile i32, i32* %6, align 4, !dbg !10690
  %8 = icmp eq i32 %7, 0, !dbg !10692
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !10683, metadata !DIExpression()), !dbg !10684
  ret i32 %9, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueFullFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10694 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10696, metadata !DIExpression()), !dbg !10698
  %2 = icmp eq i8* %0, null, !dbg !10699
  br i1 %2, label %3, label %4, !dbg !10701

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.132, i32 0, i32 0), i32 noundef 2054) #18, !dbg !10702
  br label %4, !dbg !10702

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10704
  %6 = bitcast i8* %5 to i32*, !dbg !10704
  %7 = load volatile i32, i32* %6, align 4, !dbg !10704
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10706
  %9 = bitcast i8* %8 to i32*, !dbg !10706
  %10 = load i32, i32* %9, align 4, !dbg !10706
  %11 = icmp eq i32 %7, %10, !dbg !10707
  %12 = zext i1 %11 to i32
  call void @llvm.dbg.value(metadata i32 %12, metadata !10697, metadata !DIExpression()), !dbg !10698
  ret i32 %12, !dbg !10708
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueAddToRegistry(i8* noundef %0, i8* noundef %1) local_unnamed_addr #15 !dbg !10709 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10713, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i8* %1, metadata !10714, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 0, metadata !10715, metadata !DIExpression()), !dbg !10716
  br label %3, !dbg !10717

3:                                                ; preds = %2, %10
  %4 = phi i32 [ 0, %2 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !10715, metadata !DIExpression()), !dbg !10716
  %5 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 0, !dbg !10719
  %6 = load i8*, i8** %5, align 4, !dbg !10719
  %7 = icmp eq i8* %6, null, !dbg !10723
  br i1 %7, label %8, label %10, !dbg !10724

8:                                                ; preds = %3
  store i8* %1, i8** %5, align 4, !dbg !10725
  %9 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 1, !dbg !10727
  store i8* %0, i8** %9, align 4, !dbg !10728
  br label %13, !dbg !10729

10:                                               ; preds = %3
  %11 = add nuw nsw i32 %4, 1, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %11, metadata !10715, metadata !DIExpression()), !dbg !10716
  %12 = icmp eq i32 %11, 8, !dbg !10731
  br i1 %12, label %13, label %3, !dbg !10717, !llvm.loop !10732

13:                                               ; preds = %10, %8
  ret void, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueWaitForMessageRestricted(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10739, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.value(metadata i32 %1, metadata !10740, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.value(metadata i8* %0, metadata !10741, metadata !DIExpression()), !dbg !10742
  tail call void @vPortEnterCritical() #18, !dbg !10743
  %3 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !10744
  %4 = bitcast i8* %3 to i32*, !dbg !10744
  %5 = load volatile i32, i32* %4, align 4, !dbg !10744
  %6 = icmp eq i32 %5, -1, !dbg !10744
  br i1 %6, label %7, label %8, !dbg !10747

7:                                                ; preds = %2
  store volatile i32 0, i32* %4, align 4, !dbg !10748
  br label %8, !dbg !10748

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10750
  %10 = bitcast i8* %9 to i32*, !dbg !10750
  %11 = load volatile i32, i32* %10, align 4, !dbg !10750
  %12 = icmp eq i32 %11, -1, !dbg !10750
  br i1 %12, label %13, label %14, !dbg !10747

13:                                               ; preds = %8
  store volatile i32 0, i32* %10, align 4, !dbg !10752
  br label %14, !dbg !10752

14:                                               ; preds = %13, %8
  tail call void @vPortExitCritical() #18, !dbg !10743
  %15 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10754
  %16 = bitcast i8* %15 to i32*, !dbg !10754
  %17 = load volatile i32, i32* %16, align 4, !dbg !10754
  %18 = icmp eq i32 %17, 0, !dbg !10756
  br i1 %18, label %19, label %22, !dbg !10757

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10758
  %21 = bitcast i8* %20 to %struct.xLIST*, !dbg !10758
  tail call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef nonnull %21, i32 noundef %1) #18, !dbg !10760
  br label %22, !dbg !10761

22:                                               ; preds = %14, %19
  %23 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10762
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %23, metadata !10741, metadata !DIExpression()), !dbg !10742
  tail call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %23) #20, !dbg !10763
  ret void, !dbg !10764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #0 !dbg !10765 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10767, metadata !DIExpression()), !dbg !10768
  tail call fastcc void @prvCheckForValidListAndQueue() #20, !dbg !10769
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !10770
  %2 = icmp eq i8* %1, null, !dbg !10772
  br i1 %2, label %6, label %3, !dbg !10773

3:                                                ; preds = %0
  %4 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvTimerTask, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.149, i32 0, i32 0), i16 noundef zeroext 2048, i8* noundef null, i32 noundef 19, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !10774
  call void @llvm.dbg.value(metadata i32 %4, metadata !10767, metadata !DIExpression()), !dbg !10768
  %5 = icmp eq i32 %4, 0, !dbg !10777
  br i1 %5, label %6, label %7, !dbg !10779

6:                                                ; preds = %0, %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 270) #18, !dbg !10780
  br label %7, !dbg !10780

7:                                                ; preds = %6, %3
  %8 = phi i32 [ 0, %6 ], [ %4, %3 ]
  ret i32 %8, !dbg !10782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckForValidListAndQueue() unnamed_addr #0 !dbg !10783 {
  tail call void @vPortEnterCritical() #18, !dbg !10784
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !10785
  %2 = icmp eq i8* %1, null, !dbg !10788
  br i1 %2, label %3, label %11, !dbg !10789

3:                                                ; preds = %0
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList1) #18, !dbg !10790
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList2) #18, !dbg !10792
  store %struct.xLIST* @xActiveTimerList1, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10793
  store %struct.xLIST* @xActiveTimerList2, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !10794
  %4 = tail call i8* @xQueueGenericCreate(i32 noundef 10, i32 noundef 12, i8 noundef zeroext 0) #18, !dbg !10795
  store i8* %4, i8** @xTimerQueue, align 4, !dbg !10796
  %5 = icmp eq i8* %4, null, !dbg !10797
  br i1 %5, label %6, label %9, !dbg !10799

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 784) #18, !dbg !10800
  %7 = load i8*, i8** @xTimerQueue, align 4, !dbg !10802
  %8 = icmp eq i8* %7, null, !dbg !10805
  br i1 %8, label %11, label %9, !dbg !10806

9:                                                ; preds = %3, %6
  %10 = phi i8* [ %7, %6 ], [ %4, %3 ]
  tail call void @vQueueAddToRegistry(i8* noundef nonnull %10, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.155, i32 0, i32 0)) #18, !dbg !10807
  br label %11, !dbg !10809

11:                                               ; preds = %0, %9, %6
  tail call void @vPortExitCritical() #18, !dbg !10810
  ret void, !dbg !10811
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTimerTask(i8* nocapture noundef readnone %0) #12 !dbg !10812 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10814, metadata !DIExpression()), !dbg !10817
  %3 = bitcast i32* %2 to i8*, !dbg !10818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !10818
  br label %4, !dbg !10819

4:                                                ; preds = %4, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10816, metadata !DIExpression(DW_OP_deref)), !dbg !10817
  %5 = call fastcc i32 @prvGetNextExpireTime(i32* noundef nonnull %2) #20, !dbg !10820
  call void @llvm.dbg.value(metadata i32 %5, metadata !10815, metadata !DIExpression()), !dbg !10817
  %6 = load i32, i32* %2, align 4, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %6, metadata !10816, metadata !DIExpression()), !dbg !10817
  tail call fastcc void @prvProcessTimerOrBlockTask(i32 noundef %5, i32 noundef %6) #20, !dbg !10825
  tail call fastcc void @prvProcessReceivedCommands() #20, !dbg !10826
  br label %4, !dbg !10827, !llvm.loop !10828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @prvGetNextExpireTime(i32* nocapture noundef writeonly %0) unnamed_addr #14 !dbg !10831 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !10833, metadata !DIExpression()), !dbg !10835
  %2 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10836
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !10836
  %4 = load i32, i32* %3, align 4, !dbg !10836
  %5 = icmp eq i32 %4, 0, !dbg !10836
  %6 = zext i1 %5 to i32, !dbg !10836
  store i32 %6, i32* %0, align 4, !dbg !10837
  br i1 %5, label %12, label %7, !dbg !10838

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !10839
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !10839
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 0, !dbg !10839
  %11 = load i32, i32* %10, align 4, !dbg !10839
  call void @llvm.dbg.value(metadata i32 %11, metadata !10834, metadata !DIExpression()), !dbg !10835
  br label %12, !dbg !10842

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ], !dbg !10843
  call void @llvm.dbg.value(metadata i32 %13, metadata !10834, metadata !DIExpression()), !dbg !10835
  ret i32 %13, !dbg !10844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessTimerOrBlockTask(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !10845 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10849, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i32 %1, metadata !10850, metadata !DIExpression()), !dbg !10853
  %4 = bitcast i32* %3 to i8*, !dbg !10854
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10854
  tail call void @vTaskSuspendAll() #18, !dbg !10855
  call void @llvm.dbg.value(metadata i32* %3, metadata !10852, metadata !DIExpression(DW_OP_deref)), !dbg !10853
  %5 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %3) #20, !dbg !10856
  call void @llvm.dbg.value(metadata i32 %5, metadata !10851, metadata !DIExpression()), !dbg !10853
  %6 = load i32, i32* %3, align 4, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %6, metadata !10852, metadata !DIExpression()), !dbg !10853
  %7 = icmp eq i32 %6, 0, !dbg !10860
  br i1 %7, label %8, label %20, !dbg !10861

8:                                                ; preds = %2
  %9 = icmp ne i32 %1, 0, !dbg !10862
  %10 = icmp ult i32 %5, %0
  %11 = select i1 %9, i1 true, i1 %10, !dbg !10865
  br i1 %11, label %14, label %12, !dbg !10865

12:                                               ; preds = %8
  %13 = tail call i32 @xTaskResumeAll() #18, !dbg !10866
  tail call fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %5) #20, !dbg !10868
  br label %22, !dbg !10869

14:                                               ; preds = %8
  %15 = load i8*, i8** @xTimerQueue, align 4, !dbg !10870
  %16 = sub i32 %0, %5, !dbg !10872
  tail call void @vQueueWaitForMessageRestricted(i8* noundef %15, i32 noundef %16) #18, !dbg !10873
  %17 = tail call i32 @xTaskResumeAll() #18, !dbg !10874
  %18 = icmp eq i32 %17, 0, !dbg !10876
  br i1 %18, label %19, label %22, !dbg !10877

19:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10878
  tail call void asm sideeffect "dsb", ""() #17, !dbg !10878, !srcloc !10881
  tail call void asm sideeffect "isb", ""() #17, !dbg !10878, !srcloc !10882
  br label %22, !dbg !10883

20:                                               ; preds = %2
  %21 = tail call i32 @xTaskResumeAll() #18, !dbg !10884
  br label %22

22:                                               ; preds = %12, %14, %19, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10886
  ret void, !dbg !10886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessReceivedCommands() unnamed_addr #0 !dbg !10887 {
  %1 = alloca %struct.tmrTimerQueueMessage, align 4
  %2 = alloca i32, align 4
  %3 = bitcast %struct.tmrTimerQueueMessage* %1 to i8*, !dbg !10907
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #17, !dbg !10907
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %1, metadata !10889, metadata !DIExpression()), !dbg !10908
  %4 = bitcast i32* %2 to i8*, !dbg !10909
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10909
  %5 = load i8*, i8** @xTimerQueue, align 4, !dbg !10910
  %6 = call i32 @xQueueGenericReceive(i8* noundef %5, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #18, !dbg !10910
  %7 = icmp eq i32 %6, 0, !dbg !10911
  br i1 %7, label %63, label %8, !dbg !10912

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 0
  %10 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 0
  br label %12, !dbg !10912

12:                                               ; preds = %8, %59
  %13 = load i32, i32* %9, align 4, !dbg !10913
  %14 = icmp sgt i32 %13, -1, !dbg !10916
  br i1 %14, label %15, label %59, !dbg !10917

15:                                               ; preds = %12
  %16 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %10, align 4, !dbg !10918
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !10903, metadata !DIExpression()), !dbg !10920
  %17 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, i32 4, !dbg !10921
  %18 = load i8*, i8** %17, align 4, !dbg !10921
  %19 = icmp eq i8* %18, null, !dbg !10921
  br i1 %19, label %23, label %20, !dbg !10923

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, !dbg !10921
  %22 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !10924
  br label %23, !dbg !10926

23:                                               ; preds = %15, %20
  call void @llvm.dbg.value(metadata i32* %2, metadata !10904, metadata !DIExpression(DW_OP_deref)), !dbg !10920
  %24 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %2) #20, !dbg !10927
  call void @llvm.dbg.value(metadata i32 %24, metadata !10906, metadata !DIExpression()), !dbg !10920
  %25 = load i32, i32* %9, align 4, !dbg !10928
  switch i32 %25, label %59 [
    i32 1, label %26
    i32 6, label %26
    i32 2, label %26
    i32 7, label %26
    i32 0, label %26
    i32 5, label %57
    i32 9, label %47
    i32 4, label %47
  ], !dbg !10929

26:                                               ; preds = %23, %23, %23, %23, %23
  %27 = load i32, i32* %11, align 4, !dbg !10930
  %28 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !10933
  %29 = load i32, i32* %28, align 4, !dbg !10933
  %30 = add i32 %29, %27, !dbg !10934
  %31 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %30, i32 noundef %24, i32 noundef %27) #20, !dbg !10935
  %32 = icmp eq i32 %31, 1, !dbg !10936
  br i1 %32, label %33, label %59, !dbg !10937

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 5, !dbg !10938
  %35 = load void (i8*)*, void (i8*)** %34, align 4, !dbg !10938
  %36 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !10940
  call void %35(i8* noundef %36) #18, !dbg !10941
  %37 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 3, !dbg !10942
  %38 = load i32, i32* %37, align 4, !dbg !10942
  %39 = icmp eq i32 %38, 1, !dbg !10944
  br i1 %39, label %40, label %59, !dbg !10945

40:                                               ; preds = %33
  %41 = load i32, i32* %11, align 4, !dbg !10946
  %42 = load i32, i32* %28, align 4, !dbg !10948
  %43 = add i32 %42, %41, !dbg !10949
  %44 = call i32 @xTimerGenericCommand(i8* noundef nonnull %36, i32 noundef 0, i32 noundef %43, i32* noundef null, i32 noundef 0) #20, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %44, metadata !10905, metadata !DIExpression()), !dbg !10920
  %45 = icmp eq i32 %44, 0, !dbg !10951
  br i1 %45, label %46, label %59, !dbg !10953

46:                                               ; preds = %40
  call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 662) #18, !dbg !10954
  br label %59, !dbg !10954

47:                                               ; preds = %23, %23
  %48 = load i32, i32* %11, align 4, !dbg !10956
  %49 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !10957
  store i32 %48, i32* %49, align 4, !dbg !10958
  %50 = icmp eq i32 %48, 0, !dbg !10959
  br i1 %50, label %51, label %53, !dbg !10961

51:                                               ; preds = %47
  call void @platform_assert(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 685) #18, !dbg !10962
  %52 = load i32, i32* %49, align 4, !dbg !10964
  br label %53, !dbg !10962

53:                                               ; preds = %51, %47
  %54 = phi i32 [ %52, %51 ], [ %48, %47 ], !dbg !10964
  %55 = add i32 %54, %24, !dbg !10965
  %56 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %55, i32 noundef %24, i32 noundef %24) #20, !dbg !10966
  br label %59, !dbg !10967

57:                                               ; preds = %23
  %58 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !10968
  call void @vPortFree(i8* noundef %58) #18, !dbg !10969
  br label %59, !dbg !10970

59:                                               ; preds = %40, %46, %53, %57, %26, %33, %23, %12
  %60 = load i8*, i8** @xTimerQueue, align 4, !dbg !10910
  %61 = call i32 @xQueueGenericReceive(i8* noundef %60, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #18, !dbg !10910
  %62 = icmp eq i32 %61, 0, !dbg !10911
  br i1 %62, label %63, label %12, !dbg !10912, !llvm.loop !10971

63:                                               ; preds = %59, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10973
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #17, !dbg !10973
  ret void, !dbg !10973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvSampleTimeNow(i32* nocapture noundef writeonly %0) unnamed_addr #0 !dbg !1097 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !1103, metadata !DIExpression()), !dbg !10974
  %2 = tail call i32 @xTaskGetTickCount() #18, !dbg !10975
  call void @llvm.dbg.value(metadata i32 %2, metadata !1104, metadata !DIExpression()), !dbg !10974
  %3 = load i32, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !10976
  %4 = icmp ult i32 %2, %3, !dbg !10978
  br i1 %4, label %5, label %6, !dbg !10979

5:                                                ; preds = %1
  tail call fastcc void @prvSwitchTimerLists() #20, !dbg !10980
  br label %6, !dbg !10982

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 1, %5 ], [ 0, %1 ], !dbg !10983
  store i32 %7, i32* %0, align 4, !dbg !10983
  store i32 %2, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !10984
  ret i32 %2, !dbg !10985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 !dbg !10986 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !10991, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 %1, metadata !10992, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 %2, metadata !10993, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 %3, metadata !10994, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 0, metadata !10995, metadata !DIExpression()), !dbg !10996
  %5 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, !dbg !10997
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 0, !dbg !10997
  store i32 %1, i32* %6, align 4, !dbg !10997
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, i32 3, !dbg !10998
  %8 = bitcast i8** %7 to %struct.tmrTimerControl**, !dbg !10998
  store %struct.tmrTimerControl* %0, %struct.tmrTimerControl** %8, align 4, !dbg !10998
  %9 = icmp ugt i32 %1, %2, !dbg !10999
  br i1 %9, label %15, label %10, !dbg !11001

10:                                               ; preds = %4
  %11 = sub i32 %2, %3, !dbg !11002
  %12 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 2, !dbg !11005
  %13 = load i32, i32* %12, align 4, !dbg !11005
  %14 = icmp ult i32 %11, %13, !dbg !11006
  br i1 %14, label %19, label %22, !dbg !11007

15:                                               ; preds = %4
  %16 = icmp uge i32 %2, %3, !dbg !11008
  %17 = icmp ult i32 %1, %3
  %18 = or i1 %16, %17, !dbg !11011
  br i1 %18, label %19, label %22, !dbg !11011

19:                                               ; preds = %15, %10
  %20 = phi %struct.xLIST** [ @pxOverflowTimerList, %10 ], [ @pxCurrentTimerList, %15 ]
  %21 = load %struct.xLIST*, %struct.xLIST** %20, align 4, !dbg !11012
  tail call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %5) #18, !dbg !11012
  br label %22, !dbg !11013

22:                                               ; preds = %19, %15, %10
  %23 = phi i32 [ 1, %10 ], [ 1, %15 ], [ 0, %19 ], !dbg !10996
  call void @llvm.dbg.value(metadata i32 %23, metadata !10995, metadata !DIExpression()), !dbg !10996
  ret i32 %23, !dbg !11013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGenericCommand(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32 noundef %4) local_unnamed_addr #0 !dbg !11014 {
  %6 = alloca %struct.tmrTimerQueueMessage, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11018, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %1, metadata !11019, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %2, metadata !11020, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32* %3, metadata !11021, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %4, metadata !11022, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 0, metadata !11023, metadata !DIExpression()), !dbg !11025
  %7 = bitcast %struct.tmrTimerQueueMessage* %6 to i8*, !dbg !11026
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #17, !dbg !11026
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %6, metadata !11024, metadata !DIExpression()), !dbg !11027
  %8 = load i8*, i8** @xTimerQueue, align 4, !dbg !11028
  %9 = icmp eq i8* %8, null, !dbg !11030
  br i1 %9, label %26, label %10, !dbg !11031

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 0, !dbg !11032
  store i32 %1, i32* %11, align 4, !dbg !11034
  %12 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 0, !dbg !11035
  store i32 %2, i32* %12, align 4, !dbg !11036
  %13 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 1, !dbg !11037
  %14 = bitcast %struct.tmrTimerControl** %13 to i8**, !dbg !11038
  store i8* %0, i8** %14, align 4, !dbg !11038
  %15 = icmp slt i32 %1, 6, !dbg !11039
  br i1 %15, label %16, label %24, !dbg !11041

16:                                               ; preds = %10
  %17 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !11042
  %18 = icmp eq i32 %17, 2, !dbg !11045
  %19 = load i8*, i8** @xTimerQueue, align 4, !dbg !11046
  br i1 %18, label %20, label %22, !dbg !11047

20:                                               ; preds = %16
  %21 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef %4, i32 noundef 0) #18, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %21, metadata !11023, metadata !DIExpression()), !dbg !11025
  br label %26, !dbg !11050

22:                                               ; preds = %16
  %23 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef 0, i32 noundef 0) #18, !dbg !11051
  call void @llvm.dbg.value(metadata i32 %23, metadata !11023, metadata !DIExpression()), !dbg !11025
  br label %26

24:                                               ; preds = %10
  %25 = call i32 @xQueueGenericSendFromISR(i8* noundef nonnull %8, i8* noundef nonnull %7, i32* noundef %3, i32 noundef 0) #18, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %25, metadata !11023, metadata !DIExpression()), !dbg !11025
  br label %26

26:                                               ; preds = %5, %24, %22, %20
  %27 = phi i32 [ %21, %20 ], [ %23, %22 ], [ %25, %24 ], [ 0, %5 ], !dbg !11025
  call void @llvm.dbg.value(metadata i32 %27, metadata !11023, metadata !DIExpression()), !dbg !11025
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #17, !dbg !11055
  ret i32 %27, !dbg !11056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSwitchTimerLists() unnamed_addr #0 !dbg !11057 {
  %1 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11064
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !11064
  %3 = load i32, i32* %2, align 4, !dbg !11064
  %4 = icmp eq i32 %3, 0, !dbg !11064
  br i1 %4, label %43, label %5, !dbg !11065

5:                                                ; preds = %0, %38
  %6 = phi %struct.xLIST* [ %39, %38 ], [ %1, %0 ]
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !11066
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !11066
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 0, !dbg !11066
  %10 = load i32, i32* %9, align 4, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %10, metadata !11059, metadata !DIExpression()), !dbg !11068
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !11069
  %12 = load i8*, i8** %11, align 4, !dbg !11069
  call void @llvm.dbg.value(metadata i8* %12, metadata !11062, metadata !DIExpression()), !dbg !11068
  %13 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !11070
  %14 = bitcast i8* %13 to %struct.xLIST_ITEM*, !dbg !11070
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %14) #18, !dbg !11071
  %16 = getelementptr inbounds i8, i8* %12, i32 36, !dbg !11072
  %17 = bitcast i8* %16 to void (i8*)**, !dbg !11072
  %18 = load void (i8*)*, void (i8*)** %17, align 4, !dbg !11072
  tail call void %18(i8* noundef %12) #18, !dbg !11073
  %19 = getelementptr inbounds i8, i8* %12, i32 28, !dbg !11074
  %20 = bitcast i8* %19 to i32*, !dbg !11074
  %21 = load i32, i32* %20, align 4, !dbg !11074
  %22 = icmp eq i32 %21, 1, !dbg !11076
  br i1 %22, label %23, label %38, !dbg !11077

23:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %12, metadata !11062, metadata !DIExpression()), !dbg !11068
  %24 = getelementptr inbounds i8, i8* %12, i32 24, !dbg !11078
  %25 = bitcast i8* %24 to i32*, !dbg !11078
  %26 = load i32, i32* %25, align 4, !dbg !11078
  %27 = add i32 %26, %10, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %27, metadata !11060, metadata !DIExpression()), !dbg !11068
  %28 = icmp ugt i32 %27, %10, !dbg !11081
  br i1 %28, label %29, label %34, !dbg !11083

29:                                               ; preds = %23
  %30 = bitcast i8* %13 to i32*, !dbg !11084
  store i32 %27, i32* %30, align 4, !dbg !11084
  %31 = getelementptr inbounds i8, i8* %12, i32 16, !dbg !11086
  %32 = bitcast i8* %31 to i8**, !dbg !11086
  store i8* %12, i8** %32, align 4, !dbg !11086
  %33 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11087
  tail call void @vListInsert(%struct.xLIST* noundef %33, %struct.xLIST_ITEM* noundef nonnull %14) #18, !dbg !11088
  br label %38, !dbg !11089

34:                                               ; preds = %23
  %35 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %12, i32 noundef 0, i32 noundef %10, i32* noundef null, i32 noundef 0) #20, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %35, metadata !11063, metadata !DIExpression()), !dbg !11068
  %36 = icmp eq i32 %35, 0, !dbg !11092
  br i1 %36, label %37, label %38, !dbg !11094

37:                                               ; preds = %34
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 754) #18, !dbg !11095
  br label %38, !dbg !11095

38:                                               ; preds = %34, %37, %5, %29
  %39 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11064
  %40 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %39, i32 0, i32 0, !dbg !11064
  %41 = load i32, i32* %40, align 4, !dbg !11064
  %42 = icmp eq i32 %41, 0, !dbg !11064
  br i1 %42, label %43, label %5, !dbg !11065, !llvm.loop !11097

43:                                               ; preds = %38, %0
  %44 = phi %struct.xLIST* [ %1, %0 ], [ %39, %38 ], !dbg !11064
  call void @llvm.dbg.value(metadata %struct.xLIST* %44, metadata !11061, metadata !DIExpression()), !dbg !11068
  %45 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !11099
  store %struct.xLIST* %45, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11100
  store %struct.xLIST* %44, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !11101
  ret void, !dbg !11102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !11103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 %1, metadata !11108, metadata !DIExpression()), !dbg !11111
  %3 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11112
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 2, i32 1, !dbg !11112
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !11112
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 3, !dbg !11112
  %7 = load i8*, i8** %6, align 4, !dbg !11112
  call void @llvm.dbg.value(metadata i8* %7, metadata !11110, metadata !DIExpression()), !dbg !11111
  %8 = getelementptr inbounds i8, i8* %7, i32 4, !dbg !11113
  %9 = bitcast i8* %8 to %struct.xLIST_ITEM*, !dbg !11113
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !11114
  %11 = getelementptr inbounds i8, i8* %7, i32 28, !dbg !11115
  %12 = bitcast i8* %11 to i32*, !dbg !11115
  %13 = load i32, i32* %12, align 4, !dbg !11115
  %14 = icmp eq i32 %13, 1, !dbg !11117
  br i1 %14, label %15, label %27, !dbg !11118

15:                                               ; preds = %2
  %16 = bitcast i8* %7 to %struct.tmrTimerControl*, !dbg !11119
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !11110, metadata !DIExpression()), !dbg !11111
  %17 = getelementptr inbounds i8, i8* %7, i32 24, !dbg !11120
  %18 = bitcast i8* %17 to i32*, !dbg !11120
  %19 = load i32, i32* %18, align 4, !dbg !11120
  %20 = add i32 %19, %0, !dbg !11123
  %21 = tail call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %16, i32 noundef %20, i32 noundef %1, i32 noundef %0) #20, !dbg !11124
  %22 = icmp eq i32 %21, 1, !dbg !11125
  br i1 %22, label %23, label %27, !dbg !11126

23:                                               ; preds = %15
  %24 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %7, i32 noundef 0, i32 noundef %0, i32* noundef null, i32 noundef 0) #20, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %24, metadata !11109, metadata !DIExpression()), !dbg !11111
  %25 = icmp eq i32 %24, 0, !dbg !11129
  br i1 %25, label %26, label %27, !dbg !11131

26:                                               ; preds = %23
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 400) #18, !dbg !11132
  br label %27, !dbg !11132

27:                                               ; preds = %23, %26, %2, %15
  %28 = getelementptr inbounds i8, i8* %7, i32 36, !dbg !11134
  %29 = bitcast i8* %28 to void (i8*)**, !dbg !11134
  %30 = load void (i8*)*, void (i8*)** %29, align 4, !dbg !11134
  tail call void %30(i8* noundef nonnull %7) #18, !dbg !11135
  ret void, !dbg !11136
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xTimerCreate(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (i8*)* noundef %4) local_unnamed_addr #0 !dbg !11137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11141, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %1, metadata !11142, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %2, metadata !11143, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i8* %3, metadata !11144, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata void (i8*)* %4, metadata !11145, metadata !DIExpression()), !dbg !11147
  %6 = icmp eq i32 %1, 0, !dbg !11148
  br i1 %6, label %22, label %7, !dbg !11150

7:                                                ; preds = %5
  %8 = tail call i8* @pvPortMalloc(i32 noundef 44) #18, !dbg !11151
  call void @llvm.dbg.value(metadata i8* %8, metadata !11146, metadata !DIExpression()), !dbg !11147
  %9 = icmp eq i8* %8, null, !dbg !11153
  br i1 %9, label %23, label %10, !dbg !11155

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %8, metadata !11146, metadata !DIExpression()), !dbg !11147
  tail call fastcc void @prvCheckForValidListAndQueue() #20, !dbg !11156
  %11 = bitcast i8* %8 to i8**, !dbg !11158
  store i8* %0, i8** %11, align 4, !dbg !11159
  %12 = getelementptr inbounds i8, i8* %8, i32 24, !dbg !11160
  %13 = bitcast i8* %12 to i32*, !dbg !11160
  store i32 %1, i32* %13, align 4, !dbg !11161
  %14 = getelementptr inbounds i8, i8* %8, i32 28, !dbg !11162
  %15 = bitcast i8* %14 to i32*, !dbg !11162
  store i32 %2, i32* %15, align 4, !dbg !11163
  %16 = getelementptr inbounds i8, i8* %8, i32 32, !dbg !11164
  %17 = bitcast i8* %16 to i8**, !dbg !11164
  store i8* %3, i8** %17, align 4, !dbg !11165
  %18 = getelementptr inbounds i8, i8* %8, i32 36, !dbg !11166
  %19 = bitcast i8* %18 to void (i8*)**, !dbg !11166
  store void (i8*)* %4, void (i8*)** %19, align 4, !dbg !11167
  %20 = getelementptr inbounds i8, i8* %8, i32 4, !dbg !11168
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !11168
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !11169
  br label %23, !dbg !11170

22:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* undef, metadata !11146, metadata !DIExpression()), !dbg !11147
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.151, i32 0, i32 0), i32 noundef 310) #18, !dbg !11171
  br label %23, !dbg !11171

23:                                               ; preds = %7, %10, %22
  %24 = phi i8* [ null, %22 ], [ null, %7 ], [ %8, %10 ]
  ret i8* %24, !dbg !11174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pcTimerGetTimerName(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !11175 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11179, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata i8* %0, metadata !11180, metadata !DIExpression()), !dbg !11181
  %2 = bitcast i8* %0 to i8**, !dbg !11182
  %3 = load i8*, i8** %2, align 4, !dbg !11182
  ret i8* %3, !dbg !11183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerIsTimerActive(i8* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !11184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11188, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.value(metadata i8* %0, metadata !11190, metadata !DIExpression()), !dbg !11191
  tail call void @vPortEnterCritical() #18, !dbg !11192
  %2 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11193
  %3 = bitcast i8* %2 to i8**, !dbg !11193
  %4 = load i8*, i8** %3, align 4, !dbg !11193
  %5 = icmp ne i8* %4, null, !dbg !11193
  %6 = zext i1 %5 to i32, !dbg !11195
  call void @llvm.dbg.value(metadata i32 %6, metadata !11189, metadata !DIExpression()), !dbg !11191
  tail call void @vPortExitCritical() #18, !dbg !11196
  ret i32 %6, !dbg !11197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pvTimerGetTimerID(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !11198 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11203, metadata !DIExpression()), !dbg !11205
  call void @llvm.dbg.value(metadata i8* %0, metadata !11204, metadata !DIExpression()), !dbg !11205
  %2 = getelementptr inbounds i8, i8* %0, i32 32, !dbg !11206
  %3 = bitcast i8* %2 to i8**, !dbg !11206
  %4 = load i8*, i8** %3, align 4, !dbg !11206
  ret i8* %4, !dbg !11207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #4 !dbg !11208 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !11212, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !11213, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i8* %2, metadata !11214, metadata !DIExpression()), !dbg !11215
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !11216
  call void @llvm.dbg.value(metadata i32* %4, metadata !11212, metadata !DIExpression()), !dbg !11215
  store i32 16777216, i32* %4, align 4, !dbg !11217
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !11218
  call void @llvm.dbg.value(metadata i32* %5, metadata !11212, metadata !DIExpression()), !dbg !11215
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !11219
  store i32 %6, i32* %5, align 4, !dbg !11220
  %7 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !11221
  call void @llvm.dbg.value(metadata i32* %7, metadata !11212, metadata !DIExpression()), !dbg !11215
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %7, align 4, !dbg !11222
  %8 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !11223
  call void @llvm.dbg.value(metadata i32* %8, metadata !11212, metadata !DIExpression()), !dbg !11215
  %9 = ptrtoint i8* %2 to i32, !dbg !11224
  store i32 %9, i32* %8, align 4, !dbg !11225
  %10 = getelementptr inbounds i32, i32* %0, i32 -9, !dbg !11226
  call void @llvm.dbg.value(metadata i32* %10, metadata !11212, metadata !DIExpression()), !dbg !11215
  store i32 -3, i32* %10, align 4, !dbg !11227
  %11 = getelementptr inbounds i32, i32* %0, i32 -17, !dbg !11228
  call void @llvm.dbg.value(metadata i32* %11, metadata !11212, metadata !DIExpression()), !dbg !11215
  ret i32* %11, !dbg !11229
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTaskExitError() #12 !dbg !11230 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11231
  %2 = icmp eq i32 %1, -1, !dbg !11231
  br i1 %2, label %4, label %3, !dbg !11233

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 260) #18, !dbg !11234
  br label %4, !dbg !11234

4:                                                ; preds = %3, %0
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !11236, !srcloc !11241
  call void @llvm.dbg.value(metadata i32 %5, metadata !11239, metadata !DIExpression()) #17, !dbg !11242
  br label %6, !dbg !11243

6:                                                ; preds = %6, %4
  br label %6, !dbg !11244, !llvm.loop !11247
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortCurrentTaskStackOverflowCheck() local_unnamed_addr #0 !dbg !11250 {
  %1 = tail call i32 @uxTaskGetBottomOfStack(i8* noundef null) #18, !dbg !11254
  call void @llvm.dbg.value(metadata i32 %1, metadata !11252, metadata !DIExpression()), !dbg !11255
  %2 = tail call i32 @hal_dwt_request_watchpoint(i32 noundef 3, i32 noundef %1, i32 noundef 3, i32 noundef 6) #18, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %2, metadata !11253, metadata !DIExpression()), !dbg !11255
  ret void, !dbg !11257
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @SVC_Handler() #16 section ".ramTEXT" !dbg !11258 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\0A\09cpsie i \09\09\09\09\09\09\0A\09bl hal_dwt_init                 \0A\09bl vPortCurrentTaskStackOverflowCheck \0A\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #17, !dbg !11259, !srcloc !11260
  unreachable, !dbg !11261
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #12 !dbg !11262 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !11269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11269
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11264, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !11266, metadata !DIExpression()), !dbg !11271
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !11272
  call void @llvm.dbg.declare(metadata i8* %2, metadata !11268, metadata !DIExpression()), !dbg !11273
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11274
  %5 = zext i8 %4 to i32, !dbg !11274
  store volatile i32 %5, i32* %1, align 4, !dbg !11275
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11276
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11277
  store volatile i8 %6, i8* %2, align 1, !dbg !11278
  %7 = load volatile i8, i8* %2, align 1, !dbg !11279
  %8 = and i8 %7, -128, !dbg !11280
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !11281
  %9 = load volatile i8, i8* %2, align 1, !dbg !11282
  %10 = icmp slt i8 %9, 0, !dbg !11283
  br i1 %10, label %11, label %21, !dbg !11284

11:                                               ; preds = %0, %11
  %12 = phi i32 [ %13, %11 ], [ 7, %0 ], !dbg !11285
  %13 = add i32 %12, -1, !dbg !11285
  %14 = load volatile i8, i8* %2, align 1, !dbg !11287
  %15 = shl i8 %14, 1, !dbg !11287
  store volatile i8 %15, i8* %2, align 1, !dbg !11287
  %16 = load volatile i8, i8* %2, align 1, !dbg !11282
  %17 = icmp slt i8 %16, 0, !dbg !11283
  br i1 %17, label %11, label %18, !dbg !11284, !llvm.loop !11288

18:                                               ; preds = %11
  %19 = shl i32 %13, 8, !dbg !11290
  %20 = and i32 %19, 1792, !dbg !11290
  br label %21, !dbg !11290

21:                                               ; preds = %18, %0
  %22 = phi i32 [ %20, %18 ], [ 1792, %0 ]
  store i32 %22, i32* @ulMaxPRIGROUPValue, align 4, !dbg !11291
  %23 = load volatile i32, i32* %1, align 4, !dbg !11292
  %24 = trunc i32 %23 to i8, !dbg !11292
  store volatile i8 %24, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11293
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !11294
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11294
  %25 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11295
  %26 = or i32 %25, 14680064, !dbg !11295
  store volatile i32 %26, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11295
  %27 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11296
  %28 = or i32 %27, -2147483648, !dbg !11296
  store volatile i32 %28, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11296
  tail call void @vPortSetupTimerInterrupt() #20, !dbg !11297
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !11298
  tail call void @vPortEnableVFP() #20, !dbg !11299
  %29 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !11300
  %30 = or i32 %29, -1073741824, !dbg !11300
  store volatile i32 %30, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !11300
  tail call void @prvPortStartFirstTask() #20, !dbg !11301
  tail call void @prvTaskExitError() #20, !dbg !11302
  unreachable, !dbg !11303
}

; Function Attrs: naked noinline nounwind optsize
define internal void @vPortEnableVFP() #16 !dbg !11304 {
  tail call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09", ""() #17, !dbg !11305, !srcloc !11306
  unreachable, !dbg !11307
}

; Function Attrs: naked noinline nounwind optsize
define internal void @prvPortStartFirstTask() #16 !dbg !11308 {
  tail call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #17, !dbg !11309, !srcloc !11310
  unreachable, !dbg !11311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEndScheduler() local_unnamed_addr #0 !dbg !11312 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11313
  %2 = icmp eq i32 %1, 1000, !dbg !11313
  br i1 %2, label %4, label %3, !dbg !11315

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 421) #18, !dbg !11316
  br label %4, !dbg !11316

4:                                                ; preds = %3, %0
  ret void, !dbg !11318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEnterCritical() local_unnamed_addr #0 !dbg !11319 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !11320, !srcloc !11241
  call void @llvm.dbg.value(metadata i32 %1, metadata !11239, metadata !DIExpression()) #17, !dbg !11322
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11323
  %3 = add i32 %2, 1, !dbg !11323
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !11323
  %4 = icmp eq i32 %2, 0, !dbg !11324
  br i1 %4, label %5, label %10, !dbg !11326

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11327
  %7 = and i32 %6, 255, !dbg !11327
  %8 = icmp eq i32 %7, 0, !dbg !11327
  br i1 %8, label %10, label %9, !dbg !11330

9:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 437) #18, !dbg !11331
  br label %10, !dbg !11331

10:                                               ; preds = %5, %9, %0
  ret void, !dbg !11333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortExitCritical() local_unnamed_addr #0 !dbg !11334 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11335
  %2 = icmp eq i32 %1, 0, !dbg !11335
  br i1 %2, label %3, label %5, !dbg !11337

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 444) #18, !dbg !11338
  %4 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11340
  br label %5, !dbg !11338

5:                                                ; preds = %3, %0
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !11340
  %7 = add i32 %6, -1, !dbg !11340
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !11340
  %8 = icmp eq i32 %7, 0, !dbg !11341
  br i1 %8, label %9, label %10, !dbg !11343

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !11344, metadata !DIExpression()) #17, !dbg !11347
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 0) #17, !dbg !11350, !srcloc !11351
  br label %10, !dbg !11352

10:                                               ; preds = %9, %5
  ret void, !dbg !11353
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @PendSV_Handler() #16 section ".ramTEXT" !dbg !11354 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\09\0A\09push {lr}\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\09\0A\09pop  {lr}\09\09\09\09\09\09\09\0A\09cpsie i \09\09\09\09\09\09\09\0A\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3}\09\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A   isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09bl vPortCurrentTaskStackOverflowCheck\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3}\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 128) #17, !dbg !11355, !srcloc !11356
  unreachable, !dbg !11357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SysTick_Handler() local_unnamed_addr #0 section ".ramTEXT" !dbg !11358 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !11361, !srcloc !11367
  call void @llvm.dbg.value(metadata i32 undef, metadata !11364, metadata !DIExpression()) #17, !dbg !11368
  call void @llvm.dbg.value(metadata i32 undef, metadata !11365, metadata !DIExpression()) #17, !dbg !11368
  call void @llvm.dbg.value(metadata i32 undef, metadata !11360, metadata !DIExpression()), !dbg !11369
  tail call void @Flash_ReturnReady() #18, !dbg !11370
  %2 = tail call i32 @xTaskIncrementTick() #18, !dbg !11372
  %3 = icmp eq i32 %2, 0, !dbg !11374
  br i1 %3, label %5, label %4, !dbg !11375

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11376
  br label %5, !dbg !11378

5:                                                ; preds = %4, %0
  %6 = extractvalue { i32, i32 } %1, 0, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %6, metadata !11364, metadata !DIExpression()) #17, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %6, metadata !11360, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata i32 undef, metadata !11344, metadata !DIExpression()) #17, !dbg !11379
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #17, !dbg !11381, !srcloc !11351
  ret void, !dbg !11382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #0 !dbg !11383 {
  %1 = tail call i32 asm sideeffect "mrs $0, ipsr", "=r"() #17, !dbg !11387, !srcloc !11388
  call void @llvm.dbg.value(metadata i32 %1, metadata !11385, metadata !DIExpression()), !dbg !11389
  %2 = icmp ugt i32 %1, 15, !dbg !11390
  br i1 %2, label %3, label %9, !dbg !11392

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !11393
  %5 = load volatile i8, i8* %4, align 1, !dbg !11393
  call void @llvm.dbg.value(metadata i8 %5, metadata !11386, metadata !DIExpression()), !dbg !11389
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !11395
  %7 = icmp ult i8 %5, %6, !dbg !11395
  br i1 %7, label %8, label %9, !dbg !11397

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 794) #18, !dbg !11398
  br label %9, !dbg !11398

9:                                                ; preds = %3, %8, %0
  %10 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !11400
  %11 = and i32 %10, 1792, !dbg !11400
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !11400
  %13 = icmp ugt i32 %11, %12, !dbg !11400
  br i1 %13, label %14, label %15, !dbg !11402

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.160, i32 0, i32 0), i32 noundef 810) #18, !dbg !11403
  br label %15, !dbg !11403

15:                                               ; preds = %14, %9
  ret void, !dbg !11405
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMalloc(i32 noundef %0) local_unnamed_addr #0 !dbg !11406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11410, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i8* null, metadata !11414, metadata !DIExpression()), !dbg !11415
  tail call void @vTaskSuspendAll() #18, !dbg !11416
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11417
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !11420
  br i1 %3, label %4, label %5, !dbg !11421

4:                                                ; preds = %1
  tail call fastcc void @prvHeapInit() #20, !dbg !11422
  br label %5, !dbg !11424

5:                                                ; preds = %1, %4
  %6 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11425
  %7 = select i1 %6, i32 -2147483648, i32 0, !dbg !11425
  %8 = and i32 %7, %0, !dbg !11427
  %9 = icmp ne i32 %8, 0, !dbg !11428
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9, !dbg !11429
  br i1 %11, label %84, label %12, !dbg !11429

12:                                               ; preds = %5
  %13 = add i32 %0, 8, !dbg !11430
  call void @llvm.dbg.value(metadata i32 %13, metadata !11410, metadata !DIExpression()), !dbg !11415
  %14 = and i32 %0, 7, !dbg !11434
  %15 = icmp eq i32 %14, 0, !dbg !11436
  %16 = add i32 %0, 16, !dbg !11437
  %17 = and i32 %16, -8, !dbg !11437
  %18 = select i1 %15, i32 %13, i32 %17, !dbg !11437
  call void @llvm.dbg.value(metadata i32 %18, metadata !11410, metadata !DIExpression()), !dbg !11415
  %19 = icmp eq i32 %18, 0, !dbg !11438
  %20 = load i32, i32* @xFreeBytesRemaining, align 4
  %21 = icmp ugt i32 %18, %20
  %22 = select i1 %19, i1 true, i1 %21, !dbg !11440
  br i1 %22, label %84, label %23, !dbg !11440

23:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11412, metadata !DIExpression()), !dbg !11415
  %24 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !11441
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !11411, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11412, metadata !DIExpression()), !dbg !11415
  %25 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 1, !dbg !11443
  %26 = load i32, i32* %25, align 4, !dbg !11443
  %27 = icmp ult i32 %26, %18, !dbg !11444
  br i1 %27, label %28, label %42, !dbg !11445

28:                                               ; preds = %23
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !11411, metadata !DIExpression()), !dbg !11415
  %29 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 0, !dbg !11446
  %30 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %29, align 4, !dbg !11446
  %31 = icmp eq %struct.A_BLOCK_LINK* %30, null, !dbg !11447
  br i1 %31, label %42, label %32, !dbg !11448, !llvm.loop !11449

32:                                               ; preds = %28, %38
  %33 = phi %struct.A_BLOCK_LINK* [ %40, %38 ], [ %30, %28 ]
  %34 = phi %struct.A_BLOCK_LINK* [ %33, %38 ], [ %24, %28 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11411, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !11411, metadata !DIExpression()), !dbg !11415
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 1, !dbg !11443
  %36 = load i32, i32* %35, align 4, !dbg !11443
  %37 = icmp ult i32 %36, %18, !dbg !11444
  br i1 %37, label %38, label %42, !dbg !11445, !llvm.loop !11449

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !11411, metadata !DIExpression()), !dbg !11415
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 0, !dbg !11446
  %40 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %39, align 4, !dbg !11446
  %41 = icmp eq %struct.A_BLOCK_LINK* %40, null, !dbg !11447
  br i1 %41, label %42, label %32, !dbg !11448, !llvm.loop !11449

42:                                               ; preds = %32, %38, %28, %23
  %43 = phi %struct.A_BLOCK_LINK* [ %24, %23 ], [ %24, %28 ], [ %33, %38 ], [ %33, %32 ]
  %44 = phi %struct.A_BLOCK_LINK* [ @xStart, %23 ], [ @xStart, %28 ], [ %34, %38 ], [ %34, %32 ], !dbg !11451
  %45 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 1, !dbg !11443
  %46 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11452
  %47 = icmp eq %struct.A_BLOCK_LINK* %43, %46, !dbg !11454
  br i1 %47, label %84, label %48, !dbg !11455

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %44, i32 0, i32 0, !dbg !11456
  %50 = bitcast %struct.A_BLOCK_LINK* %44 to i8**, !dbg !11456
  %51 = load i8*, i8** %50, align 4, !dbg !11456
  %52 = getelementptr inbounds i8, i8* %51, i32 8, !dbg !11458
  call void @llvm.dbg.value(metadata i8* %52, metadata !11414, metadata !DIExpression()), !dbg !11415
  %53 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 0, !dbg !11459
  %54 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %53, align 4, !dbg !11459
  store %struct.A_BLOCK_LINK* %54, %struct.A_BLOCK_LINK** %49, align 4, !dbg !11460
  %55 = load i32, i32* %45, align 4, !dbg !11461
  %56 = sub i32 %55, %18, !dbg !11463
  %57 = icmp ugt i32 %56, 16, !dbg !11464
  br i1 %57, label %58, label %73, !dbg !11465

58:                                               ; preds = %48
  %59 = bitcast %struct.A_BLOCK_LINK* %43 to i8*, !dbg !11466
  %60 = getelementptr inbounds i8, i8* %59, i32 %18, !dbg !11468
  %61 = bitcast i8* %60 to %struct.A_BLOCK_LINK*, !dbg !11469
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %61, metadata !11413, metadata !DIExpression()), !dbg !11415
  %62 = ptrtoint i8* %60 to i32, !dbg !11470
  %63 = and i32 %62, 7, !dbg !11470
  %64 = icmp eq i32 %63, 0, !dbg !11470
  br i1 %64, label %68, label %65, !dbg !11472

65:                                               ; preds = %58
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 257) #18, !dbg !11473
  %66 = load i32, i32* %45, align 4, !dbg !11475
  %67 = sub i32 %66, %18, !dbg !11476
  br label %68, !dbg !11473

68:                                               ; preds = %65, %58
  %69 = phi i32 [ %67, %65 ], [ %56, %58 ], !dbg !11476
  %70 = getelementptr inbounds i8, i8* %60, i32 4, !dbg !11477
  %71 = bitcast i8* %70 to i32*, !dbg !11477
  store i32 %69, i32* %71, align 4, !dbg !11478
  store i32 %18, i32* %45, align 4, !dbg !11479
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %61) #20, !dbg !11480
  %72 = load i32, i32* %45, align 4, !dbg !11481
  br label %73, !dbg !11482

73:                                               ; preds = %48, %68
  %74 = phi i32 [ %55, %48 ], [ %72, %68 ], !dbg !11481
  %75 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11483
  %76 = sub i32 %75, %74, !dbg !11483
  store i32 %76, i32* @xFreeBytesRemaining, align 4, !dbg !11483
  %77 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11484
  %78 = icmp ult i32 %76, %77, !dbg !11486
  br i1 %78, label %79, label %80, !dbg !11487

79:                                               ; preds = %73
  store i32 %76, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11488
  br label %80, !dbg !11490

80:                                               ; preds = %73, %79
  %81 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11491
  %82 = select i1 %81, i32 -2147483648, i32 0, !dbg !11491
  %83 = or i32 %74, %82, !dbg !11492
  store i32 %83, i32* %45, align 4, !dbg !11492
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** %53, align 4, !dbg !11493
  br label %84, !dbg !11494

84:                                               ; preds = %5, %42, %80, %12
  %85 = phi i8* [ %52, %80 ], [ null, %42 ], [ null, %12 ], [ null, %5 ], !dbg !11415
  call void @llvm.dbg.value(metadata i8* %85, metadata !11414, metadata !DIExpression()), !dbg !11415
  %86 = tail call i32 @xTaskResumeAll() #18, !dbg !11495
  %87 = ptrtoint i8* %85 to i32, !dbg !11496
  %88 = and i32 %87, 7, !dbg !11496
  %89 = icmp eq i32 %88, 0, !dbg !11496
  br i1 %89, label %91, label %90, !dbg !11498

90:                                               ; preds = %84
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 321) #18, !dbg !11499
  br label %91, !dbg !11499

91:                                               ; preds = %90, %84
  ret i8* %85, !dbg !11501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @prvHeapInit() unnamed_addr #14 !dbg !11502 {
  call void @llvm.dbg.value(metadata i32 148480, metadata !11507, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 ptrtoint ([148480 x i8]* @ucHeap to i32), metadata !11506, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480), metadata !11507, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), metadata !11506, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !11505, metadata !DIExpression()), !dbg !11508
  store %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !11509
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 1), align 4, !dbg !11510
  call void @llvm.dbg.value(metadata i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), metadata !11506, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), metadata !11506, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), metadata !11506, metadata !DIExpression()), !dbg !11508
  store %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11511
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !11512
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 8, !dbg !11513
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !11504, metadata !DIExpression()), !dbg !11508
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !11514
  %1 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11515
  store %struct.A_BLOCK_LINK* %1, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 4, !dbg !11516
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11517
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 148480, i32 sub (i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32 148480)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([148480 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([148480 x i8]* @ucHeap to i32))), i32* @xFreeBytesRemaining, align 4, !dbg !11518
  store i1 true, i1* @xBlockAllocatedBit, align 4, !dbg !11519
  ret void, !dbg !11520
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef %0) unnamed_addr #15 !dbg !11521 {
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %0, metadata !11525, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11526, metadata !DIExpression()), !dbg !11528
  br label %2, !dbg !11529

2:                                                ; preds = %2, %1
  %3 = phi %struct.A_BLOCK_LINK* [ @xStart, %1 ], [ %5, %2 ], !dbg !11531
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !11526, metadata !DIExpression()), !dbg !11528
  %4 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !11532
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %4, align 4, !dbg !11532
  %6 = icmp ult %struct.A_BLOCK_LINK* %5, %0, !dbg !11534
  br i1 %6, label %2, label %7, !dbg !11535, !llvm.loop !11536

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !11532
  %9 = bitcast %struct.A_BLOCK_LINK* %3 to i8*, !dbg !11538
  call void @llvm.dbg.value(metadata i8* %9, metadata !11527, metadata !DIExpression()), !dbg !11528
  %10 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 1, !dbg !11539
  %11 = load i32, i32* %10, align 4, !dbg !11539
  %12 = getelementptr inbounds i8, i8* %9, i32 %11, !dbg !11541
  %13 = bitcast %struct.A_BLOCK_LINK* %0 to i8*, !dbg !11542
  %14 = icmp eq i8* %12, %13, !dbg !11543
  %15 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !11528
  br i1 %14, label %17, label %19, !dbg !11544

17:                                               ; preds = %7
  %18 = add i32 %16, %11, !dbg !11545
  store i32 %18, i32* %10, align 4, !dbg !11545
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !11525, metadata !DIExpression()), !dbg !11528
  br label %19, !dbg !11547

19:                                               ; preds = %7, %17
  %20 = phi i8* [ %9, %17 ], [ %13, %7 ], !dbg !11548
  %21 = phi i32 [ %18, %17 ], [ %16, %7 ], !dbg !11549
  %22 = phi %struct.A_BLOCK_LINK* [ %3, %17 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %22, metadata !11525, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i8* %20, metadata !11527, metadata !DIExpression()), !dbg !11528
  %23 = getelementptr inbounds i8, i8* %20, i32 %21, !dbg !11551
  %24 = bitcast %struct.A_BLOCK_LINK* %5 to i8*, !dbg !11552
  %25 = icmp ne i8* %23, %24, !dbg !11553
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4
  %27 = icmp eq %struct.A_BLOCK_LINK* %5, %26
  %28 = select i1 %25, i1 true, i1 %27, !dbg !11554
  br i1 %28, label %37, label %29, !dbg !11554

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 1, !dbg !11549
  %31 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 1, !dbg !11555
  %32 = load i32, i32* %31, align 4, !dbg !11555
  %33 = add i32 %32, %21, !dbg !11559
  store i32 %33, i32* %30, align 4, !dbg !11559
  %34 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %8, align 4, !dbg !11560
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %34, i32 0, i32 0, !dbg !11561
  %36 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %35, align 4, !dbg !11561
  br label %37, !dbg !11562

37:                                               ; preds = %19, %29
  %38 = phi %struct.A_BLOCK_LINK* [ %36, %29 ], [ %5, %19 ]
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 0, !dbg !11563
  store %struct.A_BLOCK_LINK* %38, %struct.A_BLOCK_LINK** %39, align 4, !dbg !11563
  %40 = icmp eq %struct.A_BLOCK_LINK* %3, %22, !dbg !11564
  br i1 %40, label %42, label %41, !dbg !11566

41:                                               ; preds = %37
  store %struct.A_BLOCK_LINK* %22, %struct.A_BLOCK_LINK** %8, align 4, !dbg !11567
  br label %42, !dbg !11569

42:                                               ; preds = %37, %41
  ret void, !dbg !11570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFree(i8* noundef %0) local_unnamed_addr #0 !dbg !11571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11573, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata i8* %0, metadata !11574, metadata !DIExpression()), !dbg !11576
  %2 = icmp eq i8* %0, null, !dbg !11577
  br i1 %2, label %35, label %3, !dbg !11579

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !11580
  call void @llvm.dbg.value(metadata i8* %4, metadata !11574, metadata !DIExpression()), !dbg !11576
  %5 = bitcast i8* %4 to %struct.A_BLOCK_LINK*, !dbg !11582
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %5, metadata !11575, metadata !DIExpression()), !dbg !11576
  %6 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !11583
  %7 = bitcast i8* %6 to i32*, !dbg !11583
  %8 = load i32, i32* %7, align 4, !dbg !11583
  %9 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11583
  %10 = select i1 %9, i32 -2147483648, i32 0, !dbg !11583
  %11 = and i32 %10, %8, !dbg !11583
  %12 = icmp eq i32 %11, 0, !dbg !11583
  br i1 %12, label %13, label %14, !dbg !11585

13:                                               ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 341) #18, !dbg !11586
  br label %14, !dbg !11586

14:                                               ; preds = %13, %3
  %15 = bitcast i8* %4 to %struct.A_BLOCK_LINK**, !dbg !11588
  %16 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !11588
  %17 = icmp eq %struct.A_BLOCK_LINK* %16, null, !dbg !11588
  br i1 %17, label %19, label %18, !dbg !11590

18:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 342) #18, !dbg !11591
  br label %19, !dbg !11591

19:                                               ; preds = %18, %14
  %20 = load i32, i32* %7, align 4, !dbg !11593
  %21 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11595
  %22 = select i1 %21, i32 -2147483648, i32 0, !dbg !11595
  %23 = and i32 %22, %20, !dbg !11596
  %24 = icmp eq i32 %23, 0, !dbg !11597
  br i1 %24, label %35, label %25, !dbg !11598

25:                                               ; preds = %19
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !11599
  %27 = icmp eq %struct.A_BLOCK_LINK* %26, null, !dbg !11602
  br i1 %27, label %28, label %35, !dbg !11603

28:                                               ; preds = %25
  %29 = xor i32 %22, -1, !dbg !11604
  %30 = and i32 %20, %29, !dbg !11606
  store i32 %30, i32* %7, align 4, !dbg !11606
  tail call void @vTaskSuspendAll() #18, !dbg !11607
  %31 = load i32, i32* %7, align 4, !dbg !11608
  %32 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11610
  %33 = add i32 %32, %31, !dbg !11610
  store i32 %33, i32* @xFreeBytesRemaining, align 4, !dbg !11610
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %5) #20, !dbg !11611
  %34 = tail call i32 @xTaskResumeAll() #18, !dbg !11612
  br label %35, !dbg !11613

35:                                               ; preds = %25, %28, %19, %1
  ret void, !dbg !11614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #9 !dbg !11615 {
  %1 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11618
  ret i32 %1, !dbg !11619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetMinimumEverFreeHeapSize() local_unnamed_addr #9 !dbg !11620 {
  %1 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11621
  ret i32 %1, !dbg !11622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #7 !dbg !11623 {
  ret void, !dbg !11624
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11629, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.value(metadata i32 %1, metadata !11630, metadata !DIExpression()), !dbg !11632
  %3 = mul i32 %1, %0, !dbg !11633
  %4 = tail call i8* @pvPortMalloc(i32 noundef %3) #20, !dbg !11634
  call void @llvm.dbg.value(metadata i8* %4, metadata !11631, metadata !DIExpression()), !dbg !11632
  %5 = icmp eq i8* %4, null, !dbg !11635
  br i1 %5, label %8, label %6, !dbg !11637

6:                                                ; preds = %2
  %7 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef %3) #18, !dbg !11638
  br label %8, !dbg !11640

8:                                                ; preds = %6, %2
  ret i8* %4, !dbg !11641
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11646, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 %1, metadata !11647, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i8* null, metadata !11648, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 0, metadata !11649, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i8* %0, metadata !11650, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* null, metadata !11651, metadata !DIExpression()), !dbg !11652
  %3 = tail call i8* @pvPortCalloc(i32 noundef %1, i32 noundef 1) #20, !dbg !11653
  call void @llvm.dbg.value(metadata i8* %3, metadata !11648, metadata !DIExpression()), !dbg !11652
  %4 = icmp eq i8* %0, null, !dbg !11654
  br i1 %4, label %29, label %5, !dbg !11656

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !11657
  call void @llvm.dbg.value(metadata i8* %6, metadata !11650, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i8* %6, metadata !11651, metadata !DIExpression()), !dbg !11652
  %7 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !11659
  %8 = bitcast i8* %7 to i32*, !dbg !11659
  %9 = load i32, i32* %8, align 4, !dbg !11659
  %10 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11659
  %11 = select i1 %10, i32 -2147483648, i32 0, !dbg !11659
  %12 = and i32 %11, %9, !dbg !11659
  %13 = icmp eq i32 %12, 0, !dbg !11659
  br i1 %13, label %14, label %15, !dbg !11661

14:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 546) #18, !dbg !11662
  br label %15, !dbg !11662

15:                                               ; preds = %14, %5
  %16 = bitcast i8* %6 to %struct.A_BLOCK_LINK**, !dbg !11664
  %17 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %16, align 4, !dbg !11664
  %18 = icmp eq %struct.A_BLOCK_LINK* %17, null, !dbg !11664
  br i1 %18, label %20, label %19, !dbg !11666

19:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.179, i32 0, i32 0), i32 noundef 547) #18, !dbg !11667
  br label %20, !dbg !11667

20:                                               ; preds = %19, %15
  %21 = load i32, i32* %8, align 4, !dbg !11669
  %22 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11670
  %23 = select i1 %22, i32 2147483647, i32 -1, !dbg !11671
  %24 = and i32 %23, %21, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %24, metadata !11649, metadata !DIExpression()), !dbg !11652
  %25 = add i32 %24, -8, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %25, metadata !11649, metadata !DIExpression()), !dbg !11652
  %26 = icmp ult i32 %25, %1, !dbg !11674
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = tail call i8* @memcpy(i8* noundef %3, i8* noundef nonnull %0, i32 noundef %27) #18, !dbg !11676
  tail call void @vPortFree(i8* noundef nonnull %0) #20, !dbg !11677
  br label %29, !dbg !11678

29:                                               ; preds = %20, %2
  ret i8* %3, !dbg !11679
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMallocNC(i32 noundef %0) local_unnamed_addr #0 !dbg !11680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11682, metadata !DIExpression()), !dbg !11683
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #20, !dbg !11684
  ret i8* %2, !dbg !11685
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFreeNC(i8* noundef %0) local_unnamed_addr #0 !dbg !11686 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11688, metadata !DIExpression()), !dbg !11689
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !11690
  ret void, !dbg !11691
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_malloc(i32 noundef %0) local_unnamed_addr #0 !dbg !11692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11694, metadata !DIExpression()), !dbg !11695
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #20, !dbg !11696
  ret i8* %2, !dbg !11697
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11700, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata i32 %1, metadata !11701, metadata !DIExpression()), !dbg !11702
  %3 = tail call i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) #20, !dbg !11703
  ret i8* %3, !dbg !11704
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_realloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11705 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11707, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 %1, metadata !11708, metadata !DIExpression()), !dbg !11709
  %3 = tail call i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) #20, !dbg !11710
  ret i8* %3, !dbg !11711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__wrap_free(i8* noundef %0) local_unnamed_addr #0 !dbg !11712 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11714, metadata !DIExpression()), !dbg !11715
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !11716
  ret void, !dbg !11717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #5 !dbg !11718 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11719
  %2 = udiv i32 %1, 1000, !dbg !11720
  %3 = add nsw i32 %2, -1, !dbg !11721
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11722
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11723
  ret void, !dbg !11724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlElementDeleteAttr(%struct.mxml_node_s* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !11725 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !11774, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i8* %1, metadata !11775, metadata !DIExpression()), !dbg !11778
  %3 = icmp eq %struct.mxml_node_s* %0, null, !dbg !11779
  br i1 %3, label %51, label %4, !dbg !11781

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !11782
  %6 = load i32, i32* %5, align 8, !dbg !11782
  %7 = icmp eq i32 %6, 0, !dbg !11783
  %8 = icmp ne i8* %1, null
  %9 = and i1 %8, %7, !dbg !11784
  br i1 %9, label %10, label %51, !dbg !11784

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !11785
  %12 = bitcast %union.mxml_value_u* %11 to %struct.mxml_element_s*, !dbg !11787
  %13 = getelementptr inbounds %struct.mxml_element_s, %struct.mxml_element_s* %12, i32 0, i32 1, !dbg !11788
  %14 = load i32, i32* %13, align 4, !dbg !11788
  call void @llvm.dbg.value(metadata i32 %14, metadata !11776, metadata !DIExpression()), !dbg !11778
  %15 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, i32 1, !dbg !11789
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* undef, metadata !11777, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32 %14, metadata !11776, metadata !DIExpression()), !dbg !11778
  %16 = icmp sgt i32 %14, 0, !dbg !11790
  br i1 %16, label %17, label %51, !dbg !11792

17:                                               ; preds = %10
  %18 = bitcast [8 x i8]* %15 to %struct.QUEUE_REGISTRY_ITEM**, !dbg !11789
  %19 = load %struct.QUEUE_REGISTRY_ITEM*, %struct.QUEUE_REGISTRY_ITEM** %18, align 8, !dbg !11789
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %19, metadata !11777, metadata !DIExpression()), !dbg !11778
  br label %20, !dbg !11792

20:                                               ; preds = %17, %47
  %21 = phi %struct.QUEUE_REGISTRY_ITEM* [ %49, %47 ], [ %19, %17 ]
  %22 = phi i32 [ %48, %47 ], [ %14, %17 ]
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %21, metadata !11777, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32 %22, metadata !11776, metadata !DIExpression()), !dbg !11778
  %23 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 0, i32 0, !dbg !11793
  %24 = load i8*, i8** %23, align 4, !dbg !11793
  %25 = tail call i32 @strcmp(i8* noundef %24, i8* noundef nonnull %1) #18, !dbg !11796
  %26 = icmp eq i32 %25, 0, !dbg !11796
  br i1 %26, label %27, label %47, !dbg !11797

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 0, i32 0, !dbg !11793
  %29 = load i8*, i8** %28, align 4, !dbg !11798
  tail call void @vPortFree(i8* noundef %29) #18, !dbg !11800
  %30 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 0, i32 1, !dbg !11801
  %31 = load i8*, i8** %30, align 4, !dbg !11801
  tail call void @vPortFree(i8* noundef %31) #18, !dbg !11802
  call void @llvm.dbg.value(metadata i32 %22, metadata !11776, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11778
  %32 = icmp ugt i32 %22, 1, !dbg !11803
  br i1 %32, label %33, label %40, !dbg !11805

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %22, metadata !11776, metadata !DIExpression(DW_OP_plus_uconst, 536870911, DW_OP_stack_value)), !dbg !11778
  %34 = bitcast %struct.QUEUE_REGISTRY_ITEM* %21 to i8*, !dbg !11806
  %35 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 1, !dbg !11807
  %36 = bitcast %struct.QUEUE_REGISTRY_ITEM* %35 to i8*, !dbg !11808
  %37 = shl i32 %22, 3, !dbg !11809
  %38 = add i32 %37, -8, !dbg !11809
  %39 = tail call i8* @memmove(i8* noundef %34, i8* noundef nonnull %36, i32 noundef %38) #18, !dbg !11810
  br label %40, !dbg !11810

40:                                               ; preds = %33, %27
  %41 = load i32, i32* %13, align 4, !dbg !11811
  %42 = add nsw i32 %41, -1, !dbg !11811
  store i32 %42, i32* %13, align 4, !dbg !11811
  %43 = icmp eq i32 %42, 0, !dbg !11812
  br i1 %43, label %44, label %51, !dbg !11814

44:                                               ; preds = %40
  %45 = bitcast [8 x i8]* %15 to i8**, !dbg !11815
  %46 = load i8*, i8** %45, align 8, !dbg !11815
  tail call void @vPortFree(i8* noundef %46) #18, !dbg !11816
  br label %51, !dbg !11816

47:                                               ; preds = %20
  %48 = add nsw i32 %22, -1, !dbg !11817
  call void @llvm.dbg.value(metadata i32 %48, metadata !11776, metadata !DIExpression()), !dbg !11778
  %49 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 1, !dbg !11818
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %49, metadata !11777, metadata !DIExpression()), !dbg !11778
  %50 = icmp sgt i32 %22, 1, !dbg !11790
  br i1 %50, label %20, label %51, !dbg !11792, !llvm.loop !11819

51:                                               ; preds = %47, %10, %40, %44, %2, %4
  ret void, !dbg !11821
}

; Function Attrs: optsize
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i8* @memmove(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i8* @mxmlElementGetAttr(%struct.mxml_node_s* noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 !dbg !11822 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !11826, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i8* %1, metadata !11827, metadata !DIExpression()), !dbg !11830
  %3 = icmp eq %struct.mxml_node_s* %0, null, !dbg !11831
  br i1 %3, label %34, label %4, !dbg !11833

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !11834
  %6 = load i32, i32* %5, align 8, !dbg !11834
  %7 = icmp eq i32 %6, 0, !dbg !11835
  %8 = icmp ne i8* %1, null
  %9 = and i1 %8, %7, !dbg !11836
  br i1 %9, label %10, label %34, !dbg !11836

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !11837
  %12 = bitcast %union.mxml_value_u* %11 to %struct.mxml_element_s*, !dbg !11839
  %13 = getelementptr inbounds %struct.mxml_element_s, %struct.mxml_element_s* %12, i32 0, i32 1, !dbg !11840
  %14 = load i32, i32* %13, align 4, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %14, metadata !11828, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* undef, metadata !11829, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %14, metadata !11828, metadata !DIExpression()), !dbg !11830
  %15 = icmp sgt i32 %14, 0, !dbg !11841
  br i1 %15, label %16, label %34, !dbg !11843

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, i32 1, !dbg !11844
  %18 = bitcast [8 x i8]* %17 to %struct.QUEUE_REGISTRY_ITEM**, !dbg !11844
  %19 = load %struct.QUEUE_REGISTRY_ITEM*, %struct.QUEUE_REGISTRY_ITEM** %18, align 8, !dbg !11844
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %19, metadata !11829, metadata !DIExpression()), !dbg !11830
  br label %20, !dbg !11843

20:                                               ; preds = %16, %30
  %21 = phi %struct.QUEUE_REGISTRY_ITEM* [ %32, %30 ], [ %19, %16 ]
  %22 = phi i32 [ %31, %30 ], [ %14, %16 ]
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %21, metadata !11829, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %22, metadata !11828, metadata !DIExpression()), !dbg !11830
  %23 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 0, i32 0, !dbg !11845
  %24 = load i8*, i8** %23, align 4, !dbg !11845
  %25 = tail call i32 @strcmp(i8* noundef %24, i8* noundef nonnull %1) #18, !dbg !11848
  %26 = icmp eq i32 %25, 0, !dbg !11848
  br i1 %26, label %27, label %30, !dbg !11849

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 0, i32 1, !dbg !11850
  %29 = load i8*, i8** %28, align 4, !dbg !11850
  br label %34, !dbg !11852

30:                                               ; preds = %20
  %31 = add nsw i32 %22, -1, !dbg !11853
  call void @llvm.dbg.value(metadata i32 %31, metadata !11828, metadata !DIExpression()), !dbg !11830
  %32 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %21, i32 1, !dbg !11854
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %32, metadata !11829, metadata !DIExpression()), !dbg !11830
  %33 = icmp sgt i32 %22, 1, !dbg !11841
  br i1 %33, label %20, label %34, !dbg !11843, !llvm.loop !11855

34:                                               ; preds = %30, %10, %2, %4, %27
  %35 = phi i8* [ %29, %27 ], [ null, %4 ], [ null, %2 ], [ null, %10 ], [ null, %30 ], !dbg !11830
  ret i8* %35, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlElementSetAttr(%struct.mxml_node_s* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11858 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !11862, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i8* %1, metadata !11863, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i8* %2, metadata !11864, metadata !DIExpression()), !dbg !11866
  %4 = icmp eq %struct.mxml_node_s* %0, null, !dbg !11867
  br i1 %4, label %20, label %5, !dbg !11869

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !11870
  %7 = load i32, i32* %6, align 8, !dbg !11870
  %8 = icmp eq i32 %7, 0, !dbg !11871
  %9 = icmp ne i8* %1, null
  %10 = and i1 %9, %8, !dbg !11872
  br i1 %10, label %11, label %20, !dbg !11872

11:                                               ; preds = %5
  %12 = icmp eq i8* %2, null, !dbg !11873
  br i1 %12, label %15, label %13, !dbg !11875

13:                                               ; preds = %11
  %14 = tail call i8* @_mxml_strdup(i8* noundef nonnull %2) #18, !dbg !11876
  call void @llvm.dbg.value(metadata i8* %14, metadata !11865, metadata !DIExpression()), !dbg !11866
  br label %15, !dbg !11877

15:                                               ; preds = %11, %13
  %16 = phi i8* [ %14, %13 ], [ null, %11 ], !dbg !11878
  call void @llvm.dbg.value(metadata i8* %16, metadata !11865, metadata !DIExpression()), !dbg !11866
  %17 = tail call fastcc i32 @mxml_set_attr(%struct.mxml_node_s* noundef nonnull %0, i8* noundef nonnull %1, i8* noundef %16) #20, !dbg !11879
  %18 = icmp eq i32 %17, 0, !dbg !11879
  br i1 %18, label %20, label %19, !dbg !11881

19:                                               ; preds = %15
  tail call void @vPortFree(i8* noundef %16) #18, !dbg !11882
  br label %20, !dbg !11882

20:                                               ; preds = %15, %19, %3, %5
  ret void, !dbg !11883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_set_attr(%struct.mxml_node_s* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #0 !dbg !11884 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !11888, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8* %1, metadata !11889, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8* %2, metadata !11890, metadata !DIExpression()), !dbg !11893
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !11894
  %5 = bitcast %union.mxml_value_u* %4 to %struct.mxml_element_s*, !dbg !11896
  %6 = getelementptr inbounds %struct.mxml_element_s, %struct.mxml_element_s* %5, i32 0, i32 1, !dbg !11897
  %7 = load i32, i32* %6, align 4, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %7, metadata !11891, metadata !DIExpression()), !dbg !11893
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, i32 1, !dbg !11898
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* undef, metadata !11892, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 %7, metadata !11891, metadata !DIExpression()), !dbg !11893
  %9 = icmp sgt i32 %7, 0, !dbg !11899
  br i1 %9, label %10, label %32, !dbg !11901

10:                                               ; preds = %3
  %11 = bitcast [8 x i8]* %8 to %struct.QUEUE_REGISTRY_ITEM**, !dbg !11898
  %12 = load %struct.QUEUE_REGISTRY_ITEM*, %struct.QUEUE_REGISTRY_ITEM** %11, align 8, !dbg !11898
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %12, metadata !11892, metadata !DIExpression()), !dbg !11893
  br label %13, !dbg !11901

13:                                               ; preds = %10, %26
  %14 = phi %struct.QUEUE_REGISTRY_ITEM* [ %28, %26 ], [ %12, %10 ]
  %15 = phi i32 [ %27, %26 ], [ %7, %10 ]
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %14, metadata !11892, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 %15, metadata !11891, metadata !DIExpression()), !dbg !11893
  %16 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %14, i32 0, i32 0, !dbg !11902
  %17 = load i8*, i8** %16, align 4, !dbg !11902
  %18 = tail call i32 @strcmp(i8* noundef %17, i8* noundef %1) #18, !dbg !11904
  %19 = icmp eq i32 %18, 0, !dbg !11904
  br i1 %19, label %20, label %26, !dbg !11905

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %14, i32 0, i32 1, !dbg !11906
  %22 = load i8*, i8** %21, align 4, !dbg !11906
  %23 = icmp eq i8* %22, null, !dbg !11909
  br i1 %23, label %25, label %24, !dbg !11910

24:                                               ; preds = %20
  tail call void @vPortFree(i8* noundef nonnull %22) #18, !dbg !11911
  br label %25, !dbg !11911

25:                                               ; preds = %24, %20
  store i8* %2, i8** %21, align 4, !dbg !11912
  br label %63, !dbg !11913

26:                                               ; preds = %13
  %27 = add nsw i32 %15, -1, !dbg !11914
  call void @llvm.dbg.value(metadata i32 %27, metadata !11891, metadata !DIExpression()), !dbg !11893
  %28 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %14, i32 1, !dbg !11915
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %28, metadata !11892, metadata !DIExpression()), !dbg !11893
  %29 = icmp sgt i32 %15, 1, !dbg !11899
  br i1 %29, label %13, label %30, !dbg !11901, !llvm.loop !11916

30:                                               ; preds = %26
  %31 = load i32, i32* %6, align 4, !dbg !11918
  br label %32, !dbg !11918

32:                                               ; preds = %30, %3
  %33 = phi i32 [ %31, %30 ], [ %7, %3 ], !dbg !11918
  %34 = icmp eq i32 %33, 0, !dbg !11920
  br i1 %34, label %35, label %37, !dbg !11921

35:                                               ; preds = %32
  %36 = tail call i8* @pvPortMalloc(i32 noundef 8) #18, !dbg !11922
  call void @llvm.dbg.value(metadata i8* %36, metadata !11892, metadata !DIExpression()), !dbg !11893
  br label %43, !dbg !11923

37:                                               ; preds = %32
  %38 = bitcast [8 x i8]* %8 to i8**, !dbg !11924
  %39 = load i8*, i8** %38, align 8, !dbg !11924
  %40 = shl i32 %33, 3, !dbg !11925
  %41 = add i32 %40, 8, !dbg !11925
  %42 = tail call i8* @pvPortRealloc(i8* noundef %39, i32 noundef %41) #18, !dbg !11926
  call void @llvm.dbg.value(metadata i8* %42, metadata !11892, metadata !DIExpression()), !dbg !11893
  br label %43

43:                                               ; preds = %37, %35
  %44 = phi i8* [ %36, %35 ], [ %42, %37 ]
  call void @llvm.dbg.value(metadata i8* %44, metadata !11892, metadata !DIExpression()), !dbg !11893
  %45 = icmp eq i8* %44, null, !dbg !11927
  br i1 %45, label %46, label %49, !dbg !11929

46:                                               ; preds = %43
  %47 = bitcast %union.mxml_value_u* %4 to i8**, !dbg !11930
  %48 = load i8*, i8** %47, align 8, !dbg !11930
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.187, i32 0, i32 0), i8* noundef %1, i8* noundef %48) #18, !dbg !11932
  br label %63, !dbg !11933

49:                                               ; preds = %43
  %50 = bitcast i8* %44 to %struct.QUEUE_REGISTRY_ITEM*, !dbg !11934
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %50, metadata !11892, metadata !DIExpression()), !dbg !11893
  %51 = bitcast [8 x i8]* %8 to i8**, !dbg !11935
  store i8* %44, i8** %51, align 8, !dbg !11935
  %52 = load i32, i32* %6, align 4, !dbg !11936
  call void @llvm.dbg.value(metadata !DIArgList(%struct.QUEUE_REGISTRY_ITEM* %50, i32 %52), metadata !11892, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !11893
  %53 = tail call i8* @_mxml_strdup(i8* noundef %1) #18, !dbg !11937
  %54 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %50, i32 %52, i32 0, !dbg !11939
  store i8* %53, i8** %54, align 4, !dbg !11940
  %55 = icmp eq i8* %53, null, !dbg !11941
  br i1 %55, label %56, label %59, !dbg !11942

56:                                               ; preds = %49
  %57 = bitcast %union.mxml_value_u* %4 to i8**, !dbg !11943
  %58 = load i8*, i8** %57, align 8, !dbg !11943
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.187, i32 0, i32 0), i8* noundef %1, i8* noundef %58) #18, !dbg !11945
  br label %63, !dbg !11946

59:                                               ; preds = %49
  %60 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %50, i32 %52, i32 1, !dbg !11947
  store i8* %2, i8** %60, align 4, !dbg !11948
  %61 = load i32, i32* %6, align 4, !dbg !11949
  %62 = add nsw i32 %61, 1, !dbg !11949
  store i32 %62, i32* %6, align 4, !dbg !11949
  br label %63, !dbg !11950

63:                                               ; preds = %59, %56, %46, %25
  %64 = phi i32 [ 0, %25 ], [ -1, %56 ], [ 0, %59 ], [ -1, %46 ], !dbg !11893
  ret i32 %64, !dbg !11951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlElementSetAttrf(%struct.mxml_node_s* noundef %0, i8* noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11952 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !11956, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i8* %1, metadata !11957, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata i8* %2, metadata !11958, metadata !DIExpression()), !dbg !11967
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !11968
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !11968
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11959, metadata !DIExpression()), !dbg !11969
  %6 = icmp eq %struct.mxml_node_s* %0, null, !dbg !11970
  br i1 %6, label %29, label %7, !dbg !11972

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !11973
  %9 = load i32, i32* %8, align 8, !dbg !11973
  %10 = icmp eq i32 %9, 0, !dbg !11974
  %11 = icmp ne i8* %1, null
  %12 = and i1 %11, %10, !dbg !11975
  %13 = icmp ne i8* %2, null
  %14 = and i1 %13, %12, !dbg !11975
  br i1 %14, label %15, label %29, !dbg !11975

15:                                               ; preds = %7
  call void @llvm.va_start(i8* nonnull %5), !dbg !11976
  %16 = bitcast %struct.__va_list* %4 to i32*, !dbg !11977
  %17 = load i32, i32* %16, align 4, !dbg !11977
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !11977
  %19 = call i8* @_mxml_vstrdupf(i8* noundef nonnull %2, [1 x i32] %18) #18, !dbg !11977
  call void @llvm.dbg.value(metadata i8* %19, metadata !11966, metadata !DIExpression()), !dbg !11967
  call void @llvm.va_end(i8* nonnull %5), !dbg !11978
  %20 = icmp eq i8* %19, null, !dbg !11979
  br i1 %20, label %21, label %25, !dbg !11981

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !11982
  %23 = bitcast %union.mxml_value_u* %22 to i8**, !dbg !11983
  %24 = load i8*, i8** %23, align 8, !dbg !11983
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.187, i32 0, i32 0), i8* noundef nonnull %1, i8* noundef %24) #18, !dbg !11984
  br label %29, !dbg !11984

25:                                               ; preds = %15
  %26 = call fastcc i32 @mxml_set_attr(%struct.mxml_node_s* noundef nonnull %0, i8* noundef nonnull %1, i8* noundef nonnull %19) #20, !dbg !11985
  %27 = icmp eq i32 %26, 0, !dbg !11985
  br i1 %27, label %29, label %28, !dbg !11987

28:                                               ; preds = %25
  call void @vPortFree(i8* noundef nonnull %19) #18, !dbg !11988
  br label %29, !dbg !11988

29:                                               ; preds = %21, %28, %25, %3, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !11989
  ret void, !dbg !11989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @mxmlEntityAddCallback(i32 (i8*)* noundef %0) local_unnamed_addr #0 !dbg !11990 {
  call void @llvm.dbg.value(metadata i32 (i8*)* %0, metadata !11995, metadata !DIExpression()), !dbg !12060
  %2 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !12061
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %2, metadata !11996, metadata !DIExpression()), !dbg !12060
  %3 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 1, !dbg !12062
  %4 = load i32, i32* %3, align 4, !dbg !12062
  %5 = icmp slt i32 %4, 10, !dbg !12064
  br i1 %5, label %6, label %10, !dbg !12065

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 2, i32 %4, !dbg !12066
  store i32 (i8*)* %0, i32 (i8*)** %7, align 4, !dbg !12068
  %8 = load i32, i32* %3, align 4, !dbg !12069
  %9 = add nsw i32 %8, 1, !dbg !12069
  store i32 %9, i32* %3, align 4, !dbg !12069
  br label %11, !dbg !12070

10:                                               ; preds = %1
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.188, i32 0, i32 0)) #18, !dbg !12071
  br label %11, !dbg !12073

11:                                               ; preds = %10, %6
  %12 = phi i32 [ 0, %6 ], [ -1, %10 ], !dbg !12074
  ret i32 %12, !dbg !12075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @mxmlEntityGetName(i32 noundef %0) local_unnamed_addr #7 !dbg !12076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12080, metadata !DIExpression()), !dbg !12081
  switch i32 %0, label %5 [
    i32 38, label %6
    i32 60, label %2
    i32 62, label %3
    i32 34, label %4
  ], !dbg !12082

2:                                                ; preds = %1
  br label %6, !dbg !12083

3:                                                ; preds = %1
  br label %6, !dbg !12085

4:                                                ; preds = %1
  br label %6, !dbg !12086

5:                                                ; preds = %1
  br label %6, !dbg !12087

6:                                                ; preds = %1, %5, %4, %3, %2
  %7 = phi i8* [ null, %5 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.189, i32 0, i32 0), %4 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.190, i32 0, i32 0), %3 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.191, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.192, i32 0, i32 0), %1 ], !dbg !12088
  ret i8* %7, !dbg !12089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @mxmlEntityGetValue(i8* noundef %0) local_unnamed_addr #0 !dbg !12090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12092, metadata !DIExpression()), !dbg !12096
  %2 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !12097
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %2, metadata !12095, metadata !DIExpression()), !dbg !12096
  call void @llvm.dbg.value(metadata i32 0, metadata !12093, metadata !DIExpression()), !dbg !12096
  %3 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 0, metadata !12093, metadata !DIExpression()), !dbg !12096
  %4 = load i32, i32* %3, align 4, !dbg !12098
  %5 = icmp sgt i32 %4, 0, !dbg !12101
  br i1 %5, label %9, label %16, !dbg !12102

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 %15, metadata !12093, metadata !DIExpression()), !dbg !12096
  %7 = load i32, i32* %3, align 4, !dbg !12098
  %8 = icmp slt i32 %15, %7, !dbg !12101
  br i1 %8, label %9, label %16, !dbg !12102, !llvm.loop !12103

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %15, %6 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12093, metadata !DIExpression()), !dbg !12096
  %11 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 2, i32 %10, !dbg !12105
  %12 = load i32 (i8*)*, i32 (i8*)** %11, align 4, !dbg !12105
  %13 = tail call i32 %12(i8* noundef %0) #18, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %13, metadata !12094, metadata !DIExpression()), !dbg !12096
  %14 = icmp sgt i32 %13, -1, !dbg !12108
  %15 = add nuw nsw i32 %10, 1, !dbg !12109
  call void @llvm.dbg.value(metadata i32 %15, metadata !12093, metadata !DIExpression()), !dbg !12096
  br i1 %14, label %16, label %6, !dbg !12110

16:                                               ; preds = %9, %6, %1
  %17 = phi i32 [ -1, %1 ], [ -1, %6 ], [ %13, %9 ], !dbg !12096
  ret i32 %17, !dbg !12111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlEntityRemoveCallback(i32 (i8*)* noundef readnone %0) local_unnamed_addr #0 !dbg !12112 {
  call void @llvm.dbg.value(metadata i32 (i8*)* %0, metadata !12116, metadata !DIExpression()), !dbg !12119
  %2 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !12120
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %2, metadata !12118, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 0, metadata !12117, metadata !DIExpression()), !dbg !12119
  %3 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !12117, metadata !DIExpression()), !dbg !12119
  %5 = icmp sgt i32 %4, 0, !dbg !12121
  br i1 %5, label %6, label %24, !dbg !12124

6:                                                ; preds = %1, %21
  %7 = phi i32 [ %22, %21 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12117, metadata !DIExpression()), !dbg !12119
  %8 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 2, i32 %7, !dbg !12125
  %9 = load i32 (i8*)*, i32 (i8*)** %8, align 4, !dbg !12125
  %10 = icmp eq i32 (i8*)* %9, %0, !dbg !12127
  br i1 %10, label %11, label %21, !dbg !12128

11:                                               ; preds = %6
  %12 = add nsw i32 %4, -1, !dbg !12129
  store i32 %12, i32* %3, align 4, !dbg !12129
  %13 = icmp sgt i32 %12, %7, !dbg !12131
  br i1 %13, label %14, label %24, !dbg !12133

14:                                               ; preds = %11
  %15 = bitcast i32 (i8*)** %8 to i8*, !dbg !12134
  %16 = getelementptr inbounds i32 (i8*)*, i32 (i8*)** %8, i32 1, !dbg !12135
  %17 = bitcast i32 (i8*)** %16 to i8*, !dbg !12136
  %18 = sub nsw i32 %12, %7, !dbg !12137
  %19 = shl i32 %18, 2, !dbg !12138
  %20 = tail call i8* @memmove(i8* noundef nonnull %15, i8* noundef nonnull %17, i32 noundef %19) #18, !dbg !12139
  br label %24, !dbg !12139

21:                                               ; preds = %6
  %22 = add nuw nsw i32 %7, 1, !dbg !12140
  call void @llvm.dbg.value(metadata i32 %22, metadata !12117, metadata !DIExpression()), !dbg !12119
  %23 = icmp eq i32 %22, %4, !dbg !12121
  br i1 %23, label %24, label %6, !dbg !12124, !llvm.loop !12141

24:                                               ; preds = %21, %1, %11, %14
  ret void, !dbg !12143
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_mxml_entity_cb(i8* noundef %0) #0 !dbg !1166 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1185, metadata !DIExpression()), !dbg !12144
  call void @llvm.dbg.value(metadata i32 0, metadata !1188, metadata !DIExpression()), !dbg !12144
  call void @llvm.dbg.value(metadata i32 256, metadata !1189, metadata !DIExpression()), !dbg !12144
  br label %2, !dbg !12145

2:                                                ; preds = %1, %11
  %3 = phi i32 [ 256, %1 ], [ %14, %11 ]
  %4 = phi i32 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1189, metadata !DIExpression()), !dbg !12144
  call void @llvm.dbg.value(metadata i32 %4, metadata !1188, metadata !DIExpression()), !dbg !12144
  %5 = add nsw i32 %3, %4, !dbg !12146
  %6 = sdiv i32 %5, 2, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %6, metadata !1187, metadata !DIExpression()), !dbg !12144
  %7 = getelementptr inbounds [257 x %struct.anon.17], [257 x %struct.anon.17]* @_mxml_entity_cb.entities, i32 0, i32 %6, i32 0, !dbg !12149
  %8 = load i8*, i8** %7, align 4, !dbg !12149
  %9 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %8) #18, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %9, metadata !1186, metadata !DIExpression()), !dbg !12144
  %10 = icmp eq i32 %9, 0, !dbg !12152
  br i1 %10, label %27, label %11, !dbg !12153

11:                                               ; preds = %2
  %12 = icmp slt i32 %9, 0, !dbg !12154
  %13 = select i1 %12, i32 %4, i32 %6
  %14 = select i1 %12, i32 %6, i32 %3
  call void @llvm.dbg.value(metadata i32 %14, metadata !1189, metadata !DIExpression()), !dbg !12144
  call void @llvm.dbg.value(metadata i32 %13, metadata !1188, metadata !DIExpression()), !dbg !12144
  %15 = sub nsw i32 %14, %13, !dbg !12156
  %16 = icmp sgt i32 %15, 1, !dbg !12157
  br i1 %16, label %2, label %17, !dbg !12145, !llvm.loop !12158

17:                                               ; preds = %11
  %18 = getelementptr inbounds [257 x %struct.anon.17], [257 x %struct.anon.17]* @_mxml_entity_cb.entities, i32 0, i32 %13, i32 0, !dbg !12160
  %19 = load i8*, i8** %18, align 4, !dbg !12160
  %20 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %19) #18, !dbg !12162
  %21 = icmp eq i32 %20, 0, !dbg !12162
  br i1 %21, label %27, label %22, !dbg !12163

22:                                               ; preds = %17
  %23 = getelementptr inbounds [257 x %struct.anon.17], [257 x %struct.anon.17]* @_mxml_entity_cb.entities, i32 0, i32 %14, i32 0, !dbg !12164
  %24 = load i8*, i8** %23, align 4, !dbg !12164
  %25 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %24) #18, !dbg !12166
  %26 = icmp eq i32 %25, 0, !dbg !12166
  br i1 %26, label %27, label %31, !dbg !12167

27:                                               ; preds = %2, %22, %17
  %28 = phi i32 [ %13, %17 ], [ %14, %22 ], [ %6, %2 ]
  %29 = getelementptr inbounds [257 x %struct.anon.17], [257 x %struct.anon.17]* @_mxml_entity_cb.entities, i32 0, i32 %28, i32 1, !dbg !12144
  %30 = load i32, i32* %29, align 4, !dbg !12144
  br label %31, !dbg !12168

31:                                               ; preds = %27, %22
  %32 = phi i32 [ -1, %22 ], [ %30, %27 ], !dbg !12144
  ret i32 %32, !dbg !12168
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32 (%struct.mxml_node_s*)* noundef %2) local_unnamed_addr #0 !dbg !12169 {
  %4 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !12173, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i8* %1, metadata !12174, metadata !DIExpression()), !dbg !12176
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.value(metadata i32 (%struct.mxml_node_s*)* %2, metadata !12175, metadata !DIExpression()), !dbg !12176
  %5 = bitcast i8** %4 to i8*, !dbg !12177
  call void @llvm.dbg.value(metadata i8** %4, metadata !12174, metadata !DIExpression(DW_OP_deref)), !dbg !12176
  %6 = call fastcc %struct.mxml_node_s* @mxml_load_data(%struct.mxml_node_s* noundef %0, i8* noundef nonnull %5, i32 (%struct.mxml_node_s*)* noundef %2, void (%struct.mxml_node_s*, i32, i8*)* noundef null, i8* noundef null) #20, !dbg !12178
  ret %struct.mxml_node_s* %6, !dbg !12179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.mxml_node_s* @mxml_load_data(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32 (%struct.mxml_node_s*)* noundef readonly %2, void (%struct.mxml_node_s*, i32, i8*)* noundef readonly %3, i8* noundef %4) unnamed_addr #0 !dbg !1200 {
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !1281, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %1, metadata !1282, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 (%struct.mxml_node_s*)* %2, metadata !1283, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 (i8*, i32*)* @mxml_string_getc, metadata !1284, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata void (%struct.mxml_node_s*, i32, i8*)* %3, metadata !1285, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %4, metadata !1286, metadata !DIExpression()), !dbg !12180
  %10 = bitcast i8** %6 to i8*, !dbg !12181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #17, !dbg !12181
  %11 = bitcast i8** %7 to i8*, !dbg !12181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17, !dbg !12181
  %12 = bitcast i32* %8 to i8*, !dbg !12182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17, !dbg !12182
  %13 = bitcast i32* %9 to i8*, !dbg !12183
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17, !dbg !12183
  %14 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !12184
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %14, metadata !1297, metadata !DIExpression()), !dbg !12180
  %15 = tail call i8* @pvPortMalloc(i32 noundef 64) #18, !dbg !12185
  call void @llvm.dbg.value(metadata i8* %15, metadata !1292, metadata !DIExpression()), !dbg !12180
  store i8* %15, i8** %6, align 4, !dbg !12187
  %16 = icmp eq i8* %15, null, !dbg !12188
  br i1 %16, label %17, label %18, !dbg !12189

17:                                               ; preds = %5
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.225, i32 0, i32 0)) #18, !dbg !12190
  br label %554, !dbg !12192

18:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 64, metadata !1294, metadata !DIExpression()), !dbg !12180
  store i32 64, i32* %8, align 4, !dbg !12193
  call void @llvm.dbg.value(metadata i8* %15, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %15, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8* %15, i8** %7, align 4, !dbg !12194
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !1289, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* null, metadata !1288, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 0, metadata !1291, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 0, metadata !1296, metadata !DIExpression()), !dbg !12180
  store i32 0, i32* %9, align 4, !dbg !12195
  %19 = icmp ne i32 (%struct.mxml_node_s*)* %2, null, !dbg !12196
  %20 = icmp ne %struct.mxml_node_s* %0, null
  %21 = and i1 %20, %19, !dbg !12198
  br i1 %21, label %22, label %24, !dbg !12198

22:                                               ; preds = %18
  %23 = tail call i32 %2(%struct.mxml_node_s* noundef nonnull %0) #18, !dbg !12199
  call void @llvm.dbg.value(metadata i32 %23, metadata !1295, metadata !DIExpression()), !dbg !12180
  br label %26, !dbg !12200

24:                                               ; preds = %18
  %25 = select i1 %20, i32 4, i32 -1
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i32 [ %23, %22 ], [ %25, %24 ], !dbg !12201
  call void @llvm.dbg.value(metadata i32 %27, metadata !1295, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 0, metadata !1291, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !1289, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* null, metadata !1288, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %28 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %28, metadata !1290, metadata !DIExpression()), !dbg !12180
  %29 = icmp eq i32 %28, -1, !dbg !12203
  br i1 %29, label %520, label %30, !dbg !12204

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %14, i32 0, i32 4
  %32 = icmp eq void (%struct.mxml_node_s*, i32, i8*)* %3, null
  br label %33, !dbg !12204

33:                                               ; preds = %30, %514
  %34 = phi i32 [ %28, %30 ], [ %518, %514 ]
  %35 = phi i32 [ %27, %30 ], [ %517, %514 ]
  %36 = phi i32 [ 0, %30 ], [ %162, %514 ]
  %37 = phi %struct.mxml_node_s* [ %0, %30 ], [ %516, %514 ]
  %38 = phi %struct.mxml_node_s* [ null, %30 ], [ %515, %514 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !1295, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 %36, metadata !1291, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %37, metadata !1289, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %38, metadata !1288, metadata !DIExpression()), !dbg !12180
  %39 = icmp eq i32 %34, 60, !dbg !12205
  br i1 %39, label %47, label %40, !dbg !12208

40:                                               ; preds = %33
  %41 = call fastcc i32 @mxml_isspace(i32 noundef %34) #20, !dbg !12209
  %42 = icmp ne i32 %41, 0, !dbg !12209
  %43 = icmp ne i32 %35, 2
  %44 = select i1 %42, i1 %43, i1 false, !dbg !12210
  %45 = icmp ne i32 %35, 5
  %46 = select i1 %44, i1 %45, i1 false, !dbg !12210
  br i1 %46, label %47, label %133, !dbg !12210

47:                                               ; preds = %40, %33
  %48 = load i8*, i8** %7, align 4, !dbg !12211
  call void @llvm.dbg.value(metadata i8* %48, metadata !1293, metadata !DIExpression()), !dbg !12180
  %49 = load i8*, i8** %6, align 4, !dbg !12212
  call void @llvm.dbg.value(metadata i8* %49, metadata !1292, metadata !DIExpression()), !dbg !12180
  %50 = icmp ugt i8* %48, %49, !dbg !12213
  br i1 %50, label %53, label %51, !dbg !12214

51:                                               ; preds = %47
  %52 = call fastcc i32 @mxml_isspace(i32 noundef %34) #20, !dbg !12215
  br label %133, !dbg !12214

53:                                               ; preds = %47
  store i8 0, i8* %48, align 1, !dbg !12217
  switch i32 %35, label %86 [
    i32 1, label %54
    i32 2, label %58
    i32 3, label %61
    i32 4, label %65
    i32 5, label %68
  ], !dbg !12219

54:                                               ; preds = %53
  %55 = load i8*, i8** %6, align 4, !dbg !12220
  call void @llvm.dbg.value(metadata i8* %55, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %56 = call i32 @strtol(i8* noundef %55, i8** noundef nonnull %7, i32 noundef 0) #18, !dbg !12222
  %57 = call %struct.mxml_node_s* @mxmlNewInteger(%struct.mxml_node_s* noundef %37, i32 noundef %56) #18, !dbg !12223
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %57, metadata !1287, metadata !DIExpression()), !dbg !12180
  br label %86, !dbg !12224

58:                                               ; preds = %53
  %59 = load i8*, i8** %6, align 4, !dbg !12225
  call void @llvm.dbg.value(metadata i8* %59, metadata !1292, metadata !DIExpression()), !dbg !12180
  %60 = call %struct.mxml_node_s* @mxmlNewOpaque(%struct.mxml_node_s* noundef %37, i8* noundef %59) #18, !dbg !12226
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %60, metadata !1287, metadata !DIExpression()), !dbg !12180
  br label %86, !dbg !12227

61:                                               ; preds = %53
  %62 = load i8*, i8** %6, align 4, !dbg !12228
  call void @llvm.dbg.value(metadata i8* %62, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %63 = call double @strtod(i8* noundef %62, i8** noundef nonnull %7) #18, !dbg !12229
  %64 = call %struct.mxml_node_s* @mxmlNewReal(%struct.mxml_node_s* noundef %37, double noundef %63) #18, !dbg !12230
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %64, metadata !1287, metadata !DIExpression()), !dbg !12180
  br label %86, !dbg !12231

65:                                               ; preds = %53
  %66 = load i8*, i8** %6, align 4, !dbg !12232
  call void @llvm.dbg.value(metadata i8* %66, metadata !1292, metadata !DIExpression()), !dbg !12180
  %67 = call %struct.mxml_node_s* @mxmlNewText(%struct.mxml_node_s* noundef %37, i32 noundef %36, i8* noundef %66) #18, !dbg !12233
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %67, metadata !1287, metadata !DIExpression()), !dbg !12180
  br label %86, !dbg !12234

68:                                               ; preds = %53
  %69 = load i32 (%struct.mxml_node_s*, i8*)*, i32 (%struct.mxml_node_s*, i8*)** %31, align 4, !dbg !12235
  %70 = icmp eq i32 (%struct.mxml_node_s*, i8*)* %69, null, !dbg !12237
  br i1 %70, label %86, label %71, !dbg !12238

71:                                               ; preds = %68
  %72 = call %struct.mxml_node_s* @mxmlNewCustom(%struct.mxml_node_s* noundef %37, i8* noundef null, void (i8*)* noundef null) #18, !dbg !12239
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %72, metadata !1287, metadata !DIExpression()), !dbg !12180
  %73 = load i32 (%struct.mxml_node_s*, i8*)*, i32 (%struct.mxml_node_s*, i8*)** %31, align 4, !dbg !12241
  %74 = load i8*, i8** %6, align 4, !dbg !12243
  call void @llvm.dbg.value(metadata i8* %74, metadata !1292, metadata !DIExpression()), !dbg !12180
  %75 = call i32 %73(%struct.mxml_node_s* noundef %72, i8* noundef %74) #18, !dbg !12244
  %76 = icmp eq i32 %75, 0, !dbg !12244
  br i1 %76, label %86, label %77, !dbg !12245

77:                                               ; preds = %71
  %78 = load i8*, i8** %6, align 4, !dbg !12246
  call void @llvm.dbg.value(metadata i8* %78, metadata !1292, metadata !DIExpression()), !dbg !12180
  %79 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12248
  br i1 %79, label %84, label %80, !dbg !12248

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12249
  %82 = bitcast %union.mxml_value_u* %81 to i8**, !dbg !12250
  %83 = load i8*, i8** %82, align 8, !dbg !12250
  br label %84, !dbg !12248

84:                                               ; preds = %77, %80
  %85 = phi i8* [ %83, %80 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %77 ], !dbg !12248
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.227, i32 0, i32 0), i8* noundef %78, i8* noundef %85) #18, !dbg !12251
  call void @mxmlDelete(%struct.mxml_node_s* noundef %72) #18, !dbg !12252
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* null, metadata !1287, metadata !DIExpression()), !dbg !12180
  br label %86, !dbg !12253

86:                                               ; preds = %53, %68, %71, %84, %65, %61, %58, %54
  %87 = phi %struct.mxml_node_s* [ null, %84 ], [ %72, %71 ], [ %67, %65 ], [ %64, %61 ], [ %60, %58 ], [ %57, %54 ], [ null, %68 ], [ null, %53 ], !dbg !12254
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %87, metadata !1287, metadata !DIExpression()), !dbg !12180
  %88 = load i8*, i8** %7, align 4, !dbg !12255
  call void @llvm.dbg.value(metadata i8* %88, metadata !1293, metadata !DIExpression()), !dbg !12180
  %89 = load i8, i8* %88, align 1, !dbg !12257
  %90 = icmp eq i8 %89, 0, !dbg !12257
  br i1 %90, label %102, label %91, !dbg !12258

91:                                               ; preds = %86
  %92 = icmp eq i32 %35, 1, !dbg !12259
  %93 = select i1 %92, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.229, i32 0, i32 0), !dbg !12261
  %94 = load i8*, i8** %6, align 4, !dbg !12262
  call void @llvm.dbg.value(metadata i8* %94, metadata !1292, metadata !DIExpression()), !dbg !12180
  %95 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12263
  br i1 %95, label %100, label %96, !dbg !12263

96:                                               ; preds = %91
  %97 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12264
  %98 = bitcast %union.mxml_value_u* %97 to i8**, !dbg !12265
  %99 = load i8*, i8** %98, align 8, !dbg !12265
  br label %100, !dbg !12263

100:                                              ; preds = %91, %96
  %101 = phi i8* [ %99, %96 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %91 ], !dbg !12263
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.230, i32 0, i32 0), i8* noundef %93, i8* noundef %94, i8* noundef %101) #18, !dbg !12266
  br label %520, !dbg !12267

102:                                              ; preds = %86
  %103 = load i8*, i8** %6, align 4, !dbg !12268
  call void @llvm.dbg.value(metadata i8* %103, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %103, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8* %103, i8** %7, align 4, !dbg !12269
  %104 = call fastcc i32 @mxml_isspace(i32 noundef %34) #20, !dbg !12270
  %105 = icmp ne i32 %104, 0, !dbg !12270
  %106 = icmp eq i32 %35, 4, !dbg !12271
  %107 = select i1 %105, i1 %106, i1 false, !dbg !12271
  %108 = zext i1 %107 to i32, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %108, metadata !1291, metadata !DIExpression()), !dbg !12180
  %109 = icmp eq %struct.mxml_node_s* %87, null, !dbg !12272
  %110 = icmp ne i32 %35, -1
  %111 = select i1 %109, i1 %110, i1 false, !dbg !12274
  br i1 %111, label %112, label %122, !dbg !12274

112:                                              ; preds = %102
  %113 = getelementptr inbounds [6 x i8*], [6 x i8*]* @mxml_load_data.types, i32 0, i32 %35, !dbg !12275
  %114 = load i8*, i8** %113, align 4, !dbg !12275
  %115 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12277
  br i1 %115, label %120, label %116, !dbg !12277

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12278
  %118 = bitcast %union.mxml_value_u* %117 to i8**, !dbg !12279
  %119 = load i8*, i8** %118, align 8, !dbg !12279
  br label %120, !dbg !12277

120:                                              ; preds = %112, %116
  %121 = phi i8* [ %119, %116 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %112 ], !dbg !12277
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.231, i32 0, i32 0), i8* noundef %114, i8* noundef %121) #18, !dbg !12280
  br label %551, !dbg !12281

122:                                              ; preds = %102
  br i1 %32, label %127, label %123, !dbg !12282

123:                                              ; preds = %122
  call void %3(%struct.mxml_node_s* noundef %87, i32 noundef 2, i8* noundef %4) #18, !dbg !12283
  %124 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef %87) #18, !dbg !12286
  %125 = icmp eq i32 %124, 0, !dbg !12286
  %126 = select i1 %125, %struct.mxml_node_s* null, %struct.mxml_node_s* %87, !dbg !12288
  br label %127, !dbg !12288

127:                                              ; preds = %123, %122
  %128 = phi %struct.mxml_node_s* [ %87, %122 ], [ %126, %123 ], !dbg !12289
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %128, metadata !1287, metadata !DIExpression()), !dbg !12180
  %129 = icmp eq %struct.mxml_node_s* %38, null, !dbg !12290
  %130 = icmp ne %struct.mxml_node_s* %128, null
  %131 = select i1 %129, i1 %130, i1 false, !dbg !12292
  %132 = select i1 %131, %struct.mxml_node_s* %128, %struct.mxml_node_s* %38, !dbg !12292
  br label %139, !dbg !12292

133:                                              ; preds = %51, %40
  %134 = phi i32 [ %52, %51 ], [ %41, %40 ], !dbg !12215
  %135 = icmp ne i32 %134, 0, !dbg !12215
  %136 = icmp eq i32 %35, 4
  %137 = select i1 %135, i1 %136, i1 false, !dbg !12293
  %138 = select i1 %137, i32 1, i32 %36, !dbg !12293
  br label %139, !dbg !12293

139:                                              ; preds = %133, %127
  %140 = phi %struct.mxml_node_s* [ %132, %127 ], [ %38, %133 ], !dbg !12180
  %141 = phi i32 [ %108, %127 ], [ %138, %133 ], !dbg !12180
  call void @llvm.dbg.value(metadata i32 %141, metadata !1291, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %140, metadata !1288, metadata !DIExpression()), !dbg !12180
  %142 = icmp ne i32 %141, 0
  %143 = select i1 %39, i1 %142, i1 false, !dbg !12294
  %144 = icmp eq i32 %35, 4
  %145 = select i1 %143, i1 %144, i1 false, !dbg !12294
  br i1 %145, label %146, label %160, !dbg !12294

146:                                              ; preds = %139
  %147 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12296
  br i1 %147, label %160, label %148, !dbg !12299

148:                                              ; preds = %146
  %149 = call %struct.mxml_node_s* @mxmlNewText(%struct.mxml_node_s* noundef nonnull %37, i32 noundef 1, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.232, i32 0, i32 0)) #18, !dbg !12300
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %149, metadata !1287, metadata !DIExpression()), !dbg !12180
  br i1 %32, label %154, label %150, !dbg !12302

150:                                              ; preds = %148
  call void %3(%struct.mxml_node_s* noundef %149, i32 noundef 2, i8* noundef %4) #18, !dbg !12303
  %151 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef %149) #18, !dbg !12306
  %152 = icmp eq i32 %151, 0, !dbg !12306
  %153 = select i1 %152, %struct.mxml_node_s* null, %struct.mxml_node_s* %149, !dbg !12308
  br label %154, !dbg !12308

154:                                              ; preds = %150, %148
  %155 = phi %struct.mxml_node_s* [ %149, %148 ], [ %153, %150 ], !dbg !12309
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %155, metadata !1287, metadata !DIExpression()), !dbg !12180
  %156 = icmp eq %struct.mxml_node_s* %140, null, !dbg !12310
  %157 = icmp ne %struct.mxml_node_s* %155, null
  %158 = select i1 %156, i1 %157, i1 false, !dbg !12312
  %159 = select i1 %158, %struct.mxml_node_s* %155, %struct.mxml_node_s* %140, !dbg !12312
  br label %160, !dbg !12312

160:                                              ; preds = %154, %146, %139
  %161 = phi %struct.mxml_node_s* [ %140, %139 ], [ %140, %146 ], [ %159, %154 ], !dbg !12313
  %162 = phi i32 [ %141, %139 ], [ 0, %146 ], [ 0, %154 ], !dbg !12313
  call void @llvm.dbg.value(metadata i32 %162, metadata !1291, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %161, metadata !1288, metadata !DIExpression()), !dbg !12180
  br i1 %39, label %163, label %499, !dbg !12314

163:                                              ; preds = %160
  %164 = load i8*, i8** %6, align 4, !dbg !12315
  call void @llvm.dbg.value(metadata i8* %164, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %164, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8* %164, i8** %7, align 4, !dbg !12318
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %165 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12319
  call void @llvm.dbg.value(metadata i32 %165, metadata !1290, metadata !DIExpression()), !dbg !12180
  %166 = icmp eq i32 %165, -1, !dbg !12320
  br i1 %166, label %217, label %167, !dbg !12321

167:                                              ; preds = %163, %214
  %168 = phi i32 [ %215, %214 ], [ %165, %163 ]
  %169 = call fastcc i32 @mxml_isspace(i32 noundef %168) #20, !dbg !12322
  %170 = icmp ne i32 %169, 0, !dbg !12322
  %171 = icmp eq i32 %168, 62
  %172 = or i1 %170, %171, !dbg !12324
  br i1 %172, label %217, label %173, !dbg !12324

173:                                              ; preds = %167
  switch i32 %168, label %185 [
    i32 47, label %174
    i32 60, label %178
    i32 38, label %179
  ], !dbg !12325

174:                                              ; preds = %173
  %175 = load i8*, i8** %7, align 4, !dbg !12326
  call void @llvm.dbg.value(metadata i8* %175, metadata !1293, metadata !DIExpression()), !dbg !12180
  %176 = load i8*, i8** %6, align 4, !dbg !12327
  call void @llvm.dbg.value(metadata i8* %176, metadata !1292, metadata !DIExpression()), !dbg !12180
  %177 = icmp ugt i8* %175, %176, !dbg !12328
  br i1 %177, label %217, label %185, !dbg !12329

178:                                              ; preds = %173
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14.233, i32 0, i32 0)) #18, !dbg !12330
  br label %551, !dbg !12333

179:                                              ; preds = %173
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %180 = call fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef %37, i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12334
  call void @llvm.dbg.value(metadata i32 %180, metadata !1290, metadata !DIExpression()), !dbg !12180
  %181 = icmp eq i32 %180, -1, !dbg !12338
  br i1 %181, label %551, label %182, !dbg !12339

182:                                              ; preds = %179
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %183 = call fastcc i32 @mxml_add_char(i32 noundef %180, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12340
  %184 = icmp eq i32 %183, 0, !dbg !12340
  br i1 %184, label %214, label %551, !dbg !12342

185:                                              ; preds = %174, %173
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %186 = call fastcc i32 @mxml_add_char(i32 noundef %168, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12343
  %187 = icmp eq i32 %186, 0, !dbg !12343
  br i1 %187, label %188, label %551, !dbg !12345

188:                                              ; preds = %185
  %189 = load i8*, i8** %7, align 4, !dbg !12346
  call void @llvm.dbg.value(metadata i8* %189, metadata !1293, metadata !DIExpression()), !dbg !12180
  %190 = load i8*, i8** %6, align 4, !dbg !12348
  call void @llvm.dbg.value(metadata i8* %190, metadata !1292, metadata !DIExpression()), !dbg !12180
  %191 = ptrtoint i8* %189 to i32, !dbg !12349
  %192 = ptrtoint i8* %190 to i32, !dbg !12349
  %193 = sub i32 %191, %192, !dbg !12349
  switch i32 %193, label %205 [
    i32 1, label %194
    i32 3, label %197
  ], !dbg !12350

194:                                              ; preds = %188
  %195 = load i8, i8* %190, align 1, !dbg !12351
  %196 = icmp eq i8 %195, 63, !dbg !12352
  br i1 %196, label %217, label %205, !dbg !12353

197:                                              ; preds = %188
  %198 = call i32 @strncmp(i8* noundef %190, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 3) #18, !dbg !12354
  %199 = icmp eq i32 %198, 0, !dbg !12354
  br i1 %199, label %217, label %200, !dbg !12355

200:                                              ; preds = %197
  %201 = load i8*, i8** %7, align 4, !dbg !12356
  %202 = load i8*, i8** %6, align 4, !dbg !12357
  %203 = ptrtoint i8* %201 to i32, !dbg !12358
  %204 = ptrtoint i8* %202 to i32, !dbg !12358
  br label %205, !dbg !12355

205:                                              ; preds = %200, %188, %194
  %206 = phi i32 [ %204, %200 ], [ %192, %188 ], [ %192, %194 ], !dbg !12358
  %207 = phi i32 [ %203, %200 ], [ %191, %188 ], [ %191, %194 ], !dbg !12358
  %208 = phi i8* [ %202, %200 ], [ %190, %188 ], [ %190, %194 ], !dbg !12357
  call void @llvm.dbg.value(metadata i8* undef, metadata !1293, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %208, metadata !1292, metadata !DIExpression()), !dbg !12180
  %209 = sub i32 %207, %206, !dbg !12358
  %210 = icmp eq i32 %209, 8, !dbg !12359
  br i1 %210, label %211, label %214, !dbg !12360

211:                                              ; preds = %205
  %212 = call i32 @strncmp(i8* noundef %208, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.235, i32 0, i32 0), i32 noundef 8) #18, !dbg !12361
  %213 = icmp eq i32 %212, 0, !dbg !12361
  br i1 %213, label %217, label %214, !dbg !12362

214:                                              ; preds = %211, %205, %182
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %215 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12319
  call void @llvm.dbg.value(metadata i32 %215, metadata !1290, metadata !DIExpression()), !dbg !12180
  %216 = icmp eq i32 %215, -1, !dbg !12320
  br i1 %216, label %217, label %167, !dbg !12321, !llvm.loop !12363

217:                                              ; preds = %214, %174, %167, %211, %197, %194, %163
  %218 = phi i32 [ -1, %163 ], [ %168, %194 ], [ %168, %197 ], [ %168, %211 ], [ %168, %167 ], [ 47, %174 ], [ -1, %214 ], !dbg !12319
  %219 = load i8*, i8** %7, align 4, !dbg !12365
  call void @llvm.dbg.value(metadata i8* %219, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8 0, i8* %219, align 1, !dbg !12366
  %220 = load i8*, i8** %6, align 4, !dbg !12367
  call void @llvm.dbg.value(metadata i8* %220, metadata !1292, metadata !DIExpression()), !dbg !12180
  %221 = call i32 @strcmp(i8* noundef %220, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.234, i32 0, i32 0)) #18, !dbg !12369
  %222 = icmp eq i32 %221, 0, !dbg !12369
  br i1 %222, label %223, label %275, !dbg !12370

223:                                              ; preds = %217, %242
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %224 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12371
  call void @llvm.dbg.value(metadata i32 %224, metadata !1290, metadata !DIExpression()), !dbg !12180
  switch i32 %224, label %242 [
    i32 62, label %225
    i32 -1, label %245
  ], !dbg !12373

225:                                              ; preds = %223
  %226 = load i8*, i8** %7, align 4, !dbg !12374
  call void @llvm.dbg.value(metadata i8* %226, metadata !1293, metadata !DIExpression()), !dbg !12180
  %227 = load i8*, i8** %6, align 4, !dbg !12377
  call void @llvm.dbg.value(metadata i8* %227, metadata !1292, metadata !DIExpression()), !dbg !12180
  %228 = getelementptr inbounds i8, i8* %227, i32 4, !dbg !12378
  %229 = icmp ugt i8* %226, %228, !dbg !12379
  br i1 %229, label %230, label %242, !dbg !12380

230:                                              ; preds = %225
  %231 = getelementptr inbounds i8, i8* %226, i32 -3, !dbg !12381
  %232 = load i8, i8* %231, align 1, !dbg !12381
  %233 = icmp eq i8 %232, 45, !dbg !12382
  br i1 %233, label %242, label %234, !dbg !12383

234:                                              ; preds = %230
  %235 = getelementptr inbounds i8, i8* %226, i32 -2, !dbg !12384
  %236 = load i8, i8* %235, align 1, !dbg !12384
  %237 = icmp eq i8 %236, 45, !dbg !12385
  br i1 %237, label %238, label %242, !dbg !12386

238:                                              ; preds = %234
  %239 = getelementptr inbounds i8, i8* %226, i32 -1, !dbg !12387
  %240 = load i8, i8* %239, align 1, !dbg !12387
  %241 = icmp eq i8 %240, 45, !dbg !12388
  br i1 %241, label %246, label %242, !dbg !12389

242:                                              ; preds = %223, %238, %234, %230, %225
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %243 = call fastcc i32 @mxml_add_char(i32 noundef %224, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12390
  %244 = icmp eq i32 %243, 0, !dbg !12390
  br i1 %244, label %223, label %551, !dbg !12392, !llvm.loop !12393

245:                                              ; preds = %223
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17.236, i32 0, i32 0)) #18, !dbg !12395
  br label %551, !dbg !12398

246:                                              ; preds = %238
  call void @llvm.dbg.value(metadata i8* %226, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8 0, i8* %226, align 1, !dbg !12399
  %247 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12400
  %248 = icmp ne %struct.mxml_node_s* %161, null
  %249 = select i1 %247, i1 %248, i1 false, !dbg !12402
  %250 = load i8*, i8** %6, align 4, !dbg !12403
  call void @llvm.dbg.value(metadata i8* %250, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %250, metadata !1292, metadata !DIExpression()), !dbg !12180
  br i1 %249, label %251, label %255, !dbg !12402

251:                                              ; preds = %246
  %252 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %161, i32 0, i32 6, !dbg !12404
  %253 = bitcast %union.mxml_value_u* %252 to i8**, !dbg !12406
  %254 = load i8*, i8** %253, align 8, !dbg !12406
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18.237, i32 0, i32 0), i8* noundef %250, i8* noundef %254) #18, !dbg !12407
  br label %551, !dbg !12408

255:                                              ; preds = %246
  %256 = call %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef %37, i8* noundef %250) #18, !dbg !12409
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %256, metadata !1287, metadata !DIExpression()), !dbg !12180
  %257 = icmp eq %struct.mxml_node_s* %256, null, !dbg !12411
  br i1 %257, label %258, label %265, !dbg !12412

258:                                              ; preds = %255
  br i1 %247, label %263, label %259, !dbg !12413

259:                                              ; preds = %258
  %260 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12415
  %261 = bitcast %union.mxml_value_u* %260 to i8**, !dbg !12416
  %262 = load i8*, i8** %261, align 8, !dbg !12416
  br label %263, !dbg !12413

263:                                              ; preds = %258, %259
  %264 = phi i8* [ %262, %259 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %258 ], !dbg !12413
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.238, i32 0, i32 0), i8* noundef %264) #18, !dbg !12417
  br label %520, !dbg !12418

265:                                              ; preds = %255
  br i1 %32, label %270, label %266, !dbg !12419

266:                                              ; preds = %265
  call void %3(%struct.mxml_node_s* noundef nonnull %256, i32 noundef 1, i8* noundef %4) #18, !dbg !12420
  %267 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef nonnull %256) #18, !dbg !12423
  %268 = icmp eq i32 %267, 0, !dbg !12423
  %269 = select i1 %268, %struct.mxml_node_s* null, %struct.mxml_node_s* %256, !dbg !12425
  br label %270, !dbg !12425

270:                                              ; preds = %266, %265
  %271 = phi %struct.mxml_node_s* [ %256, %265 ], [ %269, %266 ], !dbg !12403
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %271, metadata !1287, metadata !DIExpression()), !dbg !12180
  %272 = icmp eq %struct.mxml_node_s* %271, null, !dbg !12426
  %273 = select i1 %272, i1 true, i1 %248, !dbg !12428
  %274 = select i1 %273, %struct.mxml_node_s* %161, %struct.mxml_node_s* %271, !dbg !12428
  br label %494, !dbg !12428

275:                                              ; preds = %217
  %276 = load i8*, i8** %6, align 4, !dbg !12429
  call void @llvm.dbg.value(metadata i8* %276, metadata !1292, metadata !DIExpression()), !dbg !12180
  %277 = call i32 @strcmp(i8* noundef %276, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.235, i32 0, i32 0)) #18, !dbg !12431
  %278 = icmp eq i32 %277, 0, !dbg !12431
  br i1 %278, label %279, label %320, !dbg !12432

279:                                              ; preds = %275, %286
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %280 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12433
  call void @llvm.dbg.value(metadata i32 %280, metadata !1290, metadata !DIExpression()), !dbg !12180
  switch i32 %280, label %286 [
    i32 62, label %281
    i32 -1, label %289
  ], !dbg !12435

281:                                              ; preds = %279
  %282 = load i8*, i8** %7, align 4, !dbg !12436
  call void @llvm.dbg.value(metadata i8* %282, metadata !1293, metadata !DIExpression()), !dbg !12180
  %283 = getelementptr inbounds i8, i8* %282, i32 -2, !dbg !12439
  %284 = call i32 @strncmp(i8* noundef nonnull %283, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.239, i32 0, i32 0), i32 noundef 2) #18, !dbg !12440
  %285 = icmp eq i32 %284, 0, !dbg !12440
  br i1 %285, label %290, label %286, !dbg !12441

286:                                              ; preds = %279, %281
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %287 = call fastcc i32 @mxml_add_char(i32 noundef %280, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12442
  %288 = icmp eq i32 %287, 0, !dbg !12442
  br i1 %288, label %279, label %551, !dbg !12444, !llvm.loop !12445

289:                                              ; preds = %279
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21.240, i32 0, i32 0)) #18, !dbg !12447
  br label %551, !dbg !12450

290:                                              ; preds = %281
  %291 = load i8*, i8** %7, align 4, !dbg !12451
  call void @llvm.dbg.value(metadata i8* %291, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8 0, i8* %291, align 1, !dbg !12452
  %292 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12453
  %293 = icmp ne %struct.mxml_node_s* %161, null
  %294 = select i1 %292, i1 %293, i1 false, !dbg !12455
  %295 = load i8*, i8** %6, align 4, !dbg !12456
  call void @llvm.dbg.value(metadata i8* %295, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %295, metadata !1292, metadata !DIExpression()), !dbg !12180
  br i1 %294, label %296, label %300, !dbg !12455

296:                                              ; preds = %290
  %297 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %161, i32 0, i32 6, !dbg !12457
  %298 = bitcast %union.mxml_value_u* %297 to i8**, !dbg !12459
  %299 = load i8*, i8** %298, align 8, !dbg !12459
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18.237, i32 0, i32 0), i8* noundef %295, i8* noundef %299) #18, !dbg !12460
  br label %551, !dbg !12461

300:                                              ; preds = %290
  %301 = call %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef %37, i8* noundef %295) #18, !dbg !12462
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %301, metadata !1287, metadata !DIExpression()), !dbg !12180
  %302 = icmp eq %struct.mxml_node_s* %301, null, !dbg !12464
  br i1 %302, label %303, label %310, !dbg !12465

303:                                              ; preds = %300
  br i1 %292, label %308, label %304, !dbg !12466

304:                                              ; preds = %303
  %305 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12468
  %306 = bitcast %union.mxml_value_u* %305 to i8**, !dbg !12469
  %307 = load i8*, i8** %306, align 8, !dbg !12469
  br label %308, !dbg !12466

308:                                              ; preds = %303, %304
  %309 = phi i8* [ %307, %304 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %303 ], !dbg !12466
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22.241, i32 0, i32 0), i8* noundef %309) #18, !dbg !12470
  br label %551, !dbg !12471

310:                                              ; preds = %300
  br i1 %32, label %315, label %311, !dbg !12472

311:                                              ; preds = %310
  call void %3(%struct.mxml_node_s* noundef nonnull %301, i32 noundef 0, i8* noundef %4) #18, !dbg !12473
  %312 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef nonnull %301) #18, !dbg !12476
  %313 = icmp eq i32 %312, 0, !dbg !12476
  %314 = select i1 %313, %struct.mxml_node_s* null, %struct.mxml_node_s* %301, !dbg !12478
  br label %315, !dbg !12478

315:                                              ; preds = %311, %310
  %316 = phi %struct.mxml_node_s* [ %301, %310 ], [ %314, %311 ], !dbg !12456
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %316, metadata !1287, metadata !DIExpression()), !dbg !12180
  %317 = icmp eq %struct.mxml_node_s* %316, null, !dbg !12479
  %318 = select i1 %317, i1 true, i1 %293, !dbg !12481
  %319 = select i1 %318, %struct.mxml_node_s* %161, %struct.mxml_node_s* %316, !dbg !12481
  br label %494, !dbg !12481

320:                                              ; preds = %275
  %321 = load i8*, i8** %6, align 4, !dbg !12482
  call void @llvm.dbg.value(metadata i8* %321, metadata !1292, metadata !DIExpression()), !dbg !12180
  %322 = load i8, i8* %321, align 1, !dbg !12482
  switch i8 %322, label %448 [
    i8 63, label %323
    i8 33, label %367
    i8 47, label %413
  ], !dbg !12484

323:                                              ; preds = %320, %333
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %324 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12485
  call void @llvm.dbg.value(metadata i32 %324, metadata !1290, metadata !DIExpression()), !dbg !12180
  switch i32 %324, label %333 [
    i32 62, label %325
    i32 -1, label %336
  ], !dbg !12487

325:                                              ; preds = %323
  %326 = load i8*, i8** %7, align 4, !dbg !12488
  call void @llvm.dbg.value(metadata i8* %326, metadata !1293, metadata !DIExpression()), !dbg !12180
  %327 = load i8*, i8** %6, align 4, !dbg !12491
  call void @llvm.dbg.value(metadata i8* %327, metadata !1292, metadata !DIExpression()), !dbg !12180
  %328 = icmp ugt i8* %326, %327, !dbg !12492
  br i1 %328, label %329, label %333, !dbg !12493

329:                                              ; preds = %325
  %330 = getelementptr inbounds i8, i8* %326, i32 -1, !dbg !12494
  %331 = load i8, i8* %330, align 1, !dbg !12494
  %332 = icmp eq i8 %331, 63, !dbg !12495
  br i1 %332, label %337, label %333, !dbg !12496

333:                                              ; preds = %323, %329, %325
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %334 = call fastcc i32 @mxml_add_char(i32 noundef %324, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12497
  %335 = icmp eq i32 %334, 0, !dbg !12497
  br i1 %335, label %323, label %551, !dbg !12499, !llvm.loop !12500

336:                                              ; preds = %323
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.242, i32 0, i32 0)) #18, !dbg !12502
  br label %551, !dbg !12505

337:                                              ; preds = %329
  call void @llvm.dbg.value(metadata i8* %326, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8 0, i8* %326, align 1, !dbg !12506
  %338 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12507
  %339 = icmp ne %struct.mxml_node_s* %161, null
  %340 = select i1 %338, i1 %339, i1 false, !dbg !12509
  %341 = load i8*, i8** %6, align 4, !dbg !12510
  call void @llvm.dbg.value(metadata i8* %341, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %341, metadata !1292, metadata !DIExpression()), !dbg !12180
  br i1 %340, label %342, label %346, !dbg !12509

342:                                              ; preds = %337
  %343 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %161, i32 0, i32 6, !dbg !12511
  %344 = bitcast %union.mxml_value_u* %343 to i8**, !dbg !12513
  %345 = load i8*, i8** %344, align 8, !dbg !12513
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18.237, i32 0, i32 0), i8* noundef %341, i8* noundef %345) #18, !dbg !12514
  br label %551, !dbg !12515

346:                                              ; preds = %337
  %347 = call %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef %37, i8* noundef %341) #18, !dbg !12516
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %347, metadata !1287, metadata !DIExpression()), !dbg !12180
  %348 = icmp eq %struct.mxml_node_s* %347, null, !dbg !12518
  br i1 %348, label %349, label %356, !dbg !12519

349:                                              ; preds = %346
  br i1 %338, label %354, label %350, !dbg !12520

350:                                              ; preds = %349
  %351 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12522
  %352 = bitcast %union.mxml_value_u* %351 to i8**, !dbg !12523
  %353 = load i8*, i8** %352, align 8, !dbg !12523
  br label %354, !dbg !12520

354:                                              ; preds = %349, %350
  %355 = phi i8* [ %353, %350 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %349 ], !dbg !12520
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24.243, i32 0, i32 0), i8* noundef %355) #18, !dbg !12524
  br label %551, !dbg !12525

356:                                              ; preds = %346
  br i1 %32, label %360, label %357, !dbg !12526

357:                                              ; preds = %356
  call void %3(%struct.mxml_node_s* noundef nonnull %347, i32 noundef 3, i8* noundef %4) #18, !dbg !12527
  %358 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef nonnull %347) #18, !dbg !12530
  %359 = icmp eq i32 %358, 0, !dbg !12530
  br i1 %359, label %494, label %360, !dbg !12532

360:                                              ; preds = %356, %357
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* null, metadata !1287, metadata !DIExpression()), !dbg !12180
  %361 = select i1 %339, %struct.mxml_node_s* %161, %struct.mxml_node_s* %347, !dbg !12533
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %361, metadata !1288, metadata !DIExpression()), !dbg !12180
  %362 = and i1 %19, %338, !dbg !12536
  %363 = select i1 %338, %struct.mxml_node_s* %347, %struct.mxml_node_s* %37, !dbg !12536
  %364 = select i1 %338, i32 4, i32 %35, !dbg !12536
  br i1 %362, label %365, label %494, !dbg !12536

365:                                              ; preds = %360
  %366 = call i32 %2(%struct.mxml_node_s* noundef nonnull %347) #18, !dbg !12537
  call void @llvm.dbg.value(metadata i32 %366, metadata !1295, metadata !DIExpression()), !dbg !12180
  br label %494, !dbg !12541

367:                                              ; preds = %320
  %368 = icmp eq i32 %218, 62, !dbg !12542
  br i1 %368, label %382, label %369, !dbg !12547

369:                                              ; preds = %367, %379
  %370 = phi i32 [ %380, %379 ], [ %218, %367 ], !dbg !12548
  call void @llvm.dbg.value(metadata i32 %370, metadata !1290, metadata !DIExpression()), !dbg !12180
  %371 = icmp eq i32 %370, 38, !dbg !12549
  br i1 %371, label %372, label %375, !dbg !12552

372:                                              ; preds = %369
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %373 = call fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef %37, i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12553
  call void @llvm.dbg.value(metadata i32 %373, metadata !1290, metadata !DIExpression()), !dbg !12180
  %374 = icmp eq i32 %373, -1, !dbg !12555
  br i1 %374, label %551, label %375, !dbg !12556

375:                                              ; preds = %372, %369
  %376 = phi i32 [ %373, %372 ], [ %370, %369 ], !dbg !12548
  call void @llvm.dbg.value(metadata i32 %376, metadata !1290, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %377 = call fastcc i32 @mxml_add_char(i32 noundef %376, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12557
  %378 = icmp eq i32 %377, 0, !dbg !12557
  br i1 %378, label %379, label %551, !dbg !12559

379:                                              ; preds = %375
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %380 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12560
  call void @llvm.dbg.value(metadata i32 %380, metadata !1290, metadata !DIExpression()), !dbg !12180
  switch i32 %380, label %369 [
    i32 62, label %382
    i32 -1, label %381
  ], !dbg !12561

381:                                              ; preds = %379
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25.244, i32 0, i32 0)) #18, !dbg !12562
  br label %551, !dbg !12565

382:                                              ; preds = %379, %367
  %383 = load i8*, i8** %7, align 4, !dbg !12566
  call void @llvm.dbg.value(metadata i8* %383, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8 0, i8* %383, align 1, !dbg !12567
  %384 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12568
  %385 = icmp ne %struct.mxml_node_s* %161, null
  %386 = select i1 %384, i1 %385, i1 false, !dbg !12570
  %387 = load i8*, i8** %6, align 4, !dbg !12571
  call void @llvm.dbg.value(metadata i8* %387, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %387, metadata !1292, metadata !DIExpression()), !dbg !12180
  br i1 %386, label %388, label %392, !dbg !12570

388:                                              ; preds = %382
  %389 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %161, i32 0, i32 6, !dbg !12572
  %390 = bitcast %union.mxml_value_u* %389 to i8**, !dbg !12574
  %391 = load i8*, i8** %390, align 8, !dbg !12574
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18.237, i32 0, i32 0), i8* noundef %387, i8* noundef %391) #18, !dbg !12575
  br label %551, !dbg !12576

392:                                              ; preds = %382
  %393 = call %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef %37, i8* noundef %387) #18, !dbg !12577
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %393, metadata !1287, metadata !DIExpression()), !dbg !12180
  %394 = icmp eq %struct.mxml_node_s* %393, null, !dbg !12579
  br i1 %394, label %395, label %402, !dbg !12580

395:                                              ; preds = %392
  br i1 %384, label %400, label %396, !dbg !12581

396:                                              ; preds = %395
  %397 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12583
  %398 = bitcast %union.mxml_value_u* %397 to i8**, !dbg !12584
  %399 = load i8*, i8** %398, align 8, !dbg !12584
  br label %400, !dbg !12581

400:                                              ; preds = %395, %396
  %401 = phi i8* [ %399, %396 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %395 ], !dbg !12581
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26.245, i32 0, i32 0), i8* noundef %401) #18, !dbg !12585
  br label %551, !dbg !12586

402:                                              ; preds = %392
  br i1 %32, label %406, label %403, !dbg !12587

403:                                              ; preds = %402
  call void %3(%struct.mxml_node_s* noundef nonnull %393, i32 noundef 3, i8* noundef %4) #18, !dbg !12588
  %404 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef nonnull %393) #18, !dbg !12591
  %405 = icmp eq i32 %404, 0, !dbg !12591
  br i1 %405, label %494, label %406, !dbg !12593

406:                                              ; preds = %402, %403
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* null, metadata !1287, metadata !DIExpression()), !dbg !12180
  %407 = select i1 %385, %struct.mxml_node_s* %161, %struct.mxml_node_s* %393, !dbg !12594
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %407, metadata !1288, metadata !DIExpression()), !dbg !12180
  %408 = and i1 %19, %384, !dbg !12597
  %409 = select i1 %384, %struct.mxml_node_s* %393, %struct.mxml_node_s* %37, !dbg !12597
  %410 = select i1 %384, i32 4, i32 %35, !dbg !12597
  br i1 %408, label %411, label %494, !dbg !12597

411:                                              ; preds = %406
  %412 = call i32 %2(%struct.mxml_node_s* noundef nonnull %393) #18, !dbg !12598
  call void @llvm.dbg.value(metadata i32 %412, metadata !1295, metadata !DIExpression()), !dbg !12180
  br label %494, !dbg !12602

413:                                              ; preds = %320
  %414 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12603
  br i1 %414, label %426, label %415, !dbg !12607

415:                                              ; preds = %413
  %416 = getelementptr inbounds i8, i8* %321, i32 1, !dbg !12608
  %417 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12609
  %418 = bitcast %union.mxml_value_u* %417 to i8**, !dbg !12610
  %419 = load i8*, i8** %418, align 8, !dbg !12610
  %420 = call i32 @strcmp(i8* noundef nonnull %416, i8* noundef %419) #18, !dbg !12611
  %421 = icmp eq i32 %420, 0, !dbg !12611
  br i1 %421, label %429, label %422, !dbg !12612

422:                                              ; preds = %415
  %423 = bitcast %union.mxml_value_u* %417 to i8**, !dbg !12610
  call void @llvm.dbg.value(metadata i8* undef, metadata !1292, metadata !DIExpression()), !dbg !12180
  %424 = load i8*, i8** %423, align 8, !dbg !12613
  %425 = load i8*, i8** %6, align 4, !dbg !12615
  br label %426, !dbg !12616

426:                                              ; preds = %413, %422
  %427 = phi i8* [ %425, %422 ], [ %321, %413 ], !dbg !12615
  %428 = phi i8* [ %424, %422 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.246, i32 0, i32 0), %413 ], !dbg !12616
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.247, i32 0, i32 0), i8* noundef %427, i8* noundef %428) #18, !dbg !12617
  br label %551, !dbg !12618

429:                                              ; preds = %415, %431
  %430 = phi i32 [ %432, %431 ], [ %218, %415 ], !dbg !12548
  call void @llvm.dbg.value(metadata i32 %430, metadata !1290, metadata !DIExpression()), !dbg !12180
  switch i32 %430, label %431 [
    i32 -1, label %433
    i32 62, label %433
  ], !dbg !12619

431:                                              ; preds = %429
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %432 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12620
  call void @llvm.dbg.value(metadata i32 %432, metadata !1290, metadata !DIExpression()), !dbg !12180
  br label %429, !dbg !12619, !llvm.loop !12621

433:                                              ; preds = %429, %429
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %37, metadata !1287, metadata !DIExpression()), !dbg !12180
  %434 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 3, !dbg !12623
  %435 = load %struct.mxml_node_s*, %struct.mxml_node_s** %434, align 4, !dbg !12623
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %435, metadata !1289, metadata !DIExpression()), !dbg !12180
  br i1 %32, label %442, label %436, !dbg !12624

436:                                              ; preds = %433
  call void %3(%struct.mxml_node_s* noundef nonnull %37, i32 noundef 4, i8* noundef %4) #18, !dbg !12625
  %437 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef nonnull %37) #18, !dbg !12628
  %438 = icmp eq i32 %437, 0, !dbg !12628
  %439 = icmp eq %struct.mxml_node_s* %161, %37
  %440 = select i1 %438, i1 %439, i1 false, !dbg !12630
  %441 = select i1 %440, %struct.mxml_node_s* null, %struct.mxml_node_s* %161, !dbg !12630
  br label %442, !dbg !12630

442:                                              ; preds = %436, %433
  %443 = phi %struct.mxml_node_s* [ %161, %433 ], [ %441, %436 ], !dbg !12313
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %443, metadata !1288, metadata !DIExpression()), !dbg !12180
  %444 = icmp ne %struct.mxml_node_s* %435, null
  %445 = select i1 %19, i1 %444, i1 false, !dbg !12631
  br i1 %445, label %446, label %494, !dbg !12631

446:                                              ; preds = %442
  %447 = call i32 %2(%struct.mxml_node_s* noundef nonnull %435) #18, !dbg !12633
  call void @llvm.dbg.value(metadata i32 %447, metadata !1295, metadata !DIExpression()), !dbg !12180
  br label %494, !dbg !12634

448:                                              ; preds = %320
  %449 = icmp eq %struct.mxml_node_s* %37, null, !dbg !12635
  %450 = icmp ne %struct.mxml_node_s* %161, null
  %451 = select i1 %449, i1 %450, i1 false, !dbg !12638
  br i1 %451, label %452, label %456, !dbg !12638

452:                                              ; preds = %448
  %453 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %161, i32 0, i32 6, !dbg !12639
  %454 = bitcast %union.mxml_value_u* %453 to i8**, !dbg !12641
  %455 = load i8*, i8** %454, align 8, !dbg !12641
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18.237, i32 0, i32 0), i8* noundef nonnull %321, i8* noundef %455) #18, !dbg !12642
  br label %551, !dbg !12643

456:                                              ; preds = %448
  %457 = call %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef %37, i8* noundef nonnull %321) #18, !dbg !12644
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %457, metadata !1287, metadata !DIExpression()), !dbg !12180
  %458 = icmp eq %struct.mxml_node_s* %457, null, !dbg !12646
  br i1 %458, label %459, label %466, !dbg !12647

459:                                              ; preds = %456
  br i1 %449, label %464, label %460, !dbg !12648

460:                                              ; preds = %459
  %461 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !12650
  %462 = bitcast %union.mxml_value_u* %461 to i8**, !dbg !12651
  %463 = load i8*, i8** %462, align 8, !dbg !12651
  br label %464, !dbg !12648

464:                                              ; preds = %459, %460
  %465 = phi i8* [ %463, %460 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %459 ], !dbg !12648
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.29.248, i32 0, i32 0), i8* noundef %465) #18, !dbg !12652
  br label %551, !dbg !12653

466:                                              ; preds = %456
  %467 = call fastcc i32 @mxml_isspace(i32 noundef %218) #20, !dbg !12654
  %468 = icmp eq i32 %467, 0, !dbg !12654
  br i1 %468, label %472, label %469, !dbg !12656

469:                                              ; preds = %466
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %470 = call fastcc i32 @mxml_parse_element(%struct.mxml_node_s* noundef nonnull %457, i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12657
  call void @llvm.dbg.value(metadata i32 %470, metadata !1290, metadata !DIExpression()), !dbg !12180
  %471 = icmp eq i32 %470, -1, !dbg !12660
  br i1 %471, label %551, label %479, !dbg !12661

472:                                              ; preds = %466
  %473 = icmp eq i32 %218, 47, !dbg !12662
  br i1 %473, label %474, label %479, !dbg !12664

474:                                              ; preds = %472
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %475 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %475, metadata !1290, metadata !DIExpression()), !dbg !12180
  %476 = icmp eq i32 %475, 62, !dbg !12668
  br i1 %476, label %479, label %477, !dbg !12669

477:                                              ; preds = %474
  %478 = load i8*, i8** %6, align 4, !dbg !12670
  call void @llvm.dbg.value(metadata i8* %478, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.30.249, i32 0, i32 0), i32 noundef %475, i8* noundef %478) #18, !dbg !12672
  call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %457) #18, !dbg !12673
  br label %551, !dbg !12674

479:                                              ; preds = %474, %472, %469
  %480 = phi i32 [ %470, %469 ], [ %218, %472 ], [ 47, %474 ], !dbg !12548
  call void @llvm.dbg.value(metadata i32 %480, metadata !1290, metadata !DIExpression()), !dbg !12180
  br i1 %32, label %482, label %481, !dbg !12675

481:                                              ; preds = %479
  call void %3(%struct.mxml_node_s* noundef nonnull %457, i32 noundef 5, i8* noundef %4) #18, !dbg !12676
  br label %482, !dbg !12676

482:                                              ; preds = %481, %479
  %483 = select i1 %450, %struct.mxml_node_s* %161, %struct.mxml_node_s* %457, !dbg !12678
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %483, metadata !1288, metadata !DIExpression()), !dbg !12180
  switch i32 %480, label %484 [
    i32 -1, label %520
    i32 47, label %487
  ], !dbg !12679

484:                                              ; preds = %482
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %457, metadata !1289, metadata !DIExpression()), !dbg !12180
  br i1 %19, label %485, label %494, !dbg !12680

485:                                              ; preds = %484
  %486 = call i32 %2(%struct.mxml_node_s* noundef nonnull %457) #18, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %486, metadata !1295, metadata !DIExpression()), !dbg !12180
  br label %494, !dbg !12685

487:                                              ; preds = %482
  br i1 %32, label %494, label %488, !dbg !12686

488:                                              ; preds = %487
  call void %3(%struct.mxml_node_s* noundef nonnull %457, i32 noundef 4, i8* noundef %4) #18, !dbg !12687
  %489 = call i32 @mxmlRelease(%struct.mxml_node_s* noundef nonnull %457) #18, !dbg !12690
  %490 = icmp eq i32 %489, 0, !dbg !12690
  %491 = icmp eq %struct.mxml_node_s* %483, %457
  %492 = select i1 %490, i1 %491, i1 false, !dbg !12692
  %493 = select i1 %492, %struct.mxml_node_s* null, %struct.mxml_node_s* %483, !dbg !12692
  br label %494, !dbg !12692

494:                                              ; preds = %403, %357, %488, %406, %360, %315, %270, %411, %485, %484, %487, %442, %446, %365
  %495 = phi %struct.mxml_node_s* [ %361, %360 ], [ %361, %365 ], [ %407, %406 ], [ %407, %411 ], [ %443, %446 ], [ %443, %442 ], [ %483, %485 ], [ %483, %484 ], [ %483, %487 ], [ %274, %270 ], [ %319, %315 ], [ %493, %488 ], [ %161, %357 ], [ %161, %403 ], !dbg !12313
  %496 = phi %struct.mxml_node_s* [ %363, %360 ], [ %347, %365 ], [ %409, %406 ], [ %393, %411 ], [ %435, %446 ], [ %435, %442 ], [ %457, %485 ], [ %457, %484 ], [ %37, %487 ], [ %37, %270 ], [ %37, %315 ], [ %37, %488 ], [ %37, %357 ], [ %37, %403 ], !dbg !12180
  %497 = phi i32 [ %364, %360 ], [ %366, %365 ], [ %410, %406 ], [ %412, %411 ], [ %447, %446 ], [ %35, %442 ], [ %486, %485 ], [ %35, %484 ], [ %35, %487 ], [ %35, %270 ], [ %35, %315 ], [ %35, %488 ], [ %35, %357 ], [ %35, %403 ], !dbg !12180
  call void @llvm.dbg.value(metadata i32 %497, metadata !1295, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %496, metadata !1289, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %495, metadata !1288, metadata !DIExpression()), !dbg !12180
  %498 = load i8*, i8** %6, align 4, !dbg !12693
  call void @llvm.dbg.value(metadata i8* %498, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i8* %498, metadata !1293, metadata !DIExpression()), !dbg !12180
  store i8* %498, i8** %7, align 4, !dbg !12694
  br label %514, !dbg !12695

499:                                              ; preds = %160
  %500 = icmp eq i32 %34, 38, !dbg !12696
  br i1 %500, label %501, label %507, !dbg !12698

501:                                              ; preds = %499
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %502 = call fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef %37, i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12699
  call void @llvm.dbg.value(metadata i32 %502, metadata !1290, metadata !DIExpression()), !dbg !12180
  %503 = icmp eq i32 %502, -1, !dbg !12702
  br i1 %503, label %551, label %504, !dbg !12703

504:                                              ; preds = %501
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %505 = call fastcc i32 @mxml_add_char(i32 noundef %502, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12704
  %506 = icmp eq i32 %505, 0, !dbg !12704
  br i1 %506, label %514, label %551, !dbg !12706

507:                                              ; preds = %499
  switch i32 %35, label %508 [
    i32 5, label %511
    i32 2, label %511
  ], !dbg !12707

508:                                              ; preds = %507
  %509 = call fastcc i32 @mxml_isspace(i32 noundef %34) #20, !dbg !12709
  %510 = icmp eq i32 %509, 0, !dbg !12709
  br i1 %510, label %511, label %514, !dbg !12710

511:                                              ; preds = %507, %507, %508
  call void @llvm.dbg.value(metadata i8** %6, metadata !1292, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i8** %7, metadata !1293, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %8, metadata !1294, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %512 = call fastcc i32 @mxml_add_char(i32 noundef %34, i8** noundef nonnull %7, i8** noundef nonnull %6, i32* noundef nonnull %8) #20, !dbg !12711
  %513 = icmp eq i32 %512, 0, !dbg !12711
  br i1 %513, label %514, label %551, !dbg !12714

514:                                              ; preds = %504, %511, %508, %494
  %515 = phi %struct.mxml_node_s* [ %495, %494 ], [ %161, %504 ], [ %161, %511 ], [ %161, %508 ], !dbg !12715
  %516 = phi %struct.mxml_node_s* [ %496, %494 ], [ %37, %504 ], [ %37, %511 ], [ %37, %508 ], !dbg !12716
  %517 = phi i32 [ %497, %494 ], [ %35, %504 ], [ %35, %511 ], [ %35, %508 ], !dbg !12717
  call void @llvm.dbg.value(metadata i32 %517, metadata !1295, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 %162, metadata !1291, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %516, metadata !1289, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %515, metadata !1288, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32* %9, metadata !1296, metadata !DIExpression(DW_OP_deref)), !dbg !12180
  %518 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef nonnull %9) #20, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %518, metadata !1290, metadata !DIExpression()), !dbg !12180
  %519 = icmp eq i32 %518, -1, !dbg !12203
  br i1 %519, label %520, label %33, !dbg !12204, !llvm.loop !12718

520:                                              ; preds = %514, %482, %26, %263, %100
  %521 = phi %struct.mxml_node_s* [ %37, %100 ], [ %37, %263 ], [ %0, %26 ], [ %516, %514 ], [ %37, %482 ]
  %522 = phi %struct.mxml_node_s* [ %38, %100 ], [ %161, %263 ], [ null, %26 ], [ %515, %514 ], [ %483, %482 ], !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %522, metadata !1288, metadata !DIExpression()), !dbg !12180
  %523 = load i8*, i8** %6, align 4, !dbg !12720
  call void @llvm.dbg.value(metadata i8* %523, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @vPortFree(i8* noundef %523) #18, !dbg !12721
  %524 = icmp eq %struct.mxml_node_s* %521, null, !dbg !12722
  br i1 %524, label %548, label %525, !dbg !12724

525:                                              ; preds = %520, %528
  %526 = phi %struct.mxml_node_s* [ %530, %528 ], [ %521, %520 ], !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %526, metadata !1289, metadata !DIExpression()), !dbg !12180
  %527 = icmp eq %struct.mxml_node_s* %526, %0, !dbg !12725
  br i1 %527, label %532, label %528, !dbg !12727

528:                                              ; preds = %525
  %529 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %526, i32 0, i32 3, !dbg !12728
  %530 = load %struct.mxml_node_s*, %struct.mxml_node_s** %529, align 4, !dbg !12728
  %531 = icmp eq %struct.mxml_node_s* %530, null, !dbg !12727
  br i1 %531, label %532, label %525, !dbg !12729, !llvm.loop !12730

532:                                              ; preds = %525, %528
  %533 = phi %struct.mxml_node_s* [ %0, %525 ], [ %526, %528 ], !dbg !12180
  %534 = icmp eq %struct.mxml_node_s* %521, %533, !dbg !12732
  br i1 %534, label %548, label %535, !dbg !12734

535:                                              ; preds = %532
  %536 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %521, i32 0, i32 6, !dbg !12735
  %537 = bitcast %union.mxml_value_u* %536 to i8**, !dbg !12737
  %538 = load i8*, i8** %537, align 8, !dbg !12737
  %539 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %521, i32 0, i32 3, !dbg !12738
  %540 = load %struct.mxml_node_s*, %struct.mxml_node_s** %539, align 4, !dbg !12738
  %541 = icmp eq %struct.mxml_node_s* %540, null, !dbg !12739
  br i1 %541, label %546, label %542, !dbg !12739

542:                                              ; preds = %535
  %543 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %540, i32 0, i32 6, !dbg !12740
  %544 = bitcast %union.mxml_value_u* %543 to i8**, !dbg !12741
  %545 = load i8*, i8** %544, align 8, !dbg !12741
  br label %546, !dbg !12739

546:                                              ; preds = %535, %542
  %547 = phi i8* [ %545, %542 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.246, i32 0, i32 0), %535 ], !dbg !12739
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31.250, i32 0, i32 0), i8* noundef %538, i8* noundef %547) #18, !dbg !12742
  call void @mxmlDelete(%struct.mxml_node_s* noundef %522) #18, !dbg !12743
  br label %554, !dbg !12744

548:                                              ; preds = %532, %520
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %521, metadata !1289, metadata !DIExpression()), !dbg !12180
  %549 = icmp eq %struct.mxml_node_s* %521, null, !dbg !12745
  %550 = select i1 %549, %struct.mxml_node_s* %522, %struct.mxml_node_s* %521, !dbg !12747
  br label %554, !dbg !12747

551:                                              ; preds = %511, %504, %501, %469, %185, %182, %179, %375, %372, %333, %286, %242, %477, %464, %452, %426, %400, %388, %381, %354, %342, %336, %308, %296, %289, %251, %245, %178, %120
  %552 = phi %struct.mxml_node_s* [ %38, %120 ], [ %161, %336 ], [ %161, %342 ], [ %161, %354 ], [ %161, %381 ], [ %161, %388 ], [ %161, %400 ], [ %161, %426 ], [ %161, %452 ], [ %161, %464 ], [ %161, %477 ], [ %161, %289 ], [ %161, %296 ], [ %161, %308 ], [ %161, %245 ], [ %161, %251 ], [ %161, %178 ], [ %161, %242 ], [ %161, %286 ], [ %161, %333 ], [ %161, %372 ], [ %161, %375 ], [ %161, %179 ], [ %161, %182 ], [ %161, %185 ], [ %161, %469 ], [ %161, %501 ], [ %161, %504 ], [ %161, %511 ], !dbg !12180
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %552, metadata !1288, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.label(metadata !1324), !dbg !12748
  call void @mxmlDelete(%struct.mxml_node_s* noundef %552) #18, !dbg !12749
  %553 = load i8*, i8** %6, align 4, !dbg !12750
  call void @llvm.dbg.value(metadata i8* %553, metadata !1292, metadata !DIExpression()), !dbg !12180
  call void @vPortFree(i8* noundef %553) #18, !dbg !12751
  br label %554, !dbg !12752

554:                                              ; preds = %548, %551, %546, %17
  %555 = phi %struct.mxml_node_s* [ null, %17 ], [ null, %546 ], [ null, %551 ], [ %550, %548 ], !dbg !12180
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17, !dbg !12753
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17, !dbg !12753
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17, !dbg !12753
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #17, !dbg !12753
  ret %struct.mxml_node_s* %555, !dbg !12753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_string_getc(i8* noundef %0, i32* noundef %1) unnamed_addr #0 !dbg !12754 {
  %3 = bitcast i8* %0 to i8**
  %4 = load i8*, i8** %3, align 4, !dbg !12771
  br label %5, !dbg !12772

5:                                                ; preds = %33, %2
  %6 = phi i8* [ %4, %2 ], [ %34, %33 ], !dbg !12771
  call void @llvm.dbg.value(metadata i8* %0, metadata !12756, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.value(metadata i32* %1, metadata !12757, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.value(metadata i8** %3, metadata !12759, metadata !DIExpression()), !dbg !12776
  %7 = load i8, i8* %6, align 1, !dbg !12777
  %8 = zext i8 %7 to i32, !dbg !12777
  call void @llvm.dbg.value(metadata i32 %8, metadata !12758, metadata !DIExpression()), !dbg !12776
  %9 = icmp eq i8 %7, 0, !dbg !12778
  br i1 %9, label %10, label %13, !dbg !12779

10:                                               ; preds = %5
  %11 = load i32, i32* %1, align 4, !dbg !12780
  %12 = icmp eq i32 %11, 2, !dbg !12781
  br i1 %12, label %13, label %192, !dbg !12782

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !12783
  store i8* %14, i8** %3, align 4, !dbg !12783
  %15 = load i32, i32* %1, align 4, !dbg !12784
  switch i32 %15, label %192 [
    i32 0, label %16
    i32 1, label %117
    i32 2, label %153
  ], !dbg !12785

16:                                               ; preds = %13
  %17 = and i32 %8, 128, !dbg !12786
  %18 = icmp eq i32 %17, 0, !dbg !12786
  br i1 %18, label %19, label %25, !dbg !12787

19:                                               ; preds = %16
  %20 = zext i8 %7 to i32, !dbg !12777
  %21 = freeze i8 %7
  %22 = icmp ult i8 %21, 32, !dbg !12788
  br i1 %22, label %23, label %192, !dbg !12788

23:                                               ; preds = %19
  switch i8 %21, label %24 [
    i8 13, label %192
    i8 10, label %192
    i8 9, label %192
  ], !dbg !12788

24:                                               ; preds = %23
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.42.267, i32 0, i32 0), i32 noundef %20) #18, !dbg !12791
  br label %192, !dbg !12793

25:                                               ; preds = %16
  switch i8 %7, label %38 [
    i8 -2, label %26
    i8 -1, label %35
  ], !dbg !12794

26:                                               ; preds = %25
  %27 = load i8, i8* %14, align 1, !dbg !12795
  %28 = icmp eq i8 %27, -1, !dbg !12797
  br i1 %28, label %29, label %192, !dbg !12798

29:                                               ; preds = %35, %26
  %30 = phi i32 [ 1, %26 ], [ 2, %35 ], !dbg !12799
  store i32 %30, i32* %1, align 4, !dbg !12799
  %31 = load i8*, i8** %3, align 4, !dbg !12799
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !12799
  store i8* %32, i8** %3, align 4, !dbg !12799
  br label %33, !dbg !12776

33:                                               ; preds = %29, %80
  %34 = phi i8* [ %77, %80 ], [ %32, %29 ]
  br label %5, !dbg !12776

35:                                               ; preds = %25
  %36 = load i8, i8* %14, align 1, !dbg !12800
  %37 = icmp eq i8 %36, -2, !dbg !12804
  br i1 %37, label %29, label %192, !dbg !12805

38:                                               ; preds = %25
  %39 = and i32 %8, 224, !dbg !12806
  %40 = icmp eq i32 %39, 192, !dbg !12808
  br i1 %40, label %41, label %55, !dbg !12809

41:                                               ; preds = %38
  %42 = load i8, i8* %14, align 1, !dbg !12810
  %43 = zext i8 %42 to i32, !dbg !12810
  %44 = and i32 %43, 192, !dbg !12813
  %45 = icmp eq i32 %44, 128, !dbg !12814
  br i1 %45, label %46, label %192, !dbg !12815

46:                                               ; preds = %41
  %47 = zext i8 %7 to i32, !dbg !12777
  %48 = shl nuw nsw i32 %47, 6, !dbg !12816
  %49 = and i32 %48, 1984, !dbg !12816
  %50 = and i32 %43, 63, !dbg !12817
  %51 = or i32 %50, %49, !dbg !12818
  call void @llvm.dbg.value(metadata i32 %51, metadata !12758, metadata !DIExpression()), !dbg !12776
  %52 = getelementptr inbounds i8, i8* %6, i32 2, !dbg !12819
  store i8* %52, i8** %3, align 4, !dbg !12819
  %53 = icmp ult i32 %51, 128, !dbg !12820
  br i1 %53, label %54, label %192, !dbg !12822

54:                                               ; preds = %46
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.43.268, i32 0, i32 0), i32 noundef %51) #18, !dbg !12823
  br label %192, !dbg !12825

55:                                               ; preds = %38
  %56 = and i32 %8, 240, !dbg !12826
  %57 = icmp eq i32 %56, 224, !dbg !12828
  br i1 %57, label %58, label %82, !dbg !12829

58:                                               ; preds = %55
  %59 = load i8, i8* %14, align 1, !dbg !12830
  %60 = zext i8 %59 to i32, !dbg !12830
  %61 = and i32 %60, 192, !dbg !12833
  %62 = icmp eq i32 %61, 128, !dbg !12834
  br i1 %62, label %63, label %192, !dbg !12835

63:                                               ; preds = %58
  %64 = getelementptr inbounds i8, i8* %6, i32 2, !dbg !12836
  %65 = load i8, i8* %64, align 1, !dbg !12836
  %66 = zext i8 %65 to i32, !dbg !12836
  %67 = and i32 %66, 192, !dbg !12837
  %68 = icmp eq i32 %67, 128, !dbg !12838
  br i1 %68, label %69, label %192, !dbg !12839

69:                                               ; preds = %63
  %70 = shl nuw nsw i32 %8, 6, !dbg !12840
  %71 = and i32 %70, 960, !dbg !12840
  %72 = and i32 %60, 63, !dbg !12841
  %73 = or i32 %72, %71, !dbg !12842
  %74 = shl nuw nsw i32 %73, 6, !dbg !12843
  %75 = and i32 %66, 63, !dbg !12844
  %76 = or i32 %75, %74, !dbg !12845
  call void @llvm.dbg.value(metadata i32 %76, metadata !12758, metadata !DIExpression()), !dbg !12776
  %77 = getelementptr inbounds i8, i8* %6, i32 3, !dbg !12846
  store i8* %77, i8** %3, align 4, !dbg !12846
  %78 = icmp ult i32 %76, 2048, !dbg !12847
  br i1 %78, label %79, label %80, !dbg !12849

79:                                               ; preds = %69
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.43.268, i32 0, i32 0), i32 noundef %76) #18, !dbg !12850
  br label %192, !dbg !12852

80:                                               ; preds = %69
  %81 = icmp eq i32 %76, 65279, !dbg !12853
  br i1 %81, label %33, label %192, !dbg !12855

82:                                               ; preds = %55
  %83 = zext i8 %7 to i32, !dbg !12777
  %84 = and i32 %83, 248, !dbg !12856
  %85 = icmp eq i32 %84, 240, !dbg !12858
  br i1 %85, label %86, label %192, !dbg !12859

86:                                               ; preds = %82
  %87 = load i8, i8* %14, align 1, !dbg !12860
  %88 = zext i8 %87 to i32, !dbg !12860
  %89 = and i32 %88, 192, !dbg !12863
  %90 = icmp eq i32 %89, 128, !dbg !12864
  br i1 %90, label %91, label %192, !dbg !12865

91:                                               ; preds = %86
  %92 = getelementptr inbounds i8, i8* %6, i32 2, !dbg !12866
  %93 = load i8, i8* %92, align 1, !dbg !12866
  %94 = zext i8 %93 to i32, !dbg !12866
  %95 = and i32 %94, 192, !dbg !12867
  %96 = icmp eq i32 %95, 128, !dbg !12868
  br i1 %96, label %97, label %192, !dbg !12869

97:                                               ; preds = %91
  %98 = getelementptr inbounds i8, i8* %6, i32 3, !dbg !12870
  %99 = load i8, i8* %98, align 1, !dbg !12870
  %100 = zext i8 %99 to i32, !dbg !12870
  %101 = and i32 %100, 192, !dbg !12871
  %102 = icmp eq i32 %101, 128, !dbg !12872
  br i1 %102, label %103, label %192, !dbg !12873

103:                                              ; preds = %97
  %104 = shl nuw nsw i32 %83, 6, !dbg !12874
  %105 = and i32 %104, 448, !dbg !12874
  %106 = and i32 %88, 63, !dbg !12875
  %107 = or i32 %106, %105, !dbg !12876
  %108 = shl nuw nsw i32 %107, 12, !dbg !12877
  %109 = shl nuw nsw i32 %94, 6, !dbg !12877
  %110 = and i32 %109, 4032, !dbg !12877
  %111 = or i32 %110, %108, !dbg !12877
  %112 = and i32 %100, 63, !dbg !12878
  %113 = or i32 %112, %111, !dbg !12879
  call void @llvm.dbg.value(metadata i32 %113, metadata !12758, metadata !DIExpression()), !dbg !12776
  %114 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !12880
  store i8* %114, i8** %3, align 4, !dbg !12880
  %115 = icmp ult i32 %113, 65536, !dbg !12881
  br i1 %115, label %116, label %192, !dbg !12883

116:                                              ; preds = %103
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.43.268, i32 0, i32 0), i32 noundef %113) #18, !dbg !12884
  br label %192, !dbg !12886

117:                                              ; preds = %13
  %118 = zext i8 %7 to i32, !dbg !12777
  %119 = shl nuw nsw i32 %118, 8, !dbg !12887
  %120 = load i8, i8* %14, align 1, !dbg !12888
  %121 = zext i8 %120 to i32, !dbg !12888
  %122 = or i32 %119, %121, !dbg !12889
  call void @llvm.dbg.value(metadata !DIArgList(i32 %119, i32 %121), metadata !12758, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !12776
  %123 = getelementptr inbounds i8, i8* %6, i32 2, !dbg !12890
  store i8* %123, i8** %3, align 4, !dbg !12890
  %124 = icmp ult i32 %122, 32, !dbg !12891
  %125 = icmp ne i32 %122, 10, !dbg !12891
  %126 = and i1 %124, %125, !dbg !12891
  %127 = and i32 %122, 65531, !dbg !12891
  %128 = icmp ne i32 %127, 9, !dbg !12891
  %129 = and i1 %128, %126, !dbg !12891
  br i1 %129, label %130, label %131, !dbg !12891

130:                                              ; preds = %117
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.42.267, i32 0, i32 0), i32 noundef %122) #18, !dbg !12892
  br label %192, !dbg !12894

131:                                              ; preds = %117
  %132 = and i32 %118, 252, !dbg !12895
  %133 = icmp eq i32 %132, 216, !dbg !12895
  br i1 %133, label %134, label %192, !dbg !12895

134:                                              ; preds = %131
  %135 = load i8, i8* %123, align 1, !dbg !12896
  %136 = icmp eq i8 %135, 0, !dbg !12896
  br i1 %136, label %192, label %137, !dbg !12898

137:                                              ; preds = %134
  %138 = zext i8 %135 to i32, !dbg !12899
  %139 = shl nuw nsw i32 %138, 8, !dbg !12900
  %140 = getelementptr inbounds i8, i8* %6, i32 3, !dbg !12901
  %141 = load i8, i8* %140, align 1, !dbg !12901
  %142 = zext i8 %141 to i32, !dbg !12901
  %143 = or i32 %139, %142, !dbg !12902
  call void @llvm.dbg.value(metadata i32 %143, metadata !12760, metadata !DIExpression()), !dbg !12903
  %144 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !12904
  store i8* %144, i8** %3, align 4, !dbg !12904
  %145 = add nsw i32 %143, -57343, !dbg !12905
  %146 = icmp ult i32 %145, -1023, !dbg !12905
  br i1 %146, label %192, label %147, !dbg !12905

147:                                              ; preds = %137
  %148 = shl nuw nsw i32 %122, 10, !dbg !12907
  %149 = and i32 %148, 1047552, !dbg !12907
  %150 = and i32 %143, 1023, !dbg !12908
  %151 = add nuw nsw i32 %149, 65536, !dbg !12909
  %152 = or i32 %151, %150, !dbg !12910
  call void @llvm.dbg.value(metadata i32 %152, metadata !12758, metadata !DIExpression()), !dbg !12776
  br label %192

153:                                              ; preds = %13
  %154 = zext i8 %7 to i32, !dbg !12777
  %155 = load i8, i8* %14, align 1, !dbg !12911
  %156 = zext i8 %155 to i32, !dbg !12911
  %157 = shl nuw nsw i32 %156, 8, !dbg !12912
  %158 = or i32 %157, %154, !dbg !12913
  call void @llvm.dbg.value(metadata !DIArgList(i32 %157, i32 %154), metadata !12758, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !12776
  %159 = icmp eq i32 %158, 0, !dbg !12914
  br i1 %159, label %160, label %161, !dbg !12916

160:                                              ; preds = %153
  store i8* %6, i8** %3, align 4, !dbg !12917
  br label %192, !dbg !12919

161:                                              ; preds = %153
  %162 = getelementptr inbounds i8, i8* %6, i32 2, !dbg !12920
  store i8* %162, i8** %3, align 4, !dbg !12920
  %163 = icmp ult i32 %158, 32, !dbg !12921
  %164 = icmp ne i32 %158, 10, !dbg !12921
  %165 = and i1 %163, %164, !dbg !12921
  %166 = and i32 %158, 65531, !dbg !12921
  %167 = icmp ne i32 %166, 9, !dbg !12921
  %168 = and i1 %167, %165, !dbg !12921
  br i1 %168, label %169, label %170, !dbg !12921

169:                                              ; preds = %161
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.42.267, i32 0, i32 0), i32 noundef %158) #18, !dbg !12922
  br label %192, !dbg !12924

170:                                              ; preds = %161
  %171 = and i32 %156, 252, !dbg !12925
  %172 = icmp eq i32 %171, 216, !dbg !12925
  br i1 %172, label %173, label %192, !dbg !12925

173:                                              ; preds = %170
  %174 = getelementptr inbounds i8, i8* %6, i32 3, !dbg !12926
  %175 = load i8, i8* %174, align 1, !dbg !12926
  %176 = icmp eq i8 %175, 0, !dbg !12926
  br i1 %176, label %192, label %177, !dbg !12928

177:                                              ; preds = %173
  %178 = zext i8 %175 to i32, !dbg !12929
  %179 = shl nuw nsw i32 %178, 8, !dbg !12930
  %180 = load i8, i8* %162, align 1, !dbg !12931
  %181 = zext i8 %180 to i32, !dbg !12931
  %182 = or i32 %179, %181, !dbg !12932
  call void @llvm.dbg.value(metadata i32 %182, metadata !12767, metadata !DIExpression()), !dbg !12933
  %183 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !12934
  store i8* %183, i8** %3, align 4, !dbg !12934
  %184 = add nsw i32 %182, -57343, !dbg !12935
  %185 = icmp ult i32 %184, -1023, !dbg !12935
  br i1 %185, label %192, label %186, !dbg !12935

186:                                              ; preds = %177
  %187 = shl nuw nsw i32 %158, 10, !dbg !12937
  %188 = and i32 %187, 1047552, !dbg !12937
  %189 = and i32 %182, 1023, !dbg !12938
  %190 = add nuw nsw i32 %188, 65536, !dbg !12939
  %191 = or i32 %190, %189, !dbg !12940
  call void @llvm.dbg.value(metadata i32 %191, metadata !12758, metadata !DIExpression()), !dbg !12776
  br label %192

192:                                              ; preds = %10, %13, %80, %58, %63, %35, %26, %177, %173, %137, %134, %170, %186, %131, %147, %82, %103, %86, %91, %97, %46, %41, %19, %23, %23, %23, %169, %160, %130, %116, %79, %54, %24
  %193 = phi i32 [ -1, %169 ], [ -1, %160 ], [ -1, %130 ], [ -1, %54 ], [ -1, %79 ], [ -1, %116 ], [ -1, %24 ], [ %20, %23 ], [ %20, %23 ], [ %20, %23 ], [ %20, %19 ], [ -1, %41 ], [ %51, %46 ], [ -1, %97 ], [ -1, %91 ], [ -1, %86 ], [ %113, %103 ], [ -1, %82 ], [ %152, %147 ], [ %122, %131 ], [ %191, %186 ], [ %158, %170 ], [ -1, %134 ], [ -1, %137 ], [ -1, %173 ], [ -1, %177 ], [ -1, %10 ], [ -1, %13 ], [ %76, %80 ], [ -1, %58 ], [ -1, %63 ], [ -1, %35 ], [ -1, %26 ], !dbg !12776
  ret i32 %193, !dbg !12941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mxml_isspace(i32 noundef %0) unnamed_addr #7 !dbg !12942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12944, metadata !DIExpression()), !dbg !12945
  switch i32 %0, label %2 [
    i32 32, label %5
    i32 13, label %5
    i32 9, label %5
  ], !dbg !12946

2:                                                ; preds = %1
  %3 = icmp eq i32 %0, 10, !dbg !12947
  %4 = zext i1 %3 to i32, !dbg !12948
  br label %5, !dbg !12948

5:                                                ; preds = %1, %1, %1, %2
  %6 = phi i32 [ 1, %1 ], [ %4, %2 ], [ 1, %1 ], [ 1, %1 ]
  ret i32 %6, !dbg !12949
}

; Function Attrs: optsize
declare dso_local i32 @strtol(i8* noundef, i8** noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local double @strtod(i8* noundef, i8** noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef readonly %0, i8* noundef %1, i32* noundef %2) unnamed_addr #0 !dbg !12950 {
  %4 = alloca [64 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !12954, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8* %1, metadata !12955, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32* %2, metadata !12956, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32 (i8*, i32*)* @mxml_string_getc, metadata !12957, metadata !DIExpression()), !dbg !12964
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0, !dbg !12965
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #17, !dbg !12965
  call void @llvm.dbg.declare(metadata [64 x i8]* %4, metadata !12959, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i8* %5, metadata !12963, metadata !DIExpression()), !dbg !12964
  %6 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !12967
  call void @llvm.dbg.value(metadata i32 %6, metadata !12958, metadata !DIExpression()), !dbg !12964
  %7 = icmp eq i32 %6, -1, !dbg !12968
  %8 = icmp sgt i32 %6, 126
  %9 = or i1 %7, %8, !dbg !12969
  br i1 %9, label %38, label %10, !dbg !12969

10:                                               ; preds = %3
  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 63
  br label %12, !dbg !12969

12:                                               ; preds = %10, %23
  %13 = phi i32 [ %6, %10 ], [ %26, %23 ]
  %14 = phi i8* [ %5, %10 ], [ %25, %23 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !12963, metadata !DIExpression()), !dbg !12964
  %15 = getelementptr inbounds i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ctype_, i32 0, i32 1), i32 %13, !dbg !12970
  %16 = load i8, i8* %15, align 1, !dbg !12970
  %17 = and i8 %16, 7, !dbg !12970
  %18 = icmp eq i8 %17, 0, !dbg !12970
  %19 = icmp ne i32 %13, 35
  %20 = select i1 %18, i1 %19, i1 false, !dbg !12972
  br i1 %20, label %38, label %21, !dbg !12972

21:                                               ; preds = %12
  %22 = icmp ult i8* %14, %11, !dbg !12973
  br i1 %22, label %23, label %30, !dbg !12975

23:                                               ; preds = %21
  %24 = trunc i32 %13 to i8, !dbg !12976
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !12977
  call void @llvm.dbg.value(metadata i8* %25, metadata !12963, metadata !DIExpression()), !dbg !12964
  store i8 %24, i8* %14, align 1, !dbg !12978
  %26 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !12967
  call void @llvm.dbg.value(metadata i32 %26, metadata !12958, metadata !DIExpression()), !dbg !12964
  %27 = icmp eq i32 %26, -1, !dbg !12968
  %28 = icmp sgt i32 %26, 126
  %29 = or i1 %27, %28, !dbg !12969
  br i1 %29, label %38, label %12, !dbg !12969, !llvm.loop !12979

30:                                               ; preds = %21
  %31 = icmp eq %struct.mxml_node_s* %0, null, !dbg !12981
  br i1 %31, label %36, label %32, !dbg !12981

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !12983
  %34 = bitcast %union.mxml_value_u* %33 to i8**, !dbg !12984
  %35 = load i8*, i8** %34, align 8, !dbg !12984
  br label %36, !dbg !12981

36:                                               ; preds = %30, %32
  %37 = phi i8* [ %35, %32 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %30 ], !dbg !12981
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32.257, i32 0, i32 0), i8* noundef %37) #18, !dbg !12985
  br label %38, !dbg !12986

38:                                               ; preds = %23, %12, %3, %36
  %39 = phi i8* [ %14, %36 ], [ %5, %3 ], [ %25, %23 ], [ %14, %12 ]
  %40 = phi i32 [ %13, %36 ], [ %6, %3 ], [ %26, %23 ], [ %13, %12 ]
  store i8 0, i8* %39, align 1, !dbg !12987
  %41 = icmp eq i32 %40, 59, !dbg !12988
  br i1 %41, label %50, label %42, !dbg !12990

42:                                               ; preds = %38
  %43 = icmp eq %struct.mxml_node_s* %0, null, !dbg !12991
  br i1 %43, label %48, label %44, !dbg !12991

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !12993
  %46 = bitcast %union.mxml_value_u* %45 to i8**, !dbg !12994
  %47 = load i8*, i8** %46, align 8, !dbg !12994
  br label %48, !dbg !12991

48:                                               ; preds = %42, %44
  %49 = phi i8* [ %47, %44 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %42 ], !dbg !12991
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.33.258, i32 0, i32 0), i8* noundef nonnull %5, i8* noundef %49) #18, !dbg !12995
  br label %87, !dbg !12996

50:                                               ; preds = %38
  %51 = load i8, i8* %5, align 1, !dbg !12997
  %52 = icmp eq i8 %51, 35, !dbg !12999
  br i1 %52, label %53, label %62, !dbg !13000

53:                                               ; preds = %50
  %54 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 1, !dbg !13001
  %55 = load i8, i8* %54, align 1, !dbg !13001
  %56 = icmp eq i8 %55, 120, !dbg !13004
  br i1 %56, label %57, label %60, !dbg !13005

57:                                               ; preds = %53
  %58 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 2, !dbg !13006
  %59 = call i32 @strtol(i8* noundef nonnull %58, i8** noundef null, i32 noundef 16) #18, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %59, metadata !12958, metadata !DIExpression()), !dbg !12964
  br label %73, !dbg !13008

60:                                               ; preds = %53
  %61 = call i32 @strtol(i8* noundef nonnull %54, i8** noundef null, i32 noundef 10) #18, !dbg !13009
  call void @llvm.dbg.value(metadata i32 %61, metadata !12958, metadata !DIExpression()), !dbg !12964
  br label %73

62:                                               ; preds = %50
  %63 = call i32 @mxmlEntityGetValue(i8* noundef nonnull %5) #18, !dbg !13010
  call void @llvm.dbg.value(metadata i32 %63, metadata !12958, metadata !DIExpression()), !dbg !12964
  %64 = icmp slt i32 %63, 0, !dbg !13012
  br i1 %64, label %65, label %73, !dbg !13013

65:                                               ; preds = %62
  %66 = icmp eq %struct.mxml_node_s* %0, null, !dbg !13014
  br i1 %66, label %71, label %67, !dbg !13014

67:                                               ; preds = %65
  %68 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13015
  %69 = bitcast %union.mxml_value_u* %68 to i8**, !dbg !13016
  %70 = load i8*, i8** %69, align 8, !dbg !13016
  br label %71, !dbg !13014

71:                                               ; preds = %67, %65
  %72 = phi i8* [ %70, %67 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %65 ], !dbg !13014
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34.259, i32 0, i32 0), i8* noundef nonnull %5, i8* noundef %72) #18, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %74, metadata !12958, metadata !DIExpression()), !dbg !12964
  br label %77, !dbg !13018

73:                                               ; preds = %62, %57, %60
  %74 = phi i32 [ %59, %57 ], [ %61, %60 ], [ %63, %62 ], !dbg !13020
  call void @llvm.dbg.value(metadata i32 %74, metadata !12958, metadata !DIExpression()), !dbg !12964
  %75 = freeze i32 %74
  %76 = icmp slt i32 %75, 32, !dbg !13018
  br i1 %76, label %77, label %87, !dbg !13018

77:                                               ; preds = %71, %73
  %78 = phi i32 [ %63, %71 ], [ %75, %73 ]
  switch i32 %78, label %79 [
    i32 13, label %87
    i32 10, label %87
    i32 9, label %87
  ], !dbg !13018

79:                                               ; preds = %77
  %80 = icmp eq %struct.mxml_node_s* %0, null, !dbg !13021
  br i1 %80, label %85, label %81, !dbg !13021

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13023
  %83 = bitcast %union.mxml_value_u* %82 to i8**, !dbg !13024
  %84 = load i8*, i8** %83, align 8, !dbg !13024
  br label %85, !dbg !13021

85:                                               ; preds = %79, %81
  %86 = phi i8* [ %84, %81 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.226, i32 0, i32 0), %79 ], !dbg !13021
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([76 x i8], [76 x i8]* @.str.35.260, i32 0, i32 0), i32 noundef %78, i8* noundef %86) #18, !dbg !13025
  br label %87, !dbg !13026

87:                                               ; preds = %73, %77, %77, %77, %85, %48
  %88 = phi i32 [ -1, %48 ], [ -1, %85 ], [ %78, %77 ], [ %78, %77 ], [ %78, %77 ], [ %75, %73 ], !dbg !12964
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #17, !dbg !13027
  ret i32 %88, !dbg !13027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_add_char(i32 noundef %0, i8** noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) unnamed_addr #0 !dbg !13028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13032, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.value(metadata i8** %1, metadata !13033, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.value(metadata i8** %2, metadata !13034, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.value(metadata i32* %3, metadata !13035, metadata !DIExpression()), !dbg !13037
  %5 = load i8*, i8** %1, align 4, !dbg !13038
  %6 = load i8*, i8** %2, align 4, !dbg !13040
  %7 = load i32, i32* %3, align 4, !dbg !13041
  %8 = getelementptr inbounds i8, i8* %6, i32 %7, !dbg !13042
  %9 = getelementptr inbounds i8, i8* %8, i32 -4, !dbg !13043
  %10 = icmp ult i8* %5, %9, !dbg !13044
  br i1 %10, label %29, label %11, !dbg !13045

11:                                               ; preds = %4
  %12 = icmp slt i32 %7, 1024, !dbg !13046
  %13 = add nsw i32 %7, 1024, !dbg !13049
  %14 = shl nsw i32 %7, 1, !dbg !13049
  %15 = select i1 %12, i32 %14, i32 %13, !dbg !13049
  store i32 %15, i32* %3, align 4, !dbg !13050
  %16 = load i8*, i8** %2, align 4, !dbg !13051
  %17 = tail call i8* @pvPortRealloc(i8* noundef %16, i32 noundef %15) #18, !dbg !13053
  call void @llvm.dbg.value(metadata i8* %17, metadata !13036, metadata !DIExpression()), !dbg !13037
  %18 = icmp eq i8* %17, null, !dbg !13054
  br i1 %18, label %19, label %22, !dbg !13055

19:                                               ; preds = %11
  %20 = load i8*, i8** %2, align 4, !dbg !13056
  tail call void @vPortFree(i8* noundef %20) #18, !dbg !13058
  %21 = load i32, i32* %3, align 4, !dbg !13059
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36.256, i32 0, i32 0), i32 noundef %21) #18, !dbg !13060
  br label %90, !dbg !13061

22:                                               ; preds = %11
  %23 = load i8*, i8** %1, align 4, !dbg !13062
  %24 = load i8*, i8** %2, align 4, !dbg !13063
  %25 = ptrtoint i8* %23 to i32, !dbg !13064
  %26 = ptrtoint i8* %24 to i32, !dbg !13064
  %27 = sub i32 %25, %26, !dbg !13064
  %28 = getelementptr inbounds i8, i8* %17, i32 %27, !dbg !13065
  store i8* %28, i8** %1, align 4, !dbg !13066
  store i8* %17, i8** %2, align 4, !dbg !13067
  br label %29, !dbg !13068

29:                                               ; preds = %22, %4
  %30 = icmp slt i32 %0, 128, !dbg !13069
  br i1 %30, label %31, label %35, !dbg !13071

31:                                               ; preds = %29
  %32 = trunc i32 %0 to i8, !dbg !13072
  %33 = load i8*, i8** %1, align 4, !dbg !13074
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !13074
  store i8* %34, i8** %1, align 4, !dbg !13074
  store i8 %32, i8* %33, align 1, !dbg !13075
  br label %90, !dbg !13076

35:                                               ; preds = %29
  %36 = icmp ult i32 %0, 2048, !dbg !13077
  br i1 %36, label %37, label %48, !dbg !13079

37:                                               ; preds = %35
  %38 = lshr i32 %0, 6, !dbg !13080
  %39 = trunc i32 %38 to i8, !dbg !13082
  %40 = or i8 %39, -64, !dbg !13082
  %41 = load i8*, i8** %1, align 4, !dbg !13083
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !13083
  store i8* %42, i8** %1, align 4, !dbg !13083
  store i8 %40, i8* %41, align 1, !dbg !13084
  %43 = trunc i32 %0 to i8, !dbg !13085
  %44 = and i8 %43, 63, !dbg !13085
  %45 = or i8 %44, -128, !dbg !13085
  %46 = load i8*, i8** %1, align 4, !dbg !13086
  %47 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !13086
  store i8* %47, i8** %1, align 4, !dbg !13086
  store i8 %45, i8* %46, align 1, !dbg !13087
  br label %90, !dbg !13088

48:                                               ; preds = %35
  %49 = icmp ult i32 %0, 65536, !dbg !13089
  br i1 %49, label %50, label %67, !dbg !13091

50:                                               ; preds = %48
  %51 = lshr i32 %0, 12, !dbg !13092
  %52 = trunc i32 %51 to i8, !dbg !13094
  %53 = or i8 %52, -32, !dbg !13094
  %54 = load i8*, i8** %1, align 4, !dbg !13095
  %55 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !13095
  store i8* %55, i8** %1, align 4, !dbg !13095
  store i8 %53, i8* %54, align 1, !dbg !13096
  %56 = lshr i32 %0, 6, !dbg !13097
  %57 = trunc i32 %56 to i8, !dbg !13098
  %58 = and i8 %57, 63, !dbg !13098
  %59 = or i8 %58, -128, !dbg !13098
  %60 = load i8*, i8** %1, align 4, !dbg !13099
  %61 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !13099
  store i8* %61, i8** %1, align 4, !dbg !13099
  store i8 %59, i8* %60, align 1, !dbg !13100
  %62 = trunc i32 %0 to i8, !dbg !13101
  %63 = and i8 %62, 63, !dbg !13101
  %64 = or i8 %63, -128, !dbg !13101
  %65 = load i8*, i8** %1, align 4, !dbg !13102
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !13102
  store i8* %66, i8** %1, align 4, !dbg !13102
  store i8 %64, i8* %65, align 1, !dbg !13103
  br label %90, !dbg !13104

67:                                               ; preds = %48
  %68 = lshr i32 %0, 18, !dbg !13105
  %69 = trunc i32 %68 to i8, !dbg !13107
  %70 = or i8 %69, -16, !dbg !13107
  %71 = load i8*, i8** %1, align 4, !dbg !13108
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !13108
  store i8* %72, i8** %1, align 4, !dbg !13108
  store i8 %70, i8* %71, align 1, !dbg !13109
  %73 = lshr i32 %0, 12, !dbg !13110
  %74 = trunc i32 %73 to i8, !dbg !13111
  %75 = and i8 %74, 63, !dbg !13111
  %76 = or i8 %75, -128, !dbg !13111
  %77 = load i8*, i8** %1, align 4, !dbg !13112
  %78 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !13112
  store i8* %78, i8** %1, align 4, !dbg !13112
  store i8 %76, i8* %77, align 1, !dbg !13113
  %79 = lshr i32 %0, 6, !dbg !13114
  %80 = trunc i32 %79 to i8, !dbg !13115
  %81 = and i8 %80, 63, !dbg !13115
  %82 = or i8 %81, -128, !dbg !13115
  %83 = load i8*, i8** %1, align 4, !dbg !13116
  %84 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !13116
  store i8* %84, i8** %1, align 4, !dbg !13116
  store i8 %82, i8* %83, align 1, !dbg !13117
  %85 = trunc i32 %0 to i8, !dbg !13118
  %86 = and i8 %85, 63, !dbg !13118
  %87 = or i8 %86, -128, !dbg !13118
  %88 = load i8*, i8** %1, align 4, !dbg !13119
  %89 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !13119
  store i8* %89, i8** %1, align 4, !dbg !13119
  store i8 %87, i8* %88, align 1, !dbg !13120
  br label %90

90:                                               ; preds = %31, %50, %67, %37, %19
  %91 = phi i32 [ -1, %19 ], [ 0, %37 ], [ 0, %67 ], [ 0, %50 ], [ 0, %31 ], !dbg !13037
  ret i32 %91, !dbg !13121
}

; Function Attrs: optsize
declare dso_local i32 @strncmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_parse_element(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #0 !dbg !13122 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !13126, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8* %1, metadata !13127, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i32* %2, metadata !13128, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i32 (i8*, i32*)* @mxml_string_getc, metadata !13129, metadata !DIExpression()), !dbg !13138
  %9 = bitcast i8** %4 to i8*, !dbg !13139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17, !dbg !13139
  %10 = bitcast i8** %5 to i8*, !dbg !13139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #17, !dbg !13139
  %11 = bitcast i8** %6 to i8*, !dbg !13139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17, !dbg !13139
  %12 = bitcast i32* %7 to i8*, !dbg !13140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17, !dbg !13140
  %13 = bitcast i32* %8 to i8*, !dbg !13140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17, !dbg !13140
  %14 = tail call i8* @pvPortMalloc(i32 noundef 64) #18, !dbg !13141
  call void @llvm.dbg.value(metadata i8* %14, metadata !13132, metadata !DIExpression()), !dbg !13138
  store i8* %14, i8** %4, align 4, !dbg !13143
  %15 = icmp eq i8* %14, null, !dbg !13144
  br i1 %15, label %16, label %17, !dbg !13145

16:                                               ; preds = %3
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.37.251, i32 0, i32 0)) #18, !dbg !13146
  br label %169, !dbg !13148

17:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 64, metadata !13135, metadata !DIExpression()), !dbg !13138
  store i32 64, i32* %7, align 4, !dbg !13149
  %18 = tail call i8* @pvPortMalloc(i32 noundef 64) #18, !dbg !13150
  call void @llvm.dbg.value(metadata i8* %18, metadata !13133, metadata !DIExpression()), !dbg !13138
  store i8* %18, i8** %5, align 4, !dbg !13152
  %19 = icmp eq i8* %18, null, !dbg !13153
  br i1 %19, label %20, label %21, !dbg !13154

20:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i8* %14, metadata !13132, metadata !DIExpression()), !dbg !13138
  tail call void @vPortFree(i8* noundef nonnull %14) #18, !dbg !13155
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38.252, i32 0, i32 0)) #18, !dbg !13157
  br label %169, !dbg !13158

21:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 64, metadata !13136, metadata !DIExpression()), !dbg !13138
  store i32 64, i32* %8, align 4, !dbg !13159
  %22 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13160
  call void @llvm.dbg.value(metadata i32 %22, metadata !13130, metadata !DIExpression()), !dbg !13138
  %23 = icmp eq i32 %22, -1, !dbg !13161
  br i1 %23, label %162, label %24, !dbg !13162

24:                                               ; preds = %21, %30
  %25 = phi i8* [ %31, %30 ], [ %18, %21 ]
  %26 = phi i8* [ %32, %30 ], [ %14, %21 ]
  %27 = phi i32 [ %33, %30 ], [ %22, %21 ]
  %28 = call fastcc i32 @mxml_isspace(i32 noundef %27) #20, !dbg !13163
  %29 = icmp eq i32 %28, 0, !dbg !13163
  br i1 %29, label %35, label %30, !dbg !13166

30:                                               ; preds = %24, %160
  %31 = phi i8* [ %25, %24 ], [ %146, %160 ]
  %32 = phi i8* [ %26, %24 ], [ %83, %160 ]
  %33 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13160
  call void @llvm.dbg.value(metadata i32 %33, metadata !13130, metadata !DIExpression()), !dbg !13138
  %34 = icmp eq i32 %33, -1, !dbg !13161
  br i1 %34, label %162, label %24, !dbg !13162, !llvm.loop !13167

35:                                               ; preds = %24
  %36 = and i32 %27, -17, !dbg !13169
  %37 = icmp eq i32 %36, 47, !dbg !13169
  br i1 %37, label %38, label %45, !dbg !13169

38:                                               ; preds = %35
  %39 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13171
  call void @llvm.dbg.value(metadata i32 %39, metadata !13131, metadata !DIExpression()), !dbg !13138
  %40 = icmp eq i32 %39, 62, !dbg !13173
  br i1 %40, label %162, label %41, !dbg !13175

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13176
  %43 = bitcast %union.mxml_value_u* %42 to i8**, !dbg !13178
  %44 = load i8*, i8** %43, align 8, !dbg !13178
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.39.253, i32 0, i32 0), i32 noundef %27, i8* noundef %44, i32 noundef %39) #18, !dbg !13179
  br label %166, !dbg !13180

45:                                               ; preds = %35
  switch i32 %27, label %50 [
    i32 60, label %46
    i32 62, label %162
  ], !dbg !13181

46:                                               ; preds = %45
  %47 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13182
  %48 = bitcast %union.mxml_value_u* %47 to i8**, !dbg !13185
  %49 = load i8*, i8** %48, align 8, !dbg !13185
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40.254, i32 0, i32 0), i8* noundef %49) #18, !dbg !13186
  br label %166, !dbg !13187

50:                                               ; preds = %45
  %51 = trunc i32 %27 to i8, !dbg !13188
  call void @llvm.dbg.value(metadata i8* %26, metadata !13132, metadata !DIExpression()), !dbg !13138
  store i8 %51, i8* %26, align 1, !dbg !13189
  call void @llvm.dbg.value(metadata i8* %26, metadata !13132, metadata !DIExpression()), !dbg !13138
  %52 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !13190
  call void @llvm.dbg.value(metadata i8* %52, metadata !13134, metadata !DIExpression()), !dbg !13138
  store i8* %52, i8** %6, align 4, !dbg !13191
  switch i32 %27, label %65 [
    i32 39, label %53
    i32 34, label %53
  ], !dbg !13192

53:                                               ; preds = %50, %50
  br label %54, !dbg !13194

54:                                               ; preds = %53, %63
  %55 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13196
  call void @llvm.dbg.value(metadata i32 %55, metadata !13130, metadata !DIExpression()), !dbg !13138
  switch i32 %55, label %59 [
    i32 -1, label %80
    i32 38, label %56
  ], !dbg !13194

56:                                               ; preds = %54
  %57 = call fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32* noundef %2) #20, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %57, metadata !13130, metadata !DIExpression()), !dbg !13138
  %58 = icmp eq i32 %57, -1, !dbg !13201
  br i1 %58, label %166, label %59, !dbg !13202

59:                                               ; preds = %54, %56
  %60 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !13203
  call void @llvm.dbg.value(metadata i32 %60, metadata !13130, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %4, metadata !13132, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %6, metadata !13134, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i32* %7, metadata !13135, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  %61 = call fastcc i32 @mxml_add_char(i32 noundef %60, i8** noundef nonnull %6, i8** noundef nonnull %4, i32* noundef nonnull %7) #20, !dbg !13204
  %62 = icmp eq i32 %61, 0, !dbg !13204
  br i1 %62, label %63, label %166, !dbg !13206

63:                                               ; preds = %59
  %64 = icmp eq i32 %60, %27, !dbg !13207
  br i1 %64, label %80, label %54, !dbg !13209, !llvm.loop !13210

65:                                               ; preds = %50, %76
  %66 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %66, metadata !13130, metadata !DIExpression()), !dbg !13138
  %67 = icmp eq i32 %66, -1, !dbg !13214
  br i1 %67, label %80, label %68, !dbg !13215

68:                                               ; preds = %65
  %69 = call fastcc i32 @mxml_isspace(i32 noundef %66) #20, !dbg !13216
  %70 = freeze i32 %69
  %71 = icmp eq i32 %70, 0, !dbg !13216
  br i1 %71, label %72, label %80, !dbg !13218

72:                                               ; preds = %68
  switch i32 %66, label %76 [
    i32 63, label %80
    i32 62, label %80
    i32 61, label %80
    i32 47, label %80
    i32 38, label %73
  ], !dbg !13218

73:                                               ; preds = %72
  %74 = call fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32* noundef %2) #20, !dbg !13219
  call void @llvm.dbg.value(metadata i32 %74, metadata !13130, metadata !DIExpression()), !dbg !13138
  %75 = icmp eq i32 %74, -1, !dbg !13223
  br i1 %75, label %166, label %76, !dbg !13224

76:                                               ; preds = %72, %73
  %77 = phi i32 [ %74, %73 ], [ %66, %72 ], !dbg !13225
  call void @llvm.dbg.value(metadata i32 %77, metadata !13130, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %4, metadata !13132, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %6, metadata !13134, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i32* %7, metadata !13135, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  %78 = call fastcc i32 @mxml_add_char(i32 noundef %77, i8** noundef nonnull %6, i8** noundef nonnull %4, i32* noundef nonnull %7) #20, !dbg !13226
  %79 = icmp eq i32 %78, 0, !dbg !13226
  br i1 %79, label %65, label %166, !dbg !13228, !llvm.loop !13229

80:                                               ; preds = %54, %63, %72, %72, %72, %72, %68, %65
  %81 = phi i32 [ %66, %72 ], [ %66, %72 ], [ %66, %72 ], [ %66, %68 ], [ -1, %65 ], [ %66, %72 ], [ %55, %54 ], [ %27, %63 ], !dbg !13231
  call void @llvm.dbg.value(metadata i32 %81, metadata !13130, metadata !DIExpression()), !dbg !13138
  %82 = load i8*, i8** %6, align 4, !dbg !13232
  call void @llvm.dbg.value(metadata i8* %82, metadata !13134, metadata !DIExpression()), !dbg !13138
  store i8 0, i8* %82, align 1, !dbg !13233
  %83 = load i8*, i8** %4, align 4, !dbg !13234
  call void @llvm.dbg.value(metadata i8* %83, metadata !13132, metadata !DIExpression()), !dbg !13138
  %84 = call i8* @mxmlElementGetAttr(%struct.mxml_node_s* noundef %0, i8* noundef %83) #18, !dbg !13236
  %85 = icmp eq i8* %84, null, !dbg !13236
  br i1 %85, label %86, label %166, !dbg !13237

86:                                               ; preds = %80
  call void @llvm.dbg.value(metadata i32 %81, metadata !13130, metadata !DIExpression()), !dbg !13138
  %87 = icmp eq i32 %81, -1, !dbg !13238
  br i1 %87, label %149, label %88, !dbg !13238

88:                                               ; preds = %86, %92
  %89 = phi i32 [ %93, %92 ], [ %81, %86 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !13130, metadata !DIExpression()), !dbg !13138
  %90 = call fastcc i32 @mxml_isspace(i32 noundef %89) #20, !dbg !13239
  %91 = icmp eq i32 %90, 0, !dbg !13238
  br i1 %91, label %95, label %92, !dbg !13240

92:                                               ; preds = %88
  %93 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13241
  call void @llvm.dbg.value(metadata i32 %93, metadata !13130, metadata !DIExpression()), !dbg !13138
  %94 = icmp eq i32 %93, -1, !dbg !13238
  br i1 %94, label %149, label %88, !dbg !13238, !llvm.loop !13242

95:                                               ; preds = %88
  %96 = icmp eq i32 %89, 61, !dbg !13244
  br i1 %96, label %97, label %149, !dbg !13246

97:                                               ; preds = %95, %100
  %98 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13247
  call void @llvm.dbg.value(metadata i32 %98, metadata !13130, metadata !DIExpression()), !dbg !13138
  %99 = icmp eq i32 %98, -1, !dbg !13249
  br i1 %99, label %104, label %100, !dbg !13249

100:                                              ; preds = %97
  %101 = call fastcc i32 @mxml_isspace(i32 noundef %98) #20, !dbg !13250
  %102 = icmp eq i32 %101, 0, !dbg !13249
  br i1 %102, label %103, label %97, !dbg !13251, !llvm.loop !13252

103:                                              ; preds = %100
  switch i32 %98, label %124 [
    i32 34, label %108
    i32 39, label %108
  ], !dbg !13254

104:                                              ; preds = %97
  call void @llvm.dbg.value(metadata i8* %83, metadata !13132, metadata !DIExpression()), !dbg !13138
  %105 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13255
  %106 = bitcast %union.mxml_value_u* %105 to i8**, !dbg !13258
  %107 = load i8*, i8** %106, align 8, !dbg !13258
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.41.255, i32 0, i32 0), i8* noundef %83, i8* noundef %107) #18, !dbg !13259
  br label %166, !dbg !13260

108:                                              ; preds = %103, %103
  call void @llvm.dbg.value(metadata i32 %98, metadata !13131, metadata !DIExpression()), !dbg !13138
  %109 = load i8*, i8** %5, align 4, !dbg !13261
  call void @llvm.dbg.value(metadata i8* %109, metadata !13133, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8* %109, metadata !13134, metadata !DIExpression()), !dbg !13138
  store i8* %109, i8** %6, align 4, !dbg !13264
  br label %110, !dbg !13265

110:                                              ; preds = %120, %108
  %111 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13266
  call void @llvm.dbg.value(metadata i32 %111, metadata !13130, metadata !DIExpression()), !dbg !13138
  %112 = icmp eq i32 %111, -1, !dbg !13267
  %113 = icmp eq i32 %111, %98
  %114 = select i1 %112, i1 true, i1 %113, !dbg !13265
  br i1 %114, label %143, label %115, !dbg !13265

115:                                              ; preds = %110
  %116 = icmp eq i32 %111, 38, !dbg !13268
  br i1 %116, label %117, label %120, !dbg !13272

117:                                              ; preds = %115
  %118 = call fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32* noundef %2) #20, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %118, metadata !13130, metadata !DIExpression()), !dbg !13138
  %119 = icmp eq i32 %118, -1, !dbg !13275
  br i1 %119, label %166, label %120, !dbg !13276

120:                                              ; preds = %117, %115
  %121 = phi i32 [ %118, %117 ], [ %111, %115 ], !dbg !13277
  call void @llvm.dbg.value(metadata i32 %121, metadata !13130, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %5, metadata !13133, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %6, metadata !13134, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i32* %8, metadata !13136, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  %122 = call fastcc i32 @mxml_add_char(i32 noundef %121, i8** noundef nonnull %6, i8** noundef nonnull %5, i32* noundef nonnull %8) #20, !dbg !13278
  %123 = icmp eq i32 %122, 0, !dbg !13278
  br i1 %123, label %110, label %166, !dbg !13280, !llvm.loop !13281

124:                                              ; preds = %103
  %125 = trunc i32 %98 to i8, !dbg !13283
  %126 = load i8*, i8** %5, align 4, !dbg !13285
  call void @llvm.dbg.value(metadata i8* %126, metadata !13133, metadata !DIExpression()), !dbg !13138
  store i8 %125, i8* %126, align 1, !dbg !13286
  %127 = getelementptr inbounds i8, i8* %126, i32 1, !dbg !13287
  call void @llvm.dbg.value(metadata i8* %127, metadata !13134, metadata !DIExpression()), !dbg !13138
  store i8* %127, i8** %6, align 4, !dbg !13288
  br label %128, !dbg !13289

128:                                              ; preds = %139, %124
  %129 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %129, metadata !13130, metadata !DIExpression()), !dbg !13138
  %130 = icmp eq i32 %129, -1, !dbg !13291
  br i1 %130, label %143, label %131, !dbg !13289

131:                                              ; preds = %128
  %132 = call fastcc i32 @mxml_isspace(i32 noundef %129) #20, !dbg !13292
  %133 = freeze i32 %132
  %134 = icmp eq i32 %133, 0, !dbg !13292
  br i1 %134, label %135, label %143, !dbg !13294

135:                                              ; preds = %131
  switch i32 %129, label %139 [
    i32 62, label %143
    i32 61, label %143
    i32 47, label %143
    i32 38, label %136
  ], !dbg !13294

136:                                              ; preds = %135
  %137 = call fastcc i32 @mxml_get_entity(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32* noundef %2) #20, !dbg !13295
  call void @llvm.dbg.value(metadata i32 %137, metadata !13130, metadata !DIExpression()), !dbg !13138
  %138 = icmp eq i32 %137, -1, !dbg !13299
  br i1 %138, label %166, label %139, !dbg !13300

139:                                              ; preds = %135, %136
  %140 = phi i32 [ %137, %136 ], [ %129, %135 ], !dbg !13301
  call void @llvm.dbg.value(metadata i32 %140, metadata !13130, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %5, metadata !13133, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i8** %6, metadata !13134, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  call void @llvm.dbg.value(metadata i32* %8, metadata !13136, metadata !DIExpression(DW_OP_deref)), !dbg !13138
  %141 = call fastcc i32 @mxml_add_char(i32 noundef %140, i8** noundef nonnull %6, i8** noundef nonnull %5, i32* noundef nonnull %8) #20, !dbg !13302
  %142 = icmp eq i32 %141, 0, !dbg !13302
  br i1 %142, label %128, label %166, !dbg !13304, !llvm.loop !13305

143:                                              ; preds = %110, %128, %131, %135, %135, %135
  %144 = phi i32 [ %129, %135 ], [ %129, %135 ], [ %129, %135 ], [ %129, %131 ], [ %129, %128 ], [ %111, %110 ], !dbg !13307
  %145 = load i8*, i8** %6, align 4, !dbg !13307
  store i8 0, i8* %145, align 1, !dbg !13307
  call void @llvm.dbg.value(metadata i32 %144, metadata !13130, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8* %83, metadata !13132, metadata !DIExpression()), !dbg !13138
  %146 = load i8*, i8** %5, align 4, !dbg !13308
  call void @llvm.dbg.value(metadata i8* %146, metadata !13133, metadata !DIExpression()), !dbg !13138
  call void @mxmlElementSetAttr(%struct.mxml_node_s* noundef %0, i8* noundef %83, i8* noundef %146) #18, !dbg !13309
  %147 = and i32 %144, -17, !dbg !13310
  %148 = icmp eq i32 %147, 47, !dbg !13310
  br i1 %148, label %153, label %160, !dbg !13310

149:                                              ; preds = %95, %86, %92
  call void @llvm.dbg.value(metadata i8* %83, metadata !13132, metadata !DIExpression()), !dbg !13138
  %150 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13312
  %151 = bitcast %union.mxml_value_u* %150 to i8**, !dbg !13314
  %152 = load i8*, i8** %151, align 8, !dbg !13314
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.41.255, i32 0, i32 0), i8* noundef %83, i8* noundef %152) #18, !dbg !13315
  br label %166, !dbg !13316

153:                                              ; preds = %143
  %154 = call fastcc i32 @mxml_string_getc(i8* noundef %1, i32* noundef %2) #20, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %154, metadata !13131, metadata !DIExpression()), !dbg !13138
  %155 = icmp eq i32 %154, 62, !dbg !13319
  br i1 %155, label %162, label %156, !dbg !13321

156:                                              ; preds = %153
  %157 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13322
  %158 = bitcast %union.mxml_value_u* %157 to i8**, !dbg !13324
  %159 = load i8*, i8** %158, align 8, !dbg !13324
  call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.39.253, i32 0, i32 0), i32 noundef %144, i8* noundef %159, i32 noundef %154) #18, !dbg !13325
  call void @llvm.dbg.value(metadata i32 -1, metadata !13130, metadata !DIExpression()), !dbg !13138
  br label %162, !dbg !13326

160:                                              ; preds = %143
  %161 = icmp eq i32 %144, 62, !dbg !13327
  br i1 %161, label %162, label %30, !dbg !13329

162:                                              ; preds = %30, %160, %45, %21, %153, %156, %38
  %163 = phi i8* [ %25, %38 ], [ %146, %156 ], [ %146, %153 ], [ %18, %21 ], [ %31, %30 ], [ %146, %160 ], [ %25, %45 ], !dbg !13330
  %164 = phi i8* [ %26, %38 ], [ %83, %156 ], [ %83, %153 ], [ %14, %21 ], [ %32, %30 ], [ %83, %160 ], [ %26, %45 ], !dbg !13331
  %165 = phi i32 [ %27, %38 ], [ -1, %156 ], [ %144, %153 ], [ -1, %21 ], [ -1, %30 ], [ 62, %160 ], [ %27, %45 ], !dbg !13138
  call void @llvm.dbg.value(metadata i32 %165, metadata !13130, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8* %164, metadata !13132, metadata !DIExpression()), !dbg !13138
  call void @vPortFree(i8* noundef %164) #18, !dbg !13332
  call void @llvm.dbg.value(metadata i8* %163, metadata !13133, metadata !DIExpression()), !dbg !13138
  call void @vPortFree(i8* noundef %163) #18, !dbg !13333
  br label %169, !dbg !13334

166:                                              ; preds = %80, %59, %56, %76, %73, %120, %117, %139, %136, %149, %104, %46, %41
  call void @llvm.dbg.label(metadata !13137), !dbg !13335
  %167 = load i8*, i8** %4, align 4, !dbg !13336
  call void @llvm.dbg.value(metadata i8* %167, metadata !13132, metadata !DIExpression()), !dbg !13138
  call void @vPortFree(i8* noundef %167) #18, !dbg !13337
  %168 = load i8*, i8** %5, align 4, !dbg !13338
  call void @llvm.dbg.value(metadata i8* %168, metadata !13133, metadata !DIExpression()), !dbg !13138
  call void @vPortFree(i8* noundef %168) #18, !dbg !13339
  br label %169, !dbg !13340

169:                                              ; preds = %166, %162, %20, %16
  %170 = phi i32 [ -1, %16 ], [ -1, %20 ], [ -1, %166 ], [ %165, %162 ], !dbg !13138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17, !dbg !13341
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17, !dbg !13341
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17, !dbg !13341
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #17, !dbg !13341
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17, !dbg !13341
  ret i32 %170, !dbg !13341
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @mxmlSaveAllocString(%struct.mxml_node_s* noundef %0, i8* (%struct.mxml_node_s*, i32)* noundef %1) local_unnamed_addr #0 !dbg !13342 {
  %3 = alloca [8192 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !13350, metadata !DIExpression()), !dbg !13358
  call void @llvm.dbg.value(metadata i8* (%struct.mxml_node_s*, i32)* %1, metadata !13351, metadata !DIExpression()), !dbg !13358
  %4 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i32 0, i32 0, !dbg !13359
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %4) #17, !dbg !13359
  call void @llvm.dbg.declare(metadata [8192 x i8]* %3, metadata !13353, metadata !DIExpression()), !dbg !13360
  %5 = call i32 @mxmlSaveString(%struct.mxml_node_s* noundef %0, i8* noundef nonnull %4, i32 noundef 8192, i8* (%struct.mxml_node_s*, i32)* noundef %1) #20, !dbg !13361
  call void @llvm.dbg.value(metadata i32 %5, metadata !13352, metadata !DIExpression()), !dbg !13358
  %6 = icmp slt i32 %5, 1, !dbg !13362
  br i1 %6, label %17, label %7, !dbg !13364

7:                                                ; preds = %2
  %8 = icmp ult i32 %5, 8191, !dbg !13365
  br i1 %8, label %9, label %11, !dbg !13367

9:                                                ; preds = %7
  %10 = call i8* @_mxml_strdup(i8* noundef nonnull %4) #18, !dbg !13368
  br label %17, !dbg !13370

11:                                               ; preds = %7
  %12 = add nuw nsw i32 %5, 1, !dbg !13371
  %13 = call i8* @pvPortMalloc(i32 noundef %12) #18, !dbg !13373
  call void @llvm.dbg.value(metadata i8* %13, metadata !13357, metadata !DIExpression()), !dbg !13358
  %14 = icmp eq i8* %13, null, !dbg !13374
  br i1 %14, label %17, label %15, !dbg !13375

15:                                               ; preds = %11
  %16 = call i32 @mxmlSaveString(%struct.mxml_node_s* noundef %0, i8* noundef nonnull %13, i32 noundef %12, i8* (%struct.mxml_node_s*, i32)* noundef %1) #20, !dbg !13376
  br label %17, !dbg !13377

17:                                               ; preds = %11, %2, %15, %9
  %18 = phi i8* [ %10, %9 ], [ %13, %15 ], [ null, %2 ], [ null, %11 ], !dbg !13358
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %4) #17, !dbg !13378
  ret i8* %18, !dbg !13378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @mxmlSaveString(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32 noundef %2, i8* (%struct.mxml_node_s*, i32)* noundef %3) local_unnamed_addr #0 !dbg !13379 {
  %5 = alloca [2 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !13383, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i8* %1, metadata !13384, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 %2, metadata !13385, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i8* (%struct.mxml_node_s*, i32)* %3, metadata !13386, metadata !DIExpression()), !dbg !13391
  %6 = bitcast [2 x i8*]* %5 to i8*, !dbg !13392
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17, !dbg !13392
  call void @llvm.dbg.declare(metadata [2 x i8*]* %5, metadata !13388, metadata !DIExpression()), !dbg !13393
  %7 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !13394
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %7, metadata !13390, metadata !DIExpression()), !dbg !13391
  %8 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i32 0, i32 0, !dbg !13395
  store i8* %1, i8** %8, align 4, !dbg !13396
  %9 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !13397
  %10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i32 0, i32 1, !dbg !13398
  store i8* %9, i8** %10, align 4, !dbg !13399
  %11 = call fastcc i32 @mxml_write_node(%struct.mxml_node_s* noundef %0, i8* noundef nonnull %6, i8* (%struct.mxml_node_s*, i32)* noundef %3, i32 noundef 0, %struct._mxml_global_s* noundef %7) #20, !dbg !13400
  call void @llvm.dbg.value(metadata i32 %11, metadata !13387, metadata !DIExpression()), !dbg !13391
  %12 = icmp slt i32 %11, 0, !dbg !13402
  br i1 %12, label %31, label %13, !dbg !13403

13:                                               ; preds = %4
  %14 = icmp eq i32 %11, 0, !dbg !13404
  br i1 %14, label %17, label %15, !dbg !13406

15:                                               ; preds = %13
  %16 = call fastcc i32 @mxml_string_putc(i32 noundef 10, i8* noundef nonnull %6) #20, !dbg !13407
  br label %17, !dbg !13407

17:                                               ; preds = %15, %13
  %18 = load i8*, i8** %8, align 4, !dbg !13408
  %19 = load i8*, i8** %10, align 4, !dbg !13410
  %20 = icmp ult i8* %18, %19, !dbg !13411
  br i1 %20, label %24, label %21, !dbg !13412

21:                                               ; preds = %17
  %22 = add nsw i32 %2, -1, !dbg !13413
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !13414
  store i8 0, i8* %23, align 1, !dbg !13415
  br label %26, !dbg !13414

24:                                               ; preds = %17
  store i8 0, i8* %18, align 1, !dbg !13416
  %25 = load i8*, i8** %8, align 4, !dbg !13417
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi i8* [ %25, %24 ], [ %18, %21 ], !dbg !13417
  %28 = ptrtoint i8* %27 to i32, !dbg !13418
  %29 = ptrtoint i8* %1 to i32, !dbg !13418
  %30 = sub i32 %28, %29, !dbg !13418
  br label %31, !dbg !13419

31:                                               ; preds = %4, %26
  %32 = phi i32 [ %30, %26 ], [ -1, %4 ], !dbg !13391
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17, !dbg !13420
  ret i32 %32, !dbg !13420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_write_node(%struct.mxml_node_s* noundef %0, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef %3, %struct._mxml_global_s* nocapture noundef readonly %4) unnamed_addr #0 !dbg !13421 {
  %6 = alloca [255 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !13429, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i8* %1, metadata !13430, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i8* (%struct.mxml_node_s*, i32)* %2, metadata !13431, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i32 %3, metadata !13432, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i32 (i32, i8*)* @mxml_string_putc, metadata !13433, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %4, metadata !13434, metadata !DIExpression()), !dbg !13453
  %7 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i32 0, i32 0, !dbg !13454
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %7) #17, !dbg !13454
  call void @llvm.dbg.declare(metadata [255 x i8]* %6, metadata !13438, metadata !DIExpression()), !dbg !13455
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !13456
  %9 = load i32, i32* %8, align 8, !dbg !13456
  switch i32 %9, label %300 [
    i32 0, label %10
    i32 1, label %181
    i32 2, label %210
    i32 3, label %220
    i32 4, label %248
    i32 5, label %280
  ], !dbg !13457

10:                                               ; preds = %5
  %11 = tail call fastcc i32 @mxml_write_ws(%struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef 0, i32 noundef %3) #20, !dbg !13458
  call void @llvm.dbg.value(metadata i32 %11, metadata !13432, metadata !DIExpression()), !dbg !13453
  %12 = tail call fastcc i32 @mxml_string_putc(i32 noundef 60, i8* noundef %1) #20, !dbg !13459
  %13 = icmp slt i32 %12, 0, !dbg !13461
  br i1 %13, label %300, label %14, !dbg !13462

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13463
  %16 = bitcast %union.mxml_value_u* %15 to %struct.mxml_element_s*, !dbg !13464
  %17 = bitcast %union.mxml_value_u* %15 to i8**, !dbg !13465
  %18 = load i8*, i8** %17, align 8, !dbg !13465
  %19 = load i8, i8* %18, align 1, !dbg !13466
  %20 = icmp eq i8 %19, 63, !dbg !13467
  br i1 %20, label %28, label %21, !dbg !13468

21:                                               ; preds = %14
  %22 = tail call i32 @strncmp(i8* noundef nonnull %18, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 3) #18, !dbg !13469
  %23 = icmp eq i32 %22, 0, !dbg !13469
  br i1 %23, label %28, label %24, !dbg !13470

24:                                               ; preds = %21
  %25 = load i8*, i8** %17, align 8, !dbg !13471
  %26 = tail call i32 @strncmp(i8* noundef %25, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.235, i32 0, i32 0), i32 noundef 8) #18, !dbg !13472
  %27 = icmp eq i32 %26, 0, !dbg !13472
  br i1 %27, label %28, label %42, !dbg !13473

28:                                               ; preds = %24, %21, %14
  %29 = load i8*, i8** %17, align 8, !dbg !13474
  call void @llvm.dbg.value(metadata i8* %29, metadata !13442, metadata !DIExpression()), !dbg !13476
  %30 = load i8, i8* %29, align 1, !dbg !13477
  %31 = icmp eq i8 %30, 0, !dbg !13479
  br i1 %31, label %46, label %35, !dbg !13479

32:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8* %41, metadata !13442, metadata !DIExpression()), !dbg !13476
  %33 = load i8, i8* %41, align 1, !dbg !13477
  %34 = icmp eq i8 %33, 0, !dbg !13479
  br i1 %34, label %46, label %35, !dbg !13479, !llvm.loop !13480

35:                                               ; preds = %28, %32
  %36 = phi i8 [ %33, %32 ], [ %30, %28 ]
  %37 = phi i8* [ %41, %32 ], [ %29, %28 ]
  call void @llvm.dbg.value(metadata i8* %37, metadata !13442, metadata !DIExpression()), !dbg !13476
  %38 = zext i8 %36 to i32, !dbg !13482
  %39 = tail call fastcc i32 @mxml_string_putc(i32 noundef %38, i8* noundef %1) #20, !dbg !13484
  %40 = icmp slt i32 %39, 0, !dbg !13485
  %41 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !13486
  call void @llvm.dbg.value(metadata i8* %41, metadata !13442, metadata !DIExpression()), !dbg !13476
  br i1 %40, label %300, label %32, !dbg !13487

42:                                               ; preds = %24
  %43 = load i8*, i8** %17, align 8, !dbg !13488
  %44 = tail call fastcc i32 @mxml_write_name(i8* noundef %43, i8* noundef %1) #20, !dbg !13490
  %45 = icmp slt i32 %44, 0, !dbg !13491
  br i1 %45, label %300, label %46, !dbg !13492

46:                                               ; preds = %32, %28, %42
  %47 = load i8*, i8** %17, align 8, !dbg !13493
  %48 = tail call i32 @strlen(i8* noundef %47) #18, !dbg !13494
  %49 = add i32 %11, 1, !dbg !13495
  %50 = add i32 %49, %48, !dbg !13496
  call void @llvm.dbg.value(metadata i32 %50, metadata !13432, metadata !DIExpression()), !dbg !13453
  %51 = getelementptr inbounds %struct.mxml_element_s, %struct.mxml_element_s* %16, i32 0, i32 1, !dbg !13497
  %52 = load i32, i32* %51, align 4, !dbg !13497
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* undef, metadata !13437, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i32 %52, metadata !13435, metadata !DIExpression()), !dbg !13453
  %53 = icmp sgt i32 %52, 0, !dbg !13499
  br i1 %53, label %54, label %114, !dbg !13501

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, i32 1, !dbg !13502
  %56 = bitcast [8 x i8]* %55 to %struct.QUEUE_REGISTRY_ITEM**, !dbg !13502
  %57 = load %struct.QUEUE_REGISTRY_ITEM*, %struct.QUEUE_REGISTRY_ITEM** %56, align 8, !dbg !13502
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %57, metadata !13437, metadata !DIExpression()), !dbg !13453
  %58 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %4, i32 0, i32 3
  br label %59, !dbg !13501

59:                                               ; preds = %54, %109
  %60 = phi i32 [ %50, %54 ], [ %110, %109 ]
  %61 = phi %struct.QUEUE_REGISTRY_ITEM* [ %57, %54 ], [ %112, %109 ]
  %62 = phi i32 [ %52, %54 ], [ %111, %109 ]
  call void @llvm.dbg.value(metadata i32 %60, metadata !13432, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %61, metadata !13437, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata i32 %62, metadata !13435, metadata !DIExpression()), !dbg !13453
  %63 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %61, i32 0, i32 0, !dbg !13503
  %64 = load i8*, i8** %63, align 4, !dbg !13503
  %65 = tail call i32 @strlen(i8* noundef %64) #18, !dbg !13505
  call void @llvm.dbg.value(metadata i32 %65, metadata !13436, metadata !DIExpression()), !dbg !13453
  %66 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %61, i32 0, i32 1, !dbg !13506
  %67 = load i8*, i8** %66, align 4, !dbg !13506
  %68 = icmp eq i8* %67, null, !dbg !13508
  br i1 %68, label %73, label %69, !dbg !13509

69:                                               ; preds = %59
  %70 = tail call i32 @strlen(i8* noundef nonnull %67) #18, !dbg !13510
  %71 = add i32 %65, 3, !dbg !13511
  %72 = add i32 %71, %70, !dbg !13512
  call void @llvm.dbg.value(metadata i32 %72, metadata !13436, metadata !DIExpression()), !dbg !13453
  br label %73, !dbg !13513

73:                                               ; preds = %69, %59
  %74 = phi i32 [ %72, %69 ], [ %65, %59 ], !dbg !13514
  call void @llvm.dbg.value(metadata i32 %74, metadata !13436, metadata !DIExpression()), !dbg !13453
  %75 = load i32, i32* %58, align 4, !dbg !13515
  %76 = icmp sgt i32 %75, 0, !dbg !13517
  %77 = add nsw i32 %74, %60
  %78 = icmp sgt i32 %77, %75
  %79 = select i1 %76, i1 %78, i1 false, !dbg !13518
  br i1 %79, label %80, label %83, !dbg !13518

80:                                               ; preds = %73
  %81 = tail call fastcc i32 @mxml_string_putc(i32 noundef 10, i8* noundef %1) #20, !dbg !13519
  %82 = icmp slt i32 %81, 0, !dbg !13522
  br i1 %82, label %300, label %88, !dbg !13523

83:                                               ; preds = %73
  %84 = tail call fastcc i32 @mxml_string_putc(i32 noundef 32, i8* noundef %1) #20, !dbg !13524
  %85 = icmp slt i32 %84, 0, !dbg !13527
  br i1 %85, label %300, label %86, !dbg !13528

86:                                               ; preds = %83
  %87 = add nsw i32 %60, 1, !dbg !13529
  call void @llvm.dbg.value(metadata i32 %87, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %88

88:                                               ; preds = %80, %86
  %89 = phi i32 [ %87, %86 ], [ 0, %80 ], !dbg !13530
  call void @llvm.dbg.value(metadata i32 %89, metadata !13432, metadata !DIExpression()), !dbg !13453
  %90 = load i8*, i8** %63, align 4, !dbg !13531
  %91 = tail call fastcc i32 @mxml_write_name(i8* noundef %90, i8* noundef %1) #20, !dbg !13533
  %92 = icmp slt i32 %91, 0, !dbg !13534
  br i1 %92, label %300, label %93, !dbg !13535

93:                                               ; preds = %88
  %94 = load i8*, i8** %66, align 4, !dbg !13536
  %95 = icmp eq i8* %94, null, !dbg !13538
  br i1 %95, label %109, label %96, !dbg !13539

96:                                               ; preds = %93
  %97 = tail call fastcc i32 @mxml_string_putc(i32 noundef 61, i8* noundef %1) #20, !dbg !13540
  %98 = icmp slt i32 %97, 0, !dbg !13543
  br i1 %98, label %300, label %99, !dbg !13544

99:                                               ; preds = %96
  %100 = tail call fastcc i32 @mxml_string_putc(i32 noundef 34, i8* noundef %1) #20, !dbg !13545
  %101 = icmp slt i32 %100, 0, !dbg !13547
  br i1 %101, label %300, label %102, !dbg !13548

102:                                              ; preds = %99
  %103 = load i8*, i8** %66, align 4, !dbg !13549
  %104 = tail call fastcc i32 @mxml_write_string(i8* noundef %103, i8* noundef %1) #20, !dbg !13551
  %105 = icmp slt i32 %104, 0, !dbg !13552
  br i1 %105, label %300, label %106, !dbg !13553

106:                                              ; preds = %102
  %107 = tail call fastcc i32 @mxml_string_putc(i32 noundef 34, i8* noundef %1) #20, !dbg !13554
  %108 = icmp slt i32 %107, 0, !dbg !13556
  br i1 %108, label %300, label %109, !dbg !13557

109:                                              ; preds = %106, %93
  %110 = add nsw i32 %89, %74, !dbg !13558
  call void @llvm.dbg.value(metadata i32 %110, metadata !13432, metadata !DIExpression()), !dbg !13453
  %111 = add nsw i32 %62, -1, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %111, metadata !13435, metadata !DIExpression()), !dbg !13453
  %112 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %61, i32 1, !dbg !13560
  call void @llvm.dbg.value(metadata %struct.QUEUE_REGISTRY_ITEM* %112, metadata !13437, metadata !DIExpression()), !dbg !13453
  %113 = icmp sgt i32 %62, 1, !dbg !13499
  br i1 %113, label %59, label %114, !dbg !13501, !llvm.loop !13561

114:                                              ; preds = %109, %46
  %115 = phi i32 [ %50, %46 ], [ %110, %109 ], !dbg !13563
  %116 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !13564
  %117 = load %struct.mxml_node_s*, %struct.mxml_node_s** %116, align 8, !dbg !13564
  %118 = icmp eq %struct.mxml_node_s* %117, null, !dbg !13565
  br i1 %118, label %160, label %119, !dbg !13566

119:                                              ; preds = %114
  %120 = tail call fastcc i32 @mxml_string_putc(i32 noundef 62, i8* noundef %1) #20, !dbg !13567
  %121 = icmp slt i32 %120, 0, !dbg !13569
  br i1 %121, label %300, label %122, !dbg !13570

122:                                              ; preds = %119
  %123 = add nsw i32 %115, 1, !dbg !13571
  call void @llvm.dbg.value(metadata i32 %123, metadata !13432, metadata !DIExpression()), !dbg !13453
  %124 = tail call fastcc i32 @mxml_write_ws(%struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef 1, i32 noundef %123) #20, !dbg !13572
  call void @llvm.dbg.value(metadata i32 %124, metadata !13432, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* undef, metadata !13446, metadata !DIExpression()), !dbg !13573
  %125 = load %struct.mxml_node_s*, %struct.mxml_node_s** %116, align 4, !dbg !13574
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %125, metadata !13446, metadata !DIExpression()), !dbg !13573
  %126 = icmp eq %struct.mxml_node_s* %125, null, !dbg !13576
  br i1 %126, label %136, label %131, !dbg !13576

127:                                              ; preds = %131
  %128 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %132, i32 0, i32 1, !dbg !13577
  %129 = load %struct.mxml_node_s*, %struct.mxml_node_s** %128, align 4, !dbg !13574
  call void @llvm.dbg.value(metadata i32 %134, metadata !13432, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %129, metadata !13446, metadata !DIExpression()), !dbg !13573
  %130 = icmp eq %struct.mxml_node_s* %129, null, !dbg !13576
  br i1 %130, label %136, label %131, !dbg !13576, !llvm.loop !13579

131:                                              ; preds = %122, %127
  %132 = phi %struct.mxml_node_s* [ %129, %127 ], [ %125, %122 ]
  %133 = phi i32 [ %134, %127 ], [ %124, %122 ]
  call void @llvm.dbg.value(metadata i32 %133, metadata !13432, metadata !DIExpression()), !dbg !13453
  %134 = tail call fastcc i32 @mxml_write_node(%struct.mxml_node_s* noundef nonnull %132, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef %133, %struct._mxml_global_s* noundef %4) #20, !dbg !13581
  call void @llvm.dbg.value(metadata i32 %134, metadata !13432, metadata !DIExpression()), !dbg !13453
  %135 = icmp slt i32 %134, 0, !dbg !13584
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* undef, metadata !13446, metadata !DIExpression()), !dbg !13573
  br i1 %135, label %300, label %127, !dbg !13585

136:                                              ; preds = %127, %122
  %137 = phi i32 [ %124, %122 ], [ %134, %127 ], !dbg !13573
  %138 = load i8*, i8** %17, align 8, !dbg !13586
  %139 = load i8, i8* %138, align 1, !dbg !13588
  switch i8 %139, label %140 [
    i8 33, label %300
    i8 63, label %300
  ], !dbg !13589

140:                                              ; preds = %136
  %141 = tail call fastcc i32 @mxml_write_ws(%struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef 2, i32 noundef %137) #20, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %141, metadata !13432, metadata !DIExpression()), !dbg !13453
  %142 = tail call fastcc i32 @mxml_string_putc(i32 noundef 60, i8* noundef %1) #20, !dbg !13592
  %143 = icmp slt i32 %142, 0, !dbg !13594
  br i1 %143, label %300, label %144, !dbg !13595

144:                                              ; preds = %140
  %145 = tail call fastcc i32 @mxml_string_putc(i32 noundef 47, i8* noundef %1) #20, !dbg !13596
  %146 = icmp slt i32 %145, 0, !dbg !13598
  br i1 %146, label %300, label %147, !dbg !13599

147:                                              ; preds = %144
  %148 = load i8*, i8** %17, align 8, !dbg !13600
  %149 = tail call fastcc i32 @mxml_write_string(i8* noundef %148, i8* noundef %1) #20, !dbg !13602
  %150 = icmp slt i32 %149, 0, !dbg !13603
  br i1 %150, label %300, label %151, !dbg !13604

151:                                              ; preds = %147
  %152 = tail call fastcc i32 @mxml_string_putc(i32 noundef 62, i8* noundef %1) #20, !dbg !13605
  %153 = icmp slt i32 %152, 0, !dbg !13607
  br i1 %153, label %300, label %154, !dbg !13608

154:                                              ; preds = %151
  %155 = load i8*, i8** %17, align 8, !dbg !13609
  %156 = tail call i32 @strlen(i8* noundef %155) #18, !dbg !13610
  %157 = add i32 %141, 3, !dbg !13611
  %158 = add i32 %157, %156, !dbg !13612
  call void @llvm.dbg.value(metadata i32 %158, metadata !13432, metadata !DIExpression()), !dbg !13453
  %159 = tail call fastcc i32 @mxml_write_ws(%struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef 3, i32 noundef %158) #20, !dbg !13613
  call void @llvm.dbg.value(metadata i32 %159, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %300, !dbg !13614

160:                                              ; preds = %114
  %161 = load i8*, i8** %17, align 8, !dbg !13615
  %162 = load i8, i8* %161, align 1, !dbg !13617
  switch i8 %162, label %169 [
    i8 33, label %163
    i8 63, label %163
  ], !dbg !13618

163:                                              ; preds = %160, %160
  %164 = tail call fastcc i32 @mxml_string_putc(i32 noundef 62, i8* noundef %1) #20, !dbg !13619
  %165 = icmp slt i32 %164, 0, !dbg !13622
  br i1 %165, label %300, label %166, !dbg !13623

166:                                              ; preds = %163
  %167 = add nsw i32 %115, 1, !dbg !13624
  call void @llvm.dbg.value(metadata i32 %167, metadata !13432, metadata !DIExpression()), !dbg !13453
  %168 = tail call fastcc i32 @mxml_write_ws(%struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef 1, i32 noundef %167) #20, !dbg !13625
  call void @llvm.dbg.value(metadata i32 %168, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %300, !dbg !13626

169:                                              ; preds = %160
  %170 = tail call fastcc i32 @mxml_string_putc(i32 noundef 32, i8* noundef %1) #20, !dbg !13627
  %171 = icmp slt i32 %170, 0, !dbg !13630
  br i1 %171, label %300, label %172, !dbg !13631

172:                                              ; preds = %169
  %173 = tail call fastcc i32 @mxml_string_putc(i32 noundef 47, i8* noundef %1) #20, !dbg !13632
  %174 = icmp slt i32 %173, 0, !dbg !13634
  br i1 %174, label %300, label %175, !dbg !13635

175:                                              ; preds = %172
  %176 = tail call fastcc i32 @mxml_string_putc(i32 noundef 62, i8* noundef %1) #20, !dbg !13636
  %177 = icmp slt i32 %176, 0, !dbg !13638
  br i1 %177, label %300, label %178, !dbg !13639

178:                                              ; preds = %175
  %179 = add nsw i32 %115, 3, !dbg !13640
  call void @llvm.dbg.value(metadata i32 %179, metadata !13432, metadata !DIExpression()), !dbg !13453
  %180 = tail call fastcc i32 @mxml_write_ws(%struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef %2, i32 noundef 1, i32 noundef %179) #20, !dbg !13641
  call void @llvm.dbg.value(metadata i32 %180, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %300

181:                                              ; preds = %5
  %182 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 2, !dbg !13642
  %183 = load %struct.mxml_node_s*, %struct.mxml_node_s** %182, align 8, !dbg !13642
  %184 = icmp eq %struct.mxml_node_s* %183, null, !dbg !13644
  br i1 %184, label %199, label %185, !dbg !13645

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %4, i32 0, i32 3, !dbg !13646
  %187 = load i32, i32* %186, align 4, !dbg !13646
  %188 = icmp sgt i32 %187, 0, !dbg !13649
  %189 = icmp slt i32 %187, %3
  %190 = and i1 %188, %189, !dbg !13650
  br i1 %190, label %191, label %194, !dbg !13650

191:                                              ; preds = %185
  %192 = tail call fastcc i32 @mxml_string_putc(i32 noundef 10, i8* noundef %1) #20, !dbg !13651
  %193 = icmp slt i32 %192, 0, !dbg !13654
  br i1 %193, label %300, label %199, !dbg !13655

194:                                              ; preds = %185
  %195 = tail call fastcc i32 @mxml_string_putc(i32 noundef 32, i8* noundef %1) #20, !dbg !13656
  %196 = icmp slt i32 %195, 0, !dbg !13658
  br i1 %196, label %300, label %197, !dbg !13659

197:                                              ; preds = %194
  %198 = add nsw i32 %3, 1, !dbg !13660
  call void @llvm.dbg.value(metadata i32 %198, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %199

199:                                              ; preds = %191, %197, %181
  %200 = phi i32 [ %198, %197 ], [ %3, %181 ], [ 0, %191 ]
  call void @llvm.dbg.value(metadata i32 %200, metadata !13432, metadata !DIExpression()), !dbg !13453
  %201 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13661
  %202 = bitcast %union.mxml_value_u* %201 to i32*, !dbg !13662
  %203 = load i32, i32* %202, align 8, !dbg !13662
  %204 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %7, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.269, i32 0, i32 0), i32 noundef %203) #18, !dbg !13663
  %205 = call fastcc i32 @mxml_write_string(i8* noundef nonnull %7, i8* noundef %1) #20, !dbg !13664
  %206 = icmp slt i32 %205, 0, !dbg !13666
  br i1 %206, label %300, label %207, !dbg !13667

207:                                              ; preds = %199
  %208 = call i32 @strlen(i8* noundef nonnull %7) #18, !dbg !13668
  %209 = add i32 %208, %200, !dbg !13669
  call void @llvm.dbg.value(metadata i32 %209, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %300, !dbg !13670

210:                                              ; preds = %5
  %211 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13671
  %212 = bitcast %union.mxml_value_u* %211 to i8**, !dbg !13673
  %213 = load i8*, i8** %212, align 8, !dbg !13673
  %214 = tail call fastcc i32 @mxml_write_string(i8* noundef %213, i8* noundef %1) #20, !dbg !13674
  %215 = icmp slt i32 %214, 0, !dbg !13675
  br i1 %215, label %300, label %216, !dbg !13676

216:                                              ; preds = %210
  %217 = load i8*, i8** %212, align 8, !dbg !13677
  %218 = tail call i32 @strlen(i8* noundef %217) #18, !dbg !13678
  %219 = add i32 %218, %3, !dbg !13679
  call void @llvm.dbg.value(metadata i32 %219, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %300, !dbg !13680

220:                                              ; preds = %5
  %221 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 2, !dbg !13681
  %222 = load %struct.mxml_node_s*, %struct.mxml_node_s** %221, align 8, !dbg !13681
  %223 = icmp eq %struct.mxml_node_s* %222, null, !dbg !13683
  br i1 %223, label %238, label %224, !dbg !13684

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %4, i32 0, i32 3, !dbg !13685
  %226 = load i32, i32* %225, align 4, !dbg !13685
  %227 = icmp sgt i32 %226, 0, !dbg !13688
  %228 = icmp slt i32 %226, %3
  %229 = and i1 %227, %228, !dbg !13689
  br i1 %229, label %230, label %233, !dbg !13689

230:                                              ; preds = %224
  %231 = tail call fastcc i32 @mxml_string_putc(i32 noundef 10, i8* noundef %1) #20, !dbg !13690
  %232 = icmp slt i32 %231, 0, !dbg !13693
  br i1 %232, label %300, label %238, !dbg !13694

233:                                              ; preds = %224
  %234 = tail call fastcc i32 @mxml_string_putc(i32 noundef 32, i8* noundef %1) #20, !dbg !13695
  %235 = icmp slt i32 %234, 0, !dbg !13697
  br i1 %235, label %300, label %236, !dbg !13698

236:                                              ; preds = %233
  %237 = add nsw i32 %3, 1, !dbg !13699
  call void @llvm.dbg.value(metadata i32 %237, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %238

238:                                              ; preds = %230, %236, %220
  %239 = phi i32 [ %237, %236 ], [ %3, %220 ], [ 0, %230 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !13432, metadata !DIExpression()), !dbg !13453
  %240 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, i32 0, !dbg !13700
  %241 = load double, double* %240, align 8, !dbg !13700
  %242 = call i32 (i8*, i8*, ...) @sprintf(i8* noundef nonnull %7, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.270, i32 0, i32 0), double noundef %241) #18, !dbg !13701
  %243 = call fastcc i32 @mxml_write_string(i8* noundef nonnull %7, i8* noundef %1) #20, !dbg !13702
  %244 = icmp slt i32 %243, 0, !dbg !13704
  br i1 %244, label %300, label %245, !dbg !13705

245:                                              ; preds = %238
  %246 = call i32 @strlen(i8* noundef nonnull %7) #18, !dbg !13706
  %247 = add i32 %246, %239, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %247, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %300, !dbg !13708

248:                                              ; preds = %5
  %249 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !13709
  %250 = bitcast %union.mxml_value_u* %249 to %struct.mxml_text_s*, !dbg !13711
  %251 = bitcast %union.mxml_value_u* %249 to i32*, !dbg !13712
  %252 = load i32, i32* %251, align 8, !dbg !13712
  %253 = icmp ne i32 %252, 0, !dbg !13713
  %254 = icmp sgt i32 %3, 0
  %255 = and i1 %254, %253, !dbg !13714
  br i1 %255, label %256, label %270, !dbg !13714

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %4, i32 0, i32 3, !dbg !13715
  %258 = load i32, i32* %257, align 4, !dbg !13715
  %259 = icmp sgt i32 %258, 0, !dbg !13718
  %260 = icmp slt i32 %258, %3
  %261 = and i1 %259, %260, !dbg !13719
  br i1 %261, label %262, label %265, !dbg !13719

262:                                              ; preds = %256
  %263 = tail call fastcc i32 @mxml_string_putc(i32 noundef 10, i8* noundef %1) #20, !dbg !13720
  %264 = icmp slt i32 %263, 0, !dbg !13723
  br i1 %264, label %300, label %270, !dbg !13724

265:                                              ; preds = %256
  %266 = tail call fastcc i32 @mxml_string_putc(i32 noundef 32, i8* noundef %1) #20, !dbg !13725
  %267 = icmp slt i32 %266, 0, !dbg !13727
  br i1 %267, label %300, label %268, !dbg !13728

268:                                              ; preds = %265
  %269 = add nuw nsw i32 %3, 1, !dbg !13729
  call void @llvm.dbg.value(metadata i32 %269, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %270

270:                                              ; preds = %262, %268, %248
  %271 = phi i32 [ %269, %268 ], [ %3, %248 ], [ 0, %262 ]
  call void @llvm.dbg.value(metadata i32 %271, metadata !13432, metadata !DIExpression()), !dbg !13453
  %272 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %250, i32 0, i32 1, !dbg !13730
  %273 = load i8*, i8** %272, align 4, !dbg !13730
  %274 = tail call fastcc i32 @mxml_write_string(i8* noundef %273, i8* noundef %1) #20, !dbg !13732
  %275 = icmp slt i32 %274, 0, !dbg !13733
  br i1 %275, label %300, label %276, !dbg !13734

276:                                              ; preds = %270
  %277 = load i8*, i8** %272, align 4, !dbg !13735
  %278 = tail call i32 @strlen(i8* noundef %277) #18, !dbg !13736
  %279 = add i32 %278, %271, !dbg !13737
  call void @llvm.dbg.value(metadata i32 %279, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %300, !dbg !13738

280:                                              ; preds = %5
  %281 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %4, i32 0, i32 5, !dbg !13739
  %282 = load i8* (%struct.mxml_node_s*)*, i8* (%struct.mxml_node_s*)** %281, align 4, !dbg !13739
  %283 = icmp eq i8* (%struct.mxml_node_s*)* %282, null, !dbg !13740
  br i1 %283, label %300, label %284, !dbg !13741

284:                                              ; preds = %280
  %285 = tail call i8* %282(%struct.mxml_node_s* noundef nonnull %0) #18, !dbg !13742
  call void @llvm.dbg.value(metadata i8* %285, metadata !13449, metadata !DIExpression()), !dbg !13744
  %286 = icmp eq i8* %285, null, !dbg !13745
  br i1 %286, label %300, label %287, !dbg !13746

287:                                              ; preds = %284
  %288 = tail call fastcc i32 @mxml_write_string(i8* noundef nonnull %285, i8* noundef %1) #20, !dbg !13747
  %289 = icmp slt i32 %288, 0, !dbg !13749
  br i1 %289, label %300, label %290, !dbg !13750

290:                                              ; preds = %287
  %291 = tail call i8* @strrchr(i8* noundef nonnull %285, i32 noundef 10) #18, !dbg !13751
  call void @llvm.dbg.value(metadata i8* %291, metadata !13452, metadata !DIExpression()), !dbg !13744
  %292 = icmp eq i8* %291, null, !dbg !13753
  br i1 %292, label %293, label %296, !dbg !13754

293:                                              ; preds = %290
  %294 = tail call i32 @strlen(i8* noundef nonnull %285) #18, !dbg !13755
  %295 = add i32 %294, %3, !dbg !13756
  call void @llvm.dbg.value(metadata i32 %295, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %298, !dbg !13757

296:                                              ; preds = %290
  %297 = tail call i32 @strlen(i8* noundef nonnull %291) #18, !dbg !13758
  call void @llvm.dbg.value(metadata i32 %297, metadata !13432, metadata !DIExpression()), !dbg !13453
  br label %298

298:                                              ; preds = %293, %296
  %299 = phi i32 [ %295, %293 ], [ %297, %296 ], !dbg !13759
  call void @llvm.dbg.value(metadata i32 %299, metadata !13432, metadata !DIExpression()), !dbg !13453
  tail call void @vPortFree(i8* noundef nonnull %285) #18, !dbg !13760
  br label %300

300:                                              ; preds = %35, %106, %102, %99, %96, %88, %83, %80, %131, %287, %284, %151, %147, %144, %140, %119, %207, %216, %245, %276, %166, %178, %154, %136, %136, %298, %5, %280, %270, %265, %262, %238, %233, %230, %210, %199, %194, %191, %175, %172, %169, %163, %42, %10
  %301 = phi i32 [ -1, %10 ], [ -1, %42 ], [ -1, %163 ], [ -1, %169 ], [ -1, %172 ], [ -1, %175 ], [ -1, %191 ], [ -1, %194 ], [ -1, %199 ], [ -1, %210 ], [ -1, %230 ], [ -1, %233 ], [ -1, %238 ], [ -1, %262 ], [ -1, %265 ], [ -1, %270 ], [ -1, %280 ], [ -1, %5 ], [ %299, %298 ], [ %279, %276 ], [ %247, %245 ], [ %219, %216 ], [ %209, %207 ], [ %168, %166 ], [ %180, %178 ], [ %159, %154 ], [ %137, %136 ], [ %137, %136 ], [ -1, %119 ], [ -1, %140 ], [ -1, %144 ], [ -1, %147 ], [ -1, %151 ], [ -1, %284 ], [ -1, %287 ], [ -1, %131 ], [ -1, %80 ], [ -1, %83 ], [ -1, %88 ], [ -1, %96 ], [ -1, %99 ], [ -1, %102 ], [ -1, %106 ], [ -1, %35 ], !dbg !13453
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %7) #17, !dbg !13761
  ret i32 %301, !dbg !13761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @mxml_string_putc(i32 noundef %0, i8* nocapture noundef %1) unnamed_addr #14 !dbg !13762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13764, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata i8* %1, metadata !13765, metadata !DIExpression()), !dbg !13767
  %3 = bitcast i8* %1 to i8**, !dbg !13768
  call void @llvm.dbg.value(metadata i8** %3, metadata !13766, metadata !DIExpression()), !dbg !13767
  %4 = load i8*, i8** %3, align 4, !dbg !13769
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !13771
  %6 = bitcast i8* %5 to i8**, !dbg !13771
  %7 = load i8*, i8** %6, align 4, !dbg !13771
  %8 = icmp ult i8* %4, %7, !dbg !13772
  br i1 %8, label %9, label %12, !dbg !13773

9:                                                ; preds = %2
  %10 = trunc i32 %0 to i8, !dbg !13774
  store i8 %10, i8* %4, align 1, !dbg !13775
  %11 = load i8*, i8** %3, align 4, !dbg !13776
  br label %12, !dbg !13777

12:                                               ; preds = %9, %2
  %13 = phi i8* [ %11, %9 ], [ %4, %2 ], !dbg !13776
  %14 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !13776
  store i8* %14, i8** %3, align 4, !dbg !13776
  ret i32 0, !dbg !13778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_write_ws(%struct.mxml_node_s* noundef %0, i8* nocapture noundef %1, i8* (%struct.mxml_node_s*, i32)* noundef readonly %2, i32 noundef %3, i32 noundef %4) unnamed_addr #0 !dbg !13779 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !13783, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8* %1, metadata !13784, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8* (%struct.mxml_node_s*, i32)* %2, metadata !13785, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i32 %3, metadata !13786, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i32 %4, metadata !13787, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i32 (i32, i8*)* @mxml_string_putc, metadata !13788, metadata !DIExpression()), !dbg !13790
  %6 = icmp eq i8* (%struct.mxml_node_s*, i32)* %2, null, !dbg !13791
  br i1 %6, label %33, label %7, !dbg !13793

7:                                                ; preds = %5
  %8 = tail call i8* %2(%struct.mxml_node_s* noundef %0, i32 noundef %3) #18, !dbg !13794
  call void @llvm.dbg.value(metadata i8* %8, metadata !13789, metadata !DIExpression()), !dbg !13790
  %9 = icmp eq i8* %8, null, !dbg !13795
  br i1 %9, label %33, label %10, !dbg !13796

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %8, metadata !13789, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i32 %4, metadata !13787, metadata !DIExpression()), !dbg !13790
  %11 = load i8, i8* %8, align 1, !dbg !13797
  %12 = icmp eq i8 %11, 0, !dbg !13799
  br i1 %12, label %33, label %13, !dbg !13799

13:                                               ; preds = %10, %28
  %14 = phi i8 [ %31, %28 ], [ %11, %10 ]
  %15 = phi i8* [ %30, %28 ], [ %8, %10 ]
  %16 = phi i32 [ %29, %28 ], [ %4, %10 ]
  call void @llvm.dbg.value(metadata i8* %15, metadata !13789, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i32 %16, metadata !13787, metadata !DIExpression()), !dbg !13790
  %17 = zext i8 %14 to i32, !dbg !13800
  %18 = tail call fastcc i32 @mxml_string_putc(i32 noundef %17, i8* noundef %1) #20, !dbg !13803
  %19 = icmp slt i32 %18, 0, !dbg !13804
  br i1 %19, label %33, label %20, !dbg !13805

20:                                               ; preds = %13
  %21 = load i8, i8* %15, align 1, !dbg !13806
  switch i8 %21, label %26 [
    i8 10, label %28
    i8 9, label %22
  ], !dbg !13808

22:                                               ; preds = %20
  %23 = add nsw i32 %16, 8, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %23, metadata !13787, metadata !DIExpression()), !dbg !13790
  %24 = srem i32 %23, 8, !dbg !13812
  %25 = sub nsw i32 %23, %24, !dbg !13813
  call void @llvm.dbg.value(metadata i32 %25, metadata !13787, metadata !DIExpression()), !dbg !13790
  br label %28, !dbg !13814

26:                                               ; preds = %20
  %27 = add nsw i32 %16, 1, !dbg !13815
  call void @llvm.dbg.value(metadata i32 %27, metadata !13787, metadata !DIExpression()), !dbg !13790
  br label %28

28:                                               ; preds = %20, %26, %22
  %29 = phi i32 [ %25, %22 ], [ %27, %26 ], [ 0, %20 ], !dbg !13816
  call void @llvm.dbg.value(metadata i32 %29, metadata !13787, metadata !DIExpression()), !dbg !13790
  %30 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !13817
  call void @llvm.dbg.value(metadata i8* %30, metadata !13789, metadata !DIExpression()), !dbg !13790
  %31 = load i8, i8* %30, align 1, !dbg !13797
  %32 = icmp eq i8 %31, 0, !dbg !13799
  br i1 %32, label %33, label %13, !dbg !13799, !llvm.loop !13818

33:                                               ; preds = %13, %28, %10, %5, %7
  %34 = phi i32 [ %4, %7 ], [ %4, %5 ], [ %4, %10 ], [ -1, %13 ], [ %29, %28 ], !dbg !13790
  ret i32 %34, !dbg !13820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_write_name(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) unnamed_addr #0 !dbg !13821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13825, metadata !DIExpression()), !dbg !13830
  call void @llvm.dbg.value(metadata i8* %1, metadata !13826, metadata !DIExpression()), !dbg !13830
  call void @llvm.dbg.value(metadata i32 (i32, i8*)* @mxml_string_putc, metadata !13827, metadata !DIExpression()), !dbg !13830
  %3 = load i8, i8* %0, align 1, !dbg !13831
  switch i8 %3, label %55 [
    i8 34, label %4
    i8 39, label %4
    i8 0, label %65
  ], !dbg !13833

4:                                                ; preds = %2, %2
  %5 = zext i8 %3 to i32, !dbg !13834
  %6 = tail call fastcc i32 @mxml_string_putc(i32 noundef %5, i8* noundef %1) #20, !dbg !13837
  %7 = icmp slt i32 %6, 0, !dbg !13838
  br i1 %7, label %66, label %8, !dbg !13839

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13825, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13830
  %9 = load i8, i8* %0, align 1, !dbg !13840
  call void @llvm.dbg.value(metadata i8 %9, metadata !13828, metadata !DIExpression()), !dbg !13830
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !13841
  call void @llvm.dbg.value(metadata i8* %10, metadata !13825, metadata !DIExpression()), !dbg !13830
  %11 = load i8, i8* %10, align 1, !dbg !13842
  %12 = icmp eq i8 %11, 0, !dbg !13842
  %13 = icmp eq i8 %11, %9
  %14 = select i1 %12, i1 true, i1 %13, !dbg !13843
  br i1 %14, label %51, label %15, !dbg !13843

15:                                               ; preds = %8, %45
  %16 = phi i8 [ %47, %45 ], [ %11, %8 ]
  %17 = phi i8* [ %46, %45 ], [ %10, %8 ]
  %18 = zext i8 %16 to i32, !dbg !13842
  %19 = tail call i8* @mxmlEntityGetName(i32 noundef %18) #18, !dbg !13844
  call void @llvm.dbg.value(metadata i8* %19, metadata !13829, metadata !DIExpression()), !dbg !13830
  %20 = icmp eq i8* %19, null, !dbg !13847
  br i1 %20, label %40, label %21, !dbg !13848

21:                                               ; preds = %15
  %22 = tail call fastcc i32 @mxml_string_putc(i32 noundef 38, i8* noundef %1) #20, !dbg !13849
  %23 = icmp slt i32 %22, 0, !dbg !13852
  br i1 %23, label %66, label %24, !dbg !13853

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %19, metadata !13829, metadata !DIExpression()), !dbg !13830
  %25 = load i8, i8* %19, align 1, !dbg !13854
  %26 = icmp eq i8 %25, 0, !dbg !13855
  br i1 %26, label %37, label %30, !dbg !13855

27:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i8* undef, metadata !13829, metadata !DIExpression()), !dbg !13830
  %28 = load i8, i8* %36, align 1, !dbg !13854
  %29 = icmp eq i8 %28, 0, !dbg !13855
  br i1 %29, label %37, label %30, !dbg !13855, !llvm.loop !13856

30:                                               ; preds = %24, %27
  %31 = phi i8 [ %28, %27 ], [ %25, %24 ]
  %32 = phi i8* [ %36, %27 ], [ %19, %24 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !13829, metadata !DIExpression()), !dbg !13830
  %33 = zext i8 %31 to i32, !dbg !13858
  %34 = tail call fastcc i32 @mxml_string_putc(i32 noundef %33, i8* noundef %1) #20, !dbg !13861
  %35 = icmp slt i32 %34, 0, !dbg !13862
  %36 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !13863
  call void @llvm.dbg.value(metadata i8* %36, metadata !13829, metadata !DIExpression()), !dbg !13830
  br i1 %35, label %66, label %27, !dbg !13864

37:                                               ; preds = %27, %24
  %38 = tail call fastcc i32 @mxml_string_putc(i32 noundef 59, i8* noundef %1) #20, !dbg !13865
  %39 = icmp slt i32 %38, 0, !dbg !13867
  br i1 %39, label %66, label %45, !dbg !13868

40:                                               ; preds = %15
  %41 = load i8, i8* %17, align 1, !dbg !13869
  %42 = zext i8 %41 to i32, !dbg !13869
  %43 = tail call fastcc i32 @mxml_string_putc(i32 noundef %42, i8* noundef %1) #20, !dbg !13871
  %44 = icmp slt i32 %43, 0, !dbg !13872
  br i1 %44, label %66, label %45, !dbg !13873

45:                                               ; preds = %40, %37
  call void @llvm.dbg.value(metadata i8* %17, metadata !13825, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13830
  %46 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !13841
  call void @llvm.dbg.value(metadata i8* %46, metadata !13825, metadata !DIExpression()), !dbg !13830
  %47 = load i8, i8* %46, align 1, !dbg !13842
  %48 = icmp eq i8 %47, 0, !dbg !13842
  %49 = icmp eq i8 %47, %9
  %50 = select i1 %48, i1 true, i1 %49, !dbg !13843
  br i1 %50, label %51, label %15, !dbg !13843, !llvm.loop !13874

51:                                               ; preds = %45, %8
  %52 = zext i8 %9 to i32, !dbg !13877
  %53 = tail call fastcc i32 @mxml_string_putc(i32 noundef %52, i8* noundef %1) #20, !dbg !13879
  %54 = icmp slt i32 %53, 0, !dbg !13880
  br i1 %54, label %66, label %65, !dbg !13881

55:                                               ; preds = %2, %61
  %56 = phi i8* [ %62, %61 ], [ %0, %2 ]
  %57 = phi i8 [ %63, %61 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i8* %56, metadata !13825, metadata !DIExpression()), !dbg !13830
  %58 = zext i8 %57 to i32, !dbg !13882
  %59 = tail call fastcc i32 @mxml_string_putc(i32 noundef %58, i8* noundef %1) #20, !dbg !13886
  %60 = icmp slt i32 %59, 0, !dbg !13887
  br i1 %60, label %66, label %61, !dbg !13888

61:                                               ; preds = %55
  %62 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !13889
  call void @llvm.dbg.value(metadata i8* %62, metadata !13825, metadata !DIExpression()), !dbg !13830
  %63 = load i8, i8* %62, align 1, !dbg !13890
  %64 = icmp eq i8 %63, 0, !dbg !13891
  br i1 %64, label %65, label %55, !dbg !13891, !llvm.loop !13892

65:                                               ; preds = %61, %2, %51
  br label %66, !dbg !13894

66:                                               ; preds = %40, %37, %21, %30, %55, %51, %4, %65
  %67 = phi i32 [ 0, %65 ], [ -1, %4 ], [ -1, %51 ], [ -1, %55 ], [ -1, %30 ], [ -1, %21 ], [ -1, %37 ], [ -1, %40 ], !dbg !13830
  ret i32 %67, !dbg !13895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mxml_write_string(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) unnamed_addr #0 !dbg !13896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13900, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i8* %1, metadata !13901, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i32 (i32, i8*)* @mxml_string_putc, metadata !13902, metadata !DIExpression()), !dbg !13904
  %3 = load i8, i8* %0, align 1, !dbg !13905
  %4 = icmp eq i8 %3, 0, !dbg !13906
  br i1 %4, label %39, label %5, !dbg !13906

5:                                                ; preds = %2, %35
  %6 = phi i8 [ %37, %35 ], [ %3, %2 ]
  %7 = phi i8* [ %36, %35 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !13900, metadata !DIExpression()), !dbg !13904
  %8 = zext i8 %6 to i32, !dbg !13907
  %9 = tail call i8* @mxmlEntityGetName(i32 noundef %8) #18, !dbg !13910
  call void @llvm.dbg.value(metadata i8* %9, metadata !13903, metadata !DIExpression()), !dbg !13904
  %10 = icmp eq i8* %9, null, !dbg !13911
  br i1 %10, label %30, label %11, !dbg !13912

11:                                               ; preds = %5
  %12 = tail call fastcc i32 @mxml_string_putc(i32 noundef 38, i8* noundef %1) #20, !dbg !13913
  %13 = icmp slt i32 %12, 0, !dbg !13916
  br i1 %13, label %39, label %14, !dbg !13917

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* %9, metadata !13903, metadata !DIExpression()), !dbg !13904
  %15 = load i8, i8* %9, align 1, !dbg !13918
  %16 = icmp eq i8 %15, 0, !dbg !13919
  br i1 %16, label %27, label %20, !dbg !13919

17:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* undef, metadata !13903, metadata !DIExpression()), !dbg !13904
  %18 = load i8, i8* %26, align 1, !dbg !13918
  %19 = icmp eq i8 %18, 0, !dbg !13919
  br i1 %19, label %27, label %20, !dbg !13919, !llvm.loop !13920

20:                                               ; preds = %14, %17
  %21 = phi i8 [ %18, %17 ], [ %15, %14 ]
  %22 = phi i8* [ %26, %17 ], [ %9, %14 ]
  call void @llvm.dbg.value(metadata i8* %22, metadata !13903, metadata !DIExpression()), !dbg !13904
  %23 = zext i8 %21 to i32, !dbg !13922
  %24 = tail call fastcc i32 @mxml_string_putc(i32 noundef %23, i8* noundef %1) #20, !dbg !13925
  %25 = icmp slt i32 %24, 0, !dbg !13926
  %26 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13927
  call void @llvm.dbg.value(metadata i8* %26, metadata !13903, metadata !DIExpression()), !dbg !13904
  br i1 %25, label %39, label %17, !dbg !13928

27:                                               ; preds = %17, %14
  %28 = tail call fastcc i32 @mxml_string_putc(i32 noundef 59, i8* noundef %1) #20, !dbg !13929
  %29 = icmp slt i32 %28, 0, !dbg !13931
  br i1 %29, label %39, label %35, !dbg !13932

30:                                               ; preds = %5
  %31 = load i8, i8* %7, align 1, !dbg !13933
  %32 = zext i8 %31 to i32, !dbg !13933
  %33 = tail call fastcc i32 @mxml_string_putc(i32 noundef %32, i8* noundef %1) #20, !dbg !13935
  %34 = icmp slt i32 %33, 0, !dbg !13936
  br i1 %34, label %39, label %35, !dbg !13937

35:                                               ; preds = %30, %27
  %36 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13938
  call void @llvm.dbg.value(metadata i8* %36, metadata !13900, metadata !DIExpression()), !dbg !13904
  %37 = load i8, i8* %36, align 1, !dbg !13905
  %38 = icmp eq i8 %37, 0, !dbg !13906
  br i1 %38, label %39, label %5, !dbg !13906, !llvm.loop !13939

39:                                               ; preds = %11, %27, %30, %35, %20, %2
  %40 = phi i32 [ 0, %2 ], [ -1, %20 ], [ -1, %11 ], [ -1, %27 ], [ -1, %30 ], [ 0, %35 ], !dbg !13904
  ret i32 %40, !dbg !13941
}

; Function Attrs: optsize
declare dso_local i8* @strrchr(i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlSAXLoadString(%struct.mxml_node_s* noundef %0, i8* noundef %1, i32 (%struct.mxml_node_s*)* noundef %2, void (%struct.mxml_node_s*, i32, i8*)* noundef %3, i8* noundef %4) local_unnamed_addr #0 !dbg !13942 {
  %6 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !13946, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i8* %1, metadata !13947, metadata !DIExpression()), !dbg !13951
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.value(metadata i32 (%struct.mxml_node_s*)* %2, metadata !13948, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata void (%struct.mxml_node_s*, i32, i8*)* %3, metadata !13949, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i8* %4, metadata !13950, metadata !DIExpression()), !dbg !13951
  %7 = bitcast i8** %6 to i8*, !dbg !13952
  call void @llvm.dbg.value(metadata i8** %6, metadata !13947, metadata !DIExpression(DW_OP_deref)), !dbg !13951
  %8 = call fastcc %struct.mxml_node_s* @mxml_load_data(%struct.mxml_node_s* noundef %0, i8* noundef nonnull %7, i32 (%struct.mxml_node_s*)* noundef %2, void (%struct.mxml_node_s*, i32, i8*)* noundef %3, i8* noundef %4) #20, !dbg !13953
  ret %struct.mxml_node_s* %8, !dbg !13954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlSetCustomHandlers(i32 (%struct.mxml_node_s*, i8*)* noundef %0, i8* (%struct.mxml_node_s*)* noundef %1) local_unnamed_addr #0 !dbg !13955 {
  call void @llvm.dbg.value(metadata i32 (%struct.mxml_node_s*, i8*)* %0, metadata !13959, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i8* (%struct.mxml_node_s*)* %1, metadata !13960, metadata !DIExpression()), !dbg !13962
  %3 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !13963
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %3, metadata !13961, metadata !DIExpression()), !dbg !13962
  %4 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %3, i32 0, i32 4, !dbg !13964
  store i32 (%struct.mxml_node_s*, i8*)* %0, i32 (%struct.mxml_node_s*, i8*)** %4, align 4, !dbg !13965
  %5 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %3, i32 0, i32 5, !dbg !13966
  store i8* (%struct.mxml_node_s*)* %1, i8* (%struct.mxml_node_s*)** %5, align 4, !dbg !13967
  ret void, !dbg !13968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlSetErrorCallback(void (i8*)* noundef %0) local_unnamed_addr #0 !dbg !13969 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !13974, metadata !DIExpression()), !dbg !13976
  %2 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !13977
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %2, metadata !13975, metadata !DIExpression()), !dbg !13976
  %3 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 0, !dbg !13978
  store void (i8*)* %0, void (i8*)** %3, align 4, !dbg !13979
  ret void, !dbg !13980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlSetWrapMargin(i32 noundef %0) local_unnamed_addr #0 !dbg !13981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13983, metadata !DIExpression()), !dbg !13985
  %2 = tail call %struct._mxml_global_s* @_mxml_global() #18, !dbg !13986
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* %2, metadata !13984, metadata !DIExpression()), !dbg !13985
  %3 = getelementptr inbounds %struct._mxml_global_s, %struct._mxml_global_s* %2, i32 0, i32 3, !dbg !13987
  store i32 %0, i32* %3, align 4, !dbg !13988
  ret void, !dbg !13989
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @mxmlGetCDATA(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #0 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14039, metadata !DIExpression()), !dbg !14040
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14041
  br i1 %2, label %16, label %3, !dbg !14043

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14044
  %5 = load i32, i32* %4, align 8, !dbg !14044
  %6 = icmp eq i32 %5, 0, !dbg !14045
  br i1 %6, label %7, label %16, !dbg !14046

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14047
  %9 = bitcast %union.mxml_value_u* %8 to i8**, !dbg !14048
  %10 = load i8*, i8** %9, align 8, !dbg !14048
  %11 = tail call i32 @strncmp(i8* noundef %10, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.271, i32 0, i32 0), i32 noundef 8) #18, !dbg !14049
  %12 = icmp eq i32 %11, 0, !dbg !14049
  br i1 %12, label %13, label %16, !dbg !14050

13:                                               ; preds = %7
  %14 = load i8*, i8** %9, align 8, !dbg !14051
  %15 = getelementptr inbounds i8, i8* %14, i32 8, !dbg !14052
  br label %16, !dbg !14053

16:                                               ; preds = %1, %3, %7, %13
  %17 = phi i8* [ %15, %13 ], [ null, %7 ], [ null, %3 ], [ null, %1 ], !dbg !14040
  ret i8* %17, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @mxmlGetCustom(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14055 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14059, metadata !DIExpression()), !dbg !14060
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14061
  br i1 %2, label %19, label %3, !dbg !14063

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14064
  %5 = load i32, i32* %4, align 8, !dbg !14064
  switch i32 %5, label %19 [
    i32 5, label %14
    i32 0, label %6
  ], !dbg !14066

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14067
  %8 = load %struct.mxml_node_s*, %struct.mxml_node_s** %7, align 8, !dbg !14067
  %9 = icmp eq %struct.mxml_node_s* %8, null, !dbg !14069
  br i1 %9, label %19, label %10, !dbg !14070

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %8, i32 0, i32 0, !dbg !14071
  %12 = load i32, i32* %11, align 8, !dbg !14071
  %13 = icmp eq i32 %12, 5, !dbg !14072
  br i1 %13, label %14, label %19, !dbg !14073

14:                                               ; preds = %10, %3
  %15 = phi %struct.mxml_node_s* [ %0, %3 ], [ %8, %10 ]
  %16 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %15, i32 0, i32 6, !dbg !14074
  %17 = bitcast %union.mxml_value_u* %16 to i8**, !dbg !14074
  %18 = load i8*, i8** %17, align 8, !dbg !14074
  br label %19, !dbg !14075

19:                                               ; preds = %14, %6, %10, %3, %1
  %20 = phi i8* [ null, %1 ], [ null, %3 ], [ null, %10 ], [ null, %6 ], [ %18, %14 ], !dbg !14060
  ret i8* %20, !dbg !14075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @mxmlGetElement(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14076 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14078, metadata !DIExpression()), !dbg !14079
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14080
  br i1 %2, label %11, label %3, !dbg !14082

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14083
  %5 = load i32, i32* %4, align 8, !dbg !14083
  %6 = icmp eq i32 %5, 0, !dbg !14084
  br i1 %6, label %7, label %11, !dbg !14085

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14086
  %9 = bitcast %union.mxml_value_u* %8 to i8**, !dbg !14087
  %10 = load i8*, i8** %9, align 8, !dbg !14087
  br label %11, !dbg !14088

11:                                               ; preds = %1, %3, %7
  %12 = phi i8* [ %10, %7 ], [ null, %3 ], [ null, %1 ], !dbg !14079
  ret i8* %12, !dbg !14089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.mxml_node_s* @mxmlGetFirstChild(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14090 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14094, metadata !DIExpression()), !dbg !14095
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14096
  br i1 %2, label %10, label %3, !dbg !14098

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14099
  %5 = load i32, i32* %4, align 8, !dbg !14099
  %6 = icmp eq i32 %5, 0, !dbg !14100
  br i1 %6, label %7, label %10, !dbg !14101

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14102
  %9 = load %struct.mxml_node_s*, %struct.mxml_node_s** %8, align 8, !dbg !14102
  br label %10, !dbg !14103

10:                                               ; preds = %1, %3, %7
  %11 = phi %struct.mxml_node_s* [ %9, %7 ], [ null, %3 ], [ null, %1 ], !dbg !14095
  ret %struct.mxml_node_s* %11, !dbg !14104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @mxmlGetInteger(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14105 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14109, metadata !DIExpression()), !dbg !14110
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14111
  br i1 %2, label %19, label %3, !dbg !14113

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14114
  %5 = load i32, i32* %4, align 8, !dbg !14114
  switch i32 %5, label %19 [
    i32 1, label %14
    i32 0, label %6
  ], !dbg !14116

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14117
  %8 = load %struct.mxml_node_s*, %struct.mxml_node_s** %7, align 8, !dbg !14117
  %9 = icmp eq %struct.mxml_node_s* %8, null, !dbg !14119
  br i1 %9, label %19, label %10, !dbg !14120

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %8, i32 0, i32 0, !dbg !14121
  %12 = load i32, i32* %11, align 8, !dbg !14121
  %13 = icmp eq i32 %12, 1, !dbg !14122
  br i1 %13, label %14, label %19, !dbg !14123

14:                                               ; preds = %10, %3
  %15 = phi %struct.mxml_node_s* [ %0, %3 ], [ %8, %10 ]
  %16 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %15, i32 0, i32 6, !dbg !14124
  %17 = bitcast %union.mxml_value_u* %16 to i32*, !dbg !14124
  %18 = load i32, i32* %17, align 8, !dbg !14124
  br label %19, !dbg !14125

19:                                               ; preds = %14, %6, %10, %3, %1
  %20 = phi i32 [ 0, %1 ], [ 0, %3 ], [ 0, %10 ], [ 0, %6 ], [ %18, %14 ], !dbg !14110
  ret i32 %20, !dbg !14125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.mxml_node_s* @mxmlGetLastChild(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14126 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14128, metadata !DIExpression()), !dbg !14129
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14130
  br i1 %2, label %10, label %3, !dbg !14132

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14133
  %5 = load i32, i32* %4, align 8, !dbg !14133
  %6 = icmp eq i32 %5, 0, !dbg !14134
  br i1 %6, label %7, label %10, !dbg !14135

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 5, !dbg !14136
  %9 = load %struct.mxml_node_s*, %struct.mxml_node_s** %8, align 4, !dbg !14136
  br label %10, !dbg !14137

10:                                               ; preds = %1, %3, %7
  %11 = phi %struct.mxml_node_s* [ %9, %7 ], [ null, %3 ], [ null, %1 ], !dbg !14129
  ret %struct.mxml_node_s* %11, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.mxml_node_s* @mxmlGetNextSibling(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14141, metadata !DIExpression()), !dbg !14142
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14143
  br i1 %2, label %6, label %3, !dbg !14145

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 1, !dbg !14146
  %5 = load %struct.mxml_node_s*, %struct.mxml_node_s** %4, align 4, !dbg !14146
  br label %6, !dbg !14147

6:                                                ; preds = %1, %3
  %7 = phi %struct.mxml_node_s* [ %5, %3 ], [ null, %1 ], !dbg !14142
  ret %struct.mxml_node_s* %7, !dbg !14148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @mxmlGetOpaque(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14149 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14151, metadata !DIExpression()), !dbg !14152
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14153
  br i1 %2, label %19, label %3, !dbg !14155

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14156
  %5 = load i32, i32* %4, align 8, !dbg !14156
  switch i32 %5, label %19 [
    i32 2, label %14
    i32 0, label %6
  ], !dbg !14158

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14159
  %8 = load %struct.mxml_node_s*, %struct.mxml_node_s** %7, align 8, !dbg !14159
  %9 = icmp eq %struct.mxml_node_s* %8, null, !dbg !14161
  br i1 %9, label %19, label %10, !dbg !14162

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %8, i32 0, i32 0, !dbg !14163
  %12 = load i32, i32* %11, align 8, !dbg !14163
  %13 = icmp eq i32 %12, 2, !dbg !14164
  br i1 %13, label %14, label %19, !dbg !14165

14:                                               ; preds = %10, %3
  %15 = phi %struct.mxml_node_s* [ %0, %3 ], [ %8, %10 ]
  %16 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %15, i32 0, i32 6, !dbg !14166
  %17 = bitcast %union.mxml_value_u* %16 to i8**, !dbg !14166
  %18 = load i8*, i8** %17, align 8, !dbg !14166
  br label %19, !dbg !14167

19:                                               ; preds = %14, %6, %10, %3, %1
  %20 = phi i8* [ null, %1 ], [ null, %3 ], [ null, %10 ], [ null, %6 ], [ %18, %14 ], !dbg !14152
  ret i8* %20, !dbg !14167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.mxml_node_s* @mxmlGetParent(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14168 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14170, metadata !DIExpression()), !dbg !14171
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14172
  br i1 %2, label %6, label %3, !dbg !14174

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 3, !dbg !14175
  %5 = load %struct.mxml_node_s*, %struct.mxml_node_s** %4, align 4, !dbg !14175
  br label %6, !dbg !14176

6:                                                ; preds = %1, %3
  %7 = phi %struct.mxml_node_s* [ %5, %3 ], [ null, %1 ], !dbg !14171
  ret %struct.mxml_node_s* %7, !dbg !14177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.mxml_node_s* @mxmlGetPrevSibling(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14178 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14180, metadata !DIExpression()), !dbg !14181
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14182
  br i1 %2, label %6, label %3, !dbg !14184

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 2, !dbg !14185
  %5 = load %struct.mxml_node_s*, %struct.mxml_node_s** %4, align 8, !dbg !14185
  br label %6, !dbg !14186

6:                                                ; preds = %1, %3
  %7 = phi %struct.mxml_node_s* [ %5, %3 ], [ null, %1 ], !dbg !14181
  ret %struct.mxml_node_s* %7, !dbg !14187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local double @mxmlGetReal(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14188 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14192, metadata !DIExpression()), !dbg !14193
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14194
  br i1 %2, label %18, label %3, !dbg !14196

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14197
  %5 = load i32, i32* %4, align 8, !dbg !14197
  switch i32 %5, label %18 [
    i32 3, label %14
    i32 0, label %6
  ], !dbg !14199

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14200
  %8 = load %struct.mxml_node_s*, %struct.mxml_node_s** %7, align 8, !dbg !14200
  %9 = icmp eq %struct.mxml_node_s* %8, null, !dbg !14202
  br i1 %9, label %18, label %10, !dbg !14203

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %8, i32 0, i32 0, !dbg !14204
  %12 = load i32, i32* %11, align 8, !dbg !14204
  %13 = icmp eq i32 %12, 3, !dbg !14205
  br i1 %13, label %14, label %18, !dbg !14206

14:                                               ; preds = %10, %3
  %15 = phi %struct.mxml_node_s* [ %0, %3 ], [ %8, %10 ]
  %16 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %15, i32 0, i32 6, i32 0, !dbg !14207
  %17 = load double, double* %16, align 8, !dbg !14207
  br label %18, !dbg !14208

18:                                               ; preds = %14, %6, %10, %3, %1
  %19 = phi double [ 0.000000e+00, %1 ], [ 0.000000e+00, %3 ], [ 0.000000e+00, %10 ], [ 0.000000e+00, %6 ], [ %17, %14 ], !dbg !14193
  ret double %19, !dbg !14208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i8* @mxmlGetText(%struct.mxml_node_s* noundef readonly %0, i32* noundef writeonly %1) local_unnamed_addr #14 !dbg !14209 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14213, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i32* %1, metadata !14214, metadata !DIExpression()), !dbg !14215
  %3 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14216
  br i1 %3, label %4, label %7, !dbg !14218

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !14219
  br i1 %5, label %45, label %6, !dbg !14222

6:                                                ; preds = %4
  store i32 0, i32* %1, align 4, !dbg !14223
  br label %45, !dbg !14224

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14225
  %9 = load i32, i32* %8, align 8, !dbg !14225
  switch i32 %9, label %42 [
    i32 4, label %10
    i32 0, label %21
  ], !dbg !14227

10:                                               ; preds = %7
  %11 = icmp eq i32* %1, null, !dbg !14228
  br i1 %11, label %16, label %12, !dbg !14231

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14232
  %14 = bitcast %union.mxml_value_u* %13 to i32*, !dbg !14233
  %15 = load i32, i32* %14, align 8, !dbg !14233
  store i32 %15, i32* %1, align 4, !dbg !14234
  br label %16, !dbg !14235

16:                                               ; preds = %12, %10
  %17 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14236
  %18 = bitcast %union.mxml_value_u* %17 to %struct.mxml_text_s*, !dbg !14237
  %19 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %18, i32 0, i32 1, !dbg !14238
  %20 = load i8*, i8** %19, align 4, !dbg !14238
  br label %45, !dbg !14239

21:                                               ; preds = %7
  %22 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14240
  %23 = load %struct.mxml_node_s*, %struct.mxml_node_s** %22, align 8, !dbg !14240
  %24 = icmp eq %struct.mxml_node_s* %23, null, !dbg !14242
  br i1 %24, label %42, label %25, !dbg !14243

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %23, i32 0, i32 0, !dbg !14244
  %27 = load i32, i32* %26, align 8, !dbg !14244
  %28 = icmp eq i32 %27, 4, !dbg !14245
  br i1 %28, label %29, label %42, !dbg !14246

29:                                               ; preds = %25
  %30 = icmp eq i32* %1, null, !dbg !14247
  br i1 %30, label %36, label %31, !dbg !14250

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %23, i32 0, i32 6, !dbg !14251
  %33 = bitcast %union.mxml_value_u* %32 to i32*, !dbg !14252
  %34 = load i32, i32* %33, align 8, !dbg !14252
  store i32 %34, i32* %1, align 4, !dbg !14253
  %35 = load %struct.mxml_node_s*, %struct.mxml_node_s** %22, align 8, !dbg !14254
  br label %36, !dbg !14255

36:                                               ; preds = %31, %29
  %37 = phi %struct.mxml_node_s* [ %35, %31 ], [ %23, %29 ], !dbg !14254
  %38 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %37, i32 0, i32 6, !dbg !14256
  %39 = bitcast %union.mxml_value_u* %38 to %struct.mxml_text_s*, !dbg !14257
  %40 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %39, i32 0, i32 1, !dbg !14258
  %41 = load i8*, i8** %40, align 4, !dbg !14258
  br label %45, !dbg !14259

42:                                               ; preds = %7, %25, %21
  %43 = icmp eq i32* %1, null, !dbg !14260
  br i1 %43, label %45, label %44, !dbg !14263

44:                                               ; preds = %42
  store i32 0, i32* %1, align 4, !dbg !14264
  br label %45, !dbg !14265

45:                                               ; preds = %42, %44, %4, %6, %36, %16
  %46 = phi i8* [ %20, %16 ], [ %41, %36 ], [ null, %6 ], [ null, %4 ], [ null, %44 ], [ null, %42 ], !dbg !14215
  ret i8* %46, !dbg !14266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @mxmlGetType(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14267 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14271, metadata !DIExpression()), !dbg !14272
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14273
  br i1 %2, label %6, label %3, !dbg !14275

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14276
  %5 = load i32, i32* %4, align 8, !dbg !14276
  br label %6, !dbg !14277

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ -1, %1 ], !dbg !14272
  ret i32 %7, !dbg !14278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @mxmlGetUserData(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14279 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14283, metadata !DIExpression()), !dbg !14284
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14285
  br i1 %2, label %6, label %3, !dbg !14287

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 8, !dbg !14288
  %5 = load i8*, i8** %4, align 4, !dbg !14288
  br label %6, !dbg !14289

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ null, %1 ], !dbg !14284
  ret i8* %7, !dbg !14290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlIndexDelete(%struct.mxml_index_s* noundef %0) local_unnamed_addr #0 !dbg !14291 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14350, metadata !DIExpression()), !dbg !14351
  %2 = icmp eq %struct.mxml_index_s* %0, null, !dbg !14352
  br i1 %2, label %18, label %3, !dbg !14354

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 0, !dbg !14355
  %5 = load i8*, i8** %4, align 4, !dbg !14355
  %6 = icmp eq i8* %5, null, !dbg !14357
  br i1 %6, label %8, label %7, !dbg !14358

7:                                                ; preds = %3
  tail call void @vPortFree(i8* noundef nonnull %5) #18, !dbg !14359
  br label %8, !dbg !14359

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 2, !dbg !14360
  %10 = load i32, i32* %9, align 4, !dbg !14360
  %11 = icmp eq i32 %10, 0, !dbg !14362
  br i1 %11, label %16, label %12, !dbg !14363

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 4, !dbg !14364
  %14 = bitcast %struct.mxml_node_s*** %13 to i8**, !dbg !14364
  %15 = load i8*, i8** %14, align 4, !dbg !14364
  tail call void @vPortFree(i8* noundef %15) #18, !dbg !14365
  br label %16, !dbg !14365

16:                                               ; preds = %12, %8
  %17 = bitcast %struct.mxml_index_s* %0 to i8*, !dbg !14366
  tail call void @vPortFree(i8* noundef nonnull %17) #18, !dbg !14367
  br label %18, !dbg !14368

18:                                               ; preds = %1, %16
  ret void, !dbg !14368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local %struct.mxml_node_s* @mxmlIndexEnum(%struct.mxml_index_s* noundef %0) local_unnamed_addr #14 !dbg !14369 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14373, metadata !DIExpression()), !dbg !14374
  %2 = icmp eq %struct.mxml_index_s* %0, null, !dbg !14375
  br i1 %2, label %15, label %3, !dbg !14377

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 3, !dbg !14378
  %5 = load i32, i32* %4, align 4, !dbg !14378
  %6 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 1, !dbg !14380
  %7 = load i32, i32* %6, align 4, !dbg !14380
  %8 = icmp slt i32 %5, %7, !dbg !14381
  br i1 %8, label %9, label %15, !dbg !14382

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 4, !dbg !14383
  %11 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %10, align 4, !dbg !14383
  %12 = add nsw i32 %5, 1, !dbg !14384
  store i32 %12, i32* %4, align 4, !dbg !14384
  %13 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %11, i32 %5, !dbg !14385
  %14 = load %struct.mxml_node_s*, %struct.mxml_node_s** %13, align 4, !dbg !14385
  br label %15, !dbg !14386

15:                                               ; preds = %3, %1, %9
  %16 = phi %struct.mxml_node_s* [ %14, %9 ], [ null, %1 ], [ null, %3 ], !dbg !14374
  ret %struct.mxml_node_s* %16, !dbg !14387
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlIndexFind(%struct.mxml_index_s* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !14388 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14392, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i8* %1, metadata !14393, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i8* %2, metadata !14394, metadata !DIExpression()), !dbg !14399
  %4 = icmp eq %struct.mxml_index_s* %0, null, !dbg !14400
  br i1 %4, label %101, label %5, !dbg !14402

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 0, !dbg !14403
  %7 = load i8*, i8** %6, align 4, !dbg !14403
  %8 = icmp eq i8* %7, null, !dbg !14404
  %9 = icmp ne i8* %2, null
  %10 = and i1 %9, %8, !dbg !14405
  br i1 %10, label %101, label %11, !dbg !14405

11:                                               ; preds = %5
  %12 = icmp ne i8* %1, null, !dbg !14406
  %13 = or i1 %12, %9, !dbg !14408
  br i1 %13, label %16, label %14, !dbg !14408

14:                                               ; preds = %11
  %15 = tail call %struct.mxml_node_s* @mxmlIndexEnum(%struct.mxml_index_s* noundef nonnull %0) #20, !dbg !14409
  br label %101, !dbg !14410

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 1, !dbg !14411
  %18 = load i32, i32* %17, align 4, !dbg !14411
  %19 = icmp eq i32 %18, 0, !dbg !14413
  br i1 %19, label %101, label %20, !dbg !14414

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 3, !dbg !14415
  %22 = load i32, i32* %21, align 4, !dbg !14415
  %23 = icmp eq i32 %22, 0, !dbg !14417
  br i1 %23, label %24, label %82, !dbg !14418

24:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 0, metadata !14397, metadata !DIExpression()), !dbg !14399
  %25 = add nsw i32 %18, -1, !dbg !14419
  call void @llvm.dbg.value(metadata i32 %25, metadata !14398, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i32 0, metadata !14397, metadata !DIExpression()), !dbg !14399
  %26 = icmp sgt i32 %18, 2, !dbg !14421
  br i1 %26, label %27, label %29, !dbg !14422

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 4
  br label %35, !dbg !14422

29:                                               ; preds = %60, %24
  %30 = phi i32 [ 0, %24 ], [ %62, %60 ], !dbg !14423
  %31 = phi i32 [ %25, %24 ], [ %63, %60 ], !dbg !14424
  call void @llvm.dbg.value(metadata i32 %30, metadata !14396, metadata !DIExpression()), !dbg !14399
  %32 = icmp sgt i32 %30, %31, !dbg !14425
  br i1 %32, label %80, label %33, !dbg !14428

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 4
  br label %66, !dbg !14428

35:                                               ; preds = %27, %60
  %36 = phi i32 [ %25, %27 ], [ %63, %60 ]
  %37 = phi i32 [ 0, %27 ], [ %62, %60 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !14398, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i32 %37, metadata !14397, metadata !DIExpression()), !dbg !14399
  %38 = add nsw i32 %36, %37, !dbg !14429
  %39 = sdiv i32 %38, 2, !dbg !14431
  call void @llvm.dbg.value(metadata i32 %39, metadata !14396, metadata !DIExpression()), !dbg !14399
  %40 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %28, align 4, !dbg !14432
  %41 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %40, i32 %39, !dbg !14434
  %42 = load %struct.mxml_node_s*, %struct.mxml_node_s** %41, align 4, !dbg !14434
  %43 = tail call fastcc i32 @index_find(%struct.mxml_index_s* noundef nonnull %0, i8* noundef %1, i8* noundef %2, %struct.mxml_node_s* noundef %42) #20, !dbg !14435
  call void @llvm.dbg.value(metadata i32 %43, metadata !14395, metadata !DIExpression()), !dbg !14399
  %44 = icmp eq i32 %43, 0, !dbg !14436
  br i1 %44, label %45, label %60, !dbg !14437

45:                                               ; preds = %35, %48
  %46 = phi i32 [ %50, %48 ], [ %39, %35 ], !dbg !14438
  call void @llvm.dbg.value(metadata i32 %46, metadata !14396, metadata !DIExpression()), !dbg !14399
  %47 = icmp sgt i32 %46, 0, !dbg !14439
  br i1 %47, label %48, label %55, !dbg !14441

48:                                               ; preds = %45
  %49 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %28, align 4, !dbg !14442
  %50 = add nsw i32 %46, -1, !dbg !14443
  %51 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %49, i32 %50, !dbg !14444
  %52 = load %struct.mxml_node_s*, %struct.mxml_node_s** %51, align 4, !dbg !14444
  %53 = tail call fastcc i32 @index_find(%struct.mxml_index_s* noundef nonnull %0, i8* noundef %1, i8* noundef %2, %struct.mxml_node_s* noundef %52) #20, !dbg !14445
  %54 = icmp eq i32 %53, 0, !dbg !14446
  br i1 %54, label %45, label %55, !dbg !14447, !llvm.loop !14448

55:                                               ; preds = %45, %48
  %56 = add nsw i32 %46, 1, !dbg !14450
  store i32 %56, i32* %21, align 4, !dbg !14451
  %57 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %28, align 4, !dbg !14452
  %58 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %57, i32 %46, !dbg !14453
  %59 = load %struct.mxml_node_s*, %struct.mxml_node_s** %58, align 4, !dbg !14453
  br label %101, !dbg !14454

60:                                               ; preds = %35
  %61 = icmp slt i32 %43, 0, !dbg !14455
  %62 = select i1 %61, i32 %37, i32 %39
  %63 = select i1 %61, i32 %39, i32 %36
  call void @llvm.dbg.value(metadata i32 %63, metadata !14398, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata i32 %62, metadata !14397, metadata !DIExpression()), !dbg !14399
  %64 = sub nsw i32 %63, %62, !dbg !14457
  %65 = icmp sgt i32 %64, 1, !dbg !14421
  br i1 %65, label %35, label %29, !dbg !14422, !llvm.loop !14458

66:                                               ; preds = %33, %78
  %67 = phi i32 [ %30, %33 ], [ %73, %78 ]
  call void @llvm.dbg.value(metadata i32 %67, metadata !14396, metadata !DIExpression()), !dbg !14399
  %68 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %34, align 4, !dbg !14460
  %69 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %68, i32 %67, !dbg !14462
  %70 = load %struct.mxml_node_s*, %struct.mxml_node_s** %69, align 4, !dbg !14462
  %71 = tail call fastcc i32 @index_find(%struct.mxml_index_s* noundef nonnull %0, i8* noundef %1, i8* noundef %2, %struct.mxml_node_s* noundef %70) #20, !dbg !14463
  %72 = icmp eq i32 %71, 0, !dbg !14463
  %73 = add i32 %67, 1, !dbg !14464
  br i1 %72, label %74, label %78, !dbg !14465

74:                                               ; preds = %66
  store i32 %73, i32* %21, align 4, !dbg !14466
  %75 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %34, align 4, !dbg !14468
  %76 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %75, i32 %67, !dbg !14469
  %77 = load %struct.mxml_node_s*, %struct.mxml_node_s** %76, align 4, !dbg !14469
  br label %101, !dbg !14470

78:                                               ; preds = %66
  call void @llvm.dbg.value(metadata i32 %73, metadata !14396, metadata !DIExpression()), !dbg !14399
  %79 = icmp eq i32 %67, %31, !dbg !14425
  br i1 %79, label %80, label %66, !dbg !14428, !llvm.loop !14471

80:                                               ; preds = %78, %29
  %81 = load i32, i32* %17, align 4, !dbg !14473
  store i32 %81, i32* %21, align 4, !dbg !14474
  br label %101, !dbg !14475

82:                                               ; preds = %20
  %83 = icmp slt i32 %22, %18, !dbg !14476
  br i1 %83, label %84, label %99, !dbg !14478

84:                                               ; preds = %82
  %85 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 4, !dbg !14479
  %86 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %85, align 4, !dbg !14479
  %87 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %86, i32 %22, !dbg !14480
  %88 = load %struct.mxml_node_s*, %struct.mxml_node_s** %87, align 4, !dbg !14480
  %89 = tail call fastcc i32 @index_find(%struct.mxml_index_s* noundef nonnull %0, i8* noundef %1, i8* noundef %2, %struct.mxml_node_s* noundef %88) #20, !dbg !14481
  %90 = icmp eq i32 %89, 0, !dbg !14481
  br i1 %90, label %93, label %91, !dbg !14482

91:                                               ; preds = %84
  %92 = load i32, i32* %17, align 4, !dbg !14483
  br label %99, !dbg !14482

93:                                               ; preds = %84
  %94 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %85, align 4, !dbg !14484
  %95 = load i32, i32* %21, align 4, !dbg !14486
  %96 = add nsw i32 %95, 1, !dbg !14486
  store i32 %96, i32* %21, align 4, !dbg !14486
  %97 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %94, i32 %95, !dbg !14487
  %98 = load %struct.mxml_node_s*, %struct.mxml_node_s** %97, align 4, !dbg !14487
  br label %101, !dbg !14488

99:                                               ; preds = %91, %82
  %100 = phi i32 [ %92, %91 ], [ %18, %82 ], !dbg !14483
  store i32 %100, i32* %21, align 4, !dbg !14489
  br label %101, !dbg !14490

101:                                              ; preds = %16, %3, %5, %99, %93, %80, %74, %55, %14
  %102 = phi %struct.mxml_node_s* [ %59, %55 ], [ %77, %74 ], [ null, %80 ], [ null, %99 ], [ %98, %93 ], [ %15, %14 ], [ null, %5 ], [ null, %3 ], [ null, %16 ], !dbg !14399
  ret %struct.mxml_node_s* %102, !dbg !14491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @index_find(%struct.mxml_index_s* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, %struct.mxml_node_s* noundef %3) unnamed_addr #0 !dbg !14492 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14496, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i8* %1, metadata !14497, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata i8* %2, metadata !14498, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %3, metadata !14499, metadata !DIExpression()), !dbg !14501
  %5 = icmp eq i8* %1, null, !dbg !14502
  br i1 %5, label %12, label %6, !dbg !14504

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 6, !dbg !14505
  %8 = bitcast %union.mxml_value_u* %7 to i8**, !dbg !14508
  %9 = load i8*, i8** %8, align 8, !dbg !14508
  %10 = tail call i32 @strcmp(i8* noundef nonnull %1, i8* noundef %9) #18, !dbg !14509
  call void @llvm.dbg.value(metadata i32 %10, metadata !14500, metadata !DIExpression()), !dbg !14501
  %11 = icmp eq i32 %10, 0, !dbg !14510
  br i1 %11, label %12, label %21, !dbg !14511

12:                                               ; preds = %6, %4
  %13 = icmp eq i8* %2, null, !dbg !14512
  br i1 %13, label %20, label %14, !dbg !14514

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 0, !dbg !14515
  %16 = load i8*, i8** %15, align 4, !dbg !14515
  %17 = tail call i8* @mxmlElementGetAttr(%struct.mxml_node_s* noundef %3, i8* noundef %16) #18, !dbg !14518
  %18 = tail call i32 @strcmp(i8* noundef nonnull %2, i8* noundef %17) #18, !dbg !14519
  call void @llvm.dbg.value(metadata i32 %18, metadata !14500, metadata !DIExpression()), !dbg !14501
  %19 = icmp eq i32 %18, 0, !dbg !14520
  br i1 %19, label %20, label %21, !dbg !14521

20:                                               ; preds = %14, %12
  br label %21, !dbg !14522

21:                                               ; preds = %14, %6, %20
  %22 = phi i32 [ 0, %20 ], [ %10, %6 ], [ %18, %14 ], !dbg !14501
  ret i32 %22, !dbg !14523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @mxmlIndexGetCount(%struct.mxml_index_s* noundef readonly %0) local_unnamed_addr #9 !dbg !14524 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14528, metadata !DIExpression()), !dbg !14529
  %2 = icmp eq %struct.mxml_index_s* %0, null, !dbg !14530
  br i1 %2, label %6, label %3, !dbg !14532

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 1, !dbg !14533
  %5 = load i32, i32* %4, align 4, !dbg !14533
  br label %6, !dbg !14534

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ], !dbg !14529
  ret i32 %7, !dbg !14535
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_index_s* @mxmlIndexNew(%struct.mxml_node_s* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !14536 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14540, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.value(metadata i8* %1, metadata !14541, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.value(metadata i8* %2, metadata !14542, metadata !DIExpression()), !dbg !14546
  %4 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14547
  br i1 %4, label %77, label %5, !dbg !14549

5:                                                ; preds = %3
  %6 = tail call i8* @pvPortCalloc(i32 noundef 1, i32 noundef 20) #18, !dbg !14550
  %7 = bitcast i8* %6 to %struct.mxml_index_s*, !dbg !14550
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %7, metadata !14543, metadata !DIExpression()), !dbg !14546
  %8 = icmp eq i8* %6, null, !dbg !14552
  br i1 %8, label %9, label %13, !dbg !14553

9:                                                ; preds = %5
  %10 = tail call i32* @__errno() #18, !dbg !14554
  %11 = load i32, i32* %10, align 4, !dbg !14554
  %12 = tail call i8* @strerror(i32 noundef %11) #18, !dbg !14556
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.272, i32 0, i32 0), i32 noundef 20, i8* noundef %12) #18, !dbg !14557
  br label %77, !dbg !14558

13:                                               ; preds = %5
  %14 = icmp eq i8* %2, null, !dbg !14559
  br i1 %14, label %18, label %15, !dbg !14561

15:                                               ; preds = %13
  %16 = tail call i8* @_mxml_strdup(i8* noundef nonnull %2) #18, !dbg !14562
  %17 = bitcast i8* %6 to i8**, !dbg !14563
  store i8* %16, i8** %17, align 4, !dbg !14564
  br label %20, !dbg !14565

18:                                               ; preds = %13
  %19 = icmp eq i8* %1, null, !dbg !14567
  br i1 %19, label %23, label %20, !dbg !14565

20:                                               ; preds = %18, %15
  %21 = tail call %struct.mxml_node_s* @mxmlFindElement(%struct.mxml_node_s* noundef nonnull %0, %struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* noundef %2, i8* noundef null, i32 noundef 1) #18, !dbg !14568
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %21, metadata !14544, metadata !DIExpression()), !dbg !14546
  %22 = icmp eq %struct.mxml_node_s* %21, null, !dbg !14569
  br i1 %22, label %70, label %23, !dbg !14569

23:                                               ; preds = %18, %20
  %24 = phi %struct.mxml_node_s* [ %21, %20 ], [ %0, %18 ]
  %25 = getelementptr inbounds i8, i8* %6, i32 4
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds i8, i8* %6, i32 8
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds i8, i8* %6, i32 16
  %30 = bitcast i8* %29 to i8**
  %31 = bitcast i8* %29 to %struct.mxml_node_s***
  br label %32, !dbg !14569

32:                                               ; preds = %23, %63
  %33 = phi %struct.mxml_node_s* [ %24, %23 ], [ %68, %63 ]
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %33, metadata !14544, metadata !DIExpression()), !dbg !14546
  %34 = load i32, i32* %26, align 4, !dbg !14570
  %35 = load i32, i32* %28, align 4, !dbg !14573
  %36 = icmp slt i32 %34, %35, !dbg !14574
  br i1 %36, label %37, label %39, !dbg !14575

37:                                               ; preds = %32
  %38 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %31, align 4, !dbg !14576
  br label %63, !dbg !14575

39:                                               ; preds = %32
  %40 = icmp eq i32 %35, 0, !dbg !14577
  br i1 %40, label %41, label %43, !dbg !14580

41:                                               ; preds = %39
  %42 = tail call i8* @pvPortMalloc(i32 noundef 256) #18, !dbg !14581
  call void @llvm.dbg.value(metadata i8* %42, metadata !14545, metadata !DIExpression()), !dbg !14546
  br label %48, !dbg !14582

43:                                               ; preds = %39
  %44 = load i8*, i8** %30, align 4, !dbg !14583
  %45 = shl i32 %35, 2, !dbg !14584
  %46 = add i32 %45, 256, !dbg !14584
  %47 = tail call i8* @pvPortRealloc(i8* noundef %44, i32 noundef %46) #18, !dbg !14585
  call void @llvm.dbg.value(metadata i8* %47, metadata !14545, metadata !DIExpression()), !dbg !14546
  br label %48

48:                                               ; preds = %43, %41
  %49 = phi i8* [ %47, %43 ], [ %42, %41 ]
  call void @llvm.dbg.value(metadata i8* %49, metadata !14545, metadata !DIExpression()), !dbg !14546
  %50 = icmp eq i8* %49, null, !dbg !14586
  br i1 %50, label %51, label %58, !dbg !14588

51:                                               ; preds = %48
  %52 = load i32, i32* %28, align 4, !dbg !14589
  %53 = shl i32 %52, 2, !dbg !14591
  %54 = add i32 %53, 256, !dbg !14591
  %55 = tail call i32* @__errno() #18, !dbg !14592
  %56 = load i32, i32* %55, align 4, !dbg !14592
  %57 = tail call i8* @strerror(i32 noundef %56) #18, !dbg !14593
  tail call void (i8*, ...) @mxml_error(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1.273, i32 0, i32 0), i32 noundef %54, i8* noundef %57) #18, !dbg !14594
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %7) #20, !dbg !14595
  br label %77, !dbg !14596

58:                                               ; preds = %48
  call void @llvm.dbg.value(metadata i8* %49, metadata !14545, metadata !DIExpression()), !dbg !14546
  store i8* %49, i8** %30, align 4, !dbg !14597
  %59 = load i32, i32* %28, align 4, !dbg !14598
  %60 = add nsw i32 %59, 64, !dbg !14598
  store i32 %60, i32* %28, align 4, !dbg !14598
  %61 = bitcast i8* %49 to %struct.mxml_node_s**, !dbg !14599
  %62 = load i32, i32* %26, align 4, !dbg !14600
  br label %63, !dbg !14599

63:                                               ; preds = %37, %58
  %64 = phi i32 [ %34, %37 ], [ %62, %58 ], !dbg !14600
  %65 = phi %struct.mxml_node_s** [ %38, %37 ], [ %61, %58 ], !dbg !14576
  %66 = add nsw i32 %64, 1, !dbg !14600
  store i32 %66, i32* %26, align 4, !dbg !14600
  %67 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %65, i32 %64, !dbg !14601
  store %struct.mxml_node_s* %33, %struct.mxml_node_s** %67, align 4, !dbg !14602
  %68 = tail call %struct.mxml_node_s* @mxmlFindElement(%struct.mxml_node_s* noundef nonnull %33, %struct.mxml_node_s* noundef nonnull %0, i8* noundef %1, i8* noundef %2, i8* noundef null, i32 noundef 1) #18, !dbg !14603
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %68, metadata !14544, metadata !DIExpression()), !dbg !14546
  %69 = icmp eq %struct.mxml_node_s* %68, null, !dbg !14569
  br i1 %69, label %70, label %32, !dbg !14569, !llvm.loop !14604

70:                                               ; preds = %63, %20
  %71 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !14606
  %72 = bitcast i8* %71 to i32*, !dbg !14606
  %73 = load i32, i32* %72, align 4, !dbg !14606
  %74 = icmp sgt i32 %73, 1, !dbg !14608
  br i1 %74, label %75, label %77, !dbg !14609

75:                                               ; preds = %70
  %76 = add nsw i32 %73, -1, !dbg !14610
  tail call fastcc void @index_sort(%struct.mxml_index_s* noundef nonnull %7, i32 noundef 0, i32 noundef %76) #20, !dbg !14611
  br label %77, !dbg !14611

77:                                               ; preds = %70, %75, %3, %51, %9
  %78 = phi %struct.mxml_index_s* [ null, %9 ], [ null, %51 ], [ null, %3 ], [ %7, %75 ], [ %7, %70 ], !dbg !14546
  ret %struct.mxml_index_s* %78, !dbg !14612
}

; Function Attrs: optsize
declare dso_local i32* @__errno() local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i8* @strerror(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @index_sort(%struct.mxml_index_s* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !14613 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14617, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %1, metadata !14618, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %2, metadata !14619, metadata !DIExpression()), !dbg !14624
  %4 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 4
  br label %5, !dbg !14625

5:                                                ; preds = %67, %3
  %6 = phi i32 [ %1, %3 ], [ %68, %67 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !14618, metadata !DIExpression()), !dbg !14624
  %7 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %4, align 4, !dbg !14626
  %8 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %7, i32 %6, !dbg !14628
  %9 = load %struct.mxml_node_s*, %struct.mxml_node_s** %8, align 4, !dbg !14628
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %9, metadata !14620, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %6, metadata !14622, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %2, metadata !14623, metadata !DIExpression()), !dbg !14624
  %10 = icmp slt i32 %6, %2, !dbg !14629
  br i1 %10, label %11, label %49, !dbg !14632

11:                                               ; preds = %5, %42
  %12 = phi i32 [ %39, %42 ], [ %2, %5 ]
  %13 = phi i32 [ %26, %42 ], [ %6, %5 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !14623, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %13, metadata !14622, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %13, metadata !14622, metadata !DIExpression()), !dbg !14624
  %14 = icmp slt i32 %13, %2, !dbg !14633
  br i1 %14, label %15, label %25, !dbg !14635

15:                                               ; preds = %11, %22
  %16 = phi i32 [ %23, %22 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !14622, metadata !DIExpression()), !dbg !14624
  %17 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %4, align 4, !dbg !14636
  %18 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %17, i32 %16, !dbg !14637
  %19 = load %struct.mxml_node_s*, %struct.mxml_node_s** %18, align 4, !dbg !14637
  %20 = tail call fastcc i32 @index_compare(%struct.mxml_index_s* noundef nonnull %0, %struct.mxml_node_s* noundef %19, %struct.mxml_node_s* noundef %9) #20, !dbg !14638
  %21 = icmp slt i32 %20, 1, !dbg !14639
  br i1 %21, label %22, label %25, !dbg !14640

22:                                               ; preds = %15
  %23 = add i32 %16, 1, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %23, metadata !14622, metadata !DIExpression()), !dbg !14624
  %24 = icmp eq i32 %23, %2, !dbg !14633
  br i1 %24, label %25, label %15, !dbg !14635, !llvm.loop !14642

25:                                               ; preds = %15, %22, %11
  %26 = phi i32 [ %13, %11 ], [ %2, %22 ], [ %16, %15 ], !dbg !14643
  call void @llvm.dbg.value(metadata i32 %12, metadata !14623, metadata !DIExpression()), !dbg !14624
  %27 = icmp sgt i32 %12, %6, !dbg !14644
  br i1 %27, label %28, label %38, !dbg !14645

28:                                               ; preds = %25, %35
  %29 = phi i32 [ %36, %35 ], [ %12, %25 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !14623, metadata !DIExpression()), !dbg !14624
  %30 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %4, align 4, !dbg !14646
  %31 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %30, i32 %29, !dbg !14647
  %32 = load %struct.mxml_node_s*, %struct.mxml_node_s** %31, align 4, !dbg !14647
  %33 = tail call fastcc i32 @index_compare(%struct.mxml_index_s* noundef %0, %struct.mxml_node_s* noundef %32, %struct.mxml_node_s* noundef %9) #20, !dbg !14648
  %34 = icmp sgt i32 %33, 0, !dbg !14649
  br i1 %34, label %35, label %38, !dbg !14650

35:                                               ; preds = %28
  %36 = add nsw i32 %29, -1, !dbg !14651
  call void @llvm.dbg.value(metadata i32 %36, metadata !14623, metadata !DIExpression()), !dbg !14624
  %37 = icmp sgt i32 %36, %6, !dbg !14644
  br i1 %37, label %28, label %38, !dbg !14645, !llvm.loop !14652

38:                                               ; preds = %28, %35, %25
  %39 = phi i32 [ %12, %25 ], [ %6, %35 ], [ %29, %28 ], !dbg !14643
  %40 = icmp slt i32 %26, %39, !dbg !14653
  %41 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %4, align 4, !dbg !14655
  br i1 %40, label %42, label %49, !dbg !14656

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %41, i32 %26, !dbg !14657
  %44 = load %struct.mxml_node_s*, %struct.mxml_node_s** %43, align 4, !dbg !14657
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %44, metadata !14621, metadata !DIExpression()), !dbg !14624
  %45 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %41, i32 %39, !dbg !14659
  %46 = load %struct.mxml_node_s*, %struct.mxml_node_s** %45, align 4, !dbg !14659
  store %struct.mxml_node_s* %46, %struct.mxml_node_s** %43, align 4, !dbg !14660
  %47 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %4, align 4, !dbg !14661
  %48 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %47, i32 %39, !dbg !14662
  store %struct.mxml_node_s* %44, %struct.mxml_node_s** %48, align 4, !dbg !14663
  call void @llvm.dbg.value(metadata i32 %39, metadata !14623, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %26, metadata !14622, metadata !DIExpression()), !dbg !14624
  br label %11

49:                                               ; preds = %38, %5
  %50 = phi %struct.mxml_node_s** [ %7, %5 ], [ %41, %38 ], !dbg !14664
  %51 = phi i32 [ %2, %5 ], [ %39, %38 ], !dbg !14666
  %52 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %50, i32 %51, !dbg !14667
  %53 = load %struct.mxml_node_s*, %struct.mxml_node_s** %52, align 4, !dbg !14667
  %54 = tail call fastcc i32 @index_compare(%struct.mxml_index_s* noundef nonnull %0, %struct.mxml_node_s* noundef %9, %struct.mxml_node_s* noundef %53) #20, !dbg !14668
  %55 = icmp sgt i32 %54, 0, !dbg !14669
  br i1 %55, label %56, label %63, !dbg !14670

56:                                               ; preds = %49
  %57 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %4, align 4, !dbg !14671
  %58 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %57, i32 %51, !dbg !14673
  %59 = load %struct.mxml_node_s*, %struct.mxml_node_s** %58, align 4, !dbg !14673
  %60 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %57, i32 %6, !dbg !14674
  store %struct.mxml_node_s* %59, %struct.mxml_node_s** %60, align 4, !dbg !14675
  %61 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %4, align 4, !dbg !14676
  %62 = getelementptr inbounds %struct.mxml_node_s*, %struct.mxml_node_s** %61, i32 %51, !dbg !14677
  store %struct.mxml_node_s* %9, %struct.mxml_node_s** %62, align 4, !dbg !14678
  br label %63, !dbg !14679

63:                                               ; preds = %56, %49
  %64 = add nsw i32 %51, -1, !dbg !14680
  %65 = icmp slt i32 %6, %64, !dbg !14682
  br i1 %65, label %66, label %67, !dbg !14683

66:                                               ; preds = %63
  tail call fastcc void @index_sort(%struct.mxml_index_s* noundef nonnull %0, i32 noundef %6, i32 noundef %64) #20, !dbg !14684
  br label %67, !dbg !14684

67:                                               ; preds = %63, %66
  %68 = add nsw i32 %51, 1, !dbg !14685
  call void @llvm.dbg.value(metadata i32 %68, metadata !14618, metadata !DIExpression()), !dbg !14624
  %69 = icmp slt i32 %68, %2, !dbg !14686
  br i1 %69, label %5, label %70, !dbg !14687, !llvm.loop !14688

70:                                               ; preds = %67
  ret void, !dbg !14690
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @index_compare(%struct.mxml_index_s* nocapture noundef readonly %0, %struct.mxml_node_s* noundef %1, %struct.mxml_node_s* noundef %2) unnamed_addr #0 !dbg !14691 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14695, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %1, metadata !14696, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %2, metadata !14697, metadata !DIExpression()), !dbg !14699
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %1, i32 0, i32 6, !dbg !14700
  %5 = bitcast %union.mxml_value_u* %4 to i8**, !dbg !14702
  %6 = load i8*, i8** %5, align 8, !dbg !14702
  %7 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %2, i32 0, i32 6, !dbg !14703
  %8 = bitcast %union.mxml_value_u* %7 to i8**, !dbg !14704
  %9 = load i8*, i8** %8, align 8, !dbg !14704
  %10 = tail call i32 @strcmp(i8* noundef %6, i8* noundef %9) #18, !dbg !14705
  call void @llvm.dbg.value(metadata i32 %10, metadata !14698, metadata !DIExpression()), !dbg !14699
  %11 = icmp eq i32 %10, 0, !dbg !14706
  br i1 %11, label %12, label %23, !dbg !14707

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 0, !dbg !14708
  %14 = load i8*, i8** %13, align 4, !dbg !14708
  %15 = icmp eq i8* %14, null, !dbg !14710
  br i1 %15, label %22, label %16, !dbg !14711

16:                                               ; preds = %12
  %17 = tail call i8* @mxmlElementGetAttr(%struct.mxml_node_s* noundef nonnull %1, i8* noundef nonnull %14) #18, !dbg !14712
  %18 = load i8*, i8** %13, align 4, !dbg !14715
  %19 = tail call i8* @mxmlElementGetAttr(%struct.mxml_node_s* noundef nonnull %2, i8* noundef %18) #18, !dbg !14716
  %20 = tail call i32 @strcmp(i8* noundef %17, i8* noundef %19) #18, !dbg !14717
  call void @llvm.dbg.value(metadata i32 %20, metadata !14698, metadata !DIExpression()), !dbg !14699
  %21 = icmp eq i32 %20, 0, !dbg !14718
  br i1 %21, label %22, label %23, !dbg !14719

22:                                               ; preds = %16, %12
  br label %23, !dbg !14720

23:                                               ; preds = %16, %3, %22
  %24 = phi i32 [ 0, %22 ], [ %10, %3 ], [ %20, %16 ], !dbg !14699
  ret i32 %24, !dbg !14721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local %struct.mxml_node_s* @mxmlIndexReset(%struct.mxml_index_s* noundef %0) local_unnamed_addr #14 !dbg !14722 {
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %0, metadata !14724, metadata !DIExpression()), !dbg !14725
  %2 = icmp eq %struct.mxml_index_s* %0, null, !dbg !14726
  br i1 %2, label %12, label %3, !dbg !14728

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 3, !dbg !14729
  store i32 0, i32* %4, align 4, !dbg !14730
  %5 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 1, !dbg !14731
  %6 = load i32, i32* %5, align 4, !dbg !14731
  %7 = icmp eq i32 %6, 0, !dbg !14733
  br i1 %7, label %12, label %8, !dbg !14734

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %0, i32 0, i32 4, !dbg !14735
  %10 = load %struct.mxml_node_s**, %struct.mxml_node_s*** %9, align 4, !dbg !14735
  %11 = load %struct.mxml_node_s*, %struct.mxml_node_s** %10, align 4, !dbg !14736
  br label %12, !dbg !14737

12:                                               ; preds = %3, %1, %8
  %13 = phi %struct.mxml_node_s* [ %11, %8 ], [ null, %1 ], [ null, %3 ], !dbg !14725
  ret %struct.mxml_node_s* %13, !dbg !14738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @mxmlAdd(%struct.mxml_node_s* noundef %0, i32 noundef %1, %struct.mxml_node_s* noundef %2, %struct.mxml_node_s* noundef %3) local_unnamed_addr #14 !dbg !14739 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14788, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata i32 %1, metadata !14789, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %2, metadata !14790, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %3, metadata !14791, metadata !DIExpression()), !dbg !14792
  %5 = icmp ne %struct.mxml_node_s* %0, null, !dbg !14793
  %6 = icmp ne %struct.mxml_node_s* %3, null
  %7 = and i1 %5, %6, !dbg !14795
  br i1 %7, label %8, label %78, !dbg !14795

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 3, !dbg !14796
  %10 = load %struct.mxml_node_s*, %struct.mxml_node_s** %9, align 4, !dbg !14796
  %11 = icmp eq %struct.mxml_node_s* %10, null, !dbg !14798
  br i1 %11, label %13, label %12, !dbg !14799

12:                                               ; preds = %8
  tail call void @mxmlRemove(%struct.mxml_node_s* noundef nonnull %3) #20, !dbg !14800
  br label %13, !dbg !14800

13:                                               ; preds = %12, %8
  store %struct.mxml_node_s* %0, %struct.mxml_node_s** %9, align 4, !dbg !14801
  switch i32 %1, label %78 [
    i32 0, label %14
    i32 1, label %46
  ], !dbg !14802

14:                                               ; preds = %13
  %15 = icmp eq %struct.mxml_node_s* %2, null, !dbg !14803
  %16 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4
  %17 = load %struct.mxml_node_s*, %struct.mxml_node_s** %16, align 8, !dbg !14806
  br i1 %15, label %24, label %18, !dbg !14807

18:                                               ; preds = %14
  %19 = icmp eq %struct.mxml_node_s* %17, %2, !dbg !14808
  br i1 %19, label %24, label %20, !dbg !14809

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %2, i32 0, i32 3, !dbg !14810
  %22 = load %struct.mxml_node_s*, %struct.mxml_node_s** %21, align 4, !dbg !14810
  %23 = icmp eq %struct.mxml_node_s* %22, %0, !dbg !14811
  br i1 %23, label %35, label %24, !dbg !14812

24:                                               ; preds = %14, %20, %18
  %25 = phi %struct.mxml_node_s* [ %17, %20 ], [ %2, %18 ], [ %17, %14 ], !dbg !14813
  %26 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14813
  %27 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 1, !dbg !14815
  store %struct.mxml_node_s* %25, %struct.mxml_node_s** %27, align 4, !dbg !14816
  %28 = load %struct.mxml_node_s*, %struct.mxml_node_s** %26, align 8, !dbg !14817
  %29 = icmp eq %struct.mxml_node_s* %28, null, !dbg !14819
  br i1 %29, label %32, label %30, !dbg !14820

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %28, i32 0, i32 2, !dbg !14821
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %31, align 8, !dbg !14822
  br label %34, !dbg !14823

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 5, !dbg !14824
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %33, align 4, !dbg !14825
  br label %34

34:                                               ; preds = %32, %30
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %26, align 8, !dbg !14826
  br label %78, !dbg !14827

35:                                               ; preds = %20
  %36 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 1, !dbg !14828
  store %struct.mxml_node_s* %2, %struct.mxml_node_s** %36, align 4, !dbg !14830
  %37 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %2, i32 0, i32 2, !dbg !14831
  %38 = load %struct.mxml_node_s*, %struct.mxml_node_s** %37, align 8, !dbg !14831
  %39 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 2, !dbg !14832
  store %struct.mxml_node_s* %38, %struct.mxml_node_s** %39, align 8, !dbg !14833
  %40 = load %struct.mxml_node_s*, %struct.mxml_node_s** %37, align 8, !dbg !14834
  %41 = icmp eq %struct.mxml_node_s* %40, null, !dbg !14836
  br i1 %41, label %44, label %42, !dbg !14837

42:                                               ; preds = %35
  %43 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %40, i32 0, i32 1, !dbg !14838
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %43, align 4, !dbg !14839
  br label %45, !dbg !14840

44:                                               ; preds = %35
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %16, align 8, !dbg !14841
  br label %45

45:                                               ; preds = %44, %42
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %37, align 8, !dbg !14842
  br label %78

46:                                               ; preds = %13
  %47 = icmp eq %struct.mxml_node_s* %2, null, !dbg !14843
  br i1 %47, label %56, label %48, !dbg !14845

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 5, !dbg !14846
  %50 = load %struct.mxml_node_s*, %struct.mxml_node_s** %49, align 4, !dbg !14846
  %51 = icmp eq %struct.mxml_node_s* %50, %2, !dbg !14847
  br i1 %51, label %56, label %52, !dbg !14848

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %2, i32 0, i32 3, !dbg !14849
  %54 = load %struct.mxml_node_s*, %struct.mxml_node_s** %53, align 4, !dbg !14849
  %55 = icmp eq %struct.mxml_node_s* %54, %0, !dbg !14850
  br i1 %55, label %67, label %56, !dbg !14851

56:                                               ; preds = %52, %48, %46
  %57 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 5, !dbg !14852
  %58 = load %struct.mxml_node_s*, %struct.mxml_node_s** %57, align 4, !dbg !14852
  %59 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 2, !dbg !14854
  store %struct.mxml_node_s* %58, %struct.mxml_node_s** %59, align 8, !dbg !14855
  %60 = load %struct.mxml_node_s*, %struct.mxml_node_s** %57, align 4, !dbg !14856
  %61 = icmp eq %struct.mxml_node_s* %60, null, !dbg !14858
  br i1 %61, label %64, label %62, !dbg !14859

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %60, i32 0, i32 1, !dbg !14860
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %63, align 4, !dbg !14861
  br label %66, !dbg !14862

64:                                               ; preds = %56
  %65 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !14863
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %65, align 8, !dbg !14864
  br label %66

66:                                               ; preds = %64, %62
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %57, align 4, !dbg !14865
  br label %78, !dbg !14866

67:                                               ; preds = %52
  %68 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 2, !dbg !14867
  store %struct.mxml_node_s* %2, %struct.mxml_node_s** %68, align 8, !dbg !14869
  %69 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %2, i32 0, i32 1, !dbg !14870
  %70 = load %struct.mxml_node_s*, %struct.mxml_node_s** %69, align 4, !dbg !14870
  %71 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 1, !dbg !14871
  store %struct.mxml_node_s* %70, %struct.mxml_node_s** %71, align 4, !dbg !14872
  %72 = load %struct.mxml_node_s*, %struct.mxml_node_s** %69, align 4, !dbg !14873
  %73 = icmp eq %struct.mxml_node_s* %72, null, !dbg !14875
  br i1 %73, label %76, label %74, !dbg !14876

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %72, i32 0, i32 2, !dbg !14877
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %75, align 8, !dbg !14878
  br label %77, !dbg !14879

76:                                               ; preds = %67
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %49, align 4, !dbg !14880
  br label %77

77:                                               ; preds = %76, %74
  store %struct.mxml_node_s* %3, %struct.mxml_node_s** %69, align 4, !dbg !14881
  br label %78

78:                                               ; preds = %66, %77, %34, %45, %4, %13
  ret void, !dbg !14882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @mxmlRemove(%struct.mxml_node_s* noundef %0) local_unnamed_addr #14 !dbg !14883 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14887, metadata !DIExpression()), !dbg !14888
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14889
  br i1 %2, label %28, label %3, !dbg !14891

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 3, !dbg !14892
  %5 = load %struct.mxml_node_s*, %struct.mxml_node_s** %4, align 4, !dbg !14892
  %6 = icmp eq %struct.mxml_node_s* %5, null, !dbg !14893
  br i1 %6, label %28, label %7, !dbg !14894

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 2, !dbg !14895
  %9 = load %struct.mxml_node_s*, %struct.mxml_node_s** %8, align 8, !dbg !14895
  %10 = icmp eq %struct.mxml_node_s* %9, null, !dbg !14897
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 1, !dbg !14898
  %12 = load %struct.mxml_node_s*, %struct.mxml_node_s** %11, align 4, !dbg !14898
  br i1 %10, label %15, label %13, !dbg !14899

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %9, i32 0, i32 1, !dbg !14900
  store %struct.mxml_node_s* %12, %struct.mxml_node_s** %14, align 4, !dbg !14901
  br label %17, !dbg !14902

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %5, i32 0, i32 4, !dbg !14903
  store %struct.mxml_node_s* %12, %struct.mxml_node_s** %16, align 8, !dbg !14904
  br label %17

17:                                               ; preds = %15, %13
  %18 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 1, !dbg !14905
  %19 = load %struct.mxml_node_s*, %struct.mxml_node_s** %18, align 4, !dbg !14905
  %20 = icmp eq %struct.mxml_node_s* %19, null, !dbg !14907
  %21 = load %struct.mxml_node_s*, %struct.mxml_node_s** %8, align 8, !dbg !14908
  br i1 %20, label %24, label %22, !dbg !14909

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %19, i32 0, i32 2, !dbg !14910
  store %struct.mxml_node_s* %21, %struct.mxml_node_s** %23, align 8, !dbg !14911
  br label %27, !dbg !14912

24:                                               ; preds = %17
  %25 = load %struct.mxml_node_s*, %struct.mxml_node_s** %4, align 4, !dbg !14913
  %26 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %25, i32 0, i32 5, !dbg !14914
  store %struct.mxml_node_s* %21, %struct.mxml_node_s** %26, align 4, !dbg !14915
  br label %27

27:                                               ; preds = %24, %22
  store %struct.mxml_node_s* null, %struct.mxml_node_s** %4, align 4, !dbg !14916
  store %struct.mxml_node_s* null, %struct.mxml_node_s** %8, align 8, !dbg !14917
  store %struct.mxml_node_s* null, %struct.mxml_node_s** %18, align 4, !dbg !14918
  br label %28, !dbg !14919

28:                                               ; preds = %1, %3, %27
  ret void, !dbg !14919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxmlDelete(%struct.mxml_node_s* noundef %0) local_unnamed_addr #0 !dbg !14920 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !14922, metadata !DIExpression()), !dbg !14924
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !14925
  br i1 %2, label %78, label %3, !dbg !14927

3:                                                ; preds = %1
  tail call void @mxmlRemove(%struct.mxml_node_s* noundef nonnull %0) #20, !dbg !14928
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4
  %5 = load %struct.mxml_node_s*, %struct.mxml_node_s** %4, align 8, !dbg !14929
  %6 = icmp eq %struct.mxml_node_s* %5, null, !dbg !14930
  br i1 %6, label %11, label %7, !dbg !14930

7:                                                ; preds = %3, %7
  %8 = phi %struct.mxml_node_s* [ %9, %7 ], [ %5, %3 ]
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %8) #20, !dbg !14931
  %9 = load %struct.mxml_node_s*, %struct.mxml_node_s** %4, align 8, !dbg !14929
  %10 = icmp eq %struct.mxml_node_s* %9, null, !dbg !14930
  br i1 %10, label %11, label %7, !dbg !14930, !llvm.loop !14932

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 0, !dbg !14934
  %13 = load i32, i32* %12, align 8, !dbg !14934
  switch i32 %13, label %76 [
    i32 0, label %14
    i32 5, label %65
    i32 2, label %52
    i32 4, label %58
  ], !dbg !14935

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14936
  %16 = bitcast %union.mxml_value_u* %15 to %struct.mxml_element_s*, !dbg !14939
  %17 = bitcast %union.mxml_value_u* %15 to i8**, !dbg !14940
  %18 = load i8*, i8** %17, align 8, !dbg !14940
  %19 = icmp eq i8* %18, null, !dbg !14941
  br i1 %19, label %21, label %20, !dbg !14942

20:                                               ; preds = %14
  tail call void @vPortFree(i8* noundef nonnull %18) #18, !dbg !14943
  br label %21, !dbg !14945

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %struct.mxml_element_s, %struct.mxml_element_s* %16, i32 0, i32 1, !dbg !14946
  %23 = load i32, i32* %22, align 4, !dbg !14946
  %24 = icmp eq i32 %23, 0, !dbg !14948
  br i1 %24, label %76, label %25, !dbg !14949

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 0, metadata !14923, metadata !DIExpression()), !dbg !14924
  %26 = icmp sgt i32 %23, 0, !dbg !14950
  br i1 %26, label %27, label %48, !dbg !14954

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, i32 1
  %29 = bitcast [8 x i8]* %28 to %struct.QUEUE_REGISTRY_ITEM**
  br label %30, !dbg !14954

30:                                               ; preds = %27, %44
  %31 = phi i32 [ 0, %27 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %31, metadata !14923, metadata !DIExpression()), !dbg !14924
  %32 = load %struct.QUEUE_REGISTRY_ITEM*, %struct.QUEUE_REGISTRY_ITEM** %29, align 8, !dbg !14955
  %33 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %32, i32 %31, i32 0, !dbg !14958
  %34 = load i8*, i8** %33, align 4, !dbg !14958
  %35 = icmp eq i8* %34, null, !dbg !14959
  br i1 %35, label %38, label %36, !dbg !14960

36:                                               ; preds = %30
  tail call void @vPortFree(i8* noundef nonnull %34) #18, !dbg !14961
  %37 = load %struct.QUEUE_REGISTRY_ITEM*, %struct.QUEUE_REGISTRY_ITEM** %29, align 8, !dbg !14962
  br label %38, !dbg !14961

38:                                               ; preds = %36, %30
  %39 = phi %struct.QUEUE_REGISTRY_ITEM* [ %37, %36 ], [ %32, %30 ], !dbg !14962
  %40 = getelementptr inbounds %struct.QUEUE_REGISTRY_ITEM, %struct.QUEUE_REGISTRY_ITEM* %39, i32 %31, i32 1, !dbg !14964
  %41 = load i8*, i8** %40, align 4, !dbg !14964
  %42 = icmp eq i8* %41, null, !dbg !14965
  br i1 %42, label %44, label %43, !dbg !14966

43:                                               ; preds = %38
  tail call void @vPortFree(i8* noundef nonnull %41) #18, !dbg !14967
  br label %44, !dbg !14967

44:                                               ; preds = %38, %43
  %45 = add nuw nsw i32 %31, 1, !dbg !14968
  call void @llvm.dbg.value(metadata i32 %45, metadata !14923, metadata !DIExpression()), !dbg !14924
  %46 = load i32, i32* %22, align 4, !dbg !14969
  %47 = icmp slt i32 %45, %46, !dbg !14950
  br i1 %47, label %30, label %48, !dbg !14954, !llvm.loop !14970

48:                                               ; preds = %44, %25
  %49 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, i32 1, !dbg !14972
  %50 = bitcast [8 x i8]* %49 to i8**, !dbg !14972
  %51 = load i8*, i8** %50, align 8, !dbg !14972
  tail call void @vPortFree(i8* noundef %51) #18, !dbg !14973
  br label %76, !dbg !14974

52:                                               ; preds = %11
  %53 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14975
  %54 = bitcast %union.mxml_value_u* %53 to i8**, !dbg !14977
  %55 = load i8*, i8** %54, align 8, !dbg !14977
  %56 = icmp eq i8* %55, null, !dbg !14978
  br i1 %56, label %76, label %57, !dbg !14979

57:                                               ; preds = %52
  tail call void @vPortFree(i8* noundef nonnull %55) #18, !dbg !14980
  br label %76, !dbg !14980

58:                                               ; preds = %11
  %59 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14981
  %60 = bitcast %union.mxml_value_u* %59 to %struct.mxml_text_s*, !dbg !14983
  %61 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %60, i32 0, i32 1, !dbg !14984
  %62 = load i8*, i8** %61, align 4, !dbg !14984
  %63 = icmp eq i8* %62, null, !dbg !14985
  br i1 %63, label %76, label %64, !dbg !14986

64:                                               ; preds = %58
  tail call void @vPortFree(i8* noundef nonnull %62) #18, !dbg !14987
  br label %76, !dbg !14987

65:                                               ; preds = %11
  %66 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !14988
  %67 = bitcast %union.mxml_value_u* %66 to i8**, !dbg !14990
  %68 = load i8*, i8** %67, align 8, !dbg !14990
  %69 = icmp eq i8* %68, null, !dbg !14991
  br i1 %69, label %76, label %70, !dbg !14992

70:                                               ; preds = %65
  %71 = bitcast %union.mxml_value_u* %66 to %struct.mxml_custom_s*, !dbg !14993
  %72 = getelementptr inbounds %struct.mxml_custom_s, %struct.mxml_custom_s* %71, i32 0, i32 1, !dbg !14994
  %73 = load void (i8*)*, void (i8*)** %72, align 4, !dbg !14994
  %74 = icmp eq void (i8*)* %73, null, !dbg !14995
  br i1 %74, label %76, label %75, !dbg !14996

75:                                               ; preds = %70
  tail call void %73(i8* noundef nonnull %68) #18, !dbg !14997
  br label %76, !dbg !14997

76:                                               ; preds = %11, %65, %70, %75, %58, %64, %52, %57, %21, %48
  %77 = bitcast %struct.mxml_node_s* %0 to i8*, !dbg !14998
  tail call void @vPortFree(i8* noundef nonnull %77) #18, !dbg !14999
  br label %78, !dbg !15000

78:                                               ; preds = %1, %76
  ret void, !dbg !15000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @mxmlGetRefCount(%struct.mxml_node_s* noundef readonly %0) local_unnamed_addr #9 !dbg !15001 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15005, metadata !DIExpression()), !dbg !15006
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !15007
  br i1 %2, label %6, label %3, !dbg !15009

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 7, !dbg !15010
  %5 = load i32, i32* %4, align 8, !dbg !15010
  br label %6, !dbg !15011

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ], !dbg !15006
  ret i32 %7, !dbg !15012
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewCDATA(%struct.mxml_node_s* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !15013 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15017, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i8* %1, metadata !15018, metadata !DIExpression()), !dbg !15020
  %3 = icmp eq i8* %1, null, !dbg !15021
  br i1 %3, label %11, label %4, !dbg !15023

4:                                                ; preds = %2
  %5 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 0) #20, !dbg !15024
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %5, metadata !15019, metadata !DIExpression()), !dbg !15020
  %6 = icmp eq %struct.mxml_node_s* %5, null, !dbg !15026
  br i1 %6, label %11, label %7, !dbg !15027

7:                                                ; preds = %4
  %8 = tail call i8* (i8*, ...) @_mxml_strdupf(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.276, i32 0, i32 0), i8* noundef nonnull %1) #18, !dbg !15028
  %9 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %5, i32 0, i32 6, !dbg !15029
  %10 = bitcast %union.mxml_value_u* %9 to i8**, !dbg !15030
  store i8* %8, i8** %10, align 8, !dbg !15031
  br label %11, !dbg !15032

11:                                               ; preds = %4, %7, %2
  %12 = phi %struct.mxml_node_s* [ null, %2 ], [ %5, %7 ], [ null, %4 ], !dbg !15020
  ret %struct.mxml_node_s* %12, !dbg !15033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !15034 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15038, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i32 %1, metadata !15039, metadata !DIExpression()), !dbg !15041
  %3 = tail call i8* @pvPortCalloc(i32 noundef 1, i32 noundef 48) #18, !dbg !15042
  %4 = bitcast i8* %3 to %struct.mxml_node_s*, !dbg !15042
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %4, metadata !15040, metadata !DIExpression()), !dbg !15041
  %5 = icmp eq i8* %3, null, !dbg !15044
  br i1 %5, label %12, label %6, !dbg !15045

6:                                                ; preds = %2
  %7 = bitcast i8* %3 to i32*, !dbg !15046
  store i32 %1, i32* %7, align 8, !dbg !15047
  %8 = getelementptr inbounds i8, i8* %3, i32 40, !dbg !15048
  %9 = bitcast i8* %8 to i32*, !dbg !15048
  store i32 1, i32* %9, align 8, !dbg !15049
  %10 = icmp eq %struct.mxml_node_s* %0, null, !dbg !15050
  br i1 %10, label %12, label %11, !dbg !15052

11:                                               ; preds = %6
  tail call void @mxmlAdd(%struct.mxml_node_s* noundef nonnull %0, i32 noundef 1, %struct.mxml_node_s* noundef null, %struct.mxml_node_s* noundef nonnull %4) #20, !dbg !15053
  br label %12, !dbg !15053

12:                                               ; preds = %6, %11, %2
  %13 = phi %struct.mxml_node_s* [ null, %2 ], [ %4, %11 ], [ %4, %6 ], !dbg !15041
  ret %struct.mxml_node_s* %13, !dbg !15054
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewCustom(%struct.mxml_node_s* noundef %0, i8* noundef %1, void (i8*)* noundef %2) local_unnamed_addr #0 !dbg !15055 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15059, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.value(metadata i8* %1, metadata !15060, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !15061, metadata !DIExpression()), !dbg !15063
  %4 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 5) #20, !dbg !15064
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %4, metadata !15062, metadata !DIExpression()), !dbg !15063
  %5 = icmp eq %struct.mxml_node_s* %4, null, !dbg !15066
  br i1 %5, label %11, label %6, !dbg !15067

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %4, i32 0, i32 6, !dbg !15068
  %8 = bitcast %union.mxml_value_u* %7 to %struct.mxml_custom_s*, !dbg !15070
  %9 = bitcast %union.mxml_value_u* %7 to i8**, !dbg !15071
  store i8* %1, i8** %9, align 8, !dbg !15072
  %10 = getelementptr inbounds %struct.mxml_custom_s, %struct.mxml_custom_s* %8, i32 0, i32 1, !dbg !15073
  store void (i8*)* %2, void (i8*)** %10, align 4, !dbg !15074
  br label %11, !dbg !15075

11:                                               ; preds = %6, %3
  ret %struct.mxml_node_s* %4, !dbg !15076
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15079, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata i8* %1, metadata !15080, metadata !DIExpression()), !dbg !15082
  %3 = icmp eq i8* %1, null, !dbg !15083
  br i1 %3, label %11, label %4, !dbg !15085

4:                                                ; preds = %2
  %5 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 0) #20, !dbg !15086
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %5, metadata !15081, metadata !DIExpression()), !dbg !15082
  %6 = icmp eq %struct.mxml_node_s* %5, null, !dbg !15088
  br i1 %6, label %11, label %7, !dbg !15089

7:                                                ; preds = %4
  %8 = tail call i8* @_mxml_strdup(i8* noundef nonnull %1) #18, !dbg !15090
  %9 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %5, i32 0, i32 6, !dbg !15091
  %10 = bitcast %union.mxml_value_u* %9 to i8**, !dbg !15092
  store i8* %8, i8** %10, align 8, !dbg !15093
  br label %11, !dbg !15094

11:                                               ; preds = %4, %7, %2
  %12 = phi %struct.mxml_node_s* [ null, %2 ], [ %5, %7 ], [ null, %4 ], !dbg !15082
  ret %struct.mxml_node_s* %12, !dbg !15095
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewInteger(%struct.mxml_node_s* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !15096 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15100, metadata !DIExpression()), !dbg !15103
  call void @llvm.dbg.value(metadata i32 %1, metadata !15101, metadata !DIExpression()), !dbg !15103
  %3 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 1) #20, !dbg !15104
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %3, metadata !15102, metadata !DIExpression()), !dbg !15103
  %4 = icmp eq %struct.mxml_node_s* %3, null, !dbg !15106
  br i1 %4, label %8, label %5, !dbg !15107

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 6, !dbg !15108
  %7 = bitcast %union.mxml_value_u* %6 to i32*, !dbg !15109
  store i32 %1, i32* %7, align 8, !dbg !15110
  br label %8, !dbg !15111

8:                                                ; preds = %5, %2
  ret %struct.mxml_node_s* %3, !dbg !15112
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewOpaque(%struct.mxml_node_s* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !15113 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15115, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i8* %1, metadata !15116, metadata !DIExpression()), !dbg !15118
  %3 = icmp eq i8* %1, null, !dbg !15119
  br i1 %3, label %11, label %4, !dbg !15121

4:                                                ; preds = %2
  %5 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 2) #20, !dbg !15122
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %5, metadata !15117, metadata !DIExpression()), !dbg !15118
  %6 = icmp eq %struct.mxml_node_s* %5, null, !dbg !15124
  br i1 %6, label %11, label %7, !dbg !15125

7:                                                ; preds = %4
  %8 = tail call i8* @_mxml_strdup(i8* noundef nonnull %1) #18, !dbg !15126
  %9 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %5, i32 0, i32 6, !dbg !15127
  %10 = bitcast %union.mxml_value_u* %9 to i8**, !dbg !15128
  store i8* %8, i8** %10, align 8, !dbg !15129
  br label %11, !dbg !15130

11:                                               ; preds = %4, %7, %2
  %12 = phi %struct.mxml_node_s* [ null, %2 ], [ %5, %7 ], [ null, %4 ], !dbg !15118
  ret %struct.mxml_node_s* %12, !dbg !15131
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewReal(%struct.mxml_node_s* noundef %0, double noundef %1) local_unnamed_addr #0 !dbg !15132 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15136, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata double %1, metadata !15137, metadata !DIExpression()), !dbg !15139
  %3 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 3) #20, !dbg !15140
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %3, metadata !15138, metadata !DIExpression()), !dbg !15139
  %4 = icmp eq %struct.mxml_node_s* %3, null, !dbg !15142
  br i1 %4, label %7, label %5, !dbg !15143

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %3, i32 0, i32 6, i32 0, !dbg !15144
  store double %1, double* %6, align 8, !dbg !15145
  br label %7, !dbg !15146

7:                                                ; preds = %5, %2
  ret %struct.mxml_node_s* %3, !dbg !15147
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewText(%struct.mxml_node_s* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !15148 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15152, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 %1, metadata !15153, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i8* %2, metadata !15154, metadata !DIExpression()), !dbg !15156
  %4 = icmp eq i8* %2, null, !dbg !15157
  br i1 %4, label %14, label %5, !dbg !15159

5:                                                ; preds = %3
  %6 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 4) #20, !dbg !15160
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %6, metadata !15155, metadata !DIExpression()), !dbg !15156
  %7 = icmp eq %struct.mxml_node_s* %6, null, !dbg !15162
  br i1 %7, label %14, label %8, !dbg !15163

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %6, i32 0, i32 6, !dbg !15164
  %10 = bitcast %union.mxml_value_u* %9 to %struct.mxml_text_s*, !dbg !15166
  %11 = bitcast %union.mxml_value_u* %9 to i32*, !dbg !15167
  store i32 %1, i32* %11, align 8, !dbg !15168
  %12 = tail call i8* @_mxml_strdup(i8* noundef nonnull %2) #18, !dbg !15169
  %13 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %10, i32 0, i32 1, !dbg !15170
  store i8* %12, i8** %13, align 4, !dbg !15171
  br label %14, !dbg !15172

14:                                               ; preds = %5, %8, %3
  %15 = phi %struct.mxml_node_s* [ null, %3 ], [ %6, %8 ], [ null, %5 ], !dbg !15156
  ret %struct.mxml_node_s* %15, !dbg !15173
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewTextf(%struct.mxml_node_s* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !15174 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15178, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i32 %1, metadata !15179, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i8* %2, metadata !15180, metadata !DIExpression()), !dbg !15189
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !15190
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !15190
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !15182, metadata !DIExpression()), !dbg !15191
  %6 = icmp eq i8* %2, null, !dbg !15192
  br i1 %6, label %19, label %7, !dbg !15194

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.mxml_node_s* @mxml_new(%struct.mxml_node_s* noundef %0, i32 noundef 4) #20, !dbg !15195
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %8, metadata !15181, metadata !DIExpression()), !dbg !15189
  %9 = icmp eq %struct.mxml_node_s* %8, null, !dbg !15197
  br i1 %9, label %19, label %10, !dbg !15198

10:                                               ; preds = %7
  call void @llvm.va_start(i8* nonnull %5), !dbg !15199
  %11 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %8, i32 0, i32 6, !dbg !15201
  %12 = bitcast %union.mxml_value_u* %11 to %struct.mxml_text_s*, !dbg !15202
  %13 = bitcast %union.mxml_value_u* %11 to i32*, !dbg !15203
  store i32 %1, i32* %13, align 8, !dbg !15204
  %14 = bitcast %struct.__va_list* %4 to i32*, !dbg !15205
  %15 = load i32, i32* %14, align 4, !dbg !15205
  %16 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !15205
  %17 = call i8* @_mxml_vstrdupf(i8* noundef nonnull %2, [1 x i32] %16) #18, !dbg !15205
  %18 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %12, i32 0, i32 1, !dbg !15206
  store i8* %17, i8** %18, align 4, !dbg !15207
  call void @llvm.va_end(i8* nonnull %5), !dbg !15208
  br label %19, !dbg !15209

19:                                               ; preds = %7, %10, %3
  %20 = phi %struct.mxml_node_s* [ null, %3 ], [ %8, %10 ], [ null, %7 ], !dbg !15189
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !15210
  ret %struct.mxml_node_s* %20, !dbg !15210
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlNewXML(i8* noundef %0) local_unnamed_addr #0 !dbg !15211 {
  %2 = alloca [1024 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !15215, metadata !DIExpression()), !dbg !15220
  %3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i32 0, i32 0, !dbg !15221
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %3) #17, !dbg !15221
  call void @llvm.dbg.declare(metadata [1024 x i8]* %2, metadata !15216, metadata !DIExpression()), !dbg !15222
  %4 = icmp eq i8* %0, null, !dbg !15223
  %5 = select i1 %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.289, i32 0, i32 0), i8* %0, !dbg !15223
  %6 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef nonnull %3, i32 noundef 1024, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1.290, i32 0, i32 0), i8* noundef %5) #18, !dbg !15224
  %7 = call %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef null, i8* noundef nonnull %3) #20, !dbg !15225
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %3) #17, !dbg !15226
  ret %struct.mxml_node_s* %7, !dbg !15227
}

; Function Attrs: optsize
declare dso_local i32 @snprintf(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @mxmlRelease(%struct.mxml_node_s* noundef %0) local_unnamed_addr #0 !dbg !15228 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15230, metadata !DIExpression()), !dbg !15231
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !15232
  br i1 %2, label %9, label %3, !dbg !15234

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 7, !dbg !15235
  %5 = load i32, i32* %4, align 8, !dbg !15238
  %6 = add nsw i32 %5, -1, !dbg !15238
  store i32 %6, i32* %4, align 8, !dbg !15238
  %7 = icmp slt i32 %5, 2, !dbg !15239
  br i1 %7, label %8, label %9, !dbg !15240

8:                                                ; preds = %3
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %0) #20, !dbg !15241
  br label %9, !dbg !15243

9:                                                ; preds = %1, %3, %8
  %10 = phi i32 [ 0, %8 ], [ %6, %3 ], [ -1, %1 ], !dbg !15244
  ret i32 %10, !dbg !15245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @mxmlRetain(%struct.mxml_node_s* noundef %0) local_unnamed_addr #14 !dbg !15246 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15248, metadata !DIExpression()), !dbg !15249
  %2 = icmp eq %struct.mxml_node_s* %0, null, !dbg !15250
  br i1 %2, label %7, label %3, !dbg !15252

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 7, !dbg !15253
  %5 = load i32, i32* %4, align 8, !dbg !15254
  %6 = add nsw i32 %5, 1, !dbg !15254
  store i32 %6, i32* %4, align 8, !dbg !15254
  br label %7, !dbg !15255

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ -1, %1 ], !dbg !15256
  ret i32 %8, !dbg !15257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mxml_error(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !15258 {
  %2 = alloca %struct.__va_list, align 4
  %3 = alloca [1024 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !15262, metadata !DIExpression()), !dbg !15272
  %4 = bitcast %struct.__va_list* %2 to i8*, !dbg !15273
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !15273
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !15263, metadata !DIExpression()), !dbg !15274
  %5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0, !dbg !15275
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #17, !dbg !15275
  call void @llvm.dbg.declare(metadata [1024 x i8]* %3, metadata !15270, metadata !DIExpression()), !dbg !15276
  call void @llvm.dbg.value(metadata %struct._mxml_global_s* bitcast ({ void (i8*)*, i32, <{ i32 (i8*)*, [9 x i32 (i8*)*] }>, i32, i32 (%struct.mxml_node_s*, i8*)*, i8* (%struct.mxml_node_s*)* }* @_mxml_global.global to %struct._mxml_global_s*), metadata !15271, metadata !DIExpression()), !dbg !15272
  %6 = icmp eq i8* %0, null, !dbg !15277
  br i1 %6, label %20, label %7, !dbg !15279

7:                                                ; preds = %1
  call void @llvm.va_start(i8* nonnull %4), !dbg !15280
  %8 = bitcast %struct.__va_list* %2 to i32*, !dbg !15281
  %9 = load i32, i32* %8, align 4, !dbg !15281
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !15281
  %11 = call i32 @vsnprintf(i8* noundef nonnull %5, i32 noundef 1024, i8* noundef nonnull %0, [1 x i32] %10) #18, !dbg !15281
  call void @llvm.va_end(i8* nonnull %4), !dbg !15282
  %12 = load void (i8*)*, void (i8*)** getelementptr inbounds ({ void (i8*)*, i32, <{ i32 (i8*)*, [9 x i32 (i8*)*] }>, i32, i32 (%struct.mxml_node_s*, i8*)*, i8* (%struct.mxml_node_s*)* }, { void (i8*)*, i32, <{ i32 (i8*)*, [9 x i32 (i8*)*] }>, i32, i32 (%struct.mxml_node_s*, i8*)*, i8* (%struct.mxml_node_s*)* }* @_mxml_global.global, i32 0, i32 0), align 4, !dbg !15283
  %13 = icmp eq void (i8*)* %12, null, !dbg !15285
  br i1 %13, label %15, label %14, !dbg !15286

14:                                               ; preds = %7
  call void %12(i8* noundef nonnull %5) #18, !dbg !15287
  br label %20, !dbg !15287

15:                                               ; preds = %7
  %16 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !15288
  %17 = getelementptr inbounds %struct._reent, %struct._reent* %16, i32 0, i32 3, !dbg !15288
  %18 = load %struct.__sFILE*, %struct.__sFILE** %17, align 4, !dbg !15288
  %19 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %18, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.295, i32 0, i32 0), i8* noundef nonnull %5) #18, !dbg !15289
  br label %20

20:                                               ; preds = %14, %15, %1
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #17, !dbg !15290
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !15290
  ret void, !dbg !15290
}

; Function Attrs: optsize
declare dso_local i32 @vsnprintf(i8* noundef, i32 noundef, i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @fprintf(%struct.__sFILE* noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local %struct._mxml_global_s* @_mxml_global() local_unnamed_addr #7 !dbg !1328 {
  ret %struct._mxml_global_s* bitcast ({ void (i8*)*, i32, <{ i32 (i8*)*, [9 x i32 (i8*)*] }>, i32, i32 (%struct.mxml_node_s*, i8*)*, i8* (%struct.mxml_node_s*)* }* @_mxml_global.global to %struct._mxml_global_s*), !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @mxml_ignore_cb(%struct.mxml_node_s* nocapture noundef readnone %0) local_unnamed_addr #7 !dbg !15292 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15296, metadata !DIExpression()), !dbg !15297
  ret i32 -1, !dbg !15298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @mxml_integer_cb(%struct.mxml_node_s* nocapture noundef readnone %0) #7 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15301, metadata !DIExpression()), !dbg !15302
  ret i32 1, !dbg !15303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @mxml_opaque_cb(%struct.mxml_node_s* nocapture noundef readnone %0) #7 !dbg !15304 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15306, metadata !DIExpression()), !dbg !15307
  ret i32 2, !dbg !15308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @mxml_real_cb(%struct.mxml_node_s* nocapture noundef readnone %0) #7 !dbg !15309 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15311, metadata !DIExpression()), !dbg !15312
  ret i32 3, !dbg !15313
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlFindElement(%struct.mxml_node_s* noundef %0, %struct.mxml_node_s* noundef %1, i8* noundef %2, i8* noundef %3, i8* noundef %4, i32 noundef %5) local_unnamed_addr #0 !dbg !15314 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15363, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %1, metadata !15364, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i8* %2, metadata !15365, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i8* %3, metadata !15366, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i8* %4, metadata !15367, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i32 %5, metadata !15368, metadata !DIExpression()), !dbg !15370
  %7 = icmp ne %struct.mxml_node_s* %0, null, !dbg !15371
  %8 = icmp ne %struct.mxml_node_s* %1, null
  %9 = and i1 %7, %8, !dbg !15373
  br i1 %9, label %10, label %51, !dbg !15373

10:                                               ; preds = %6
  %11 = icmp eq i8* %3, null, !dbg !15374
  %12 = icmp ne i8* %4, null
  %13 = and i1 %11, %12, !dbg !15375
  br i1 %13, label %51, label %14, !dbg !15375

14:                                               ; preds = %10
  %15 = tail call %struct.mxml_node_s* @mxmlWalkNext(%struct.mxml_node_s* noundef nonnull %0, %struct.mxml_node_s* noundef nonnull %1, i32 noundef %5) #20, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %15, metadata !15363, metadata !DIExpression()), !dbg !15370
  %16 = icmp eq %struct.mxml_node_s* %15, null, !dbg !15377
  br i1 %16, label %51, label %17, !dbg !15378

17:                                               ; preds = %14
  %18 = icmp eq i8* %2, null
  %19 = icmp eq i32 %5, 1
  br label %20, !dbg !15378

20:                                               ; preds = %17, %48
  %21 = phi %struct.mxml_node_s* [ %15, %17 ], [ %49, %48 ]
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %21, metadata !15363, metadata !DIExpression()), !dbg !15370
  %22 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %21, i32 0, i32 0, !dbg !15379
  %23 = load i32, i32* %22, align 8, !dbg !15379
  %24 = icmp eq i32 %23, 0, !dbg !15382
  br i1 %24, label %25, label %42, !dbg !15383

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %21, i32 0, i32 6, !dbg !15384
  %27 = bitcast %union.mxml_value_u* %26 to i8**, !dbg !15385
  %28 = load i8*, i8** %27, align 8, !dbg !15385
  %29 = icmp eq i8* %28, null, !dbg !15386
  br i1 %29, label %42, label %30, !dbg !15387

30:                                               ; preds = %25
  br i1 %18, label %34, label %31, !dbg !15388

31:                                               ; preds = %30
  %32 = tail call i32 @strcmp(i8* noundef nonnull %28, i8* noundef nonnull %2) #18, !dbg !15389
  %33 = icmp eq i32 %32, 0, !dbg !15389
  br i1 %33, label %34, label %42, !dbg !15390

34:                                               ; preds = %31, %30
  br i1 %11, label %51, label %35, !dbg !15391

35:                                               ; preds = %34
  %36 = tail call i8* @mxmlElementGetAttr(%struct.mxml_node_s* noundef nonnull %21, i8* noundef nonnull %3) #18, !dbg !15393
  call void @llvm.dbg.value(metadata i8* %36, metadata !15369, metadata !DIExpression()), !dbg !15370
  %37 = icmp eq i8* %36, null, !dbg !15395
  br i1 %37, label %42, label %38, !dbg !15396

38:                                               ; preds = %35
  br i1 %12, label %39, label %51, !dbg !15397

39:                                               ; preds = %38
  %40 = tail call i32 @strcmp(i8* noundef nonnull %4, i8* noundef nonnull %36) #18, !dbg !15400
  %41 = icmp eq i32 %40, 0, !dbg !15400
  br i1 %41, label %51, label %42, !dbg !15401

42:                                               ; preds = %35, %39, %31, %25, %20
  br i1 %19, label %43, label %45, !dbg !15402

43:                                               ; preds = %42
  %44 = tail call %struct.mxml_node_s* @mxmlWalkNext(%struct.mxml_node_s* noundef nonnull %21, %struct.mxml_node_s* noundef nonnull %1, i32 noundef 1) #20, !dbg !15403
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %44, metadata !15363, metadata !DIExpression()), !dbg !15370
  br label %48, !dbg !15405

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %21, i32 0, i32 1, !dbg !15406
  %47 = load %struct.mxml_node_s*, %struct.mxml_node_s** %46, align 4, !dbg !15406
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %47, metadata !15363, metadata !DIExpression()), !dbg !15370
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi %struct.mxml_node_s* [ %44, %43 ], [ %47, %45 ], !dbg !15407
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %49, metadata !15363, metadata !DIExpression()), !dbg !15370
  %50 = icmp eq %struct.mxml_node_s* %49, null, !dbg !15377
  br i1 %50, label %51, label %20, !dbg !15378, !llvm.loop !15408

51:                                               ; preds = %34, %39, %38, %48, %14, %6, %10
  %52 = phi %struct.mxml_node_s* [ null, %10 ], [ null, %6 ], [ null, %14 ], [ %21, %34 ], [ %21, %39 ], [ %21, %38 ], [ null, %48 ], !dbg !15370
  ret %struct.mxml_node_s* %52, !dbg !15410
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.mxml_node_s* @mxmlWalkNext(%struct.mxml_node_s* noundef readonly %0, %struct.mxml_node_s* noundef readnone %1, i32 noundef %2) local_unnamed_addr #13 !dbg !15411 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15415, metadata !DIExpression()), !dbg !15418
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %1, metadata !15416, metadata !DIExpression()), !dbg !15418
  call void @llvm.dbg.value(metadata i32 %2, metadata !15417, metadata !DIExpression()), !dbg !15418
  %4 = icmp eq %struct.mxml_node_s* %0, null, !dbg !15419
  br i1 %4, label %34, label %5, !dbg !15421

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 4, !dbg !15422
  %7 = load %struct.mxml_node_s*, %struct.mxml_node_s** %6, align 8, !dbg !15422
  %8 = icmp ne %struct.mxml_node_s* %7, null, !dbg !15424
  %9 = icmp ne i32 %2, 0
  %10 = and i1 %9, %8, !dbg !15425
  br i1 %10, label %34, label %11, !dbg !15425

11:                                               ; preds = %5
  %12 = icmp eq %struct.mxml_node_s* %0, %1, !dbg !15426
  br i1 %12, label %34, label %13, !dbg !15428

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 1, !dbg !15429
  %15 = load %struct.mxml_node_s*, %struct.mxml_node_s** %14, align 4, !dbg !15429
  %16 = icmp eq %struct.mxml_node_s* %15, null, !dbg !15431
  br i1 %16, label %17, label %34, !dbg !15432

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 3, !dbg !15433
  %19 = load %struct.mxml_node_s*, %struct.mxml_node_s** %18, align 4, !dbg !15433
  %20 = icmp eq %struct.mxml_node_s* %19, null, !dbg !15435
  %21 = icmp eq %struct.mxml_node_s* %19, %1
  %22 = or i1 %20, %21, !dbg !15436
  br i1 %22, label %34, label %23, !dbg !15436

23:                                               ; preds = %17, %28
  %24 = phi %struct.mxml_node_s* [ %30, %28 ], [ %19, %17 ], !dbg !15437
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %24, metadata !15415, metadata !DIExpression()), !dbg !15418
  %25 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %24, i32 0, i32 1, !dbg !15439
  %26 = load %struct.mxml_node_s*, %struct.mxml_node_s** %25, align 4, !dbg !15439
  %27 = icmp eq %struct.mxml_node_s* %26, null, !dbg !15440
  br i1 %27, label %28, label %34, !dbg !15441

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %24, i32 0, i32 3, !dbg !15442
  %30 = load %struct.mxml_node_s*, %struct.mxml_node_s** %29, align 4, !dbg !15442
  %31 = icmp eq %struct.mxml_node_s* %30, %1, !dbg !15444
  %32 = icmp eq %struct.mxml_node_s* %30, null
  %33 = or i1 %31, %32, !dbg !15445
  br i1 %33, label %34, label %23, !dbg !15445, !llvm.loop !15446

34:                                               ; preds = %23, %28, %17, %13, %11, %5, %3
  %35 = phi %struct.mxml_node_s* [ null, %3 ], [ %7, %5 ], [ null, %11 ], [ %15, %13 ], [ null, %17 ], [ %26, %23 ], [ null, %28 ], !dbg !15448
  ret %struct.mxml_node_s* %35, !dbg !15449
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.mxml_node_s* @mxmlFindPath(%struct.mxml_node_s* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !15450 {
  %3 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15454, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i8* %1, metadata !15455, metadata !DIExpression()), !dbg !15463
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0, !dbg !15464
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #17, !dbg !15464
  call void @llvm.dbg.declare(metadata [256 x i8]* %3, metadata !15457, metadata !DIExpression()), !dbg !15465
  %5 = icmp ne %struct.mxml_node_s* %0, null, !dbg !15466
  %6 = icmp ne i8* %1, null
  %7 = and i1 %5, %6, !dbg !15468
  br i1 %7, label %8, label %53, !dbg !15468

8:                                                ; preds = %2
  %9 = load i8, i8* %1, align 1, !dbg !15469
  %10 = icmp eq i8 %9, 0, !dbg !15469
  br i1 %10, label %53, label %14, !dbg !15470

11:                                               ; preds = %35
  %12 = load i8, i8* %41, align 1, !dbg !15471
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %42, metadata !15456, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i8* %41, metadata !15455, metadata !DIExpression()), !dbg !15463
  %13 = icmp eq i8 %12, 0, !dbg !15472
  br i1 %13, label %44, label %14, !dbg !15472

14:                                               ; preds = %8, %11
  %15 = phi %struct.mxml_node_s* [ %42, %11 ], [ %0, %8 ]
  %16 = phi i8* [ %41, %11 ], [ %1, %8 ]
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %15, metadata !15456, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i8* %16, metadata !15455, metadata !DIExpression()), !dbg !15463
  %17 = call i32 @strncmp(i8* noundef nonnull %16, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i32 noundef 2) #18, !dbg !15473
  %18 = icmp eq i32 %17, 0, !dbg !15473
  %19 = select i1 %18, i32 2, i32 0, !dbg !15476
  %20 = getelementptr i8, i8* %16, i32 %19, !dbg !15476
  %21 = select i1 %18, i32 1, i32 -1, !dbg !15476
  call void @llvm.dbg.value(metadata i32 %21, metadata !15462, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i8* %20, metadata !15455, metadata !DIExpression()), !dbg !15463
  %22 = call i8* @strchr(i8* noundef nonnull %20, i32 noundef 47) #18, !dbg !15477
  call void @llvm.dbg.value(metadata i8* %22, metadata !15461, metadata !DIExpression()), !dbg !15463
  %23 = icmp eq i8* %22, null, !dbg !15479
  br i1 %23, label %24, label %27, !dbg !15480

24:                                               ; preds = %14
  %25 = call i32 @strlen(i8* noundef nonnull %20) #18, !dbg !15481
  %26 = getelementptr inbounds i8, i8* %20, i32 %25, !dbg !15482
  call void @llvm.dbg.value(metadata i8* %26, metadata !15461, metadata !DIExpression()), !dbg !15463
  br label %27, !dbg !15483

27:                                               ; preds = %24, %14
  %28 = phi i8* [ %26, %24 ], [ %22, %14 ], !dbg !15484
  call void @llvm.dbg.value(metadata i8* %28, metadata !15461, metadata !DIExpression()), !dbg !15463
  %29 = icmp eq i8* %28, %20, !dbg !15485
  br i1 %29, label %53, label %30, !dbg !15487

30:                                               ; preds = %27
  %31 = ptrtoint i8* %28 to i32, !dbg !15488
  %32 = ptrtoint i8* %20 to i32, !dbg !15488
  %33 = sub i32 %31, %32, !dbg !15488
  %34 = icmp ugt i32 %33, 255, !dbg !15489
  br i1 %34, label %53, label %35, !dbg !15490

35:                                               ; preds = %30
  %36 = call i8* @memcpy(i8* noundef nonnull %4, i8* noundef nonnull %20, i32 noundef %33) #18, !dbg !15491
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 %33, !dbg !15492
  store i8 0, i8* %37, align 1, !dbg !15493
  %38 = load i8, i8* %28, align 1, !dbg !15494
  %39 = icmp ne i8 %38, 0, !dbg !15494
  %40 = zext i1 %39 to i32, !dbg !15496
  %41 = getelementptr i8, i8* %28, i32 %40, !dbg !15496
  call void @llvm.dbg.value(metadata i8* %41, metadata !15455, metadata !DIExpression()), !dbg !15463
  %42 = call %struct.mxml_node_s* @mxmlFindElement(%struct.mxml_node_s* noundef nonnull %15, %struct.mxml_node_s* noundef nonnull %15, i8* noundef nonnull %4, i8* noundef null, i8* noundef null, i32 noundef %21) #20, !dbg !15497
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %42, metadata !15456, metadata !DIExpression()), !dbg !15463
  %43 = icmp eq %struct.mxml_node_s* %42, null, !dbg !15499
  br i1 %43, label %53, label %11, !dbg !15500, !llvm.loop !15501

44:                                               ; preds = %11
  %45 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %42, i32 0, i32 4, !dbg !15503
  %46 = load %struct.mxml_node_s*, %struct.mxml_node_s** %45, align 8, !dbg !15503
  %47 = icmp eq %struct.mxml_node_s* %46, null, !dbg !15505
  br i1 %47, label %52, label %48, !dbg !15506

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %46, i32 0, i32 0, !dbg !15507
  %50 = load i32, i32* %49, align 8, !dbg !15507
  %51 = icmp eq i32 %50, 0, !dbg !15508
  br i1 %51, label %52, label %53, !dbg !15509

52:                                               ; preds = %48, %44
  br label %53, !dbg !15510

53:                                               ; preds = %35, %27, %30, %48, %2, %8, %52
  %54 = phi %struct.mxml_node_s* [ %42, %52 ], [ null, %8 ], [ null, %2 ], [ %46, %48 ], [ null, %30 ], [ null, %27 ], [ null, %35 ], !dbg !15463
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #17, !dbg !15511
  ret %struct.mxml_node_s* %54, !dbg !15511
}

; Function Attrs: optsize
declare dso_local i8* @strchr(i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.mxml_node_s* @mxmlWalkPrev(%struct.mxml_node_s* noundef readonly %0, %struct.mxml_node_s* noundef readnone %1, i32 noundef %2) local_unnamed_addr #13 !dbg !15512 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !15514, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %1, metadata !15515, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 %2, metadata !15516, metadata !DIExpression()), !dbg !15517
  %4 = icmp eq %struct.mxml_node_s* %0, null, !dbg !15518
  %5 = icmp eq %struct.mxml_node_s* %0, %1
  %6 = or i1 %4, %5, !dbg !15520
  br i1 %6, label %27, label %7, !dbg !15520

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 2, !dbg !15521
  %9 = load %struct.mxml_node_s*, %struct.mxml_node_s** %8, align 8, !dbg !15521
  %10 = icmp eq %struct.mxml_node_s* %9, null, !dbg !15523
  br i1 %10, label %22, label %11, !dbg !15524

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %9, i32 0, i32 5, !dbg !15525
  %13 = load %struct.mxml_node_s*, %struct.mxml_node_s** %12, align 4, !dbg !15525
  %14 = icmp ne %struct.mxml_node_s* %13, null, !dbg !15528
  %15 = icmp ne i32 %2, 0
  %16 = and i1 %15, %14, !dbg !15529
  br i1 %16, label %17, label %27, !dbg !15529

17:                                               ; preds = %11, %17
  %18 = phi %struct.mxml_node_s* [ %20, %17 ], [ %13, %11 ], !dbg !15530
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %18, metadata !15514, metadata !DIExpression()), !dbg !15517
  %19 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %18, i32 0, i32 5, !dbg !15532
  %20 = load %struct.mxml_node_s*, %struct.mxml_node_s** %19, align 4, !dbg !15532
  %21 = icmp eq %struct.mxml_node_s* %20, null, !dbg !15533
  br i1 %21, label %27, label %17, !dbg !15533, !llvm.loop !15534

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 3, !dbg !15536
  %24 = load %struct.mxml_node_s*, %struct.mxml_node_s** %23, align 4, !dbg !15536
  %25 = icmp eq %struct.mxml_node_s* %24, %1, !dbg !15538
  %26 = select i1 %25, %struct.mxml_node_s* null, %struct.mxml_node_s* %24, !dbg !15539
  br label %27, !dbg !15539

27:                                               ; preds = %17, %22, %11, %3
  %28 = phi %struct.mxml_node_s* [ null, %3 ], [ %9, %11 ], [ %26, %22 ], [ %18, %17 ], !dbg !15540
  ret %struct.mxml_node_s* %28, !dbg !15541
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_mxml_strdup(i8* noundef %0) local_unnamed_addr #0 !dbg !15542 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15546, metadata !DIExpression()), !dbg !15548
  %2 = icmp eq i8* %0, null, !dbg !15549
  br i1 %2, label %10, label %3, !dbg !15551

3:                                                ; preds = %1
  %4 = tail call i32 @strlen(i8* noundef nonnull %0) #18, !dbg !15552
  %5 = add i32 %4, 1, !dbg !15554
  %6 = tail call i8* @pvPortMalloc(i32 noundef %5) #18, !dbg !15555
  call void @llvm.dbg.value(metadata i8* %6, metadata !15547, metadata !DIExpression()), !dbg !15548
  %7 = icmp eq i8* %6, null, !dbg !15556
  br i1 %7, label %10, label %8, !dbg !15557

8:                                                ; preds = %3
  %9 = tail call i8* @strcpy(i8* noundef nonnull %6, i8* noundef nonnull %0) #18, !dbg !15558
  br label %10, !dbg !15559

10:                                               ; preds = %3, %1, %8
  %11 = phi i8* [ %9, %8 ], [ null, %1 ], [ null, %3 ], !dbg !15548
  ret i8* %11, !dbg !15560
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_mxml_strdupf(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !15561 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15565, metadata !DIExpression()), !dbg !15574
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !15575
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !15575
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !15566, metadata !DIExpression()), !dbg !15576
  call void @llvm.va_start(i8* nonnull %3), !dbg !15577
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !15578
  %5 = load i32, i32* %4, align 4, !dbg !15578
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15578
  %7 = call i8* @_mxml_vstrdupf(i8* noundef %0, [1 x i32] %6) #20, !dbg !15578
  call void @llvm.dbg.value(metadata i8* %7, metadata !15573, metadata !DIExpression()), !dbg !15574
  call void @llvm.va_end(i8* nonnull %3), !dbg !15579
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !15580
  ret i8* %7, !dbg !15581
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_mxml_vstrdupf(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #0 !dbg !15582 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca [256 x i8], align 1
  %5 = alloca %struct.__va_list, align 4
  %6 = extractvalue [1 x i32] %1, 0
  %7 = bitcast %struct.__va_list* %3 to i32*
  store i32 %6, i32* %7, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15586, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !15587, metadata !DIExpression()), !dbg !15593
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0, !dbg !15594
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #17, !dbg !15594
  call void @llvm.dbg.declare(metadata [256 x i8]* %4, metadata !15590, metadata !DIExpression()), !dbg !15595
  %9 = bitcast %struct.__va_list* %5 to i8*, !dbg !15596
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17, !dbg !15596
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !15591, metadata !DIExpression()), !dbg !15597
  %10 = bitcast %struct.__va_list* %3 to i8*, !dbg !15598
  call void @llvm.va_copy(i8* nonnull %9, i8* nonnull %10), !dbg !15598
  %11 = bitcast %struct.__va_list* %5 to i32*, !dbg !15599
  %12 = load i32, i32* %11, align 4, !dbg !15599
  %13 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15599
  %14 = call i32 @vsnprintf(i8* noundef nonnull %8, i32 noundef 256, i8* noundef %0, [1 x i32] %13) #18, !dbg !15599
  call void @llvm.dbg.value(metadata i32 %14, metadata !15588, metadata !DIExpression()), !dbg !15592
  %15 = icmp ult i32 %14, 256, !dbg !15600
  br i1 %15, label %16, label %18, !dbg !15602

16:                                               ; preds = %2
  %17 = call i8* @_mxml_strdup(i8* noundef nonnull %8) #20, !dbg !15603
  br label %26, !dbg !15605

18:                                               ; preds = %2
  %19 = add nsw i32 %14, 1, !dbg !15606
  %20 = call i8* @pvPortCalloc(i32 noundef 1, i32 noundef %19) #18, !dbg !15608
  call void @llvm.dbg.value(metadata i8* %20, metadata !15589, metadata !DIExpression()), !dbg !15592
  %21 = icmp eq i8* %20, null, !dbg !15609
  br i1 %21, label %26, label %22, !dbg !15610

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4, !dbg !15611
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !15611
  %25 = call i32 @vsnprintf(i8* noundef nonnull %20, i32 noundef %19, i8* noundef %0, [1 x i32] %24) #18, !dbg !15611
  br label %26, !dbg !15611

26:                                               ; preds = %18, %22, %16
  %27 = phi i8* [ %17, %16 ], [ %20, %22 ], [ null, %18 ], !dbg !15592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17, !dbg !15612
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #17, !dbg !15612
  ret i8* %27, !dbg !15612
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_copy(i8*, i8*) #11

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @abort() local_unnamed_addr #12 !dbg !15613 {
  tail call void asm sideeffect "cpsid i", ""() #17, !dbg !15614, !srcloc !15615
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15616
  %2 = or i32 %1, 8, !dbg !15616
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15616
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !15617
  br label %3, !dbg !15618

3:                                                ; preds = %3, %0
  br label %3, !dbg !15619, !llvm.loop !15622
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @platform_assert(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !15625 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15629, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i8* %1, metadata !15630, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i32 %2, metadata !15631, metadata !DIExpression()), !dbg !15632
  tail call void asm sideeffect "cpsid i", ""() #17, !dbg !15633, !srcloc !15634
  %4 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15635
  %5 = or i32 %4, 8, !dbg !15635
  store volatile i32 %5, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15635
  store i1 true, i1* @assert_expr.0, align 4, !dbg !15636
  store i8* %0, i8** @assert_expr.1, align 4, !dbg !15637
  store i8* %1, i8** @assert_expr.2, align 4, !dbg !15638
  store i32 %2, i32* @assert_expr.3, align 4, !dbg !15639
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !15640
  br label %6, !dbg !15641

6:                                                ; preds = %6, %3
  br label %6, !dbg !15642, !llvm.loop !15645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @exception_dump_config(i32 noundef %0) local_unnamed_addr #4 !dbg !15648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15650, metadata !DIExpression()), !dbg !15651
  store i32 %0, i32* @reboot_flag, align 4, !dbg !15652
  ret void, !dbg !15653
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @exception_register_callbacks(%struct.exception_config_type* nocapture noundef readonly %0) local_unnamed_addr #15 !dbg !15654 {
  call void @llvm.dbg.value(metadata %struct.exception_config_type* %0, metadata !15659, metadata !DIExpression()), !dbg !15661
  %2 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !15662
  %3 = icmp sgt i32 %2, 5, !dbg !15664
  br i1 %3, label %30, label %4, !dbg !15665

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !15660, metadata !DIExpression()), !dbg !15661
  %5 = icmp sgt i32 %2, 0, !dbg !15666
  %6 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 0
  %7 = load void ()*, void ()** %6, align 4
  br i1 %5, label %8, label %23, !dbg !15670

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1
  br label %10, !dbg !15670

10:                                               ; preds = %8, %20
  %11 = phi i32 [ 0, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !15660, metadata !DIExpression()), !dbg !15661
  %12 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 0, !dbg !15671
  %13 = load void ()*, void ()** %12, align 4, !dbg !15671
  %14 = icmp eq void ()* %13, %7, !dbg !15674
  br i1 %14, label %15, label %20, !dbg !15675

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 1, !dbg !15676
  %17 = load void ()*, void ()** %16, align 4, !dbg !15676
  %18 = load void ()*, void ()** %9, align 4, !dbg !15677
  %19 = icmp eq void ()* %17, %18, !dbg !15678
  br i1 %19, label %30, label %20, !dbg !15679

20:                                               ; preds = %10, %15
  %21 = add nuw nsw i32 %11, 1, !dbg !15680
  call void @llvm.dbg.value(metadata i32 %21, metadata !15660, metadata !DIExpression()), !dbg !15661
  %22 = icmp eq i32 %21, %2, !dbg !15666
  br i1 %22, label %23, label %10, !dbg !15670, !llvm.loop !15681

23:                                               ; preds = %20, %4
  %24 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 0, !dbg !15683
  store void ()* %7, void ()** %24, align 4, !dbg !15684
  %25 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1, !dbg !15685
  %26 = load void ()*, void ()** %25, align 4, !dbg !15685
  %27 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 1, !dbg !15686
  store void ()* %26, void ()** %27, align 4, !dbg !15687
  %28 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !15688
  %29 = add nsw i32 %28, 1, !dbg !15688
  store i32 %29, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !15688
  br label %30, !dbg !15689

30:                                               ; preds = %15, %1, %23
  %31 = phi i1 [ true, %23 ], [ false, %1 ], [ false, %15 ], !dbg !15690
  ret i1 %31, !dbg !15691
}

; Function Attrs: noinline nounwind optsize
define dso_local void @exception_init() local_unnamed_addr #0 section ".ramTEXT" !dbg !15692 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15695
  %2 = and i32 %1, -9, !dbg !15695
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15695
  tail call void @Flash_ReturnReady() #18, !dbg !15696
  call void @llvm.dbg.value(metadata i32 0, metadata !15694, metadata !DIExpression()), !dbg !15697
  %3 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !15698
  %4 = icmp sgt i32 %3, 0, !dbg !15701
  br i1 %4, label %5, label %17, !dbg !15702

5:                                                ; preds = %0, %13
  %6 = phi i32 [ %14, %13 ], [ %3, %0 ]
  %7 = phi i32 [ %15, %13 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !15694, metadata !DIExpression()), !dbg !15697
  %8 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %7, i32 0, !dbg !15703
  %9 = load void ()*, void ()** %8, align 4, !dbg !15703
  %10 = icmp eq void ()* %9, null, !dbg !15706
  br i1 %10, label %13, label %11, !dbg !15707

11:                                               ; preds = %5
  tail call void %9() #18, !dbg !15708
  %12 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !15698
  br label %13, !dbg !15710

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %6, %5 ], [ %12, %11 ], !dbg !15698
  %15 = add nuw nsw i32 %7, 1, !dbg !15711
  call void @llvm.dbg.value(metadata i32 %15, metadata !15694, metadata !DIExpression()), !dbg !15697
  %16 = icmp slt i32 %15, %14, !dbg !15701
  br i1 %16, label %5, label %17, !dbg !15702, !llvm.loop !15712

17:                                               ; preds = %13, %0
  %18 = load i1, i1* @assert_expr.0, align 4, !dbg !15714
  br i1 %18, label %19, label %24, !dbg !15716

19:                                               ; preds = %17
  %20 = load i8*, i8** @assert_expr.1, align 4, !dbg !15717
  %21 = load i8*, i8** @assert_expr.2, align 4, !dbg !15719
  %22 = load i32, i32* @assert_expr.3, align 4, !dbg !15720
  %23 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.309, i32 0, i32 0), i8* noundef %20, i8* noundef %21, i32 noundef %22) #18, !dbg !15721
  br label %24, !dbg !15722

24:                                               ; preds = %19, %17
  ret void, !dbg !15723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @NMI_Handler() local_unnamed_addr #7 !dbg !15724 {
  ret void, !dbg !15725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printUsageErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !15726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15728, metadata !DIExpression()), !dbg !15729
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.310, i32 0, i32 0)) #18, !dbg !15730
  call void @llvm.dbg.value(metadata i32 %0, metadata !15728, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !15729
  %3 = and i32 %0, 33554432, !dbg !15731
  %4 = icmp eq i32 %3, 0, !dbg !15731
  br i1 %4, label %7, label %5, !dbg !15733

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.311, i32 0, i32 0)) #18, !dbg !15734
  br label %7, !dbg !15736

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16777216, !dbg !15737
  %9 = icmp eq i32 %8, 0, !dbg !15737
  br i1 %9, label %12, label %10, !dbg !15739

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.312, i32 0, i32 0)) #18, !dbg !15740
  br label %12, !dbg !15742

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 524288, !dbg !15743
  %14 = icmp eq i32 %13, 0, !dbg !15743
  br i1 %14, label %17, label %15, !dbg !15745

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.313, i32 0, i32 0)) #18, !dbg !15746
  br label %17, !dbg !15748

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 262144, !dbg !15749
  %19 = icmp eq i32 %18, 0, !dbg !15749
  br i1 %19, label %22, label %20, !dbg !15751

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.314, i32 0, i32 0)) #18, !dbg !15752
  br label %22, !dbg !15754

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 131072, !dbg !15755
  %24 = icmp eq i32 %23, 0, !dbg !15755
  br i1 %24, label %27, label %25, !dbg !15757

25:                                               ; preds = %22
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.315, i32 0, i32 0)) #18, !dbg !15758
  br label %27, !dbg !15760

27:                                               ; preds = %25, %22
  %28 = and i32 %0, 65536, !dbg !15761
  %29 = icmp eq i32 %28, 0, !dbg !15761
  br i1 %29, label %32, label %30, !dbg !15763

30:                                               ; preds = %27
  %31 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.316, i32 0, i32 0)) #18, !dbg !15764
  br label %32, !dbg !15766

32:                                               ; preds = %30, %27
  ret void, !dbg !15767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printMemoryManagementErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !15768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15770, metadata !DIExpression()), !dbg !15771
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.317, i32 0, i32 0)) #18, !dbg !15772
  call void @llvm.dbg.value(metadata i32 %0, metadata !15770, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !15771
  %3 = and i32 %0, 32, !dbg !15773
  %4 = icmp eq i32 %3, 0, !dbg !15775
  br i1 %4, label %7, label %5, !dbg !15776

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.9.318, i32 0, i32 0)) #18, !dbg !15777
  br label %7, !dbg !15779

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16, !dbg !15780
  %9 = icmp eq i32 %8, 0, !dbg !15782
  br i1 %9, label %12, label %10, !dbg !15783

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.319, i32 0, i32 0)) #18, !dbg !15784
  br label %12, !dbg !15786

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 8, !dbg !15787
  %14 = icmp eq i32 %13, 0, !dbg !15789
  br i1 %14, label %17, label %15, !dbg !15790

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11.320, i32 0, i32 0)) #18, !dbg !15791
  br label %17, !dbg !15793

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 2, !dbg !15794
  %19 = icmp eq i32 %18, 0, !dbg !15796
  br i1 %19, label %23, label %20, !dbg !15797

20:                                               ; preds = %17
  %21 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !15798
  %22 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.321, i32 0, i32 0), i32 noundef %21) #18, !dbg !15800
  br label %23, !dbg !15801

23:                                               ; preds = %20, %17
  %24 = and i32 %0, 1, !dbg !15802
  %25 = icmp eq i32 %24, 0, !dbg !15804
  br i1 %25, label %28, label %26, !dbg !15805

26:                                               ; preds = %23
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13.322, i32 0, i32 0)) #18, !dbg !15806
  br label %28, !dbg !15808

28:                                               ; preds = %26, %23
  %29 = and i32 %0, 128, !dbg !15809
  %30 = icmp eq i32 %29, 0, !dbg !15811
  br i1 %30, label %34, label %31, !dbg !15812

31:                                               ; preds = %28
  %32 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !15813
  %33 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.323, i32 0, i32 0), i32 noundef %32) #18, !dbg !15815
  br label %34, !dbg !15816

34:                                               ; preds = %31, %28
  ret void, !dbg !15817
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printBusFaultErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !15818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15820, metadata !DIExpression()), !dbg !15821
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.324, i32 0, i32 0)) #18, !dbg !15822
  call void @llvm.dbg.value(metadata i32 %0, metadata !15820, metadata !DIExpression(DW_OP_constu, 65280, DW_OP_and, DW_OP_stack_value)), !dbg !15821
  call void @llvm.dbg.value(metadata i32 %0, metadata !15820, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !15821
  %3 = and i32 %0, 8192, !dbg !15823
  %4 = icmp eq i32 %3, 0, !dbg !15823
  br i1 %4, label %7, label %5, !dbg !15825

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.325, i32 0, i32 0)) #18, !dbg !15826
  br label %7, !dbg !15828

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 4096, !dbg !15829
  %9 = icmp eq i32 %8, 0, !dbg !15829
  br i1 %9, label %12, label %10, !dbg !15831

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.17.326, i32 0, i32 0)) #18, !dbg !15832
  br label %12, !dbg !15834

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 2048, !dbg !15835
  %14 = icmp eq i32 %13, 0, !dbg !15835
  br i1 %14, label %17, label %15, !dbg !15837

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18.327, i32 0, i32 0)) #18, !dbg !15838
  br label %17, !dbg !15840

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 1024, !dbg !15841
  %19 = icmp eq i32 %18, 0, !dbg !15841
  br i1 %19, label %22, label %20, !dbg !15843

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.328, i32 0, i32 0)) #18, !dbg !15844
  br label %22, !dbg !15846

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 512, !dbg !15847
  %24 = icmp eq i32 %23, 0, !dbg !15847
  br i1 %24, label %28, label %25, !dbg !15849

25:                                               ; preds = %22
  %26 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !15850
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20.329, i32 0, i32 0), i32 noundef %26) #18, !dbg !15852
  br label %28, !dbg !15853

28:                                               ; preds = %25, %22
  %29 = and i32 %0, 256, !dbg !15854
  %30 = icmp eq i32 %29, 0, !dbg !15854
  br i1 %30, label %33, label %31, !dbg !15856

31:                                               ; preds = %28
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21.330, i32 0, i32 0)) #18, !dbg !15857
  br label %33, !dbg !15859

33:                                               ; preds = %31, %28
  %34 = and i32 %0, 32768, !dbg !15860
  %35 = icmp eq i32 %34, 0, !dbg !15860
  br i1 %35, label %39, label %36, !dbg !15862

36:                                               ; preds = %33
  %37 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !15863
  %38 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.331, i32 0, i32 0), i32 noundef %37) #18, !dbg !15865
  br label %39, !dbg !15866

39:                                               ; preds = %36, %33
  ret void, !dbg !15867
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @exception_reboot() local_unnamed_addr #0 !dbg !15868 {
  ret void, !dbg !15869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stackDump(i32* noundef %0) local_unnamed_addr #0 !dbg !15870 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !15874, metadata !DIExpression()), !dbg !15875
  %2 = load i32, i32* %0, align 4, !dbg !15876
  store i32 %2, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 0), align 4, !dbg !15877
  %3 = getelementptr inbounds i32, i32* %0, i32 1, !dbg !15878
  %4 = load i32, i32* %3, align 4, !dbg !15878
  store i32 %4, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !15879
  %5 = getelementptr inbounds i32, i32* %0, i32 2, !dbg !15880
  %6 = load i32, i32* %5, align 4, !dbg !15880
  store i32 %6, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !15881
  %7 = getelementptr inbounds i32, i32* %0, i32 3, !dbg !15882
  %8 = load i32, i32* %7, align 4, !dbg !15882
  store i32 %8, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !15883
  %9 = getelementptr inbounds i32, i32* %0, i32 4, !dbg !15884
  %10 = load i32, i32* %9, align 4, !dbg !15884
  store i32 %10, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !15885
  %11 = ptrtoint i32* %0 to i32, !dbg !15886
  %12 = add i32 %11, 32, !dbg !15887
  store i32 %12, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !15888
  %13 = getelementptr inbounds i32, i32* %0, i32 5, !dbg !15889
  %14 = load i32, i32* %13, align 4, !dbg !15889
  store i32 %14, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !15890
  %15 = getelementptr inbounds i32, i32* %0, i32 6, !dbg !15891
  %16 = load i32, i32* %15, align 4, !dbg !15891
  store i32 %16, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !15892
  %17 = getelementptr inbounds i32, i32* %0, i32 7, !dbg !15893
  %18 = load i32, i32* %17, align 4, !dbg !15893
  store i32 %18, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !15894
  %19 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !15895
  %20 = and i32 %19, 16, !dbg !15897
  %21 = icmp eq i32 %20, 0, !dbg !15898
  br i1 %21, label %22, label %58, !dbg !15899

22:                                               ; preds = %1
  %23 = getelementptr inbounds i32, i32* %0, i32 8, !dbg !15900
  %24 = load i32, i32* %23, align 4, !dbg !15900
  store i32 %24, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !15902
  %25 = getelementptr inbounds i32, i32* %0, i32 9, !dbg !15903
  %26 = load i32, i32* %25, align 4, !dbg !15903
  store i32 %26, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !15904
  %27 = getelementptr inbounds i32, i32* %0, i32 10, !dbg !15905
  %28 = load i32, i32* %27, align 4, !dbg !15905
  store i32 %28, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !15906
  %29 = getelementptr inbounds i32, i32* %0, i32 11, !dbg !15907
  %30 = load i32, i32* %29, align 4, !dbg !15907
  store i32 %30, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !15908
  %31 = getelementptr inbounds i32, i32* %0, i32 12, !dbg !15909
  %32 = load i32, i32* %31, align 4, !dbg !15909
  store i32 %32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !15910
  %33 = getelementptr inbounds i32, i32* %0, i32 13, !dbg !15911
  %34 = load i32, i32* %33, align 4, !dbg !15911
  store i32 %34, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !15912
  %35 = getelementptr inbounds i32, i32* %0, i32 14, !dbg !15913
  %36 = load i32, i32* %35, align 4, !dbg !15913
  store i32 %36, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !15914
  %37 = getelementptr inbounds i32, i32* %0, i32 15, !dbg !15915
  %38 = load i32, i32* %37, align 4, !dbg !15915
  store i32 %38, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !15916
  %39 = getelementptr inbounds i32, i32* %0, i32 16, !dbg !15917
  %40 = load i32, i32* %39, align 4, !dbg !15917
  store i32 %40, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !15918
  %41 = getelementptr inbounds i32, i32* %0, i32 17, !dbg !15919
  %42 = load i32, i32* %41, align 4, !dbg !15919
  store i32 %42, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !15920
  %43 = getelementptr inbounds i32, i32* %0, i32 18, !dbg !15921
  %44 = load i32, i32* %43, align 4, !dbg !15921
  store i32 %44, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !15922
  %45 = getelementptr inbounds i32, i32* %0, i32 19, !dbg !15923
  %46 = load i32, i32* %45, align 4, !dbg !15923
  store i32 %46, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !15924
  %47 = getelementptr inbounds i32, i32* %0, i32 20, !dbg !15925
  %48 = load i32, i32* %47, align 4, !dbg !15925
  store i32 %48, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !15926
  %49 = getelementptr inbounds i32, i32* %0, i32 21, !dbg !15927
  %50 = load i32, i32* %49, align 4, !dbg !15927
  store i32 %50, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !15928
  %51 = getelementptr inbounds i32, i32* %0, i32 22, !dbg !15929
  %52 = load i32, i32* %51, align 4, !dbg !15929
  store i32 %52, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !15930
  %53 = getelementptr inbounds i32, i32* %0, i32 23, !dbg !15931
  %54 = load i32, i32* %53, align 4, !dbg !15931
  store i32 %54, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !15932
  %55 = getelementptr inbounds i32, i32* %0, i32 24, !dbg !15933
  %56 = load i32, i32* %55, align 4, !dbg !15933
  store i32 %56, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !15934
  %57 = add i32 %11, 104, !dbg !15935
  store i32 %57, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !15935
  br label %58, !dbg !15936

58:                                               ; preds = %22, %1
  %59 = phi i32 [ %57, %22 ], [ %12, %1 ]
  %60 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15937
  %61 = and i32 %60, 512, !dbg !15939
  %62 = icmp eq i32 %61, 0, !dbg !15939
  %63 = and i32 %18, 512
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %62, i1 true, i1 %64, !dbg !15940
  br i1 %65, label %68, label %66, !dbg !15940

66:                                               ; preds = %58
  %67 = add i32 %59, 4, !dbg !15941
  store i32 %67, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !15941
  br label %68, !dbg !15943

68:                                               ; preds = %66, %58
  %69 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.332, i32 0, i32 0), i32 noundef %2) #18, !dbg !15944
  %70 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !15945
  %71 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.333, i32 0, i32 0), i32 noundef %70) #18, !dbg !15946
  %72 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !15947
  %73 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.334, i32 0, i32 0), i32 noundef %72) #18, !dbg !15948
  %74 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !15949
  %75 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26.335, i32 0, i32 0), i32 noundef %74) #18, !dbg !15950
  %76 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 4), align 4, !dbg !15951
  %77 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27.336, i32 0, i32 0), i32 noundef %76) #18, !dbg !15952
  %78 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 5), align 4, !dbg !15953
  %79 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.337, i32 0, i32 0), i32 noundef %78) #18, !dbg !15954
  %80 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 6), align 4, !dbg !15955
  %81 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29.338, i32 0, i32 0), i32 noundef %80) #18, !dbg !15956
  %82 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 7), align 4, !dbg !15957
  %83 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30.339, i32 0, i32 0), i32 noundef %82) #18, !dbg !15958
  %84 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 8), align 4, !dbg !15959
  %85 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.340, i32 0, i32 0), i32 noundef %84) #18, !dbg !15960
  %86 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 9), align 4, !dbg !15961
  %87 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32.341, i32 0, i32 0), i32 noundef %86) #18, !dbg !15962
  %88 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 10), align 4, !dbg !15963
  %89 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.342, i32 0, i32 0), i32 noundef %88) #18, !dbg !15964
  %90 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 11), align 4, !dbg !15965
  %91 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34.343, i32 0, i32 0), i32 noundef %90) #18, !dbg !15966
  %92 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !15967
  %93 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.344, i32 0, i32 0), i32 noundef %92) #18, !dbg !15968
  %94 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !15969
  %95 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.345, i32 0, i32 0), i32 noundef %94) #18, !dbg !15970
  %96 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !15971
  %97 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37.346, i32 0, i32 0), i32 noundef %96) #18, !dbg !15972
  %98 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !15973
  %99 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38.347, i32 0, i32 0), i32 noundef %98) #18, !dbg !15974
  %100 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !15975
  %101 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39.348, i32 0, i32 0), i32 noundef %100) #18, !dbg !15976
  %102 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !15977
  %103 = and i32 %102, 4, !dbg !15979
  %104 = icmp eq i32 %103, 0, !dbg !15979
  br i1 %104, label %108, label %105, !dbg !15980

105:                                              ; preds = %68
  %106 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !15981
  %107 = or i32 %106, 2, !dbg !15981
  store i32 %107, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !15981
  br label %108, !dbg !15983

108:                                              ; preds = %68, %105
  %109 = phi i32* [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), %105 ], [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), %68 ]
  %110 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !15984
  store i32 %110, i32* %109, align 4, !dbg !15984
  %111 = and i32 %102, 16, !dbg !15985
  %112 = icmp eq i32 %111, 0, !dbg !15987
  br i1 %112, label %113, label %182, !dbg !15988

113:                                              ; preds = %108
  %114 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !15989
  %115 = or i32 %114, 4, !dbg !15989
  store i32 %115, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !15989
  %116 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !15991
  %117 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40.349, i32 0, i32 0), i32 noundef %116) #18, !dbg !15992
  %118 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !15993
  %119 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41.350, i32 0, i32 0), i32 noundef %118) #18, !dbg !15994
  %120 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !15995
  %121 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42.351, i32 0, i32 0), i32 noundef %120) #18, !dbg !15996
  %122 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !15997
  %123 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43.352, i32 0, i32 0), i32 noundef %122) #18, !dbg !15998
  %124 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !15999
  %125 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44.353, i32 0, i32 0), i32 noundef %124) #18, !dbg !16000
  %126 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !16001
  %127 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45.354, i32 0, i32 0), i32 noundef %126) #18, !dbg !16002
  %128 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !16003
  %129 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46.355, i32 0, i32 0), i32 noundef %128) #18, !dbg !16004
  %130 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !16005
  %131 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47.356, i32 0, i32 0), i32 noundef %130) #18, !dbg !16006
  %132 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !16007
  %133 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48.357, i32 0, i32 0), i32 noundef %132) #18, !dbg !16008
  %134 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !16009
  %135 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.358, i32 0, i32 0), i32 noundef %134) #18, !dbg !16010
  %136 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !16011
  %137 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50.359, i32 0, i32 0), i32 noundef %136) #18, !dbg !16012
  %138 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !16013
  %139 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51.360, i32 0, i32 0), i32 noundef %138) #18, !dbg !16014
  %140 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !16015
  %141 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52.361, i32 0, i32 0), i32 noundef %140) #18, !dbg !16016
  %142 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !16017
  %143 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53.362, i32 0, i32 0), i32 noundef %142) #18, !dbg !16018
  %144 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !16019
  %145 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54.363, i32 0, i32 0), i32 noundef %144) #18, !dbg !16020
  %146 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !16021
  %147 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55.364, i32 0, i32 0), i32 noundef %146) #18, !dbg !16022
  %148 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 38), align 4, !dbg !16023
  %149 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56.365, i32 0, i32 0), i32 noundef %148) #18, !dbg !16024
  %150 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 39), align 4, !dbg !16025
  %151 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57.366, i32 0, i32 0), i32 noundef %150) #18, !dbg !16026
  %152 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 40), align 4, !dbg !16027
  %153 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58.367, i32 0, i32 0), i32 noundef %152) #18, !dbg !16028
  %154 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 41), align 4, !dbg !16029
  %155 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59.368, i32 0, i32 0), i32 noundef %154) #18, !dbg !16030
  %156 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 42), align 4, !dbg !16031
  %157 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60.369, i32 0, i32 0), i32 noundef %156) #18, !dbg !16032
  %158 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 43), align 4, !dbg !16033
  %159 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61.370, i32 0, i32 0), i32 noundef %158) #18, !dbg !16034
  %160 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 44), align 4, !dbg !16035
  %161 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62.371, i32 0, i32 0), i32 noundef %160) #18, !dbg !16036
  %162 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 45), align 4, !dbg !16037
  %163 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63.372, i32 0, i32 0), i32 noundef %162) #18, !dbg !16038
  %164 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 46), align 4, !dbg !16039
  %165 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64.373, i32 0, i32 0), i32 noundef %164) #18, !dbg !16040
  %166 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 47), align 4, !dbg !16041
  %167 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65.374, i32 0, i32 0), i32 noundef %166) #18, !dbg !16042
  %168 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 48), align 4, !dbg !16043
  %169 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66.375, i32 0, i32 0), i32 noundef %168) #18, !dbg !16044
  %170 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 49), align 4, !dbg !16045
  %171 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67.376, i32 0, i32 0), i32 noundef %170) #18, !dbg !16046
  %172 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 50), align 4, !dbg !16047
  %173 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68.377, i32 0, i32 0), i32 noundef %172) #18, !dbg !16048
  %174 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 51), align 4, !dbg !16049
  %175 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69.378, i32 0, i32 0), i32 noundef %174) #18, !dbg !16050
  %176 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 52), align 4, !dbg !16051
  %177 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70.379, i32 0, i32 0), i32 noundef %176) #18, !dbg !16052
  %178 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 53), align 4, !dbg !16053
  %179 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71.380, i32 0, i32 0), i32 noundef %178) #18, !dbg !16054
  %180 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !16055
  %181 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.381, i32 0, i32 0), i32 noundef %180) #18, !dbg !16056
  br label %182, !dbg !16057

182:                                              ; preds = %113, %108
  %183 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !16058
  %184 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73.382, i32 0, i32 0), i32 noundef %183) #18, !dbg !16059
  %185 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), align 4, !dbg !16060
  %186 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74.383, i32 0, i32 0), i32 noundef %185) #18, !dbg !16061
  %187 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), align 4, !dbg !16062
  %188 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75.384, i32 0, i32 0), i32 noundef %187) #18, !dbg !16063
  %189 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !16064
  %190 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76.385, i32 0, i32 0), i32 noundef %189) #18, !dbg !16065
  %191 = tail call fastcc zeroext i1 @reboot_check() #20, !dbg !16066
  br i1 %191, label %192, label %193, !dbg !16068

192:                                              ; preds = %182
  tail call void @exception_reboot() #20, !dbg !16069
  br label %193, !dbg !16071

193:                                              ; preds = %192, %182
  ret void, !dbg !16072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @reboot_check() unnamed_addr #9 !dbg !16073 {
  %1 = load i32, i32* @reboot_flag, align 4, !dbg !16076
  %2 = icmp eq i32 %1, -559038737, !dbg !16077
  ret i1 %2, !dbg !16078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @memoryDumpAll() local_unnamed_addr #0 !dbg !16079 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16083, metadata !DIExpression()), !dbg !16084
  %1 = load i8*, i8** getelementptr inbounds ([6 x %struct.memory_region_type], [6 x %struct.memory_region_type]* @memory_regions, i32 0, i32 0, i32 0), align 4, !dbg !16085
  %2 = icmp eq i8* %1, null, !dbg !16090
  br i1 %2, label %3, label %6, !dbg !16091

3:                                                ; preds = %44, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !16083, metadata !DIExpression()), !dbg !16084
  %4 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !16092
  %5 = icmp eq i32 %4, 0, !dbg !16095
  br i1 %5, label %61, label %49, !dbg !16096

6:                                                ; preds = %0, %44
  %7 = phi i32 [ %45, %44 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !16083, metadata !DIExpression()), !dbg !16084
  %8 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 3, !dbg !16097
  %9 = load i32, i32* %8, align 4, !dbg !16097
  %10 = icmp eq i32 %9, 0, !dbg !16099
  br i1 %10, label %44, label %11, !dbg !16100

11:                                               ; preds = %6
  %12 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 1, !dbg !16101
  %13 = load i32*, i32** %12, align 4, !dbg !16101
  call void @llvm.dbg.value(metadata i32* %13, metadata !16081, metadata !DIExpression()), !dbg !16084
  %14 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 2, !dbg !16102
  %15 = load i32*, i32** %14, align 4, !dbg !16102
  call void @llvm.dbg.value(metadata i32* %15, metadata !16082, metadata !DIExpression()), !dbg !16084
  %16 = icmp ult i32* %13, %15, !dbg !16103
  br i1 %16, label %17, label %44, !dbg !16106

17:                                               ; preds = %11, %41
  %18 = phi i32* [ %42, %41 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32* %18, metadata !16081, metadata !DIExpression()), !dbg !16084
  %19 = load i32, i32* %18, align 4, !dbg !16107
  %20 = icmp eq i32 %19, 0, !dbg !16110
  %21 = getelementptr inbounds i32, i32* %18, i32 1
  %22 = load i32, i32* %21, align 4, !dbg !16111
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %20, i1 %23, i1 false, !dbg !16112
  br i1 %24, label %25, label %33, !dbg !16112

25:                                               ; preds = %17
  %26 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !16113
  %27 = load i32, i32* %26, align 4, !dbg !16114
  %28 = icmp eq i32 %27, 0, !dbg !16115
  br i1 %28, label %29, label %33, !dbg !16116

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !16117
  %31 = load i32, i32* %30, align 4, !dbg !16118
  %32 = icmp eq i32 %31, 0, !dbg !16119
  br i1 %32, label %41, label %33, !dbg !16120

33:                                               ; preds = %17, %29, %25
  %34 = phi i32 [ 0, %29 ], [ 0, %25 ], [ %22, %17 ], !dbg !16121
  %35 = ptrtoint i32* %18 to i32, !dbg !16122
  %36 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !16123
  %37 = load i32, i32* %36, align 4, !dbg !16124
  %38 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !16125
  %39 = load i32, i32* %38, align 4, !dbg !16126
  %40 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77.386, i32 0, i32 0), i32 noundef %35, i32 noundef %19, i32 noundef %34, i32 noundef %37, i32 noundef %39) #18, !dbg !16127
  br label %41, !dbg !16128

41:                                               ; preds = %29, %33
  %42 = getelementptr inbounds i32, i32* %18, i32 4, !dbg !16129
  call void @llvm.dbg.value(metadata i32* %42, metadata !16081, metadata !DIExpression()), !dbg !16084
  %43 = icmp ult i32* %42, %15, !dbg !16103
  br i1 %43, label %17, label %44, !dbg !16106, !llvm.loop !16130

44:                                               ; preds = %41, %11, %6
  %45 = add i32 %7, 1, !dbg !16132
  call void @llvm.dbg.value(metadata i32 %45, metadata !16083, metadata !DIExpression()), !dbg !16084
  %46 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %45, i32 0, !dbg !16085
  %47 = load i8*, i8** %46, align 4, !dbg !16085
  %48 = icmp eq i8* %47, null, !dbg !16090
  br i1 %48, label %3, label %6, !dbg !16091, !llvm.loop !16133

49:                                               ; preds = %3, %57
  %50 = phi i32 [ %58, %57 ], [ %4, %3 ]
  %51 = phi i32 [ %59, %57 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !16083, metadata !DIExpression()), !dbg !16084
  %52 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %51, i32 1, !dbg !16136
  %53 = load void ()*, void ()** %52, align 4, !dbg !16136
  %54 = icmp eq void ()* %53, null, !dbg !16139
  br i1 %54, label %57, label %55, !dbg !16140

55:                                               ; preds = %49
  tail call void %53() #18, !dbg !16141
  %56 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !16092
  br label %57, !dbg !16143

57:                                               ; preds = %49, %55
  %58 = phi i32 [ %50, %49 ], [ %56, %55 ], !dbg !16092
  %59 = add nuw i32 %51, 1, !dbg !16144
  call void @llvm.dbg.value(metadata i32 %59, metadata !16083, metadata !DIExpression()), !dbg !16084
  %60 = icmp ult i32 %59, %58, !dbg !16095
  br i1 %60, label %49, label %61, !dbg !16096, !llvm.loop !16145

61:                                               ; preds = %57, %3
  %62 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78.387, i32 0, i32 0)) #18, !dbg !16147
  ret void, !dbg !16148
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Hard_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !16149 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !16151, metadata !DIExpression()), !dbg !16152
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79.388, i32 0, i32 0)) #18, !dbg !16153
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !16154
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80.389, i32 0, i32 0), i32 noundef %3) #18, !dbg !16155
  %5 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !16156
  %6 = and i32 %5, 1073741824, !dbg !16158
  %7 = icmp eq i32 %6, 0, !dbg !16159
  br i1 %7, label %28, label %8, !dbg !16160

8:                                                ; preds = %1
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81.390, i32 0, i32 0)) #18, !dbg !16161
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16163
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82.391, i32 0, i32 0), i32 noundef %10) #18, !dbg !16164
  %12 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16165
  %13 = icmp ult i32 %12, 65536, !dbg !16167
  br i1 %13, label %16, label %14, !dbg !16168

14:                                               ; preds = %8
  %15 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16169
  tail call void @printUsageErrorMsg(i32 noundef %15) #20, !dbg !16171
  br label %16, !dbg !16172

16:                                               ; preds = %14, %8
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16173
  %18 = and i32 %17, 65280, !dbg !16175
  %19 = icmp eq i32 %18, 0, !dbg !16176
  br i1 %19, label %22, label %20, !dbg !16177

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16178
  tail call void @printBusFaultErrorMsg(i32 noundef %21) #20, !dbg !16180
  br label %22, !dbg !16181

22:                                               ; preds = %20, %16
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16182
  %24 = and i32 %23, 255, !dbg !16184
  %25 = icmp eq i32 %24, 0, !dbg !16185
  br i1 %25, label %28, label %26, !dbg !16186

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16187
  tail call void @printMemoryManagementErrorMsg(i32 noundef %27) #20, !dbg !16189
  br label %28, !dbg !16190

28:                                               ; preds = %22, %26, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !16191
  tail call void @memoryDumpAll() #20, !dbg !16192
  br label %29, !dbg !16193

29:                                               ; preds = %28, %29
  br label %29, !dbg !16193, !llvm.loop !16194
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @MemManage_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !16196 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !16198, metadata !DIExpression()), !dbg !16199
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83.392, i32 0, i32 0)) #18, !dbg !16200
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16201
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82.391, i32 0, i32 0), i32 noundef %3) #18, !dbg !16202
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16203
  %6 = and i32 %5, 255, !dbg !16205
  %7 = icmp eq i32 %6, 0, !dbg !16206
  br i1 %7, label %10, label %8, !dbg !16207

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16208
  tail call void @printMemoryManagementErrorMsg(i32 noundef %9) #20, !dbg !16210
  br label %10, !dbg !16211

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !16212
  tail call void @memoryDumpAll() #20, !dbg !16213
  br label %11, !dbg !16214

11:                                               ; preds = %10, %11
  br label %11, !dbg !16214, !llvm.loop !16215
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Bus_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !16217 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !16219, metadata !DIExpression()), !dbg !16220
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84.393, i32 0, i32 0)) #18, !dbg !16221
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16222
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82.391, i32 0, i32 0), i32 noundef %3) #18, !dbg !16223
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16224
  %6 = and i32 %5, 65280, !dbg !16226
  %7 = icmp eq i32 %6, 0, !dbg !16227
  br i1 %7, label %10, label %8, !dbg !16228

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16229
  tail call void @printBusFaultErrorMsg(i32 noundef %9) #20, !dbg !16231
  br label %10, !dbg !16232

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !16233
  tail call void @memoryDumpAll() #20, !dbg !16234
  br label %11, !dbg !16235

11:                                               ; preds = %10, %11
  br label %11, !dbg !16235, !llvm.loop !16236
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Usage_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !16238 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !16240, metadata !DIExpression()), !dbg !16241
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85.394, i32 0, i32 0)) #18, !dbg !16242
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16243
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82.391, i32 0, i32 0), i32 noundef %3) #18, !dbg !16244
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16245
  %6 = icmp ult i32 %5, 65536, !dbg !16247
  br i1 %6, label %9, label %7, !dbg !16248

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16249
  tail call void @printUsageErrorMsg(i32 noundef %8) #20, !dbg !16251
  br label %9, !dbg !16252

9:                                                ; preds = %7, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !16253
  tail call void @memoryDumpAll() #20, !dbg !16254
  br label %10, !dbg !16255

10:                                               ; preds = %9, %10
  br label %10, !dbg !16255, !llvm.loop !16256
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Debug_Monitor_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !16258 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !16260, metadata !DIExpression()), !dbg !16264
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86.395, i32 0, i32 0)) #18, !dbg !16265
  call void @llvm.dbg.value(metadata i32 12, metadata !16261, metadata !DIExpression()), !dbg !16264
  %3 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !16266
  call void @llvm.dbg.value(metadata i32 %3, metadata !16263, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !16264
  %4 = load volatile i32, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !16268
  call void @llvm.dbg.value(metadata i32 %4, metadata !16262, metadata !DIExpression()), !dbg !16264
  %5 = and i32 %3, 16777216, !dbg !16269
  %6 = icmp eq i32 %5, 0, !dbg !16269
  %7 = select i1 %6, i32 78, i32 89, !dbg !16269
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.87.396, i32 0, i32 0), i32 noundef %7, i32 noundef %4) #18, !dbg !16270
  tail call void @stackDump(i32* noundef %0) #20, !dbg !16271
  tail call void @memoryDumpAll() #20, !dbg !16272
  br label %9, !dbg !16273

9:                                                ; preds = %9, %1
  br label %9, !dbg !16273, !llvm.loop !16274
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @CommonFault_Handler() #16 section ".ramTEXT" !dbg !16276 {
  tail call void asm sideeffect "cpsid i                       \0Aldr r3, =pxExceptionStack     \0Aldr r3, [r3]                  \0Aldr r0, =pTaskContext         \0Aldr r0, [r0]                  \0Aadd r0, r0, #16               \0Astmia r0!, {r4-r11}           \0Amov r5, r12                   \0Aadd r0, r0, #20               \0Amrs r1, control               \0Astr r1, [r0], #4              \0Astr r5, [r0], #4              \0Amrs r4, msp                   \0Astr r4, [r0], #4              \0Amrs r1, psp                   \0Astr r1, [r0]                  \0Atst r5, #0x10                 \0Aitt eq                        \0Aaddeq r0, r0, #68             \0Avstmeq r0, {s16-s31}          \0Acmp r3, #0                    \0Ait ne                         \0Amovne sp, r3                  \0Apush {lr}                     \0Abl exception_init             \0Apop {lr}                      \0Atst r5, #4                    \0Aite eq                        \0Amoveq r0, r4                  \0Amrsne r0, psp                 \0Abx lr                         \0A", ""() #17, !dbg !16277, !srcloc !16278
  unreachable, !dbg !16279
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @HardFault_Handler() #16 section ".ramTEXT" !dbg !16280 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Hard_Fault_Handler         \0A", ""() #17, !dbg !16281, !srcloc !16282
  unreachable, !dbg !16283
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @MemManage_Handler() #16 section ".ramTEXT" !dbg !16284 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl MemManage_Fault_Handler    \0A", ""() #17, !dbg !16285, !srcloc !16286
  unreachable, !dbg !16287
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @BusFault_Handler() #16 section ".ramTEXT" !dbg !16288 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Bus_Fault_Handler          \0A", ""() #17, !dbg !16289, !srcloc !16290
  unreachable, !dbg !16291
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @UsageFault_Handler() #16 section ".ramTEXT" !dbg !16292 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Usage_Fault_Handler        \0A", ""() #17, !dbg !16293, !srcloc !16294
  unreachable, !dbg !16295
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @DebugMon_Handler() #16 section ".ramTEXT" !dbg !16296 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Debug_Monitor_Handler      \0A", ""() #17, !dbg !16297, !srcloc !16298
  unreachable, !dbg !16299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vApplicationStackOverflowHook(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !16300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16304, metadata !DIExpression()), !dbg !16306
  call void @llvm.dbg.value(metadata i8* %1, metadata !16305, metadata !DIExpression()), !dbg !16306
  %3 = ptrtoint i8* %0 to i32, !dbg !16307
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.399, i32 0, i32 0), i32 noundef %3, i8* noundef %1) #18, !dbg !16308
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.401, i32 0, i32 0), i32 noundef 103) #18, !dbg !16309
  ret void, !dbg !16312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, ...) #0 !dbg !16313 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !16315, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i8* %1, metadata !16316, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 %2, metadata !16317, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 %3, metadata !16318, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i8* %4, metadata !16319, metadata !DIExpression()), !dbg !16327
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !16328
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !16328
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !16320, metadata !DIExpression()), !dbg !16329
  call void @llvm.va_start(i8* nonnull %7), !dbg !16330
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !16331
  %9 = load i32, i32* %8, align 4, !dbg !16331
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !16331
  call void @vprint_module_log(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %10) #20, !dbg !16331
  call void @llvm.va_end(i8* nonnull %7), !dbg !16332
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !16333
  ret void, !dbg !16333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, ...) #0 !dbg !16334 {
  %8 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !16336, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata i8* %1, metadata !16337, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata i32 %2, metadata !16338, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata i32 %3, metadata !16339, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata i8* %4, metadata !16340, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata i32 %5, metadata !16341, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata i8* %6, metadata !16342, metadata !DIExpression()), !dbg !16344
  %9 = bitcast %struct.__va_list* %8 to i8*, !dbg !16345
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17, !dbg !16345
  call void @llvm.dbg.declare(metadata %struct.__va_list* %8, metadata !16343, metadata !DIExpression()), !dbg !16346
  call void @llvm.va_start(i8* nonnull %9), !dbg !16347
  %10 = bitcast %struct.__va_list* %8 to i32*, !dbg !16348
  %11 = load i32, i32* %10, align 4, !dbg !16348
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !16348
  call void @vdump_module_buffer(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %12) #20, !dbg !16348
  call void @llvm.va_end(i8* nonnull %9), !dbg !16349
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17, !dbg !16350
  ret void, !dbg !16350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vdump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %7) local_unnamed_addr #0 !dbg !16351 {
  %9 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16362, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i8* %0, metadata !16355, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i8* %1, metadata !16356, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 %2, metadata !16357, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 %3, metadata !16358, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i8* %4, metadata !16359, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 %5, metadata !16360, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i8* %6, metadata !16361, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i8* %0, metadata !16363, metadata !DIExpression()), !dbg !16377
  %10 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !16378
  %11 = bitcast i8* %10 to i32*, !dbg !16378
  %12 = load i32, i32* %11, align 4, !dbg !16378
  %13 = icmp eq i32 %12, 0, !dbg !16379
  br i1 %13, label %14, label %101, !dbg !16380

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !16381
  %16 = bitcast i8* %15 to i32*, !dbg !16381
  %17 = load i32, i32* %16, align 4, !dbg !16381
  %18 = icmp ugt i32 %17, %3, !dbg !16382
  br i1 %18, label %101, label %19, !dbg !16383

19:                                               ; preds = %14
  %20 = load i1, i1* @syslog_task_ready, align 4, !dbg !16384
  br i1 %20, label %21, label %28, !dbg !16385

21:                                               ; preds = %19
  %22 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !16386
  %23 = icmp eq i32 %22, 0, !dbg !16387
  br i1 %23, label %24, label %50, !dbg !16388

24:                                               ; preds = %21
  %25 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16389
  %26 = and i32 %25, 255, !dbg !16390
  %27 = icmp eq i32 %26, 0, !dbg !16391
  br i1 %27, label %28, label %50, !dbg !16392

28:                                               ; preds = %24, %19
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !16393
  %30 = icmp eq i32 %29, 0, !dbg !16394
  br i1 %30, label %101, label %31, !dbg !16395

31:                                               ; preds = %28
  %32 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !16396, !srcloc !16402
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !16396
  call void @llvm.dbg.value(metadata i32 %33, metadata !16399, metadata !DIExpression()) #17, !dbg !16403
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()) #17, !dbg !16403
  call void @llvm.dbg.value(metadata i32 %33, metadata !16365, metadata !DIExpression()), !dbg !16404
  %34 = load i32, i32* @syslog_init_done, align 4, !dbg !16405
  %35 = icmp ugt i32 %34, 1, !dbg !16407
  br i1 %35, label %36, label %47, !dbg !16408

36:                                               ; preds = %31
  %37 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !16409
  %38 = bitcast i8* %0 to i8**, !dbg !16411
  %39 = load i8*, i8** %38, align 4, !dbg !16411
  %40 = icmp ult i32 %3, 4, !dbg !16412
  br i1 %40, label %41, label %44, !dbg !16412

41:                                               ; preds = %36
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !16412
  %43 = load i8*, i8** %42, align 4, !dbg !16412
  br label %44, !dbg !16412

44:                                               ; preds = %36, %41
  %45 = phi i8* [ %43, %41 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.409, i32 0, i32 0), %36 ], !dbg !16412
  %46 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.410, i32 0, i32 0), i32 noundef %37, i8* noundef %39, i8* noundef %45, i8* noundef %1, i32 noundef %2) #18, !dbg !16413
  br label %47, !dbg !16414

47:                                               ; preds = %44, %31
  %48 = tail call i32 @vprintf(i8* noundef %6, [1 x i32] %7) #18, !dbg !16415
  %49 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.411, i32 0, i32 0)) #18, !dbg !16416
  tail call void @hex_dump_data(i8* noundef %4, i32 noundef %5) #20, !dbg !16417
  call void @llvm.dbg.value(metadata i32 %33, metadata !16418, metadata !DIExpression()) #17, !dbg !16421
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #17, !dbg !16423, !srcloc !16424
  br label %101, !dbg !16425

50:                                               ; preds = %24, %21
  %51 = bitcast %struct.syslog_buffer_t** %9 to i8*, !dbg !16426
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #17, !dbg !16426
  %52 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #20, !dbg !16427
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %52, metadata !16372, metadata !DIExpression()), !dbg !16428
  store %struct.syslog_buffer_t* %52, %struct.syslog_buffer_t** %9, align 4, !dbg !16429
  %53 = icmp eq %struct.syslog_buffer_t* %52, null, !dbg !16430
  br i1 %53, label %100, label %54, !dbg !16432

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 0, !dbg !16433
  call void @llvm.dbg.value(metadata i8* %55, metadata !16374, metadata !DIExpression()), !dbg !16428
  %56 = bitcast i8* %55 to i32*, !dbg !16434
  store i32 1, i32* %56, align 4, !dbg !16435
  %57 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 4, !dbg !16436
  call void @llvm.dbg.value(metadata i8* %57, metadata !16375, metadata !DIExpression()), !dbg !16428
  %58 = bitcast i8* %0 to i8**, !dbg !16437
  %59 = load i8*, i8** %58, align 4, !dbg !16437
  %60 = bitcast i8* %57 to i8**, !dbg !16438
  store i8* %59, i8** %60, align 4, !dbg !16439
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 8, !dbg !16440
  %62 = bitcast i8* %61 to i32*, !dbg !16440
  store i32 %3, i32* %62, align 4, !dbg !16441
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 12, !dbg !16442
  %64 = bitcast i8* %63 to i8**, !dbg !16442
  store i8* %1, i8** %64, align 4, !dbg !16443
  %65 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 16, !dbg !16444
  %66 = bitcast i8* %65 to i32*, !dbg !16444
  store i32 %2, i32* %66, align 4, !dbg !16445
  %67 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !16446
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 20, !dbg !16447
  %69 = bitcast i8* %68 to i32*, !dbg !16447
  store i32 %67, i32* %69, align 4, !dbg !16448
  %70 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 24, !dbg !16449
  %71 = tail call i32 @vsnprintf(i8* noundef nonnull %70, i32 noundef 128, i8* noundef %6, [1 x i32] %7) #18, !dbg !16450
  %72 = icmp slt i32 %5, 2048, !dbg !16451
  %73 = select i1 %72, i32 %5, i32 2048, !dbg !16451
  call void @llvm.dbg.value(metadata i32 %73, metadata !16360, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 0, metadata !16364, metadata !DIExpression()), !dbg !16377
  %74 = icmp sgt i32 %73, 128, !dbg !16452
  br i1 %74, label %75, label %81, !dbg !16454

75:                                               ; preds = %54
  %76 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16455
  %77 = and i32 %76, 255, !dbg !16458
  %78 = icmp eq i32 %77, 0, !dbg !16459
  %79 = add nsw i32 %73, -128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16364, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 128, metadata !16360, metadata !DIExpression()), !dbg !16377
  %80 = select i1 %78, i32 %79, i32 0, !dbg !16460
  br label %81, !dbg !16460

81:                                               ; preds = %75, %54
  %82 = phi i32 [ 0, %54 ], [ %80, %75 ], !dbg !16428
  %83 = phi i32 [ %5, %54 ], [ 128, %75 ], !dbg !16428
  call void @llvm.dbg.value(metadata i32 %83, metadata !16360, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 %82, metadata !16364, metadata !DIExpression()), !dbg !16377
  %84 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 160, !dbg !16461
  %85 = tail call i8* @memcpy(i8* noundef nonnull %84, i8* noundef %4, i32 noundef %83) #18, !dbg !16462
  %86 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 156, !dbg !16463
  %87 = bitcast i8* %86 to i32*, !dbg !16463
  store i32 %83, i32* %87, align 4, !dbg !16464
  %88 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 288, !dbg !16465
  %89 = bitcast i8* %88 to i8**, !dbg !16465
  store i8* null, i8** %89, align 4, !dbg !16466
  %90 = icmp eq i32 %82, 0, !dbg !16467
  br i1 %90, label %99, label %91, !dbg !16469

91:                                               ; preds = %81
  %92 = tail call i8* @pvPortMalloc(i32 noundef %82) #18, !dbg !16470
  store i8* %92, i8** %89, align 4, !dbg !16473
  %93 = icmp eq i8* %92, null, !dbg !16474
  br i1 %93, label %99, label %94, !dbg !16475

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %4, i32 %83, !dbg !16476
  %96 = tail call i8* @memcpy(i8* noundef nonnull %92, i8* noundef %95, i32 noundef %82) #18, !dbg !16478
  %97 = load i32, i32* %87, align 4, !dbg !16479
  %98 = add i32 %97, %82, !dbg !16479
  store i32 %98, i32* %87, align 4, !dbg !16479
  br label %99, !dbg !16480

99:                                               ; preds = %91, %94, %81
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %9, metadata !16372, metadata !DIExpression(DW_OP_deref)), !dbg !16428
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %9) #20, !dbg !16481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #17, !dbg !16482
  br label %101

100:                                              ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #17, !dbg !16482
  br label %101

101:                                              ; preds = %99, %8, %14, %28, %47, %100
  ret void, !dbg !16483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_current_time_in_ms() unnamed_addr #0 !dbg !16484 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !16490
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #17, !dbg !16490
  call void @llvm.dbg.value(metadata i32 0, metadata !16488, metadata !DIExpression()), !dbg !16491
  store i32 0, i32* %1, align 4, !dbg !16492
  call void @llvm.dbg.value(metadata i64 0, metadata !16489, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i32* %1, metadata !16488, metadata !DIExpression(DW_OP_deref)), !dbg !16491
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #18, !dbg !16493
  %4 = load i32, i32* %1, align 4, !dbg !16494
  call void @llvm.dbg.value(metadata i32 %4, metadata !16488, metadata !DIExpression()), !dbg !16491
  %5 = zext i32 %4 to i64, !dbg !16495
  %6 = mul nuw nsw i64 %5, 1000, !dbg !16496
  %7 = lshr i64 %6, 15, !dbg !16497
  call void @llvm.dbg.value(metadata i64 %7, metadata !16489, metadata !DIExpression()), !dbg !16491
  %8 = trunc i64 %7 to i32, !dbg !16498
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #17, !dbg !16499
  ret i32 %8, !dbg !16500
}

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hex_dump_data(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !16501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16505, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata i32 %1, metadata !16506, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata i32 0, metadata !16507, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata i32 0, metadata !16507, metadata !DIExpression()), !dbg !16508
  %3 = icmp sgt i32 %1, 0, !dbg !16509
  br i1 %3, label %4, label %25, !dbg !16512

4:                                                ; preds = %2, %18
  %5 = phi i32 [ %10, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !16507, metadata !DIExpression()), !dbg !16508
  %6 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !16513
  %7 = load i8, i8* %6, align 1, !dbg !16513
  %8 = zext i8 %7 to i32, !dbg !16515
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.412, i32 0, i32 0), i32 noundef %8) #18, !dbg !16516
  %10 = add nuw nsw i32 %5, 1, !dbg !16517
  %11 = and i32 %10, 15, !dbg !16519
  %12 = icmp eq i32 %11, 0, !dbg !16520
  br i1 %12, label %15, label %13, !dbg !16521

13:                                               ; preds = %4
  %14 = icmp eq i32 %10, %1, !dbg !16522
  br i1 %14, label %18, label %15, !dbg !16524

15:                                               ; preds = %13, %4
  %16 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.411, i32 0, i32 0), %4 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.413, i32 0, i32 0), %13 ]
  %17 = tail call i32 (i8*, ...) @printf(i8* noundef %16) #18, !dbg !16525
  br label %18, !dbg !16509

18:                                               ; preds = %15, %13
  call void @llvm.dbg.value(metadata i32 %10, metadata !16507, metadata !DIExpression()), !dbg !16508
  %19 = icmp eq i32 %10, %1, !dbg !16509
  br i1 %19, label %20, label %4, !dbg !16512, !llvm.loop !16526

20:                                               ; preds = %18
  %21 = and i32 %1, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !dbg !16528

23:                                               ; preds = %20
  %24 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.411, i32 0, i32 0)) #18, !dbg !16530
  br label %25, !dbg !16532

25:                                               ; preds = %2, %23, %20
  ret void, !dbg !16533
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.syslog_buffer_t* @buffer_pool_alloc() local_unnamed_addr #0 !dbg !16534 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !16540, !srcloc !16402
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16540
  call void @llvm.dbg.value(metadata i32 %2, metadata !16399, metadata !DIExpression()) #17, !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()) #17, !dbg !16542
  call void @llvm.dbg.value(metadata i32 %2, metadata !16538, metadata !DIExpression()), !dbg !16543
  call void @llvm.dbg.value(metadata i32 0, metadata !16539, metadata !DIExpression()), !dbg !16543
  br label %6, !dbg !16544

3:                                                ; preds = %6
  %4 = add nuw nsw i32 %7, 1, !dbg !16546
  call void @llvm.dbg.value(metadata i32 %4, metadata !16539, metadata !DIExpression()), !dbg !16543
  call void @llvm.dbg.value(metadata i32 %7, metadata !16539, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16543
  %5 = icmp eq i32 %4, 16, !dbg !16548
  br i1 %5, label %14, label %6, !dbg !16544, !llvm.loop !16549

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %0 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !16539, metadata !DIExpression()), !dbg !16543
  %8 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %7, !dbg !16551
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !16554
  %10 = load i32, i32* %9, align 4, !dbg !16554
  %11 = icmp eq i32 %10, 0, !dbg !16551
  call void @llvm.dbg.value(metadata i32 %7, metadata !16539, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16543
  br i1 %11, label %12, label %3, !dbg !16555

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !16554
  store i32 1, i32* %13, align 4, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %2, metadata !16418, metadata !DIExpression()) #17, !dbg !16558
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #17, !dbg !16560, !srcloc !16424
  br label %17, !dbg !16561

14:                                               ; preds = %3
  %15 = load i32, i32* @syslog_drop_count, align 4, !dbg !16562
  %16 = add i32 %15, 1, !dbg !16562
  store i32 %16, i32* @syslog_drop_count, align 4, !dbg !16562
  call void @llvm.dbg.value(metadata i32 %2, metadata !16418, metadata !DIExpression()) #17, !dbg !16563
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #17, !dbg !16565, !srcloc !16424
  br label %17, !dbg !16566

17:                                               ; preds = %14, %12
  %18 = phi %struct.syslog_buffer_t* [ %8, %12 ], [ null, %14 ], !dbg !16543
  ret %struct.syslog_buffer_t* %18, !dbg !16567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_send(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !16568 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !16573, metadata !DIExpression()), !dbg !16577
  %3 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16578
  %4 = and i32 %3, 255, !dbg !16579
  %5 = icmp eq i32 %4, 0, !dbg !16579
  br i1 %5, label %19, label %6, !dbg !16580

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !16581
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !16581
  call void @llvm.dbg.value(metadata i32 0, metadata !16574, metadata !DIExpression()), !dbg !16582
  store i32 0, i32* %2, align 4, !dbg !16583
  %8 = load i8*, i8** @g_log_queue, align 4, !dbg !16584
  %9 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !16584
  call void @llvm.dbg.value(metadata i32* %2, metadata !16574, metadata !DIExpression(DW_OP_deref)), !dbg !16582
  %10 = call i32 @xQueueGenericSendFromISR(i8* noundef %8, i8* noundef %9, i32* noundef nonnull %2, i32 noundef 0) #18, !dbg !16584
  %11 = icmp eq i32 %10, 0, !dbg !16586
  br i1 %11, label %12, label %14, !dbg !16587

12:                                               ; preds = %6
  %13 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %0, align 4, !dbg !16588
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %13) #20, !dbg !16590
  br label %18, !dbg !16591

14:                                               ; preds = %6
  %15 = load i32, i32* %2, align 4, !dbg !16592
  call void @llvm.dbg.value(metadata i32 %15, metadata !16574, metadata !DIExpression()), !dbg !16582
  %16 = icmp eq i32 %15, 0, !dbg !16592
  br i1 %16, label %18, label %17, !dbg !16595

17:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16596
  call void asm sideeffect "dsb", ""() #17, !dbg !16596, !srcloc !16598
  call void asm sideeffect "isb", ""() #17, !dbg !16596, !srcloc !16599
  br label %18, !dbg !16596

18:                                               ; preds = %14, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !16600
  br label %23, !dbg !16601

19:                                               ; preds = %1
  %20 = load i8*, i8** @g_log_queue, align 4, !dbg !16602
  %21 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !16602
  %22 = tail call i32 @xQueueGenericSend(i8* noundef %20, i8* noundef %21, i32 noundef -1, i32 noundef 0) #18, !dbg !16602
  br label %23

23:                                               ; preds = %19, %18
  ret void, !dbg !16604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_release(%struct.syslog_buffer_t* nocapture noundef %0) local_unnamed_addr #0 !dbg !16605 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !16609, metadata !DIExpression()), !dbg !16612
  %2 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 0, !dbg !16613
  call void @llvm.dbg.value(metadata i8* %2, metadata !16611, metadata !DIExpression()), !dbg !16612
  %3 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !16614, !srcloc !16402
  call void @llvm.dbg.value(metadata i32 undef, metadata !16399, metadata !DIExpression()) #17, !dbg !16616
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()) #17, !dbg !16616
  call void @llvm.dbg.value(metadata i32 undef, metadata !16610, metadata !DIExpression()), !dbg !16612
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !16617
  store i32 0, i32* %4, align 4, !dbg !16618
  %5 = bitcast i8* %2 to i32*, !dbg !16619
  %6 = load i32, i32* %5, align 4, !dbg !16619
  %7 = icmp eq i32 %6, 1, !dbg !16621
  br i1 %7, label %8, label %14, !dbg !16622

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !16611, metadata !DIExpression()), !dbg !16612
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 288, !dbg !16623
  %10 = bitcast i8* %9 to i8**, !dbg !16623
  %11 = load i8*, i8** %10, align 4, !dbg !16623
  %12 = icmp eq i8* %11, null, !dbg !16624
  br i1 %12, label %14, label %13, !dbg !16625

13:                                               ; preds = %8
  tail call void @vPortFree(i8* noundef nonnull %11) #18, !dbg !16626
  br label %14, !dbg !16628

14:                                               ; preds = %13, %8, %1
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !16614
  call void @llvm.dbg.value(metadata i32 %15, metadata !16399, metadata !DIExpression()) #17, !dbg !16616
  call void @llvm.dbg.value(metadata i32 %15, metadata !16610, metadata !DIExpression()), !dbg !16612
  call void @llvm.dbg.value(metadata i32 undef, metadata !16418, metadata !DIExpression()) #17, !dbg !16629
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %15) #17, !dbg !16631, !srcloc !16424
  ret void, !dbg !16632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprint_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %5) local_unnamed_addr #0 !dbg !16633 {
  %7 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16642, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i8* %0, metadata !16637, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i8* %1, metadata !16638, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 %2, metadata !16639, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 %3, metadata !16640, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i8* %4, metadata !16641, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i8* %0, metadata !16643, metadata !DIExpression()), !dbg !16656
  %8 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !16657
  %9 = bitcast i8* %8 to i32*, !dbg !16657
  %10 = load i32, i32* %9, align 4, !dbg !16657
  %11 = icmp eq i32 %10, 0, !dbg !16658
  br i1 %11, label %12, label %71, !dbg !16659

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !16660
  %14 = bitcast i8* %13 to i32*, !dbg !16660
  %15 = load i32, i32* %14, align 4, !dbg !16660
  %16 = icmp ugt i32 %15, %3, !dbg !16661
  br i1 %16, label %71, label %17, !dbg !16662

17:                                               ; preds = %12
  %18 = load i1, i1* @syslog_task_ready, align 4, !dbg !16663
  br i1 %18, label %19, label %26, !dbg !16664

19:                                               ; preds = %17
  %20 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !16665
  %21 = icmp eq i32 %20, 0, !dbg !16666
  br i1 %21, label %22, label %48, !dbg !16667

22:                                               ; preds = %19
  %23 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !16668
  %24 = and i32 %23, 255, !dbg !16669
  %25 = icmp eq i32 %24, 0, !dbg !16670
  br i1 %25, label %26, label %48, !dbg !16671

26:                                               ; preds = %22, %17
  %27 = load i32, i32* @syslog_init_done, align 4, !dbg !16672
  %28 = icmp eq i32 %27, 0, !dbg !16673
  br i1 %28, label %71, label %29, !dbg !16674

29:                                               ; preds = %26
  %30 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !16675, !srcloc !16402
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %31, metadata !16399, metadata !DIExpression()) #17, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()) #17, !dbg !16677
  call void @llvm.dbg.value(metadata i32 %31, metadata !16644, metadata !DIExpression()), !dbg !16678
  %32 = load i32, i32* @syslog_init_done, align 4, !dbg !16679
  %33 = icmp ugt i32 %32, 1, !dbg !16681
  br i1 %33, label %34, label %45, !dbg !16682

34:                                               ; preds = %29
  %35 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !16683
  %36 = bitcast i8* %0 to i8**, !dbg !16685
  %37 = load i8*, i8** %36, align 4, !dbg !16685
  %38 = icmp ult i32 %3, 4, !dbg !16686
  br i1 %38, label %39, label %42, !dbg !16686

39:                                               ; preds = %34
  %40 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !16686
  %41 = load i8*, i8** %40, align 4, !dbg !16686
  br label %42, !dbg !16686

42:                                               ; preds = %34, %39
  %43 = phi i8* [ %41, %39 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.409, i32 0, i32 0), %34 ], !dbg !16686
  %44 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.410, i32 0, i32 0), i32 noundef %35, i8* noundef %37, i8* noundef %43, i8* noundef %1, i32 noundef %2) #18, !dbg !16687
  br label %45, !dbg !16688

45:                                               ; preds = %42, %29
  %46 = tail call i32 @vprintf(i8* noundef %4, [1 x i32] %5) #18, !dbg !16689
  %47 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.411, i32 0, i32 0)) #18, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %31, metadata !16418, metadata !DIExpression()) #17, !dbg !16691
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %31) #17, !dbg !16693, !srcloc !16424
  br label %71, !dbg !16694

48:                                               ; preds = %22, %19
  %49 = bitcast %struct.syslog_buffer_t** %7 to i8*, !dbg !16695
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #17, !dbg !16695
  %50 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #20, !dbg !16696
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %50, metadata !16651, metadata !DIExpression()), !dbg !16697
  store %struct.syslog_buffer_t* %50, %struct.syslog_buffer_t** %7, align 4, !dbg !16698
  %51 = icmp eq %struct.syslog_buffer_t* %50, null, !dbg !16699
  br i1 %51, label %70, label %52, !dbg !16701

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 0, !dbg !16702
  call void @llvm.dbg.value(metadata i8* %53, metadata !16653, metadata !DIExpression()), !dbg !16697
  %54 = bitcast i8* %53 to i32*, !dbg !16703
  store i32 0, i32* %54, align 4, !dbg !16704
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 4, !dbg !16705
  call void @llvm.dbg.value(metadata i8* %55, metadata !16654, metadata !DIExpression()), !dbg !16697
  %56 = bitcast i8* %0 to i8**, !dbg !16706
  %57 = load i8*, i8** %56, align 4, !dbg !16706
  %58 = bitcast i8* %55 to i8**, !dbg !16707
  store i8* %57, i8** %58, align 4, !dbg !16708
  %59 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 8, !dbg !16709
  %60 = bitcast i8* %59 to i32*, !dbg !16709
  store i32 %3, i32* %60, align 4, !dbg !16710
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 12, !dbg !16711
  %62 = bitcast i8* %61 to i8**, !dbg !16711
  store i8* %1, i8** %62, align 4, !dbg !16712
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 16, !dbg !16713
  %64 = bitcast i8* %63 to i32*, !dbg !16713
  store i32 %2, i32* %64, align 4, !dbg !16714
  %65 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !16715
  %66 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 20, !dbg !16716
  %67 = bitcast i8* %66 to i32*, !dbg !16716
  store i32 %65, i32* %67, align 4, !dbg !16717
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 24, !dbg !16718
  %69 = tail call i32 @vsnprintf(i8* noundef nonnull %68, i32 noundef 256, i8* noundef %4, [1 x i32] %5) #18, !dbg !16719
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %7, metadata !16651, metadata !DIExpression(DW_OP_deref)), !dbg !16697
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %7) #20, !dbg !16720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #17, !dbg !16721
  br label %71

70:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #17, !dbg !16721
  br label %71

71:                                               ; preds = %52, %6, %12, %26, %45, %70
  ret void, !dbg !16722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_uart_init(i32 noundef %0) local_unnamed_addr #0 !dbg !16723 {
  %2 = alloca %struct.hal_uart_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !16725, metadata !DIExpression()), !dbg !16735
  %3 = bitcast %struct.hal_uart_config_t* %2 to i8*, !dbg !16736
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #17, !dbg !16736
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %2, metadata !16726, metadata !DIExpression()), !dbg !16737
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 0, !dbg !16738
  store i32 9, i32* %4, align 4, !dbg !16739
  %5 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 3, !dbg !16740
  store i32 0, i32* %5, align 4, !dbg !16741
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 2, !dbg !16742
  store i32 0, i32* %6, align 4, !dbg !16743
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 1, !dbg !16744
  store i32 3, i32* %7, align 4, !dbg !16745
  store i32 %0, i32* @g_log_uart_port, align 4, !dbg !16746
  %8 = call i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %2) #18, !dbg !16747
  call void @llvm.dbg.value(metadata i32 %8, metadata !16734, metadata !DIExpression()), !dbg !16735
  %9 = load i32, i32* @syslog_init_done, align 4, !dbg !16748
  %10 = or i32 %9, 1, !dbg !16748
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !16748
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #17, !dbg !16749
  ret i32 %8, !dbg !16750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_putchar(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !16751 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !16755, metadata !DIExpression()), !dbg !16756
  %2 = load i32, i32* @g_log_uart_port, align 4, !dbg !16757
  tail call void @hal_uart_put_char(i32 noundef %2, i8 noundef zeroext %0) #18, !dbg !16758
  ret void, !dbg !16759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_init() local_unnamed_addr #0 !dbg !16760 {
  %1 = tail call i8* @memset(i8* noundef bitcast ([16 x %struct.syslog_buffer_t]* @syslog_buffer_pool to i8*), i32 noundef 0, i32 noundef 4736) #18, !dbg !16761
  ret void, !dbg !16762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_create() local_unnamed_addr #0 !dbg !16763 {
  %1 = tail call i8* @xQueueGenericCreate(i32 noundef 8, i32 noundef 4, i8 noundef zeroext 0) #18, !dbg !16764
  store i8* %1, i8** @g_log_queue, align 4, !dbg !16765
  %2 = icmp eq i8* %1, null, !dbg !16766
  br i1 %2, label %3, label %5, !dbg !16768

3:                                                ; preds = %0
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.419, i32 0, i32 0)) #18, !dbg !16769
  br label %5, !dbg !16771

5:                                                ; preds = %3, %0
  ret void, !dbg !16772
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_queue_receive(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !16773 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !16777, metadata !DIExpression()), !dbg !16779
  %2 = load i8*, i8** @g_log_queue, align 4, !dbg !16780
  %3 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !16780
  %4 = tail call i32 @xQueueGenericReceive(i8* noundef %2, i8* noundef %3, i32 noundef -1, i32 noundef 0) #18, !dbg !16780
  call void @llvm.dbg.value(metadata i32 %4, metadata !16778, metadata !DIExpression()), !dbg !16779
  %5 = icmp ne i32 %4, 1, !dbg !16781
  %6 = sext i1 %5 to i32, !dbg !16782
  ret i32 %6, !dbg !16783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_normal_log(%struct.normal_log_message_t* noundef %0) local_unnamed_addr #0 !dbg !16784 {
  call void @llvm.dbg.value(metadata %struct.normal_log_message_t* %0, metadata !16790, metadata !DIExpression()), !dbg !16791
  %2 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 4, !dbg !16792
  %3 = load i32, i32* %2, align 4, !dbg !16792
  %4 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 0, !dbg !16793
  %5 = load i8*, i8** %4, align 4, !dbg !16793
  %6 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 1, !dbg !16794
  %7 = load i32, i32* %6, align 4, !dbg !16794
  %8 = icmp ult i32 %7, 4, !dbg !16794
  br i1 %8, label %9, label %12, !dbg !16794

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !16794
  %11 = load i8*, i8** %10, align 4, !dbg !16794
  br label %12, !dbg !16794

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.409, i32 0, i32 0), %1 ], !dbg !16794
  %14 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 2, !dbg !16795
  %15 = load i8*, i8** %14, align 4, !dbg !16795
  %16 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 3, !dbg !16796
  %17 = load i32, i32* %16, align 4, !dbg !16796
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.410, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #18, !dbg !16797
  %19 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 5, i32 0, !dbg !16798
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.420, i32 0, i32 0), i8* noundef nonnull %19) #18, !dbg !16799
  ret void, !dbg !16800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_hex_dump(%struct.hex_dump_message_t* noundef %0) local_unnamed_addr #0 !dbg !16801 {
  call void @llvm.dbg.value(metadata %struct.hex_dump_message_t* %0, metadata !16807, metadata !DIExpression()), !dbg !16808
  %2 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 4, !dbg !16809
  %3 = load i32, i32* %2, align 4, !dbg !16809
  %4 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 0, !dbg !16810
  %5 = load i8*, i8** %4, align 4, !dbg !16810
  %6 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 1, !dbg !16811
  %7 = load i32, i32* %6, align 4, !dbg !16811
  %8 = icmp ult i32 %7, 4, !dbg !16811
  br i1 %8, label %9, label %12, !dbg !16811

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !16811
  %11 = load i8*, i8** %10, align 4, !dbg !16811
  br label %12, !dbg !16811

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.409, i32 0, i32 0), %1 ], !dbg !16811
  %14 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 2, !dbg !16812
  %15 = load i8*, i8** %14, align 4, !dbg !16812
  %16 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 3, !dbg !16813
  %17 = load i32, i32* %16, align 4, !dbg !16813
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.410, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #18, !dbg !16814
  %19 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 5, i32 0, !dbg !16815
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.420, i32 0, i32 0), i8* noundef nonnull %19) #18, !dbg !16816
  %21 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 6, !dbg !16817
  %22 = load i32, i32* %21, align 4, !dbg !16817
  %23 = icmp ugt i32 %22, 128, !dbg !16819
  %24 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 7, i32 0, !dbg !16820
  br i1 %23, label %25, label %30, !dbg !16821

25:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef 128) #20, !dbg !16822
  %26 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 8, !dbg !16824
  %27 = load i8*, i8** %26, align 4, !dbg !16824
  %28 = load i32, i32* %21, align 4, !dbg !16825
  %29 = add i32 %28, -128, !dbg !16826
  tail call void @hex_dump_data(i8* noundef %27, i32 noundef %29) #20, !dbg !16827
  br label %31, !dbg !16828

30:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef %22) #20, !dbg !16829
  br label %31

31:                                               ; preds = %30, %25
  ret void, !dbg !16831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @process_log_message(%struct.log_message_t* noundef %0) local_unnamed_addr #0 !dbg !16832 {
  call void @llvm.dbg.value(metadata %struct.log_message_t* %0, metadata !16838, metadata !DIExpression()), !dbg !16842
  %2 = load i32, i32* @syslog_drop_count, align 4, !dbg !16843
  %3 = icmp eq i32 %2, 0, !dbg !16843
  br i1 %3, label %9, label %4, !dbg !16844

4:                                                ; preds = %1
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !16845, !srcloc !16402
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !16845
  call void @llvm.dbg.value(metadata i32 %6, metadata !16399, metadata !DIExpression()) #17, !dbg !16847
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()) #17, !dbg !16847
  call void @llvm.dbg.value(metadata i32 %6, metadata !16839, metadata !DIExpression()), !dbg !16848
  %7 = load i32, i32* @syslog_drop_count, align 4, !dbg !16849
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.421, i32 0, i32 0), i32 noundef %7) #18, !dbg !16850
  store i32 0, i32* @syslog_drop_count, align 4, !dbg !16851
  call void @llvm.dbg.value(metadata i32 %6, metadata !16418, metadata !DIExpression()) #17, !dbg !16852
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #17, !dbg !16854, !srcloc !16424
  br label %9, !dbg !16855

9:                                                ; preds = %4, %1
  %10 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 0, !dbg !16856
  %11 = load i32, i32* %10, align 4, !dbg !16856
  %12 = icmp eq i32 %11, 0, !dbg !16858
  br i1 %12, label %13, label %16, !dbg !16859

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, !dbg !16860
  %15 = bitcast %union.anon.44* %14 to %struct.normal_log_message_t*, !dbg !16862
  tail call void @print_normal_log(%struct.normal_log_message_t* noundef nonnull %15) #20, !dbg !16863
  br label %18, !dbg !16864

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, i32 0, !dbg !16865
  tail call void @print_hex_dump(%struct.hex_dump_message_t* noundef nonnull %17) #20, !dbg !16867
  br label %18

18:                                               ; preds = %16, %13
  ret void, !dbg !16868
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @syslog_task_entry(i8* nocapture readnone %0) #12 !dbg !16869 {
  %2 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i8* undef, metadata !16871, metadata !DIExpression()), !dbg !16876
  store i1 true, i1* @syslog_task_ready, align 4, !dbg !16877
  tail call void @vTaskPrioritySet(i8* noundef null, i32 noundef 1) #18, !dbg !16878
  %3 = bitcast %struct.syslog_buffer_t** %2 to i8*
  br label %4, !dbg !16879

4:                                                ; preds = %12, %1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !16880
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !16872, metadata !DIExpression()), !dbg !16881
  store %struct.syslog_buffer_t* null, %struct.syslog_buffer_t** %2, align 4, !dbg !16882
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %2, metadata !16872, metadata !DIExpression(DW_OP_deref)), !dbg !16881
  %5 = call i32 @log_queue_receive(%struct.syslog_buffer_t** noundef nonnull %2) #20, !dbg !16883
  %6 = icmp eq i32 %5, 0, !dbg !16885
  br i1 %6, label %7, label %12, !dbg !16886

7:                                                ; preds = %4
  %8 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !16887
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %8, metadata !16872, metadata !DIExpression()), !dbg !16881
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 1, i32 0, !dbg !16889
  %10 = bitcast i8* %9 to %struct.log_message_t*, !dbg !16890
  call void @process_log_message(%struct.log_message_t* noundef nonnull %10) #20, !dbg !16891
  %11 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !16892
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !16872, metadata !DIExpression()), !dbg !16881
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %11) #20, !dbg !16893
  br label %12, !dbg !16894

12:                                               ; preds = %7, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !16895
  br label %4, !dbg !16896, !llvm.loop !16897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_init(void (%struct.syslog_config_s*)* noundef %0, i32 (%struct.syslog_config_s*)* noundef readonly %1, %struct.log_control_block_t** noundef %2) local_unnamed_addr #0 !dbg !16900 {
  %4 = alloca %struct.exception_config_type, align 4
  call void @llvm.dbg.value(metadata void (%struct.syslog_config_s*)* %0, metadata !16909, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata i32 (%struct.syslog_config_s*)* %1, metadata !16910, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %2, metadata !16911, metadata !DIExpression()), !dbg !16918
  %5 = bitcast %struct.exception_config_type* %4 to i8*, !dbg !16919
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17, !dbg !16919
  call void @llvm.dbg.declare(metadata %struct.exception_config_type* %4, metadata !16912, metadata !DIExpression()), !dbg !16920
  %6 = load i32, i32* @syslog_init_done, align 4, !dbg !16921
  %7 = and i32 %6, 2, !dbg !16923
  %8 = icmp eq i32 %7, 0, !dbg !16923
  br i1 %8, label %9, label %31, !dbg !16924

9:                                                ; preds = %3
  %10 = or i32 %6, 1, !dbg !16925
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !16925
  tail call void @buffer_pool_init() #20, !dbg !16926
  tail call void @log_queue_create() #20, !dbg !16927
  store i1 false, i1* @syslog_task_ready, align 4, !dbg !16928
  %11 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 0, !dbg !16929
  store void ()* @syslog_exception_cb, void ()** %11, align 4, !dbg !16930
  %12 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 1, !dbg !16931
  store void ()* null, void ()** %12, align 4, !dbg !16932
  %13 = call zeroext i1 @exception_register_callbacks(%struct.exception_config_type* noundef nonnull %4) #18, !dbg !16933
  %14 = call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @syslog_task_entry, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.422, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef null, i32 noundef 8, i8** noundef nonnull @syslog_task_handle, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !16934
  %15 = icmp eq i32 %14, 1, !dbg !16936
  br i1 %15, label %18, label %16, !dbg !16937

16:                                               ; preds = %9
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.423, i32 0, i32 0)) #18, !dbg !16938
  br label %18, !dbg !16940

18:                                               ; preds = %16, %9
  %19 = call fastcc i32 @get_current_time_in_ms() #20, !dbg !16941
  %20 = load i32, i32* @syslog_init_done, align 4, !dbg !16942
  %21 = or i32 %20, 2, !dbg !16942
  store i32 %21, i32* @syslog_init_done, align 4, !dbg !16942
  store void (%struct.syslog_config_s*)* %0, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !16943
  store %struct.log_control_block_t** %2, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !16944
  %22 = icmp eq i32 (%struct.syslog_config_s*)* %1, null, !dbg !16945
  br i1 %22, label %28, label %23, !dbg !16947

23:                                               ; preds = %18
  %24 = call i32 %1(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !16948
  %25 = icmp eq i32 %24, 0, !dbg !16951
  br i1 %25, label %28, label %26, !dbg !16952

26:                                               ; preds = %23
  %27 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !16953
  call void (i8*, i8*, i32, i32, i8*, ...) %27(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.log_init, i32 0, i32 0), i32 noundef 1040, i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.424, i32 0, i32 0)) #18, !dbg !16953
  br label %28, !dbg !16956

28:                                               ; preds = %23, %26, %18
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !16957
  %30 = or i32 %29, 4, !dbg !16957
  store i32 %30, i32* @syslog_init_done, align 4, !dbg !16957
  br label %31, !dbg !16958

31:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17, !dbg !16958
  ret void, !dbg !16958
}

; Function Attrs: noinline nounwind optsize
define internal void @syslog_exception_cb() #0 !dbg !16959 {
  tail call fastcc void @syslog_buffer_dump() #20, !dbg !16960
  ret void, !dbg !16961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @syslog_buffer_dump() unnamed_addr #0 !dbg !16962 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 0, metadata !16964, metadata !DIExpression()), !dbg !16967
  br label %1, !dbg !16968

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 0, %0 ], [ %12, %10 ]
  %3 = phi %struct.syslog_buffer_t* [ null, %0 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !16964, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %3, metadata !16965, metadata !DIExpression()), !dbg !16967
  %4 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %2, !dbg !16970
  %5 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %4, i32 0, i32 0, !dbg !16974
  %6 = load i32, i32* %5, align 4, !dbg !16974
  %7 = icmp eq i32 %6, 0, !dbg !16970
  br i1 %7, label %10, label %8, !dbg !16975

8:                                                ; preds = %1
  %9 = ptrtoint %struct.syslog_buffer_t* %3 to i32, !dbg !16976
  store i32 %9, i32* %5, align 4, !dbg !16978
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %4, metadata !16965, metadata !DIExpression()), !dbg !16967
  br label %10, !dbg !16979

10:                                               ; preds = %1, %8
  %11 = phi %struct.syslog_buffer_t* [ %4, %8 ], [ %3, %1 ], !dbg !16967
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !16965, metadata !DIExpression()), !dbg !16967
  %12 = add nuw nsw i32 %2, 1, !dbg !16980
  call void @llvm.dbg.value(metadata i32 %12, metadata !16964, metadata !DIExpression()), !dbg !16967
  %13 = icmp eq i32 %12, 16, !dbg !16981
  br i1 %13, label %14, label %1, !dbg !16968, !llvm.loop !16982

14:                                               ; preds = %10
  %15 = tail call fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %11) #20, !dbg !16984
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !16965, metadata !DIExpression()), !dbg !16967
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.425, i32 0, i32 0)) #18, !dbg !16985
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !16965, metadata !DIExpression()), !dbg !16967
  %17 = icmp eq %struct.syslog_buffer_t* %15, null, !dbg !16986
  br i1 %17, label %26, label %18, !dbg !16986

18:                                               ; preds = %14, %18
  %19 = phi %struct.syslog_buffer_t* [ %22, %18 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !16966, metadata !DIExpression()), !dbg !16967
  %20 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 0, !dbg !16987
  %21 = load i32, i32* %20, align 4, !dbg !16987
  %22 = inttoptr i32 %21 to %struct.syslog_buffer_t*, !dbg !16989
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %22, metadata !16965, metadata !DIExpression()), !dbg !16967
  store i32 1, i32* %20, align 4, !dbg !16990
  %23 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 1, i32 0, !dbg !16991
  %24 = bitcast i8* %23 to %struct.log_message_t*, !dbg !16992
  tail call void @process_log_message(%struct.log_message_t* noundef nonnull %24) #20, !dbg !16993
  %25 = icmp eq i32 %21, 0, !dbg !16986
  br i1 %25, label %26, label %18, !dbg !16986, !llvm.loop !16994

26:                                               ; preds = %18, %14
  ret void, !dbg !16996
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %0) unnamed_addr #15 !dbg !16997 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !17001, metadata !DIExpression()), !dbg !17005
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !17002, metadata !DIExpression()), !dbg !17005
  %2 = icmp eq %struct.syslog_buffer_t* %0, null, !dbg !17006
  br i1 %2, label %44, label %3, !dbg !17008

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !17009
  %5 = load i32, i32* %4, align 4, !dbg !17009
  %6 = icmp eq i32 %5, 0, !dbg !17010
  br i1 %6, label %44, label %7, !dbg !17011

7:                                                ; preds = %3, %41
  %8 = phi i32 [ %43, %41 ], [ %5, %3 ], !dbg !17012
  %9 = phi %struct.syslog_buffer_t* [ %38, %41 ], [ null, %3 ]
  %10 = phi %struct.syslog_buffer_t* [ %12, %41 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %9, metadata !17002, metadata !DIExpression()), !dbg !17005
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !17001, metadata !DIExpression()), !dbg !17005
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !17003, metadata !DIExpression()), !dbg !17005
  %11 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 0, !dbg !17012
  %12 = inttoptr i32 %8 to %struct.syslog_buffer_t*, !dbg !17014
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !17001, metadata !DIExpression()), !dbg !17005
  %13 = icmp eq %struct.syslog_buffer_t* %9, null, !dbg !17015
  br i1 %13, label %35, label %14, !dbg !17017

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 1, i32 20, !dbg !17018
  %16 = bitcast i8* %15 to i32*, !dbg !17018
  %17 = load i32, i32* %16, align 4, !dbg !17018
  %18 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %9, i32 0, i32 1, i32 20, !dbg !17019
  %19 = bitcast i8* %18 to i32*, !dbg !17019
  %20 = load i32, i32* %19, align 4, !dbg !17019
  %21 = icmp ult i32 %17, %20, !dbg !17020
  br i1 %21, label %35, label %22, !dbg !17021

22:                                               ; preds = %14, %27
  %23 = phi %struct.syslog_buffer_t* [ %28, %27 ], [ %9, %14 ], !dbg !17022
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %23, metadata !17004, metadata !DIExpression()), !dbg !17005
  %24 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !17024
  %25 = load i32, i32* %24, align 4, !dbg !17024
  %26 = icmp eq i32 %25, 0, !dbg !17027
  br i1 %26, label %33, label %27, !dbg !17028

27:                                               ; preds = %22
  %28 = inttoptr i32 %25 to %struct.syslog_buffer_t*, !dbg !17029
  %29 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %28, i32 0, i32 1, i32 20, !dbg !17029
  %30 = bitcast i8* %29 to i32*, !dbg !17029
  %31 = load i32, i32* %30, align 4, !dbg !17029
  %32 = icmp ult i32 %17, %31, !dbg !17030
  br i1 %32, label %33, label %22, !dbg !17031, !llvm.loop !17032

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !17024
  store i32 %25, i32* %11, align 4, !dbg !17035
  br label %35, !dbg !17037

35:                                               ; preds = %7, %14, %33
  %36 = phi %struct.syslog_buffer_t* [ %10, %33 ], [ %9, %14 ], [ %9, %7 ]
  %37 = phi i32* [ %34, %33 ], [ %11, %14 ], [ %11, %7 ]
  %38 = phi %struct.syslog_buffer_t* [ %9, %33 ], [ %10, %14 ], [ %10, %7 ], !dbg !17005
  %39 = ptrtoint %struct.syslog_buffer_t* %36 to i32, !dbg !17038
  store i32 %39, i32* %37, align 4, !dbg !17038
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %38, metadata !17002, metadata !DIExpression()), !dbg !17005
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !17001, metadata !DIExpression()), !dbg !17005
  %40 = icmp eq i32 %8, 0, !dbg !17039
  br i1 %40, label %44, label %41, !dbg !17040, !llvm.loop !17041

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %12, i32 0, i32 0
  %43 = load i32, i32* %42, align 4, !dbg !17012
  br label %7, !dbg !17040

44:                                               ; preds = %35, %1, %3
  %45 = phi %struct.syslog_buffer_t* [ %0, %3 ], [ null, %1 ], [ %38, %35 ], !dbg !17005
  ret %struct.syslog_buffer_t* %45, !dbg !17043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @syslog_get_config(%struct.syslog_config_s* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !17044 {
  call void @llvm.dbg.value(metadata %struct.syslog_config_s* %0, metadata !17048, metadata !DIExpression()), !dbg !17049
  %2 = bitcast %struct.syslog_config_s* %0 to i64*, !dbg !17050
  %3 = load i64, i64* bitcast (%struct.syslog_config_s* @syslog_config to i64*), align 8, !dbg !17050
  store i64 %3, i64* %2, align 4, !dbg !17050
  ret void, !dbg !17051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_set_filter(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !17052 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17056, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i8* %1, metadata !17057, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i8* %2, metadata !17058, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata i32 %3, metadata !17059, metadata !DIExpression()), !dbg !17063
  %5 = tail call i32 @str_to_log_switch(i8* noundef %1) #20, !dbg !17064
  call void @llvm.dbg.value(metadata i32 %5, metadata !17061, metadata !DIExpression()), !dbg !17063
  %6 = icmp slt i32 %5, 0, !dbg !17065
  br i1 %6, label %47, label %7, !dbg !17067

7:                                                ; preds = %4
  %8 = tail call i32 @str_to_print_level(i8* noundef %2) #20, !dbg !17068
  call void @llvm.dbg.value(metadata i32 %8, metadata !17062, metadata !DIExpression()), !dbg !17063
  %9 = icmp slt i32 %8, 0, !dbg !17069
  br i1 %9, label %47, label %10, !dbg !17071

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.426, i32 0, i32 0)) #18, !dbg !17072
  %12 = icmp eq i32 %11, 0, !dbg !17074
  %13 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17075
  br i1 %12, label %14, label %31, !dbg !17076

14:                                               ; preds = %10
  %15 = icmp eq %struct.log_control_block_t** %13, null, !dbg !17077
  br i1 %15, label %47, label %16, !dbg !17080

16:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 0, metadata !17060, metadata !DIExpression()), !dbg !17063
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %13, align 4, !dbg !17081
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !17082
  br i1 %18, label %43, label %19, !dbg !17082

19:                                               ; preds = %16, %19
  %20 = phi %struct.log_control_block_t* [ %29, %19 ], [ %17, %16 ]
  %21 = phi i32 [ %27, %19 ], [ 0, %16 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !17060, metadata !DIExpression()), !dbg !17063
  %22 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %20, i32 0, i32 1, !dbg !17083
  store i32 %5, i32* %22, align 4, !dbg !17085
  %23 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17086
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %21, !dbg !17087
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !17087
  %26 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %25, i32 0, i32 2, !dbg !17088
  store i32 %8, i32* %26, align 4, !dbg !17089
  %27 = add nuw nsw i32 %21, 1, !dbg !17090
  call void @llvm.dbg.value(metadata i32 %27, metadata !17060, metadata !DIExpression()), !dbg !17063
  %28 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %27, !dbg !17081
  %29 = load %struct.log_control_block_t*, %struct.log_control_block_t** %28, align 4, !dbg !17081
  %30 = icmp eq %struct.log_control_block_t* %29, null, !dbg !17082
  br i1 %30, label %43, label %19, !dbg !17082, !llvm.loop !17091

31:                                               ; preds = %10
  %32 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %13, i8* noundef %0) #20, !dbg !17093
  call void @llvm.dbg.value(metadata i32 %32, metadata !17060, metadata !DIExpression()), !dbg !17063
  %33 = icmp slt i32 %32, 0, !dbg !17095
  br i1 %33, label %47, label %34, !dbg !17097

34:                                               ; preds = %31
  %35 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17098
  %36 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %35, i32 %32, !dbg !17099
  %37 = load %struct.log_control_block_t*, %struct.log_control_block_t** %36, align 4, !dbg !17099
  %38 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %37, i32 0, i32 1, !dbg !17100
  store i32 %5, i32* %38, align 4, !dbg !17101
  %39 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17102
  %40 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %39, i32 %32, !dbg !17103
  %41 = load %struct.log_control_block_t*, %struct.log_control_block_t** %40, align 4, !dbg !17103
  %42 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %41, i32 0, i32 2, !dbg !17104
  store i32 %8, i32* %42, align 4, !dbg !17105
  br label %43

43:                                               ; preds = %19, %16, %34
  %44 = icmp eq i32 %3, 0, !dbg !17106
  br i1 %44, label %47, label %45, !dbg !17108

45:                                               ; preds = %43
  %46 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !17109
  tail call void %46(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !17111
  br label %47, !dbg !17112

47:                                               ; preds = %43, %45, %31, %14, %7, %4
  %48 = phi i32 [ -1, %4 ], [ -1, %7 ], [ -1, %14 ], [ -1, %31 ], [ 0, %45 ], [ 0, %43 ], !dbg !17063
  ret i32 %48, !dbg !17113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_log_switch(i8* noundef %0) local_unnamed_addr #0 !dbg !17114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17116, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata i32 0, metadata !17117, metadata !DIExpression()), !dbg !17118
  br label %2, !dbg !17119

2:                                                ; preds = %2, %1
  %3 = phi i1 [ false, %1 ], [ true, %2 ]
  %4 = phi i32 [ 0, %1 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !17117, metadata !DIExpression()), !dbg !17118
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %4, !dbg !17121
  %6 = load i8*, i8** %5, align 4, !dbg !17121
  %7 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %6) #18, !dbg !17125
  %8 = icmp eq i32 %7, 0, !dbg !17125
  %9 = or i1 %8, %3, !dbg !17126
  br i1 %9, label %10, label %2, !dbg !17126

10:                                               ; preds = %2
  %11 = select i1 %8, i32 %4, i32 -1, !dbg !17126
  ret i32 %11, !dbg !17127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_print_level(i8* noundef %0) local_unnamed_addr #0 !dbg !17128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17130, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 0, metadata !17131, metadata !DIExpression()), !dbg !17132
  br label %2, !dbg !17133

2:                                                ; preds = %1, %8
  %3 = phi i32 [ 0, %1 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !17131, metadata !DIExpression()), !dbg !17132
  %4 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !17135
  %5 = load i8*, i8** %4, align 4, !dbg !17135
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #18, !dbg !17139
  %7 = icmp eq i32 %6, 0, !dbg !17139
  br i1 %7, label %11, label %8, !dbg !17140

8:                                                ; preds = %2
  %9 = add nuw nsw i32 %3, 1, !dbg !17141
  call void @llvm.dbg.value(metadata i32 %9, metadata !17131, metadata !DIExpression()), !dbg !17132
  %10 = icmp eq i32 %9, 4, !dbg !17142
  br i1 %10, label %11, label %2, !dbg !17133, !llvm.loop !17143

11:                                               ; preds = %8, %2
  %12 = phi i32 [ %3, %2 ], [ -1, %8 ], !dbg !17132
  ret i32 %12, !dbg !17145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) unnamed_addr #0 !dbg !17146 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !17150, metadata !DIExpression()), !dbg !17153
  call void @llvm.dbg.value(metadata i8* %1, metadata !17151, metadata !DIExpression()), !dbg !17153
  call void @llvm.dbg.value(metadata i32 0, metadata !17152, metadata !DIExpression()), !dbg !17153
  %3 = icmp eq %struct.log_control_block_t** %0, null, !dbg !17154
  br i1 %3, label %19, label %4, !dbg !17156

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !17152, metadata !DIExpression()), !dbg !17153
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !17157
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !17158
  br i1 %6, label %19, label %7, !dbg !17158

7:                                                ; preds = %4, %14
  %8 = phi %struct.log_control_block_t* [ %17, %14 ], [ %5, %4 ]
  %9 = phi i32 [ %15, %14 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !17152, metadata !DIExpression()), !dbg !17153
  %10 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !17159
  %11 = load i8*, i8** %10, align 4, !dbg !17159
  %12 = tail call i32 @strcmp(i8* noundef %11, i8* noundef %1) #18, !dbg !17162
  %13 = icmp eq i32 %12, 0, !dbg !17162
  br i1 %13, label %19, label %14, !dbg !17163

14:                                               ; preds = %7
  %15 = add nuw nsw i32 %9, 1, !dbg !17164
  call void @llvm.dbg.value(metadata i32 %15, metadata !17152, metadata !DIExpression()), !dbg !17153
  %16 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %15, !dbg !17157
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %16, align 4, !dbg !17157
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !17158
  br i1 %18, label %19, label %7, !dbg !17158, !llvm.loop !17165

19:                                               ; preds = %7, %14, %4, %2
  %20 = phi i32 [ -1, %2 ], [ -1, %4 ], [ %9, %7 ], [ -1, %14 ], !dbg !17153
  ret i32 %20, !dbg !17167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_at_set_filter(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !17168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17172, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 %1, metadata !17173, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 %2, metadata !17174, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 %3, metadata !17175, metadata !DIExpression()), !dbg !17177
  %5 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.426, i32 0, i32 0)) #18, !dbg !17178
  %6 = icmp eq i32 %5, 0, !dbg !17180
  %7 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17181
  br i1 %6, label %8, label %25, !dbg !17182

8:                                                ; preds = %4
  %9 = icmp eq %struct.log_control_block_t** %7, null, !dbg !17183
  br i1 %9, label %41, label %10, !dbg !17186

10:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !17176, metadata !DIExpression()), !dbg !17177
  %11 = load %struct.log_control_block_t*, %struct.log_control_block_t** %7, align 4, !dbg !17187
  %12 = icmp eq %struct.log_control_block_t* %11, null, !dbg !17188
  br i1 %12, label %37, label %13, !dbg !17188

13:                                               ; preds = %10, %13
  %14 = phi %struct.log_control_block_t* [ %23, %13 ], [ %11, %10 ]
  %15 = phi i32 [ %21, %13 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !17176, metadata !DIExpression()), !dbg !17177
  %16 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %14, i32 0, i32 1, !dbg !17189
  store i32 %1, i32* %16, align 4, !dbg !17191
  %17 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17192
  %18 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %15, !dbg !17193
  %19 = load %struct.log_control_block_t*, %struct.log_control_block_t** %18, align 4, !dbg !17193
  %20 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %19, i32 0, i32 2, !dbg !17194
  store i32 %2, i32* %20, align 4, !dbg !17195
  %21 = add nuw nsw i32 %15, 1, !dbg !17196
  call void @llvm.dbg.value(metadata i32 %21, metadata !17176, metadata !DIExpression()), !dbg !17177
  %22 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %21, !dbg !17187
  %23 = load %struct.log_control_block_t*, %struct.log_control_block_t** %22, align 4, !dbg !17187
  %24 = icmp eq %struct.log_control_block_t* %23, null, !dbg !17188
  br i1 %24, label %37, label %13, !dbg !17188, !llvm.loop !17197

25:                                               ; preds = %4
  %26 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %7, i8* noundef %0) #20, !dbg !17199
  call void @llvm.dbg.value(metadata i32 %26, metadata !17176, metadata !DIExpression()), !dbg !17177
  %27 = icmp slt i32 %26, 0, !dbg !17201
  br i1 %27, label %41, label %28, !dbg !17203

28:                                               ; preds = %25
  %29 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17204
  %30 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %29, i32 %26, !dbg !17205
  %31 = load %struct.log_control_block_t*, %struct.log_control_block_t** %30, align 4, !dbg !17205
  %32 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %31, i32 0, i32 1, !dbg !17206
  store i32 %1, i32* %32, align 4, !dbg !17207
  %33 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !17208
  %34 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %33, i32 %26, !dbg !17209
  %35 = load %struct.log_control_block_t*, %struct.log_control_block_t** %34, align 4, !dbg !17209
  %36 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %35, i32 0, i32 2, !dbg !17210
  store i32 %2, i32* %36, align 4, !dbg !17211
  br label %37

37:                                               ; preds = %13, %10, %28
  %38 = icmp eq i32 %3, 0, !dbg !17212
  br i1 %38, label %41, label %39, !dbg !17214

39:                                               ; preds = %37
  %40 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !17215
  tail call void %40(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !17217
  br label %41, !dbg !17218

41:                                               ; preds = %37, %39, %25, %8
  %42 = phi i32 [ -1, %8 ], [ -1, %25 ], [ 0, %39 ], [ 0, %37 ], !dbg !17177
  ret i32 %42, !dbg !17219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_str2val(%struct.log_control_block_t** noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !17220 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !17224, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i8* %1, metadata !17225, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 0, metadata !17226, metadata !DIExpression()), !dbg !17235
  %7 = bitcast i8** %3 to i8*, !dbg !17236
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !17236
  %8 = bitcast i8** %4 to i8*, !dbg !17237
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17, !dbg !17237
  %9 = bitcast i8** %5 to i8*, !dbg !17238
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17, !dbg !17238
  call void @llvm.dbg.value(metadata i8 0, metadata !17231, metadata !DIExpression()), !dbg !17235
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17, !dbg !17239
  call void @llvm.dbg.value(metadata i8 poison, metadata !17231, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 0, metadata !17226, metadata !DIExpression()), !dbg !17235
  br label %10, !dbg !17240

10:                                               ; preds = %2, %51
  %11 = phi i32 [ 0, %2 ], [ %37, %51 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !17226, metadata !DIExpression()), !dbg !17235
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !17241
  call void @llvm.dbg.value(metadata i8** %3, metadata !17228, metadata !DIExpression(DW_OP_deref)), !dbg !17235
  %13 = call fastcc i32 @syslog_get_a_string(i8* noundef %12, i8** noundef nonnull %3) #20, !dbg !17243
  call void @llvm.dbg.value(metadata i32 %13, metadata !17227, metadata !DIExpression()), !dbg !17235
  %14 = icmp eq i32 %13, 0, !dbg !17244
  br i1 %14, label %61, label %15, !dbg !17246

15:                                               ; preds = %10
  %16 = add i32 %13, %11, !dbg !17247
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !17248
  %18 = load i8, i8* %17, align 1, !dbg !17248
  %19 = icmp eq i8 %18, 0, !dbg !17249
  br i1 %19, label %61, label %20, !dbg !17250

20:                                               ; preds = %15
  store i8 0, i8* %17, align 1, !dbg !17251
  %21 = add i32 %16, 1, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %21, metadata !17226, metadata !DIExpression()), !dbg !17235
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !17253
  call void @llvm.dbg.value(metadata i8** %4, metadata !17229, metadata !DIExpression(DW_OP_deref)), !dbg !17235
  %23 = call fastcc i32 @syslog_get_a_string(i8* noundef %22, i8** noundef nonnull %4) #20, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %23, metadata !17227, metadata !DIExpression()), !dbg !17235
  %24 = icmp eq i32 %23, 0, !dbg !17255
  br i1 %24, label %61, label %25, !dbg !17257

25:                                               ; preds = %20
  %26 = add i32 %23, %21, !dbg !17258
  %27 = getelementptr inbounds i8, i8* %1, i32 %26, !dbg !17259
  call void @llvm.dbg.value(metadata i1 undef, metadata !17231, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17235
  store i8 0, i8* %27, align 1, !dbg !17260
  %28 = add i32 %26, 1, !dbg !17261
  call void @llvm.dbg.value(metadata i32 %28, metadata !17226, metadata !DIExpression()), !dbg !17235
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !17262
  call void @llvm.dbg.value(metadata i8** %5, metadata !17230, metadata !DIExpression(DW_OP_deref)), !dbg !17235
  %30 = call fastcc i32 @syslog_get_a_string(i8* noundef %29, i8** noundef nonnull %5) #20, !dbg !17263
  call void @llvm.dbg.value(metadata i32 %30, metadata !17227, metadata !DIExpression()), !dbg !17235
  %31 = icmp eq i32 %30, 0, !dbg !17264
  br i1 %31, label %61, label %32, !dbg !17266

32:                                               ; preds = %25
  %33 = add i32 %30, %28, !dbg !17267
  %34 = getelementptr inbounds i8, i8* %1, i32 %33, !dbg !17268
  %35 = load i8, i8* %34, align 1, !dbg !17268
  %36 = icmp eq i8 %35, 0, !dbg !17269
  call void @llvm.dbg.value(metadata i1 %36, metadata !17231, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17235
  store i8 0, i8* %34, align 1, !dbg !17270
  %37 = add i32 %33, 1, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %37, metadata !17226, metadata !DIExpression()), !dbg !17235
  %38 = load i8*, i8** %3, align 4, !dbg !17272
  call void @llvm.dbg.value(metadata i8* %38, metadata !17228, metadata !DIExpression()), !dbg !17235
  %39 = call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %0, i8* noundef %38) #20, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %39, metadata !17227, metadata !DIExpression()), !dbg !17235
  %40 = icmp slt i32 %39, 0, !dbg !17274
  br i1 %40, label %61, label %41, !dbg !17276

41:                                               ; preds = %32
  %42 = load i8*, i8** %4, align 4, !dbg !17277
  call void @llvm.dbg.value(metadata i8* %42, metadata !17229, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i8* %6, metadata !17234, metadata !DIExpression(DW_OP_deref)), !dbg !17235
  %43 = call i32 @toi(i8* noundef %42, i8* noundef nonnull %6) #18, !dbg !17278
  call void @llvm.dbg.value(metadata i32 %43, metadata !17232, metadata !DIExpression()), !dbg !17235
  %44 = load i8, i8* %6, align 1, !dbg !17279
  call void @llvm.dbg.value(metadata i8 %44, metadata !17234, metadata !DIExpression()), !dbg !17235
  %45 = icmp eq i8 %44, 4, !dbg !17281
  br i1 %45, label %61, label %46, !dbg !17282

46:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 undef, metadata !17232, metadata !DIExpression()), !dbg !17235
  %47 = load i8*, i8** %5, align 4, !dbg !17283
  call void @llvm.dbg.value(metadata i8* %47, metadata !17230, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i8* %6, metadata !17234, metadata !DIExpression(DW_OP_deref)), !dbg !17235
  %48 = call i32 @toi(i8* noundef %47, i8* noundef nonnull %6) #18, !dbg !17284
  call void @llvm.dbg.value(metadata i32 %48, metadata !17233, metadata !DIExpression()), !dbg !17235
  %49 = load i8, i8* %6, align 1, !dbg !17285
  call void @llvm.dbg.value(metadata i8 %49, metadata !17234, metadata !DIExpression()), !dbg !17235
  %50 = icmp eq i8 %49, 4, !dbg !17287
  br i1 %50, label %61, label %51, !dbg !17288

51:                                               ; preds = %46
  %52 = icmp ne i32 %43, 0, !dbg !17289
  %53 = zext i1 %52 to i32, !dbg !17289
  call void @llvm.dbg.value(metadata i32 %53, metadata !17232, metadata !DIExpression()), !dbg !17235
  %54 = icmp ult i32 %48, 3, !dbg !17290
  %55 = select i1 %54, i32 %48, i32 3, !dbg !17290
  call void @llvm.dbg.value(metadata i32 %55, metadata !17233, metadata !DIExpression()), !dbg !17235
  %56 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %39, !dbg !17291
  %57 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !17291
  %58 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %57, i32 0, i32 1, !dbg !17292
  store i32 %53, i32* %58, align 4, !dbg !17293
  %59 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !17294
  %60 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %59, i32 0, i32 2, !dbg !17295
  store i32 %55, i32* %60, align 4, !dbg !17296
  call void @llvm.dbg.value(metadata i8 poison, metadata !17231, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata i32 %37, metadata !17226, metadata !DIExpression()), !dbg !17235
  br i1 %36, label %61, label %10, !dbg !17240, !llvm.loop !17297

61:                                               ; preds = %51, %46, %41, %32, %25, %20, %10, %15
  %62 = phi i32 [ -1, %15 ], [ -1, %10 ], [ -2, %20 ], [ -2, %25 ], [ -3, %32 ], [ -4, %41 ], [ -4, %46 ], [ 0, %51 ], !dbg !17235
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17, !dbg !17299
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17, !dbg !17299
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17, !dbg !17299
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !17299
  ret i32 %62, !dbg !17299
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @syslog_get_a_string(i8* noundef %0, i8** nocapture noundef writeonly %1) unnamed_addr #15 !dbg !17300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17304, metadata !DIExpression()), !dbg !17307
  call void @llvm.dbg.value(metadata i8** %1, metadata !17305, metadata !DIExpression()), !dbg !17307
  br label %3, !dbg !17308

3:                                                ; preds = %6, %2
  %4 = phi i8* [ %0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !17304, metadata !DIExpression()), !dbg !17307
  %5 = load i8, i8* %4, align 1, !dbg !17309
  switch i8 %5, label %9 [
    i8 32, label %6
    i8 0, label %8
  ], !dbg !17308

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !17310
  call void @llvm.dbg.value(metadata i8* %7, metadata !17304, metadata !DIExpression()), !dbg !17307
  br label %3, !dbg !17308, !llvm.loop !17312

8:                                                ; preds = %3
  store i8* null, i8** %1, align 4, !dbg !17314
  br label %19, !dbg !17317

9:                                                ; preds = %3
  store i8* %4, i8** %1, align 4, !dbg !17318
  br label %10, !dbg !17319

10:                                               ; preds = %13, %9
  %11 = phi i8* [ %4, %9 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !17304, metadata !DIExpression()), !dbg !17307
  %12 = load i8, i8* %11, align 1, !dbg !17320
  switch i8 %12, label %13 [
    i8 32, label %15
    i8 0, label %15
  ], !dbg !17321

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !17322
  call void @llvm.dbg.value(metadata i8* %14, metadata !17304, metadata !DIExpression()), !dbg !17307
  br label %10, !dbg !17319, !llvm.loop !17324

15:                                               ; preds = %10, %10
  %16 = ptrtoint i8* %11 to i32, !dbg !17326
  %17 = ptrtoint i8* %4 to i32, !dbg !17326
  %18 = sub i32 %16, %17, !dbg !17326
  br label %19, !dbg !17327

19:                                               ; preds = %15, %8
  %20 = phi i32 [ 0, %8 ], [ %18, %15 ], !dbg !17307
  ret i32 %20, !dbg !17328
}

; Function Attrs: optsize
declare dso_local i32 @toi(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_val2str(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 !dbg !17329 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !17336, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i8* %1, metadata !17337, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i32 0, metadata !17338, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i32 0, metadata !17339, metadata !DIExpression()), !dbg !17341
  %3 = icmp eq %struct.log_control_block_t** %0, null
  call void @llvm.dbg.value(metadata i32 0, metadata !17338, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i32 0, metadata !17339, metadata !DIExpression()), !dbg !17341
  br i1 %3, label %31, label %4, !dbg !17342

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !17338, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i32 0, metadata !17339, metadata !DIExpression()), !dbg !17341
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !17343
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !17342
  br i1 %6, label %27, label %7, !dbg !17344

7:                                                ; preds = %4, %7
  %8 = phi %struct.log_control_block_t* [ %25, %7 ], [ %5, %4 ]
  %9 = phi i32 [ %22, %7 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %7 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !17339, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i32 %10, metadata !17338, metadata !DIExpression()), !dbg !17341
  %11 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !17345
  %12 = sub nsw i32 256, %9, !dbg !17347
  %13 = icmp eq i32 %10, 0, !dbg !17348
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.429, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.413, i32 0, i32 0), !dbg !17349
  %15 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !17350
  %16 = load i8*, i8** %15, align 4, !dbg !17350
  %17 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 1, !dbg !17351
  %18 = load i32, i32* %17, align 4, !dbg !17351
  %19 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 2, !dbg !17352
  %20 = load i32, i32* %19, align 4, !dbg !17352
  %21 = tail call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef %11, i32 noundef %12, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.430, i32 0, i32 0), i8* noundef %14, i8* noundef %16, i32 noundef %18, i32 noundef %20) #18, !dbg !17353
  call void @llvm.dbg.value(metadata i32 %21, metadata !17340, metadata !DIExpression()), !dbg !17341
  %22 = add nsw i32 %21, %9, !dbg !17354
  call void @llvm.dbg.value(metadata i32 %22, metadata !17339, metadata !DIExpression()), !dbg !17341
  %23 = add nuw nsw i32 %10, 1, !dbg !17355
  call void @llvm.dbg.value(metadata i32 %23, metadata !17338, metadata !DIExpression()), !dbg !17341
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %23, !dbg !17343
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !17343
  %26 = icmp eq %struct.log_control_block_t* %25, null, !dbg !17342
  br i1 %26, label %27, label %7, !dbg !17344, !llvm.loop !17356

27:                                               ; preds = %7, %4
  %28 = phi i32 [ 0, %4 ], [ %22, %7 ]
  %29 = icmp sgt i32 %28, 255, !dbg !17358
  br i1 %29, label %30, label %31, !dbg !17360

30:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.431, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.432, i32 0, i32 0), i32 noundef 1467) #18, !dbg !17361
  br label %31, !dbg !17361

31:                                               ; preds = %2, %30, %27
  %32 = phi i32 [ %28, %30 ], [ %28, %27 ], [ 0, %2 ]
  ret i32 %32, !dbg !17363
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @log_switch_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !17364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17368, metadata !DIExpression()), !dbg !17369
  %2 = icmp ugt i32 %0, 1, !dbg !17370
  br i1 %2, label %3, label %4, !dbg !17372

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.433, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.432, i32 0, i32 0), i32 noundef 1474) #18, !dbg !17373
  br label %4, !dbg !17373

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %0, !dbg !17375
  %6 = load i8*, i8** %5, align 4, !dbg !17375
  ret i8* %6, !dbg !17376
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @print_level_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !17377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17381, metadata !DIExpression()), !dbg !17382
  %2 = icmp ugt i32 %0, 3, !dbg !17383
  br i1 %2, label %3, label %4, !dbg !17385

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.432, i32 0, i32 0), i32 noundef 1480) #18, !dbg !17386
  br label %4, !dbg !17386

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %0, !dbg !17388
  %6 = load i8*, i8** %5, align 4, !dbg !17388
  ret i8* %6, !dbg !17389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__wrap_printf(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !17390 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !17394, metadata !DIExpression()), !dbg !17398
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !17399
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !17399
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !17395, metadata !DIExpression()), !dbg !17400
  %4 = load i32, i32* @syslog_init_done, align 4, !dbg !17401
  %5 = icmp eq i32 %4, 0, !dbg !17401
  br i1 %5, label %13, label %6, !dbg !17403

6:                                                ; preds = %1
  %7 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !17404, !srcloc !16402
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !17404
  call void @llvm.dbg.value(metadata i32 %8, metadata !16399, metadata !DIExpression()) #17, !dbg !17406
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()) #17, !dbg !17406
  call void @llvm.dbg.value(metadata i32 %8, metadata !17397, metadata !DIExpression()), !dbg !17398
  call void @llvm.va_start(i8* nonnull %3), !dbg !17407
  %9 = bitcast %struct.__va_list* %2 to i32*, !dbg !17408
  %10 = load i32, i32* %9, align 4, !dbg !17408
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !17408
  %12 = call i32 @vprintf(i8* noundef %0, [1 x i32] %11) #18, !dbg !17408
  call void @llvm.dbg.value(metadata i32 %12, metadata !17396, metadata !DIExpression()), !dbg !17398
  call void @llvm.va_end(i8* nonnull %3), !dbg !17409
  call void @llvm.dbg.value(metadata i32 %8, metadata !16418, metadata !DIExpression()) #17, !dbg !17410
  call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %8) #17, !dbg !17412, !srcloc !16424
  br label %13, !dbg !17413

13:                                               ; preds = %1, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %1 ], !dbg !17398
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !17414
  ret i32 %14, !dbg !17414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_log_notice(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !17415 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !17417, metadata !DIExpression()), !dbg !17424
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !17425
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !17425
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !17418, metadata !DIExpression()), !dbg !17426
  call void @llvm.va_start(i8* nonnull %3), !dbg !17427
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !17428
  %5 = load i32, i32* %4, align 4, !dbg !17428
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !17428
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.nvdm_port_log_notice, i32 0, i32 0), i32 noundef 48, i32 noundef 1, i8* noundef %0, [1 x i32] %6) #18, !dbg !17428
  call void @llvm.va_end(i8* nonnull %3), !dbg !17429
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !17430
  ret void, !dbg !17430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nvdm_port_log_info(i8* nocapture %0, ...) local_unnamed_addr #7 !dbg !17431 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !17433, metadata !DIExpression()), !dbg !17435
  call void @llvm.dbg.declare(metadata %struct.__va_list* undef, metadata !17434, metadata !DIExpression()), !dbg !17436
  ret void, !dbg !17437
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @nvdm_port_log_error(i8* noundef %0, ...) local_unnamed_addr #12 !dbg !17438 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !17440, metadata !DIExpression()), !dbg !17442
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !17443
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !17443
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !17441, metadata !DIExpression()), !dbg !17444
  call void @llvm.va_start(i8* nonnull %3), !dbg !17445
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !17446
  %5 = load i32, i32* %4, align 4, !dbg !17446
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !17446
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.nvdm_port_log_error, i32 0, i32 0), i32 noundef 66, i32 noundef 3, i8* noundef %0, [1 x i32] %6) #18, !dbg !17446
  call void @llvm.va_end(i8* nonnull %3), !dbg !17447
  call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.435, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.nvdm_port_log_error, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.436, i32 0, i32 0)) #19, !dbg !17448
  unreachable, !dbg !17448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !17449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17453, metadata !DIExpression()), !dbg !17457
  call void @llvm.dbg.value(metadata i8* %1, metadata !17454, metadata !DIExpression()), !dbg !17457
  call void @llvm.dbg.value(metadata i32 %2, metadata !17455, metadata !DIExpression()), !dbg !17457
  %4 = tail call i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) #18, !dbg !17458
  call void @llvm.dbg.value(metadata i32 %4, metadata !17456, metadata !DIExpression()), !dbg !17457
  %5 = icmp eq i32 %4, 0, !dbg !17459
  br i1 %5, label %8, label %6, !dbg !17461

6:                                                ; preds = %3
  %7 = ptrtoint i8* %1 to i32, !dbg !17462
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2.437, i32 0, i32 0), i32 noundef %0, i32 noundef %7, i32 noundef %2, i32 noundef %4) #20, !dbg !17464
  unreachable, !dbg !17465

8:                                                ; preds = %3
  ret void, !dbg !17466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !17467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17471, metadata !DIExpression()), !dbg !17475
  call void @llvm.dbg.value(metadata i8* %1, metadata !17472, metadata !DIExpression()), !dbg !17475
  call void @llvm.dbg.value(metadata i32 %2, metadata !17473, metadata !DIExpression()), !dbg !17475
  %4 = tail call i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) #18, !dbg !17476
  call void @llvm.dbg.value(metadata i32 %4, metadata !17474, metadata !DIExpression()), !dbg !17475
  %5 = icmp eq i32 %4, 0, !dbg !17477
  br i1 %5, label %8, label %6, !dbg !17479

6:                                                ; preds = %3
  %7 = ptrtoint i8* %1 to i32, !dbg !17480
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3.438, i32 0, i32 0), i32 noundef %0, i32 noundef %7, i32 noundef %2, i32 noundef %4) #20, !dbg !17482
  unreachable, !dbg !17483

8:                                                ; preds = %3
  ret void, !dbg !17484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_flash_erase(i32 noundef %0) local_unnamed_addr #0 !dbg !17485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17487, metadata !DIExpression()), !dbg !17489
  %2 = tail call i32 @hal_flash_erase(i32 noundef %0, i32 noundef 0) #18, !dbg !17490
  call void @llvm.dbg.value(metadata i32 %2, metadata !17488, metadata !DIExpression()), !dbg !17489
  %3 = icmp eq i32 %2, 0, !dbg !17491
  br i1 %3, label %5, label %4, !dbg !17493

4:                                                ; preds = %1
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4.439, i32 0, i32 0), i32 noundef %0, i32 noundef %2) #20, !dbg !17494
  unreachable, !dbg !17496

5:                                                ; preds = %1
  ret void, !dbg !17497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_mutex_creat() local_unnamed_addr #0 !dbg !17498 {
  %1 = tail call i8* @xQueueCreateMutex(i8 noundef zeroext 1) #18, !dbg !17499
  store i8* %1, i8** @g_nvdm_mutex, align 4, !dbg !17500
  %2 = icmp eq i8* %1, null, !dbg !17501
  br i1 %2, label %3, label %4, !dbg !17503

3:                                                ; preds = %0
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.440, i32 0, i32 0)) #20, !dbg !17504
  unreachable, !dbg !17506

4:                                                ; preds = %0
  ret void, !dbg !17507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_mutex_take() local_unnamed_addr #0 !dbg !17508 {
  %1 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !17509
  %2 = icmp eq i32 %1, 1, !dbg !17511
  br i1 %2, label %8, label %3, !dbg !17512

3:                                                ; preds = %0
  %4 = load i8*, i8** @g_nvdm_mutex, align 4, !dbg !17513
  %5 = tail call i32 @xQueueGenericReceive(i8* noundef %4, i8* noundef null, i32 noundef -1, i32 noundef 0) #18, !dbg !17513
  %6 = icmp eq i32 %5, 0, !dbg !17516
  br i1 %6, label %7, label %8, !dbg !17517

7:                                                ; preds = %3
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.441, i32 0, i32 0)) #20, !dbg !17518
  unreachable, !dbg !17520

8:                                                ; preds = %3, %0
  ret void, !dbg !17521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_mutex_give() local_unnamed_addr #0 !dbg !17522 {
  %1 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !17523
  %2 = icmp eq i32 %1, 1, !dbg !17525
  br i1 %2, label %8, label %3, !dbg !17526

3:                                                ; preds = %0
  %4 = load i8*, i8** @g_nvdm_mutex, align 4, !dbg !17527
  %5 = tail call i32 @xQueueGenericSend(i8* noundef %4, i8* noundef null, i32 noundef 0, i32 noundef 0) #18, !dbg !17527
  %6 = icmp eq i32 %5, 0, !dbg !17530
  br i1 %6, label %7, label %8, !dbg !17531

7:                                                ; preds = %3
  tail call void (i8*, ...) @nvdm_port_log_error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.442, i32 0, i32 0)) #20, !dbg !17532
  unreachable, !dbg !17534

8:                                                ; preds = %3, %0
  ret void, !dbg !17535
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @nvdm_port_malloc(i32 noundef %0) local_unnamed_addr #0 !dbg !17536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17539, metadata !DIExpression()), !dbg !17540
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #18, !dbg !17541
  ret i8* %2, !dbg !17542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_free(i8* noundef %0) local_unnamed_addr #0 !dbg !17543 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17545, metadata !DIExpression()), !dbg !17546
  tail call void @vPortFree(i8* noundef %0) #18, !dbg !17547
  ret void, !dbg !17548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvdm_port_get_task_handler() local_unnamed_addr #0 !dbg !17549 {
  %1 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !17550
  store i8* %1, i8** @g_task_handler, align 4, !dbg !17551
  ret void, !dbg !17552
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @nvdm_port_query_task_handler() local_unnamed_addr #0 !dbg !17553 {
  %1 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !17554
  %2 = load i8*, i8** @g_task_handler, align 4, !dbg !17556
  %3 = icmp eq i8* %1, %2, !dbg !17557
  ret i1 %3, !dbg !17558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @nvdm_port_get_data_item_config(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #4 !dbg !17559 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !17563, metadata !DIExpression()), !dbg !17566
  call void @llvm.dbg.value(metadata i32* %1, metadata !17564, metadata !DIExpression()), !dbg !17566
  call void @llvm.dbg.value(metadata i32* %2, metadata !17565, metadata !DIExpression()), !dbg !17566
  store i32 2048, i32* %0, align 4, !dbg !17567
  store i32 16, i32* %1, align 4, !dbg !17568
  store i32 32, i32* %2, align 4, !dbg !17569
  ret i32 200, !dbg !17570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @nvdm_port_get_peb_config(i32* nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !17571 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !17575, metadata !DIExpression()), !dbg !17576
  store i32 9, i32* %0, align 4, !dbg !17577
  ret i32 4096, !dbg !17578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @nvdm_port_get_peb_address(i32 noundef %0, i32 noundef %1) local_unnamed_addr #7 !dbg !17579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17583, metadata !DIExpression()), !dbg !17585
  call void @llvm.dbg.value(metadata i32 %1, metadata !17584, metadata !DIExpression()), !dbg !17585
  %3 = shl nsw i32 %0, 12, !dbg !17586
  %4 = add nsw i32 %3, 2060288, !dbg !17586
  %5 = add nsw i32 %4, %1, !dbg !17586
  ret i32 %5, !dbg !17587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nvdm_port_poweroff_time_set() local_unnamed_addr #7 !dbg !17588 {
  ret void, !dbg !17589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nvdm_port_poweroff(i32 noundef %0) local_unnamed_addr #7 !dbg !17590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17592, metadata !DIExpression()), !dbg !17593
  ret void, !dbg !17594
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !17595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17597, metadata !DIExpression()), !dbg !17598
  %2 = trunc i32 %0 to i8, !dbg !17599
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext %2) #18, !dbg !17600
  %3 = icmp eq i32 %0, 10, !dbg !17601
  br i1 %3, label %4, label %5, !dbg !17603

4:                                                ; preds = %1
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext 13) #18, !dbg !17604
  br label %5, !dbg !17606

5:                                                ; preds = %4, %1
  ret i32 %0, !dbg !17607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @system_init() local_unnamed_addr #0 !dbg !17608 {
  tail call fastcc void @SystemClock_Config() #20, !dbg !17609
  tail call fastcc void @prvSetupHardware() #20, !dbg !17610
  %1 = tail call i32 @nvdm_init() #18, !dbg !17611
  tail call fastcc void @_main_sys_random_init() #20, !dbg !17612
  ret void, !dbg !17613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !17614 {
  tail call void @top_xtal_init() #18, !dbg !17615
  tail call void @cmnCpuClkConfigureTo192M() #18, !dbg !17616
  tail call void @cmnSerialFlashClkConfTo64M() #18, !dbg !17617
  ret void, !dbg !17618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !17619 {
  tail call fastcc void @cache_enable() #20, !dbg !17620
  tail call void @bsp_ept_gpio_setting_init() #18, !dbg !17622
  %1 = tail call i32 @log_uart_init(i32 noundef 0) #18, !dbg !17623
  %2 = tail call i32 @hal_flash_init() #18, !dbg !17624
  ret void, !dbg !17625
}

; Function Attrs: optsize
declare dso_local i32 @nvdm_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_main_sys_random_init() unnamed_addr #0 !dbg !17626 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !17630
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #17, !dbg !17630
  %3 = tail call i32 @hal_trng_init() #18, !dbg !17631
  call void @llvm.dbg.value(metadata i32 %3, metadata !17629, metadata !DIExpression()), !dbg !17632
  %4 = icmp eq i32 %3, 0, !dbg !17633
  br i1 %4, label %5, label %10, !dbg !17635

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !17628, metadata !DIExpression(DW_OP_deref)), !dbg !17632
  %6 = call i32 @hal_trng_get_generated_random_number(i32* noundef nonnull %1) #18, !dbg !17636
  call void @llvm.dbg.value(metadata i32 %6, metadata !17629, metadata !DIExpression()), !dbg !17632
  %7 = icmp eq i32 %6, 0, !dbg !17638
  br i1 %7, label %8, label %10, !dbg !17638

8:                                                ; preds = %5
  %9 = load i32, i32* %1, align 4, !dbg !17639
  call void @llvm.dbg.value(metadata i32 %9, metadata !17628, metadata !DIExpression()), !dbg !17632
  call void @srand(i32 noundef %9) #18, !dbg !17642
  br label %12, !dbg !17643

10:                                               ; preds = %0, %5
  %11 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !17644
  call void (i8*, i8*, i32, i32, i8*, ...) %11(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__._main_sys_random_init, i32 0, i32 0), i32 noundef 203, i32 noundef 1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.443, i32 0, i32 0)) #18, !dbg !17644
  br label %12, !dbg !17648

12:                                               ; preds = %8, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #17, !dbg !17649
  ret void, !dbg !17649
}

; Function Attrs: optsize
declare dso_local void @srand(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cache_enable() unnamed_addr #0 !dbg !17650 {
  %1 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 3, metadata !17654, metadata !DIExpression()), !dbg !17664
  %2 = bitcast i64* %1 to i8*, !dbg !17665
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #17, !dbg !17665
  call void @llvm.dbg.value(metadata i64 3360107803414528, metadata !17657, metadata !DIExpression()), !dbg !17664
  store i64 3360107803414528, i64* %1, align 8, !dbg !17666
  call void @llvm.dbg.value(metadata i32 1, metadata !17656, metadata !DIExpression()), !dbg !17664
  %3 = tail call i32 @hal_cache_init() #18, !dbg !17667
  %4 = tail call i32 @hal_cache_set_size(i32 noundef 3) #18, !dbg !17668
  call void @llvm.dbg.value(metadata i32 undef, metadata !17655, metadata !DIExpression()), !dbg !17664
  %5 = bitcast i64* %1 to %struct.hal_cache_region_config_t*, !dbg !17669
  call void @llvm.dbg.value(metadata i64* %1, metadata !17657, metadata !DIExpression(DW_OP_deref)), !dbg !17664
  %6 = call i32 @hal_cache_region_config(i32 noundef 0, %struct.hal_cache_region_config_t* noundef nonnull %5) #18, !dbg !17673
  %7 = call i32 @hal_cache_region_enable(i32 noundef 0) #18, !dbg !17674
  call void @llvm.dbg.value(metadata i32 1, metadata !17655, metadata !DIExpression()), !dbg !17664
  br label %8, !dbg !17675

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 1, %0 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !17655, metadata !DIExpression()), !dbg !17664
  %10 = call i32 @hal_cache_region_disable(i32 noundef %9) #18, !dbg !17677
  %11 = add nuw nsw i32 %9, 1, !dbg !17680
  call void @llvm.dbg.value(metadata i32 %11, metadata !17655, metadata !DIExpression()), !dbg !17664
  %12 = icmp eq i32 %11, 16, !dbg !17681
  br i1 %12, label %13, label %8, !dbg !17675, !llvm.loop !17682

13:                                               ; preds = %8
  %14 = call i32 @hal_cache_enable() #18, !dbg !17684
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #17, !dbg !17685
  ret void, !dbg !17685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #5 !dbg !17686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17688, metadata !DIExpression()), !dbg !17690
  %2 = add i32 %0, -1, !dbg !17691
  %3 = icmp ugt i32 %2, 16777215, !dbg !17693
  br i1 %3, label %8, label %4, !dbg !17694

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !17695
  call void @llvm.dbg.value(metadata i32 %5, metadata !17689, metadata !DIExpression()), !dbg !17690
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !17696
  %7 = and i32 %6, -4, !dbg !17696
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !17696
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !17697
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !17698
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !17699
  br label %8, !dbg !17700

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !17690
  ret i32 %9, !dbg !17701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #5 !dbg !17702 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !17703
  ret void, !dbg !17704
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #8 !dbg !17705 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !17706
  ret i32 %1, !dbg !17707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #0 !dbg !17708 {
  %1 = tail call i32 @top_mcu_freq_get() #18, !dbg !17709
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !17710
  ret void, !dbg !17711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !17712 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !17713
  %2 = or i32 %1, 15728640, !dbg !17713
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !17713
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !17714
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !17715
  %4 = or i32 %3, 458752, !dbg !17715
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !17715
  ret void, !dbg !17716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #5 !dbg !17717 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !17718
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !17719
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !17720
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !17721
  store volatile i32 269713408, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !17722
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !17723
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !17724
  ret void, !dbg !17725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #7 !dbg !17726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17728, metadata !DIExpression()), !dbg !17729
  ret i32 0, !dbg !17730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #7 !dbg !17731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17781, metadata !DIExpression()), !dbg !17783
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !17782, metadata !DIExpression()), !dbg !17783
  ret i32 0, !dbg !17784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #7 !dbg !17785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17787, metadata !DIExpression()), !dbg !17788
  ret i32 1, !dbg !17789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !17790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17794, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.value(metadata i32 %1, metadata !17795, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.value(metadata i32 %2, metadata !17796, metadata !DIExpression()), !dbg !17797
  ret i32 0, !dbg !17798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !17799 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17803, metadata !DIExpression()), !dbg !17806
  call void @llvm.dbg.value(metadata i32 %1, metadata !17804, metadata !DIExpression()), !dbg !17806
  call void @llvm.dbg.value(metadata i32 %2, metadata !17805, metadata !DIExpression()), !dbg !17806
  ret i32 -1, !dbg !17807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #7 !dbg !17808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17812, metadata !DIExpression()), !dbg !17815
  call void @llvm.dbg.value(metadata i8* %1, metadata !17813, metadata !DIExpression()), !dbg !17815
  call void @llvm.dbg.value(metadata i32 %2, metadata !17814, metadata !DIExpression()), !dbg !17815
  ret i32 0, !dbg !17816
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !17817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17819, metadata !DIExpression()), !dbg !17823
  call void @llvm.dbg.value(metadata i8* %1, metadata !17820, metadata !DIExpression()), !dbg !17823
  call void @llvm.dbg.value(metadata i32 %2, metadata !17821, metadata !DIExpression()), !dbg !17823
  call void @llvm.dbg.value(metadata i32 0, metadata !17822, metadata !DIExpression()), !dbg !17823
  %4 = icmp sgt i32 %2, 0, !dbg !17824
  br i1 %4, label %5, label %14, !dbg !17827

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !17822, metadata !DIExpression()), !dbg !17823
  call void @llvm.dbg.value(metadata i8* %7, metadata !17820, metadata !DIExpression()), !dbg !17823
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !17828
  call void @llvm.dbg.value(metadata i8* %8, metadata !17820, metadata !DIExpression()), !dbg !17823
  %9 = load i8, i8* %7, align 1, !dbg !17830
  %10 = zext i8 %9 to i32, !dbg !17830
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #18, !dbg !17831
  %12 = add nuw nsw i32 %6, 1, !dbg !17832
  call void @llvm.dbg.value(metadata i32 %12, metadata !17822, metadata !DIExpression()), !dbg !17823
  %13 = icmp eq i32 %12, %2, !dbg !17824
  br i1 %13, label %14, label %5, !dbg !17827, !llvm.loop !17833

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !17835
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !1810 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2004, metadata !DIExpression()), !dbg !17836
  call void @llvm.dbg.value(metadata i32 %1, metadata !2005, metadata !DIExpression()), !dbg !17836
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #17, !dbg !17837, !srcloc !17838
  call void @llvm.dbg.value(metadata i8* %3, metadata !2007, metadata !DIExpression()), !dbg !17836
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !17839
  %5 = icmp eq i8* %4, null, !dbg !17841
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !17842
  call void @llvm.dbg.value(metadata i8* %6, metadata !2006, metadata !DIExpression()), !dbg !17836
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !17843
  %8 = icmp ult i8* %3, %7, !dbg !17845
  %9 = xor i1 %8, true, !dbg !17846
  %10 = or i1 %5, %9, !dbg !17846
  br i1 %10, label %11, label %13, !dbg !17846

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !17847
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !17846
  br label %13, !dbg !17846

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !17847
  ret i8* %14, !dbg !17846
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #12 !dbg !17848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17850, metadata !DIExpression()), !dbg !17851
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.457, i32 0, i32 0)) #18, !dbg !17852
  br label %3, !dbg !17853

3:                                                ; preds = %1, %3
  br label %3, !dbg !17853, !llvm.loop !17854
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !17856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17860, metadata !DIExpression()), !dbg !17862
  call void @llvm.dbg.value(metadata i32 %1, metadata !17861, metadata !DIExpression()), !dbg !17862
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.458, i32 0, i32 0), i32 noundef %1) #18, !dbg !17863
  ret i32 -1, !dbg !17864
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #0 !dbg !17865 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.459, i32 0, i32 0)) #18, !dbg !17870
  ret i32 0, !dbg !17871
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @main() local_unnamed_addr #0 !dbg !17872 {
  tail call void @system_init() #18, !dbg !17873
  tail call void @log_init(void (%struct.syslog_config_s*)* noundef null, i32 (%struct.syslog_config_s*)* noundef null, %struct.log_control_block_t** noundef null) #18, !dbg !17874
  %1 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17875
  tail call void (i8*, i8*, i32, i32, i8*, ...) %1(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.main, i32 0, i32 0), i32 noundef 99, i32 noundef 1, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.461, i32 0, i32 0)) #18, !dbg !17875
  %2 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @xml_test_proc, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.462, i32 0, i32 0), i16 noundef zeroext 1024, i8* noundef null, i32 noundef 4, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !17877
  %3 = icmp eq i32 %2, 1, !dbg !17879
  br i1 %3, label %6, label %4, !dbg !17880

4:                                                ; preds = %0
  %5 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17881
  tail call void (i8*, i8*, i32, i32, i8*, ...) %5(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.main, i32 0, i32 0), i32 noundef 115, i32 noundef 3, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.463, i32 0, i32 0)) #18, !dbg !17881
  ret i32 -1, !dbg !17884

6:                                                ; preds = %0
  tail call void @SysInitStatus_Set() #18, !dbg !17885
  tail call void @vTaskStartScheduler() #18, !dbg !17886
  br label %7, !dbg !17887

7:                                                ; preds = %7, %6
  br label %7, !dbg !17888, !llvm.loop !17891
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @xml_test_proc(i8* nocapture noundef readnone %0) #12 !dbg !17894 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17896, metadata !DIExpression()), !dbg !17898
  call void @llvm.dbg.value(metadata i32 0, metadata !17897, metadata !DIExpression()), !dbg !17898
  %2 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17899
  tail call void (i8*, i8*, i32, i32, i8*, ...) %2(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.xml_test_proc, i32 0, i32 0), i32 noundef 69, i32 noundef 1, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.464, i32 0, i32 0)) #18, !dbg !17899
  %3 = tail call i32 @xml_test() #18, !dbg !17901
  call void @llvm.dbg.value(metadata i32 %3, metadata !17897, metadata !DIExpression()), !dbg !17898
  %4 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17902
  tail call void (i8*, i8*, i32, i32, i8*, ...) %4(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.xml_test_proc, i32 0, i32 0), i32 noundef 71, i32 noundef 1, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.465, i32 0, i32 0), i32 noundef %3) #18, !dbg !17902
  %5 = icmp eq i32 %3, 0, !dbg !17904
  br i1 %5, label %6, label %8, !dbg !17906

6:                                                ; preds = %1
  %7 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17907
  tail call void (i8*, i8*, i32, i32, i8*, ...) %7(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.xml_test_proc, i32 0, i32 0), i32 noundef 73, i32 noundef 1, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6.466, i32 0, i32 0)) #18, !dbg !17907
  br label %8, !dbg !17910

8:                                                ; preds = %6, %1
  br label %9, !dbg !17911

9:                                                ; preds = %8, %9
  tail call void @vTaskDelay(i32 noundef 1000) #18, !dbg !17912
  br label %9, !dbg !17911, !llvm.loop !17914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xml_main(i32 %0, i8** nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !2017 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2021, metadata !DIExpression()), !dbg !17916
  call void @llvm.dbg.value(metadata i8** %1, metadata !2022, metadata !DIExpression()), !dbg !17916
  %3 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17917
  tail call void (i8*, i8*, i32, i32, i8*, ...) %3(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 101, i32 noundef 1, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5.467, i32 0, i32 0)) #18, !dbg !17917
  %4 = tail call %struct.mxml_node_s* @mxmlNewElement(%struct.mxml_node_s* noundef null, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.468, i32 0, i32 0)) #18, !dbg !17919
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %4, metadata !2024, metadata !DIExpression()), !dbg !17916
  %5 = icmp eq %struct.mxml_node_s* %4, null, !dbg !17920
  br i1 %5, label %6, label %12, !dbg !17922

6:                                                ; preds = %2
  %7 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !17923
  %8 = getelementptr inbounds %struct._reent, %struct._reent* %7, i32 0, i32 3, !dbg !17923
  %9 = load %struct.__sFILE*, %struct.__sFILE** %8, align 4, !dbg !17923
  %10 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.469, i32 0, i32 0), %struct.__sFILE* noundef %9) #18, !dbg !17925
  %11 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17926
  tail call void (i8*, i8*, i32, i32, i8*, ...) %11(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 107, i32 noundef 1, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8.470, i32 0, i32 0)) #18, !dbg !17926
  br label %753, !dbg !17928

12:                                               ; preds = %2
  %13 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17929
  tail call void (i8*, i8*, i32, i32, i8*, ...) %13(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 110, i32 noundef 1, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.471, i32 0, i32 0)) #18, !dbg !17929
  %14 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %4, i32 0, i32 0, !dbg !17931
  %15 = load i32, i32* %14, align 8, !dbg !17931
  %16 = icmp eq i32 %15, 0, !dbg !17933
  br i1 %16, label %36, label %17, !dbg !17934

17:                                               ; preds = %12
  %18 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !17935
  %19 = getelementptr inbounds %struct._reent, %struct._reent* %18, i32 0, i32 3, !dbg !17935
  %20 = load %struct.__sFILE*, %struct.__sFILE** %19, align 4, !dbg !17935
  %21 = icmp ugt i32 %15, 4, !dbg !17937
  br i1 %21, label %25, label %22, !dbg !17937

22:                                               ; preds = %17
  %23 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %15, !dbg !17938
  %24 = load i8*, i8** %23, align 4, !dbg !17938
  br label %25, !dbg !17939

25:                                               ; preds = %17, %22
  %26 = phi i8* [ %24, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %17 ], !dbg !17939
  %27 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %20, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.473, i32 0, i32 0), i8* noundef %26, i32 noundef %15) #18, !dbg !17940
  %28 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17941
  %29 = load i32, i32* %14, align 8, !dbg !17941
  %30 = icmp ugt i32 %29, 4, !dbg !17941
  br i1 %30, label %34, label %31, !dbg !17941

31:                                               ; preds = %25
  %32 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %29, !dbg !17941
  %33 = load i8*, i8** %32, align 4, !dbg !17941
  br label %34, !dbg !17941

34:                                               ; preds = %25, %31
  %35 = phi i8* [ %33, %31 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %25 ], !dbg !17941
  tail call void (i8*, i8*, i32, i32, i8*, ...) %28(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 118, i32 noundef 1, i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12.474, i32 0, i32 0), i8* noundef %35, i32 noundef %29) #18, !dbg !17941
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !17943
  br label %753, !dbg !17944

36:                                               ; preds = %12
  %37 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17945
  tail call void (i8*, i8*, i32, i32, i8*, ...) %37(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 122, i32 noundef 1, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13.475, i32 0, i32 0)) #18, !dbg !17945
  %38 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %4, i32 0, i32 6, !dbg !17947
  %39 = bitcast %union.mxml_value_u* %38 to i8**, !dbg !17949
  %40 = load i8*, i8** %39, align 8, !dbg !17949
  %41 = tail call i32 @strcmp(i8* noundef %40, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.468, i32 0, i32 0)) #18, !dbg !17950
  %42 = icmp eq i32 %41, 0, !dbg !17950
  br i1 %42, label %51, label %43, !dbg !17951

43:                                               ; preds = %36
  %44 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !17952
  %45 = getelementptr inbounds %struct._reent, %struct._reent* %44, i32 0, i32 3, !dbg !17952
  %46 = load %struct.__sFILE*, %struct.__sFILE** %45, align 4, !dbg !17952
  %47 = load i8*, i8** %39, align 8, !dbg !17954
  %48 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %46, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.476, i32 0, i32 0), i8* noundef %47) #18, !dbg !17955
  %49 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17956
  %50 = load i8*, i8** %39, align 8, !dbg !17956
  tail call void (i8*, i8*, i32, i32, i8*, ...) %49(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 128, i32 noundef 1, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.477, i32 0, i32 0), i8* noundef %50) #18, !dbg !17956
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !17958
  br label %753, !dbg !17959

51:                                               ; preds = %36
  %52 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17960
  tail call void (i8*, i8*, i32, i32, i8*, ...) %52(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 132, i32 noundef 1, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.478, i32 0, i32 0)) #18, !dbg !17960
  %53 = tail call %struct.mxml_node_s* @mxmlNewInteger(%struct.mxml_node_s* noundef nonnull %4, i32 noundef 123) #18, !dbg !17962
  %54 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17963
  tail call void (i8*, i8*, i32, i32, i8*, ...) %54(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 135, i32 noundef 1, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.479, i32 0, i32 0)) #18, !dbg !17963
  %55 = tail call %struct.mxml_node_s* @mxmlNewOpaque(%struct.mxml_node_s* noundef nonnull %4, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.480, i32 0, i32 0)) #18, !dbg !17965
  %56 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17966
  tail call void (i8*, i8*, i32, i32, i8*, ...) %56(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 138, i32 noundef 1, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19.481, i32 0, i32 0)) #18, !dbg !17966
  %57 = tail call %struct.mxml_node_s* @mxmlNewReal(%struct.mxml_node_s* noundef nonnull %4, double noundef 0x405ED999A0000000) #18, !dbg !17968
  %58 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17969
  tail call void (i8*, i8*, i32, i32, i8*, ...) %58(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 141, i32 noundef 1, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.482, i32 0, i32 0)) #18, !dbg !17969
  %59 = tail call %struct.mxml_node_s* @mxmlNewText(%struct.mxml_node_s* noundef nonnull %4, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.483, i32 0, i32 0)) #18, !dbg !17971
  %60 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17972
  tail call void (i8*, i8*, i32, i32, i8*, ...) %60(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 144, i32 noundef 1, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22.484, i32 0, i32 0)) #18, !dbg !17972
  %61 = tail call %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef nonnull %4, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.485, i32 0, i32 0), i32 (%struct.mxml_node_s*)* noundef null) #18, !dbg !17974
  %62 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17975
  tail call void (i8*, i8*, i32, i32, i8*, ...) %62(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 148, i32 noundef 1, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24.486, i32 0, i32 0)) #18, !dbg !17975
  %63 = tail call %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef nonnull %4, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.487, i32 0, i32 0), i32 (%struct.mxml_node_s*)* noundef nonnull @mxml_integer_cb) #18, !dbg !17977
  %64 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17978
  tail call void (i8*, i8*, i32, i32, i8*, ...) %64(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 152, i32 noundef 1, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.26.488, i32 0, i32 0)) #18, !dbg !17978
  %65 = tail call %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef nonnull %4, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27.489, i32 0, i32 0), i32 (%struct.mxml_node_s*)* noundef nonnull @mxml_real_cb) #18, !dbg !17980
  %66 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17981
  tail call void (i8*, i8*, i32, i32, i8*, ...) %66(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 156, i32 noundef 1, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28.490, i32 0, i32 0)) #18, !dbg !17981
  %67 = tail call %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef nonnull %4, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29.491, i32 0, i32 0), i32 (%struct.mxml_node_s*)* noundef nonnull @mxml_opaque_cb) #18, !dbg !17983
  %68 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17984
  tail call void (i8*, i8*, i32, i32, i8*, ...) %68(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 160, i32 noundef 1, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.492, i32 0, i32 0)) #18, !dbg !17984
  %69 = tail call %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef nonnull %4, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.31.493, i32 0, i32 0), i32 (%struct.mxml_node_s*)* noundef nonnull @mxml_opaque_cb) #18, !dbg !17986
  %70 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17987
  tail call void (i8*, i8*, i32, i32, i8*, ...) %70(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 164, i32 noundef 1, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.494, i32 0, i32 0)) #18, !dbg !17987
  %71 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %4, i32 0, i32 4, !dbg !17989
  %72 = load %struct.mxml_node_s*, %struct.mxml_node_s** %71, align 8, !dbg !17989
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %72, metadata !2070, metadata !DIExpression()), !dbg !17916
  %73 = icmp eq %struct.mxml_node_s* %72, null, !dbg !17990
  br i1 %73, label %74, label %80, !dbg !17992

74:                                               ; preds = %51
  %75 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !17993
  %76 = getelementptr inbounds %struct._reent, %struct._reent* %75, i32 0, i32 3, !dbg !17993
  %77 = load %struct.__sFILE*, %struct.__sFILE** %76, align 4, !dbg !17993
  %78 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33.495, i32 0, i32 0), %struct.__sFILE* noundef %77) #18, !dbg !17995
  %79 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !17996
  tail call void (i8*, i8*, i32, i32, i8*, ...) %79(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 171, i32 noundef 1, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.34.496, i32 0, i32 0)) #18, !dbg !17996
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !17998
  br label %753, !dbg !17999

80:                                               ; preds = %51
  %81 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18000
  tail call void (i8*, i8*, i32, i32, i8*, ...) %81(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 175, i32 noundef 1, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.497, i32 0, i32 0)) #18, !dbg !18000
  %82 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %72, i32 0, i32 0, !dbg !18002
  %83 = load i32, i32* %82, align 8, !dbg !18002
  %84 = icmp eq i32 %83, 1, !dbg !18004
  br i1 %84, label %104, label %85, !dbg !18005

85:                                               ; preds = %80
  %86 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18006
  %87 = getelementptr inbounds %struct._reent, %struct._reent* %86, i32 0, i32 3, !dbg !18006
  %88 = load %struct.__sFILE*, %struct.__sFILE** %87, align 4, !dbg !18006
  %89 = icmp ugt i32 %83, 4, !dbg !18008
  br i1 %89, label %93, label %90, !dbg !18008

90:                                               ; preds = %85
  %91 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %83, !dbg !18009
  %92 = load i8*, i8** %91, align 4, !dbg !18009
  br label %93, !dbg !18010

93:                                               ; preds = %85, %90
  %94 = phi i8* [ %92, %90 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %85 ], !dbg !18010
  %95 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %88, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.36.498, i32 0, i32 0), i8* noundef %94, i32 noundef %83) #18, !dbg !18011
  %96 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18012
  %97 = load i32, i32* %82, align 8, !dbg !18012
  %98 = icmp ugt i32 %97, 4, !dbg !18012
  br i1 %98, label %102, label %99, !dbg !18012

99:                                               ; preds = %93
  %100 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %97, !dbg !18012
  %101 = load i8*, i8** %100, align 4, !dbg !18012
  br label %102, !dbg !18012

102:                                              ; preds = %93, %99
  %103 = phi i8* [ %101, %99 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %93 ], !dbg !18012
  tail call void (i8*, i8*, i32, i32, i8*, ...) %96(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 183, i32 noundef 1, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.37.499, i32 0, i32 0), i8* noundef %103, i32 noundef %97) #18, !dbg !18012
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18014
  br label %753, !dbg !18015

104:                                              ; preds = %80
  %105 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18016
  tail call void (i8*, i8*, i32, i32, i8*, ...) %105(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 187, i32 noundef 1, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38.500, i32 0, i32 0)) #18, !dbg !18016
  %106 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %72, i32 0, i32 6, !dbg !18018
  %107 = bitcast %union.mxml_value_u* %106 to i32*, !dbg !18020
  %108 = load i32, i32* %107, align 8, !dbg !18020
  %109 = icmp eq i32 %108, 123, !dbg !18021
  br i1 %109, label %117, label %110, !dbg !18022

110:                                              ; preds = %104
  %111 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18023
  %112 = getelementptr inbounds %struct._reent, %struct._reent* %111, i32 0, i32 3, !dbg !18023
  %113 = load %struct.__sFILE*, %struct.__sFILE** %112, align 4, !dbg !18023
  %114 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %113, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.39.501, i32 0, i32 0), i32 noundef %108) #18, !dbg !18025
  %115 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18026
  %116 = load i32, i32* %107, align 8, !dbg !18026
  tail call void (i8*, i8*, i32, i32, i8*, ...) %115(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 193, i32 noundef 1, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.40.502, i32 0, i32 0), i32 noundef %116) #18, !dbg !18026
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18028
  br label %753, !dbg !18029

117:                                              ; preds = %104
  %118 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18030
  tail call void (i8*, i8*, i32, i32, i8*, ...) %118(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 197, i32 noundef 1, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.41.503, i32 0, i32 0)) #18, !dbg !18030
  %119 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %72, i32 0, i32 1, !dbg !18032
  %120 = load %struct.mxml_node_s*, %struct.mxml_node_s** %119, align 4, !dbg !18032
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %120, metadata !2070, metadata !DIExpression()), !dbg !17916
  %121 = icmp eq %struct.mxml_node_s* %120, null, !dbg !18033
  br i1 %121, label %122, label %128, !dbg !18035

122:                                              ; preds = %117
  %123 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18036
  %124 = getelementptr inbounds %struct._reent, %struct._reent* %123, i32 0, i32 3, !dbg !18036
  %125 = load %struct.__sFILE*, %struct.__sFILE** %124, align 4, !dbg !18036
  %126 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42.504, i32 0, i32 0), %struct.__sFILE* noundef %125) #18, !dbg !18038
  %127 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18039
  tail call void (i8*, i8*, i32, i32, i8*, ...) %127(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 203, i32 noundef 1, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.43.505, i32 0, i32 0)) #18, !dbg !18039
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18041
  br label %753, !dbg !18042

128:                                              ; preds = %117
  %129 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18043
  tail call void (i8*, i8*, i32, i32, i8*, ...) %129(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 207, i32 noundef 1, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.44.506, i32 0, i32 0)) #18, !dbg !18043
  %130 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %120, i32 0, i32 0, !dbg !18045
  %131 = load i32, i32* %130, align 8, !dbg !18045
  %132 = icmp eq i32 %131, 2, !dbg !18047
  br i1 %132, label %152, label %133, !dbg !18048

133:                                              ; preds = %128
  %134 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18049
  %135 = getelementptr inbounds %struct._reent, %struct._reent* %134, i32 0, i32 3, !dbg !18049
  %136 = load %struct.__sFILE*, %struct.__sFILE** %135, align 4, !dbg !18049
  %137 = icmp ugt i32 %131, 4, !dbg !18051
  br i1 %137, label %141, label %138, !dbg !18051

138:                                              ; preds = %133
  %139 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %131, !dbg !18052
  %140 = load i8*, i8** %139, align 4, !dbg !18052
  br label %141, !dbg !18053

141:                                              ; preds = %133, %138
  %142 = phi i8* [ %140, %138 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %133 ], !dbg !18053
  %143 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %136, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.45.507, i32 0, i32 0), i8* noundef %142, i32 noundef %131) #18, !dbg !18054
  %144 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18055
  %145 = load i32, i32* %130, align 8, !dbg !18055
  %146 = icmp ugt i32 %145, 4, !dbg !18055
  br i1 %146, label %150, label %147, !dbg !18055

147:                                              ; preds = %141
  %148 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %145, !dbg !18055
  %149 = load i8*, i8** %148, align 4, !dbg !18055
  br label %150, !dbg !18055

150:                                              ; preds = %141, %147
  %151 = phi i8* [ %149, %147 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %141 ], !dbg !18055
  tail call void (i8*, i8*, i32, i32, i8*, ...) %144(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 215, i32 noundef 1, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.46.508, i32 0, i32 0), i8* noundef %151, i32 noundef %145) #18, !dbg !18055
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18057
  br label %753, !dbg !18058

152:                                              ; preds = %128
  %153 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18059
  tail call void (i8*, i8*, i32, i32, i8*, ...) %153(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 219, i32 noundef 1, i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.47.509, i32 0, i32 0)) #18, !dbg !18059
  %154 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %120, i32 0, i32 6, !dbg !18061
  %155 = bitcast %union.mxml_value_u* %154 to i8**, !dbg !18063
  %156 = load i8*, i8** %155, align 8, !dbg !18063
  %157 = icmp eq i8* %156, null, !dbg !18064
  br i1 %157, label %163, label %158, !dbg !18065

158:                                              ; preds = %152
  %159 = tail call i32 @strcmp(i8* noundef nonnull %156, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.480, i32 0, i32 0)) #18, !dbg !18066
  %160 = icmp eq i32 %159, 0, !dbg !18066
  br i1 %160, label %175, label %161, !dbg !18067

161:                                              ; preds = %158
  %162 = load i8*, i8** %155, align 8, !dbg !18068
  br label %163, !dbg !18067

163:                                              ; preds = %161, %152
  %164 = phi i8* [ %162, %161 ], [ null, %152 ], !dbg !18068
  %165 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18070
  %166 = getelementptr inbounds %struct._reent, %struct._reent* %165, i32 0, i32 3, !dbg !18070
  %167 = load %struct.__sFILE*, %struct.__sFILE** %166, align 4, !dbg !18070
  %168 = icmp eq i8* %164, null, !dbg !18071
  %169 = select i1 %168, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49.510, i32 0, i32 0), i8* %164, !dbg !18071
  %170 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %167, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.48.511, i32 0, i32 0), i8* noundef %169) #18, !dbg !18072
  %171 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18073
  %172 = load i8*, i8** %155, align 8, !dbg !18073
  %173 = icmp eq i8* %172, null, !dbg !18073
  %174 = select i1 %173, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49.510, i32 0, i32 0), i8* %172, !dbg !18073
  tail call void (i8*, i8*, i32, i32, i8*, ...) %171(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 225, i32 noundef 1, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.50.512, i32 0, i32 0), i8* noundef %174) #18, !dbg !18073
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18075
  br label %753, !dbg !18076

175:                                              ; preds = %158
  %176 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18077
  tail call void (i8*, i8*, i32, i32, i8*, ...) %176(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 229, i32 noundef 1, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.51.513, i32 0, i32 0)) #18, !dbg !18077
  %177 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %120, i32 0, i32 1, !dbg !18079
  %178 = load %struct.mxml_node_s*, %struct.mxml_node_s** %177, align 4, !dbg !18079
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %178, metadata !2070, metadata !DIExpression()), !dbg !17916
  %179 = icmp eq %struct.mxml_node_s* %178, null, !dbg !18080
  br i1 %179, label %180, label %186, !dbg !18082

180:                                              ; preds = %175
  %181 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18083
  %182 = getelementptr inbounds %struct._reent, %struct._reent* %181, i32 0, i32 3, !dbg !18083
  %183 = load %struct.__sFILE*, %struct.__sFILE** %182, align 4, !dbg !18083
  %184 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.52.514, i32 0, i32 0), %struct.__sFILE* noundef %183) #18, !dbg !18085
  %185 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18086
  tail call void (i8*, i8*, i32, i32, i8*, ...) %185(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 235, i32 noundef 1, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.53.515, i32 0, i32 0)) #18, !dbg !18086
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18088
  br label %753, !dbg !18089

186:                                              ; preds = %175
  %187 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18090
  tail call void (i8*, i8*, i32, i32, i8*, ...) %187(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 239, i32 noundef 1, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.54.516, i32 0, i32 0)) #18, !dbg !18090
  %188 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %178, i32 0, i32 0, !dbg !18092
  %189 = load i32, i32* %188, align 8, !dbg !18092
  %190 = icmp eq i32 %189, 3, !dbg !18094
  br i1 %190, label %210, label %191, !dbg !18095

191:                                              ; preds = %186
  %192 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18096
  %193 = getelementptr inbounds %struct._reent, %struct._reent* %192, i32 0, i32 3, !dbg !18096
  %194 = load %struct.__sFILE*, %struct.__sFILE** %193, align 4, !dbg !18096
  %195 = icmp ugt i32 %189, 4, !dbg !18098
  br i1 %195, label %199, label %196, !dbg !18098

196:                                              ; preds = %191
  %197 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %189, !dbg !18099
  %198 = load i8*, i8** %197, align 4, !dbg !18099
  br label %199, !dbg !18100

199:                                              ; preds = %191, %196
  %200 = phi i8* [ %198, %196 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %191 ], !dbg !18100
  %201 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %194, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.55.517, i32 0, i32 0), i8* noundef %200, i32 noundef %189) #18, !dbg !18101
  %202 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18102
  %203 = load i32, i32* %188, align 8, !dbg !18102
  %204 = icmp ugt i32 %203, 4, !dbg !18102
  br i1 %204, label %208, label %205, !dbg !18102

205:                                              ; preds = %199
  %206 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %203, !dbg !18102
  %207 = load i8*, i8** %206, align 4, !dbg !18102
  br label %208, !dbg !18102

208:                                              ; preds = %199, %205
  %209 = phi i8* [ %207, %205 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %199 ], !dbg !18102
  tail call void (i8*, i8*, i32, i32, i8*, ...) %202(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 247, i32 noundef 1, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.56.518, i32 0, i32 0), i8* noundef %209, i32 noundef %203) #18, !dbg !18102
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18104
  br label %753, !dbg !18105

210:                                              ; preds = %186
  %211 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18106
  tail call void (i8*, i8*, i32, i32, i8*, ...) %211(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 251, i32 noundef 1, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.57.519, i32 0, i32 0)) #18, !dbg !18106
  %212 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %178, i32 0, i32 6, i32 0, !dbg !18108
  %213 = load double, double* %212, align 8, !dbg !18108
  %214 = fcmp une double %213, 0x405ED999A0000000, !dbg !18110
  br i1 %214, label %215, label %222, !dbg !18111

215:                                              ; preds = %210
  %216 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18112
  %217 = getelementptr inbounds %struct._reent, %struct._reent* %216, i32 0, i32 3, !dbg !18112
  %218 = load %struct.__sFILE*, %struct.__sFILE** %217, align 4, !dbg !18112
  %219 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %218, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.58.520, i32 0, i32 0), double noundef %213) #18, !dbg !18114
  %220 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18115
  %221 = load double, double* %212, align 8, !dbg !18115
  tail call void (i8*, i8*, i32, i32, i8*, ...) %220(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 257, i32 noundef 1, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59.521, i32 0, i32 0), double noundef %221) #18, !dbg !18115
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18117
  br label %753, !dbg !18118

222:                                              ; preds = %210
  %223 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18119
  tail call void (i8*, i8*, i32, i32, i8*, ...) %223(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 261, i32 noundef 1, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.60.522, i32 0, i32 0)) #18, !dbg !18119
  %224 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %178, i32 0, i32 1, !dbg !18121
  %225 = load %struct.mxml_node_s*, %struct.mxml_node_s** %224, align 4, !dbg !18121
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %225, metadata !2070, metadata !DIExpression()), !dbg !17916
  %226 = icmp eq %struct.mxml_node_s* %225, null, !dbg !18122
  br i1 %226, label %227, label %233, !dbg !18124

227:                                              ; preds = %222
  %228 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18125
  %229 = getelementptr inbounds %struct._reent, %struct._reent* %228, i32 0, i32 3, !dbg !18125
  %230 = load %struct.__sFILE*, %struct.__sFILE** %229, align 4, !dbg !18125
  %231 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61.523, i32 0, i32 0), %struct.__sFILE* noundef %230) #18, !dbg !18127
  %232 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18128
  tail call void (i8*, i8*, i32, i32, i8*, ...) %232(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 267, i32 noundef 1, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.62.524, i32 0, i32 0)) #18, !dbg !18128
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18130
  br label %753, !dbg !18131

233:                                              ; preds = %222
  %234 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18132
  tail call void (i8*, i8*, i32, i32, i8*, ...) %234(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 271, i32 noundef 1, i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.63.525, i32 0, i32 0)) #18, !dbg !18132
  %235 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %225, i32 0, i32 0, !dbg !18134
  %236 = load i32, i32* %235, align 8, !dbg !18134
  %237 = icmp eq i32 %236, 4, !dbg !18136
  br i1 %237, label %257, label %238, !dbg !18137

238:                                              ; preds = %233
  %239 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18138
  %240 = getelementptr inbounds %struct._reent, %struct._reent* %239, i32 0, i32 3, !dbg !18138
  %241 = load %struct.__sFILE*, %struct.__sFILE** %240, align 4, !dbg !18138
  %242 = icmp ugt i32 %236, 4, !dbg !18140
  br i1 %242, label %246, label %243, !dbg !18140

243:                                              ; preds = %238
  %244 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %236, !dbg !18141
  %245 = load i8*, i8** %244, align 4, !dbg !18141
  br label %246, !dbg !18142

246:                                              ; preds = %238, %243
  %247 = phi i8* [ %245, %243 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %238 ], !dbg !18142
  %248 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %241, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.64.526, i32 0, i32 0), i8* noundef %247, i32 noundef %236) #18, !dbg !18143
  %249 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18144
  %250 = load i32, i32* %235, align 8, !dbg !18144
  %251 = icmp ugt i32 %250, 4, !dbg !18144
  br i1 %251, label %255, label %252, !dbg !18144

252:                                              ; preds = %246
  %253 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %250, !dbg !18144
  %254 = load i8*, i8** %253, align 4, !dbg !18144
  br label %255, !dbg !18144

255:                                              ; preds = %246, %252
  %256 = phi i8* [ %254, %252 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %246 ], !dbg !18144
  tail call void (i8*, i8*, i32, i32, i8*, ...) %249(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 279, i32 noundef 1, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.65.527, i32 0, i32 0), i8* noundef %256, i32 noundef %250) #18, !dbg !18144
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18146
  br label %753, !dbg !18147

257:                                              ; preds = %233
  %258 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18148
  tail call void (i8*, i8*, i32, i32, i8*, ...) %258(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 283, i32 noundef 1, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.66.528, i32 0, i32 0)) #18, !dbg !18148
  %259 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %225, i32 0, i32 6, !dbg !18150
  %260 = bitcast %union.mxml_value_u* %259 to %struct.mxml_text_s*, !dbg !18152
  %261 = bitcast %union.mxml_value_u* %259 to i32*, !dbg !18153
  %262 = load i32, i32* %261, align 8, !dbg !18153
  %263 = icmp eq i32 %262, 0, !dbg !18154
  br i1 %263, label %273, label %264, !dbg !18155

264:                                              ; preds = %257
  %265 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %260, i32 0, i32 1, !dbg !18156
  %266 = load i8*, i8** %265, align 4, !dbg !18156
  %267 = icmp eq i8* %266, null, !dbg !18157
  br i1 %267, label %273, label %268, !dbg !18158

268:                                              ; preds = %264
  %269 = tail call i32 @strcmp(i8* noundef nonnull %266, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.483, i32 0, i32 0)) #18, !dbg !18159
  %270 = icmp eq i32 %269, 0, !dbg !18159
  br i1 %270, label %288, label %271, !dbg !18160

271:                                              ; preds = %268
  %272 = load i32, i32* %261, align 8, !dbg !18161
  br label %273, !dbg !18160

273:                                              ; preds = %271, %264, %257
  %274 = phi i32 [ %272, %271 ], [ %262, %264 ], [ 0, %257 ], !dbg !18161
  %275 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18163
  %276 = getelementptr inbounds %struct._reent, %struct._reent* %275, i32 0, i32 3, !dbg !18163
  %277 = load %struct.__sFILE*, %struct.__sFILE** %276, align 4, !dbg !18163
  %278 = getelementptr inbounds %struct.mxml_text_s, %struct.mxml_text_s* %260, i32 0, i32 1, !dbg !18164
  %279 = load i8*, i8** %278, align 4, !dbg !18164
  %280 = icmp eq i8* %279, null, !dbg !18165
  %281 = select i1 %280, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49.510, i32 0, i32 0), i8* %279, !dbg !18165
  %282 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %277, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.67.529, i32 0, i32 0), i32 noundef %274, i8* noundef %281) #18, !dbg !18166
  %283 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18167
  %284 = load i32, i32* %261, align 8, !dbg !18167
  %285 = load i8*, i8** %278, align 4, !dbg !18167
  %286 = icmp eq i8* %285, null, !dbg !18167
  %287 = select i1 %286, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49.510, i32 0, i32 0), i8* %285, !dbg !18167
  tail call void (i8*, i8*, i32, i32, i8*, ...) %283(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 292, i32 noundef 1, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.68.530, i32 0, i32 0), i32 noundef %284, i8* noundef %287) #18, !dbg !18167
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18169
  br label %753, !dbg !18170

288:                                              ; preds = %268
  %289 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18171
  tail call void (i8*, i8*, i32, i32, i8*, ...) %289(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 296, i32 noundef 1, i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.69.531, i32 0, i32 0)) #18, !dbg !18171
  call void @llvm.dbg.value(metadata i32 0, metadata !2023, metadata !DIExpression()), !dbg !17916
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %225, metadata !2070, metadata !DIExpression()), !dbg !17916
  br label %290, !dbg !18173

290:                                              ; preds = %288, %329
  %291 = phi %struct.mxml_node_s* [ %225, %288 ], [ %294, %329 ]
  %292 = phi i32 [ 0, %288 ], [ %305, %329 ]
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %291, metadata !2070, metadata !DIExpression()), !dbg !17916
  call void @llvm.dbg.value(metadata i32 %292, metadata !2023, metadata !DIExpression()), !dbg !17916
  %293 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %291, i32 0, i32 1, !dbg !18175
  %294 = load %struct.mxml_node_s*, %struct.mxml_node_s** %293, align 4, !dbg !18175
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %294, metadata !2070, metadata !DIExpression()), !dbg !17916
  %295 = icmp eq %struct.mxml_node_s* %294, null, !dbg !18178
  br i1 %295, label %296, label %303, !dbg !18180

296:                                              ; preds = %290
  %297 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18181
  %298 = getelementptr inbounds %struct._reent, %struct._reent* %297, i32 0, i32 3, !dbg !18181
  %299 = load %struct.__sFILE*, %struct.__sFILE** %298, align 4, !dbg !18181
  %300 = add nuw nsw i32 %292, 1, !dbg !18183
  %301 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %299, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.70.532, i32 0, i32 0), i32 noundef %300) #18, !dbg !18184
  %302 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18185
  tail call void (i8*, i8*, i32, i32, i8*, ...) %302(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 303, i32 noundef 1, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.71.533, i32 0, i32 0), i32 noundef %300) #18, !dbg !18185
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18187
  br label %753, !dbg !18188

303:                                              ; preds = %290
  %304 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18189
  %305 = add nuw nsw i32 %292, 1, !dbg !18189
  tail call void (i8*, i8*, i32, i32, i8*, ...) %304(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 307, i32 noundef 1, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.72.534, i32 0, i32 0), i32 noundef %305) #18, !dbg !18189
  %306 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %294, i32 0, i32 0, !dbg !18191
  %307 = load i32, i32* %306, align 8, !dbg !18191
  %308 = icmp eq i32 %307, 0, !dbg !18193
  br i1 %308, label %329, label %309, !dbg !18194

309:                                              ; preds = %303
  %310 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %294, i32 0, i32 0, !dbg !18191
  %311 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18195
  %312 = getelementptr inbounds %struct._reent, %struct._reent* %311, i32 0, i32 3, !dbg !18195
  %313 = load %struct.__sFILE*, %struct.__sFILE** %312, align 4, !dbg !18195
  %314 = icmp ugt i32 %307, 4, !dbg !18197
  br i1 %314, label %318, label %315, !dbg !18197

315:                                              ; preds = %309
  %316 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %307, !dbg !18198
  %317 = load i8*, i8** %316, align 4, !dbg !18198
  br label %318, !dbg !18199

318:                                              ; preds = %309, %315
  %319 = phi i8* [ %317, %315 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %309 ], !dbg !18199
  %320 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %313, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.73.535, i32 0, i32 0), i32 noundef %305, i8* noundef %319, i32 noundef %307) #18, !dbg !18200
  %321 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18201
  %322 = load i32, i32* %310, align 8, !dbg !18201
  %323 = icmp ugt i32 %322, 4, !dbg !18201
  br i1 %323, label %327, label %324, !dbg !18201

324:                                              ; preds = %318
  %325 = getelementptr inbounds [5 x i8*], [5 x i8*]* @xml_main.types, i32 0, i32 %322, !dbg !18201
  %326 = load i8*, i8** %325, align 4, !dbg !18201
  br label %327, !dbg !18201

327:                                              ; preds = %318, %324
  %328 = phi i8* [ %326, %324 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.472, i32 0, i32 0), %318 ], !dbg !18201
  tail call void (i8*, i8*, i32, i32, i8*, ...) %321(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 316, i32 noundef 1, i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.74.536, i32 0, i32 0), i32 noundef %305, i8* noundef %328, i32 noundef %322) #18, !dbg !18201
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18203
  br label %753, !dbg !18204

329:                                              ; preds = %303
  %330 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18205
  tail call void (i8*, i8*, i32, i32, i8*, ...) %330(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 320, i32 noundef 1, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.75.537, i32 0, i32 0), i32 noundef %305) #18, !dbg !18205
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %294, metadata !2070, metadata !DIExpression()), !dbg !17916
  call void @llvm.dbg.value(metadata i32 %305, metadata !2023, metadata !DIExpression()), !dbg !17916
  %331 = icmp eq i32 %305, 4, !dbg !18207
  br i1 %331, label %332, label %290, !dbg !18173, !llvm.loop !18208

332:                                              ; preds = %329
  %333 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18210
  tail call void (i8*, i8*, i32, i32, i8*, ...) %333(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 327, i32 noundef 1, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76.538, i32 0, i32 0)) #18, !dbg !18210
  %334 = tail call %struct.mxml_node_s* @mxmlFindPath(%struct.mxml_node_s* noundef %4, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77.539, i32 0, i32 0)) #18, !dbg !18212
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %334, metadata !2070, metadata !DIExpression()), !dbg !17916
  %335 = icmp eq %struct.mxml_node_s* %334, null, !dbg !18213
  br i1 %335, label %336, label %342, !dbg !18215

336:                                              ; preds = %332
  %337 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18216
  %338 = getelementptr inbounds %struct._reent, %struct._reent* %337, i32 0, i32 3, !dbg !18216
  %339 = load %struct.__sFILE*, %struct.__sFILE** %338, align 4, !dbg !18216
  %340 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.78.540, i32 0, i32 0), %struct.__sFILE* noundef %339) #18, !dbg !18218
  %341 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18219
  tail call void (i8*, i8*, i32, i32, i8*, ...) %341(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 332, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.79.541, i32 0, i32 0)) #18, !dbg !18219
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18221
  br label %753, !dbg !18222

342:                                              ; preds = %332
  %343 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18223
  tail call void (i8*, i8*, i32, i32, i8*, ...) %343(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 336, i32 noundef 1, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.80.542, i32 0, i32 0)) #18, !dbg !18223
  %344 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %334, i32 0, i32 0, !dbg !18225
  %345 = load i32, i32* %344, align 8, !dbg !18225
  %346 = icmp eq i32 %345, 2, !dbg !18227
  br i1 %346, label %347, label %353, !dbg !18228

347:                                              ; preds = %342
  %348 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %334, i32 0, i32 6, !dbg !18229
  %349 = bitcast %union.mxml_value_u* %348 to i8**, !dbg !18230
  %350 = load i8*, i8** %349, align 8, !dbg !18230
  %351 = tail call i32 @strcmp(i8* noundef %350, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81.543, i32 0, i32 0)) #18, !dbg !18231
  %352 = icmp eq i32 %351, 0, !dbg !18231
  br i1 %352, label %359, label %353, !dbg !18232

353:                                              ; preds = %347, %342
  %354 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18233
  %355 = getelementptr inbounds %struct._reent, %struct._reent* %354, i32 0, i32 3, !dbg !18233
  %356 = load %struct.__sFILE*, %struct.__sFILE** %355, align 4, !dbg !18233
  %357 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.82.544, i32 0, i32 0), %struct.__sFILE* noundef %356) #18, !dbg !18235
  %358 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18236
  tail call void (i8*, i8*, i32, i32, i8*, ...) %358(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 340, i32 noundef 1, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.83.545, i32 0, i32 0)) #18, !dbg !18236
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18238
  br label %753, !dbg !18239

359:                                              ; preds = %347
  %360 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18240
  tail call void (i8*, i8*, i32, i32, i8*, ...) %360(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 344, i32 noundef 1, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.84.546, i32 0, i32 0)) #18, !dbg !18240
  %361 = tail call %struct.mxml_node_s* @mxmlFindPath(%struct.mxml_node_s* noundef %4, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85.547, i32 0, i32 0)) #18, !dbg !18242
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %361, metadata !2070, metadata !DIExpression()), !dbg !17916
  %362 = icmp eq %struct.mxml_node_s* %361, null, !dbg !18243
  br i1 %362, label %363, label %369, !dbg !18245

363:                                              ; preds = %359
  %364 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18246
  %365 = getelementptr inbounds %struct._reent, %struct._reent* %364, i32 0, i32 3, !dbg !18246
  %366 = load %struct.__sFILE*, %struct.__sFILE** %365, align 4, !dbg !18246
  %367 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.86.548, i32 0, i32 0), %struct.__sFILE* noundef %366) #18, !dbg !18248
  %368 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18249
  tail call void (i8*, i8*, i32, i32, i8*, ...) %368(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 349, i32 noundef 1, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.87.549, i32 0, i32 0)) #18, !dbg !18249
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18251
  br label %753, !dbg !18252

369:                                              ; preds = %359
  %370 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18253
  tail call void (i8*, i8*, i32, i32, i8*, ...) %370(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 353, i32 noundef 1, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.88.550, i32 0, i32 0)) #18, !dbg !18253
  %371 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %361, i32 0, i32 0, !dbg !18255
  %372 = load i32, i32* %371, align 8, !dbg !18255
  %373 = icmp eq i32 %372, 2, !dbg !18257
  br i1 %373, label %374, label %380, !dbg !18258

374:                                              ; preds = %369
  %375 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %361, i32 0, i32 6, !dbg !18259
  %376 = bitcast %union.mxml_value_u* %375 to i8**, !dbg !18260
  %377 = load i8*, i8** %376, align 8, !dbg !18260
  %378 = tail call i32 @strcmp(i8* noundef %377, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81.543, i32 0, i32 0)) #18, !dbg !18261
  %379 = icmp eq i32 %378, 0, !dbg !18261
  br i1 %379, label %386, label %380, !dbg !18262

380:                                              ; preds = %374, %369
  %381 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18263
  %382 = getelementptr inbounds %struct._reent, %struct._reent* %381, i32 0, i32 3, !dbg !18263
  %383 = load %struct.__sFILE*, %struct.__sFILE** %382, align 4, !dbg !18263
  %384 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.89.551, i32 0, i32 0), %struct.__sFILE* noundef %383) #18, !dbg !18265
  %385 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18266
  tail call void (i8*, i8*, i32, i32, i8*, ...) %385(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 357, i32 noundef 1, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.90.552, i32 0, i32 0)) #18, !dbg !18266
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18268
  br label %753, !dbg !18269

386:                                              ; preds = %374
  %387 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18270
  tail call void (i8*, i8*, i32, i32, i8*, ...) %387(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 361, i32 noundef 1, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.84.546, i32 0, i32 0)) #18, !dbg !18270
  %388 = tail call %struct.mxml_node_s* @mxmlFindPath(%struct.mxml_node_s* noundef %4, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.91.553, i32 0, i32 0)) #18, !dbg !18272
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %388, metadata !2070, metadata !DIExpression()), !dbg !17916
  %389 = icmp eq %struct.mxml_node_s* %388, null, !dbg !18273
  br i1 %389, label %390, label %396, !dbg !18275

390:                                              ; preds = %386
  %391 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18276
  %392 = getelementptr inbounds %struct._reent, %struct._reent* %391, i32 0, i32 3, !dbg !18276
  %393 = load %struct.__sFILE*, %struct.__sFILE** %392, align 4, !dbg !18276
  %394 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.92.554, i32 0, i32 0), %struct.__sFILE* noundef %393) #18, !dbg !18278
  %395 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18279
  tail call void (i8*, i8*, i32, i32, i8*, ...) %395(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 366, i32 noundef 1, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.93.555, i32 0, i32 0)) #18, !dbg !18279
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18281
  br label %753, !dbg !18282

396:                                              ; preds = %386
  %397 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18283
  tail call void (i8*, i8*, i32, i32, i8*, ...) %397(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 370, i32 noundef 1, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.94.556, i32 0, i32 0)) #18, !dbg !18283
  %398 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %388, i32 0, i32 0, !dbg !18285
  %399 = load i32, i32* %398, align 8, !dbg !18285
  %400 = icmp eq i32 %399, 2, !dbg !18287
  br i1 %400, label %401, label %407, !dbg !18288

401:                                              ; preds = %396
  %402 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %388, i32 0, i32 6, !dbg !18289
  %403 = bitcast %union.mxml_value_u* %402 to i8**, !dbg !18290
  %404 = load i8*, i8** %403, align 8, !dbg !18290
  %405 = tail call i32 @strcmp(i8* noundef %404, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81.543, i32 0, i32 0)) #18, !dbg !18291
  %406 = icmp eq i32 %405, 0, !dbg !18291
  br i1 %406, label %413, label %407, !dbg !18292

407:                                              ; preds = %401, %396
  %408 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18293
  %409 = getelementptr inbounds %struct._reent, %struct._reent* %408, i32 0, i32 3, !dbg !18293
  %410 = load %struct.__sFILE*, %struct.__sFILE** %409, align 4, !dbg !18293
  %411 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.95.557, i32 0, i32 0), %struct.__sFILE* noundef %410) #18, !dbg !18295
  %412 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18296
  tail call void (i8*, i8*, i32, i32, i8*, ...) %412(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 374, i32 noundef 1, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.96.558, i32 0, i32 0)) #18, !dbg !18296
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18298
  br label %753, !dbg !18299

413:                                              ; preds = %401
  %414 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18300
  tail call void (i8*, i8*, i32, i32, i8*, ...) %414(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 378, i32 noundef 1, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.84.546, i32 0, i32 0)) #18, !dbg !18300
  %415 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18302
  tail call void (i8*, i8*, i32, i32, i8*, ...) %415(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 386, i32 noundef 1, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.97.559, i32 0, i32 0)) #18, !dbg !18302
  %416 = tail call %struct.mxml_index_s* @mxmlIndexNew(%struct.mxml_node_s* noundef %4, i8* noundef null, i8* noundef null) #18, !dbg !18304
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %416, metadata !2071, metadata !DIExpression()), !dbg !17916
  %417 = icmp eq %struct.mxml_index_s* %416, null, !dbg !18305
  br i1 %417, label %418, label %424, !dbg !18307

418:                                              ; preds = %413
  %419 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18308
  %420 = getelementptr inbounds %struct._reent, %struct._reent* %419, i32 0, i32 3, !dbg !18308
  %421 = load %struct.__sFILE*, %struct.__sFILE** %420, align 4, !dbg !18308
  %422 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.98.560, i32 0, i32 0), %struct.__sFILE* noundef %421) #18, !dbg !18310
  %423 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18311
  tail call void (i8*, i8*, i32, i32, i8*, ...) %423(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 390, i32 noundef 1, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.99.561, i32 0, i32 0)) #18, !dbg !18311
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18313
  br label %753, !dbg !18314

424:                                              ; preds = %413
  %425 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18315
  tail call void (i8*, i8*, i32, i32, i8*, ...) %425(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 394, i32 noundef 1, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.100.562, i32 0, i32 0)) #18, !dbg !18315
  %426 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %416, i32 0, i32 1, !dbg !18317
  %427 = load i32, i32* %426, align 4, !dbg !18317
  %428 = icmp eq i32 %427, 10, !dbg !18319
  br i1 %428, label %436, label %429, !dbg !18320

429:                                              ; preds = %424
  %430 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18321
  %431 = getelementptr inbounds %struct._reent, %struct._reent* %430, i32 0, i32 3, !dbg !18321
  %432 = load %struct.__sFILE*, %struct.__sFILE** %431, align 4, !dbg !18321
  %433 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %432, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.101.563, i32 0, i32 0), i32 noundef %427) #18, !dbg !18323
  %434 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18324
  %435 = load i32, i32* %426, align 4, !dbg !18324
  tail call void (i8*, i8*, i32, i32, i8*, ...) %434(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 400, i32 noundef 1, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.102.564, i32 0, i32 0), i32 noundef %435) #18, !dbg !18324
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %416) #18, !dbg !18326
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18327
  br label %753, !dbg !18328

436:                                              ; preds = %424
  %437 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18329
  tail call void (i8*, i8*, i32, i32, i8*, ...) %437(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 405, i32 noundef 1, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.103.565, i32 0, i32 0)) #18, !dbg !18329
  %438 = tail call %struct.mxml_node_s* @mxmlIndexReset(%struct.mxml_index_s* noundef nonnull %416) #18, !dbg !18331
  %439 = tail call %struct.mxml_node_s* @mxmlIndexFind(%struct.mxml_index_s* noundef nonnull %416, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104.566, i32 0, i32 0), i8* noundef null) #18, !dbg !18332
  %440 = icmp eq %struct.mxml_node_s* %439, null, !dbg !18332
  br i1 %440, label %441, label %447, !dbg !18334

441:                                              ; preds = %436
  %442 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18335
  %443 = getelementptr inbounds %struct._reent, %struct._reent* %442, i32 0, i32 3, !dbg !18335
  %444 = load %struct.__sFILE*, %struct.__sFILE** %443, align 4, !dbg !18335
  %445 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.105.567, i32 0, i32 0), %struct.__sFILE* noundef %444) #18, !dbg !18337
  %446 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18338
  tail call void (i8*, i8*, i32, i32, i8*, ...) %446(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 410, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.106.568, i32 0, i32 0)) #18, !dbg !18338
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %416) #18, !dbg !18340
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18341
  br label %753, !dbg !18342

447:                                              ; preds = %436
  %448 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18343
  tail call void (i8*, i8*, i32, i32, i8*, ...) %448(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 415, i32 noundef 1, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.107.569, i32 0, i32 0)) #18, !dbg !18343
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %416) #18, !dbg !18345
  %449 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18346
  tail call void (i8*, i8*, i32, i32, i8*, ...) %449(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 418, i32 noundef 1, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.108.570, i32 0, i32 0)) #18, !dbg !18346
  %450 = tail call %struct.mxml_index_s* @mxmlIndexNew(%struct.mxml_node_s* noundef %4, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104.566, i32 0, i32 0), i8* noundef null) #18, !dbg !18348
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %450, metadata !2071, metadata !DIExpression()), !dbg !17916
  %451 = icmp eq %struct.mxml_index_s* %450, null, !dbg !18349
  br i1 %451, label %452, label %458, !dbg !18351

452:                                              ; preds = %447
  %453 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18352
  %454 = getelementptr inbounds %struct._reent, %struct._reent* %453, i32 0, i32 3, !dbg !18352
  %455 = load %struct.__sFILE*, %struct.__sFILE** %454, align 4, !dbg !18352
  %456 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.109.571, i32 0, i32 0), %struct.__sFILE* noundef %455) #18, !dbg !18354
  %457 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18355
  tail call void (i8*, i8*, i32, i32, i8*, ...) %457(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 423, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.110.572, i32 0, i32 0)) #18, !dbg !18355
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18357
  br label %753, !dbg !18358

458:                                              ; preds = %447
  %459 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18359
  tail call void (i8*, i8*, i32, i32, i8*, ...) %459(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 427, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.111.573, i32 0, i32 0)) #18, !dbg !18359
  %460 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %450, i32 0, i32 1, !dbg !18361
  %461 = load i32, i32* %460, align 4, !dbg !18361
  %462 = icmp eq i32 %461, 4, !dbg !18363
  br i1 %462, label %470, label %463, !dbg !18364

463:                                              ; preds = %458
  %464 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18365
  %465 = getelementptr inbounds %struct._reent, %struct._reent* %464, i32 0, i32 3, !dbg !18365
  %466 = load %struct.__sFILE*, %struct.__sFILE** %465, align 4, !dbg !18365
  %467 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %466, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.112.574, i32 0, i32 0), i32 noundef %461) #18, !dbg !18367
  %468 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18368
  %469 = load i32, i32* %460, align 4, !dbg !18368
  tail call void (i8*, i8*, i32, i32, i8*, ...) %468(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 433, i32 noundef 1, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.113.575, i32 0, i32 0), i32 noundef %469) #18, !dbg !18368
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %450) #18, !dbg !18370
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18371
  br label %753, !dbg !18372

470:                                              ; preds = %458
  %471 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18373
  tail call void (i8*, i8*, i32, i32, i8*, ...) %471(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 438, i32 noundef 1, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.114.576, i32 0, i32 0)) #18, !dbg !18373
  %472 = tail call %struct.mxml_node_s* @mxmlIndexReset(%struct.mxml_index_s* noundef nonnull %450) #18, !dbg !18375
  %473 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18376
  tail call void (i8*, i8*, i32, i32, i8*, ...) %473(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 441, i32 noundef 1, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.115.577, i32 0, i32 0)) #18, !dbg !18376
  %474 = tail call %struct.mxml_node_s* @mxmlIndexEnum(%struct.mxml_index_s* noundef nonnull %450) #18, !dbg !18378
  %475 = icmp eq %struct.mxml_node_s* %474, null, !dbg !18378
  br i1 %475, label %476, label %482, !dbg !18380

476:                                              ; preds = %470
  %477 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18381
  %478 = getelementptr inbounds %struct._reent, %struct._reent* %477, i32 0, i32 3, !dbg !18381
  %479 = load %struct.__sFILE*, %struct.__sFILE** %478, align 4, !dbg !18381
  %480 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.116.578, i32 0, i32 0), %struct.__sFILE* noundef %479) #18, !dbg !18383
  %481 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18384
  tail call void (i8*, i8*, i32, i32, i8*, ...) %481(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 445, i32 noundef 1, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.117.579, i32 0, i32 0)) #18, !dbg !18384
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %450) #18, !dbg !18386
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18387
  br label %753, !dbg !18388

482:                                              ; preds = %470
  %483 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18389
  tail call void (i8*, i8*, i32, i32, i8*, ...) %483(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 450, i32 noundef 1, i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.118.580, i32 0, i32 0)) #18, !dbg !18389
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %450) #18, !dbg !18391
  %484 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18392
  tail call void (i8*, i8*, i32, i32, i8*, ...) %484(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 453, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.119.581, i32 0, i32 0)) #18, !dbg !18392
  %485 = tail call %struct.mxml_index_s* @mxmlIndexNew(%struct.mxml_node_s* noundef %4, i8* noundef null, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120.582, i32 0, i32 0)) #18, !dbg !18394
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %485, metadata !2071, metadata !DIExpression()), !dbg !17916
  %486 = icmp eq %struct.mxml_index_s* %485, null, !dbg !18395
  br i1 %486, label %487, label %493, !dbg !18397

487:                                              ; preds = %482
  %488 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18398
  %489 = getelementptr inbounds %struct._reent, %struct._reent* %488, i32 0, i32 3, !dbg !18398
  %490 = load %struct.__sFILE*, %struct.__sFILE** %489, align 4, !dbg !18398
  %491 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.121.583, i32 0, i32 0), %struct.__sFILE* noundef %490) #18, !dbg !18400
  %492 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18401
  tail call void (i8*, i8*, i32, i32, i8*, ...) %492(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 458, i32 noundef 1, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.122.584, i32 0, i32 0)) #18, !dbg !18401
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18403
  br label %753, !dbg !18404

493:                                              ; preds = %482
  %494 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18405
  tail call void (i8*, i8*, i32, i32, i8*, ...) %494(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 462, i32 noundef 1, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123.585, i32 0, i32 0)) #18, !dbg !18405
  %495 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %485, i32 0, i32 1, !dbg !18407
  %496 = load i32, i32* %495, align 4, !dbg !18407
  %497 = icmp eq i32 %496, 3, !dbg !18409
  br i1 %497, label %505, label %498, !dbg !18410

498:                                              ; preds = %493
  %499 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18411
  %500 = getelementptr inbounds %struct._reent, %struct._reent* %499, i32 0, i32 3, !dbg !18411
  %501 = load %struct.__sFILE*, %struct.__sFILE** %500, align 4, !dbg !18411
  %502 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %501, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.124.586, i32 0, i32 0), i32 noundef %496) #18, !dbg !18413
  %503 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18414
  %504 = load i32, i32* %495, align 4, !dbg !18414
  tail call void (i8*, i8*, i32, i32, i8*, ...) %503(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 468, i32 noundef 1, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.125.587, i32 0, i32 0), i32 noundef %504) #18, !dbg !18414
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %485) #18, !dbg !18416
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18417
  br label %753, !dbg !18418

505:                                              ; preds = %493
  %506 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18419
  tail call void (i8*, i8*, i32, i32, i8*, ...) %506(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 473, i32 noundef 1, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.126.588, i32 0, i32 0)) #18, !dbg !18419
  %507 = tail call %struct.mxml_node_s* @mxmlIndexReset(%struct.mxml_index_s* noundef nonnull %485) #18, !dbg !18421
  %508 = tail call %struct.mxml_node_s* @mxmlIndexFind(%struct.mxml_index_s* noundef nonnull %485, i8* noundef null, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127.589, i32 0, i32 0)) #18, !dbg !18422
  %509 = icmp eq %struct.mxml_node_s* %508, null, !dbg !18422
  br i1 %509, label %510, label %516, !dbg !18424

510:                                              ; preds = %505
  %511 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18425
  %512 = getelementptr inbounds %struct._reent, %struct._reent* %511, i32 0, i32 3, !dbg !18425
  %513 = load %struct.__sFILE*, %struct.__sFILE** %512, align 4, !dbg !18425
  %514 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.128.590, i32 0, i32 0), %struct.__sFILE* noundef %513) #18, !dbg !18427
  %515 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18428
  tail call void (i8*, i8*, i32, i32, i8*, ...) %515(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 478, i32 noundef 1, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.129.591, i32 0, i32 0)) #18, !dbg !18428
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %485) #18, !dbg !18430
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18431
  br label %753, !dbg !18432

516:                                              ; preds = %505
  %517 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18433
  tail call void (i8*, i8*, i32, i32, i8*, ...) %517(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 483, i32 noundef 1, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.130.592, i32 0, i32 0)) #18, !dbg !18433
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %485) #18, !dbg !18435
  %518 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18436
  tail call void (i8*, i8*, i32, i32, i8*, ...) %518(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 486, i32 noundef 1, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.131.593, i32 0, i32 0)) #18, !dbg !18436
  %519 = tail call %struct.mxml_index_s* @mxmlIndexNew(%struct.mxml_node_s* noundef %4, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104.566, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120.582, i32 0, i32 0)) #18, !dbg !18438
  call void @llvm.dbg.value(metadata %struct.mxml_index_s* %519, metadata !2071, metadata !DIExpression()), !dbg !17916
  %520 = icmp eq %struct.mxml_index_s* %519, null, !dbg !18439
  br i1 %520, label %521, label %527, !dbg !18441

521:                                              ; preds = %516
  %522 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18442
  %523 = getelementptr inbounds %struct._reent, %struct._reent* %522, i32 0, i32 3, !dbg !18442
  %524 = load %struct.__sFILE*, %struct.__sFILE** %523, align 4, !dbg !18442
  %525 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.132.594, i32 0, i32 0), %struct.__sFILE* noundef %524) #18, !dbg !18444
  %526 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18445
  tail call void (i8*, i8*, i32, i32, i8*, ...) %526(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 491, i32 noundef 1, i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.133.595, i32 0, i32 0)) #18, !dbg !18445
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18447
  br label %753, !dbg !18448

527:                                              ; preds = %516
  %528 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18449
  tail call void (i8*, i8*, i32, i32, i8*, ...) %528(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 495, i32 noundef 1, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.134.596, i32 0, i32 0)) #18, !dbg !18449
  %529 = getelementptr inbounds %struct.mxml_index_s, %struct.mxml_index_s* %519, i32 0, i32 1, !dbg !18451
  %530 = load i32, i32* %529, align 4, !dbg !18451
  %531 = icmp eq i32 %530, 3, !dbg !18453
  br i1 %531, label %539, label %532, !dbg !18454

532:                                              ; preds = %527
  %533 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18455
  %534 = getelementptr inbounds %struct._reent, %struct._reent* %533, i32 0, i32 3, !dbg !18455
  %535 = load %struct.__sFILE*, %struct.__sFILE** %534, align 4, !dbg !18455
  %536 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %535, i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.135.597, i32 0, i32 0), i32 noundef %530) #18, !dbg !18457
  %537 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18458
  %538 = load i32, i32* %529, align 4, !dbg !18458
  tail call void (i8*, i8*, i32, i32, i8*, ...) %537(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 501, i32 noundef 1, i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.136.598, i32 0, i32 0), i32 noundef %538) #18, !dbg !18458
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %519) #18, !dbg !18460
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18461
  br label %753, !dbg !18462

539:                                              ; preds = %527
  %540 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18463
  tail call void (i8*, i8*, i32, i32, i8*, ...) %540(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 506, i32 noundef 1, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.126.588, i32 0, i32 0)) #18, !dbg !18463
  %541 = tail call %struct.mxml_node_s* @mxmlIndexReset(%struct.mxml_index_s* noundef nonnull %519) #18, !dbg !18465
  %542 = tail call %struct.mxml_node_s* @mxmlIndexFind(%struct.mxml_index_s* noundef nonnull %519, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104.566, i32 0, i32 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127.589, i32 0, i32 0)) #18, !dbg !18466
  %543 = icmp eq %struct.mxml_node_s* %542, null, !dbg !18466
  br i1 %543, label %544, label %550, !dbg !18468

544:                                              ; preds = %539
  %545 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18469
  %546 = getelementptr inbounds %struct._reent, %struct._reent* %545, i32 0, i32 3, !dbg !18469
  %547 = load %struct.__sFILE*, %struct.__sFILE** %546, align 4, !dbg !18469
  %548 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.137.599, i32 0, i32 0), %struct.__sFILE* noundef %547) #18, !dbg !18471
  %549 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18472
  tail call void (i8*, i8*, i32, i32, i8*, ...) %549(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 511, i32 noundef 1, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.138.600, i32 0, i32 0)) #18, !dbg !18472
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %519) #18, !dbg !18474
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef %4) #18, !dbg !18475
  br label %753, !dbg !18476

550:                                              ; preds = %539
  %551 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18477
  tail call void (i8*, i8*, i32, i32, i8*, ...) %551(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 516, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.139.601, i32 0, i32 0)) #18, !dbg !18477
  tail call void @mxmlIndexDelete(%struct.mxml_index_s* noundef nonnull %519) #18, !dbg !18479
  %552 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18480
  tail call void (i8*, i8*, i32, i32, i8*, ...) %552(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 519, i32 noundef 1, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.131.593, i32 0, i32 0)) #18, !dbg !18480
  %553 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18482
  tail call void (i8*, i8*, i32, i32, i8*, ...) %553(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 525, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.140.602, i32 0, i32 0)) #18, !dbg !18482
  call void @llvm.dbg.value(metadata i32 0, metadata !2023, metadata !DIExpression()), !dbg !17916
  br label %554, !dbg !18484

554:                                              ; preds = %550, %558
  %555 = phi i32 [ 0, %550 ], [ %560, %558 ]
  call void @llvm.dbg.value(metadata i32 %555, metadata !2023, metadata !DIExpression()), !dbg !17916
  %556 = load %struct.mxml_node_s*, %struct.mxml_node_s** %71, align 8, !dbg !18486
  %557 = icmp eq %struct.mxml_node_s* %556, null, !dbg !18490
  br i1 %557, label %562, label %558, !dbg !18491

558:                                              ; preds = %554
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %556) #18, !dbg !18492
  %559 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18494
  %560 = add nuw nsw i32 %555, 1, !dbg !18494
  tail call void (i8*, i8*, i32, i32, i8*, ...) %559(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 530, i32 noundef 1, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.141.603, i32 0, i32 0), i32 noundef %560) #18, !dbg !18494
  call void @llvm.dbg.value(metadata i32 %560, metadata !2023, metadata !DIExpression()), !dbg !17916
  %561 = icmp eq i32 %560, 9, !dbg !18496
  br i1 %561, label %569, label %554, !dbg !18484, !llvm.loop !18497

562:                                              ; preds = %554
  %563 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18499
  %564 = getelementptr inbounds %struct._reent, %struct._reent* %563, i32 0, i32 3, !dbg !18499
  %565 = load %struct.__sFILE*, %struct.__sFILE** %564, align 4, !dbg !18499
  %566 = add nuw nsw i32 %555, 1, !dbg !18501
  %567 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %565, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.142.604, i32 0, i32 0), i32 noundef %566) #18, !dbg !18502
  %568 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18503
  tail call void (i8*, i8*, i32, i32, i8*, ...) %568(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 535, i32 noundef 1, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.143.605, i32 0, i32 0), i32 noundef %566) #18, !dbg !18503
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18505
  br label %753, !dbg !18506

569:                                              ; preds = %558
  %570 = load %struct.mxml_node_s*, %struct.mxml_node_s** %71, align 8, !dbg !18507
  %571 = icmp eq %struct.mxml_node_s* %570, null, !dbg !18509
  br i1 %571, label %578, label %572, !dbg !18510

572:                                              ; preds = %569
  %573 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18511
  %574 = getelementptr inbounds %struct._reent, %struct._reent* %573, i32 0, i32 3, !dbg !18511
  %575 = load %struct.__sFILE*, %struct.__sFILE** %574, align 4, !dbg !18511
  %576 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.144.606, i32 0, i32 0), %struct.__sFILE* noundef %575) #18, !dbg !18513
  %577 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18514
  tail call void (i8*, i8*, i32, i32, i8*, ...) %577(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 543, i32 noundef 1, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.145.607, i32 0, i32 0)) #18, !dbg !18514
  br label %753, !dbg !18516

578:                                              ; preds = %569
  %579 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %4, i32 0, i32 5, !dbg !18517
  %580 = load %struct.mxml_node_s*, %struct.mxml_node_s** %579, align 4, !dbg !18517
  %581 = icmp eq %struct.mxml_node_s* %580, null, !dbg !18519
  br i1 %581, label %588, label %582, !dbg !18520

582:                                              ; preds = %578
  %583 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18521
  %584 = getelementptr inbounds %struct._reent, %struct._reent* %583, i32 0, i32 3, !dbg !18521
  %585 = load %struct.__sFILE*, %struct.__sFILE** %584, align 4, !dbg !18521
  %586 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.146.608, i32 0, i32 0), %struct.__sFILE* noundef %585) #18, !dbg !18523
  %587 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18524
  tail call void (i8*, i8*, i32, i32, i8*, ...) %587(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 549, i32 noundef 1, i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.147.609, i32 0, i32 0)) #18, !dbg !18524
  br label %753, !dbg !18526

588:                                              ; preds = %578
  %589 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18527
  tail call void (i8*, i8*, i32, i32, i8*, ...) %589(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 552, i32 noundef 1, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.148.610, i32 0, i32 0)) #18, !dbg !18527
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %4) #18, !dbg !18529
  %590 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18530
  tail call void (i8*, i8*, i32, i32, i8*, ...) %590(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 556, i32 noundef 1, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.149.611, i32 0, i32 0)) #18, !dbg !18530
  %591 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18532
  tail call void (i8*, i8*, i32, i32, i8*, ...) %591(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 561, i32 noundef 1, i8* noundef getelementptr inbounds ([76 x i8], [76 x i8]* @.str.150.612, i32 0, i32 0)) #18, !dbg !18532
  %592 = getelementptr inbounds i8*, i8** %1, i32 1, !dbg !18534
  %593 = load i8*, i8** %592, align 4, !dbg !18534
  %594 = load i8, i8* %593, align 1, !dbg !18534
  %595 = icmp eq i8 %594, 60, !dbg !18536
  br i1 %595, label %596, label %605, !dbg !18537

596:                                              ; preds = %588
  %597 = tail call %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef null, i8* noundef nonnull %593, i32 (%struct.mxml_node_s*)* noundef null) #18, !dbg !18538
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %597, metadata !2024, metadata !DIExpression()), !dbg !17916
  %598 = icmp eq %struct.mxml_node_s* %597, null, !dbg !18540
  br i1 %598, label %599, label %605, !dbg !18542

599:                                              ; preds = %596
  %600 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18543
  %601 = getelementptr inbounds %struct._reent, %struct._reent* %600, i32 0, i32 3, !dbg !18543
  %602 = load %struct.__sFILE*, %struct.__sFILE** %601, align 4, !dbg !18543
  %603 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.151.613, i32 0, i32 0), %struct.__sFILE* noundef %602) #18, !dbg !18545
  %604 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18546
  tail call void (i8*, i8*, i32, i32, i8*, ...) %604(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 583, i32 noundef 1, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.152.614, i32 0, i32 0)) #18, !dbg !18546
  br label %753, !dbg !18548

605:                                              ; preds = %588, %596
  %606 = phi %struct.mxml_node_s* [ %597, %596 ], [ %4, %588 ]
  %607 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18549
  tail call void (i8*, i8*, i32, i32, i8*, ...) %607(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 586, i32 noundef 1, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.153.615, i32 0, i32 0)) #18, !dbg !18549
  %608 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18551
  tail call void (i8*, i8*, i32, i32, i8*, ...) %608(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 597, i32 noundef 1, i8* noundef getelementptr inbounds ([88 x i8], [88 x i8]* @.str.154.616, i32 0, i32 0)) #18, !dbg !18551
  %609 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18553
  tail call void (i8*, i8*, i32, i32, i8*, ...) %609(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 598, i32 noundef 1, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.155.617, i32 0, i32 0)) #18, !dbg !18553
  %610 = tail call %struct.mxml_node_s* @mxmlFindPath(%struct.mxml_node_s* noundef nonnull %606, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.156.618, i32 0, i32 0)) #18, !dbg !18555
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %610, metadata !2070, metadata !DIExpression()), !dbg !17916
  %611 = icmp eq %struct.mxml_node_s* %610, null, !dbg !18557
  br i1 %611, label %612, label %618, !dbg !18558

612:                                              ; preds = %605
  %613 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18559
  %614 = getelementptr inbounds %struct._reent, %struct._reent* %613, i32 0, i32 3, !dbg !18559
  %615 = load %struct.__sFILE*, %struct.__sFILE** %614, align 4, !dbg !18559
  %616 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.157.619, i32 0, i32 0), %struct.__sFILE* noundef %615) #18, !dbg !18561
  %617 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18562
  tail call void (i8*, i8*, i32, i32, i8*, ...) %617(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 602, i32 noundef 1, i8* noundef getelementptr inbounds ([83 x i8], [83 x i8]* @.str.158.620, i32 0, i32 0)) #18, !dbg !18562
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %606) #18, !dbg !18564
  br label %618, !dbg !18565

618:                                              ; preds = %612, %605
  %619 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %610, i32 0, i32 0, !dbg !18566
  %620 = load i32, i32* %619, align 8, !dbg !18566
  %621 = icmp eq i32 %620, 4, !dbg !18568
  br i1 %621, label %628, label %622, !dbg !18569

622:                                              ; preds = %618
  %623 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18570
  %624 = getelementptr inbounds %struct._reent, %struct._reent* %623, i32 0, i32 3, !dbg !18570
  %625 = load %struct.__sFILE*, %struct.__sFILE** %624, align 4, !dbg !18570
  %626 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.159.621, i32 0, i32 0), %struct.__sFILE* noundef %625) #18, !dbg !18572
  %627 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18573
  tail call void (i8*, i8*, i32, i32, i8*, ...) %627(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 609, i32 noundef 1, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.160.622, i32 0, i32 0)) #18, !dbg !18573
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %606) #18, !dbg !18575
  br label %628, !dbg !18576

628:                                              ; preds = %622, %618
  %629 = tail call i8* @mxmlGetText(%struct.mxml_node_s* noundef nonnull %610, i32* noundef null) #18, !dbg !18577
  call void @llvm.dbg.value(metadata i8* %629, metadata !2082, metadata !DIExpression()), !dbg !18579
  %630 = icmp eq i8* %629, null, !dbg !18580
  br i1 %630, label %634, label %631, !dbg !18581

631:                                              ; preds = %628
  %632 = tail call i32 @strcmp(i8* noundef nonnull %629, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161.623, i32 0, i32 0)) #18, !dbg !18582
  %633 = icmp eq i32 %632, 0, !dbg !18582
  br i1 %633, label %641, label %634, !dbg !18583

634:                                              ; preds = %631, %628
  %635 = phi i8* [ %629, %631 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49.510, i32 0, i32 0), %628 ], !dbg !18584
  %636 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18584
  %637 = getelementptr inbounds %struct._reent, %struct._reent* %636, i32 0, i32 3, !dbg !18584
  %638 = load %struct.__sFILE*, %struct.__sFILE** %637, align 4, !dbg !18584
  %639 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %638, i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.162.624, i32 0, i32 0), i8* noundef nonnull %635) #18, !dbg !18586
  %640 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18587
  tail call void (i8*, i8*, i32, i32, i8*, ...) %640(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 620, i32 noundef 1, i8* noundef getelementptr inbounds ([98 x i8], [98 x i8]* @.str.163.625, i32 0, i32 0), i8* noundef nonnull %635) #18, !dbg !18587
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %606) #18, !dbg !18589
  br label %641, !dbg !18590

641:                                              ; preds = %634, %631
  %642 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18591
  tail call void (i8*, i8*, i32, i32, i8*, ...) %642(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 627, i32 noundef 1, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.164.626, i32 0, i32 0)) #18, !dbg !18591
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %606) #18, !dbg !18593
  %643 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18594
  tail call void (i8*, i8*, i32, i32, i8*, ...) %643(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 630, i32 noundef 1, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.165.627, i32 0, i32 0)) #18, !dbg !18594
  %644 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18596
  tail call void (i8*, i8*, i32, i32, i8*, ...) %644(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 635, i32 noundef 1, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.166.628, i32 0, i32 0)) #18, !dbg !18596
  %645 = load i8*, i8** %592, align 4, !dbg !18598
  %646 = load i8, i8* %645, align 1, !dbg !18598
  %647 = icmp eq i8 %646, 60, !dbg !18600
  br i1 %647, label %648, label %657, !dbg !18601

648:                                              ; preds = %641
  %649 = tail call %struct.mxml_node_s* @mxmlLoadString(%struct.mxml_node_s* noundef null, i8* noundef nonnull %645, i32 (%struct.mxml_node_s*)* noundef nonnull @type_cb) #18, !dbg !18602
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %649, metadata !2024, metadata !DIExpression()), !dbg !17916
  %650 = icmp eq %struct.mxml_node_s* %649, null, !dbg !18604
  br i1 %650, label %651, label %657, !dbg !18606

651:                                              ; preds = %648
  %652 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18607
  %653 = getelementptr inbounds %struct._reent, %struct._reent* %652, i32 0, i32 3, !dbg !18607
  %654 = load %struct.__sFILE*, %struct.__sFILE** %653, align 4, !dbg !18607
  %655 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.167.629, i32 0, i32 0), %struct.__sFILE* noundef %654) #18, !dbg !18609
  %656 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18610
  tail call void (i8*, i8*, i32, i32, i8*, ...) %656(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 657, i32 noundef 1, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.168.630, i32 0, i32 0)) #18, !dbg !18610
  br label %753, !dbg !18612

657:                                              ; preds = %641, %648
  %658 = phi %struct.mxml_node_s* [ %649, %648 ], [ %606, %641 ]
  %659 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18613
  tail call void (i8*, i8*, i32, i32, i8*, ...) %659(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 660, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.169.631, i32 0, i32 0)) #18, !dbg !18613
  %660 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18615
  tail call void (i8*, i8*, i32, i32, i8*, ...) %660(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 669, i32 noundef 1, i8* noundef getelementptr inbounds ([91 x i8], [91 x i8]* @.str.170.632, i32 0, i32 0)) #18, !dbg !18615
  %661 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18618
  tail call void (i8*, i8*, i32, i32, i8*, ...) %661(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 670, i32 noundef 1, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.171.633, i32 0, i32 0)) #18, !dbg !18618
  %662 = tail call %struct.mxml_node_s* @mxmlFindElement(%struct.mxml_node_s* noundef nonnull %658, %struct.mxml_node_s* noundef nonnull %658, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172.634, i32 0, i32 0), i8* noundef null, i8* noundef null, i32 noundef 1) #18, !dbg !18620
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %662, metadata !2070, metadata !DIExpression()), !dbg !17916
  %663 = icmp eq %struct.mxml_node_s* %662, null, !dbg !18622
  br i1 %663, label %664, label %670, !dbg !18623

664:                                              ; preds = %657
  %665 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18624
  %666 = getelementptr inbounds %struct._reent, %struct._reent* %665, i32 0, i32 3, !dbg !18624
  %667 = load %struct.__sFILE*, %struct.__sFILE** %666, align 4, !dbg !18624
  %668 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.173.635, i32 0, i32 0), %struct.__sFILE* noundef %667) #18, !dbg !18626
  %669 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18627
  tail call void (i8*, i8*, i32, i32, i8*, ...) %669(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 675, i32 noundef 1, i8* noundef getelementptr inbounds ([81 x i8], [81 x i8]* @.str.174.636, i32 0, i32 0)) #18, !dbg !18627
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %658) #18, !dbg !18629
  br label %670, !dbg !18630

670:                                              ; preds = %664, %657
  %671 = tail call %struct.mxml_node_s* @mxmlFindElement(%struct.mxml_node_s* noundef %662, %struct.mxml_node_s* noundef nonnull %658, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172.634, i32 0, i32 0), i8* noundef null, i8* noundef null, i32 noundef 0) #18, !dbg !18631
  %672 = icmp eq %struct.mxml_node_s* %671, null, !dbg !18631
  br i1 %672, label %673, label %679, !dbg !18633

673:                                              ; preds = %670
  %674 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18634
  %675 = getelementptr inbounds %struct._reent, %struct._reent* %674, i32 0, i32 3, !dbg !18634
  %676 = load %struct.__sFILE*, %struct.__sFILE** %675, align 4, !dbg !18634
  %677 = tail call i32 @fputs(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.175.637, i32 0, i32 0), %struct.__sFILE* noundef %676) #18, !dbg !18636
  %678 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18637
  tail call void (i8*, i8*, i32, i32, i8*, ...) %678(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 682, i32 noundef 1, i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.176.638, i32 0, i32 0)) #18, !dbg !18637
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %658) #18, !dbg !18639
  br label %679, !dbg !18640

679:                                              ; preds = %670, %673
  %680 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18641
  tail call void (i8*, i8*, i32, i32, i8*, ...) %680(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 687, i32 noundef 1, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.177.639, i32 0, i32 0)) #18, !dbg !18641
  tail call void @mxmlDelete(%struct.mxml_node_s* noundef nonnull %658) #18, !dbg !18643
  %681 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18644
  tail call void (i8*, i8*, i32, i32, i8*, ...) %681(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 715, i32 noundef 1, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.178.640, i32 0, i32 0)) #18, !dbg !18644
  %682 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18646
  tail call void (i8*, i8*, i32, i32, i8*, ...) %682(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 771, i32 noundef 1, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.179.641, i32 0, i32 0)) #18, !dbg !18646
  %683 = tail call i8* @memset(i8* noundef bitcast ([6 x i32]* @event_counts to i8*), i32 noundef 0, i32 noundef 24) #18, !dbg !18648
  %684 = load i8*, i8** %592, align 4, !dbg !18649
  %685 = load i8, i8* %684, align 1, !dbg !18649
  %686 = icmp eq i8 %685, 60, !dbg !18651
  br i1 %686, label %687, label %689, !dbg !18652

687:                                              ; preds = %679
  %688 = tail call %struct.mxml_node_s* @mxmlSAXLoadString(%struct.mxml_node_s* noundef null, i8* noundef nonnull %684, i32 (%struct.mxml_node_s*)* noundef nonnull @type_cb, void (%struct.mxml_node_s*, i32, i8*)* noundef nonnull @sax_cb, i8* noundef null) #18, !dbg !18653
  br label %689, !dbg !18655

689:                                              ; preds = %679, %687
  %690 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18656
  tail call void (i8*, i8*, i32, i32, i8*, ...) %690(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 793, i32 noundef 1, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.155.617, i32 0, i32 0)) #18, !dbg !18656
  %691 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 0), align 4, !dbg !18658
  %692 = icmp eq i32 %691, 1, !dbg !18661
  br i1 %692, label %700, label %693, !dbg !18662

693:                                              ; preds = %689
  %694 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18663
  %695 = getelementptr inbounds %struct._reent, %struct._reent* %694, i32 0, i32 3, !dbg !18663
  %696 = load %struct.__sFILE*, %struct.__sFILE** %695, align 4, !dbg !18663
  %697 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %696, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.180.642, i32 0, i32 0), i32 noundef %691) #18, !dbg !18665
  %698 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18666
  %699 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 0), align 4, !dbg !18666
  tail call void (i8*, i8*, i32, i32, i8*, ...) %698(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 801, i32 noundef 1, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.181.643, i32 0, i32 0), i32 noundef %699) #18, !dbg !18666
  br label %700, !dbg !18668

700:                                              ; preds = %693, %689
  %701 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 1), align 4, !dbg !18669
  %702 = icmp eq i32 %701, 1, !dbg !18671
  br i1 %702, label %710, label %703, !dbg !18672

703:                                              ; preds = %700
  %704 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18673
  %705 = getelementptr inbounds %struct._reent, %struct._reent* %704, i32 0, i32 3, !dbg !18673
  %706 = load %struct.__sFILE*, %struct.__sFILE** %705, align 4, !dbg !18673
  %707 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %706, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.182.644, i32 0, i32 0), i32 noundef %701) #18, !dbg !18675
  %708 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18676
  %709 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 1), align 4, !dbg !18676
  tail call void (i8*, i8*, i32, i32, i8*, ...) %708(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 809, i32 noundef 1, i8* noundef getelementptr inbounds ([76 x i8], [76 x i8]* @.str.183.645, i32 0, i32 0), i32 noundef %709) #18, !dbg !18676
  br label %710, !dbg !18678

710:                                              ; preds = %703, %700
  %711 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 2), align 4, !dbg !18679
  %712 = icmp eq i32 %711, 60, !dbg !18681
  br i1 %712, label %720, label %713, !dbg !18682

713:                                              ; preds = %710
  %714 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18683
  %715 = getelementptr inbounds %struct._reent, %struct._reent* %714, i32 0, i32 3, !dbg !18683
  %716 = load %struct.__sFILE*, %struct.__sFILE** %715, align 4, !dbg !18683
  %717 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %716, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.184.646, i32 0, i32 0), i32 noundef %711) #18, !dbg !18685
  %718 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18686
  %719 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 2), align 4, !dbg !18686
  tail call void (i8*, i8*, i32, i32, i8*, ...) %718(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 817, i32 noundef 1, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.185.647, i32 0, i32 0), i32 noundef %719) #18, !dbg !18686
  br label %720, !dbg !18688

720:                                              ; preds = %713, %710
  %721 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 3), align 4, !dbg !18689
  %722 = icmp eq i32 %721, 1, !dbg !18691
  br i1 %722, label %730, label %723, !dbg !18692

723:                                              ; preds = %720
  %724 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18693
  %725 = getelementptr inbounds %struct._reent, %struct._reent* %724, i32 0, i32 3, !dbg !18693
  %726 = load %struct.__sFILE*, %struct.__sFILE** %725, align 4, !dbg !18693
  %727 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %726, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.186.648, i32 0, i32 0), i32 noundef %721) #18, !dbg !18695
  %728 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18696
  %729 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 3), align 4, !dbg !18696
  tail call void (i8*, i8*, i32, i32, i8*, ...) %728(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 825, i32 noundef 1, i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.187.649, i32 0, i32 0), i32 noundef %729) #18, !dbg !18696
  br label %730, !dbg !18698

730:                                              ; preds = %723, %720
  %731 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 4), align 4, !dbg !18699
  %732 = icmp eq i32 %731, 20, !dbg !18701
  br i1 %732, label %740, label %733, !dbg !18702

733:                                              ; preds = %730
  %734 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18703
  %735 = getelementptr inbounds %struct._reent, %struct._reent* %734, i32 0, i32 3, !dbg !18703
  %736 = load %struct.__sFILE*, %struct.__sFILE** %735, align 4, !dbg !18703
  %737 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %736, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.188.650, i32 0, i32 0), i32 noundef %731) #18, !dbg !18705
  %738 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18706
  %739 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 4), align 4, !dbg !18706
  tail call void (i8*, i8*, i32, i32, i8*, ...) %738(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 833, i32 noundef 1, i8* noundef getelementptr inbounds ([83 x i8], [83 x i8]* @.str.189.651, i32 0, i32 0), i32 noundef %739) #18, !dbg !18706
  br label %740, !dbg !18708

740:                                              ; preds = %733, %730
  %741 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 5), align 4, !dbg !18709
  %742 = icmp eq i32 %741, 20, !dbg !18711
  br i1 %742, label %750, label %743, !dbg !18712

743:                                              ; preds = %740
  %744 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !18713
  %745 = getelementptr inbounds %struct._reent, %struct._reent* %744, i32 0, i32 3, !dbg !18713
  %746 = load %struct.__sFILE*, %struct.__sFILE** %745, align 4, !dbg !18713
  %747 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* noundef %746, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.190.652, i32 0, i32 0), i32 noundef %741) #18, !dbg !18715
  %748 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18716
  %749 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @event_counts, i32 0, i32 5), align 4, !dbg !18716
  tail call void (i8*, i8*, i32, i32, i8*, ...) %748(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 841, i32 noundef 1, i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.191.653, i32 0, i32 0), i32 noundef %749) #18, !dbg !18716
  br label %750, !dbg !18718

750:                                              ; preds = %740, %743
  %751 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18719
  tail call void (i8*, i8*, i32, i32, i8*, ...) %751(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 845, i32 noundef 1, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.192.654, i32 0, i32 0)) #18, !dbg !18719
  %752 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18721
  tail call void (i8*, i8*, i32, i32, i8*, ...) %752(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_main, i32 0, i32 0), i32 noundef 851, i32 noundef 1, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.193.655, i32 0, i32 0)) #18, !dbg !18721
  br label %753, !dbg !18723

753:                                              ; preds = %750, %651, %599, %582, %572, %562, %544, %532, %521, %510, %498, %487, %476, %463, %452, %441, %429, %418, %407, %390, %380, %363, %353, %336, %327, %296, %273, %255, %227, %215, %208, %180, %163, %150, %122, %110, %102, %74, %43, %34, %6
  %754 = phi i32 [ 1, %34 ], [ 1, %43 ], [ 1, %102 ], [ 1, %110 ], [ 1, %150 ], [ 1, %163 ], [ 1, %208 ], [ 1, %215 ], [ 1, %255 ], [ 1, %273 ], [ 1, %327 ], [ 1, %296 ], [ 1, %353 ], [ 1, %380 ], [ 1, %407 ], [ 1, %429 ], [ 1, %463 ], [ 1, %498 ], [ 1, %532 ], [ 1, %562 ], [ 1, %572 ], [ 1, %582 ], [ 0, %750 ], [ 1, %651 ], [ 1, %599 ], [ 1, %544 ], [ 1, %521 ], [ 1, %510 ], [ 1, %487 ], [ 1, %476 ], [ 1, %452 ], [ 1, %441 ], [ 1, %418 ], [ 1, %390 ], [ 1, %363 ], [ 1, %336 ], [ 1, %227 ], [ 1, %180 ], [ 1, %122 ], [ 1, %74 ], [ 1, %6 ], !dbg !17916
  ret i32 %754, !dbg !18724
}

; Function Attrs: optsize
declare dso_local i32 @fputs(i8* noundef, %struct.__sFILE* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @type_cb(%struct.mxml_node_s* noundef %0) #0 !dbg !18725 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* %0, metadata !18729, metadata !DIExpression()), !dbg !18731
  %2 = tail call i8* @mxmlElementGetAttr(%struct.mxml_node_s* noundef %0, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120.582, i32 0, i32 0)) #18, !dbg !18732
  call void @llvm.dbg.value(metadata i8* %2, metadata !18730, metadata !DIExpression()), !dbg !18731
  %3 = icmp eq i8* %2, null, !dbg !18734
  br i1 %3, label %4, label %8, !dbg !18735

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.mxml_node_s, %struct.mxml_node_s* %0, i32 0, i32 6, !dbg !18736
  %6 = bitcast %union.mxml_value_u* %5 to i8**, !dbg !18738
  %7 = load i8*, i8** %6, align 8, !dbg !18738
  call void @llvm.dbg.value(metadata i8* %7, metadata !18730, metadata !DIExpression()), !dbg !18731
  br label %8, !dbg !18739

8:                                                ; preds = %1, %4
  %9 = phi i8* [ %7, %4 ], [ %2, %1 ], !dbg !18740
  call void @llvm.dbg.value(metadata i8* %9, metadata !18730, metadata !DIExpression()), !dbg !18731
  %10 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18741
  tail call void (i8*, i8*, i32, i32, i8*, ...) %10(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @__FUNCTION__.type_cb, i32 0, i32 0), i32 noundef 892, i32 noundef 1, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.195.657, i32 0, i32 0), i8* noundef %9) #18, !dbg !18741
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.196.658, i32 0, i32 0)) #18, !dbg !18743
  %12 = icmp eq i32 %11, 0, !dbg !18743
  br i1 %12, label %23, label %13, !dbg !18745

13:                                               ; preds = %8
  %14 = tail call i32 @strcmp(i8* noundef %9, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.480, i32 0, i32 0)) #18, !dbg !18746
  %15 = icmp eq i32 %14, 0, !dbg !18746
  br i1 %15, label %23, label %16, !dbg !18748

16:                                               ; preds = %13
  %17 = tail call i32 @strcmp(i8* noundef %9, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197.659, i32 0, i32 0)) #18, !dbg !18749
  %18 = icmp eq i32 %17, 0, !dbg !18749
  br i1 %18, label %23, label %19, !dbg !18750

19:                                               ; preds = %16
  %20 = tail call i32 @strcmp(i8* noundef %9, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198.660, i32 0, i32 0)) #18, !dbg !18751
  %21 = icmp eq i32 %20, 0, !dbg !18751
  %22 = select i1 %21, i32 3, i32 4, !dbg !18753
  br label %23, !dbg !18753

23:                                               ; preds = %19, %13, %16, %8
  %24 = phi i32 [ 1, %8 ], [ 2, %16 ], [ 2, %13 ], [ %22, %19 ], !dbg !18754
  ret i32 %24, !dbg !18755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sax_cb(%struct.mxml_node_s* nocapture readnone %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !18756 {
  call void @llvm.dbg.value(metadata %struct.mxml_node_s* undef, metadata !18760, metadata !DIExpression()), !dbg !18763
  call void @llvm.dbg.value(metadata i32 %1, metadata !18761, metadata !DIExpression()), !dbg !18763
  call void @llvm.dbg.value(metadata i8* undef, metadata !18762, metadata !DIExpression()), !dbg !18763
  %4 = getelementptr inbounds [6 x i32], [6 x i32]* @event_counts, i32 0, i32 %1, !dbg !18764
  %5 = load i32, i32* %4, align 4, !dbg !18765
  %6 = add nsw i32 %5, 1, !dbg !18765
  store i32 %6, i32* %4, align 4, !dbg !18765
  %7 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18766
  tail call void (i8*, i8*, i32, i32, i8*, ...) %7(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @__FUNCTION__.sax_cb, i32 0, i32 0), i32 noundef 870, i32 noundef 1, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.194.656, i32 0, i32 0), i32 noundef %1, i32 noundef %6) #18, !dbg !18766
  ret void, !dbg !18768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xml_test() local_unnamed_addr #0 !dbg !18769 {
  %1 = alloca [2 x i8*], align 4
  %2 = bitcast [2 x i8*]* %1 to i8*, !dbg !18773
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #17, !dbg !18773
  call void @llvm.dbg.declare(metadata [2 x i8*]* %1, metadata !18771, metadata !DIExpression()), !dbg !18774
  %3 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i32 0, i32 0, !dbg !18775
  store i8* null, i8** %3, align 4, !dbg !18776
  %4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i32 0, i32 1, !dbg !18777
  store i8* getelementptr inbounds ([868 x i8], [868 x i8]* @test_xml, i32 0, i32 0), i8** %4, align 4, !dbg !18778
  call void @llvm.dbg.value(metadata i32 0, metadata !18772, metadata !DIExpression()), !dbg !18779
  %5 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_xml_example, i32 0, i32 3), align 4, !dbg !18780
  tail call void (i8*, i8*, i32, i32, i8*, ...) %5(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_xml_example to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.xml_test, i32 0, i32 0), i32 noundef 1002, i32 noundef 1, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.199.668, i32 0, i32 0), i8* noundef getelementptr inbounds ([868 x i8], [868 x i8]* @test_xml, i32 0, i32 0)) #18, !dbg !18780
  %6 = call i32 @xml_main(i32 undef, i8** noundef nonnull %3) #20, !dbg !18782
  call void @llvm.dbg.value(metadata i32 %6, metadata !18772, metadata !DIExpression()), !dbg !18779
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #17, !dbg !18783
  ret i32 %6, !dbg !18784
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { naked noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nounwind }
attributes #18 = { nobuiltin nounwind optsize "no-builtins" }
attributes #19 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #20 = { nobuiltin optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !83, !2122, !2132, !164, !183, !2177, !280, !292, !342, !379, !462, !515, !2180, !607, !646, !762, !812, !2184, !838, !2187, !985, !1048, !1113, !1136, !2213, !2224, !1170, !1274, !2226, !2228, !2230, !1395, !2232, !2234, !1400, !2236, !1584, !1714, !2239, !1736, !1750, !1999, !2093, !2010, !2108}
!llvm.ident = !{!2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244, !2244}
!llvm.module.flags = !{!2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2, file: !3, line: 74, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !50, globals: !63, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!4 = !{!5, !20, !28, !35, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!10 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!11 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!12 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!13 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!14 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!15 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!16 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!17 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!18 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!19 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 387, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!24 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!25 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!26 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!27 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 666, baseType: !30, size: 32, elements: !31)
!29 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!30 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!33 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!34 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 73, baseType: !30, size: 32, elements: !36)
!36 = !{!37, !38, !39, !40, !41, !42, !43}
!37 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!38 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!39 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!40 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!41 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!42 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!43 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 123, baseType: !30, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!48 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!49 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!50 = !{!51, !52, !59}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !54)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !55, line: 24, baseType: !56)
!55 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !57, line: 43, baseType: !58)
!57 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!58 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !55, line: 48, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !57, line: 79, baseType: !30)
!63 = !{!64, !0, !67, !70, !72, !74, !76, !78}
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !2, file: !3, line: 72, type: !66, isLocal: false, isDefinition: true)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !6, line: 64, baseType: !5)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2, file: !3, line: 75, type: !69, isLocal: false, isDefinition: true)
!69 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !2, file: !3, line: 77, type: !61, isLocal: false, isDefinition: true)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "suspend_time", scope: !2, file: !3, line: 82, type: !61, isLocal: false, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !2, file: !3, line: 83, type: !61, isLocal: false, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !2, file: !3, line: 84, type: !61, isLocal: false, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !2, file: !3, line: 78, type: !7, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !83, file: !84, line: 71, type: !158, isLocal: false, isDefinition: true)
!83 = distinct !DICompileUnit(language: DW_LANG_C99, file: !84, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !85, retainedTypes: !136, globals: !141, splitDebugInlining: false, nameTableKind: None)
!84 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!85 = !{!86, !91}
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 121, baseType: !30, size: 32, elements: !88)
!87 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!90 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !92, line: 47, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!94 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!95 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!96 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!97 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!98 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!99 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!100 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!101 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!102 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!103 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!104 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!105 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!106 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!107 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!108 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!109 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!110 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!111 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!112 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!113 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!114 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!115 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!116 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!117 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!118 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!119 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!120 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!121 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!122 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!123 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!124 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!125 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!126 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!127 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!128 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!129 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!130 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!131 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!132 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!133 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!134 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!135 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!136 = !{!137, !140}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !87, line: 116, baseType: !30)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !92, line: 95, baseType: !91)
!141 = !{!81, !142}
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !83, file: !84, line: 67, type: !144, isLocal: true, isDefinition: true)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !145, line: 111, baseType: !146)
!145 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 109, size: 96, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !146, file: !145, line: 110, baseType: !149, size: 96)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !145, line: 106, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 102, size: 96, elements: !151)
!151 = !{!152, !156, !157}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !150, file: !145, line: 103, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DISubroutineType(types: !155)
!155 = !{null}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !150, file: !145, line: 104, baseType: !153, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !150, file: !145, line: 105, baseType: !153, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !87, line: 62, baseType: !30)
!160 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!161 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !164, file: !165, line: 58, type: !30, isLocal: false, isDefinition: true)
!164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !166, retainedTypes: !173, globals: !180, splitDebugInlining: false, nameTableKind: None)
!165 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!166 = !{!167}
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 45, baseType: !30, size: 32, elements: !168)
!168 = !{!169, !170, !171, !172}
!169 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!170 = !DIEnumerator(name: "SPI", value: 1)
!171 = !DIEnumerator(name: "SPIQ", value: 2)
!172 = !DIEnumerator(name: "QPI", value: 3)
!173 = !{!137, !174, !30, !175, !177, !178}
!174 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !30)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !58)
!180 = !{!162}
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !183, file: !184, line: 67, type: !30, isLocal: false, isDefinition: true)
!183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !185, retainedTypes: !192, globals: !211, splitDebugInlining: false, nameTableKind: None)
!184 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!185 = !{!35, !5, !167, !186}
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 66, baseType: !7, size: 32, elements: !187)
!187 = !{!188, !189, !190, !191}
!188 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!189 = !DIEnumerator(name: "FLASH_READY", value: 0)
!190 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!191 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!192 = !{!193, !195, !196, !30, !51, !210, !61, !139}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!195 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !6, line: 137, size: 192, elements: !199)
!199 = !{!200, !203, !204, !205, !206, !207, !208, !209}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !198, file: !6, line: 138, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!202 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !198, file: !6, line: 139, baseType: !58, size: 8, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !198, file: !6, line: 140, baseType: !195, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !198, file: !6, line: 141, baseType: !195, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !198, file: !6, line: 142, baseType: !30, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !198, file: !6, line: 144, baseType: !58, size: 8, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !198, file: !6, line: 145, baseType: !58, size: 8, offset: 168)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !198, file: !6, line: 146, baseType: !58, size: 8, offset: 176)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 32)
!211 = !{!181, !212, !217, !222, !227, !230, !232, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !264, !266, !268, !270, !273}
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !183, file: !184, line: 70, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 96, elements: !215)
!215 = !{!216}
!216 = !DISubrange(count: 12)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !183, file: !184, line: 73, type: !219, isLocal: false, isDefinition: true)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 32, elements: !220)
!220 = !{!221}
!221 = !DISubrange(count: 4)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !183, file: !184, line: 76, type: !224, isLocal: false, isDefinition: true)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 72, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 9)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !183, file: !184, line: 79, type: !229, isLocal: false, isDefinition: true)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32, elements: !220)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !183, file: !184, line: 82, type: !229, isLocal: false, isDefinition: true)
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !183, file: !184, line: 87, type: !234, isLocal: false, isDefinition: true)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, elements: !235)
!235 = !{!236}
!236 = !DISubrange(count: 8)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !183, file: !184, line: 91, type: !234, isLocal: false, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !183, file: !184, line: 95, type: !234, isLocal: false, isDefinition: true)
!241 = !DIGlobalVariableExpression(var: !242, expr: !DIExpression())
!242 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !183, file: !184, line: 100, type: !224, isLocal: false, isDefinition: true)
!243 = !DIGlobalVariableExpression(var: !244, expr: !DIExpression())
!244 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !183, file: !184, line: 104, type: !224, isLocal: false, isDefinition: true)
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !183, file: !184, line: 108, type: !224, isLocal: false, isDefinition: true)
!247 = !DIGlobalVariableExpression(var: !248, expr: !DIExpression())
!248 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !183, file: !184, line: 112, type: !234, isLocal: false, isDefinition: true)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !183, file: !184, line: 115, type: !234, isLocal: false, isDefinition: true)
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !183, file: !184, line: 119, type: !234, isLocal: false, isDefinition: true)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !183, file: !184, line: 123, type: !234, isLocal: false, isDefinition: true)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !183, file: !184, line: 126, type: !234, isLocal: false, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !183, file: !184, line: 130, type: !234, isLocal: false, isDefinition: true)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !183, file: !184, line: 135, type: !261, isLocal: false, isDefinition: true)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 56, elements: !262)
!262 = !{!263}
!263 = !DISubrange(count: 7)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !183, file: !184, line: 138, type: !261, isLocal: false, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !183, file: !184, line: 142, type: !196, isLocal: false, isDefinition: true)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !183, file: !184, line: 161, type: !7, isLocal: false, isDefinition: true)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !183, file: !184, line: 162, type: !272, isLocal: false, isDefinition: true)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !6, line: 81, baseType: !35)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "chips_data", scope: !183, file: !184, line: 144, type: !275, isLocal: true, isDefinition: true)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 2496, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 13)
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !280, file: !281, line: 43, type: !61, isLocal: true, isDefinition: true)
!280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !281, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !282, globals: !287, splitDebugInlining: false, nameTableKind: None)
!281 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!282 = !{!175, !159, !59, !283, !284, !286}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !87, line: 133, baseType: !30)
!287 = !{!278, !288}
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !280, file: !281, line: 44, type: !61, isLocal: true, isDefinition: true)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !292, file: !293, line: 54, type: !61, isLocal: false, isDefinition: true)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !294, retainedTypes: !318, globals: !326, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!294 = !{!91, !295, !301}
!295 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !296, line: 71, baseType: !30, size: 32, elements: !297)
!296 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!297 = !{!298, !299, !300}
!298 = !DIEnumerator(name: "UART_PORT0", value: 0)
!299 = !DIEnumerator(name: "UART_PORT1", value: 1)
!300 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!301 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !302, line: 129, baseType: !30, size: 32, elements: !303)
!302 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!303 = !{!304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!304 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!305 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!306 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!307 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!308 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!309 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!310 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!311 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!312 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!313 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!314 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!315 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!316 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!317 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!318 = !{!175, !61, !319, !321, !323, !324, !159}
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !87, line: 113, baseType: !322)
!322 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !87, line: 59, baseType: !58)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !323)
!326 = !{!327, !335, !290}
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !292, file: !293, line: 57, type: !329, isLocal: false, isDefinition: true)
!329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !330, size: 64, elements: !333)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!333 = !{!334}
!334 = !DISubrange(count: 2)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !292, file: !293, line: 58, type: !337, isLocal: false, isDefinition: true)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 64, elements: !333)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !92, line: 97, baseType: !140)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "log_control_block_hal", scope: !342, file: !343, line: 127, type: !357, isLocal: false, isDefinition: true)
!342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !344, globals: !356, splitDebugInlining: false, nameTableKind: None)
!343 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!344 = !{!345, !350}
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !346, line: 65, baseType: !30, size: 32, elements: !347)
!346 = !DIFile(filename: "../../../../../kernel/service/inc/syslog.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!347 = !{!348, !349}
!348 = !DIEnumerator(name: "DEBUG_LOG_ON", value: 0)
!349 = !DIEnumerator(name: "DEBUG_LOG_OFF", value: 1)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !346, line: 74, baseType: !30, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355}
!352 = !DIEnumerator(name: "PRINT_LEVEL_DEBUG", value: 0)
!353 = !DIEnumerator(name: "PRINT_LEVEL_INFO", value: 1)
!354 = !DIEnumerator(name: "PRINT_LEVEL_WARNING", value: 2)
!355 = !DIEnumerator(name: "PRINT_LEVEL_ERROR", value: 3)
!356 = !{!340}
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !359)
!359 = !{!360, !361, !363, !365, !370}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !358, file: !346, line: 90, baseType: !331, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !358, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_switch_t", file: !346, line: 68, baseType: !345)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !358, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "print_level_t", file: !346, line: 79, baseType: !350)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !358, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_print_t", file: !346, line: 82, baseType: !367)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DISubroutineType(types: !369)
!369 = !{null, !51, !331, !7, !364, !331, null}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !358, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_dump_buffer_t", file: !346, line: 83, baseType: !372)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!373 = !DISubroutineType(types: !374)
!374 = !{null, !51, !331, !7, !364, !375, !7, !331, null}
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !379, file: !380, line: 51, type: !459, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !381, retainedTypes: !428, globals: !458, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!381 = !{!382, !393, !412, !419}
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 163, baseType: !7, size: 32, elements: !384)
!383 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!384 = !{!385, !386, !387, !388, !389, !390, !391, !392}
!385 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!386 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!387 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!388 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!389 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!390 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!391 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!392 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!393 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 186, baseType: !30, size: 32, elements: !394)
!394 = !{!395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411}
!395 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!396 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!397 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!398 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!399 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!400 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!401 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!402 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!403 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!404 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!405 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!406 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!407 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!408 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!409 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!410 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!411 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 176, baseType: !30, size: 32, elements: !413)
!413 = !{!414, !415, !416, !417, !418}
!414 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!415 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!416 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!417 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!418 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!419 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !420, line: 99, baseType: !30, size: 32, elements: !421)
!420 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!421 = !{!422, !423, !424, !425, !426, !427}
!422 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!423 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!424 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!425 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!426 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!427 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!428 = !{!429, !51}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !431, line: 72, baseType: !432)
!431 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !431, line: 56, size: 525312, elements: !433)
!433 = !{!434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !448, !449, !453, !457}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !432, file: !431, line: 57, baseType: !60, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !432, file: !431, line: 58, baseType: !60, size: 32, offset: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !432, file: !431, line: 59, baseType: !60, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !432, file: !431, line: 60, baseType: !60, size: 32, offset: 96)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !432, file: !431, line: 61, baseType: !60, size: 32, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !432, file: !431, line: 62, baseType: !60, size: 32, offset: 160)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !432, file: !431, line: 63, baseType: !60, size: 32, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !432, file: !431, line: 64, baseType: !60, size: 32, offset: 224)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !432, file: !431, line: 65, baseType: !60, size: 32, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !432, file: !431, line: 66, baseType: !60, size: 32, offset: 288)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !432, file: !431, line: 67, baseType: !445, size: 32, offset: 320)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 1)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !432, file: !431, line: 68, baseType: !60, size: 32, offset: 352)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !432, file: !431, line: 69, baseType: !450, size: 523904, offset: 384)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !451)
!451 = !{!452}
!452 = !DISubrange(count: 16372)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !432, file: !431, line: 70, baseType: !454, size: 512, offset: 524288)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !455)
!455 = !{!456}
!456 = !DISubrange(count: 16)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !432, file: !431, line: 71, baseType: !454, size: 512, offset: 524800)
!458 = !{!377}
!459 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !69)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !462, file: !463, line: 48, type: !497, isLocal: false, isDefinition: true)
!462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !463, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !464, splitDebugInlining: false, nameTableKind: None)
!463 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!464 = !{!460, !465, !468}
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !462, file: !463, line: 49, type: !467, isLocal: false, isDefinition: true)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !420, line: 66, baseType: !61)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !462, file: !463, line: 50, type: !470, isLocal: false, isDefinition: true)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 1024, elements: !455)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !420, line: 90, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !420, line: 87, size: 64, elements: !473)
!473 = !{!474, !487}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !472, file: !420, line: 88, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !420, line: 77, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 68, size: 32, elements: !477)
!477 = !{!478, !486}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !476, file: !420, line: 75, baseType: !479, size: 32)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !476, file: !420, line: 69, size: 32, elements: !480)
!480 = !{!481, !482, !483, !484, !485}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !479, file: !420, line: 70, baseType: !61, size: 5, flags: DIFlagBitField, extraData: i64 0)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !479, file: !420, line: 71, baseType: !61, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !479, file: !420, line: 72, baseType: !61, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !479, file: !420, line: 73, baseType: !61, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !479, file: !420, line: 74, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !476, file: !420, line: 76, baseType: !61, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !472, file: !420, line: 89, baseType: !488, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !420, line: 85, baseType: !489)
!489 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 79, size: 32, elements: !490)
!490 = !{!491, !496}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !489, file: !420, line: 83, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !420, line: 80, size: 32, elements: !493)
!493 = !{!494, !495}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !492, file: !420, line: 81, baseType: !61, size: 12, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !492, file: !420, line: 82, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !489, file: !420, line: 84, baseType: !61, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !420, line: 64, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 51, size: 32, elements: !499)
!499 = !{!500, !512}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !498, file: !420, line: 62, baseType: !501, size: 32)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !498, file: !420, line: 52, size: 32, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !509, !510, !511}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !501, file: !420, line: 53, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !501, file: !420, line: 54, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !501, file: !420, line: 55, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !501, file: !420, line: 56, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !501, file: !420, line: 57, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !501, file: !420, line: 58, baseType: !61, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !501, file: !420, line: 59, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !501, file: !420, line: 60, baseType: !61, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !501, file: !420, line: 61, baseType: !61, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !498, file: !420, line: 63, baseType: !61, size: 32)
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !515, file: !516, line: 53, type: !594, isLocal: false, isDefinition: true)
!515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !517, retainedTypes: !526, globals: !593, splitDebugInlining: false, nameTableKind: None)
!516 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!517 = !{!518, !91}
!518 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !519, line: 152, baseType: !7, size: 32, elements: !520)
!519 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!520 = !{!521, !522, !523, !524, !525}
!521 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!522 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!523 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!524 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!525 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!526 = !{!339, !51, !61, !527, !529, !560}
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !55, line: 44, baseType: !528)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !57, line: 77, baseType: !7)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !531, line: 378, baseType: !532)
!531 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 363, size: 28704, elements: !533)
!533 = !{!534, !536, !540, !541, !542, !543, !544, !545, !546, !547, !551, !555, !559}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !532, file: !531, line: 365, baseType: !535, size: 256)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !235)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !532, file: !531, line: 366, baseType: !537, size: 768, offset: 256)
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !538)
!538 = !{!539}
!539 = !DISubrange(count: 24)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !532, file: !531, line: 367, baseType: !535, size: 256, offset: 1024)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !532, file: !531, line: 368, baseType: !537, size: 768, offset: 1280)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !532, file: !531, line: 369, baseType: !535, size: 256, offset: 2048)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !532, file: !531, line: 370, baseType: !537, size: 768, offset: 2304)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !532, file: !531, line: 371, baseType: !535, size: 256, offset: 3072)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !532, file: !531, line: 372, baseType: !537, size: 768, offset: 3328)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !532, file: !531, line: 373, baseType: !535, size: 256, offset: 4096)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !532, file: !531, line: 374, baseType: !548, size: 1792, offset: 4352)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !549)
!549 = !{!550}
!550 = !DISubrange(count: 56)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !532, file: !531, line: 375, baseType: !552, size: 1920, offset: 6144)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1920, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 240)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !532, file: !531, line: 376, baseType: !556, size: 20608, offset: 8064)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 644)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !532, file: !531, line: 377, baseType: !60, size: 32, offset: 28672)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !563)
!563 = !{!564, !566, !567, !568, !569, !570, !571, !573, !574, !575, !576, !577, !578, !579, !580, !582, !583, !584, !586, !590, !592}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !562, file: !531, line: 397, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !562, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !562, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !562, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !562, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !562, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !562, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 96, elements: !215)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !562, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !562, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !562, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !562, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !562, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !562, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !562, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !562, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 64, elements: !333)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !562, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !562, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !562, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 128, elements: !220)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !562, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 160, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 5)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !562, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !588)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !562, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!593 = !{!513}
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 6144, elements: !603)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !516, line: 50, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !516, line: 47, size: 64, elements: !597)
!597 = !{!598, !602}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !596, file: !516, line: 48, baseType: !599, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DISubroutineType(types: !601)
!601 = !{null, !339}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !596, file: !516, line: 49, baseType: !61, size: 32, offset: 32)
!603 = !{!604}
!604 = !DISubrange(count: 96)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !607, file: !608, line: 61, type: !627, isLocal: true, isDefinition: true)
!607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !609, retainedTypes: !625, globals: !626, splitDebugInlining: false, nameTableKind: None)
!608 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!609 = !{!20, !610, !617, !28, !621}
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 657, baseType: !30, size: 32, elements: !611)
!611 = !{!612, !613, !614, !615, !616}
!612 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!613 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!614 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!615 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!616 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 397, baseType: !30, size: 32, elements: !618)
!618 = !{!619, !620}
!619 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!620 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 380, baseType: !30, size: 32, elements: !622)
!622 = !{!623, !624}
!623 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!624 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!625 = !{!51, !61}
!626 = !{!605}
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 640, elements: !588)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !608, line: 55, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 51, size: 128, elements: !630)
!630 = !{!631, !633, !643}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !629, file: !608, line: 52, baseType: !632, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !21, line: 400, baseType: !617)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !629, file: !608, line: 53, baseType: !634, size: 64, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !608, line: 49, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 46, size: 64, elements: !636)
!636 = !{!637, !642}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !635, file: !608, line: 47, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !21, line: 371, baseType: !639)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DISubroutineType(types: !641)
!641 = !{null, !51}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !635, file: !608, line: 48, baseType: !51, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !629, file: !608, line: 54, baseType: !69, size: 8, offset: 96)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !646, file: !647, line: 80, type: !748, isLocal: true, isDefinition: true)
!646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !648, retainedTypes: !698, globals: !699, splitDebugInlining: false, nameTableKind: None)
!647 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!648 = !{!295, !649, !657, !662, !678, !684, !688, !301, !693}
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 345, baseType: !7, size: 32, elements: !651)
!650 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!651 = !{!652, !653, !654, !655, !656}
!652 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!653 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!654 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!655 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!656 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 109, baseType: !30, size: 32, elements: !658)
!658 = !{!659, !660, !661}
!659 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!660 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!661 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!662 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 302, baseType: !30, size: 32, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677}
!664 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!665 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!666 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!667 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!668 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!669 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!670 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!671 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!672 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!673 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!674 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!675 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!676 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!677 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!678 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 321, baseType: !30, size: 32, elements: !679)
!679 = !{!680, !681, !682, !683}
!680 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!681 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!682 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!683 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 330, baseType: !30, size: 32, elements: !685)
!685 = !{!686, !687}
!686 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!687 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 337, baseType: !30, size: 32, elements: !689)
!689 = !{!690, !691, !692}
!690 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!691 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!692 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 355, baseType: !7, size: 32, elements: !694)
!694 = !{!695, !696, !697}
!695 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!696 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!698 = !{!201, !30, !51, !58, !202, !54}
!699 = !{!700, !743, !644, !746, !749}
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !646, file: !647, line: 77, type: !702, isLocal: true, isDefinition: true)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 1024, elements: !333)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !647, line: 75, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !647, line: 68, size: 512, elements: !705)
!705 = !{!706, !707, !719, !720, !731, !732}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !704, file: !647, line: 69, baseType: !69, size: 8)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !704, file: !647, line: 70, baseType: !708, size: 128, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !650, line: 378, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 373, size: 128, elements: !710)
!710 = !{!711, !713, !715, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !709, file: !650, line: 374, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !650, line: 317, baseType: !662)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !709, file: !650, line: 375, baseType: !714, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !650, line: 326, baseType: !678)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !709, file: !650, line: 376, baseType: !716, size: 32, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !650, line: 333, baseType: !684)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !709, file: !650, line: 377, baseType: !718, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !650, line: 341, baseType: !688)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !704, file: !647, line: 71, baseType: !69, size: 8, offset: 160)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !704, file: !647, line: 72, baseType: !721, size: 64, offset: 192)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !647, line: 66, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !647, line: 63, size: 64, elements: !723)
!723 = !{!724, !730}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !722, file: !647, line: 64, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !650, line: 410, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !729, !51}
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !650, line: 359, baseType: !693)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !722, file: !647, line: 65, baseType: !51, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !704, file: !647, line: 73, baseType: !69, size: 8, offset: 256)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !704, file: !647, line: 74, baseType: !733, size: 224, offset: 288)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !650, line: 390, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 382, size: 224, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !734, file: !650, line: 383, baseType: !210, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !734, file: !650, line: 384, baseType: !61, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !734, file: !650, line: 385, baseType: !61, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !734, file: !650, line: 386, baseType: !210, size: 32, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !734, file: !650, line: 387, baseType: !61, size: 32, offset: 128)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !734, file: !650, line: 388, baseType: !61, size: 32, offset: 160)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !734, file: !650, line: 389, baseType: !61, size: 32, offset: 192)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !646, file: !647, line: 82, type: !745, isLocal: true, isDefinition: true)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 16, elements: !333)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !646, file: !647, line: 81, type: !748, isLocal: true, isDefinition: true)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 16, elements: !333)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "func_tbl", scope: !751, file: !647, line: 536, type: !758, isLocal: true, isDefinition: true)
!751 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !647, file: !647, line: 534, type: !752, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !756)
!752 = !DISubroutineType(types: !753)
!753 = !{!754, !755}
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !302, line: 197, baseType: !153)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !29, line: 113, baseType: !657)
!756 = !{!757}
!757 = !DILocalVariable(name: "uart_port", arg: 1, scope: !751, file: !647, line: 534, type: !755)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 64, elements: !333)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "DWT_NUMCOMP", scope: !762, file: !763, line: 44, type: !7, isLocal: true, isDefinition: true)
!762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !764, retainedTypes: !773, globals: !809, splitDebugInlining: false, nameTableKind: None)
!763 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_dwt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!764 = !{!765}
!765 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !766, line: 42, baseType: !30, size: 32, elements: !767)
!766 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_dwt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!767 = !{!768, !769, !770, !771, !772}
!768 = !DIEnumerator(name: "COMP_DISABLE", value: 0)
!769 = !DIEnumerator(name: "WDE_INST", value: 4)
!770 = !DIEnumerator(name: "WDE_DATA_RO", value: 5)
!771 = !DIEnumerator(name: "WDE_DATA_WO", value: 6)
!772 = !DIEnumerator(name: "WDE_DATA_RW", value: 7)
!773 = !{!774, !801}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !531, line: 826, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 801, size: 736, elements: !777)
!777 = !{!778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !776, file: !531, line: 803, baseType: !60, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !776, file: !531, line: 804, baseType: !60, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !776, file: !531, line: 805, baseType: !60, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !776, file: !531, line: 806, baseType: !60, size: 32, offset: 96)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !776, file: !531, line: 807, baseType: !60, size: 32, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !776, file: !531, line: 808, baseType: !60, size: 32, offset: 160)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !776, file: !531, line: 809, baseType: !60, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !776, file: !531, line: 810, baseType: !565, size: 32, offset: 224)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !776, file: !531, line: 811, baseType: !60, size: 32, offset: 256)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !776, file: !531, line: 812, baseType: !60, size: 32, offset: 288)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !776, file: !531, line: 813, baseType: !60, size: 32, offset: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !776, file: !531, line: 814, baseType: !445, size: 32, offset: 352)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !776, file: !531, line: 815, baseType: !60, size: 32, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !776, file: !531, line: 816, baseType: !60, size: 32, offset: 416)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !776, file: !531, line: 817, baseType: !60, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !776, file: !531, line: 818, baseType: !445, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !776, file: !531, line: 819, baseType: !60, size: 32, offset: 512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !776, file: !531, line: 820, baseType: !60, size: 32, offset: 544)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !776, file: !531, line: 821, baseType: !60, size: 32, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !776, file: !531, line: 822, baseType: !445, size: 32, offset: 608)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !776, file: !531, line: 823, baseType: !60, size: 32, offset: 640)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !776, file: !531, line: 824, baseType: !60, size: 32, offset: 672)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !776, file: !531, line: 825, baseType: !60, size: 32, offset: 704)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoreDebug_Type", file: !531, line: 1304, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 1298, size: 128, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "DHCSR", scope: !803, file: !531, line: 1300, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DCRSR", scope: !803, file: !531, line: 1301, baseType: !60, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "DCRDR", scope: !803, file: !531, line: 1302, baseType: !60, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "DEMCR", scope: !803, file: !531, line: 1303, baseType: !60, size: 32, offset: 96)
!809 = !{!760}
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !812, file: !813, line: 164, type: !214, isLocal: false, isDefinition: true)
!812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !814, globals: !829, splitDebugInlining: false, nameTableKind: None)
!813 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!814 = !{!815, !51}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !818, line: 48, baseType: !819)
!818 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !818, line: 38, size: 192, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !827, !828}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !819, file: !818, line: 39, baseType: !201, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !819, file: !818, line: 40, baseType: !58, size: 8, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !819, file: !818, line: 41, baseType: !195, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !819, file: !818, line: 42, baseType: !195, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !819, file: !818, line: 43, baseType: !30, size: 32, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !819, file: !818, line: 45, baseType: !58, size: 8, offset: 160)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !819, file: !818, line: 46, baseType: !58, size: 8, offset: 168)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !819, file: !818, line: 47, baseType: !58, size: 8, offset: 176)
!829 = !{!810, !830, !832, !834}
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !812, file: !813, line: 167, type: !219, isLocal: false, isDefinition: true)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !812, file: !813, line: 170, type: !224, isLocal: false, isDefinition: true)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !812, file: !813, line: 174, type: !816, isLocal: false, isDefinition: true)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !838, file: !839, line: 208, type: !982, isLocal: false, isDefinition: true)
!838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !840, retainedTypes: !861, globals: !923, splitDebugInlining: false, nameTableKind: None)
!839 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!840 = !{!841, !846, !854}
!841 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !839, line: 122, baseType: !30, size: 32, elements: !842)
!842 = !{!843, !844, !845}
!843 = !DIEnumerator(name: "eNotWaitingNotification", value: 0)
!844 = !DIEnumerator(name: "eWaitingNotification", value: 1)
!845 = !DIEnumerator(name: "eNotified", value: 2)
!846 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !847, line: 112, baseType: !30, size: 32, elements: !848)
!847 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!848 = !{!849, !850, !851, !852, !853}
!849 = !DIEnumerator(name: "eRunning", value: 0)
!850 = !DIEnumerator(name: "eReady", value: 1)
!851 = !DIEnumerator(name: "eBlocked", value: 2)
!852 = !DIEnumerator(name: "eSuspended", value: 3)
!853 = !DIEnumerator(name: "eDeleted", value: 4)
!854 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !847, line: 122, baseType: !30, size: 32, elements: !855)
!855 = !{!856, !857, !858, !859, !860}
!856 = !DIEnumerator(name: "eNoAction", value: 0)
!857 = !DIEnumerator(name: "eSetBits", value: 1)
!858 = !DIEnumerator(name: "eIncrement", value: 2)
!859 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!860 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!861 = !{!862, !51, !864, !866, !61, !868, !869, !59, !870, !884, !905, !322, !210, !30, !919, !7, !331, !54}
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !863, line: 99, baseType: !195)
!863 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !55, line: 36, baseType: !865)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !57, line: 57, baseType: !322)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !863, line: 97, baseType: !61)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !847, line: 103, baseType: !51)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !863, line: 98, baseType: !174)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !839, line: 195, baseType: !872)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !839, line: 191, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !839, line: 134, size: 672, elements: !874)
!874 = !{!875, !878, !890, !891, !892, !893, !897, !898, !899, !900, !901, !902}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !873, file: !839, line: 136, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !867)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "xGenericListItem", scope: !873, file: !839, line: 143, baseType: !879, size: 160, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !881)
!880 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !882)
!882 = !{!883, !885, !887, !888, !889}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !881, file: !880, line: 184, baseType: !884, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !863, line: 105, baseType: !61)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !881, file: !880, line: 185, baseType: !886, size: 32, offset: 32)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !881, file: !880, line: 186, baseType: !886, size: 32, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !881, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !881, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !873, file: !839, line: 144, baseType: !879, size: 160, offset: 192)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !873, file: !839, line: 145, baseType: !862, size: 32, offset: 352)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !873, file: !839, line: 146, baseType: !866, size: 32, offset: 384)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !873, file: !839, line: 147, baseType: !894, size: 48, offset: 416)
!894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 48, elements: !895)
!895 = !{!896}
!896 = !DISubrange(count: 6)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "uxTCBNumber", scope: !873, file: !839, line: 158, baseType: !862, size: 32, offset: 480)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "uxTaskNumber", scope: !873, file: !839, line: 159, baseType: !862, size: 32, offset: 512)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !873, file: !839, line: 163, baseType: !862, size: 32, offset: 544)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "uxMutexesHeld", scope: !873, file: !839, line: 164, baseType: !862, size: 32, offset: 576)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !873, file: !839, line: 187, baseType: !60, size: 32, offset: 608)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "eNotifyState", scope: !873, file: !839, line: 188, baseType: !903, size: 32, offset: 640)
!903 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !904)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyValue", file: !839, line: 127, baseType: !841)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !907)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !908)
!908 = !{!909, !910, !912}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !907, file: !880, line: 208, baseType: !862, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !907, file: !880, line: 209, baseType: !911, size: 32, offset: 32)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !907, file: !880, line: 210, baseType: !913, size: 96, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !915)
!915 = !{!916, !917, !918}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !914, file: !880, line: 196, baseType: !884, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !914, file: !880, line: 197, baseType: !886, size: 32, offset: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !914, file: !880, line: 198, baseType: !886, size: 32, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !920, line: 40, baseType: !921)
!920 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration")
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !922, line: 131, baseType: !30)
!922 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!923 = !{!836, !924, !939, !942, !945, !947, !949, !951, !953, !956, !959, !961, !963, !965, !967, !970, !972, !974, !976, !978, !980}
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "ucExpectedStackBytes", scope: !926, file: !839, line: 2240, type: !935, isLocal: true, isDefinition: true)
!926 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !839, file: !839, line: 2198, type: !154, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !927)
!927 = !{!928, !932}
!928 = !DILocalVariable(name: "uxTopPriority", scope: !929, file: !839, line: 2244, type: !862)
!929 = distinct !DILexicalBlock(scope: !930, file: !839, line: 2244, column: 3)
!930 = distinct !DILexicalBlock(scope: !931, file: !839, line: 2207, column: 2)
!931 = distinct !DILexicalBlock(scope: !926, file: !839, line: 2200, column: 6)
!932 = !DILocalVariable(name: "pxConstList", scope: !933, file: !839, line: 2244, type: !934)
!933 = distinct !DILexicalBlock(scope: !929, file: !839, line: 2244, column: 3)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 160, elements: !937)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!937 = !{!938}
!938 = !DISubrange(count: 20)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !838, file: !839, line: 211, type: !941, isLocal: true, isDefinition: true)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, size: 3200, elements: !937)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !838, file: !839, line: 214, type: !944, isLocal: true, isDefinition: true)
!944 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !905)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !838, file: !839, line: 215, type: !944, isLocal: true, isDefinition: true)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !838, file: !839, line: 216, type: !906, isLocal: true, isDefinition: true)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "xTasksWaitingTermination", scope: !838, file: !839, line: 220, type: !906, isLocal: true, isDefinition: true)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "xSuspendedTaskList", scope: !838, file: !839, line: 227, type: !906, isLocal: true, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !838, file: !839, line: 238, type: !955, isLocal: true, isDefinition: true)
!955 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !862)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !838, file: !839, line: 241, type: !958, isLocal: true, isDefinition: true)
!958 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !869)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !838, file: !839, line: 245, type: !862, isLocal: true, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !838, file: !839, line: 240, type: !955, isLocal: true, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "uxTasksDeleted", scope: !838, file: !839, line: 221, type: !955, isLocal: true, isDefinition: true)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !838, file: !839, line: 256, type: !955, isLocal: true, isDefinition: true)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "xTickCount", scope: !838, file: !839, line: 239, type: !969, isLocal: true, isDefinition: true)
!969 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !884)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !838, file: !839, line: 243, type: !958, isLocal: true, isDefinition: true)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !838, file: !839, line: 242, type: !955, isLocal: true, isDefinition: true)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !838, file: !839, line: 244, type: !958, isLocal: true, isDefinition: true)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !838, file: !839, line: 246, type: !969, isLocal: true, isDefinition: true)
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !838, file: !839, line: 212, type: !906, isLocal: true, isDefinition: true)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !838, file: !839, line: 213, type: !906, isLocal: true, isDefinition: true)
!982 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !870)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(name: "xQueueRegistry", scope: !985, file: !986, line: 192, type: !1037, isLocal: false, isDefinition: true)
!985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !986, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !987, globals: !1036, splitDebugInlining: false, nameTableKind: None)
!986 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/queue.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!987 = !{!988, !862, !869, !59, !51, !919, !994, !884, !54}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "Queue_t", file: !986, line: 165, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQUEUE", file: !986, line: 161, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !986, line: 130, size: 672, elements: !992)
!992 = !{!993, !998, !999, !1000, !1005, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "pcHead", scope: !991, file: !986, line: 132, baseType: !994, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !55, line: 20, baseType: !996)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !57, line: 41, baseType: !997)
!997 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pcTail", scope: !991, file: !986, line: 133, baseType: !994, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "pcWriteTo", scope: !991, file: !986, line: 134, baseType: !994, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !991, file: !986, line: 140, baseType: !1001, size: 32, offset: 96)
!1001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !991, file: !986, line: 136, size: 32, elements: !1002)
!1002 = !{!1003, !1004}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "pcReadFrom", scope: !1001, file: !986, line: 138, baseType: !994, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "uxRecursiveCallCount", scope: !1001, file: !986, line: 139, baseType: !862, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToSend", scope: !991, file: !986, line: 142, baseType: !1006, size: 160, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !1008)
!1008 = !{!1009, !1010, !1021}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1007, file: !880, line: 208, baseType: !862, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1007, file: !880, line: 209, baseType: !1011, size: 32, offset: 32)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !1014)
!1014 = !{!1015, !1016, !1018, !1019, !1020}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1013, file: !880, line: 184, baseType: !884, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1013, file: !880, line: 185, baseType: !1017, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1013, file: !880, line: 186, baseType: !1017, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1013, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1013, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1007, file: !880, line: 210, baseType: !1022, size: 96, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !1024)
!1024 = !{!1025, !1026, !1027}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1023, file: !880, line: 196, baseType: !884, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1023, file: !880, line: 197, baseType: !1017, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1023, file: !880, line: 198, baseType: !1017, size: 32, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToReceive", scope: !991, file: !986, line: 143, baseType: !1006, size: 160, offset: 288)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "uxMessagesWaiting", scope: !991, file: !986, line: 145, baseType: !955, size: 32, offset: 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "uxLength", scope: !991, file: !986, line: 146, baseType: !862, size: 32, offset: 480)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "uxItemSize", scope: !991, file: !986, line: 147, baseType: !862, size: 32, offset: 512)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "xRxLock", scope: !991, file: !986, line: 149, baseType: !958, size: 32, offset: 544)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "xTxLock", scope: !991, file: !986, line: 150, baseType: !958, size: 32, offset: 576)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "uxQueueNumber", scope: !991, file: !986, line: 153, baseType: !862, size: 32, offset: 608)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ucQueueType", scope: !991, file: !986, line: 154, baseType: !54, size: 8, offset: 640)
!1036 = !{!983}
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 512, elements: !235)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueRegistryItem_t", file: !986, line: 187, baseType: !1039)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQueueRegistryItem", file: !986, line: 182, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QUEUE_REGISTRY_ITEM", file: !986, line: 178, size: 64, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pcQueueName", scope: !1040, file: !986, line: 180, baseType: !331, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !1040, file: !986, line: 181, baseType: !1044, size: 32, offset: 32)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !1045, line: 88, baseType: !51)
!1045 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/queue.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "xTimerQueue", scope: !1048, file: !1049, line: 169, type: !1044, isLocal: true, isDefinition: true)
!1048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1050, globals: !1078, splitDebugInlining: false, nameTableKind: None)
!1049 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/timers.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1050 = !{!869, !51, !864, !322, !862, !884, !1051, !1076, !59, !54}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer_t", file: !1049, line: 119, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "xTIMER", file: !1049, line: 115, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerControl", file: !1049, line: 104, size: 352, elements: !1055)
!1055 = !{!1056, !1057, !1067, !1068, !1069, !1070, !1077}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "pcTimerName", scope: !1054, file: !1049, line: 106, baseType: !331, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerListItem", scope: !1054, file: !1049, line: 107, baseType: !1058, size: 160, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !1060)
!1060 = !{!1061, !1062, !1064, !1065, !1066}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1059, file: !880, line: 184, baseType: !884, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1059, file: !880, line: 185, baseType: !1063, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1059, file: !880, line: 186, baseType: !1063, size: 32, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1059, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1059, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerPeriodInTicks", scope: !1054, file: !1049, line: 108, baseType: !884, size: 32, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "uxAutoReload", scope: !1054, file: !1049, line: 109, baseType: !862, size: 32, offset: 224)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pvTimerID", scope: !1054, file: !1049, line: 110, baseType: !51, size: 32, offset: 256)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pxCallbackFunction", scope: !1054, file: !1049, line: 111, baseType: !1071, size: 32, offset: 288)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerCallbackFunction_t", file: !1072, line: 123, baseType: !1073)
!1072 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/timers.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerHandle_t", file: !1072, line: 118, baseType: !51)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "uxTimerNumber", scope: !1054, file: !1049, line: 113, baseType: !862, size: 32, offset: 320)
!1078 = !{!1046, !1079, !1095, !1105, !1107, !1109}
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "pxCurrentTimerList", scope: !1048, file: !1049, line: 165, type: !1081, isLocal: true, isDefinition: true)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !1084)
!1084 = !{!1085, !1086, !1088}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1083, file: !880, line: 208, baseType: !862, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1083, file: !880, line: 209, baseType: !1087, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1083, file: !880, line: 210, baseType: !1089, size: 96, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !1091)
!1091 = !{!1092, !1093, !1094}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1090, file: !880, line: 196, baseType: !884, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1090, file: !880, line: 197, baseType: !1063, size: 32, offset: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1090, file: !880, line: 198, baseType: !1063, size: 32, offset: 64)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "xLastTime", scope: !1097, file: !1049, line: 524, type: !884, isLocal: true, isDefinition: true)
!1097 = distinct !DISubprogram(name: "prvSampleTimeNow", scope: !1049, file: !1049, line: 521, type: !1098, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !1102)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!884, !1100}
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!1102 = !{!1103, !1104}
!1103 = !DILocalVariable(name: "pxTimerListsWereSwitched", arg: 1, scope: !1097, file: !1049, line: 521, type: !1100)
!1104 = !DILocalVariable(name: "xTimeNow", scope: !1097, file: !1049, line: 523, type: !884)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "pxOverflowTimerList", scope: !1048, file: !1049, line: 166, type: !1081, isLocal: true, isDefinition: true)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "xActiveTimerList1", scope: !1048, file: !1049, line: 163, type: !1082, isLocal: true, isDefinition: true)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "xActiveTimerList2", scope: !1048, file: !1049, line: 164, type: !1082, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !1113, file: !1114, line: 212, type: !54, isLocal: true, isDefinition: true)
!1113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1115, retainedTypes: !1123, globals: !1124, splitDebugInlining: false, nameTableKind: None)
!1114 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1115 = !{!1116, !765}
!1116 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !766, line: 50, baseType: !30, size: 32, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122}
!1118 = !DIEnumerator(name: "HAL_DWT_0", value: 0)
!1119 = !DIEnumerator(name: "HAL_DWT_1", value: 1)
!1120 = !DIEnumerator(name: "HAL_DWT_2", value: 2)
!1121 = !DIEnumerator(name: "HAL_DWT_3", value: 3)
!1122 = !DIEnumerator(name: "HAL_DWT_MAX", value: 4)
!1123 = !{!867, !51, !52, !54, !61, !59, !869, !884}
!1124 = !{!1125, !1111, !1130, !1132}
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !1113, file: !1114, line: 214, type: !1127, isLocal: true, isDefinition: true)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !1113, file: !1114, line: 213, type: !61, isLocal: true, isDefinition: true)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !1113, file: !1114, line: 150, type: !862, isLocal: true, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "pxEnd", scope: !1136, file: !1137, line: 142, type: !1139, isLocal: true, isDefinition: true)
!1136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1137, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1138, globals: !1146, splitDebugInlining: false, nameTableKind: None)
!1137 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1138 = !{!51, !210, !919, !61, !1139}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockLink_t", file: !1137, line: 117, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "A_BLOCK_LINK", file: !1137, line: 110, size: 64, elements: !1142)
!1142 = !{!1143, !1145}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pxNextFreeBlock", scope: !1141, file: !1137, line: 112, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "xBlockSize", scope: !1141, file: !1137, line: 113, baseType: !919, size: 32, offset: 32)
!1146 = !{!1147, !1150, !1134, !1152, !1154, !1156, !1158}
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression(DW_OP_constu, 8, DW_OP_stack_value))
!1148 = distinct !DIGlobalVariable(name: "xHeapStructSize", scope: !1136, file: !1137, line: 139, type: !1149, isLocal: true, isDefinition: true)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "xStart", scope: !1136, file: !1137, line: 142, type: !1140, isLocal: true, isDefinition: true)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "xBlockAllocatedBit", scope: !1136, file: !1137, line: 153, type: !919, isLocal: true, isDefinition: true)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "xFreeBytesRemaining", scope: !1136, file: !1137, line: 146, type: !919, isLocal: true, isDefinition: true)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "xMinimumEverFreeBytesRemaining", scope: !1136, file: !1137, line: 147, type: !919, isLocal: true, isDefinition: true)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "ucHeap", scope: !1136, file: !1137, line: 105, type: !1160, isLocal: true, isDefinition: true)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 1187840, elements: !1161)
!1161 = !{!1162}
!1162 = !DISubrange(count: 148480)
!1163 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 2147483648, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "entities", scope: !1166, file: !1167, line: 153, type: !1190, isLocal: true, isDefinition: true)
!1166 = distinct !DISubprogram(name: "_mxml_entity_cb", scope: !1167, file: !1167, line: 143, type: !1168, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1170, retainedNodes: !1184)
!1167 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-entity.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!7, !331}
!1170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1167, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !1182, globals: !1183, splitDebugInlining: false, nameTableKind: None)
!1171 = !{!1172}
!1172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mxml_type_e", file: !1173, line: 85, baseType: !7, size: 32, elements: !1174)
!1173 = !DIFile(filename: "../../../../../middleware/third_party/xml/inc/mxml.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1174 = !{!1175, !1176, !1177, !1178, !1179, !1180, !1181}
!1175 = !DIEnumerator(name: "MXML_IGNORE", value: -1)
!1176 = !DIEnumerator(name: "MXML_ELEMENT", value: 0)
!1177 = !DIEnumerator(name: "MXML_INTEGER", value: 1)
!1178 = !DIEnumerator(name: "MXML_OPAQUE", value: 2)
!1179 = !DIEnumerator(name: "MXML_REAL", value: 3)
!1180 = !DIEnumerator(name: "MXML_TEXT", value: 4)
!1181 = !DIEnumerator(name: "MXML_CUSTOM", value: 5)
!1182 = !{!7}
!1183 = !{!1164}
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DILocalVariable(name: "name", arg: 1, scope: !1166, file: !1167, line: 143, type: !331)
!1186 = !DILocalVariable(name: "diff", scope: !1166, file: !1167, line: 145, type: !7)
!1187 = !DILocalVariable(name: "current", scope: !1166, file: !1167, line: 146, type: !7)
!1188 = !DILocalVariable(name: "first", scope: !1166, file: !1167, line: 147, type: !7)
!1189 = !DILocalVariable(name: "last", scope: !1166, file: !1167, line: 148, type: !7)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1191, size: 16448, elements: !1196)
!1191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1166, file: !1167, line: 149, size: 64, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1192, file: !1167, line: 151, baseType: !331, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1192, file: !1167, line: 152, baseType: !7, size: 32, offset: 32)
!1196 = !{!1197}
!1197 = !DISubrange(count: 257)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "types", scope: !1200, file: !1201, line: 1416, type: !1325, isLocal: true, isDefinition: true)
!1200 = distinct !DISubprogram(name: "mxml_load_data", scope: !1201, file: !1201, line: 1396, type: !1202, scopeLine: 1403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !1280)
!1201 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-file.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!1204, !1204, !51, !1252, !1256, !1261, !51}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !1207)
!1207 = !{!1208, !1210, !1212, !1213, !1214, !1215, !1216, !1250, !1251}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1206, file: !1173, line: 139, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_type_t", file: !1173, line: 94, baseType: !1172)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1206, file: !1173, line: 140, baseType: !1211, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1206, file: !1173, line: 141, baseType: !1211, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1206, file: !1173, line: 142, baseType: !1211, size: 32, offset: 96)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1206, file: !1173, line: 143, baseType: !1211, size: 32, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !1206, file: !1173, line: 144, baseType: !1211, size: 32, offset: 160)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1206, file: !1173, line: 145, baseType: !1217, size: 128, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !1219)
!1219 = !{!1220, !1233, !1234, !1235, !1237, !1243}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !1218, file: !1173, line: 129, baseType: !1221, size: 96)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !1223)
!1223 = !{!1224, !1225, !1226}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1222, file: !1173, line: 110, baseType: !201, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !1222, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1222, file: !1173, line: 112, baseType: !1227, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1229, file: !1173, line: 104, baseType: !201, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1229, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !1218, file: !1173, line: 130, baseType: !7, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1218, file: !1173, line: 131, baseType: !201, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1218, file: !1173, line: 132, baseType: !1236, size: 64)
!1236 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1218, file: !1173, line: 133, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !1240)
!1240 = !{!1241, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !1239, file: !1173, line: 117, baseType: !7, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1239, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1218, file: !1173, line: 134, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !1246)
!1246 = !{!1247, !1248}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1245, file: !1173, line: 123, baseType: !51, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !1245, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_destroy_cb_t", file: !1173, line: 96, baseType: !639)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1206, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1206, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_load_cb_t", file: !1173, line: 177, baseType: !1253)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!1209, !1204}
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mxml_getc_cb_t", file: !1201, line: 48, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!7, !51, !1260}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_sax_cb_t", file: !1173, line: 183, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{null, !1204, !1265, !51}
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_sax_event_t", file: !1173, line: 83, baseType: !1266)
!1266 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mxml_sax_event_e", file: !1173, line: 75, baseType: !30, size: 32, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1271, !1272, !1273}
!1268 = !DIEnumerator(name: "MXML_SAX_CDATA", value: 0)
!1269 = !DIEnumerator(name: "MXML_SAX_COMMENT", value: 1)
!1270 = !DIEnumerator(name: "MXML_SAX_DATA", value: 2)
!1271 = !DIEnumerator(name: "MXML_SAX_DIRECTIVE", value: 3)
!1272 = !DIEnumerator(name: "MXML_SAX_ELEMENT_CLOSE", value: 4)
!1273 = !DIEnumerator(name: "MXML_SAX_ELEMENT_OPEN", value: 5)
!1274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1201, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1275, retainedTypes: !1276, globals: !1279, splitDebugInlining: false, nameTableKind: None)
!1275 = !{!1172, !1266}
!1276 = !{!51, !7, !1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!1279 = !{!1198}
!1280 = !{!1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1324}
!1281 = !DILocalVariable(name: "top", arg: 1, scope: !1200, file: !1201, line: 1397, type: !1204)
!1282 = !DILocalVariable(name: "p", arg: 2, scope: !1200, file: !1201, line: 1398, type: !51)
!1283 = !DILocalVariable(name: "cb", arg: 3, scope: !1200, file: !1201, line: 1399, type: !1252)
!1284 = !DILocalVariable(name: "getc_cb", arg: 4, scope: !1200, file: !1201, line: 1400, type: !1256)
!1285 = !DILocalVariable(name: "sax_cb", arg: 5, scope: !1200, file: !1201, line: 1401, type: !1261)
!1286 = !DILocalVariable(name: "sax_data", arg: 6, scope: !1200, file: !1201, line: 1402, type: !51)
!1287 = !DILocalVariable(name: "node", scope: !1200, file: !1201, line: 1404, type: !1204)
!1288 = !DILocalVariable(name: "first", scope: !1200, file: !1201, line: 1405, type: !1204)
!1289 = !DILocalVariable(name: "parent", scope: !1200, file: !1201, line: 1406, type: !1204)
!1290 = !DILocalVariable(name: "ch", scope: !1200, file: !1201, line: 1407, type: !7)
!1291 = !DILocalVariable(name: "whitespace", scope: !1200, file: !1201, line: 1408, type: !7)
!1292 = !DILocalVariable(name: "buffer", scope: !1200, file: !1201, line: 1409, type: !201)
!1293 = !DILocalVariable(name: "bufptr", scope: !1200, file: !1201, line: 1410, type: !201)
!1294 = !DILocalVariable(name: "bufsize", scope: !1200, file: !1201, line: 1411, type: !7)
!1295 = !DILocalVariable(name: "type", scope: !1200, file: !1201, line: 1412, type: !1209)
!1296 = !DILocalVariable(name: "encoding", scope: !1200, file: !1201, line: 1413, type: !7)
!1297 = !DILocalVariable(name: "global", scope: !1200, file: !1201, line: 1414, type: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mxml_global_t", file: !1300, line: 39, baseType: !1301)
!1300 = !DIFile(filename: "../../../../../middleware/third_party/xml/inc/mxml-private.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mxml_global_s", file: !1300, line: 31, size: 480, elements: !1302)
!1302 = !{!1303, !1307, !1308, !1313, !1314, !1319}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "error_cb", scope: !1301, file: !1300, line: 33, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{null, !331}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "num_entity_cbs", scope: !1301, file: !1300, line: 34, baseType: !7, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "entity_cbs", scope: !1301, file: !1300, line: 35, baseType: !1309, size: 320, offset: 64)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 320, elements: !1311)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1311 = !{!1312}
!1312 = !DISubrange(count: 10)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "wrap", scope: !1301, file: !1300, line: 36, baseType: !7, size: 32, offset: 384)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "custom_load_cb", scope: !1301, file: !1300, line: 37, baseType: !1315, size: 32, offset: 416)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_load_cb_t", file: !1173, line: 166, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!7, !1204, !331}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "custom_save_cb", scope: !1301, file: !1300, line: 38, baseType: !1320, size: 32, offset: 448)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_save_cb_t", file: !1173, line: 169, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!201, !1204}
!1324 = !DILabel(scope: !1200, name: "error", file: !1201, line: 2088)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !330, size: 192, elements: !895)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "global", scope: !1328, file: !1329, line: 310, type: !1333, isLocal: true, isDefinition: true)
!1328 = distinct !DISubprogram(name: "_mxml_global", scope: !1329, file: !1329, line: 307, type: !1330, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !1397)
!1329 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-private.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mxml_global_t", file: !1300, line: 39, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mxml_global_s", file: !1300, line: 31, size: 480, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1340, !1390}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "error_cb", scope: !1334, file: !1300, line: 33, baseType: !1304, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "num_entity_cbs", scope: !1334, file: !1300, line: 34, baseType: !7, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "entity_cbs", scope: !1334, file: !1300, line: 35, baseType: !1309, size: 320, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "wrap", scope: !1334, file: !1300, line: 36, baseType: !7, size: 32, offset: 384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "custom_load_cb", scope: !1334, file: !1300, line: 37, baseType: !1341, size: 32, offset: 416)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_load_cb_t", file: !1173, line: 166, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!7, !1345, !331}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !1348)
!1348 = !{!1349, !1350, !1352, !1353, !1354, !1355, !1356, !1388, !1389}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1347, file: !1173, line: 139, baseType: !1209, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1347, file: !1173, line: 140, baseType: !1351, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1347, file: !1173, line: 141, baseType: !1351, size: 32, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1347, file: !1173, line: 142, baseType: !1351, size: 32, offset: 96)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1347, file: !1173, line: 143, baseType: !1351, size: 32, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !1347, file: !1173, line: 144, baseType: !1351, size: 32, offset: 160)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1347, file: !1173, line: 145, baseType: !1357, size: 128, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !1359)
!1359 = !{!1360, !1373, !1374, !1375, !1376, !1382}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !1358, file: !1173, line: 129, baseType: !1361, size: 96)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !1363)
!1363 = !{!1364, !1365, !1366}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1173, line: 110, baseType: !201, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !1362, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1362, file: !1173, line: 112, baseType: !1367, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !1370)
!1370 = !{!1371, !1372}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1369, file: !1173, line: 104, baseType: !201, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1369, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !1358, file: !1173, line: 130, baseType: !7, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1358, file: !1173, line: 131, baseType: !201, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1358, file: !1173, line: 132, baseType: !1236, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1358, file: !1173, line: 133, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !1379)
!1379 = !{!1380, !1381}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !1378, file: !1173, line: 117, baseType: !7, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1378, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1358, file: !1173, line: 134, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !1385)
!1385 = !{!1386, !1387}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1384, file: !1173, line: 123, baseType: !51, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !1384, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !1347, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1347, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "custom_save_cb", scope: !1334, file: !1300, line: 38, baseType: !1391, size: 32, offset: 448)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_save_cb_t", file: !1173, line: 169, baseType: !1392)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!201, !1345}
!1395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1329, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, globals: !1396, splitDebugInlining: false, nameTableKind: None)
!1396 = !{!1326}
!1397 = !{}
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "xExceptionStack", scope: !1400, file: !1401, line: 78, type: !1575, isLocal: true, isDefinition: true)
!1400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1402, retainedTypes: !1430, globals: !1483, splitDebugInlining: false, nameTableKind: None)
!1401 = !DIFile(filename: "../../../../../kernel/service/src/exception_handler.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1402 = !{!1403, !1116}
!1403 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1401, line: 276, baseType: !30, size: 32, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1405 = !DIEnumerator(name: "r0", value: 0)
!1406 = !DIEnumerator(name: "r1", value: 1)
!1407 = !DIEnumerator(name: "r2", value: 2)
!1408 = !DIEnumerator(name: "r3", value: 3)
!1409 = !DIEnumerator(name: "r12", value: 4)
!1410 = !DIEnumerator(name: "lr", value: 5)
!1411 = !DIEnumerator(name: "pc", value: 6)
!1412 = !DIEnumerator(name: "psr", value: 7)
!1413 = !DIEnumerator(name: "s0", value: 8)
!1414 = !DIEnumerator(name: "s1", value: 9)
!1415 = !DIEnumerator(name: "s2", value: 10)
!1416 = !DIEnumerator(name: "s3", value: 11)
!1417 = !DIEnumerator(name: "s4", value: 12)
!1418 = !DIEnumerator(name: "s5", value: 13)
!1419 = !DIEnumerator(name: "s6", value: 14)
!1420 = !DIEnumerator(name: "s7", value: 15)
!1421 = !DIEnumerator(name: "s8", value: 16)
!1422 = !DIEnumerator(name: "s9", value: 17)
!1423 = !DIEnumerator(name: "s10", value: 18)
!1424 = !DIEnumerator(name: "s11", value: 19)
!1425 = !DIEnumerator(name: "s12", value: 20)
!1426 = !DIEnumerator(name: "s13", value: 21)
!1427 = !DIEnumerator(name: "s14", value: 22)
!1428 = !DIEnumerator(name: "s15", value: 23)
!1429 = !DIEnumerator(name: "fpscr", value: 24)
!1430 = !{!1431, !175, !30, !61, !1456}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1433, file: !531, line: 397, baseType: !565, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1433, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1433, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1433, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1433, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1433, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1433, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1433, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1433, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1433, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1433, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1433, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1433, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1433, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1433, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1433, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1433, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1433, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1433, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1433, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1433, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !531, line: 826, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 801, size: 736, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1458, file: !531, line: 803, baseType: !60, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !1458, file: !531, line: 804, baseType: !60, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !1458, file: !531, line: 805, baseType: !60, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !1458, file: !531, line: 806, baseType: !60, size: 32, offset: 96)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !1458, file: !531, line: 807, baseType: !60, size: 32, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !1458, file: !531, line: 808, baseType: !60, size: 32, offset: 160)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !1458, file: !531, line: 809, baseType: !60, size: 32, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !1458, file: !531, line: 810, baseType: !565, size: 32, offset: 224)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !1458, file: !531, line: 811, baseType: !60, size: 32, offset: 256)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !1458, file: !531, line: 812, baseType: !60, size: 32, offset: 288)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !1458, file: !531, line: 813, baseType: !60, size: 32, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1458, file: !531, line: 814, baseType: !445, size: 32, offset: 352)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !1458, file: !531, line: 815, baseType: !60, size: 32, offset: 384)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !1458, file: !531, line: 816, baseType: !60, size: 32, offset: 416)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !1458, file: !531, line: 817, baseType: !60, size: 32, offset: 448)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1458, file: !531, line: 818, baseType: !445, size: 32, offset: 480)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !1458, file: !531, line: 819, baseType: !60, size: 32, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !1458, file: !531, line: 820, baseType: !60, size: 32, offset: 544)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !1458, file: !531, line: 821, baseType: !60, size: 32, offset: 576)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1458, file: !531, line: 822, baseType: !445, size: 32, offset: 608)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !1458, file: !531, line: 823, baseType: !60, size: 32, offset: 640)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !1458, file: !531, line: 824, baseType: !60, size: 32, offset: 672)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !1458, file: !531, line: 825, baseType: !60, size: 32, offset: 704)
!1483 = !{!1484, !1487, !1398, !1547, !1556, !1558, !1573}
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "pxExceptionStack", scope: !1400, file: !1401, line: 79, type: !1486, isLocal: false, isDefinition: true)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 32)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "pTaskContext", scope: !1400, file: !1401, line: 340, type: !1489, isLocal: false, isDefinition: true)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskContext", file: !1401, line: 337, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TaskContextType", file: !1401, line: 282, size: 1728, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1491, file: !1401, line: 283, baseType: !30, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1491, file: !1401, line: 284, baseType: !30, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1491, file: !1401, line: 285, baseType: !30, size: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1491, file: !1401, line: 286, baseType: !30, size: 32, offset: 96)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1491, file: !1401, line: 287, baseType: !30, size: 32, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1491, file: !1401, line: 288, baseType: !30, size: 32, offset: 160)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1491, file: !1401, line: 289, baseType: !30, size: 32, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1491, file: !1401, line: 290, baseType: !30, size: 32, offset: 224)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1491, file: !1401, line: 291, baseType: !30, size: 32, offset: 256)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1491, file: !1401, line: 292, baseType: !30, size: 32, offset: 288)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1491, file: !1401, line: 293, baseType: !30, size: 32, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1491, file: !1401, line: 294, baseType: !30, size: 32, offset: 352)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1491, file: !1401, line: 295, baseType: !30, size: 32, offset: 384)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1491, file: !1401, line: 296, baseType: !30, size: 32, offset: 416)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !1491, file: !1401, line: 297, baseType: !30, size: 32, offset: 448)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1491, file: !1401, line: 298, baseType: !30, size: 32, offset: 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "psr", scope: !1491, file: !1401, line: 299, baseType: !30, size: 32, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1491, file: !1401, line: 300, baseType: !30, size: 32, offset: 544)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "exc_return", scope: !1491, file: !1401, line: 301, baseType: !30, size: 32, offset: 576)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "msp", scope: !1491, file: !1401, line: 302, baseType: !30, size: 32, offset: 608)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1491, file: !1401, line: 303, baseType: !30, size: 32, offset: 640)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "fpscr", scope: !1491, file: !1401, line: 304, baseType: !30, size: 32, offset: 672)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "s0", scope: !1491, file: !1401, line: 305, baseType: !30, size: 32, offset: 704)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "s1", scope: !1491, file: !1401, line: 306, baseType: !30, size: 32, offset: 736)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !1491, file: !1401, line: 307, baseType: !30, size: 32, offset: 768)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !1491, file: !1401, line: 308, baseType: !30, size: 32, offset: 800)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "s4", scope: !1491, file: !1401, line: 309, baseType: !30, size: 32, offset: 832)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "s5", scope: !1491, file: !1401, line: 310, baseType: !30, size: 32, offset: 864)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "s6", scope: !1491, file: !1401, line: 311, baseType: !30, size: 32, offset: 896)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "s7", scope: !1491, file: !1401, line: 312, baseType: !30, size: 32, offset: 928)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "s8", scope: !1491, file: !1401, line: 313, baseType: !30, size: 32, offset: 960)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "s9", scope: !1491, file: !1401, line: 314, baseType: !30, size: 32, offset: 992)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "s10", scope: !1491, file: !1401, line: 315, baseType: !30, size: 32, offset: 1024)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "s11", scope: !1491, file: !1401, line: 316, baseType: !30, size: 32, offset: 1056)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "s12", scope: !1491, file: !1401, line: 317, baseType: !30, size: 32, offset: 1088)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "s13", scope: !1491, file: !1401, line: 318, baseType: !30, size: 32, offset: 1120)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "s14", scope: !1491, file: !1401, line: 319, baseType: !30, size: 32, offset: 1152)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "s15", scope: !1491, file: !1401, line: 320, baseType: !30, size: 32, offset: 1184)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "s16", scope: !1491, file: !1401, line: 321, baseType: !30, size: 32, offset: 1216)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "s17", scope: !1491, file: !1401, line: 322, baseType: !30, size: 32, offset: 1248)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "s18", scope: !1491, file: !1401, line: 323, baseType: !30, size: 32, offset: 1280)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "s19", scope: !1491, file: !1401, line: 324, baseType: !30, size: 32, offset: 1312)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "s20", scope: !1491, file: !1401, line: 325, baseType: !30, size: 32, offset: 1344)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "s21", scope: !1491, file: !1401, line: 326, baseType: !30, size: 32, offset: 1376)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "s22", scope: !1491, file: !1401, line: 327, baseType: !30, size: 32, offset: 1408)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "s23", scope: !1491, file: !1401, line: 328, baseType: !30, size: 32, offset: 1440)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "s24", scope: !1491, file: !1401, line: 329, baseType: !30, size: 32, offset: 1472)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "s25", scope: !1491, file: !1401, line: 330, baseType: !30, size: 32, offset: 1504)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "s26", scope: !1491, file: !1401, line: 331, baseType: !30, size: 32, offset: 1536)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "s27", scope: !1491, file: !1401, line: 332, baseType: !30, size: 32, offset: 1568)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "s28", scope: !1491, file: !1401, line: 333, baseType: !30, size: 32, offset: 1600)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "s29", scope: !1491, file: !1401, line: 334, baseType: !30, size: 32, offset: 1632)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "s30", scope: !1491, file: !1401, line: 335, baseType: !30, size: 32, offset: 1664)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "s31", scope: !1491, file: !1401, line: 336, baseType: !30, size: 32, offset: 1696)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "assert_expr", scope: !1400, file: !1401, line: 99, type: !1549, isLocal: true, isDefinition: true)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "assert_expr_t", file: !1401, line: 95, baseType: !1550)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1401, line: 89, size: 128, elements: !1551)
!1551 = !{!1552, !1553, !1554, !1555}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "is_valid", scope: !1550, file: !1401, line: 91, baseType: !69, size: 8)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1550, file: !1401, line: 92, baseType: !331, size: 32, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1550, file: !1401, line: 93, baseType: !331, size: 32, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1550, file: !1401, line: 94, baseType: !7, size: 32, offset: 96)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "reboot_flag", scope: !1400, file: !1401, line: 101, type: !7, isLocal: true, isDefinition: true)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "exception_config", scope: !1400, file: !1401, line: 97, type: !1560, isLocal: true, isDefinition: true)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_t", file: !1401, line: 87, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1401, line: 83, size: 416, elements: !1562)
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1561, file: !1401, line: 85, baseType: !7, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "configs", scope: !1561, file: !1401, line: 86, baseType: !1565, size: 384, offset: 32)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1566, size: 384, elements: !895)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1567, line: 99, baseType: !1568)
!1567 = !DIFile(filename: "../../../../../kernel/service/inc/exception_handler.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1567, line: 95, size: 64, elements: !1569)
!1569 = !{!1570, !1572}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !1568, file: !1567, line: 97, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_exception_callback_t", file: !1567, line: 93, baseType: !153)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !1568, file: !1567, line: 98, baseType: !1571, size: 32, offset: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "taskContext", scope: !1400, file: !1401, line: 339, type: !1490, isLocal: true, isDefinition: true)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 6144, elements: !1576)
!1576 = !{!1577}
!1577 = !DISubrange(count: 192)
!1578 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 0, 8))
!1579 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!1580 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 32))
!1581 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression(DW_OP_LLVM_fragment, 96, 32))
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "g_log_uart_port", scope: !1584, file: !1585, line: 166, type: !755, isLocal: true, isDefinition: true)
!1584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1585, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1586, retainedTypes: !1612, globals: !1673, splitDebugInlining: false, nameTableKind: None)
!1585 = !DIFile(filename: "../../../../../kernel/service/src/syslog.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1586 = !{!345, !350, !649, !657, !662, !678, !684, !688, !1587, !1591, !1604, !28}
!1587 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1585, line: 96, baseType: !30, size: 32, elements: !1588)
!1588 = !{!1589, !1590}
!1589 = !DIEnumerator(name: "MESSAGE_TYPE_NORMAL_LOG", value: 0)
!1590 = !DIEnumerator(name: "MESSAGE_TYPE_HEX_DUMP", value: 1)
!1591 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1592, line: 40, baseType: !30, size: 32, elements: !1593)
!1592 = !DIFile(filename: "../inc/task_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603}
!1594 = !DIEnumerator(name: "TASK_PRIORITY_IDLE", value: 0)
!1595 = !DIEnumerator(name: "TASK_PRIORITY_SYSLOG", value: 1)
!1596 = !DIEnumerator(name: "TASK_PRIORITY_LOW", value: 2)
!1597 = !DIEnumerator(name: "TASK_PRIORITY_BELOW_NORMAL", value: 3)
!1598 = !DIEnumerator(name: "TASK_PRIORITY_NORMAL", value: 4)
!1599 = !DIEnumerator(name: "TASK_PRIORITY_ABOVE_NORMAL", value: 5)
!1600 = !DIEnumerator(name: "TASK_PRIORITY_HIGH", value: 6)
!1601 = !DIEnumerator(name: "TASK_PRIORITY_SOFT_REALTIME", value: 7)
!1602 = !DIEnumerator(name: "TASK_PRIORITY_HARD_REALTIME", value: 8)
!1603 = !DIEnumerator(name: "TASK_PRIORITY_TIMER", value: 19)
!1604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1605, line: 50, baseType: !30, size: 32, elements: !1606)
!1605 = !DIFile(filename: "../../../../../kernel/service/inc/toi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1606 = !{!1607, !1608, !1609, !1610, !1611}
!1607 = !DIEnumerator(name: "TOI_BIN", value: 0)
!1608 = !DIEnumerator(name: "TOI_OCT", value: 1)
!1609 = !DIEnumerator(name: "TOI_DEC", value: 2)
!1610 = !DIEnumerator(name: "TOI_HEX", value: 3)
!1611 = !DIEnumerator(name: "TOI_ERR", value: 4)
!1612 = !{!1613, !54, !51, !59, !869, !884, !30, !201, !7, !1652, !362, !364, !61, !1661, !1670}
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_message_t", file: !1585, line: 130, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1585, line: 124, size: 2336, elements: !1616)
!1616 = !{!1617, !1619}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !1615, file: !1585, line: 125, baseType: !1618, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "message_type_t", file: !1585, line: 99, baseType: !1587)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1615, file: !1585, line: 129, baseType: !1620, size: 2304, offset: 32)
!1620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1615, file: !1585, line: 126, size: 2304, elements: !1621)
!1621 = !{!1622, !1633}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "normal_log_message", scope: !1620, file: !1585, line: 127, baseType: !1623, size: 2240)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "normal_log_message_t", file: !1585, line: 108, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1585, line: 101, size: 2240, elements: !1625)
!1625 = !{!1626, !1627, !1628, !1629, !1630, !1631}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1624, file: !1585, line: 102, baseType: !331, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1624, file: !1585, line: 103, baseType: !364, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1624, file: !1585, line: 104, baseType: !331, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1624, file: !1585, line: 105, baseType: !7, size: 32, offset: 96)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1624, file: !1585, line: 106, baseType: !61, size: 32, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1624, file: !1585, line: 107, baseType: !1632, size: 2056, offset: 160)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 2056, elements: !1196)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "hex_dump_message", scope: !1620, file: !1585, line: 128, baseType: !1634, size: 2304)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "hex_dump_message_t", file: !1585, line: 120, baseType: !1635)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1585, line: 110, size: 2304, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1646, !1647, !1651}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1635, file: !1585, line: 111, baseType: !331, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1635, file: !1585, line: 112, baseType: !364, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1635, file: !1585, line: 113, baseType: !331, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1635, file: !1585, line: 114, baseType: !7, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1635, file: !1585, line: 115, baseType: !61, size: 32, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1635, file: !1585, line: 116, baseType: !1643, size: 1032, offset: 160)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 1032, elements: !1644)
!1644 = !{!1645}
!1645 = !DISubrange(count: 129)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !1635, file: !1585, line: 117, baseType: !61, size: 32, offset: 1216)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1635, file: !1585, line: 118, baseType: !1648, size: 1024, offset: 1248)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 1024, elements: !1649)
!1649 = !{!1650}
!1650 = !DISubrange(count: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "additional_data", scope: !1635, file: !1585, line: 119, baseType: !201, size: 32, offset: 2272)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1660}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1654, file: !346, line: 90, baseType: !331, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1654, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1654, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1654, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1654, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_buffer_t", file: !1585, line: 135, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1585, line: 132, size: 2368, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "occupied", scope: !1663, file: !1585, line: 133, baseType: !61, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1663, file: !1585, line: 134, baseType: !1667, size: 2336, offset: 32)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 2336, elements: !1668)
!1668 = !{!1669}
!1669 = !DISubrange(count: 292)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !55, line: 60, baseType: !1671)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !57, line: 105, baseType: !1672)
!1672 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1673 = !{!1674, !1676, !1678, !1681, !1582, !1695, !1697, !1699, !1701, !1704, !1706, !1708}
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "log_control_block_common", scope: !1584, file: !1585, line: 158, type: !1653, isLocal: false, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "syslog_task_handle", scope: !1584, file: !1585, line: 138, type: !868, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "syslog_buffer_pool", scope: !1584, file: !1585, line: 141, type: !1680, isLocal: true, isDefinition: true)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1662, size: 37888, elements: !455)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "syslog_config", scope: !1584, file: !1585, line: 160, type: !1683, isLocal: true, isDefinition: true)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_config_t", file: !346, line: 97, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syslog_config_s", file: !346, line: 122, size: 64, elements: !1685)
!1685 = !{!1686, !1693}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "save_fn", scope: !1684, file: !346, line: 123, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_save_fn", file: !346, line: 107, baseType: !1688)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{null, !1691}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !1684, file: !346, line: 124, baseType: !1694, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "syslog_init_done", scope: !1584, file: !1585, line: 153, type: !61, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "syslog_drop_count", scope: !1584, file: !1585, line: 155, type: !61, isLocal: true, isDefinition: true)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "g_log_queue", scope: !1584, file: !1585, line: 144, type: !1044, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "print_level_table", scope: !1584, file: !1585, line: 164, type: !1703, isLocal: true, isDefinition: true)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !220)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "syslog_task_ready", scope: !1584, file: !1585, line: 154, type: !61, isLocal: true, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "syslog_init_time", scope: !1584, file: !1585, line: 152, type: !61, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "log_switch_table", scope: !1584, file: !1585, line: 162, type: !1710, isLocal: true, isDefinition: true)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 64, elements: !333)
!1711 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "g_nvdm_mutex", scope: !1714, file: !1715, line: 122, type: !1731, isLocal: true, isDefinition: true)
!1714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1716, retainedTypes: !1727, globals: !1728, splitDebugInlining: false, nameTableKind: None)
!1715 = !DIFile(filename: "../../../../../middleware/MTK/nvdm/src/nvdm_port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1716 = !{!350, !1717, !44}
!1717 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 110, baseType: !7, size: 32, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1719 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1720 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1721 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1722 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1723 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1724 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1725 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1726 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1727 = !{!61, !54, !51, !869, !1044, !884}
!1728 = !{!1712, !1729}
!1729 = !DIGlobalVariableExpression(var: !1730, expr: !DIExpression())
!1730 = distinct !DIGlobalVariable(name: "g_task_handler", scope: !1714, file: !1715, line: 123, type: !868, isLocal: true, isDefinition: true)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvdm_port_mutex_t", file: !1715, line: 121, baseType: !1732)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreHandle_t", file: !1733, line: 79, baseType: !1044)
!1733 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/semphr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "memory_regions", scope: !1736, file: !1737, line: 51, type: !1739, isLocal: false, isDefinition: true)
!1736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1738, splitDebugInlining: false, nameTableKind: None)
!1737 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/xml/src/regions_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1738 = !{!1734}
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1740, size: 768, elements: !895)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "memory_region_type", file: !1567, line: 91, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1567, line: 85, size: 128, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "region_name", scope: !1742, file: !1567, line: 87, baseType: !201, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "start_address", scope: !1742, file: !1567, line: 88, baseType: !1486, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "end_address", scope: !1742, file: !1567, line: 89, baseType: !1486, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "is_dumped", scope: !1742, file: !1567, line: 90, baseType: !30, size: 32, offset: 96)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1750, file: !1751, line: 59, type: !61, isLocal: false, isDefinition: true)
!1750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1752, globals: !1805, splitDebugInlining: false, nameTableKind: None)
!1751 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/xml/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1752 = !{!1753, !1761, !1786}
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !531, line: 656, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 650, size: 128, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1755, file: !531, line: 652, baseType: !60, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1755, file: !531, line: 653, baseType: !60, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1755, file: !531, line: 654, baseType: !60, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1755, file: !531, line: 655, baseType: !565, size: 32, offset: 96)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1763, file: !531, line: 397, baseType: !565, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1763, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1763, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1763, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1763, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1763, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1763, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1763, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1763, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1763, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1763, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1763, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1763, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1763, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1763, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1763, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1763, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1763, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1763, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1763, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1763, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !431, line: 72, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !431, line: 56, size: 525312, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !1788, file: !431, line: 57, baseType: !60, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !1788, file: !431, line: 58, baseType: !60, size: 32, offset: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !1788, file: !431, line: 59, baseType: !60, size: 32, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !1788, file: !431, line: 60, baseType: !60, size: 32, offset: 96)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !1788, file: !431, line: 61, baseType: !60, size: 32, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !1788, file: !431, line: 62, baseType: !60, size: 32, offset: 160)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !1788, file: !431, line: 63, baseType: !60, size: 32, offset: 192)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !1788, file: !431, line: 64, baseType: !60, size: 32, offset: 224)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !1788, file: !431, line: 65, baseType: !60, size: 32, offset: 256)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !1788, file: !431, line: 66, baseType: !60, size: 32, offset: 288)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1788, file: !431, line: 67, baseType: !445, size: 32, offset: 320)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !1788, file: !431, line: 68, baseType: !60, size: 32, offset: 352)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1788, file: !431, line: 69, baseType: !450, size: 523904, offset: 384)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !1788, file: !431, line: 70, baseType: !454, size: 512, offset: 524288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !1788, file: !431, line: 71, baseType: !454, size: 512, offset: 524800)
!1805 = !{!1748, !1806}
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !1750, file: !1751, line: 61, type: !60, isLocal: true, isDefinition: true)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "heap_end", scope: !1810, file: !1811, line: 101, type: !201, isLocal: true, isDefinition: true)
!1810 = distinct !DISubprogram(name: "_sbrk_r", scope: !1811, file: !1811, line: 98, type: !1812, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !2003)
!1811 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/xml/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!1814, !1816, !1998}
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !1815, line: 123, baseType: !201)
!1815 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1818, line: 377, size: 1920, elements: !1819)
!1818 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!1819 = !{!1820, !1821, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1898, !1918, !1922, !1923, !1924, !1925, !1934, !1947, !1948, !1953, !1972, !1973, !1980, !1981, !1997}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !1817, file: !1818, line: 381, baseType: !7, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !1817, file: !1818, line: 386, baseType: !1822, size: 32, offset: 32)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1818, line: 292, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1818, line: 186, size: 832, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1831, !1832, !1837, !1838, !1839, !1840, !1844, !1848, !1853, !1857, !1858, !1859, !1860, !1864, !1866, !1867, !1868, !1870, !1876, !1888}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1824, file: !1818, line: 187, baseType: !177, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1824, file: !1818, line: 188, baseType: !7, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1824, file: !1818, line: 189, baseType: !7, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1824, file: !1818, line: 190, baseType: !1830, size: 16, offset: 96)
!1830 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1824, file: !1818, line: 191, baseType: !1830, size: 16, offset: 112)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1824, file: !1818, line: 192, baseType: !1833, size: 64, offset: 128)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1818, line: 122, size: 64, elements: !1834)
!1834 = !{!1835, !1836}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1833, file: !1818, line: 123, baseType: !177, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1833, file: !1818, line: 124, baseType: !7, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1824, file: !1818, line: 193, baseType: !7, size: 32, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1824, file: !1818, line: 196, baseType: !1816, size: 32, offset: 224)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1824, file: !1818, line: 200, baseType: !51, size: 32, offset: 256)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1824, file: !1818, line: 202, baseType: !1841, size: 32, offset: 288)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!7, !1816, !51, !201, !7}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1824, file: !1818, line: 204, baseType: !1845, size: 32, offset: 320)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!7, !1816, !51, !331, !7}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1824, file: !1818, line: 207, baseType: !1849, size: 32, offset: 352)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!1852, !1816, !51, !1852, !7}
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !922, line: 116, baseType: !174)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1824, file: !1818, line: 208, baseType: !1854, size: 32, offset: 384)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!7, !1816, !51}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1824, file: !1818, line: 211, baseType: !1833, size: 64, offset: 416)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1824, file: !1818, line: 212, baseType: !177, size: 32, offset: 480)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1824, file: !1818, line: 213, baseType: !7, size: 32, offset: 512)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1824, file: !1818, line: 216, baseType: !1861, size: 24, offset: 544)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 24, elements: !1862)
!1862 = !{!1863}
!1863 = !DISubrange(count: 3)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1824, file: !1818, line: 217, baseType: !1865, size: 8, offset: 568)
!1865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 8, elements: !446)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1824, file: !1818, line: 220, baseType: !1833, size: 64, offset: 576)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1824, file: !1818, line: 223, baseType: !7, size: 32, offset: 640)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1824, file: !1818, line: 224, baseType: !1869, size: 32, offset: 672)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !922, line: 46, baseType: !174)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1824, file: !1818, line: 231, baseType: !1871, size: 32, offset: 704)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1818, line: 35, baseType: !1872)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1873, line: 34, baseType: !1874)
!1873 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1873, line: 33, flags: DIFlagFwdDecl)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1824, file: !1818, line: 233, baseType: !1877, size: 64, offset: 736)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !922, line: 170, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !922, line: 162, size: 64, elements: !1879)
!1879 = !{!1880, !1881}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1878, file: !922, line: 164, baseType: !7, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1878, file: !922, line: 169, baseType: !1882, size: 32, offset: 32)
!1882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1878, file: !922, line: 165, size: 32, elements: !1883)
!1883 = !{!1884, !1887}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1882, file: !922, line: 167, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1886, line: 116, baseType: !7)
!1886 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1882, file: !922, line: 168, baseType: !229, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1824, file: !1818, line: 234, baseType: !7, size: 32, offset: 800)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !1817, file: !1818, line: 386, baseType: !1822, size: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !1817, file: !1818, line: 386, baseType: !1822, size: 32, offset: 96)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !1817, file: !1818, line: 388, baseType: !7, size: 32, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !1817, file: !1818, line: 390, baseType: !201, size: 32, offset: 160)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !1817, file: !1818, line: 392, baseType: !7, size: 32, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !1817, file: !1818, line: 394, baseType: !7, size: 32, offset: 224)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !1817, file: !1818, line: 395, baseType: !1896, size: 32, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !1818, line: 45, flags: DIFlagFwdDecl)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !1817, file: !1818, line: 397, baseType: !1899, size: 32, offset: 288)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !1818, line: 349, size: 128, elements: !1901)
!1901 = !{!1902, !1914, !1915, !1916}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1900, file: !1818, line: 352, baseType: !1903, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !1818, line: 52, size: 192, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1911}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1904, file: !1818, line: 54, baseType: !1903, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1904, file: !1818, line: 55, baseType: !7, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1904, file: !1818, line: 55, baseType: !7, size: 32, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1904, file: !1818, line: 55, baseType: !7, size: 32, offset: 96)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1904, file: !1818, line: 55, baseType: !7, size: 32, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1904, file: !1818, line: 56, baseType: !1912, size: 32, offset: 160)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 32, elements: !446)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !1818, line: 22, baseType: !195)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1900, file: !1818, line: 353, baseType: !7, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1900, file: !1818, line: 354, baseType: !1903, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1900, file: !1818, line: 355, baseType: !1917, size: 32, offset: 96)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !1817, file: !1818, line: 399, baseType: !1919, size: 32, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{null, !1816}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !1817, file: !1818, line: 401, baseType: !7, size: 32, offset: 352)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !1817, file: !1818, line: 404, baseType: !7, size: 32, offset: 384)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !1817, file: !1818, line: 405, baseType: !201, size: 32, offset: 416)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !1817, file: !1818, line: 407, baseType: !1926, size: 32, offset: 448)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !1818, line: 324, size: 192, elements: !1928)
!1928 = !{!1929, !1931, !1932, !1933}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1927, file: !1818, line: 325, baseType: !1930, size: 48)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 48, elements: !1862)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1927, file: !1818, line: 326, baseType: !1930, size: 48, offset: 48)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1927, file: !1818, line: 327, baseType: !322, size: 16, offset: 96)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1927, file: !1818, line: 330, baseType: !1672, size: 64, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !1817, file: !1818, line: 408, baseType: !1935, size: 32, offset: 480)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !1818, line: 60, size: 288, elements: !1937)
!1937 = !{!1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1936, file: !1818, line: 62, baseType: !7, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1936, file: !1818, line: 63, baseType: !7, size: 32, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1936, file: !1818, line: 64, baseType: !7, size: 32, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1936, file: !1818, line: 65, baseType: !7, size: 32, offset: 96)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1936, file: !1818, line: 66, baseType: !7, size: 32, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1936, file: !1818, line: 67, baseType: !7, size: 32, offset: 160)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1936, file: !1818, line: 68, baseType: !7, size: 32, offset: 192)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1936, file: !1818, line: 69, baseType: !7, size: 32, offset: 224)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1936, file: !1818, line: 70, baseType: !7, size: 32, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !1817, file: !1818, line: 409, baseType: !201, size: 32, offset: 512)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !1817, file: !1818, line: 412, baseType: !1949, size: 32, offset: 544)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{null, !7}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !1817, file: !1818, line: 416, baseType: !1954, size: 32, offset: 576)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !1818, line: 90, size: 1120, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1963}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1955, file: !1818, line: 91, baseType: !1954, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1955, file: !1818, line: 92, baseType: !7, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1955, file: !1818, line: 93, baseType: !1960, size: 1024, offset: 64)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 1024, elements: !1961)
!1961 = !{!1962}
!1962 = !DISubrange(count: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !1955, file: !1818, line: 94, baseType: !1964, size: 32, offset: 1088)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !1818, line: 79, size: 2112, elements: !1966)
!1966 = !{!1967, !1969, !1970, !1971}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1965, file: !1818, line: 80, baseType: !1968, size: 1024)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 1024, elements: !1961)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1965, file: !1818, line: 81, baseType: !1968, size: 1024, offset: 1024)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1965, file: !1818, line: 83, baseType: !1913, size: 32, offset: 2048)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1965, file: !1818, line: 86, baseType: !1913, size: 32, offset: 2080)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !1817, file: !1818, line: 417, baseType: !1955, size: 1120, offset: 608)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !1817, file: !1818, line: 420, baseType: !1974, size: 96, offset: 1728)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !1818, line: 296, size: 96, elements: !1975)
!1975 = !{!1976, !1978, !1979}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1974, file: !1818, line: 298, baseType: !1977, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1974, file: !1818, line: 299, baseType: !7, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1974, file: !1818, line: 300, baseType: !1822, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !1817, file: !1818, line: 421, baseType: !1822, size: 32, offset: 1824)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !1817, file: !1818, line: 422, baseType: !1982, size: 32, offset: 1856)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !1818, line: 359, size: 640, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1991, !1992, !1993, !1994, !1995, !1996}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1983, file: !1818, line: 362, baseType: !201, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1983, file: !1818, line: 363, baseType: !1877, size: 64, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1983, file: !1818, line: 364, baseType: !1877, size: 64, offset: 96)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1983, file: !1818, line: 365, baseType: !1877, size: 64, offset: 160)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1983, file: !1818, line: 366, baseType: !1990, size: 64, offset: 224)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 64, elements: !235)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1983, file: !1818, line: 367, baseType: !7, size: 32, offset: 288)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1983, file: !1818, line: 368, baseType: !1877, size: 64, offset: 320)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1983, file: !1818, line: 369, baseType: !1877, size: 64, offset: 384)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1983, file: !1818, line: 370, baseType: !1877, size: 64, offset: 448)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1983, file: !1818, line: 371, baseType: !1877, size: 64, offset: 512)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1983, file: !1818, line: 372, baseType: !1877, size: 64, offset: 576)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !1817, file: !1818, line: 423, baseType: !201, size: 32, offset: 1888)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1886, line: 46, baseType: !30)
!1999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2000, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2001, globals: !2002, splitDebugInlining: false, nameTableKind: None)
!2000 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2001 = !{!201, !1814}
!2002 = !{!1808}
!2003 = !{!2004, !2005, !2006, !2007}
!2004 = !DILocalVariable(name: "r", arg: 1, scope: !1810, file: !1811, line: 98, type: !1816)
!2005 = !DILocalVariable(name: "nbytes", arg: 2, scope: !1810, file: !1811, line: 98, type: !1998)
!2006 = !DILocalVariable(name: "prev_heap_end", scope: !1810, file: !1811, line: 102, type: !201)
!2007 = !DILocalVariable(name: "stack", scope: !1810, file: !1811, line: 103, type: !201)
!2008 = !DIGlobalVariableExpression(var: !2009, expr: !DIExpression())
!2009 = distinct !DIGlobalVariable(name: "test_xml", scope: !2010, file: !2011, line: 46, type: !2088, isLocal: false, isDefinition: true)
!2010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2012, retainedTypes: !2013, globals: !2014, splitDebugInlining: false, nameTableKind: None)
!2011 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/xml/src/xml_test.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2012 = !{!1172, !350, !1266}
!2013 = !{!1236, !51, !201}
!2014 = !{!2008, !2015, !2085}
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "types", scope: !2017, file: !2011, line: 78, type: !2084, isLocal: true, isDefinition: true)
!2017 = distinct !DISubprogram(name: "xml_main", scope: !2011, file: !2011, line: 63, type: !2018, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !2020)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!7, !7, !1278}
!2020 = !{!2021, !2022, !2023, !2024, !2070, !2071, !2082}
!2021 = !DILocalVariable(name: "argc", arg: 1, scope: !2017, file: !2011, line: 63, type: !7)
!2022 = !DILocalVariable(name: "argv", arg: 2, scope: !2017, file: !2011, line: 64, type: !1278)
!2023 = !DILocalVariable(name: "i", scope: !2017, file: !2011, line: 66, type: !7)
!2024 = !DILocalVariable(name: "tree", scope: !2017, file: !2011, line: 69, type: !2025)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !2028)
!2028 = !{!2029, !2030, !2032, !2033, !2034, !2035, !2036, !2068, !2069}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2027, file: !1173, line: 139, baseType: !1209, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2027, file: !1173, line: 140, baseType: !2031, size: 32, offset: 32)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2027, file: !1173, line: 141, baseType: !2031, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2027, file: !1173, line: 142, baseType: !2031, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2027, file: !1173, line: 143, baseType: !2031, size: 32, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !2027, file: !1173, line: 144, baseType: !2031, size: 32, offset: 160)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2027, file: !1173, line: 145, baseType: !2037, size: 128, offset: 192)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !2038)
!2038 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !2039)
!2039 = !{!2040, !2053, !2054, !2055, !2056, !2062}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !2038, file: !1173, line: 129, baseType: !2041, size: 96)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !2043)
!2043 = !{!2044, !2045, !2046}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2042, file: !1173, line: 110, baseType: !201, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !2042, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2042, file: !1173, line: 112, baseType: !2047, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !2050)
!2050 = !{!2051, !2052}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2049, file: !1173, line: 104, baseType: !201, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2049, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !2038, file: !1173, line: 130, baseType: !7, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2038, file: !1173, line: 131, baseType: !201, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !2038, file: !1173, line: 132, baseType: !1236, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2038, file: !1173, line: 133, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !2058, file: !1173, line: 117, baseType: !7, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2058, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2038, file: !1173, line: 134, baseType: !2063, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2064, file: !1173, line: 123, baseType: !51, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2064, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !2027, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2027, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!2070 = !DILocalVariable(name: "node", scope: !2017, file: !2011, line: 70, type: !2025)
!2071 = !DILocalVariable(name: "ind", scope: !2017, file: !2011, line: 72, type: !2072)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_index_t", file: !1173, line: 162, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_index_s", file: !1173, line: 153, size: 160, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2079, !2080}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2074, file: !1173, line: 155, baseType: !201, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !2074, file: !1173, line: 156, baseType: !7, size: 32, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_nodes", scope: !2074, file: !1173, line: 157, baseType: !7, size: 32, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "cur_node", scope: !2074, file: !1173, line: 158, baseType: !7, size: 32, offset: 96)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2074, file: !1173, line: 159, baseType: !2081, size: 32, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2082 = !DILocalVariable(name: "text", scope: !2083, file: !2011, line: 591, type: !331)
!2083 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 590, column: 5)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 160, elements: !588)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "event_counts", scope: !2010, file: !2011, line: 44, type: !2087, isLocal: true, isDefinition: true)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 192, elements: !895)
!2088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 6944, elements: !2089)
!2089 = !{!2090}
!2090 = !DISubrange(count: 868)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "log_control_block_xml_example", scope: !2093, file: !2094, line: 58, type: !2098, isLocal: false, isDefinition: true)
!2093 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2094, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2095, retainedTypes: !2096, globals: !2097, splitDebugInlining: false, nameTableKind: None)
!2094 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/xml/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2095 = !{!345, !350, !1591}
!2096 = !{!869, !51, !884}
!2097 = !{!2091}
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !2099, file: !346, line: 90, baseType: !331, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !2099, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !2099, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !2099, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !2099, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2108, file: !2113, line: 4, type: !2119, isLocal: false, isDefinition: true)
!2108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2109, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2110, splitDebugInlining: false, nameTableKind: None)
!2109 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2110 = !{!2106, !2111, !2117}
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2108, file: !2113, line: 5, type: !2114, isLocal: false, isDefinition: true)
!2113 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 88, elements: !2115)
!2115 = !{!2116}
!2116 = !DISubrange(count: 11)
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2108, file: !2113, line: 6, type: !2114, isLocal: false, isDefinition: true)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 248, elements: !2120)
!2120 = !{!2121}
!2121 = !DISubrange(count: 31)
!2122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2124, retainedTypes: !2131, splitDebugInlining: false, nameTableKind: None)
!2123 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_trng.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2124 = !{!2125}
!2125 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2126, line: 92, baseType: !7, size: 32, elements: !2127)
!2126 = !DIFile(filename: "../../../../../driver/chip/inc/hal_trng.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2127 = !{!2128, !2129, !2130}
!2128 = !DIEnumerator(name: "HAL_TRNG_STATUS_ERROR", value: -2)
!2129 = !DIEnumerator(name: "HAL_TRNG_STATUS_INVALID_PARAMETER", value: -1)
!2130 = !DIEnumerator(name: "HAL_TRNG_STATUS_OK", value: 0)
!2131 = !{!284, !286}
!2132 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2133, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2134, splitDebugInlining: false, nameTableKind: None)
!2133 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2134 = !{!2135, !2160}
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !2138)
!2138 = !{!2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2137, file: !531, line: 397, baseType: !565, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2137, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2137, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2137, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2137, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2137, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2137, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2137, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2137, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2137, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2137, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2137, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2137, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2137, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2137, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2137, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2137, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2137, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2137, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2137, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2137, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !531, line: 378, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 363, size: 28704, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2162, file: !531, line: 365, baseType: !535, size: 256)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2162, file: !531, line: 366, baseType: !537, size: 768, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2162, file: !531, line: 367, baseType: !535, size: 256, offset: 1024)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2162, file: !531, line: 368, baseType: !537, size: 768, offset: 1280)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2162, file: !531, line: 369, baseType: !535, size: 256, offset: 2048)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2162, file: !531, line: 370, baseType: !537, size: 768, offset: 2304)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2162, file: !531, line: 371, baseType: !535, size: 256, offset: 3072)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2162, file: !531, line: 372, baseType: !537, size: 768, offset: 3328)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2162, file: !531, line: 373, baseType: !535, size: 256, offset: 4096)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2162, file: !531, line: 374, baseType: !548, size: 1792, offset: 4352)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2162, file: !531, line: 375, baseType: !552, size: 1920, offset: 6144)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2162, file: !531, line: 376, baseType: !556, size: 20608, offset: 8064)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2162, file: !531, line: 377, baseType: !60, size: 32, offset: 28672)
!2177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2179, splitDebugInlining: false, nameTableKind: None)
!2178 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2179 = !{!174, !137}
!2180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2182, retainedTypes: !2183, splitDebugInlining: false, nameTableKind: None)
!2181 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2182 = !{!1717, !44}
!2183 = !{!51}
!2184 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2185, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2186, splitDebugInlining: false, nameTableKind: None)
!2185 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/ept/src/bsp_gpio_ept_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2186 = !{!61, !59}
!2187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2188, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2189, splitDebugInlining: false, nameTableKind: None)
!2188 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2189 = !{!2190, !884, !862, !51, !2200}
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !880, line: 191, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !880, line: 181, size: 160, elements: !2193)
!2193 = !{!2194, !2195, !2197, !2198, !2199}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !2192, file: !880, line: 184, baseType: !884, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !2192, file: !880, line: 185, baseType: !2196, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !2192, file: !880, line: 186, baseType: !2196, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !2192, file: !880, line: 187, baseType: !51, size: 32, offset: 96)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !2192, file: !880, line: 188, baseType: !51, size: 32, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !880, line: 212, baseType: !2202)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !880, line: 205, size: 160, elements: !2203)
!2203 = !{!2204, !2205, !2206}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !2202, file: !880, line: 208, baseType: !862, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !2202, file: !880, line: 209, baseType: !2190, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !2202, file: !880, line: 210, baseType: !2207, size: 96, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !880, line: 200, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !880, line: 193, size: 96, elements: !2209)
!2209 = !{!2210, !2211, !2212}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !2208, file: !880, line: 196, baseType: !884, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !2208, file: !880, line: 197, baseType: !2196, size: 32, offset: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !2208, file: !880, line: 198, baseType: !2196, size: 32, offset: 64)
!2213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2214, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2215, splitDebugInlining: false, nameTableKind: None)
!2214 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/mt7687/port_tick.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2215 = !{!884, !2216}
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !531, line: 656, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 650, size: 128, elements: !2219)
!2219 = !{!2220, !2221, !2222, !2223}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2218, file: !531, line: 652, baseType: !60, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2218, file: !531, line: 653, baseType: !60, size: 32, offset: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2218, file: !531, line: 654, baseType: !60, size: 32, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2218, file: !531, line: 655, baseType: !565, size: 32, offset: 96)
!2224 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2225, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !2183, splitDebugInlining: false, nameTableKind: None)
!2225 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-attr.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !2183, splitDebugInlining: false, nameTableKind: None)
!2227 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-get.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2228 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2229, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !2183, splitDebugInlining: false, nameTableKind: None)
!2229 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-index.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2231, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !2183, splitDebugInlining: false, nameTableKind: None)
!2231 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-node.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2233, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !2183, splitDebugInlining: false, nameTableKind: None)
!2233 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-search.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2234 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2235, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2183, splitDebugInlining: false, nameTableKind: None)
!2235 = !DIFile(filename: "../../../../../middleware/third_party/xml/src/mxml-string.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2237, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2238, splitDebugInlining: false, nameTableKind: None)
!2237 = !DIFile(filename: "../../../../../kernel/service/src/os_port_callback.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2238 = !{!30, !201}
!2239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2240, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2241, retainedTypes: !2242, splitDebugInlining: false, nameTableKind: None)
!2240 = !DIFile(filename: "../../../../../project/mt7687_hdk/apps/xml/src/sys_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2241 = !{!657, !412, !350, !393, !2125}
!2242 = !{!2243, !30}
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !383, line: 204, baseType: !393)
!2244 = !{!"Ubuntu clang version 14.0.6"}
!2245 = !{i32 7, !"Dwarf Version", i32 2}
!2246 = !{i32 2, !"Debug Info Version", i32 3}
!2247 = !{i32 1, !"wchar_size", i32 4}
!2248 = !{i32 1, !"min_enum_size", i32 4}
!2249 = !{i32 1, !"branch-target-enforcement", i32 0}
!2250 = !{i32 1, !"sign-return-address", i32 0}
!2251 = !{i32 1, !"sign-return-address-all", i32 0}
!2252 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2253 = !{i32 7, !"frame-pointer", i32 2}
!2254 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !3, file: !3, line: 86, type: !2255, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2257)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{!61}
!2257 = !{!2258, !2259}
!2258 = !DILocalVariable(name: "counter", scope: !2254, file: !3, line: 88, type: !61)
!2259 = !DILocalVariable(name: "ret", scope: !2254, file: !3, line: 89, type: !2260)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !21, line: 393, baseType: !20)
!2261 = !DILocation(line: 88, column: 5, scope: !2254)
!2262 = !DILocation(line: 0, scope: !2254)
!2263 = !DILocation(line: 88, column: 14, scope: !2254)
!2264 = !DILocation(line: 90, column: 11, scope: !2254)
!2265 = !DILocation(line: 91, column: 13, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 91, column: 9)
!2267 = !DILocation(line: 91, column: 9, scope: !2254)
!2268 = !DILocation(line: 92, column: 9, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2266, file: !3, line: 91, column: 35)
!2270 = !DILocation(line: 94, column: 12, scope: !2254)
!2271 = !DILocation(line: 95, column: 1, scope: !2254)
!2272 = !DILocation(line: 94, column: 5, scope: !2254)
!2273 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !3, file: !3, line: 97, type: !154, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1397)
!2274 = !DILocation(line: 99, column: 20, scope: !2273)
!2275 = !DILocation(line: 100, column: 1, scope: !2273)
!2276 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !3, file: !3, line: 101, type: !154, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1397)
!2277 = !DILocation(line: 103, column: 20, scope: !2276)
!2278 = !DILocation(line: 104, column: 1, scope: !2276)
!2279 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !3, file: !3, line: 105, type: !154, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1397)
!2280 = !DILocation(line: 107, column: 25, scope: !2279)
!2281 = !DILocation(line: 108, column: 1, scope: !2279)
!2282 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !3, file: !3, line: 109, type: !154, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1397)
!2283 = !DILocation(line: 111, column: 25, scope: !2282)
!2284 = !DILocation(line: 112, column: 1, scope: !2282)
!2285 = distinct !DISubprogram(name: "get_sf_lock", scope: !3, file: !3, line: 114, type: !2286, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2288)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!527}
!2288 = !{!2289}
!2289 = !DILocalVariable(name: "savedMask", scope: !2285, file: !3, line: 116, type: !61)
!2290 = !DILocation(line: 117, column: 17, scope: !2285)
!2291 = !DILocation(line: 0, scope: !2285)
!2292 = !DILocation(line: 118, column: 9, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 118, column: 9)
!2294 = !DILocation(line: 118, column: 9, scope: !2285)
!2295 = !DILocation(line: 119, column: 17, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 118, column: 24)
!2297 = !DILocation(line: 121, column: 9, scope: !2296)
!2298 = !DILocation(line: 0, scope: !2293)
!2299 = !DILocation(line: 130, column: 1, scope: !2285)
!2300 = distinct !DISubprogram(name: "free_sf_lock", scope: !3, file: !3, line: 132, type: !154, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2301)
!2301 = !{!2302}
!2302 = !DILocalVariable(name: "savedMask", scope: !2300, file: !3, line: 134, type: !61)
!2303 = !DILocation(line: 135, column: 17, scope: !2300)
!2304 = !DILocation(line: 0, scope: !2300)
!2305 = !DILocation(line: 136, column: 9, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2300, file: !3, line: 136, column: 9)
!2307 = !DILocation(line: 136, column: 9, scope: !2300)
!2308 = !DILocation(line: 137, column: 17, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 136, column: 24)
!2310 = !DILocation(line: 138, column: 9, scope: !2309)
!2311 = !DILocation(line: 143, column: 1, scope: !2300)
!2312 = !DILocation(line: 140, column: 9, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 139, column: 12)
!2314 = !DILocation(line: 141, column: 9, scope: !2313)
!2315 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !3, file: !3, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2316)
!2316 = !{!2317}
!2317 = !DILocalVariable(name: "Result", scope: !2315, file: !3, line: 147, type: !527)
!2318 = !DILocation(line: 148, column: 5, scope: !2315)
!2319 = !DILocation(line: 149, column: 18, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2315, file: !3, line: 148, column: 8)
!2321 = !DILocation(line: 0, scope: !2315)
!2322 = !DILocation(line: 150, column: 21, scope: !2315)
!2323 = !DILocation(line: 150, column: 5, scope: !2320)
!2324 = distinct !{!2324, !2318, !2325}
!2325 = !DILocation(line: 150, column: 25, scope: !2315)
!2326 = !DILocation(line: 151, column: 1, scope: !2315)
!2327 = distinct !DISubprogram(name: "release_sf_lock", scope: !3, file: !3, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1397)
!2328 = !DILocation(line: 160, column: 5, scope: !2327)
!2329 = !DILocation(line: 161, column: 1, scope: !2327)
!2330 = distinct !DISubprogram(name: "flash_sfc_config", scope: !3, file: !3, line: 186, type: !2331, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2333)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!527, !54}
!2333 = !{!2334, !2335}
!2334 = !DILocalVariable(name: "mode", arg: 1, scope: !2330, file: !3, line: 186, type: !54)
!2335 = !DILocalVariable(name: "ret", scope: !2330, file: !3, line: 188, type: !2336)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !87, line: 56, baseType: !7)
!2337 = !DILocation(line: 0, scope: !2330)
!2338 = !DILocation(line: 189, column: 5, scope: !2330)
!2339 = !DILocation(line: 190, column: 5, scope: !2330)
!2340 = !DILocation(line: 191, column: 9, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2330, file: !3, line: 191, column: 9)
!2342 = !DILocation(line: 191, column: 35, scope: !2341)
!2343 = !DILocation(line: 191, column: 9, scope: !2330)
!2344 = !DILocation(line: 193, column: 26, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2341, file: !3, line: 191, column: 44)
!2346 = !DILocation(line: 194, column: 5, scope: !2345)
!2347 = !DILocation(line: 195, column: 5, scope: !2330)
!2348 = !DILocation(line: 197, column: 5, scope: !2330)
!2349 = distinct !DISubprogram(name: "sfc_pad_config", scope: !3, file: !3, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2350)
!2350 = !{!2351}
!2351 = !DILocalVariable(name: "pad_io_setting", scope: !2349, file: !3, line: 166, type: !61)
!2352 = !DILocation(line: 0, scope: !2349)
!2353 = !DILocation(line: 168, column: 22, scope: !2349)
!2354 = !DILocation(line: 169, column: 20, scope: !2349)
!2355 = !DILocation(line: 170, column: 39, scope: !2349)
!2356 = !DILocation(line: 185, column: 1, scope: !2349)
!2357 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !3, file: !3, line: 200, type: !2358, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2360)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{null, !51, !210, !61}
!2360 = !{!2361, !2362, !2363}
!2361 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !2357, file: !3, line: 200, type: !51)
!2362 = !DILocalVariable(name: "buffer", arg: 2, scope: !2357, file: !3, line: 200, type: !210)
!2363 = !DILocalVariable(name: "length", arg: 3, scope: !2357, file: !3, line: 200, type: !61)
!2364 = !DILocation(line: 0, scope: !2357)
!2365 = !DILocation(line: 202, column: 5, scope: !2357)
!2366 = !DILocation(line: 203, column: 5, scope: !2357)
!2367 = !DILocation(line: 204, column: 5, scope: !2357)
!2368 = !DILocation(line: 205, column: 1, scope: !2357)
!2369 = distinct !DISubprogram(name: "flash_sfc_read", scope: !3, file: !3, line: 207, type: !2370, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2372)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!527, !61, !61, !210}
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2378}
!2373 = !DILocalVariable(name: "address", arg: 1, scope: !2369, file: !3, line: 207, type: !61)
!2374 = !DILocalVariable(name: "length", arg: 2, scope: !2369, file: !3, line: 207, type: !61)
!2375 = !DILocalVariable(name: "buffer", arg: 3, scope: !2369, file: !3, line: 207, type: !210)
!2376 = !DILocalVariable(name: "ret", scope: !2369, file: !3, line: 209, type: !2336)
!2377 = !DILocalVariable(name: "u4Redidual", scope: !2369, file: !3, line: 210, type: !159)
!2378 = !DILocalVariable(name: "u4ReadLen", scope: !2369, file: !3, line: 211, type: !159)
!2379 = !DILocation(line: 0, scope: !2369)
!2380 = !DILocation(line: 213, column: 5, scope: !2369)
!2381 = !DILocation(line: 214, column: 31, scope: !2369)
!2382 = !DILocation(line: 214, column: 5, scope: !2369)
!2383 = !DILocation(line: 216, column: 31, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 216, column: 13)
!2385 = distinct !DILexicalBlock(scope: !2369, file: !3, line: 214, column: 46)
!2386 = !DILocation(line: 216, column: 13, scope: !2385)
!2387 = !DILocation(line: 217, column: 13, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2384, file: !3, line: 216, column: 48)
!2389 = !DILocation(line: 218, column: 9, scope: !2388)
!2390 = !DILocation(line: 219, column: 13, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !3, line: 218, column: 55)
!2392 = distinct !DILexicalBlock(scope: !2384, file: !3, line: 218, column: 20)
!2393 = !DILocation(line: 220, column: 9, scope: !2391)
!2394 = !DILocation(line: 222, column: 25, scope: !2385)
!2395 = !DILocation(line: 223, column: 27, scope: !2385)
!2396 = !DILocation(line: 224, column: 33, scope: !2385)
!2397 = distinct !{!2397, !2382, !2398}
!2398 = !DILocation(line: 225, column: 5, scope: !2369)
!2399 = !DILocation(line: 227, column: 27, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2369, file: !3, line: 227, column: 9)
!2401 = !DILocation(line: 227, column: 9, scope: !2369)
!2402 = !DILocation(line: 228, column: 9, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 227, column: 44)
!2404 = !DILocation(line: 229, column: 5, scope: !2403)
!2405 = !DILocation(line: 230, column: 9, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 229, column: 51)
!2407 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 229, column: 16)
!2408 = !DILocation(line: 231, column: 5, scope: !2406)
!2409 = !DILocation(line: 232, column: 22, scope: !2369)
!2410 = !DILocation(line: 233, column: 5, scope: !2369)
!2411 = !DILocation(line: 234, column: 5, scope: !2369)
!2412 = distinct !DISubprogram(name: "flash_sfc_write", scope: !3, file: !3, line: 238, type: !2413, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2416)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{!527, !61, !61, !2415}
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!2416 = !{!2417, !2418, !2419, !2420}
!2417 = !DILocalVariable(name: "address", arg: 1, scope: !2412, file: !3, line: 238, type: !61)
!2418 = !DILocalVariable(name: "length", arg: 2, scope: !2412, file: !3, line: 238, type: !61)
!2419 = !DILocalVariable(name: "buffer", arg: 3, scope: !2412, file: !3, line: 238, type: !2415)
!2420 = !DILocalVariable(name: "ret", scope: !2412, file: !3, line: 240, type: !2336)
!2421 = !DILocation(line: 0, scope: !2412)
!2422 = !DILocation(line: 242, column: 5, scope: !2412)
!2423 = !DILocation(line: 244, column: 5, scope: !2412)
!2424 = !DILocation(line: 245, column: 5, scope: !2412)
!2425 = !DILocation(line: 247, column: 11, scope: !2412)
!2426 = !DILocation(line: 248, column: 22, scope: !2412)
!2427 = !DILocation(line: 250, column: 5, scope: !2412)
!2428 = !DILocation(line: 252, column: 5, scope: !2412)
!2429 = !DILocation(line: 253, column: 5, scope: !2412)
!2430 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !3, file: !3, line: 256, type: !2431, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2433)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!527, !61, !61}
!2433 = !{!2434, !2435, !2436}
!2434 = !DILocalVariable(name: "address", arg: 1, scope: !2430, file: !3, line: 256, type: !61)
!2435 = !DILocalVariable(name: "type", arg: 2, scope: !2430, file: !3, line: 256, type: !61)
!2436 = !DILocalVariable(name: "ret", scope: !2430, file: !3, line: 258, type: !2336)
!2437 = !DILocation(line: 0, scope: !2430)
!2438 = !DILocation(line: 259, column: 5, scope: !2430)
!2439 = !DILocation(line: 261, column: 5, scope: !2430)
!2440 = !DILocation(line: 262, column: 5, scope: !2430)
!2441 = !DILocation(line: 264, column: 5, scope: !2430)
!2442 = !DILocation(line: 265, column: 5, scope: !2430)
!2443 = !DILocation(line: 267, column: 9, scope: !2430)
!2444 = !DILocation(line: 268, column: 22, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2446, file: !3, line: 268, column: 13)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 267, column: 37)
!2447 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 267, column: 9)
!2448 = !DILocation(line: 268, column: 31, scope: !2445)
!2449 = !DILocation(line: 268, column: 13, scope: !2446)
!2450 = !DILocation(line: 275, column: 15, scope: !2446)
!2451 = !DILocation(line: 276, column: 5, scope: !2446)
!2452 = !DILocation(line: 277, column: 22, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 277, column: 13)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 276, column: 45)
!2455 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 276, column: 16)
!2456 = !DILocation(line: 277, column: 32, scope: !2453)
!2457 = !DILocation(line: 277, column: 13, scope: !2454)
!2458 = !DILocation(line: 284, column: 15, scope: !2454)
!2459 = !DILocation(line: 285, column: 5, scope: !2454)
!2460 = !DILocation(line: 286, column: 22, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2462, file: !3, line: 286, column: 13)
!2462 = distinct !DILexicalBlock(scope: !2463, file: !3, line: 285, column: 45)
!2463 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 285, column: 16)
!2464 = !DILocation(line: 286, column: 32, scope: !2461)
!2465 = !DILocation(line: 286, column: 13, scope: !2462)
!2466 = !DILocation(line: 293, column: 15, scope: !2462)
!2467 = !DILocation(line: 294, column: 5, scope: !2462)
!2468 = !DILocation(line: 301, column: 1, scope: !2430)
!2469 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !3, file: !3, line: 304, type: !154, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2470)
!2470 = !{!2471, !2472}
!2471 = !DILocalVariable(name: "sr", scope: !2469, file: !3, line: 306, type: !54)
!2472 = !DILocalVariable(name: "savedMask", scope: !2469, file: !3, line: 307, type: !61)
!2473 = !DILocation(line: 306, column: 5, scope: !2469)
!2474 = !DILocation(line: 0, scope: !2469)
!2475 = !DILocation(line: 306, column: 13, scope: !2469)
!2476 = !DILocation(line: 329, column: 17, scope: !2469)
!2477 = !DILocation(line: 330, column: 11, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 330, column: 9)
!2479 = !{i8 0, i8 2}
!2480 = !DILocation(line: 330, column: 30, scope: !2478)
!2481 = !DILocation(line: 331, column: 13, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2483, file: !3, line: 331, column: 13)
!2483 = distinct !DILexicalBlock(scope: !2478, file: !3, line: 330, column: 53)
!2484 = !DILocation(line: 331, column: 32, scope: !2482)
!2485 = !DILocation(line: 331, column: 13, scope: !2483)
!2486 = !DILocation(line: 333, column: 13, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 331, column: 37)
!2488 = !DILocation(line: 337, column: 19, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2483, file: !3, line: 337, column: 13)
!2490 = !DILocation(line: 337, column: 22, scope: !2489)
!2491 = !DILocation(line: 337, column: 15, scope: !2489)
!2492 = !DILocation(line: 337, column: 13, scope: !2483)
!2493 = !DILocation(line: 339, column: 13, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 337, column: 44)
!2495 = !DILocation(line: 341, column: 13, scope: !2494)
!2496 = !DILocation(line: 342, column: 21, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 342, column: 21)
!2498 = distinct !DILexicalBlock(scope: !2494, file: !3, line: 341, column: 23)
!2499 = !DILocation(line: 342, column: 40, scope: !2497)
!2500 = !DILocation(line: 342, column: 21, scope: !2498)
!2501 = !DILocation(line: 344, column: 21, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2497, file: !3, line: 342, column: 45)
!2503 = !DILocation(line: 346, column: 27, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 346, column: 21)
!2505 = !DILocation(line: 346, column: 30, scope: !2504)
!2506 = !DILocation(line: 346, column: 23, scope: !2504)
!2507 = !DILocation(line: 346, column: 21, scope: !2498)
!2508 = distinct !{!2508, !2495, !2509}
!2509 = !DILocation(line: 349, column: 13, scope: !2494)
!2510 = !DILocation(line: 350, column: 13, scope: !2494)
!2511 = !DILocation(line: 352, column: 9, scope: !2494)
!2512 = !DILocation(line: 353, column: 13, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 352, column: 16)
!2514 = !DILocation(line: 356, column: 5, scope: !2469)
!2515 = !DILocation(line: 357, column: 1, scope: !2469)
!2516 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !3, file: !3, line: 359, type: !2517, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2519)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!527, !51, !61}
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528}
!2520 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2516, file: !3, line: 359, type: !51)
!2521 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2516, file: !3, line: 359, type: !61)
!2522 = !DILocalVariable(name: "result", scope: !2516, file: !3, line: 361, type: !527)
!2523 = !DILocalVariable(name: "savedMask", scope: !2516, file: !3, line: 362, type: !61)
!2524 = !DILocalVariable(name: "status_busy", scope: !2516, file: !3, line: 363, type: !54)
!2525 = !DILocalVariable(name: "status_suspend", scope: !2516, file: !3, line: 363, type: !54)
!2526 = !DILocalVariable(name: "sr", scope: !2516, file: !3, line: 364, type: !54)
!2527 = !DILocalVariable(name: "sr1", scope: !2516, file: !3, line: 365, type: !54)
!2528 = !DILocalVariable(name: "check_status", scope: !2529, file: !3, line: 383, type: !54)
!2529 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 382, column: 49)
!2530 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 382, column: 9)
!2531 = !DILocation(line: 0, scope: !2516)
!2532 = !DILocation(line: 364, column: 5, scope: !2516)
!2533 = !DILocation(line: 364, column: 13, scope: !2516)
!2534 = !DILocation(line: 365, column: 5, scope: !2516)
!2535 = !DILocation(line: 365, column: 13, scope: !2516)
!2536 = !DILocation(line: 367, column: 9, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 367, column: 9)
!2538 = !DILocation(line: 367, column: 28, scope: !2537)
!2539 = !DILocation(line: 367, column: 9, scope: !2516)
!2540 = !DILocation(line: 368, column: 9, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 367, column: 33)
!2542 = !DILocation(line: 370, column: 23, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 369, column: 12)
!2544 = !DILocation(line: 373, column: 9, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 373, column: 9)
!2546 = !DILocation(line: 373, column: 30, scope: !2545)
!2547 = !DILocation(line: 373, column: 9, scope: !2516)
!2548 = !DILocation(line: 374, column: 9, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2545, file: !3, line: 373, column: 35)
!2550 = !DILocation(line: 376, column: 26, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2545, file: !3, line: 375, column: 12)
!2552 = !DILocation(line: 380, column: 17, scope: !2516)
!2553 = !DILocation(line: 382, column: 27, scope: !2530)
!2554 = !DILocation(line: 382, column: 11, scope: !2530)
!2555 = !DILocation(line: 382, column: 9, scope: !2516)
!2556 = !DILocation(line: 0, scope: !2529)
!2557 = !DILocation(line: 385, column: 13, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2529, file: !3, line: 385, column: 13)
!2559 = !DILocation(line: 385, column: 49, scope: !2558)
!2560 = !DILocation(line: 388, column: 17, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 388, column: 17)
!2562 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 385, column: 84)
!2563 = !DILocation(line: 388, column: 32, scope: !2561)
!2564 = !DILocation(line: 388, column: 17, scope: !2562)
!2565 = !DILocation(line: 399, column: 9, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 396, column: 56)
!2567 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 396, column: 20)
!2568 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 393, column: 20)
!2569 = !DILocation(line: 401, column: 28, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 399, column: 58)
!2571 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 399, column: 20)
!2572 = !DILocation(line: 402, column: 9, scope: !2570)
!2573 = !DILocation(line: 405, column: 20, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2529, file: !3, line: 405, column: 13)
!2575 = !DILocation(line: 405, column: 35, scope: !2574)
!2576 = !DILocation(line: 405, column: 16, scope: !2574)
!2577 = !DILocation(line: 405, column: 52, scope: !2574)
!2578 = !DILocation(line: 406, column: 21, scope: !2574)
!2579 = !DILocation(line: 406, column: 38, scope: !2574)
!2580 = !DILocation(line: 407, column: 13, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2574, file: !3, line: 406, column: 61)
!2582 = !DILocation(line: 410, column: 13, scope: !2581)
!2583 = !DILocation(line: 413, column: 9, scope: !2581)
!2584 = !DILocation(line: 414, column: 13, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2574, file: !3, line: 413, column: 16)
!2586 = !DILocation(line: 0, scope: !2574)
!2587 = !DILocation(line: 434, column: 5, scope: !2516)
!2588 = !DILocation(line: 0, scope: !2530)
!2589 = !DILocation(line: 436, column: 1, scope: !2516)
!2590 = !DILocation(line: 435, column: 5, scope: !2516)
!2591 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !3, file: !3, line: 439, type: !2592, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2594)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!527, !51, !61, !54}
!2594 = !{!2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2595 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2591, file: !3, line: 439, type: !51)
!2596 = !DILocalVariable(name: "addr", arg: 2, scope: !2591, file: !3, line: 439, type: !61)
!2597 = !DILocalVariable(name: "data", arg: 3, scope: !2591, file: !3, line: 439, type: !54)
!2598 = !DILocalVariable(name: "savedMask", scope: !2591, file: !3, line: 441, type: !61)
!2599 = !DILocalVariable(name: "result", scope: !2591, file: !3, line: 442, type: !527)
!2600 = !DILocalVariable(name: "check_data", scope: !2591, file: !3, line: 443, type: !54)
!2601 = !DILocalVariable(name: "status_busy", scope: !2591, file: !3, line: 444, type: !864)
!2602 = !DILocalVariable(name: "sr", scope: !2591, file: !3, line: 445, type: !54)
!2603 = !DILocation(line: 0, scope: !2591)
!2604 = !DILocation(line: 445, column: 5, scope: !2591)
!2605 = !DILocation(line: 445, column: 23, scope: !2591)
!2606 = !DILocation(line: 448, column: 9, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 448, column: 9)
!2608 = !DILocation(line: 448, column: 28, scope: !2607)
!2609 = !DILocation(line: 448, column: 9, scope: !2591)
!2610 = !DILocation(line: 449, column: 9, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2607, file: !3, line: 448, column: 33)
!2612 = !DILocation(line: 451, column: 23, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2607, file: !3, line: 450, column: 12)
!2614 = !DILocation(line: 454, column: 17, scope: !2591)
!2615 = !DILocation(line: 457, column: 9, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 457, column: 9)
!2617 = !DILocation(line: 457, column: 9, scope: !2591)
!2618 = !DILocation(line: 458, column: 9, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 457, column: 28)
!2620 = !DILocation(line: 459, column: 9, scope: !2619)
!2621 = !DILocation(line: 460, column: 9, scope: !2619)
!2622 = !DILocation(line: 461, column: 9, scope: !2619)
!2623 = !DILocation(line: 462, column: 5, scope: !2619)
!2624 = !DILocation(line: 464, column: 33, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 464, column: 15)
!2626 = !DILocation(line: 464, column: 17, scope: !2625)
!2627 = !DILocation(line: 464, column: 15, scope: !2616)
!2628 = !DILocation(line: 465, column: 9, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 464, column: 55)
!2630 = !DILocation(line: 467, column: 23, scope: !2629)
!2631 = !DILocation(line: 467, column: 22, scope: !2629)
!2632 = !DILocation(line: 468, column: 24, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 468, column: 13)
!2634 = !DILocation(line: 474, column: 5, scope: !2591)
!2635 = !DILocation(line: 477, column: 1, scope: !2591)
!2636 = !DILocation(line: 476, column: 5, scope: !2591)
!2637 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !84, file: !84, line: 73, type: !2638, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2640)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{null, !139, !139, !69}
!2640 = !{!2641, !2642, !2643}
!2641 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2637, file: !84, line: 73, type: !139)
!2642 = !DILocalVariable(name: "countValue", arg: 2, scope: !2637, file: !84, line: 73, type: !139)
!2643 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !2637, file: !84, line: 73, type: !69)
!2644 = !DILocation(line: 0, scope: !2637)
!2645 = !DILocation(line: 75, column: 5, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2637, file: !84, line: 75, column: 5)
!2647 = !DILocation(line: 75, column: 5, scope: !2637)
!2648 = !DILocation(line: 75, column: 5, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2646, file: !84, line: 75, column: 5)
!2650 = distinct !{!2650, !2648, !2648}
!2651 = !DILocation(line: 77, column: 9, scope: !2637)
!2652 = !DILocation(line: 78, column: 30, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2654, file: !84, line: 77, column: 24)
!2654 = distinct !DILexicalBlock(scope: !2637, file: !84, line: 77, column: 9)
!2655 = !DILocation(line: 0, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2653, file: !84, line: 79, column: 13)
!2657 = !DILocation(line: 79, column: 13, scope: !2653)
!2658 = !DILocation(line: 80, column: 34, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2656, file: !84, line: 79, column: 37)
!2660 = !DILocation(line: 81, column: 9, scope: !2659)
!2661 = !DILocation(line: 82, column: 34, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2656, file: !84, line: 81, column: 16)
!2663 = !DILocation(line: 85, column: 30, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !84, line: 84, column: 31)
!2665 = distinct !DILexicalBlock(scope: !2654, file: !84, line: 84, column: 16)
!2666 = !DILocation(line: 0, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2664, file: !84, line: 86, column: 13)
!2668 = !DILocation(line: 86, column: 13, scope: !2664)
!2669 = !DILocation(line: 87, column: 34, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2667, file: !84, line: 86, column: 37)
!2671 = !DILocation(line: 88, column: 9, scope: !2670)
!2672 = !DILocation(line: 89, column: 34, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2667, file: !84, line: 88, column: 16)
!2674 = !DILocation(line: 92, column: 1, scope: !2637)
!2675 = distinct !DISubprogram(name: "GPT_Start", scope: !84, file: !84, line: 94, type: !2676, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2678)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{null, !139}
!2678 = !{!2679}
!2679 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2675, file: !84, line: 94, type: !139)
!2680 = !DILocation(line: 0, scope: !2675)
!2681 = !DILocation(line: 96, column: 5, scope: !2675)
!2682 = !DILocation(line: 96, column: 5, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2684, file: !84, line: 96, column: 5)
!2684 = distinct !DILexicalBlock(scope: !2675, file: !84, line: 96, column: 5)
!2685 = distinct !{!2685, !2682, !2682}
!2686 = !DILocation(line: 99, column: 30, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2688, file: !84, line: 98, column: 24)
!2688 = distinct !DILexicalBlock(scope: !2675, file: !84, line: 98, column: 9)
!2689 = !DILocation(line: 100, column: 9, scope: !2687)
!2690 = !DILocation(line: 101, column: 5, scope: !2687)
!2691 = !DILocation(line: 102, column: 30, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2693, file: !84, line: 101, column: 31)
!2693 = distinct !DILexicalBlock(scope: !2688, file: !84, line: 101, column: 16)
!2694 = !DILocation(line: 103, column: 9, scope: !2692)
!2695 = !DILocation(line: 104, column: 5, scope: !2692)
!2696 = !DILocation(line: 105, column: 30, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2698, file: !84, line: 104, column: 31)
!2698 = distinct !DILexicalBlock(scope: !2693, file: !84, line: 104, column: 16)
!2699 = !DILocation(line: 106, column: 5, scope: !2697)
!2700 = !DILocation(line: 108, column: 1, scope: !2675)
!2701 = distinct !DISubprogram(name: "GPT_Stop", scope: !84, file: !84, line: 110, type: !2676, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2702)
!2702 = !{!2703}
!2703 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2701, file: !84, line: 110, type: !139)
!2704 = !DILocation(line: 0, scope: !2701)
!2705 = !DILocation(line: 112, column: 9, scope: !2701)
!2706 = !DILocation(line: 113, column: 30, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2708, file: !84, line: 112, column: 24)
!2708 = distinct !DILexicalBlock(scope: !2701, file: !84, line: 112, column: 9)
!2709 = !DILocation(line: 114, column: 30, scope: !2707)
!2710 = !DILocation(line: 115, column: 31, scope: !2707)
!2711 = !DILocation(line: 117, column: 5, scope: !2707)
!2712 = !DILocation(line: 118, column: 30, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2714, file: !84, line: 117, column: 31)
!2714 = distinct !DILexicalBlock(scope: !2708, file: !84, line: 117, column: 16)
!2715 = !DILocation(line: 119, column: 30, scope: !2713)
!2716 = !DILocation(line: 120, column: 31, scope: !2713)
!2717 = !DILocation(line: 121, column: 5, scope: !2713)
!2718 = !DILocation(line: 122, column: 30, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2720, file: !84, line: 121, column: 31)
!2720 = distinct !DILexicalBlock(scope: !2714, file: !84, line: 121, column: 16)
!2721 = !DILocation(line: 123, column: 5, scope: !2719)
!2722 = !DILocation(line: 124, column: 30, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2724, file: !84, line: 123, column: 31)
!2724 = distinct !DILexicalBlock(scope: !2720, file: !84, line: 123, column: 16)
!2725 = !DILocation(line: 125, column: 5, scope: !2723)
!2726 = !DILocation(line: 128, column: 1, scope: !2701)
!2727 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !84, file: !84, line: 130, type: !600, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2728)
!2728 = !{!2729, !2730}
!2729 = !DILocalVariable(name: "irq_number", arg: 1, scope: !2727, file: !84, line: 130, type: !339)
!2730 = !DILocalVariable(name: "GPT_Status", scope: !2727, file: !84, line: 132, type: !321)
!2731 = !DILocation(line: 0, scope: !2727)
!2732 = !DILocation(line: 135, column: 18, scope: !2727)
!2733 = !DILocation(line: 136, column: 26, scope: !2727)
!2734 = !DILocation(line: 136, column: 24, scope: !2727)
!2735 = !DILocation(line: 138, column: 20, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2727, file: !84, line: 138, column: 9)
!2737 = !DILocation(line: 138, column: 9, scope: !2727)
!2738 = !DILocation(line: 141, column: 27, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2736, file: !84, line: 141, column: 16)
!2740 = !DILocation(line: 141, column: 16, scope: !2736)
!2741 = !DILocation(line: 0, scope: !2736)
!2742 = !DILocation(line: 145, column: 1, scope: !2727)
!2743 = distinct !DISubprogram(name: "GPT_init", scope: !84, file: !84, line: 147, type: !2744, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2746)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{null, !139, !139, !153}
!2746 = !{!2747, !2748, !2749}
!2747 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2743, file: !84, line: 147, type: !139)
!2748 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !2743, file: !84, line: 147, type: !139)
!2749 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !2743, file: !84, line: 147, type: !153)
!2750 = !DILocation(line: 0, scope: !2743)
!2751 = !DILocation(line: 149, column: 5, scope: !2743)
!2752 = !DILocation(line: 149, column: 5, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2754, file: !84, line: 149, column: 5)
!2754 = distinct !DILexicalBlock(scope: !2743, file: !84, line: 149, column: 5)
!2755 = distinct !{!2755, !2752, !2752}
!2756 = !DILocation(line: 149, column: 5, scope: !2754)
!2757 = !DILocation(line: 151, column: 23, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2743, file: !84, line: 151, column: 9)
!2759 = !DILocation(line: 152, column: 9, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2758, file: !84, line: 151, column: 41)
!2761 = !DILocation(line: 153, column: 9, scope: !2760)
!2762 = !DILocation(line: 154, column: 9, scope: !2760)
!2763 = !DILocation(line: 155, column: 5, scope: !2760)
!2764 = !DILocation(line: 157, column: 9, scope: !2743)
!2765 = !DILocation(line: 158, column: 37, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2767, file: !84, line: 157, column: 24)
!2767 = distinct !DILexicalBlock(scope: !2743, file: !84, line: 157, column: 9)
!2768 = !DILocation(line: 159, column: 30, scope: !2766)
!2769 = !DILocation(line: 160, column: 45, scope: !2766)
!2770 = !DILocation(line: 160, column: 30, scope: !2766)
!2771 = !DILocation(line: 161, column: 5, scope: !2766)
!2772 = !DILocation(line: 162, column: 37, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2774, file: !84, line: 161, column: 31)
!2774 = distinct !DILexicalBlock(scope: !2767, file: !84, line: 161, column: 16)
!2775 = !DILocation(line: 163, column: 30, scope: !2773)
!2776 = !DILocation(line: 164, column: 45, scope: !2773)
!2777 = !DILocation(line: 164, column: 30, scope: !2773)
!2778 = !DILocation(line: 165, column: 5, scope: !2773)
!2779 = !DILocation(line: 166, column: 59, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2781, file: !84, line: 165, column: 31)
!2781 = distinct !DILexicalBlock(scope: !2774, file: !84, line: 165, column: 16)
!2782 = !DILocation(line: 166, column: 45, scope: !2780)
!2783 = !DILocation(line: 166, column: 30, scope: !2780)
!2784 = !DILocation(line: 167, column: 5, scope: !2780)
!2785 = !DILocation(line: 168, column: 59, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !84, line: 167, column: 31)
!2787 = distinct !DILexicalBlock(scope: !2781, file: !84, line: 167, column: 16)
!2788 = !DILocation(line: 168, column: 45, scope: !2786)
!2789 = !DILocation(line: 168, column: 30, scope: !2786)
!2790 = !DILocation(line: 169, column: 30, scope: !2786)
!2791 = !DILocation(line: 170, column: 5, scope: !2786)
!2792 = !DILocation(line: 171, column: 1, scope: !2743)
!2793 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !84, file: !84, line: 173, type: !2794, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2796)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!139, !139}
!2796 = !{!2797, !2798}
!2797 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2793, file: !84, line: 173, type: !139)
!2798 = !DILocalVariable(name: "current_count", scope: !2793, file: !84, line: 175, type: !139)
!2799 = !DILocation(line: 0, scope: !2793)
!2800 = !DILocation(line: 177, column: 5, scope: !2793)
!2801 = !DILocation(line: 177, column: 5, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !84, line: 177, column: 5)
!2803 = distinct !DILexicalBlock(scope: !2793, file: !84, line: 177, column: 5)
!2804 = distinct !{!2804, !2801, !2801}
!2805 = !DILocation(line: 183, column: 5, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2807, file: !84, line: 181, column: 31)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !84, line: 181, column: 16)
!2808 = distinct !DILexicalBlock(scope: !2793, file: !84, line: 179, column: 9)
!2809 = !DILocation(line: 185, column: 5, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2811, file: !84, line: 183, column: 31)
!2811 = distinct !DILexicalBlock(scope: !2807, file: !84, line: 183, column: 16)
!2812 = !DILocation(line: 187, column: 5, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2814, file: !84, line: 185, column: 31)
!2814 = distinct !DILexicalBlock(scope: !2811, file: !84, line: 185, column: 16)
!2815 = !DILocation(line: 0, scope: !2808)
!2816 = !DILocation(line: 189, column: 5, scope: !2793)
!2817 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !84, file: !84, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1397)
!2818 = !DILocation(line: 195, column: 5, scope: !2817)
!2819 = !DILocation(line: 196, column: 1, scope: !2817)
!2820 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !84, file: !84, line: 198, type: !154, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1397)
!2821 = !DILocation(line: 200, column: 5, scope: !2820)
!2822 = !DILocation(line: 201, column: 1, scope: !2820)
!2823 = distinct !DISubprogram(name: "hal_trng_init", scope: !2123, file: !2123, line: 59, type: !2824, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2122, retainedNodes: !1397)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!2826}
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_trng_status_t", file: !2126, line: 96, baseType: !2125)
!2827 = !DILocation(line: 61, column: 5, scope: !2823)
!2828 = distinct !DISubprogram(name: "hal_trng_deinit", scope: !2123, file: !2123, line: 71, type: !2824, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2122, retainedNodes: !1397)
!2829 = !DILocation(line: 73, column: 5, scope: !2828)
!2830 = distinct !DISubprogram(name: "hal_trng_get_generated_random_number", scope: !2123, file: !2123, line: 85, type: !2831, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2122, retainedNodes: !2834)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{!2826, !2833}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!2834 = !{!2835, !2836, !2838, !2840, !2842}
!2835 = !DILocalVariable(name: "random_number", arg: 1, scope: !2830, file: !2123, line: 85, type: !2833)
!2836 = !DILocalVariable(name: "cnt", scope: !2830, file: !2123, line: 87, type: !2837)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !87, line: 60, baseType: !322)
!2838 = !DILocalVariable(name: "addr", scope: !2839, file: !2123, line: 89, type: !284)
!2839 = distinct !DILexicalBlock(scope: !2830, file: !2123, line: 89, column: 5)
!2840 = !DILocalVariable(name: "addr", scope: !2841, file: !2123, line: 100, type: !284)
!2841 = distinct !DILexicalBlock(scope: !2830, file: !2123, line: 100, column: 5)
!2842 = !DILocalVariable(name: "addr", scope: !2843, file: !2123, line: 101, type: !284)
!2843 = distinct !DILexicalBlock(scope: !2830, file: !2123, line: 101, column: 5)
!2844 = !DILocation(line: 0, scope: !2830)
!2845 = !DILocation(line: 0, scope: !2839)
!2846 = !DILocation(line: 89, column: 5, scope: !2839)
!2847 = !DILocation(line: 91, column: 5, scope: !2830)
!2848 = !DILocation(line: 92, column: 13, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2850, file: !2123, line: 92, column: 13)
!2850 = distinct !DILexicalBlock(scope: !2830, file: !2123, line: 91, column: 23)
!2851 = !DILocation(line: 92, column: 50, scope: !2849)
!2852 = !DILocation(line: 92, column: 13, scope: !2850)
!2853 = !DILocation(line: 95, column: 9, scope: !2850)
!2854 = !DILocation(line: 96, column: 12, scope: !2850)
!2855 = !DILocation(line: 91, column: 16, scope: !2830)
!2856 = distinct !{!2856, !2847, !2857}
!2857 = !DILocation(line: 97, column: 5, scope: !2830)
!2858 = !DILocation(line: 99, column: 22, scope: !2830)
!2859 = !DILocation(line: 99, column: 20, scope: !2830)
!2860 = !DILocation(line: 0, scope: !2841)
!2861 = !DILocation(line: 100, column: 5, scope: !2841)
!2862 = !DILocation(line: 0, scope: !2843)
!2863 = !DILocation(line: 101, column: 5, scope: !2843)
!2864 = !DILocation(line: 103, column: 13, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2830, file: !2123, line: 103, column: 9)
!2866 = !DILocation(line: 103, column: 9, scope: !2830)
!2867 = !DILocation(line: 104, column: 24, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2865, file: !2123, line: 103, column: 21)
!2869 = !DILocation(line: 105, column: 9, scope: !2868)
!2870 = !DILocation(line: 0, scope: !2865)
!2871 = !DILocation(line: 109, column: 1, scope: !2830)
!2872 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !2133, file: !2133, line: 47, type: !2873, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !2875)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{null, !61}
!2875 = !{!2876}
!2876 = !DILocalVariable(name: "addr", arg: 1, scope: !2872, file: !2133, line: 47, type: !61)
!2877 = !DILocation(line: 0, scope: !2872)
!2878 = !DILocation(line: 49, column: 15, scope: !2872)
!2879 = !DILocation(line: 51, column: 5, scope: !2872)
!2880 = !{i64 2624}
!2881 = !DILocation(line: 52, column: 5, scope: !2872)
!2882 = !{i64 2651}
!2883 = !DILocation(line: 53, column: 1, scope: !2872)
!2884 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !2133, file: !2133, line: 56, type: !2885, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !2887)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{null, !30}
!2887 = !{!2888}
!2888 = !DILocalVariable(name: "source", arg: 1, scope: !2884, file: !2133, line: 56, type: !30)
!2889 = !DILocation(line: 0, scope: !2884)
!2890 = !DILocation(line: 58, column: 16, scope: !2884)
!2891 = !DILocation(line: 59, column: 1, scope: !2884)
!2892 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2133, file: !2133, line: 61, type: !2255, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !2893)
!2893 = !{!2894}
!2894 = !DILocalVariable(name: "mask", scope: !2892, file: !2133, line: 63, type: !61)
!2895 = !DILocation(line: 470, column: 3, scope: !2896, inlinedAt: !2900)
!2896 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !2897, file: !2897, line: 466, type: !2255, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !2898)
!2897 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!2898 = !{!2899}
!2899 = !DILocalVariable(name: "result", scope: !2896, file: !2897, line: 468, type: !61)
!2900 = distinct !DILocation(line: 64, column: 5, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2892, file: !2133, line: 64, column: 5)
!2902 = !{i64 302564}
!2903 = !DILocation(line: 0, scope: !2896, inlinedAt: !2900)
!2904 = !DILocation(line: 0, scope: !2892)
!2905 = !DILocation(line: 330, column: 3, scope: !2906, inlinedAt: !2907)
!2906 = distinct !DISubprogram(name: "__disable_irq", scope: !2897, file: !2897, line: 328, type: !154, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !1397)
!2907 = distinct !DILocation(line: 64, column: 5, scope: !2901)
!2908 = !{i64 299228}
!2909 = !DILocation(line: 65, column: 5, scope: !2892)
!2910 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2133, file: !2133, line: 68, type: !2873, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !2911)
!2911 = !{!2912}
!2912 = !DILocalVariable(name: "mask", arg: 1, scope: !2910, file: !2133, line: 68, type: !61)
!2913 = !DILocation(line: 0, scope: !2910)
!2914 = !DILocalVariable(name: "priMask", arg: 1, scope: !2915, file: !2897, line: 481, type: !61)
!2915 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !2897, file: !2897, line: 481, type: !2873, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2132, retainedNodes: !2916)
!2916 = !{!2914}
!2917 = !DILocation(line: 0, scope: !2915, inlinedAt: !2918)
!2918 = distinct !DILocation(line: 70, column: 5, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2910, file: !2133, line: 70, column: 5)
!2920 = !DILocation(line: 483, column: 3, scope: !2915, inlinedAt: !2918)
!2921 = !{i64 302882}
!2922 = !DILocation(line: 71, column: 1, scope: !2910)
!2923 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !165, file: !165, line: 60, type: !2924, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2926)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!139}
!2926 = !{!2927}
!2927 = !DILocalVariable(name: "current_count", scope: !2923, file: !165, line: 62, type: !139)
!2928 = !DILocation(line: 64, column: 21, scope: !2923)
!2929 = !DILocation(line: 0, scope: !2923)
!2930 = !DILocation(line: 66, column: 5, scope: !2923)
!2931 = distinct !DISubprogram(name: "sfc_get_systime", scope: !165, file: !165, line: 69, type: !2924, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1397)
!2932 = !DILocation(line: 71, column: 12, scope: !2931)
!2933 = !DILocation(line: 71, column: 5, scope: !2931)
!2934 = distinct !DISubprogram(name: "sfc_delay_time", scope: !165, file: !165, line: 74, type: !2676, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2935)
!2935 = !{!2936, !2937, !2938}
!2936 = !DILocalVariable(name: "count", arg: 1, scope: !2934, file: !165, line: 74, type: !139)
!2937 = !DILocalVariable(name: "end_count", scope: !2934, file: !165, line: 76, type: !139)
!2938 = !DILocalVariable(name: "current", scope: !2934, file: !165, line: 76, type: !139)
!2939 = !DILocation(line: 0, scope: !2934)
!2940 = !DILocation(line: 78, column: 17, scope: !2934)
!2941 = !DILocation(line: 78, column: 35, scope: !2934)
!2942 = !DILocation(line: 78, column: 43, scope: !2934)
!2943 = !DILocation(line: 79, column: 15, scope: !2934)
!2944 = !DILocation(line: 80, column: 12, scope: !2934)
!2945 = !DILocation(line: 80, column: 5, scope: !2934)
!2946 = !DILocation(line: 81, column: 19, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2934, file: !165, line: 80, column: 49)
!2948 = distinct !{!2948, !2945, !2949}
!2949 = !DILocation(line: 82, column: 5, scope: !2934)
!2950 = !DILocation(line: 83, column: 1, scope: !2934)
!2951 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !165, file: !165, line: 85, type: !2885, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2952)
!2952 = !{!2953}
!2953 = !DILocalVariable(name: "ms", arg: 1, scope: !2951, file: !165, line: 85, type: !30)
!2954 = !DILocation(line: 0, scope: !2951)
!2955 = !DILocation(line: 87, column: 23, scope: !2951)
!2956 = !DILocation(line: 87, column: 5, scope: !2951)
!2957 = !DILocation(line: 88, column: 1, scope: !2951)
!2958 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !165, file: !165, line: 90, type: !2959, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1397)
!2959 = !DISubroutineType(types: !1182)
!2960 = !DILocation(line: 92, column: 5, scope: !2958)
!2961 = distinct !DISubprogram(name: "sfc_Init", scope: !165, file: !165, line: 121, type: !1951, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2962)
!2962 = !{!2963, !2964}
!2963 = !DILocalVariable(name: "security_enable", arg: 1, scope: !2961, file: !165, line: 121, type: !7)
!2964 = !DILocalVariable(name: "reg", scope: !2961, file: !165, line: 123, type: !30)
!2965 = !DILocation(line: 0, scope: !2961)
!2966 = !DILocation(line: 125, column: 27, scope: !2961)
!2967 = !DILocation(line: 141, column: 5, scope: !2961)
!2968 = !DILocation(line: 142, column: 5, scope: !2961)
!2969 = !DILocation(line: 143, column: 5, scope: !2961)
!2970 = !DILocation(line: 144, column: 5, scope: !2961)
!2971 = !DILocation(line: 145, column: 5, scope: !2961)
!2972 = !DILocation(line: 147, column: 5, scope: !2961)
!2973 = !DILocation(line: 150, column: 11, scope: !2961)
!2974 = !DILocation(line: 151, column: 9, scope: !2961)
!2975 = !DILocation(line: 152, column: 5, scope: !2961)
!2976 = !DILocation(line: 153, column: 5, scope: !2961)
!2977 = !DILocation(line: 155, column: 11, scope: !2961)
!2978 = !DILocation(line: 156, column: 9, scope: !2961)
!2979 = !DILocation(line: 157, column: 5, scope: !2961)
!2980 = !DILocation(line: 158, column: 5, scope: !2961)
!2981 = !DILocation(line: 160, column: 11, scope: !2961)
!2982 = !DILocation(line: 161, column: 9, scope: !2961)
!2983 = !DILocation(line: 162, column: 5, scope: !2961)
!2984 = !DILocation(line: 163, column: 5, scope: !2961)
!2985 = !DILocation(line: 165, column: 11, scope: !2961)
!2986 = !DILocation(line: 166, column: 9, scope: !2961)
!2987 = !DILocation(line: 167, column: 5, scope: !2961)
!2988 = !DILocation(line: 168, column: 5, scope: !2961)
!2989 = !DILocation(line: 173, column: 9, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2961, file: !165, line: 173, column: 9)
!2991 = !DILocation(line: 173, column: 9, scope: !2961)
!2992 = !DILocation(line: 174, column: 31, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2990, file: !165, line: 173, column: 26)
!2994 = !DILocation(line: 184, column: 9, scope: !2993)
!2995 = !DILocation(line: 185, column: 9, scope: !2993)
!2996 = !DILocation(line: 187, column: 9, scope: !2993)
!2997 = !DILocation(line: 188, column: 9, scope: !2993)
!2998 = !DILocation(line: 189, column: 9, scope: !2993)
!2999 = !DILocation(line: 190, column: 9, scope: !2993)
!3000 = !DILocation(line: 192, column: 9, scope: !2993)
!3001 = !DILocation(line: 193, column: 5, scope: !2993)
!3002 = !DILocation(line: 194, column: 1, scope: !2961)
!3003 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !165, file: !165, line: 196, type: !2959, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3004)
!3004 = !{!3005, !3006}
!3005 = !DILocalVariable(name: "qpi_en", scope: !3003, file: !165, line: 198, type: !195)
!3006 = !DILocalVariable(name: "sfc_read_mode", scope: !3003, file: !165, line: 199, type: !195)
!3007 = !DILocation(line: 198, column: 29, scope: !3003)
!3008 = !DILocation(line: 0, scope: !3003)
!3009 = !DILocation(line: 199, column: 36, scope: !3003)
!3010 = !DILocation(line: 199, column: 89, scope: !3003)
!3011 = !DILocation(line: 204, column: 23, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3003, file: !165, line: 204, column: 9)
!3013 = !DILocation(line: 204, column: 9, scope: !3003)
!3014 = !DILocation(line: 218, column: 1, scope: !3003)
!3015 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !165, file: !165, line: 221, type: !3016, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3018)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{null, !195, !7}
!3018 = !{!3019, !3020, !3021}
!3019 = !DILocalVariable(name: "reg", arg: 1, scope: !3015, file: !165, line: 221, type: !195)
!3020 = !DILocalVariable(name: "mode", arg: 2, scope: !3015, file: !165, line: 221, type: !7)
!3021 = !DILocalVariable(name: "tmp", scope: !3015, file: !165, line: 223, type: !195)
!3022 = !DILocation(line: 0, scope: !3015)
!3023 = !DILocation(line: 224, column: 5, scope: !3015)
!3024 = !DILocation(line: 236, column: 9, scope: !3015)
!3025 = !DILocation(line: 237, column: 5, scope: !3015)
!3026 = !DILocation(line: 238, column: 1, scope: !3015)
!3027 = distinct !DISubprogram(name: "sfc_Command_List", scope: !165, file: !165, line: 296, type: !3028, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3030)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{null, !193}
!3030 = !{!3031, !3032, !3033, !3034}
!3031 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !3027, file: !165, line: 296, type: !193)
!3032 = !DILocalVariable(name: "i", scope: !3027, file: !165, line: 298, type: !30)
!3033 = !DILocalVariable(name: "val", scope: !3027, file: !165, line: 299, type: !30)
!3034 = !DILocalVariable(name: "force_qpi", scope: !3027, file: !165, line: 299, type: !30)
!3035 = !DILocation(line: 0, scope: !3027)
!3036 = !DILocation(line: 301, column: 10, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3027, file: !165, line: 301, column: 9)
!3038 = !DILocation(line: 301, column: 9, scope: !3027)
!3039 = !DILocation(line: 305, column: 11, scope: !3027)
!3040 = !DILocation(line: 310, column: 5, scope: !3027)
!3041 = !DILocation(line: 311, column: 17, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3027, file: !165, line: 310, column: 17)
!3043 = !DILocation(line: 311, column: 9, scope: !3042)
!3044 = !DILocation(line: 319, column: 17, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3042, file: !165, line: 311, column: 29)
!3046 = !DILocation(line: 321, column: 17, scope: !3045)
!3047 = !DILocation(line: 322, column: 17, scope: !3045)
!3048 = !DILocation(line: 325, column: 33, scope: !3042)
!3049 = !DILocation(line: 325, column: 23, scope: !3042)
!3050 = !DILocation(line: 325, column: 49, scope: !3042)
!3051 = !DILocation(line: 325, column: 39, scope: !3042)
!3052 = !DILocation(line: 325, column: 9, scope: !3042)
!3053 = !DILocation(line: 327, column: 15, scope: !3042)
!3054 = !DILocation(line: 327, column: 11, scope: !3042)
!3055 = !DILocation(line: 329, column: 9, scope: !3042)
!3056 = distinct !{!3056, !3040, !3057}
!3057 = !DILocation(line: 330, column: 5, scope: !3027)
!3058 = !DILocation(line: 331, column: 1, scope: !3027)
!3059 = distinct !DISubprogram(name: "sfc_transfer", scope: !165, file: !165, line: 417, type: !3060, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3063)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!7, !193, !3062, !177, !3062, !30}
!3062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074}
!3064 = !DILocalVariable(name: "cmd", arg: 1, scope: !3059, file: !165, line: 417, type: !193)
!3065 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3059, file: !165, line: 417, type: !3062)
!3066 = !DILocalVariable(name: "data", arg: 3, scope: !3059, file: !165, line: 417, type: !177)
!3067 = !DILocalVariable(name: "data_len", arg: 4, scope: !3059, file: !165, line: 417, type: !3062)
!3068 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !3059, file: !165, line: 417, type: !30)
!3069 = !DILocalVariable(name: "tmp", scope: !3059, file: !165, line: 419, type: !30)
!3070 = !DILocalVariable(name: "i", scope: !3059, file: !165, line: 419, type: !30)
!3071 = !DILocalVariable(name: "j", scope: !3059, file: !165, line: 419, type: !30)
!3072 = !DILocalVariable(name: "p_data", scope: !3059, file: !165, line: 420, type: !177)
!3073 = !DILocalVariable(name: "p_tmp", scope: !3059, file: !165, line: 420, type: !177)
!3074 = !DILocalVariable(name: "savedMask", scope: !3059, file: !165, line: 421, type: !30)
!3075 = !DILocation(line: 0, scope: !3059)
!3076 = !DILocation(line: 419, column: 5, scope: !3059)
!3077 = !DILocation(line: 423, column: 18, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3059, file: !165, line: 423, column: 9)
!3079 = !DILocation(line: 423, column: 30, scope: !3078)
!3080 = !DILocation(line: 423, column: 9, scope: !3059)
!3081 = !DILocation(line: 430, column: 19, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !165, line: 430, column: 5)
!3083 = distinct !DILexicalBlock(scope: !3059, file: !165, line: 430, column: 5)
!3084 = !DILocation(line: 430, column: 5, scope: !3083)
!3085 = !DILocation(line: 431, column: 25, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !165, line: 431, column: 9)
!3087 = distinct !DILexicalBlock(scope: !3082, file: !165, line: 430, column: 43)
!3088 = !DILocation(line: 431, column: 32, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3086, file: !165, line: 431, column: 9)
!3090 = !DILocation(line: 431, column: 9, scope: !3086)
!3091 = !DILocation(line: 432, column: 24, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3089, file: !165, line: 431, column: 62)
!3093 = !DILocation(line: 432, column: 13, scope: !3092)
!3094 = !DILocation(line: 432, column: 22, scope: !3092)
!3095 = !DILocation(line: 431, column: 53, scope: !3089)
!3096 = !DILocation(line: 431, column: 58, scope: !3089)
!3097 = !DILocation(line: 431, column: 42, scope: !3089)
!3098 = distinct !{!3098, !3090, !3099}
!3099 = !DILocation(line: 433, column: 9, scope: !3086)
!3100 = !DILocation(line: 434, column: 9, scope: !3087)
!3101 = !DILocation(line: 0, scope: !3083)
!3102 = !DILocation(line: 436, column: 15, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3087, file: !165, line: 436, column: 13)
!3104 = !DILocation(line: 436, column: 20, scope: !3103)
!3105 = !DILocation(line: 437, column: 13, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3103, file: !165, line: 436, column: 46)
!3107 = !DILocation(line: 438, column: 13, scope: !3106)
!3108 = !DILocation(line: 440, column: 9, scope: !3106)
!3109 = !DILocation(line: 430, column: 37, scope: !3082)
!3110 = distinct !{!3110, !3084, !3111}
!3111 = !DILocation(line: 441, column: 5, scope: !3083)
!3112 = !DILocation(line: 443, column: 17, scope: !3059)
!3113 = !DILocation(line: 444, column: 9, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3059, file: !165, line: 444, column: 9)
!3115 = !DILocation(line: 444, column: 9, scope: !3059)
!3116 = !DILocation(line: 445, column: 9, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3114, file: !165, line: 444, column: 32)
!3118 = !DILocation(line: 446, column: 9, scope: !3117)
!3119 = !DILocation(line: 447, column: 5, scope: !3117)
!3120 = !DILocation(line: 449, column: 5, scope: !3059)
!3121 = !DILocation(line: 450, column: 5, scope: !3059)
!3122 = !DILocation(line: 452, column: 5, scope: !3059)
!3123 = !DILocation(line: 453, column: 5, scope: !3059)
!3124 = !DILocation(line: 454, column: 5, scope: !3059)
!3125 = !DILocation(line: 456, column: 76, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !165, line: 456, column: 5)
!3127 = distinct !DILexicalBlock(scope: !3059, file: !165, line: 456, column: 5)
!3128 = !DILocation(line: 456, column: 5, scope: !3127)
!3129 = !DILocation(line: 456, column: 62, scope: !3127)
!3130 = !DILocation(line: 457, column: 17, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3126, file: !165, line: 456, column: 111)
!3132 = !DILocation(line: 457, column: 15, scope: !3131)
!3133 = !DILocation(line: 456, column: 88, scope: !3126)
!3134 = !DILocation(line: 456, column: 93, scope: !3126)
!3135 = !DILocation(line: 456, column: 101, scope: !3126)
!3136 = distinct !{!3136, !3128, !3137}
!3137 = !DILocation(line: 458, column: 5, scope: !3127)
!3138 = !DILocation(line: 461, column: 1, scope: !3059)
!3139 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !165, file: !165, line: 402, type: !1951, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3140)
!3140 = !{!3141, !3142}
!3141 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !3139, file: !165, line: 402, type: !7)
!3142 = !DILocalVariable(name: "val", scope: !3139, file: !165, line: 404, type: !195)
!3143 = !DILocation(line: 0, scope: !3139)
!3144 = !DILocation(line: 406, column: 11, scope: !3139)
!3145 = !DILocation(line: 408, column: 9, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3139, file: !165, line: 408, column: 9)
!3147 = !DILocation(line: 408, column: 25, scope: !3146)
!3148 = !DILocation(line: 412, column: 9, scope: !3139)
!3149 = !DILocation(line: 414, column: 5, scope: !3139)
!3150 = !DILocation(line: 415, column: 1, scope: !3139)
!3151 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !165, file: !165, line: 384, type: !154, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1397)
!3152 = !DILocation(line: 396, column: 5, scope: !3151)
!3153 = !DILocation(line: 397, column: 5, scope: !3151)
!3154 = !DILocation(line: 399, column: 1, scope: !3151)
!3155 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !165, file: !165, line: 339, type: !3156, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3158)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!195}
!3158 = !{!3159, !3160}
!3159 = !DILocalVariable(name: "val", scope: !3155, file: !165, line: 341, type: !195)
!3160 = !DILocalVariable(name: "misc_ctl", scope: !3155, file: !165, line: 342, type: !195)
!3161 = !DILocation(line: 0, scope: !3155)
!3162 = !DILocation(line: 344, column: 11, scope: !3155)
!3163 = !DILocation(line: 347, column: 9, scope: !3155)
!3164 = !DILocation(line: 349, column: 5, scope: !3155)
!3165 = !DILocation(line: 352, column: 5, scope: !3155)
!3166 = !DILocation(line: 352, column: 14, scope: !3155)
!3167 = !DILocation(line: 352, column: 44, scope: !3155)
!3168 = !DILocation(line: 352, column: 12, scope: !3155)
!3169 = distinct !{!3169, !3165, !3170}
!3170 = !DILocation(line: 353, column: 9, scope: !3155)
!3171 = !DILocation(line: 354, column: 13, scope: !3155)
!3172 = !DILocation(line: 354, column: 43, scope: !3155)
!3173 = !DILocation(line: 354, column: 5, scope: !3155)
!3174 = distinct !{!3174, !3173, !3175}
!3175 = !DILocation(line: 355, column: 9, scope: !3155)
!3176 = !DILocation(line: 357, column: 5, scope: !3155)
!3177 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !165, file: !165, line: 366, type: !154, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3178)
!3178 = !{!3179}
!3179 = !DILocalVariable(name: "val", scope: !3177, file: !165, line: 368, type: !195)
!3180 = !DILocation(line: 371, column: 11, scope: !3177)
!3181 = !DILocation(line: 0, scope: !3177)
!3182 = !DILocation(line: 372, column: 9, scope: !3177)
!3183 = !DILocation(line: 373, column: 5, scope: !3177)
!3184 = !DILocation(line: 378, column: 11, scope: !3177)
!3185 = !DILocation(line: 379, column: 9, scope: !3177)
!3186 = !DILocation(line: 380, column: 5, scope: !3177)
!3187 = !DILocation(line: 381, column: 1, scope: !3177)
!3188 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !165, file: !165, line: 463, type: !154, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3189)
!3189 = !{!3190, !3191}
!3190 = !DILocalVariable(name: "i", scope: !3188, file: !165, line: 465, type: !30)
!3191 = !DILocalVariable(name: "p_data", scope: !3188, file: !165, line: 466, type: !177)
!3192 = !DILocation(line: 0, scope: !3188)
!3193 = !DILocation(line: 470, column: 5, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3188, file: !165, line: 470, column: 5)
!3195 = !DILocation(line: 471, column: 9, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !165, line: 470, column: 63)
!3197 = distinct !DILexicalBlock(scope: !3194, file: !165, line: 470, column: 5)
!3198 = !DILocation(line: 470, column: 52, scope: !3197)
!3199 = !DILocation(line: 470, column: 59, scope: !3197)
!3200 = !DILocation(line: 470, column: 19, scope: !3197)
!3201 = distinct !{!3201, !3193, !3202}
!3202 = !DILocation(line: 472, column: 5, scope: !3194)
!3203 = !DILocation(line: 475, column: 1, scope: !3188)
!3204 = distinct !DISubprogram(name: "sfc_read", scope: !165, file: !165, line: 478, type: !3205, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3207)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{!7, !193, !3062, !177, !3062}
!3207 = !{!3208, !3209, !3210, !3211}
!3208 = !DILocalVariable(name: "cmd", arg: 1, scope: !3204, file: !165, line: 478, type: !193)
!3209 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3204, file: !165, line: 478, type: !3062)
!3210 = !DILocalVariable(name: "data", arg: 3, scope: !3204, file: !165, line: 478, type: !177)
!3211 = !DILocalVariable(name: "data_len", arg: 4, scope: !3204, file: !165, line: 478, type: !3062)
!3212 = !DILocation(line: 0, scope: !3204)
!3213 = !DILocation(line: 480, column: 12, scope: !3204)
!3214 = !DILocation(line: 480, column: 5, scope: !3204)
!3215 = distinct !DISubprogram(name: "sfc_write", scope: !165, file: !165, line: 490, type: !3216, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3218)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!7, !193, !3062, !193, !3062}
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3227}
!3219 = !DILocalVariable(name: "cmd", arg: 1, scope: !3215, file: !165, line: 490, type: !193)
!3220 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3215, file: !165, line: 490, type: !3062)
!3221 = !DILocalVariable(name: "data", arg: 3, scope: !3215, file: !165, line: 490, type: !193)
!3222 = !DILocalVariable(name: "data_len", arg: 4, scope: !3215, file: !165, line: 490, type: !3062)
!3223 = !DILocalVariable(name: "tmp", scope: !3215, file: !165, line: 492, type: !3224)
!3224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 1280, elements: !3225)
!3225 = !{!3226}
!3226 = !DISubrange(count: 160)
!3227 = !DILocalVariable(name: "total", scope: !3215, file: !165, line: 493, type: !7)
!3228 = !DILocation(line: 0, scope: !3215)
!3229 = !DILocation(line: 492, column: 5, scope: !3215)
!3230 = !DILocation(line: 492, column: 19, scope: !3215)
!3231 = !DILocation(line: 493, column: 25, scope: !3215)
!3232 = !DILocation(line: 495, column: 15, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3215, file: !165, line: 495, column: 9)
!3234 = !DILocation(line: 495, column: 9, scope: !3215)
!3235 = !DILocation(line: 496, column: 9, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !165, line: 496, column: 9)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !165, line: 496, column: 9)
!3238 = distinct !DILexicalBlock(scope: !3233, file: !165, line: 495, column: 31)
!3239 = distinct !{!3239, !3235, !3235}
!3240 = !DILocation(line: 498, column: 5, scope: !3215)
!3241 = !DILocation(line: 500, column: 9, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3215, file: !165, line: 500, column: 9)
!3243 = !DILocation(line: 500, column: 14, scope: !3242)
!3244 = !DILocation(line: 501, column: 17, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3242, file: !165, line: 500, column: 27)
!3246 = !DILocation(line: 501, column: 9, scope: !3245)
!3247 = !DILocation(line: 502, column: 5, scope: !3245)
!3248 = !DILocation(line: 503, column: 12, scope: !3215)
!3249 = !DILocation(line: 504, column: 1, scope: !3215)
!3250 = !DILocation(line: 503, column: 5, scope: !3215)
!3251 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !165, file: !165, line: 506, type: !3252, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3254)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!7, !193, !3062}
!3254 = !{!3255, !3256, !3257, !3258, !3259}
!3255 = !DILocalVariable(name: "cmd", arg: 1, scope: !3251, file: !165, line: 506, type: !193)
!3256 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3251, file: !165, line: 506, type: !3062)
!3257 = !DILocalVariable(name: "tmp", scope: !3251, file: !165, line: 508, type: !3224)
!3258 = !DILocalVariable(name: "crc", scope: !3251, file: !165, line: 509, type: !195)
!3259 = !DILocalVariable(name: "total", scope: !3251, file: !165, line: 510, type: !7)
!3260 = !DILocation(line: 0, scope: !3251)
!3261 = !DILocation(line: 508, column: 5, scope: !3251)
!3262 = !DILocation(line: 508, column: 19, scope: !3251)
!3263 = !DILocation(line: 509, column: 5, scope: !3251)
!3264 = !DILocation(line: 509, column: 25, scope: !3251)
!3265 = !DILocation(line: 509, column: 19, scope: !3251)
!3266 = !DILocation(line: 510, column: 25, scope: !3251)
!3267 = !DILocation(line: 514, column: 5, scope: !3251)
!3268 = !DILocation(line: 515, column: 13, scope: !3251)
!3269 = !DILocation(line: 515, column: 5, scope: !3251)
!3270 = !DILocation(line: 517, column: 12, scope: !3251)
!3271 = !DILocation(line: 518, column: 1, scope: !3251)
!3272 = !DILocation(line: 517, column: 5, scope: !3251)
!3273 = distinct !DISubprogram(name: "__sfc_write", scope: !165, file: !165, line: 538, type: !3060, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280, !3281}
!3275 = !DILocalVariable(name: "cmd", arg: 1, scope: !3273, file: !165, line: 538, type: !193)
!3276 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3273, file: !165, line: 538, type: !3062)
!3277 = !DILocalVariable(name: "data", arg: 3, scope: !3273, file: !165, line: 538, type: !177)
!3278 = !DILocalVariable(name: "data_len", arg: 4, scope: !3273, file: !165, line: 538, type: !3062)
!3279 = !DILocalVariable(name: "security_enable", arg: 5, scope: !3273, file: !165, line: 538, type: !30)
!3280 = !DILocalVariable(name: "tmp", scope: !3273, file: !165, line: 540, type: !3224)
!3281 = !DILocalVariable(name: "total", scope: !3273, file: !165, line: 541, type: !7)
!3282 = !DILocation(line: 0, scope: !3273)
!3283 = !DILocation(line: 540, column: 5, scope: !3273)
!3284 = !DILocation(line: 540, column: 19, scope: !3273)
!3285 = !DILocation(line: 541, column: 25, scope: !3273)
!3286 = !DILocation(line: 543, column: 15, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3273, file: !165, line: 543, column: 9)
!3288 = !DILocation(line: 543, column: 9, scope: !3273)
!3289 = !DILocation(line: 544, column: 9, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !165, line: 544, column: 9)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !165, line: 544, column: 9)
!3292 = distinct !DILexicalBlock(scope: !3287, file: !165, line: 543, column: 30)
!3293 = distinct !{!3293, !3289, !3289}
!3294 = !DILocation(line: 546, column: 5, scope: !3273)
!3295 = !DILocation(line: 548, column: 9, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3273, file: !165, line: 548, column: 9)
!3297 = !DILocation(line: 548, column: 14, scope: !3296)
!3298 = !DILocation(line: 549, column: 17, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3296, file: !165, line: 548, column: 27)
!3300 = !DILocation(line: 549, column: 9, scope: !3299)
!3301 = !DILocation(line: 550, column: 5, scope: !3299)
!3302 = !DILocation(line: 551, column: 12, scope: !3273)
!3303 = !DILocation(line: 552, column: 1, scope: !3273)
!3304 = !DILocation(line: 551, column: 5, scope: !3273)
!3305 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !184, file: !184, line: 186, type: !154, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1397)
!3306 = !DILocation(line: 188, column: 5, scope: !3305)
!3307 = !DILocation(line: 189, column: 5, scope: !3305)
!3308 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !184, file: !184, line: 195, type: !154, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1397)
!3309 = !DILocation(line: 197, column: 5, scope: !3308)
!3310 = !DILocation(line: 198, column: 5, scope: !3308)
!3311 = distinct !DISubprogram(name: "flash_check_device", scope: !184, file: !184, line: 276, type: !2959, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3312)
!3312 = !{!3313, !3314, !3315, !3317}
!3313 = !DILocalVariable(name: "i", scope: !3311, file: !184, line: 278, type: !7)
!3314 = !DILocalVariable(name: "jedec", scope: !3311, file: !184, line: 279, type: !195)
!3315 = !DILocalVariable(name: "buf", scope: !3311, file: !184, line: 280, type: !3316)
!3316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 40, elements: !588)
!3317 = !DILocalVariable(name: "info", scope: !3311, file: !184, line: 281, type: !196)
!3318 = !DILocation(line: 280, column: 5, scope: !3311)
!3319 = !DILocation(line: 280, column: 19, scope: !3311)
!3320 = !DILocation(line: 283, column: 5, scope: !3311)
!3321 = !DILocation(line: 284, column: 45, scope: !3311)
!3322 = !DILocation(line: 284, column: 30, scope: !3311)
!3323 = !DILocation(line: 284, column: 52, scope: !3311)
!3324 = !DILocation(line: 284, column: 77, scope: !3311)
!3325 = !DILocation(line: 284, column: 62, scope: !3311)
!3326 = !DILocation(line: 284, column: 84, scope: !3311)
!3327 = !DILocation(line: 284, column: 59, scope: !3311)
!3328 = !DILocation(line: 0, scope: !3311)
!3329 = !DILocation(line: 286, column: 23, scope: !3311)
!3330 = !DILocation(line: 286, column: 21, scope: !3311)
!3331 = !DILocation(line: 288, column: 5, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3311, file: !184, line: 288, column: 5)
!3333 = !DILocation(line: 290, column: 19, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !184, line: 290, column: 13)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !184, line: 288, column: 70)
!3336 = distinct !DILexicalBlock(scope: !3332, file: !184, line: 288, column: 5)
!3337 = !DILocation(line: 290, column: 22, scope: !3334)
!3338 = !DILocation(line: 290, column: 32, scope: !3334)
!3339 = !DILocation(line: 290, column: 41, scope: !3334)
!3340 = !DILocation(line: 290, column: 50, scope: !3334)
!3341 = !DILocation(line: 290, column: 13, scope: !3335)
!3342 = !DILocation(line: 289, column: 17, scope: !3335)
!3343 = !DILocation(line: 291, column: 27, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3334, file: !184, line: 290, column: 60)
!3345 = !DILocation(line: 292, column: 26, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3344, file: !184, line: 292, column: 17)
!3347 = !DILocation(line: 292, column: 17, scope: !3344)
!3348 = !DILocation(line: 294, column: 33, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3346, file: !184, line: 294, column: 24)
!3350 = !DILocation(line: 294, column: 24, scope: !3346)
!3351 = !DILocation(line: 296, column: 33, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3349, file: !184, line: 296, column: 24)
!3353 = !DILocation(line: 296, column: 24, scope: !3349)
!3354 = !DILocation(line: 298, column: 31, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !184, line: 298, column: 20)
!3356 = distinct !DILexicalBlock(scope: !3352, file: !184, line: 296, column: 48)
!3357 = !DILocation(line: 298, column: 49, scope: !3355)
!3358 = !DILocation(line: 0, scope: !3355)
!3359 = !DILocation(line: 303, column: 13, scope: !3356)
!3360 = !DILocation(line: 303, column: 33, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3352, file: !184, line: 303, column: 24)
!3362 = !DILocation(line: 303, column: 24, scope: !3352)
!3363 = !DILocation(line: 0, scope: !3346)
!3364 = !DILocation(line: 308, column: 30, scope: !3344)
!3365 = !DILocation(line: 288, column: 66, scope: !3336)
!3366 = !DILocation(line: 288, column: 19, scope: !3336)
!3367 = distinct !{!3367, !3331, !3368}
!3368 = !DILocation(line: 311, column: 5, scope: !3332)
!3369 = !DILocation(line: 313, column: 19, scope: !3311)
!3370 = !DILocation(line: 315, column: 9, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3311, file: !184, line: 315, column: 9)
!3372 = !DILocation(line: 315, column: 26, scope: !3371)
!3373 = !DILocation(line: 315, column: 9, scope: !3311)
!3374 = !DILocation(line: 316, column: 51, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !184, line: 315, column: 47)
!3376 = !DILocation(line: 316, column: 23, scope: !3375)
!3377 = !DILocation(line: 318, column: 19, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3375, file: !184, line: 318, column: 13)
!3379 = !DILocation(line: 318, column: 25, scope: !3378)
!3380 = !DILocation(line: 318, column: 22, scope: !3378)
!3381 = !DILocation(line: 318, column: 32, scope: !3378)
!3382 = !DILocation(line: 318, column: 41, scope: !3378)
!3383 = !DILocation(line: 318, column: 50, scope: !3378)
!3384 = !DILocation(line: 318, column: 13, scope: !3375)
!3385 = !DILocation(line: 322, column: 13, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3378, file: !184, line: 321, column: 16)
!3387 = !DILocation(line: 323, column: 13, scope: !3386)
!3388 = !DILocation(line: 325, column: 5, scope: !3375)
!3389 = !DILocation(line: 329, column: 1, scope: !3311)
!3390 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !184, file: !184, line: 495, type: !3391, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3393)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!7, !177, !7}
!3393 = !{!3394, !3395, !3396, !3397}
!3394 = !DILocalVariable(name: "buf", arg: 1, scope: !3390, file: !184, line: 495, type: !177)
!3395 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3390, file: !184, line: 495, type: !7)
!3396 = !DILocalVariable(name: "code", scope: !3390, file: !184, line: 497, type: !58)
!3397 = !DILocalVariable(name: "rc", scope: !3390, file: !184, line: 498, type: !7)
!3398 = !DILocation(line: 0, scope: !3390)
!3399 = !DILocation(line: 497, column: 5, scope: !3390)
!3400 = !DILocation(line: 499, column: 10, scope: !3390)
!3401 = !DILocation(line: 500, column: 10, scope: !3390)
!3402 = !DILocation(line: 503, column: 1, scope: !3390)
!3403 = !DILocation(line: 502, column: 5, scope: !3390)
!3404 = distinct !DISubprogram(name: "flash_switch_mode", scope: !184, file: !184, line: 331, type: !3405, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3407)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{null, !195}
!3407 = !{!3408}
!3408 = !DILocalVariable(name: "mode", arg: 1, scope: !3404, file: !184, line: 331, type: !195)
!3409 = !DILocation(line: 0, scope: !3404)
!3410 = !DILocation(line: 333, column: 9, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3404, file: !184, line: 333, column: 9)
!3412 = !DILocation(line: 333, column: 34, scope: !3411)
!3413 = !DILocation(line: 333, column: 9, scope: !3404)
!3414 = !DILocation(line: 335, column: 26, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3411, file: !184, line: 333, column: 43)
!3416 = !DILocation(line: 336, column: 5, scope: !3415)
!3417 = !DILocation(line: 338, column: 5, scope: !3404)
!3418 = !DILocation(line: 339, column: 5, scope: !3404)
!3419 = !DILocation(line: 341, column: 9, scope: !3404)
!3420 = !DILocation(line: 342, column: 9, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !184, line: 341, column: 22)
!3422 = distinct !DILexicalBlock(scope: !3404, file: !184, line: 341, column: 9)
!3423 = !DILocation(line: 343, column: 5, scope: !3421)
!3424 = !DILocation(line: 344, column: 12, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !184, line: 344, column: 12)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !184, line: 343, column: 30)
!3427 = distinct !DILexicalBlock(scope: !3422, file: !184, line: 343, column: 16)
!3428 = !DILocation(line: 344, column: 29, scope: !3425)
!3429 = !DILocation(line: 344, column: 12, scope: !3426)
!3430 = !DILocation(line: 345, column: 13, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3425, file: !184, line: 344, column: 48)
!3432 = !DILocation(line: 346, column: 9, scope: !3431)
!3433 = !DILocation(line: 347, column: 13, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3425, file: !184, line: 346, column: 16)
!3435 = !DILocation(line: 350, column: 9, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !184, line: 349, column: 29)
!3437 = distinct !DILexicalBlock(scope: !3427, file: !184, line: 349, column: 16)
!3438 = !DILocation(line: 352, column: 9, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !184, line: 352, column: 9)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !184, line: 352, column: 9)
!3441 = distinct !DILexicalBlock(scope: !3437, file: !184, line: 351, column: 12)
!3442 = distinct !{!3442, !3438, !3438}
!3443 = !DILocation(line: 354, column: 21, scope: !3404)
!3444 = !DILocation(line: 355, column: 1, scope: !3404)
!3445 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !184, file: !184, line: 215, type: !2873, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3446)
!3446 = !{!3447, !3448}
!3447 = !DILocalVariable(name: "mode", arg: 1, scope: !3445, file: !184, line: 215, type: !61)
!3448 = !DILocalVariable(name: "ptr", scope: !3445, file: !184, line: 217, type: !193)
!3449 = !DILocation(line: 0, scope: !3445)
!3450 = !DILocation(line: 220, column: 5, scope: !3445)
!3451 = !DILocation(line: 223, column: 17, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !184, line: 223, column: 17)
!3453 = distinct !DILexicalBlock(scope: !3445, file: !184, line: 220, column: 19)
!3454 = !DILocation(line: 223, column: 17, scope: !3453)
!3455 = !DILocation(line: 227, column: 22, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !184, line: 227, column: 22)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !184, line: 225, column: 55)
!3458 = distinct !DILexicalBlock(scope: !3452, file: !184, line: 225, column: 23)
!3459 = !DILocation(line: 227, column: 37, scope: !3456)
!3460 = !DILocation(line: 227, column: 22, scope: !3457)
!3461 = !DILocation(line: 230, column: 13, scope: !3457)
!3462 = !DILocation(line: 232, column: 13, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !184, line: 230, column: 59)
!3464 = distinct !DILexicalBlock(scope: !3458, file: !184, line: 230, column: 24)
!3465 = !DILocation(line: 233, column: 23, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !184, line: 232, column: 61)
!3467 = distinct !DILexicalBlock(scope: !3464, file: !184, line: 232, column: 24)
!3468 = !DILocation(line: 234, column: 13, scope: !3466)
!3469 = !DILocation(line: 239, column: 17, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3453, file: !184, line: 239, column: 17)
!3471 = !DILocation(line: 239, column: 17, scope: !3453)
!3472 = !DILocation(line: 243, column: 22, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !184, line: 243, column: 22)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !184, line: 241, column: 55)
!3475 = distinct !DILexicalBlock(scope: !3470, file: !184, line: 241, column: 23)
!3476 = !DILocation(line: 243, column: 37, scope: !3473)
!3477 = !DILocation(line: 243, column: 22, scope: !3474)
!3478 = !DILocation(line: 246, column: 13, scope: !3474)
!3479 = !DILocation(line: 248, column: 13, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !184, line: 246, column: 59)
!3481 = distinct !DILexicalBlock(scope: !3475, file: !184, line: 246, column: 24)
!3482 = !DILocation(line: 249, column: 23, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !184, line: 248, column: 61)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !184, line: 248, column: 24)
!3485 = !DILocation(line: 250, column: 13, scope: !3483)
!3486 = !DILocation(line: 254, column: 17, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3453, file: !184, line: 254, column: 17)
!3488 = !DILocation(line: 254, column: 17, scope: !3453)
!3489 = !DILocation(line: 258, column: 22, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !184, line: 258, column: 22)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !184, line: 256, column: 55)
!3492 = distinct !DILexicalBlock(scope: !3487, file: !184, line: 256, column: 23)
!3493 = !DILocation(line: 258, column: 37, scope: !3490)
!3494 = !DILocation(line: 258, column: 22, scope: !3491)
!3495 = !DILocation(line: 261, column: 13, scope: !3491)
!3496 = !DILocation(line: 263, column: 13, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !184, line: 261, column: 59)
!3498 = distinct !DILexicalBlock(scope: !3492, file: !184, line: 261, column: 24)
!3499 = !DILocation(line: 264, column: 23, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !184, line: 263, column: 61)
!3501 = distinct !DILexicalBlock(scope: !3498, file: !184, line: 263, column: 24)
!3502 = !DILocation(line: 265, column: 13, scope: !3500)
!3503 = !DILocation(line: 268, column: 13, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !184, line: 268, column: 13)
!3505 = distinct !DILexicalBlock(scope: !3453, file: !184, line: 268, column: 13)
!3506 = distinct !{!3506, !3503, !3503}
!3507 = !DILocation(line: 272, column: 5, scope: !3445)
!3508 = !DILocation(line: 0, scope: !3453)
!3509 = !DILocation(line: 273, column: 1, scope: !3445)
!3510 = distinct !DISubprogram(name: "flash_config", scope: !184, file: !184, line: 357, type: !154, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3511)
!3511 = !{!3512, !3513, !3514, !3515}
!3512 = !DILocalVariable(name: "i", scope: !3510, file: !184, line: 360, type: !7)
!3513 = !DILocalVariable(name: "jedec", scope: !3510, file: !184, line: 361, type: !195)
!3514 = !DILocalVariable(name: "buf", scope: !3510, file: !184, line: 362, type: !3316)
!3515 = !DILocalVariable(name: "info", scope: !3510, file: !184, line: 363, type: !196)
!3516 = !DILocation(line: 362, column: 5, scope: !3510)
!3517 = !DILocation(line: 362, column: 19, scope: !3510)
!3518 = !DILocation(line: 377, column: 26, scope: !3510)
!3519 = !DILocation(line: 377, column: 24, scope: !3510)
!3520 = !DILocation(line: 380, column: 19, scope: !3510)
!3521 = !DILocation(line: 382, column: 5, scope: !3510)
!3522 = !DILocation(line: 383, column: 45, scope: !3510)
!3523 = !DILocation(line: 383, column: 30, scope: !3510)
!3524 = !DILocation(line: 383, column: 52, scope: !3510)
!3525 = !DILocation(line: 383, column: 77, scope: !3510)
!3526 = !DILocation(line: 383, column: 62, scope: !3510)
!3527 = !DILocation(line: 383, column: 84, scope: !3510)
!3528 = !DILocation(line: 383, column: 59, scope: !3510)
!3529 = !DILocation(line: 0, scope: !3510)
!3530 = !DILocation(line: 385, column: 5, scope: !3510)
!3531 = !DILocation(line: 387, column: 5, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3510, file: !184, line: 387, column: 5)
!3533 = !DILocation(line: 388, column: 17, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !184, line: 387, column: 70)
!3535 = distinct !DILexicalBlock(scope: !3532, file: !184, line: 387, column: 5)
!3536 = !DILocation(line: 389, column: 19, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3534, file: !184, line: 389, column: 13)
!3538 = !DILocation(line: 389, column: 25, scope: !3537)
!3539 = !DILocation(line: 389, column: 22, scope: !3537)
!3540 = !DILocation(line: 389, column: 32, scope: !3537)
!3541 = !DILocation(line: 389, column: 41, scope: !3537)
!3542 = !DILocation(line: 389, column: 50, scope: !3537)
!3543 = !DILocation(line: 389, column: 13, scope: !3534)
!3544 = !DILocation(line: 390, column: 13, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3537, file: !184, line: 389, column: 60)
!3546 = !DILocation(line: 391, column: 27, scope: !3545)
!3547 = !DILocation(line: 392, column: 26, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3545, file: !184, line: 392, column: 17)
!3549 = !DILocation(line: 392, column: 17, scope: !3545)
!3550 = !DILocation(line: 394, column: 33, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3548, file: !184, line: 394, column: 24)
!3552 = !DILocation(line: 394, column: 24, scope: !3548)
!3553 = !DILocation(line: 396, column: 33, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3551, file: !184, line: 396, column: 24)
!3555 = !DILocation(line: 396, column: 24, scope: !3551)
!3556 = !DILocation(line: 398, column: 33, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3554, file: !184, line: 398, column: 24)
!3558 = !DILocation(line: 398, column: 24, scope: !3554)
!3559 = !DILocation(line: 399, column: 34, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3557, file: !184, line: 398, column: 52)
!3561 = !DILocation(line: 404, column: 9, scope: !3510)
!3562 = !DILocation(line: 0, scope: !3548)
!3563 = !DILocation(line: 387, column: 66, scope: !3535)
!3564 = !DILocation(line: 387, column: 19, scope: !3535)
!3565 = distinct !{!3565, !3531, !3566}
!3566 = !DILocation(line: 402, column: 5, scope: !3532)
!3567 = !DILocation(line: 404, column: 9, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3510, file: !184, line: 404, column: 9)
!3569 = !DILocation(line: 404, column: 26, scope: !3568)
!3570 = !DILocation(line: 405, column: 51, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3568, file: !184, line: 404, column: 47)
!3572 = !DILocation(line: 405, column: 23, scope: !3571)
!3573 = !DILocation(line: 407, column: 19, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3571, file: !184, line: 407, column: 13)
!3575 = !DILocation(line: 407, column: 25, scope: !3574)
!3576 = !DILocation(line: 407, column: 22, scope: !3574)
!3577 = !DILocation(line: 407, column: 32, scope: !3574)
!3578 = !DILocation(line: 407, column: 41, scope: !3574)
!3579 = !DILocation(line: 407, column: 50, scope: !3574)
!3580 = !DILocation(line: 407, column: 13, scope: !3571)
!3581 = !DILocation(line: 411, column: 13, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3574, file: !184, line: 410, column: 16)
!3583 = !DILocation(line: 412, column: 13, scope: !3582)
!3584 = !DILocation(line: 414, column: 5, scope: !3571)
!3585 = !DILocation(line: 416, column: 10, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3510, file: !184, line: 416, column: 9)
!3587 = !DILocation(line: 416, column: 9, scope: !3510)
!3588 = !DILocation(line: 417, column: 9, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3586, file: !184, line: 416, column: 25)
!3590 = !DILocation(line: 419, column: 23, scope: !3589)
!3591 = !DILocation(line: 420, column: 5, scope: !3589)
!3592 = !DILocation(line: 422, column: 1, scope: !3510)
!3593 = distinct !DISubprogram(name: "flash_init", scope: !184, file: !184, line: 425, type: !1951, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3594)
!3594 = !{!3595, !3596, !3597, !3598, !3599}
!3595 = !DILocalVariable(name: "security_enable", arg: 1, scope: !3593, file: !184, line: 425, type: !7)
!3596 = !DILocalVariable(name: "i", scope: !3593, file: !184, line: 427, type: !7)
!3597 = !DILocalVariable(name: "jedec", scope: !3593, file: !184, line: 428, type: !195)
!3598 = !DILocalVariable(name: "buf", scope: !3593, file: !184, line: 429, type: !3316)
!3599 = !DILocalVariable(name: "info", scope: !3593, file: !184, line: 430, type: !196)
!3600 = !DILocation(line: 0, scope: !3593)
!3601 = !DILocation(line: 429, column: 5, scope: !3593)
!3602 = !DILocation(line: 429, column: 19, scope: !3593)
!3603 = !DILocation(line: 436, column: 5, scope: !3593)
!3604 = !DILocation(line: 438, column: 26, scope: !3593)
!3605 = !DILocation(line: 438, column: 24, scope: !3593)
!3606 = !DILocation(line: 440, column: 5, scope: !3593)
!3607 = !DILocation(line: 442, column: 19, scope: !3593)
!3608 = !DILocation(line: 444, column: 5, scope: !3593)
!3609 = !DILocation(line: 445, column: 45, scope: !3593)
!3610 = !DILocation(line: 445, column: 30, scope: !3593)
!3611 = !DILocation(line: 445, column: 52, scope: !3593)
!3612 = !DILocation(line: 445, column: 77, scope: !3593)
!3613 = !DILocation(line: 445, column: 62, scope: !3593)
!3614 = !DILocation(line: 445, column: 84, scope: !3593)
!3615 = !DILocation(line: 445, column: 59, scope: !3593)
!3616 = !DILocation(line: 447, column: 5, scope: !3593)
!3617 = !DILocation(line: 449, column: 5, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3593, file: !184, line: 449, column: 5)
!3619 = !DILocation(line: 450, column: 17, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !184, line: 449, column: 70)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !184, line: 449, column: 5)
!3622 = !DILocation(line: 451, column: 19, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3620, file: !184, line: 451, column: 13)
!3624 = !DILocation(line: 451, column: 25, scope: !3623)
!3625 = !DILocation(line: 451, column: 22, scope: !3623)
!3626 = !DILocation(line: 451, column: 32, scope: !3623)
!3627 = !DILocation(line: 451, column: 41, scope: !3623)
!3628 = !DILocation(line: 451, column: 50, scope: !3623)
!3629 = !DILocation(line: 451, column: 13, scope: !3620)
!3630 = !DILocation(line: 452, column: 13, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3623, file: !184, line: 451, column: 60)
!3632 = !DILocation(line: 453, column: 27, scope: !3631)
!3633 = !DILocation(line: 454, column: 9, scope: !3631)
!3634 = !DILocation(line: 449, column: 66, scope: !3621)
!3635 = !DILocation(line: 449, column: 19, scope: !3621)
!3636 = distinct !{!3636, !3617, !3637}
!3637 = !DILocation(line: 455, column: 5, scope: !3618)
!3638 = !DILocation(line: 457, column: 10, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3593, file: !184, line: 457, column: 9)
!3640 = !DILocation(line: 457, column: 9, scope: !3593)
!3641 = !DILocation(line: 458, column: 9, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3639, file: !184, line: 457, column: 25)
!3643 = !DILocation(line: 460, column: 23, scope: !3642)
!3644 = !DILocation(line: 461, column: 5, scope: !3642)
!3645 = !DILocation(line: 462, column: 1, scope: !3593)
!3646 = distinct !DISubprogram(name: "flash_reset", scope: !184, file: !184, line: 170, type: !154, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1397)
!3647 = !DILocation(line: 172, column: 5, scope: !3646)
!3648 = !DILocation(line: 173, column: 5, scope: !3646)
!3649 = !DILocation(line: 176, column: 5, scope: !3646)
!3650 = !DILocation(line: 177, column: 5, scope: !3646)
!3651 = !DILocation(line: 179, column: 5, scope: !3646)
!3652 = distinct !DISubprogram(name: "flash_wait_ready", scope: !184, file: !184, line: 469, type: !3653, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!7, !7}
!3655 = !{!3656, !3657, !3658}
!3656 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !3652, file: !184, line: 469, type: !7)
!3657 = !DILocalVariable(name: "count", scope: !3652, file: !184, line: 471, type: !7)
!3658 = !DILocalVariable(name: "sr", scope: !3652, file: !184, line: 472, type: !58)
!3659 = !DILocation(line: 0, scope: !3652)
!3660 = !DILocation(line: 472, column: 5, scope: !3652)
!3661 = !DILocation(line: 472, column: 19, scope: !3652)
!3662 = !DILocation(line: 479, column: 28, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !184, line: 479, column: 5)
!3664 = distinct !DILexicalBlock(scope: !3652, file: !184, line: 479, column: 5)
!3665 = !DILocation(line: 479, column: 5, scope: !3664)
!3666 = !DILocation(line: 480, column: 14, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !184, line: 480, column: 13)
!3668 = distinct !DILexicalBlock(scope: !3663, file: !184, line: 479, column: 64)
!3669 = !DILocation(line: 480, column: 34, scope: !3667)
!3670 = !DILocation(line: 480, column: 13, scope: !3668)
!3671 = !DILocation(line: 482, column: 22, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3667, file: !184, line: 482, column: 20)
!3673 = !DILocation(line: 482, column: 25, scope: !3672)
!3674 = !DILocation(line: 482, column: 20, scope: !3667)
!3675 = !DILocation(line: 493, column: 1, scope: !3652)
!3676 = !DILocation(line: 483, column: 13, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3672, file: !184, line: 482, column: 36)
!3678 = !DILocation(line: 486, column: 9, scope: !3668)
!3679 = !DILocation(line: 479, column: 60, scope: !3663)
!3680 = distinct !{!3680, !3665, !3681}
!3681 = !DILocation(line: 488, column: 5, scope: !3664)
!3682 = !DILocation(line: 491, column: 5, scope: !3652)
!3683 = distinct !DISubprogram(name: "flash_read_sr", scope: !184, file: !184, line: 623, type: !3684, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3686)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{!7, !177}
!3686 = !{!3687, !3688, !3689}
!3687 = !DILocalVariable(name: "val", arg: 1, scope: !3683, file: !184, line: 623, type: !177)
!3688 = !DILocalVariable(name: "retval", scope: !3683, file: !184, line: 625, type: !7)
!3689 = !DILocalVariable(name: "code", scope: !3683, file: !184, line: 626, type: !58)
!3690 = !DILocation(line: 0, scope: !3683)
!3691 = !DILocation(line: 626, column: 5, scope: !3683)
!3692 = !DILocation(line: 626, column: 19, scope: !3683)
!3693 = !DILocation(line: 628, column: 14, scope: !3683)
!3694 = !DILocation(line: 629, column: 16, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3683, file: !184, line: 629, column: 9)
!3696 = !DILocation(line: 634, column: 1, scope: !3683)
!3697 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !184, file: !184, line: 505, type: !3391, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3698)
!3698 = !{!3699, !3700, !3701, !3702}
!3699 = !DILocalVariable(name: "buf", arg: 1, scope: !3697, file: !184, line: 505, type: !177)
!3700 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3697, file: !184, line: 505, type: !7)
!3701 = !DILocalVariable(name: "code", scope: !3697, file: !184, line: 507, type: !229)
!3702 = !DILocalVariable(name: "rc", scope: !3697, file: !184, line: 508, type: !7)
!3703 = !DILocation(line: 0, scope: !3697)
!3704 = !DILocation(line: 507, column: 5, scope: !3697)
!3705 = !DILocation(line: 507, column: 19, scope: !3697)
!3706 = !DILocation(line: 510, column: 10, scope: !3697)
!3707 = !DILocation(line: 513, column: 1, scope: !3697)
!3708 = !DILocation(line: 512, column: 5, scope: !3697)
!3709 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !184, file: !184, line: 515, type: !3391, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3710)
!3710 = !{!3711, !3712, !3713, !3714}
!3711 = !DILocalVariable(name: "buf", arg: 1, scope: !3709, file: !184, line: 515, type: !177)
!3712 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3709, file: !184, line: 515, type: !7)
!3713 = !DILocalVariable(name: "code", scope: !3709, file: !184, line: 517, type: !229)
!3714 = !DILocalVariable(name: "rc", scope: !3709, file: !184, line: 518, type: !7)
!3715 = !DILocation(line: 0, scope: !3709)
!3716 = !DILocation(line: 517, column: 5, scope: !3709)
!3717 = !DILocation(line: 517, column: 19, scope: !3709)
!3718 = !DILocation(line: 520, column: 10, scope: !3709)
!3719 = !DILocation(line: 523, column: 1, scope: !3709)
!3720 = !DILocation(line: 522, column: 5, scope: !3709)
!3721 = distinct !DISubprogram(name: "flash_read", scope: !184, file: !184, line: 526, type: !3722, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3724)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!7, !177, !30, !7}
!3724 = !{!3725, !3726, !3727, !3728, !3729}
!3725 = !DILocalVariable(name: "buf", arg: 1, scope: !3721, file: !184, line: 526, type: !177)
!3726 = !DILocalVariable(name: "from", arg: 2, scope: !3721, file: !184, line: 526, type: !30)
!3727 = !DILocalVariable(name: "len", arg: 3, scope: !3721, file: !184, line: 526, type: !7)
!3728 = !DILocalVariable(name: "cmd", scope: !3721, file: !184, line: 528, type: !229)
!3729 = !DILocalVariable(name: "rdlen", scope: !3721, file: !184, line: 529, type: !7)
!3730 = !DILocation(line: 0, scope: !3721)
!3731 = !DILocation(line: 528, column: 5, scope: !3721)
!3732 = !DILocation(line: 528, column: 19, scope: !3721)
!3733 = !DILocation(line: 532, column: 13, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3721, file: !184, line: 532, column: 9)
!3735 = !DILocation(line: 532, column: 9, scope: !3721)
!3736 = !DILocation(line: 537, column: 9, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3721, file: !184, line: 537, column: 9)
!3738 = !DILocation(line: 542, column: 22, scope: !3721)
!3739 = !DILocation(line: 543, column: 12, scope: !3721)
!3740 = !DILocation(line: 544, column: 19, scope: !3721)
!3741 = !DILocation(line: 544, column: 14, scope: !3721)
!3742 = !DILocation(line: 544, column: 5, scope: !3721)
!3743 = !DILocation(line: 544, column: 12, scope: !3721)
!3744 = !DILocation(line: 545, column: 19, scope: !3721)
!3745 = !DILocation(line: 545, column: 14, scope: !3721)
!3746 = !DILocation(line: 545, column: 5, scope: !3721)
!3747 = !DILocation(line: 545, column: 12, scope: !3721)
!3748 = !DILocation(line: 546, column: 14, scope: !3721)
!3749 = !DILocation(line: 546, column: 5, scope: !3721)
!3750 = !DILocation(line: 546, column: 12, scope: !3721)
!3751 = !DILocation(line: 548, column: 13, scope: !3721)
!3752 = !DILocation(line: 553, column: 5, scope: !3721)
!3753 = !DILocation(line: 554, column: 1, scope: !3721)
!3754 = distinct !DISubprogram(name: "flash_fast_read", scope: !184, file: !184, line: 557, type: !3755, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3757)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!7, !177, !30, !7, !7}
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3764, !3765, !3766}
!3758 = !DILocalVariable(name: "buf", arg: 1, scope: !3754, file: !184, line: 557, type: !177)
!3759 = !DILocalVariable(name: "from", arg: 2, scope: !3754, file: !184, line: 557, type: !30)
!3760 = !DILocalVariable(name: "len", arg: 3, scope: !3754, file: !184, line: 557, type: !7)
!3761 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !3754, file: !184, line: 557, type: !7)
!3762 = !DILocalVariable(name: "cmd", scope: !3754, file: !184, line: 559, type: !3763)
!3763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 256, elements: !1961)
!3764 = !DILocalVariable(name: "cmd_len", scope: !3754, file: !184, line: 560, type: !7)
!3765 = !DILocalVariable(name: "rdlen", scope: !3754, file: !184, line: 561, type: !7)
!3766 = !DILocalVariable(name: "i", scope: !3754, file: !184, line: 561, type: !7)
!3767 = !DILocation(line: 0, scope: !3754)
!3768 = !DILocation(line: 559, column: 5, scope: !3754)
!3769 = !DILocation(line: 559, column: 19, scope: !3754)
!3770 = !DILocation(line: 564, column: 13, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3754, file: !184, line: 564, column: 9)
!3772 = !DILocation(line: 564, column: 9, scope: !3754)
!3773 = !DILocation(line: 569, column: 9, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3754, file: !184, line: 569, column: 9)
!3775 = !DILocation(line: 574, column: 12, scope: !3754)
!3776 = !DILocation(line: 575, column: 19, scope: !3754)
!3777 = !DILocation(line: 575, column: 14, scope: !3754)
!3778 = !DILocation(line: 575, column: 5, scope: !3754)
!3779 = !DILocation(line: 575, column: 12, scope: !3754)
!3780 = !DILocation(line: 576, column: 19, scope: !3754)
!3781 = !DILocation(line: 576, column: 14, scope: !3754)
!3782 = !DILocation(line: 576, column: 5, scope: !3754)
!3783 = !DILocation(line: 576, column: 12, scope: !3754)
!3784 = !DILocation(line: 577, column: 14, scope: !3754)
!3785 = !DILocation(line: 577, column: 5, scope: !3754)
!3786 = !DILocation(line: 577, column: 12, scope: !3754)
!3787 = !DILocation(line: 580, column: 19, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !184, line: 580, column: 5)
!3789 = distinct !DILexicalBlock(scope: !3754, file: !184, line: 580, column: 5)
!3790 = !DILocation(line: 580, column: 5, scope: !3789)
!3791 = !DILocation(line: 581, column: 15, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3788, file: !184, line: 580, column: 62)
!3793 = !DILocation(line: 581, column: 9, scope: !3792)
!3794 = !DILocation(line: 581, column: 20, scope: !3792)
!3795 = !DILocation(line: 580, column: 58, scope: !3788)
!3796 = !DILocation(line: 580, column: 33, scope: !3788)
!3797 = distinct !{!3797, !3790, !3798}
!3798 = !DILocation(line: 583, column: 5, scope: !3789)
!3799 = !DILocation(line: 585, column: 13, scope: !3754)
!3800 = !DILocation(line: 590, column: 5, scope: !3754)
!3801 = !DILocation(line: 591, column: 1, scope: !3754)
!3802 = distinct !DISubprogram(name: "flash_read_sr2", scope: !184, file: !184, line: 636, type: !3684, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3803)
!3803 = !{!3804, !3805, !3806}
!3804 = !DILocalVariable(name: "val", arg: 1, scope: !3802, file: !184, line: 636, type: !177)
!3805 = !DILocalVariable(name: "retval", scope: !3802, file: !184, line: 638, type: !7)
!3806 = !DILocalVariable(name: "code", scope: !3802, file: !184, line: 639, type: !58)
!3807 = !DILocation(line: 0, scope: !3802)
!3808 = !DILocation(line: 639, column: 5, scope: !3802)
!3809 = !DILocation(line: 641, column: 9, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3802, file: !184, line: 641, column: 9)
!3811 = !DILocation(line: 641, column: 45, scope: !3810)
!3812 = !DILocation(line: 643, column: 14, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3810, file: !184, line: 641, column: 80)
!3814 = !DILocation(line: 644, column: 5, scope: !3813)
!3815 = !DILocation(line: 646, column: 14, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !184, line: 644, column: 50)
!3817 = distinct !DILexicalBlock(scope: !3810, file: !184, line: 644, column: 16)
!3818 = !DILocation(line: 647, column: 5, scope: !3816)
!3819 = !DILocation(line: 649, column: 14, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !184, line: 647, column: 52)
!3821 = distinct !DILexicalBlock(scope: !3817, file: !184, line: 647, column: 16)
!3822 = !DILocation(line: 650, column: 5, scope: !3820)
!3823 = !DILocation(line: 652, column: 16, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !184, line: 650, column: 54)
!3825 = distinct !DILexicalBlock(scope: !3821, file: !184, line: 650, column: 16)
!3826 = !DILocation(line: 652, column: 14, scope: !3824)
!3827 = !DILocation(line: 653, column: 5, scope: !3824)
!3828 = !DILocation(line: 655, column: 9, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !184, line: 654, column: 10)
!3830 = !DILocation(line: 656, column: 14, scope: !3829)
!3831 = !DILocation(line: 659, column: 14, scope: !3802)
!3832 = !DILocation(line: 660, column: 16, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3802, file: !184, line: 660, column: 9)
!3834 = !DILocation(line: 665, column: 1, scope: !3802)
!3835 = distinct !DISubprogram(name: "flash_unprotect", scope: !184, file: !184, line: 667, type: !2959, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3836)
!3836 = !{!3837}
!3837 = !DILocalVariable(name: "sr", scope: !3835, file: !184, line: 669, type: !58)
!3838 = !DILocation(line: 669, column: 5, scope: !3835)
!3839 = !DILocation(line: 0, scope: !3835)
!3840 = !DILocation(line: 669, column: 19, scope: !3835)
!3841 = !DILocation(line: 671, column: 9, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3835, file: !184, line: 671, column: 9)
!3843 = !DILocation(line: 671, column: 28, scope: !3842)
!3844 = !DILocation(line: 671, column: 9, scope: !3835)
!3845 = !DILocation(line: 676, column: 10, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3835, file: !184, line: 676, column: 9)
!3847 = !DILocation(line: 676, column: 13, scope: !3846)
!3848 = !DILocation(line: 676, column: 43, scope: !3846)
!3849 = !DILocation(line: 676, column: 9, scope: !3835)
!3850 = !DILocation(line: 677, column: 12, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3846, file: !184, line: 676, column: 49)
!3852 = !DILocation(line: 678, column: 9, scope: !3851)
!3853 = !DILocation(line: 679, column: 5, scope: !3851)
!3854 = !DILocation(line: 681, column: 1, scope: !3835)
!3855 = distinct !DISubprogram(name: "flash_write_sr", scope: !184, file: !184, line: 609, type: !3684, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3856)
!3856 = !{!3857, !3858, !3859}
!3857 = !DILocalVariable(name: "val", arg: 1, scope: !3855, file: !184, line: 609, type: !177)
!3858 = !DILocalVariable(name: "retval", scope: !3855, file: !184, line: 611, type: !7)
!3859 = !DILocalVariable(name: "code", scope: !3855, file: !184, line: 612, type: !58)
!3860 = !DILocation(line: 0, scope: !3855)
!3861 = !DILocation(line: 612, column: 5, scope: !3855)
!3862 = !DILocation(line: 612, column: 20, scope: !3855)
!3863 = !DILocation(line: 614, column: 14, scope: !3855)
!3864 = !DILocation(line: 621, column: 1, scope: !3855)
!3865 = distinct !DISubprogram(name: "flash_protect", scope: !184, file: !184, line: 686, type: !2959, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3866)
!3866 = !{!3867}
!3867 = !DILocalVariable(name: "sr", scope: !3865, file: !184, line: 688, type: !58)
!3868 = !DILocation(line: 688, column: 5, scope: !3865)
!3869 = !DILocation(line: 0, scope: !3865)
!3870 = !DILocation(line: 688, column: 19, scope: !3865)
!3871 = !DILocation(line: 690, column: 9, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3865, file: !184, line: 690, column: 9)
!3873 = !DILocation(line: 690, column: 28, scope: !3872)
!3874 = !DILocation(line: 690, column: 9, scope: !3865)
!3875 = !DILocation(line: 695, column: 8, scope: !3865)
!3876 = !DILocation(line: 696, column: 5, scope: !3865)
!3877 = !DILocation(line: 697, column: 5, scope: !3865)
!3878 = !DILocation(line: 698, column: 1, scope: !3865)
!3879 = distinct !DISubprogram(name: "flash_write_enable", scope: !184, file: !184, line: 701, type: !2959, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3880)
!3880 = !{!3881}
!3881 = !DILocalVariable(name: "code", scope: !3879, file: !184, line: 703, type: !58)
!3882 = !DILocation(line: 703, column: 5, scope: !3879)
!3883 = !DILocation(line: 0, scope: !3879)
!3884 = !DILocation(line: 703, column: 19, scope: !3879)
!3885 = !DILocation(line: 704, column: 12, scope: !3879)
!3886 = !DILocation(line: 705, column: 1, scope: !3879)
!3887 = !DILocation(line: 704, column: 5, scope: !3879)
!3888 = distinct !DISubprogram(name: "flash_write_disable", scope: !184, file: !184, line: 707, type: !2959, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3889)
!3889 = !{!3890}
!3890 = !DILocalVariable(name: "code", scope: !3888, file: !184, line: 709, type: !58)
!3891 = !DILocation(line: 709, column: 5, scope: !3888)
!3892 = !DILocation(line: 0, scope: !3888)
!3893 = !DILocation(line: 709, column: 19, scope: !3888)
!3894 = !DILocation(line: 710, column: 12, scope: !3888)
!3895 = !DILocation(line: 711, column: 1, scope: !3888)
!3896 = !DILocation(line: 710, column: 5, scope: !3888)
!3897 = distinct !DISubprogram(name: "flash_erase_sector", scope: !184, file: !184, line: 713, type: !3898, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!7, !30}
!3900 = !{!3901, !3902, !3903, !3904}
!3901 = !DILocalVariable(name: "offset", arg: 1, scope: !3897, file: !184, line: 713, type: !30)
!3902 = !DILocalVariable(name: "buf", scope: !3897, file: !184, line: 715, type: !3316)
!3903 = !DILocalVariable(name: "savedMask", scope: !3897, file: !184, line: 716, type: !61)
!3904 = !DILocalVariable(name: "result", scope: !3897, file: !184, line: 717, type: !527)
!3905 = !DILocation(line: 0, scope: !3897)
!3906 = !DILocation(line: 715, column: 5, scope: !3897)
!3907 = !DILocation(line: 715, column: 19, scope: !3897)
!3908 = !DILocation(line: 720, column: 9, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3897, file: !184, line: 720, column: 9)
!3910 = !DILocation(line: 724, column: 22, scope: !3897)
!3911 = !DILocation(line: 725, column: 5, scope: !3897)
!3912 = !DILocation(line: 726, column: 18, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3897, file: !184, line: 725, column: 8)
!3914 = !DILocation(line: 727, column: 19, scope: !3897)
!3915 = !DILocation(line: 727, column: 5, scope: !3913)
!3916 = distinct !{!3916, !3911, !3917}
!3917 = !DILocation(line: 727, column: 28, scope: !3897)
!3918 = !DILocation(line: 729, column: 17, scope: !3897)
!3919 = !DILocation(line: 732, column: 12, scope: !3897)
!3920 = !DILocation(line: 733, column: 21, scope: !3897)
!3921 = !DILocation(line: 733, column: 14, scope: !3897)
!3922 = !DILocation(line: 733, column: 5, scope: !3897)
!3923 = !DILocation(line: 733, column: 12, scope: !3897)
!3924 = !DILocation(line: 734, column: 21, scope: !3897)
!3925 = !DILocation(line: 734, column: 14, scope: !3897)
!3926 = !DILocation(line: 734, column: 5, scope: !3897)
!3927 = !DILocation(line: 734, column: 12, scope: !3897)
!3928 = !DILocation(line: 735, column: 14, scope: !3897)
!3929 = !DILocation(line: 735, column: 5, scope: !3897)
!3930 = !DILocation(line: 735, column: 12, scope: !3897)
!3931 = !DILocation(line: 736, column: 5, scope: !3897)
!3932 = !DILocation(line: 737, column: 5, scope: !3897)
!3933 = !DILocation(line: 738, column: 5, scope: !3897)
!3934 = !DILocation(line: 740, column: 5, scope: !3897)
!3935 = !DILocation(line: 741, column: 18, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3897, file: !184, line: 740, column: 8)
!3937 = !DILocation(line: 742, column: 19, scope: !3897)
!3938 = !DILocation(line: 742, column: 5, scope: !3936)
!3939 = distinct !{!3939, !3934, !3940}
!3940 = !DILocation(line: 742, column: 28, scope: !3897)
!3941 = !DILocation(line: 744, column: 5, scope: !3897)
!3942 = !DILocation(line: 746, column: 1, scope: !3897)
!3943 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !184, file: !184, line: 748, type: !3898, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3944)
!3944 = !{!3945, !3946, !3947, !3948}
!3945 = !DILocalVariable(name: "offset", arg: 1, scope: !3943, file: !184, line: 748, type: !30)
!3946 = !DILocalVariable(name: "buf", scope: !3943, file: !184, line: 750, type: !3316)
!3947 = !DILocalVariable(name: "savedMask", scope: !3943, file: !184, line: 751, type: !61)
!3948 = !DILocalVariable(name: "result", scope: !3943, file: !184, line: 752, type: !527)
!3949 = !DILocation(line: 0, scope: !3943)
!3950 = !DILocation(line: 750, column: 5, scope: !3943)
!3951 = !DILocation(line: 750, column: 19, scope: !3943)
!3952 = !DILocation(line: 755, column: 9, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3943, file: !184, line: 755, column: 9)
!3954 = !DILocation(line: 759, column: 22, scope: !3943)
!3955 = !DILocation(line: 760, column: 5, scope: !3943)
!3956 = !DILocation(line: 761, column: 18, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3943, file: !184, line: 760, column: 8)
!3958 = !DILocation(line: 762, column: 19, scope: !3943)
!3959 = !DILocation(line: 762, column: 5, scope: !3957)
!3960 = distinct !{!3960, !3955, !3961}
!3961 = !DILocation(line: 762, column: 28, scope: !3943)
!3962 = !DILocation(line: 764, column: 17, scope: !3943)
!3963 = !DILocation(line: 765, column: 12, scope: !3943)
!3964 = !DILocation(line: 766, column: 21, scope: !3943)
!3965 = !DILocation(line: 766, column: 14, scope: !3943)
!3966 = !DILocation(line: 766, column: 5, scope: !3943)
!3967 = !DILocation(line: 766, column: 12, scope: !3943)
!3968 = !DILocation(line: 767, column: 21, scope: !3943)
!3969 = !DILocation(line: 767, column: 14, scope: !3943)
!3970 = !DILocation(line: 767, column: 5, scope: !3943)
!3971 = !DILocation(line: 767, column: 12, scope: !3943)
!3972 = !DILocation(line: 768, column: 14, scope: !3943)
!3973 = !DILocation(line: 768, column: 5, scope: !3943)
!3974 = !DILocation(line: 768, column: 12, scope: !3943)
!3975 = !DILocation(line: 769, column: 5, scope: !3943)
!3976 = !DILocation(line: 770, column: 5, scope: !3943)
!3977 = !DILocation(line: 771, column: 5, scope: !3943)
!3978 = !DILocation(line: 772, column: 18, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3943, file: !184, line: 771, column: 8)
!3980 = !DILocation(line: 773, column: 19, scope: !3943)
!3981 = !DILocation(line: 773, column: 5, scope: !3979)
!3982 = distinct !{!3982, !3977, !3983}
!3983 = !DILocation(line: 773, column: 28, scope: !3943)
!3984 = !DILocation(line: 775, column: 5, scope: !3943)
!3985 = !DILocation(line: 777, column: 5, scope: !3943)
!3986 = !DILocation(line: 779, column: 1, scope: !3943)
!3987 = distinct !DISubprogram(name: "flash_erase_page", scope: !184, file: !184, line: 781, type: !3898, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3988)
!3988 = !{!3989, !3990, !3991, !3992}
!3989 = !DILocalVariable(name: "offset", arg: 1, scope: !3987, file: !184, line: 781, type: !30)
!3990 = !DILocalVariable(name: "buf", scope: !3987, file: !184, line: 783, type: !3316)
!3991 = !DILocalVariable(name: "savedMask", scope: !3987, file: !184, line: 784, type: !61)
!3992 = !DILocalVariable(name: "result", scope: !3987, file: !184, line: 785, type: !527)
!3993 = !DILocation(line: 0, scope: !3987)
!3994 = !DILocation(line: 783, column: 5, scope: !3987)
!3995 = !DILocation(line: 783, column: 19, scope: !3987)
!3996 = !DILocation(line: 788, column: 9, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3987, file: !184, line: 788, column: 9)
!3998 = !DILocation(line: 792, column: 22, scope: !3987)
!3999 = !DILocation(line: 793, column: 5, scope: !3987)
!4000 = !DILocation(line: 794, column: 18, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3987, file: !184, line: 793, column: 8)
!4002 = !DILocation(line: 795, column: 19, scope: !3987)
!4003 = !DILocation(line: 795, column: 5, scope: !4001)
!4004 = distinct !{!4004, !3999, !4005}
!4005 = !DILocation(line: 795, column: 28, scope: !3987)
!4006 = !DILocation(line: 798, column: 17, scope: !3987)
!4007 = !DILocation(line: 799, column: 12, scope: !3987)
!4008 = !DILocation(line: 800, column: 21, scope: !3987)
!4009 = !DILocation(line: 800, column: 14, scope: !3987)
!4010 = !DILocation(line: 800, column: 5, scope: !3987)
!4011 = !DILocation(line: 800, column: 12, scope: !3987)
!4012 = !DILocation(line: 801, column: 21, scope: !3987)
!4013 = !DILocation(line: 801, column: 14, scope: !3987)
!4014 = !DILocation(line: 801, column: 5, scope: !3987)
!4015 = !DILocation(line: 801, column: 12, scope: !3987)
!4016 = !DILocation(line: 802, column: 14, scope: !3987)
!4017 = !DILocation(line: 802, column: 5, scope: !3987)
!4018 = !DILocation(line: 802, column: 12, scope: !3987)
!4019 = !DILocation(line: 803, column: 5, scope: !3987)
!4020 = !DILocation(line: 805, column: 5, scope: !3987)
!4021 = !DILocation(line: 806, column: 5, scope: !3987)
!4022 = !DILocation(line: 808, column: 5, scope: !3987)
!4023 = !DILocation(line: 809, column: 18, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3987, file: !184, line: 808, column: 8)
!4025 = !DILocation(line: 810, column: 19, scope: !3987)
!4026 = !DILocation(line: 810, column: 5, scope: !4024)
!4027 = distinct !{!4027, !4022, !4028}
!4028 = !DILocation(line: 810, column: 28, scope: !3987)
!4029 = !DILocation(line: 812, column: 5, scope: !3987)
!4030 = !DILocation(line: 814, column: 1, scope: !3987)
!4031 = distinct !DISubprogram(name: "flash_erase_chip", scope: !184, file: !184, line: 816, type: !2959, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4032)
!4032 = !{!4033}
!4033 = !DILocalVariable(name: "buf", scope: !4031, file: !184, line: 818, type: !3316)
!4034 = !DILocation(line: 818, column: 5, scope: !4031)
!4035 = !DILocation(line: 818, column: 19, scope: !4031)
!4036 = !DILocation(line: 821, column: 9, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4031, file: !184, line: 821, column: 9)
!4038 = !DILocation(line: 825, column: 22, scope: !4031)
!4039 = !DILocation(line: 827, column: 5, scope: !4031)
!4040 = !DILocation(line: 828, column: 5, scope: !4031)
!4041 = !DILocation(line: 830, column: 12, scope: !4031)
!4042 = !DILocation(line: 832, column: 5, scope: !4031)
!4043 = !DILocation(line: 834, column: 9, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4031, file: !184, line: 834, column: 9)
!4045 = !DILocation(line: 838, column: 5, scope: !4031)
!4046 = !DILocation(line: 839, column: 22, scope: !4031)
!4047 = !DILocation(line: 841, column: 1, scope: !4031)
!4048 = distinct !DISubprogram(name: "flash_erase", scope: !184, file: !184, line: 844, type: !4049, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4051)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!7, !30, !7}
!4051 = !{!4052, !4053}
!4052 = !DILocalVariable(name: "offs", arg: 1, scope: !4048, file: !184, line: 844, type: !30)
!4053 = !DILocalVariable(name: "len", arg: 2, scope: !4048, file: !184, line: 844, type: !7)
!4054 = !DILocation(line: 0, scope: !4048)
!4055 = !DILocation(line: 849, column: 9, scope: !4048)
!4056 = !DILocation(line: 855, column: 13, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !184, line: 855, column: 13)
!4058 = distinct !DILexicalBlock(scope: !4048, file: !184, line: 854, column: 21)
!4059 = !DILocation(line: 859, column: 17, scope: !4058)
!4060 = !DILocation(line: 859, column: 32, scope: !4058)
!4061 = !DILocation(line: 859, column: 14, scope: !4058)
!4062 = !DILocation(line: 860, column: 13, scope: !4058)
!4063 = !DILocation(line: 854, column: 16, scope: !4048)
!4064 = !DILocation(line: 854, column: 5, scope: !4048)
!4065 = distinct !{!4065, !4064, !4066}
!4066 = !DILocation(line: 861, column: 5, scope: !4048)
!4067 = !DILocation(line: 864, column: 1, scope: !4048)
!4068 = distinct !DISubprogram(name: "flash_write", scope: !184, file: !184, line: 868, type: !4069, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4071)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!7, !193, !30, !7}
!4071 = !{!4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085}
!4072 = !DILocalVariable(name: "buf", arg: 1, scope: !4068, file: !184, line: 868, type: !193)
!4073 = !DILocalVariable(name: "to", arg: 2, scope: !4068, file: !184, line: 868, type: !30)
!4074 = !DILocalVariable(name: "len", arg: 3, scope: !4068, file: !184, line: 868, type: !7)
!4075 = !DILocalVariable(name: "page_offset", scope: !4068, file: !184, line: 870, type: !195)
!4076 = !DILocalVariable(name: "page_size", scope: !4068, file: !184, line: 870, type: !195)
!4077 = !DILocalVariable(name: "rc", scope: !4068, file: !184, line: 871, type: !7)
!4078 = !DILocalVariable(name: "retlen", scope: !4068, file: !184, line: 871, type: !7)
!4079 = !DILocalVariable(name: "mode", scope: !4068, file: !184, line: 872, type: !7)
!4080 = !DILocalVariable(name: "cmd", scope: !4068, file: !184, line: 873, type: !3316)
!4081 = !DILocalVariable(name: "result", scope: !4068, file: !184, line: 874, type: !527)
!4082 = !DILocalVariable(name: "savedMask", scope: !4068, file: !184, line: 875, type: !61)
!4083 = !DILocalVariable(name: "To", scope: !4068, file: !184, line: 877, type: !61)
!4084 = !DILocalVariable(name: "Buf", scope: !4068, file: !184, line: 878, type: !2415)
!4085 = !DILocalVariable(name: "p_data_first", scope: !4068, file: !184, line: 879, type: !2415)
!4086 = !DILocation(line: 0, scope: !4068)
!4087 = !DILocation(line: 873, column: 5, scope: !4068)
!4088 = !DILocation(line: 873, column: 19, scope: !4068)
!4089 = !DILocation(line: 882, column: 13, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4068, file: !184, line: 882, column: 9)
!4091 = !DILocation(line: 882, column: 9, scope: !4068)
!4092 = !DILocation(line: 886, column: 12, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4068, file: !184, line: 886, column: 9)
!4094 = !DILocation(line: 886, column: 20, scope: !4093)
!4095 = !DILocation(line: 886, column: 35, scope: !4093)
!4096 = !DILocation(line: 886, column: 62, scope: !4093)
!4097 = !DILocation(line: 886, column: 45, scope: !4093)
!4098 = !DILocation(line: 886, column: 18, scope: !4093)
!4099 = !DILocation(line: 886, column: 9, scope: !4068)
!4100 = !DILocation(line: 891, column: 9, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4068, file: !184, line: 891, column: 9)
!4102 = !DILocation(line: 896, column: 18, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4068, file: !184, line: 895, column: 8)
!4104 = !DILocation(line: 897, column: 19, scope: !4068)
!4105 = !DILocation(line: 897, column: 5, scope: !4103)
!4106 = distinct !{!4106, !4107, !4108}
!4107 = !DILocation(line: 895, column: 5, scope: !4068)
!4108 = !DILocation(line: 897, column: 28, scope: !4068)
!4109 = !DILocation(line: 899, column: 22, scope: !4068)
!4110 = !DILocation(line: 901, column: 12, scope: !4068)
!4111 = !DILocation(line: 903, column: 15, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4068, file: !184, line: 903, column: 9)
!4113 = !DILocation(line: 903, column: 24, scope: !4112)
!4114 = !DILocation(line: 903, column: 27, scope: !4112)
!4115 = !DILocation(line: 903, column: 43, scope: !4112)
!4116 = !DILocation(line: 903, column: 9, scope: !4068)
!4117 = !DILocation(line: 0, scope: !4112)
!4118 = !DILocation(line: 913, column: 16, scope: !4068)
!4119 = !DILocation(line: 913, column: 5, scope: !4068)
!4120 = !DILocation(line: 910, column: 24, scope: !4068)
!4121 = !DILocation(line: 910, column: 22, scope: !4068)
!4122 = !DILocation(line: 952, column: 5, scope: !4068)
!4123 = !DILocation(line: 914, column: 21, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4068, file: !184, line: 913, column: 21)
!4125 = !DILocation(line: 919, column: 21, scope: !4124)
!4126 = !DILocation(line: 919, column: 18, scope: !4124)
!4127 = !DILocation(line: 919, column: 16, scope: !4124)
!4128 = !DILocation(line: 920, column: 21, scope: !4124)
!4129 = !DILocation(line: 920, column: 18, scope: !4124)
!4130 = !DILocation(line: 920, column: 16, scope: !4124)
!4131 = !DILocation(line: 921, column: 18, scope: !4124)
!4132 = !DILocation(line: 921, column: 16, scope: !4124)
!4133 = !DILocation(line: 923, column: 13, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4124, file: !184, line: 923, column: 13)
!4135 = !DILocation(line: 927, column: 9, scope: !4124)
!4136 = !DILocation(line: 928, column: 21, scope: !4124)
!4137 = !DILocation(line: 929, column: 9, scope: !4124)
!4138 = !DILocation(line: 930, column: 14, scope: !4124)
!4139 = !DILocation(line: 931, column: 9, scope: !4124)
!4140 = !DILocation(line: 933, column: 9, scope: !4124)
!4141 = !DILocation(line: 934, column: 86, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4124, file: !184, line: 933, column: 12)
!4143 = !DILocation(line: 934, column: 22, scope: !4142)
!4144 = !DILocation(line: 935, column: 20, scope: !4124)
!4145 = !DILocation(line: 935, column: 9, scope: !4142)
!4146 = distinct !{!4146, !4140, !4147}
!4147 = !DILocation(line: 935, column: 29, scope: !4124)
!4148 = !DILocation(line: 937, column: 16, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4124, file: !184, line: 937, column: 13)
!4150 = !DILocation(line: 937, column: 13, scope: !4124)
!4151 = !DILocation(line: 938, column: 20, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4149, file: !184, line: 937, column: 21)
!4153 = !DILocation(line: 939, column: 20, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4152, file: !184, line: 939, column: 17)
!4155 = !DILocation(line: 939, column: 17, scope: !4152)
!4156 = !DILocation(line: 941, column: 17, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4154, file: !184, line: 939, column: 33)
!4158 = !DILocation(line: 942, column: 17, scope: !4157)
!4159 = !DILocation(line: 947, column: 13, scope: !4124)
!4160 = distinct !{!4160, !4119, !4161}
!4161 = !DILocation(line: 950, column: 5, scope: !4068)
!4162 = !DILocation(line: 949, column: 13, scope: !4124)
!4163 = !DILocation(line: 948, column: 12, scope: !4124)
!4164 = !DILocation(line: 953, column: 18, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4068, file: !184, line: 952, column: 8)
!4166 = !DILocation(line: 954, column: 19, scope: !4068)
!4167 = !DILocation(line: 954, column: 5, scope: !4165)
!4168 = distinct !{!4168, !4122, !4169}
!4169 = !DILocation(line: 954, column: 28, scope: !4068)
!4170 = !DILocation(line: 956, column: 5, scope: !4068)
!4171 = !DILocation(line: 957, column: 5, scope: !4068)
!4172 = !DILocation(line: 958, column: 1, scope: !4068)
!4173 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !184, file: !184, line: 963, type: !3898, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4174)
!4174 = !{!4175, !4176, !4177, !4178}
!4175 = !DILocalVariable(name: "to", arg: 1, scope: !4173, file: !184, line: 963, type: !30)
!4176 = !DILocalVariable(name: "len", scope: !4173, file: !184, line: 965, type: !7)
!4177 = !DILocalVariable(name: "rc", scope: !4173, file: !184, line: 965, type: !7)
!4178 = !DILocalVariable(name: "cmd", scope: !4173, file: !184, line: 966, type: !3316)
!4179 = !DILocation(line: 0, scope: !4173)
!4180 = !DILocation(line: 966, column: 5, scope: !4173)
!4181 = !DILocation(line: 966, column: 19, scope: !4173)
!4182 = !DILocation(line: 968, column: 12, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4173, file: !184, line: 968, column: 9)
!4184 = !DILocation(line: 968, column: 9, scope: !4173)
!4185 = !DILocation(line: 972, column: 12, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4173, file: !184, line: 972, column: 9)
!4187 = !DILocation(line: 972, column: 20, scope: !4186)
!4188 = !DILocation(line: 972, column: 35, scope: !4186)
!4189 = !DILocation(line: 972, column: 62, scope: !4186)
!4190 = !DILocation(line: 972, column: 45, scope: !4186)
!4191 = !DILocation(line: 972, column: 18, scope: !4186)
!4192 = !DILocation(line: 972, column: 9, scope: !4173)
!4193 = !DILocation(line: 976, column: 22, scope: !4173)
!4194 = !DILocation(line: 979, column: 9, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4173, file: !184, line: 979, column: 9)
!4196 = !DILocation(line: 983, column: 5, scope: !4173)
!4197 = !DILocation(line: 985, column: 12, scope: !4173)
!4198 = !DILocation(line: 986, column: 17, scope: !4173)
!4199 = !DILocation(line: 986, column: 14, scope: !4173)
!4200 = !DILocation(line: 986, column: 5, scope: !4173)
!4201 = !DILocation(line: 986, column: 12, scope: !4173)
!4202 = !DILocation(line: 987, column: 17, scope: !4173)
!4203 = !DILocation(line: 987, column: 14, scope: !4173)
!4204 = !DILocation(line: 987, column: 5, scope: !4173)
!4205 = !DILocation(line: 987, column: 12, scope: !4173)
!4206 = !DILocation(line: 988, column: 14, scope: !4173)
!4207 = !DILocation(line: 988, column: 5, scope: !4173)
!4208 = !DILocation(line: 988, column: 12, scope: !4173)
!4209 = !DILocation(line: 990, column: 5, scope: !4173)
!4210 = !DILocation(line: 991, column: 5, scope: !4173)
!4211 = !DILocation(line: 993, column: 10, scope: !4173)
!4212 = !DILocation(line: 994, column: 22, scope: !4173)
!4213 = !DILocation(line: 995, column: 5, scope: !4173)
!4214 = !DILocation(line: 996, column: 1, scope: !4173)
!4215 = distinct !DISubprogram(name: "flash_erase_write", scope: !184, file: !184, line: 998, type: !4069, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4216)
!4216 = !{!4217, !4218, !4219, !4220, !4224, !4225, !4226, !4230, !4231, !4232}
!4217 = !DILocalVariable(name: "buf", arg: 1, scope: !4215, file: !184, line: 998, type: !193)
!4218 = !DILocalVariable(name: "offs", arg: 2, scope: !4215, file: !184, line: 998, type: !30)
!4219 = !DILocalVariable(name: "count", arg: 3, scope: !4215, file: !184, line: 998, type: !7)
!4220 = !DILocalVariable(name: "block", scope: !4215, file: !184, line: 1000, type: !4221)
!4221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32768, elements: !4222)
!4222 = !{!4223}
!4223 = !DISubrange(count: 4096)
!4224 = !DILocalVariable(name: "blocksize", scope: !4215, file: !184, line: 1002, type: !7)
!4225 = !DILocalVariable(name: "blockmask", scope: !4215, file: !184, line: 1003, type: !7)
!4226 = !DILocalVariable(name: "piece", scope: !4227, file: !184, line: 1008, type: !30)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !184, line: 1007, column: 56)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !184, line: 1007, column: 13)
!4229 = distinct !DILexicalBlock(scope: !4215, file: !184, line: 1005, column: 23)
!4230 = !DILocalVariable(name: "blockaddr", scope: !4227, file: !184, line: 1008, type: !30)
!4231 = !DILocalVariable(name: "piece_size", scope: !4227, file: !184, line: 1009, type: !7)
!4232 = !DILocalVariable(name: "aligned_size", scope: !4233, file: !184, line: 1034, type: !30)
!4233 = distinct !DILexicalBlock(scope: !4228, file: !184, line: 1033, column: 16)
!4234 = !DILocation(line: 0, scope: !4215)
!4235 = !DILocation(line: 1000, column: 5, scope: !4215)
!4236 = !DILocation(line: 1000, column: 19, scope: !4215)
!4237 = !DILocation(line: 1005, column: 18, scope: !4215)
!4238 = !DILocation(line: 1005, column: 5, scope: !4215)
!4239 = !DILocation(line: 1007, column: 13, scope: !4228)
!4240 = !DILocation(line: 1007, column: 32, scope: !4228)
!4241 = !DILocation(line: 1011, column: 30, scope: !4227)
!4242 = !DILocation(line: 0, scope: !4227)
!4243 = !DILocation(line: 1013, column: 17, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4227, file: !184, line: 1013, column: 17)
!4245 = !DILocation(line: 1013, column: 72, scope: !4244)
!4246 = !DILocation(line: 1013, column: 17, scope: !4227)
!4247 = !DILocation(line: 1017, column: 30, scope: !4227)
!4248 = !DILocation(line: 1019, column: 26, scope: !4227)
!4249 = !DILocation(line: 1020, column: 26, scope: !4227)
!4250 = !DILocation(line: 1020, column: 13, scope: !4227)
!4251 = !DILocation(line: 1022, column: 17, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4227, file: !184, line: 1022, column: 17)
!4253 = !DILocation(line: 1026, column: 17, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4227, file: !184, line: 1026, column: 17)
!4255 = !DILocation(line: 1026, column: 58, scope: !4254)
!4256 = !DILocation(line: 1026, column: 17, scope: !4227)
!4257 = !DILocation(line: 1032, column: 19, scope: !4227)
!4258 = !DILocation(line: 1034, column: 47, scope: !4233)
!4259 = !DILocation(line: 0, scope: !4233)
!4260 = !DILocation(line: 1036, column: 17, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4233, file: !184, line: 1036, column: 17)
!4262 = !DILocation(line: 1040, column: 17, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4233, file: !184, line: 1040, column: 17)
!4264 = !DILocation(line: 1040, column: 54, scope: !4263)
!4265 = !DILocation(line: 1040, column: 17, scope: !4233)
!4266 = !DILocation(line: 1047, column: 19, scope: !4233)
!4267 = !DILocation(line: 0, scope: !4228)
!4268 = distinct !{!4268, !4238, !4269}
!4269 = !DILocation(line: 1049, column: 5, scope: !4215)
!4270 = !DILocation(line: 1052, column: 1, scope: !4215)
!4271 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !184, file: !184, line: 1055, type: !4272, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1397)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!4274}
!4274 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !6, line: 71, baseType: !186)
!4275 = !DILocation(line: 1057, column: 9, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4271, file: !184, line: 1057, column: 9)
!4277 = !DILocation(line: 1057, column: 9, scope: !4271)
!4278 = !DILocation(line: 1062, column: 9, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !184, line: 1061, column: 43)
!4280 = distinct !DILexicalBlock(scope: !4271, file: !184, line: 1061, column: 9)
!4281 = !DILocation(line: 1065, column: 48, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4271, file: !184, line: 1065, column: 9)
!4283 = !DILocation(line: 0, scope: !4282)
!4284 = !DILocation(line: 0, scope: !4271)
!4285 = !DILocation(line: 1072, column: 1, scope: !4271)
!4286 = distinct !DISubprogram(name: "get_current_count", scope: !2178, file: !2178, line: 56, type: !2255, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !1397)
!4287 = !DILocation(line: 58, column: 12, scope: !4286)
!4288 = !DILocation(line: 58, column: 5, scope: !4286)
!4289 = distinct !DISubprogram(name: "delay_time", scope: !2178, file: !2178, line: 62, type: !2676, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4290)
!4290 = !{!4291, !4292, !4293}
!4291 = !DILocalVariable(name: "count", arg: 1, scope: !4289, file: !2178, line: 62, type: !139)
!4292 = !DILocalVariable(name: "end_count", scope: !4289, file: !2178, line: 64, type: !139)
!4293 = !DILocalVariable(name: "current", scope: !4289, file: !2178, line: 64, type: !139)
!4294 = !DILocation(line: 0, scope: !4289)
!4295 = !DILocation(line: 66, column: 17, scope: !4289)
!4296 = !DILocation(line: 66, column: 37, scope: !4289)
!4297 = !DILocation(line: 66, column: 45, scope: !4289)
!4298 = !DILocation(line: 67, column: 15, scope: !4289)
!4299 = !DILocation(line: 68, column: 12, scope: !4289)
!4300 = !DILocation(line: 68, column: 5, scope: !4289)
!4301 = !DILocation(line: 69, column: 19, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4289, file: !2178, line: 68, column: 45)
!4303 = distinct !{!4303, !4300, !4304}
!4304 = !DILocation(line: 70, column: 5, scope: !4289)
!4305 = !DILocation(line: 72, column: 1, scope: !4289)
!4306 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !2178, file: !2178, line: 75, type: !2676, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4307)
!4307 = !{!4308, !4309, !4310}
!4308 = !DILocalVariable(name: "count", arg: 1, scope: !4306, file: !2178, line: 75, type: !139)
!4309 = !DILocalVariable(name: "end_count", scope: !4306, file: !2178, line: 77, type: !139)
!4310 = !DILocalVariable(name: "current", scope: !4306, file: !2178, line: 77, type: !139)
!4311 = !DILocation(line: 0, scope: !4306)
!4312 = !DILocation(line: 79, column: 17, scope: !4306)
!4313 = !DILocation(line: 79, column: 42, scope: !4306)
!4314 = !DILocation(line: 79, column: 50, scope: !4306)
!4315 = !DILocation(line: 80, column: 15, scope: !4306)
!4316 = !DILocation(line: 81, column: 12, scope: !4306)
!4317 = !DILocation(line: 81, column: 5, scope: !4306)
!4318 = !DILocation(line: 82, column: 19, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4306, file: !2178, line: 81, column: 45)
!4320 = distinct !{!4320, !4317, !4321}
!4321 = !DILocation(line: 83, column: 5, scope: !4306)
!4322 = !DILocation(line: 85, column: 1, scope: !4306)
!4323 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !2178, file: !2178, line: 95, type: !2255, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !1397)
!4324 = !DILocation(line: 97, column: 13, scope: !4323)
!4325 = !DILocation(line: 97, column: 5, scope: !4323)
!4326 = distinct !DISubprogram(name: "delay_ms", scope: !2178, file: !2178, line: 107, type: !2873, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4327)
!4327 = !{!4328, !4329}
!4328 = !DILocalVariable(name: "ms", arg: 1, scope: !4326, file: !2178, line: 107, type: !61)
!4329 = !DILocalVariable(name: "count", scope: !4326, file: !2178, line: 109, type: !61)
!4330 = !DILocation(line: 0, scope: !4326)
!4331 = !DILocation(line: 111, column: 17, scope: !4326)
!4332 = !DILocation(line: 112, column: 17, scope: !4326)
!4333 = !DILocation(line: 112, column: 23, scope: !4326)
!4334 = !DILocation(line: 112, column: 11, scope: !4326)
!4335 = !DILocation(line: 113, column: 17, scope: !4326)
!4336 = !DILocation(line: 113, column: 23, scope: !4326)
!4337 = !DILocation(line: 113, column: 11, scope: !4326)
!4338 = !DILocation(line: 114, column: 17, scope: !4326)
!4339 = !DILocation(line: 114, column: 23, scope: !4326)
!4340 = !DILocation(line: 114, column: 11, scope: !4326)
!4341 = !DILocation(line: 115, column: 5, scope: !4326)
!4342 = !DILocation(line: 116, column: 1, scope: !4326)
!4343 = distinct !DISubprogram(name: "delay_us", scope: !2178, file: !2178, line: 120, type: !2873, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4344)
!4344 = !{!4345, !4346, !4347}
!4345 = !DILocalVariable(name: "us", arg: 1, scope: !4343, file: !2178, line: 120, type: !61)
!4346 = !DILocalVariable(name: "count", scope: !4343, file: !2178, line: 122, type: !61)
!4347 = !DILocalVariable(name: "ticks_per_us", scope: !4343, file: !2178, line: 123, type: !61)
!4348 = !DILocation(line: 0, scope: !4343)
!4349 = !DILocation(line: 125, column: 20, scope: !4343)
!4350 = !DILocation(line: 125, column: 39, scope: !4343)
!4351 = !DILocation(line: 126, column: 26, scope: !4343)
!4352 = !DILocation(line: 128, column: 5, scope: !4343)
!4353 = !DILocation(line: 129, column: 1, scope: !4343)
!4354 = distinct !DISubprogram(name: "drvTMR_init", scope: !2178, file: !2178, line: 133, type: !4355, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4357)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{null, !61, !61, !69, !153}
!4357 = !{!4358, !4359, !4360, !4361}
!4358 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4354, file: !2178, line: 133, type: !61)
!4359 = !DILocalVariable(name: "countValue", arg: 2, scope: !4354, file: !2178, line: 133, type: !61)
!4360 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !4354, file: !2178, line: 133, type: !69)
!4361 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !4354, file: !2178, line: 133, type: !153)
!4362 = !DILocation(line: 0, scope: !4354)
!4363 = !DILocation(line: 136, column: 5, scope: !4354)
!4364 = !DILocation(line: 138, column: 18, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4354, file: !2178, line: 138, column: 9)
!4366 = !DILocation(line: 138, column: 9, scope: !4354)
!4367 = !DILocation(line: 139, column: 30, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4365, file: !2178, line: 138, column: 27)
!4369 = !DILocation(line: 141, column: 5, scope: !4368)
!4370 = !DILocation(line: 142, column: 30, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4365, file: !2178, line: 141, column: 12)
!4372 = !DILocation(line: 0, scope: !4365)
!4373 = !DILocation(line: 146, column: 5, scope: !4354)
!4374 = !DILocation(line: 147, column: 1, scope: !4354)
!4375 = distinct !DISubprogram(name: "TMR_Start", scope: !2178, file: !2178, line: 149, type: !2873, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4376)
!4376 = !{!4377}
!4377 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4375, file: !2178, line: 149, type: !61)
!4378 = !DILocation(line: 0, scope: !4375)
!4379 = !DILocation(line: 151, column: 5, scope: !4375)
!4380 = !DILocation(line: 152, column: 1, scope: !4375)
!4381 = distinct !DISubprogram(name: "TMR_Stop", scope: !2178, file: !2178, line: 154, type: !2873, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4382)
!4382 = !{!4383}
!4383 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4381, file: !2178, line: 154, type: !61)
!4384 = !DILocation(line: 0, scope: !4381)
!4385 = !DILocation(line: 156, column: 5, scope: !4381)
!4386 = !DILocation(line: 157, column: 1, scope: !4381)
!4387 = distinct !DISubprogram(name: "drvGPT2Init", scope: !2178, file: !2178, line: 160, type: !154, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !1397)
!4388 = !DILocation(line: 162, column: 5, scope: !4387)
!4389 = !DILocation(line: 163, column: 1, scope: !4387)
!4390 = distinct !DISubprogram(name: "drvGPT4Init", scope: !2178, file: !2178, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !1397)
!4391 = !DILocation(line: 167, column: 5, scope: !4390)
!4392 = !DILocation(line: 168, column: 1, scope: !4390)
!4393 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !2178, file: !2178, line: 170, type: !2873, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2177, retainedNodes: !4394)
!4394 = !{!4395}
!4395 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4393, file: !2178, line: 170, type: !61)
!4396 = !DILocation(line: 0, scope: !4393)
!4397 = !DILocation(line: 172, column: 9, scope: !4393)
!4398 = !DILocation(line: 177, column: 5, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !2178, line: 175, column: 27)
!4400 = distinct !DILexicalBlock(scope: !4393, file: !2178, line: 175, column: 9)
!4401 = !DILocation(line: 178, column: 1, scope: !4393)
!4402 = distinct !DISubprogram(name: "top_xtal_init", scope: !281, file: !281, line: 52, type: !154, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4403)
!4403 = !{!4404, !4405}
!4404 = !DILocalVariable(name: "u4RegVal", scope: !4402, file: !281, line: 54, type: !61)
!4405 = !DILocalVariable(name: "reg", scope: !4402, file: !281, line: 55, type: !195)
!4406 = !DILocation(line: 0, scope: !4402)
!4407 = !DILocation(line: 55, column: 25, scope: !4402)
!4408 = !DILocation(line: 56, column: 16, scope: !4402)
!4409 = !DILocation(line: 56, column: 23, scope: !4402)
!4410 = !DILocation(line: 58, column: 16, scope: !4402)
!4411 = !DILocation(line: 61, column: 5, scope: !4402)
!4412 = !DILocation(line: 59, column: 14, scope: !4402)
!4413 = !DILocation(line: 0, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4402, file: !281, line: 61, column: 18)
!4415 = !DILocation(line: 87, column: 38, scope: !4402)
!4416 = !DILocation(line: 88, column: 21, scope: !4402)
!4417 = !DILocation(line: 88, column: 19, scope: !4402)
!4418 = !DILocation(line: 89, column: 5, scope: !4402)
!4419 = !DILocation(line: 90, column: 17, scope: !4402)
!4420 = !DILocation(line: 90, column: 33, scope: !4402)
!4421 = !DILocation(line: 90, column: 5, scope: !4402)
!4422 = !DILocation(line: 91, column: 1, scope: !4402)
!4423 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !281, file: !281, line: 98, type: !2255, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !1397)
!4424 = !DILocation(line: 100, column: 12, scope: !4423)
!4425 = !DILocation(line: 100, column: 5, scope: !4423)
!4426 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !281, file: !281, line: 108, type: !2255, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !1397)
!4427 = !DILocation(line: 110, column: 12, scope: !4426)
!4428 = !DILocation(line: 110, column: 5, scope: !4426)
!4429 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !281, file: !281, line: 118, type: !154, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4430)
!4430 = !{!4431, !4432}
!4431 = !DILocalVariable(name: "reg", scope: !4429, file: !281, line: 120, type: !60)
!4432 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4429, file: !281, line: 121, type: !59)
!4433 = !DILocation(line: 120, column: 5, scope: !4429)
!4434 = !DILocation(line: 120, column: 23, scope: !4429)
!4435 = !DILocation(line: 0, scope: !4429)
!4436 = !DILocation(line: 123, column: 11, scope: !4429)
!4437 = !DILocation(line: 123, column: 9, scope: !4429)
!4438 = !DILocation(line: 124, column: 12, scope: !4429)
!4439 = !DILocation(line: 124, column: 16, scope: !4429)
!4440 = !DILocation(line: 124, column: 39, scope: !4429)
!4441 = !DILocation(line: 124, column: 9, scope: !4429)
!4442 = !DILocation(line: 126, column: 9, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4429, file: !281, line: 126, column: 9)
!4444 = !DILocation(line: 126, column: 13, scope: !4443)
!4445 = !DILocation(line: 126, column: 9, scope: !4429)
!4446 = !DILocation(line: 127, column: 15, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !281, line: 126, column: 47)
!4448 = !DILocation(line: 127, column: 13, scope: !4447)
!4449 = !DILocation(line: 128, column: 15, scope: !4447)
!4450 = !DILocation(line: 128, column: 19, scope: !4447)
!4451 = !DILocation(line: 128, column: 13, scope: !4447)
!4452 = !DILocation(line: 129, column: 15, scope: !4447)
!4453 = !DILocation(line: 129, column: 19, scope: !4447)
!4454 = !DILocation(line: 129, column: 13, scope: !4447)
!4455 = !DILocation(line: 130, column: 46, scope: !4447)
!4456 = !DILocation(line: 130, column: 9, scope: !4447)
!4457 = !DILocation(line: 132, column: 9, scope: !4447)
!4458 = !DILocation(line: 133, column: 19, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4447, file: !281, line: 132, column: 12)
!4460 = !DILocation(line: 133, column: 17, scope: !4459)
!4461 = !DILocation(line: 134, column: 19, scope: !4459)
!4462 = !DILocation(line: 134, column: 23, scope: !4459)
!4463 = !DILocation(line: 134, column: 17, scope: !4459)
!4464 = !DILocation(line: 135, column: 19, scope: !4447)
!4465 = !DILocation(line: 135, column: 18, scope: !4447)
!4466 = !DILocation(line: 135, column: 9, scope: !4459)
!4467 = distinct !{!4467, !4457, !4468}
!4468 = !DILocation(line: 135, column: 22, scope: !4447)
!4469 = !DILocation(line: 138, column: 1, scope: !4429)
!4470 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !4471, file: !4471, line: 176, type: !4472, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4476)
!4471 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!61, !4474}
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4475, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4476 = !{!4477}
!4477 = !DILocalVariable(name: "Register", arg: 1, scope: !4470, file: !4471, line: 176, type: !4474)
!4478 = !DILocation(line: 0, scope: !4470)
!4479 = !DILocation(line: 178, column: 13, scope: !4470)
!4480 = !DILocation(line: 178, column: 12, scope: !4470)
!4481 = !DILocation(line: 178, column: 5, scope: !4470)
!4482 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !4471, file: !4471, line: 171, type: !4483, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4485)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{null, !4474, !61}
!4485 = !{!4486, !4487}
!4486 = !DILocalVariable(name: "Register", arg: 1, scope: !4482, file: !4471, line: 171, type: !4474)
!4487 = !DILocalVariable(name: "Value", arg: 2, scope: !4482, file: !4471, line: 171, type: !61)
!4488 = !DILocation(line: 0, scope: !4482)
!4489 = !DILocation(line: 173, column: 6, scope: !4482)
!4490 = !DILocation(line: 173, column: 36, scope: !4482)
!4491 = !DILocation(line: 174, column: 1, scope: !4482)
!4492 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !281, file: !281, line: 145, type: !4493, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4495)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{null, !54}
!4495 = !{!4496, !4497, !4498}
!4496 = !DILocalVariable(name: "fg960M", arg: 1, scope: !4492, file: !281, line: 145, type: !54)
!4497 = !DILocalVariable(name: "reg", scope: !4492, file: !281, line: 147, type: !60)
!4498 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4492, file: !281, line: 148, type: !59)
!4499 = !DILocation(line: 0, scope: !4492)
!4500 = !DILocation(line: 147, column: 5, scope: !4492)
!4501 = !DILocation(line: 147, column: 23, scope: !4492)
!4502 = !DILocation(line: 150, column: 11, scope: !4492)
!4503 = !DILocation(line: 150, column: 9, scope: !4492)
!4504 = !DILocation(line: 151, column: 12, scope: !4492)
!4505 = !DILocation(line: 151, column: 16, scope: !4492)
!4506 = !DILocation(line: 151, column: 39, scope: !4492)
!4507 = !DILocation(line: 151, column: 9, scope: !4492)
!4508 = !DILocation(line: 153, column: 9, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4492, file: !281, line: 153, column: 9)
!4510 = !DILocation(line: 153, column: 13, scope: !4509)
!4511 = !DILocation(line: 153, column: 9, scope: !4492)
!4512 = !DILocation(line: 154, column: 15, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !281, line: 153, column: 45)
!4514 = !DILocation(line: 154, column: 13, scope: !4513)
!4515 = !DILocation(line: 155, column: 15, scope: !4513)
!4516 = !DILocation(line: 155, column: 19, scope: !4513)
!4517 = !DILocation(line: 155, column: 13, scope: !4513)
!4518 = !DILocation(line: 156, column: 15, scope: !4513)
!4519 = !DILocation(line: 156, column: 19, scope: !4513)
!4520 = !DILocation(line: 156, column: 13, scope: !4513)
!4521 = !DILocation(line: 157, column: 15, scope: !4513)
!4522 = !DILocation(line: 157, column: 13, scope: !4513)
!4523 = !DILocation(line: 158, column: 46, scope: !4513)
!4524 = !DILocation(line: 158, column: 9, scope: !4513)
!4525 = !DILocation(line: 160, column: 15, scope: !4513)
!4526 = !DILocation(line: 160, column: 13, scope: !4513)
!4527 = !DILocation(line: 161, column: 15, scope: !4513)
!4528 = !DILocation(line: 161, column: 19, scope: !4513)
!4529 = !DILocation(line: 161, column: 13, scope: !4513)
!4530 = !DILocation(line: 162, column: 15, scope: !4513)
!4531 = !DILocation(line: 162, column: 19, scope: !4513)
!4532 = !DILocation(line: 162, column: 13, scope: !4513)
!4533 = !DILocation(line: 163, column: 15, scope: !4513)
!4534 = !DILocation(line: 163, column: 19, scope: !4513)
!4535 = !DILocation(line: 163, column: 13, scope: !4513)
!4536 = !DILocation(line: 164, column: 46, scope: !4513)
!4537 = !DILocation(line: 164, column: 9, scope: !4513)
!4538 = !DILocation(line: 166, column: 9, scope: !4513)
!4539 = !DILocation(line: 167, column: 19, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4513, file: !281, line: 166, column: 12)
!4541 = !DILocation(line: 167, column: 17, scope: !4540)
!4542 = !DILocation(line: 168, column: 19, scope: !4540)
!4543 = !DILocation(line: 168, column: 23, scope: !4540)
!4544 = !DILocation(line: 168, column: 17, scope: !4540)
!4545 = !DILocation(line: 169, column: 19, scope: !4513)
!4546 = !DILocation(line: 169, column: 18, scope: !4513)
!4547 = !DILocation(line: 169, column: 9, scope: !4540)
!4548 = distinct !{!4548, !4538, !4549}
!4549 = !DILocation(line: 169, column: 22, scope: !4513)
!4550 = !DILocation(line: 171, column: 15, scope: !4513)
!4551 = !DILocation(line: 171, column: 13, scope: !4513)
!4552 = !DILocation(line: 172, column: 15, scope: !4513)
!4553 = !DILocation(line: 172, column: 19, scope: !4513)
!4554 = !DILocation(line: 172, column: 13, scope: !4513)
!4555 = !DILocation(line: 173, column: 15, scope: !4513)
!4556 = !DILocation(line: 173, column: 19, scope: !4513)
!4557 = !DILocation(line: 173, column: 13, scope: !4513)
!4558 = !DILocation(line: 174, column: 5, scope: !4513)
!4559 = !DILocation(line: 176, column: 11, scope: !4492)
!4560 = !DILocation(line: 176, column: 9, scope: !4492)
!4561 = !DILocation(line: 177, column: 9, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4492, file: !281, line: 177, column: 9)
!4563 = !DILocation(line: 0, scope: !4562)
!4564 = !DILocation(line: 177, column: 9, scope: !4492)
!4565 = !DILocation(line: 178, column: 19, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4562, file: !281, line: 177, column: 17)
!4567 = !DILocation(line: 178, column: 13, scope: !4566)
!4568 = !DILocation(line: 179, column: 5, scope: !4566)
!4569 = !DILocation(line: 180, column: 13, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4562, file: !281, line: 179, column: 12)
!4571 = !DILocation(line: 182, column: 42, scope: !4492)
!4572 = !DILocation(line: 182, column: 5, scope: !4492)
!4573 = !DILocation(line: 184, column: 1, scope: !4492)
!4574 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !281, file: !281, line: 191, type: !154, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4575)
!4575 = !{!4576, !4577}
!4576 = !DILocalVariable(name: "reg", scope: !4574, file: !281, line: 193, type: !60)
!4577 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4574, file: !281, line: 194, type: !59)
!4578 = !DILocation(line: 193, column: 5, scope: !4574)
!4579 = !DILocation(line: 193, column: 23, scope: !4574)
!4580 = !DILocation(line: 0, scope: !4574)
!4581 = !DILocation(line: 196, column: 11, scope: !4574)
!4582 = !DILocation(line: 196, column: 9, scope: !4574)
!4583 = !DILocation(line: 197, column: 11, scope: !4574)
!4584 = !DILocation(line: 197, column: 15, scope: !4574)
!4585 = !DILocation(line: 197, column: 9, scope: !4574)
!4586 = !DILocation(line: 198, column: 11, scope: !4574)
!4587 = !DILocation(line: 198, column: 15, scope: !4574)
!4588 = !DILocation(line: 198, column: 9, scope: !4574)
!4589 = !DILocation(line: 199, column: 11, scope: !4574)
!4590 = !DILocation(line: 199, column: 9, scope: !4574)
!4591 = !DILocation(line: 200, column: 42, scope: !4574)
!4592 = !DILocation(line: 200, column: 5, scope: !4574)
!4593 = !DILocation(line: 202, column: 11, scope: !4574)
!4594 = !DILocation(line: 202, column: 9, scope: !4574)
!4595 = !DILocation(line: 203, column: 11, scope: !4574)
!4596 = !DILocation(line: 203, column: 15, scope: !4574)
!4597 = !DILocation(line: 203, column: 9, scope: !4574)
!4598 = !DILocation(line: 204, column: 11, scope: !4574)
!4599 = !DILocation(line: 204, column: 15, scope: !4574)
!4600 = !DILocation(line: 204, column: 9, scope: !4574)
!4601 = !DILocation(line: 205, column: 11, scope: !4574)
!4602 = !DILocation(line: 205, column: 9, scope: !4574)
!4603 = !DILocation(line: 206, column: 42, scope: !4574)
!4604 = !DILocation(line: 206, column: 5, scope: !4574)
!4605 = !DILocation(line: 209, column: 1, scope: !4574)
!4606 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !281, file: !281, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4607)
!4607 = !{!4608, !4609}
!4608 = !DILocalVariable(name: "reg", scope: !4606, file: !281, line: 218, type: !60)
!4609 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4606, file: !281, line: 219, type: !59)
!4610 = !DILocation(line: 218, column: 5, scope: !4606)
!4611 = !DILocation(line: 218, column: 23, scope: !4606)
!4612 = !DILocation(line: 0, scope: !4606)
!4613 = !DILocation(line: 222, column: 11, scope: !4606)
!4614 = !DILocation(line: 222, column: 9, scope: !4606)
!4615 = !DILocation(line: 223, column: 11, scope: !4606)
!4616 = !DILocation(line: 223, column: 15, scope: !4606)
!4617 = !DILocation(line: 223, column: 9, scope: !4606)
!4618 = !DILocation(line: 224, column: 11, scope: !4606)
!4619 = !DILocation(line: 224, column: 9, scope: !4606)
!4620 = !DILocation(line: 225, column: 39, scope: !4606)
!4621 = !DILocation(line: 225, column: 5, scope: !4606)
!4622 = !DILocation(line: 228, column: 11, scope: !4606)
!4623 = !DILocation(line: 228, column: 9, scope: !4606)
!4624 = !DILocation(line: 229, column: 11, scope: !4606)
!4625 = !DILocation(line: 229, column: 15, scope: !4606)
!4626 = !DILocation(line: 229, column: 9, scope: !4606)
!4627 = !DILocation(line: 230, column: 11, scope: !4606)
!4628 = !DILocation(line: 230, column: 9, scope: !4606)
!4629 = !DILocation(line: 231, column: 39, scope: !4606)
!4630 = !DILocation(line: 231, column: 5, scope: !4606)
!4631 = !DILocation(line: 233, column: 5, scope: !4606)
!4632 = !DILocation(line: 233, column: 12, scope: !4606)
!4633 = !DILocation(line: 233, column: 19, scope: !4606)
!4634 = !DILocation(line: 233, column: 16, scope: !4606)
!4635 = distinct !{!4635, !4631, !4636}
!4636 = !DILocation(line: 233, column: 52, scope: !4606)
!4637 = !DILocation(line: 235, column: 21, scope: !4606)
!4638 = !DILocation(line: 235, column: 19, scope: !4606)
!4639 = !DILocation(line: 236, column: 5, scope: !4606)
!4640 = !DILocation(line: 237, column: 17, scope: !4606)
!4641 = !DILocation(line: 237, column: 33, scope: !4606)
!4642 = !DILocation(line: 237, column: 5, scope: !4606)
!4643 = !DILocation(line: 239, column: 1, scope: !4606)
!4644 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !281, file: !281, line: 246, type: !154, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4645)
!4645 = !{!4646, !4647}
!4646 = !DILocalVariable(name: "reg", scope: !4644, file: !281, line: 248, type: !60)
!4647 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4644, file: !281, line: 249, type: !59)
!4648 = !DILocation(line: 248, column: 5, scope: !4644)
!4649 = !DILocation(line: 248, column: 23, scope: !4644)
!4650 = !DILocation(line: 0, scope: !4644)
!4651 = !DILocation(line: 252, column: 5, scope: !4644)
!4652 = !DILocation(line: 255, column: 11, scope: !4644)
!4653 = !DILocation(line: 255, column: 9, scope: !4644)
!4654 = !DILocation(line: 256, column: 11, scope: !4644)
!4655 = !DILocation(line: 256, column: 15, scope: !4644)
!4656 = !DILocation(line: 256, column: 9, scope: !4644)
!4657 = !DILocation(line: 257, column: 11, scope: !4644)
!4658 = !DILocation(line: 257, column: 15, scope: !4644)
!4659 = !DILocation(line: 257, column: 9, scope: !4644)
!4660 = !DILocation(line: 258, column: 39, scope: !4644)
!4661 = !DILocation(line: 258, column: 5, scope: !4644)
!4662 = !DILocation(line: 260, column: 5, scope: !4644)
!4663 = !DILocation(line: 260, column: 12, scope: !4644)
!4664 = !DILocation(line: 260, column: 19, scope: !4644)
!4665 = !DILocation(line: 260, column: 16, scope: !4644)
!4666 = distinct !{!4666, !4662, !4667}
!4667 = !DILocation(line: 260, column: 52, scope: !4644)
!4668 = !DILocation(line: 263, column: 11, scope: !4644)
!4669 = !DILocation(line: 263, column: 9, scope: !4644)
!4670 = !DILocation(line: 264, column: 11, scope: !4644)
!4671 = !DILocation(line: 264, column: 15, scope: !4644)
!4672 = !DILocation(line: 264, column: 9, scope: !4644)
!4673 = !DILocation(line: 265, column: 11, scope: !4644)
!4674 = !DILocation(line: 265, column: 15, scope: !4644)
!4675 = !DILocation(line: 265, column: 9, scope: !4644)
!4676 = !DILocation(line: 266, column: 39, scope: !4644)
!4677 = !DILocation(line: 266, column: 5, scope: !4644)
!4678 = !DILocation(line: 269, column: 11, scope: !4644)
!4679 = !DILocation(line: 269, column: 9, scope: !4644)
!4680 = !DILocation(line: 270, column: 11, scope: !4644)
!4681 = !DILocation(line: 270, column: 15, scope: !4644)
!4682 = !DILocation(line: 270, column: 9, scope: !4644)
!4683 = !DILocation(line: 271, column: 11, scope: !4644)
!4684 = !DILocation(line: 271, column: 15, scope: !4644)
!4685 = !DILocation(line: 271, column: 9, scope: !4644)
!4686 = !DILocation(line: 272, column: 39, scope: !4644)
!4687 = !DILocation(line: 272, column: 5, scope: !4644)
!4688 = !DILocation(line: 273, column: 19, scope: !4644)
!4689 = !DILocation(line: 274, column: 5, scope: !4644)
!4690 = !DILocation(line: 275, column: 17, scope: !4644)
!4691 = !DILocation(line: 275, column: 33, scope: !4644)
!4692 = !DILocation(line: 275, column: 5, scope: !4644)
!4693 = !DILocation(line: 277, column: 1, scope: !4644)
!4694 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !281, file: !281, line: 284, type: !154, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4695)
!4695 = !{!4696, !4697}
!4696 = !DILocalVariable(name: "reg", scope: !4694, file: !281, line: 286, type: !60)
!4697 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4694, file: !281, line: 287, type: !59)
!4698 = !DILocation(line: 286, column: 5, scope: !4694)
!4699 = !DILocation(line: 286, column: 23, scope: !4694)
!4700 = !DILocation(line: 0, scope: !4694)
!4701 = !DILocation(line: 290, column: 5, scope: !4694)
!4702 = !DILocation(line: 293, column: 11, scope: !4694)
!4703 = !DILocation(line: 293, column: 9, scope: !4694)
!4704 = !DILocation(line: 294, column: 11, scope: !4694)
!4705 = !DILocation(line: 294, column: 15, scope: !4694)
!4706 = !DILocation(line: 294, column: 9, scope: !4694)
!4707 = !DILocation(line: 295, column: 11, scope: !4694)
!4708 = !DILocation(line: 295, column: 15, scope: !4694)
!4709 = !DILocation(line: 295, column: 9, scope: !4694)
!4710 = !DILocation(line: 296, column: 39, scope: !4694)
!4711 = !DILocation(line: 296, column: 5, scope: !4694)
!4712 = !DILocation(line: 298, column: 5, scope: !4694)
!4713 = !DILocation(line: 298, column: 12, scope: !4694)
!4714 = !DILocation(line: 298, column: 19, scope: !4694)
!4715 = !DILocation(line: 298, column: 16, scope: !4694)
!4716 = distinct !{!4716, !4712, !4717}
!4717 = !DILocation(line: 298, column: 52, scope: !4694)
!4718 = !DILocation(line: 301, column: 11, scope: !4694)
!4719 = !DILocation(line: 301, column: 9, scope: !4694)
!4720 = !DILocation(line: 302, column: 11, scope: !4694)
!4721 = !DILocation(line: 302, column: 15, scope: !4694)
!4722 = !DILocation(line: 302, column: 9, scope: !4694)
!4723 = !DILocation(line: 303, column: 11, scope: !4694)
!4724 = !DILocation(line: 303, column: 15, scope: !4694)
!4725 = !DILocation(line: 303, column: 9, scope: !4694)
!4726 = !DILocation(line: 304, column: 39, scope: !4694)
!4727 = !DILocation(line: 304, column: 5, scope: !4694)
!4728 = !DILocation(line: 307, column: 11, scope: !4694)
!4729 = !DILocation(line: 307, column: 9, scope: !4694)
!4730 = !DILocation(line: 308, column: 11, scope: !4694)
!4731 = !DILocation(line: 308, column: 15, scope: !4694)
!4732 = !DILocation(line: 308, column: 9, scope: !4694)
!4733 = !DILocation(line: 309, column: 11, scope: !4694)
!4734 = !DILocation(line: 309, column: 15, scope: !4694)
!4735 = !DILocation(line: 309, column: 9, scope: !4694)
!4736 = !DILocation(line: 310, column: 39, scope: !4694)
!4737 = !DILocation(line: 310, column: 5, scope: !4694)
!4738 = !DILocation(line: 311, column: 19, scope: !4694)
!4739 = !DILocation(line: 312, column: 5, scope: !4694)
!4740 = !DILocation(line: 313, column: 17, scope: !4694)
!4741 = !DILocation(line: 313, column: 33, scope: !4694)
!4742 = !DILocation(line: 313, column: 5, scope: !4694)
!4743 = !DILocation(line: 315, column: 1, scope: !4694)
!4744 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !281, file: !281, line: 323, type: !154, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4745)
!4745 = !{!4746, !4747}
!4746 = !DILocalVariable(name: "reg", scope: !4744, file: !281, line: 325, type: !60)
!4747 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4744, file: !281, line: 326, type: !59)
!4748 = !DILocation(line: 325, column: 5, scope: !4744)
!4749 = !DILocation(line: 325, column: 23, scope: !4744)
!4750 = !DILocation(line: 0, scope: !4744)
!4751 = !DILocation(line: 329, column: 5, scope: !4744)
!4752 = !DILocation(line: 332, column: 11, scope: !4744)
!4753 = !DILocation(line: 332, column: 9, scope: !4744)
!4754 = !DILocation(line: 333, column: 11, scope: !4744)
!4755 = !DILocation(line: 333, column: 15, scope: !4744)
!4756 = !DILocation(line: 333, column: 9, scope: !4744)
!4757 = !DILocation(line: 334, column: 11, scope: !4744)
!4758 = !DILocation(line: 334, column: 9, scope: !4744)
!4759 = !DILocation(line: 335, column: 39, scope: !4744)
!4760 = !DILocation(line: 335, column: 5, scope: !4744)
!4761 = !DILocation(line: 337, column: 5, scope: !4744)
!4762 = !DILocation(line: 337, column: 12, scope: !4744)
!4763 = !DILocation(line: 337, column: 19, scope: !4744)
!4764 = !DILocation(line: 337, column: 16, scope: !4744)
!4765 = distinct !{!4765, !4761, !4766}
!4766 = !DILocation(line: 337, column: 52, scope: !4744)
!4767 = !DILocation(line: 340, column: 11, scope: !4744)
!4768 = !DILocation(line: 340, column: 9, scope: !4744)
!4769 = !DILocation(line: 341, column: 11, scope: !4744)
!4770 = !DILocation(line: 341, column: 15, scope: !4744)
!4771 = !DILocation(line: 341, column: 9, scope: !4744)
!4772 = !DILocation(line: 342, column: 11, scope: !4744)
!4773 = !DILocation(line: 342, column: 15, scope: !4744)
!4774 = !DILocation(line: 342, column: 9, scope: !4744)
!4775 = !DILocation(line: 343, column: 39, scope: !4744)
!4776 = !DILocation(line: 343, column: 5, scope: !4744)
!4777 = !DILocation(line: 344, column: 19, scope: !4744)
!4778 = !DILocation(line: 345, column: 5, scope: !4744)
!4779 = !DILocation(line: 346, column: 17, scope: !4744)
!4780 = !DILocation(line: 346, column: 33, scope: !4744)
!4781 = !DILocation(line: 346, column: 5, scope: !4744)
!4782 = !DILocation(line: 348, column: 1, scope: !4744)
!4783 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !281, file: !281, line: 353, type: !154, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4784)
!4784 = !{!4785, !4786}
!4785 = !DILocalVariable(name: "reg", scope: !4783, file: !281, line: 355, type: !158)
!4786 = !DILocalVariable(name: "pTopCfgHclk", scope: !4783, file: !281, line: 356, type: !283)
!4787 = !DILocation(line: 355, column: 5, scope: !4783)
!4788 = !DILocation(line: 355, column: 21, scope: !4783)
!4789 = !DILocation(line: 0, scope: !4783)
!4790 = !DILocation(line: 358, column: 11, scope: !4783)
!4791 = !DILocation(line: 358, column: 9, scope: !4783)
!4792 = !DILocation(line: 359, column: 11, scope: !4783)
!4793 = !DILocation(line: 359, column: 15, scope: !4783)
!4794 = !DILocation(line: 359, column: 9, scope: !4783)
!4795 = !DILocation(line: 360, column: 11, scope: !4783)
!4796 = !DILocation(line: 360, column: 9, scope: !4783)
!4797 = !DILocation(line: 361, column: 37, scope: !4783)
!4798 = !DILocation(line: 361, column: 5, scope: !4783)
!4799 = !DILocation(line: 362, column: 1, scope: !4783)
!4800 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !281, file: !281, line: 368, type: !154, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4801)
!4801 = !{!4802, !4803, !4804, !4806, !4808}
!4802 = !DILocalVariable(name: "reg", scope: !4800, file: !281, line: 370, type: !158)
!4803 = !DILocalVariable(name: "pTopCfgHclk", scope: !4800, file: !281, line: 371, type: !283)
!4804 = !DILocalVariable(name: "addr", scope: !4805, file: !281, line: 383, type: !284)
!4805 = distinct !DILexicalBlock(scope: !4800, file: !281, line: 383, column: 5)
!4806 = !DILocalVariable(name: "addr", scope: !4807, file: !281, line: 384, type: !284)
!4807 = distinct !DILexicalBlock(scope: !4800, file: !281, line: 384, column: 5)
!4808 = !DILocalVariable(name: "addr", scope: !4809, file: !281, line: 385, type: !284)
!4809 = distinct !DILexicalBlock(scope: !4800, file: !281, line: 385, column: 5)
!4810 = !DILocation(line: 370, column: 5, scope: !4800)
!4811 = !DILocation(line: 370, column: 21, scope: !4800)
!4812 = !DILocation(line: 0, scope: !4800)
!4813 = !DILocation(line: 374, column: 5, scope: !4800)
!4814 = !DILocation(line: 377, column: 11, scope: !4800)
!4815 = !DILocation(line: 377, column: 9, scope: !4800)
!4816 = !DILocation(line: 378, column: 11, scope: !4800)
!4817 = !DILocation(line: 378, column: 15, scope: !4800)
!4818 = !DILocation(line: 378, column: 9, scope: !4800)
!4819 = !DILocation(line: 379, column: 11, scope: !4800)
!4820 = !DILocation(line: 379, column: 15, scope: !4800)
!4821 = !DILocation(line: 379, column: 9, scope: !4800)
!4822 = !DILocation(line: 380, column: 37, scope: !4800)
!4823 = !DILocation(line: 380, column: 5, scope: !4800)
!4824 = !DILocation(line: 0, scope: !4805)
!4825 = !DILocation(line: 383, column: 5, scope: !4805)
!4826 = !DILocation(line: 0, scope: !4807)
!4827 = !DILocation(line: 384, column: 5, scope: !4807)
!4828 = !DILocation(line: 0, scope: !4809)
!4829 = !DILocation(line: 385, column: 5, scope: !4809)
!4830 = !DILocation(line: 388, column: 1, scope: !4800)
!4831 = distinct !DISubprogram(name: "getc", scope: !293, file: !293, line: 68, type: !2959, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4832)
!4832 = !{!4833}
!4833 = !DILocalVariable(name: "rc", scope: !4831, file: !293, line: 71, type: !7)
!4834 = !DILocation(line: 71, column: 14, scope: !4831)
!4835 = !DILocation(line: 0, scope: !4831)
!4836 = !DILocation(line: 72, column: 5, scope: !4831)
!4837 = distinct !DISubprogram(name: "getc_nowait", scope: !293, file: !293, line: 80, type: !2959, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4838)
!4838 = !{!4839}
!4839 = !DILocalVariable(name: "c", scope: !4837, file: !293, line: 82, type: !202)
!4840 = !DILocation(line: 84, column: 9, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4837, file: !293, line: 84, column: 9)
!4842 = !DILocation(line: 84, column: 40, scope: !4841)
!4843 = !DILocation(line: 84, column: 9, scope: !4837)
!4844 = !DILocation(line: 85, column: 13, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4841, file: !293, line: 84, column: 47)
!4846 = !DILocation(line: 86, column: 16, scope: !4845)
!4847 = !DILocation(line: 0, scope: !4837)
!4848 = !DILocation(line: 86, column: 9, scope: !4845)
!4849 = !DILocation(line: 0, scope: !4841)
!4850 = !DILocation(line: 90, column: 1, scope: !4837)
!4851 = distinct !DISubprogram(name: "uart_output_char", scope: !293, file: !293, line: 93, type: !4852, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4855)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{null, !4854, !58}
!4854 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !296, line: 75, baseType: !295)
!4855 = !{!4856, !4857, !4858}
!4856 = !DILocalVariable(name: "port_no", arg: 1, scope: !4851, file: !293, line: 93, type: !4854)
!4857 = !DILocalVariable(name: "c", arg: 2, scope: !4851, file: !293, line: 93, type: !58)
!4858 = !DILocalVariable(name: "base", scope: !4851, file: !293, line: 95, type: !30)
!4859 = !DILocation(line: 0, scope: !4851)
!4860 = !DILocation(line: 95, column: 25, scope: !4851)
!4861 = !DILocation(line: 97, column: 5, scope: !4851)
!4862 = !DILocation(line: 97, column: 14, scope: !4851)
!4863 = !DILocation(line: 97, column: 42, scope: !4851)
!4864 = !DILocation(line: 97, column: 12, scope: !4851)
!4865 = distinct !{!4865, !4861, !4866}
!4866 = !DILocation(line: 98, column: 9, scope: !4851)
!4867 = !DILocation(line: 99, column: 35, scope: !4851)
!4868 = !DILocation(line: 99, column: 5, scope: !4851)
!4869 = !DILocation(line: 99, column: 33, scope: !4851)
!4870 = !DILocation(line: 102, column: 1, scope: !4851)
!4871 = distinct !DISubprogram(name: "uart_input_char", scope: !293, file: !293, line: 106, type: !4872, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4874)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!54, !4854}
!4874 = !{!4875, !4876, !4877}
!4875 = !DILocalVariable(name: "port_no", arg: 1, scope: !4871, file: !293, line: 106, type: !4854)
!4876 = !DILocalVariable(name: "base", scope: !4871, file: !293, line: 108, type: !30)
!4877 = !DILocalVariable(name: "c", scope: !4871, file: !293, line: 109, type: !202)
!4878 = !DILocation(line: 0, scope: !4871)
!4879 = !DILocation(line: 108, column: 25, scope: !4871)
!4880 = !DILocation(line: 111, column: 5, scope: !4871)
!4881 = !DILocation(line: 111, column: 14, scope: !4871)
!4882 = !DILocation(line: 111, column: 42, scope: !4871)
!4883 = !DILocation(line: 111, column: 12, scope: !4871)
!4884 = distinct !{!4884, !4880, !4885}
!4885 = !DILocation(line: 112, column: 9, scope: !4871)
!4886 = !DILocation(line: 114, column: 9, scope: !4871)
!4887 = !DILocation(line: 116, column: 5, scope: !4871)
!4888 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !293, file: !293, line: 120, type: !4889, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4891)
!4889 = !DISubroutineType(types: !4890)
!4890 = !{!61, !4854}
!4891 = !{!4892, !4893, !4894}
!4892 = !DILocalVariable(name: "port_no", arg: 1, scope: !4888, file: !293, line: 120, type: !4854)
!4893 = !DILocalVariable(name: "base", scope: !4888, file: !293, line: 122, type: !30)
!4894 = !DILocalVariable(name: "c", scope: !4888, file: !293, line: 123, type: !202)
!4895 = !DILocation(line: 0, scope: !4888)
!4896 = !DILocation(line: 122, column: 25, scope: !4888)
!4897 = !DILocation(line: 125, column: 9, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4888, file: !293, line: 125, column: 9)
!4899 = !DILocation(line: 125, column: 37, scope: !4898)
!4900 = !DILocation(line: 125, column: 9, scope: !4888)
!4901 = !DILocation(line: 126, column: 13, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4898, file: !293, line: 125, column: 44)
!4903 = !DILocation(line: 127, column: 16, scope: !4902)
!4904 = !DILocation(line: 127, column: 9, scope: !4902)
!4905 = !DILocation(line: 0, scope: !4898)
!4906 = !DILocation(line: 131, column: 1, scope: !4888)
!4907 = distinct !DISubprogram(name: "halUART_HWInit", scope: !293, file: !293, line: 136, type: !4908, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4910)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{null, !4854}
!4910 = !{!4911}
!4911 = !DILocalVariable(name: "u_port", arg: 1, scope: !4907, file: !293, line: 136, type: !4854)
!4912 = !DILocation(line: 0, scope: !4907)
!4913 = !DILocation(line: 139, column: 5, scope: !4907)
!4914 = !DILocation(line: 140, column: 9, scope: !4907)
!4915 = !DILocation(line: 153, column: 5, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !293, line: 147, column: 38)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !293, line: 147, column: 16)
!4918 = distinct !DILexicalBlock(scope: !4907, file: !293, line: 140, column: 9)
!4919 = !DILocation(line: 0, scope: !4918)
!4920 = !DILocation(line: 155, column: 1, scope: !4907)
!4921 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !293, file: !293, line: 158, type: !4922, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4924)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{null, !4854, !61, !864, !864, !864}
!4924 = !{!4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4940, !4941}
!4925 = !DILocalVariable(name: "u_port", arg: 1, scope: !4921, file: !293, line: 158, type: !4854)
!4926 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4921, file: !293, line: 158, type: !61)
!4927 = !DILocalVariable(name: "databit", arg: 3, scope: !4921, file: !293, line: 158, type: !864)
!4928 = !DILocalVariable(name: "parity", arg: 4, scope: !4921, file: !293, line: 158, type: !864)
!4929 = !DILocalVariable(name: "stopbit", arg: 5, scope: !4921, file: !293, line: 158, type: !864)
!4930 = !DILocalVariable(name: "control_word", scope: !4921, file: !293, line: 160, type: !864)
!4931 = !DILocalVariable(name: "UART_BASE", scope: !4921, file: !293, line: 161, type: !61)
!4932 = !DILocalVariable(name: "data", scope: !4921, file: !293, line: 162, type: !61)
!4933 = !DILocalVariable(name: "uart_lcr", scope: !4921, file: !293, line: 162, type: !61)
!4934 = !DILocalVariable(name: "high_speed_div", scope: !4921, file: !293, line: 162, type: !61)
!4935 = !DILocalVariable(name: "sample_count", scope: !4921, file: !293, line: 162, type: !61)
!4936 = !DILocalVariable(name: "sample_point", scope: !4921, file: !293, line: 162, type: !61)
!4937 = !DILocalVariable(name: "fraction", scope: !4921, file: !293, line: 162, type: !61)
!4938 = !DILocalVariable(name: "fraction_L_mapping", scope: !4921, file: !293, line: 163, type: !4939)
!4939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 176, elements: !2115)
!4940 = !DILocalVariable(name: "fraction_M_mapping", scope: !4921, file: !293, line: 164, type: !4939)
!4941 = !DILocalVariable(name: "status", scope: !4921, file: !293, line: 165, type: !527)
!4942 = !DILocation(line: 0, scope: !4921)
!4943 = !DILocation(line: 163, column: 15, scope: !4921)
!4944 = !DILocation(line: 164, column: 15, scope: !4921)
!4945 = !DILocation(line: 166, column: 20, scope: !4921)
!4946 = !DILocation(line: 166, column: 18, scope: !4921)
!4947 = !DILocation(line: 168, column: 9, scope: !4921)
!4948 = !DILocation(line: 176, column: 5, scope: !4921)
!4949 = !DILocation(line: 176, column: 44, scope: !4921)
!4950 = !DILocation(line: 177, column: 16, scope: !4921)
!4951 = !DILocation(line: 178, column: 50, scope: !4921)
!4952 = !DILocation(line: 178, column: 38, scope: !4921)
!4953 = !DILocation(line: 179, column: 12, scope: !4921)
!4954 = !DILocation(line: 179, column: 25, scope: !4921)
!4955 = !DILocation(line: 180, column: 28, scope: !4921)
!4956 = !DILocation(line: 180, column: 34, scope: !4921)
!4957 = !DILocation(line: 182, column: 29, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4921, file: !293, line: 181, column: 5)
!4959 = !DILocation(line: 182, column: 46, scope: !4958)
!4960 = !DILocation(line: 183, column: 26, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4958, file: !293, line: 183, column: 13)
!4962 = !DILocation(line: 183, column: 13, scope: !4958)
!4963 = !DILocation(line: 192, column: 30, scope: !4921)
!4964 = !DILocation(line: 192, column: 35, scope: !4921)
!4965 = !DILocation(line: 192, column: 46, scope: !4921)
!4966 = !DILocation(line: 192, column: 74, scope: !4921)
!4967 = !DILocation(line: 192, column: 53, scope: !4921)
!4968 = !DILocation(line: 192, column: 80, scope: !4921)
!4969 = !DILocation(line: 193, column: 56, scope: !4921)
!4970 = !DILocation(line: 193, column: 5, scope: !4921)
!4971 = !DILocation(line: 193, column: 38, scope: !4921)
!4972 = !DILocation(line: 194, column: 57, scope: !4921)
!4973 = !DILocation(line: 194, column: 63, scope: !4921)
!4974 = !DILocation(line: 194, column: 5, scope: !4921)
!4975 = !DILocation(line: 194, column: 38, scope: !4921)
!4976 = !DILocation(line: 195, column: 5, scope: !4921)
!4977 = !DILocation(line: 195, column: 45, scope: !4921)
!4978 = !DILocation(line: 196, column: 5, scope: !4921)
!4979 = !DILocation(line: 196, column: 47, scope: !4921)
!4980 = !DILocation(line: 197, column: 46, scope: !4921)
!4981 = !DILocation(line: 197, column: 5, scope: !4921)
!4982 = !DILocation(line: 197, column: 44, scope: !4921)
!4983 = !DILocation(line: 198, column: 46, scope: !4921)
!4984 = !DILocation(line: 198, column: 5, scope: !4921)
!4985 = !DILocation(line: 198, column: 44, scope: !4921)
!4986 = !DILocation(line: 199, column: 38, scope: !4921)
!4987 = !DILocation(line: 200, column: 5, scope: !4921)
!4988 = !DILocation(line: 200, column: 38, scope: !4921)
!4989 = !DILocation(line: 202, column: 20, scope: !4921)
!4990 = !DILocation(line: 203, column: 18, scope: !4921)
!4991 = !DILocation(line: 205, column: 18, scope: !4921)
!4992 = !DILocation(line: 207, column: 18, scope: !4921)
!4993 = !DILocation(line: 208, column: 18, scope: !4921)
!4994 = !DILocation(line: 209, column: 5, scope: !4921)
!4995 = !DILocation(line: 213, column: 1, scope: !4921)
!4996 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !293, file: !293, line: 215, type: !4997, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{null, !4854, !527, !2833}
!4999 = !{!5000, !5001, !5002}
!5000 = !DILocalVariable(name: "u_port", arg: 1, scope: !4996, file: !293, line: 215, type: !4854)
!5001 = !DILocalVariable(name: "is_rx", arg: 2, scope: !4996, file: !293, line: 215, type: !527)
!5002 = !DILocalVariable(name: "length", arg: 3, scope: !4996, file: !293, line: 215, type: !2833)
!5003 = !DILocation(line: 0, scope: !4996)
!5004 = !DILocation(line: 217, column: 16, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4996, file: !293, line: 217, column: 9)
!5006 = !DILocation(line: 0, scope: !5005)
!5007 = !DILocation(line: 217, column: 9, scope: !4996)
!5008 = !DILocation(line: 218, column: 13, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !293, line: 217, column: 31)
!5010 = !DILocation(line: 219, column: 23, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !293, line: 218, column: 20)
!5012 = distinct !DILexicalBlock(scope: !5009, file: !293, line: 218, column: 13)
!5013 = !DILocation(line: 220, column: 9, scope: !5011)
!5014 = !DILocation(line: 221, column: 23, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5012, file: !293, line: 220, column: 16)
!5016 = !DILocation(line: 221, column: 21, scope: !5015)
!5017 = !DILocation(line: 222, column: 24, scope: !5015)
!5018 = !DILocation(line: 222, column: 21, scope: !5015)
!5019 = !DILocation(line: 225, column: 13, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5005, file: !293, line: 224, column: 12)
!5021 = !DILocation(line: 226, column: 23, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !293, line: 225, column: 20)
!5023 = distinct !DILexicalBlock(scope: !5020, file: !293, line: 225, column: 13)
!5024 = !DILocation(line: 227, column: 9, scope: !5022)
!5025 = !DILocation(line: 228, column: 23, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !293, line: 227, column: 16)
!5027 = !DILocation(line: 228, column: 21, scope: !5026)
!5028 = !DILocation(line: 229, column: 24, scope: !5026)
!5029 = !DILocation(line: 229, column: 21, scope: !5026)
!5030 = !DILocation(line: 233, column: 5, scope: !4996)
!5031 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !293, file: !293, line: 236, type: !5032, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5034)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{null, !4854, !210, !61}
!5034 = !{!5035, !5036, !5037, !5038}
!5035 = !DILocalVariable(name: "u_port", arg: 1, scope: !5031, file: !293, line: 236, type: !4854)
!5036 = !DILocalVariable(name: "data", arg: 2, scope: !5031, file: !293, line: 236, type: !210)
!5037 = !DILocalVariable(name: "length", arg: 3, scope: !5031, file: !293, line: 236, type: !61)
!5038 = !DILocalVariable(name: "idx", scope: !5031, file: !293, line: 238, type: !159)
!5039 = !DILocation(line: 0, scope: !5031)
!5040 = !DILocation(line: 239, column: 23, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !293, line: 239, column: 5)
!5042 = distinct !DILexicalBlock(scope: !5031, file: !293, line: 239, column: 5)
!5043 = !DILocation(line: 239, column: 5, scope: !5042)
!5044 = !DILocation(line: 240, column: 13, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !293, line: 239, column: 40)
!5046 = !DILocation(line: 244, column: 9, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !293, line: 242, column: 42)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !293, line: 242, column: 20)
!5049 = distinct !DILexicalBlock(scope: !5045, file: !293, line: 240, column: 13)
!5050 = !DILocation(line: 0, scope: !5049)
!5051 = !DILocation(line: 239, column: 36, scope: !5041)
!5052 = distinct !{!5052, !5043, !5053}
!5053 = !DILocation(line: 246, column: 5, scope: !5042)
!5054 = !DILocation(line: 249, column: 1, scope: !5031)
!5055 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !293, file: !293, line: 251, type: !5056, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5058)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{null, !4854, !2415, !61}
!5058 = !{!5059, !5060, !5061, !5062}
!5059 = !DILocalVariable(name: "u_port", arg: 1, scope: !5055, file: !293, line: 251, type: !4854)
!5060 = !DILocalVariable(name: "data", arg: 2, scope: !5055, file: !293, line: 251, type: !2415)
!5061 = !DILocalVariable(name: "length", arg: 3, scope: !5055, file: !293, line: 251, type: !61)
!5062 = !DILocalVariable(name: "idx", scope: !5055, file: !293, line: 253, type: !159)
!5063 = !DILocation(line: 0, scope: !5055)
!5064 = !DILocation(line: 254, column: 23, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5066, file: !293, line: 254, column: 5)
!5066 = distinct !DILexicalBlock(scope: !5055, file: !293, line: 254, column: 5)
!5067 = !DILocation(line: 254, column: 5, scope: !5066)
!5068 = !DILocation(line: 255, column: 13, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5065, file: !293, line: 254, column: 40)
!5070 = !DILocation(line: 256, column: 61, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !293, line: 255, column: 35)
!5072 = distinct !DILexicalBlock(scope: !5069, file: !293, line: 255, column: 13)
!5073 = !DILocation(line: 256, column: 59, scope: !5071)
!5074 = !DILocation(line: 257, column: 9, scope: !5071)
!5075 = !DILocation(line: 258, column: 61, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5077, file: !293, line: 257, column: 42)
!5077 = distinct !DILexicalBlock(scope: !5072, file: !293, line: 257, column: 20)
!5078 = !DILocation(line: 258, column: 59, scope: !5076)
!5079 = !DILocation(line: 259, column: 9, scope: !5076)
!5080 = !DILocation(line: 254, column: 36, scope: !5065)
!5081 = distinct !{!5081, !5067, !5082}
!5082 = !DILocation(line: 261, column: 5, scope: !5066)
!5083 = !DILocation(line: 264, column: 1, scope: !5055)
!5084 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !293, file: !293, line: 266, type: !5085, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5087)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{null, !4854, !210, !61, !61}
!5087 = !{!5088, !5089, !5090, !5091}
!5088 = !DILocalVariable(name: "u_port", arg: 1, scope: !5084, file: !293, line: 266, type: !4854)
!5089 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !5084, file: !293, line: 266, type: !210)
!5090 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !5084, file: !293, line: 266, type: !61)
!5091 = !DILocalVariable(name: "threshold", arg: 4, scope: !5084, file: !293, line: 266, type: !61)
!5092 = !DILocation(line: 0, scope: !5084)
!5093 = !DILocation(line: 268, column: 9, scope: !5084)
!5094 = !DILocation(line: 274, column: 5, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !293, line: 271, column: 38)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !293, line: 271, column: 16)
!5097 = distinct !DILexicalBlock(scope: !5084, file: !293, line: 268, column: 9)
!5098 = !DILocation(line: 0, scope: !5097)
!5099 = !DILocation(line: 276, column: 1, scope: !5084)
!5100 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !293, file: !293, line: 278, type: !5101, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5103)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{null, !4854, !210, !61, !61, !61, !61}
!5103 = !{!5104, !5105, !5106, !5107, !5108, !5109}
!5104 = !DILocalVariable(name: "u_port", arg: 1, scope: !5100, file: !293, line: 278, type: !4854)
!5105 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !5100, file: !293, line: 278, type: !210)
!5106 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !5100, file: !293, line: 278, type: !61)
!5107 = !DILocalVariable(name: "alert_length", arg: 4, scope: !5100, file: !293, line: 278, type: !61)
!5108 = !DILocalVariable(name: "threshold", arg: 5, scope: !5100, file: !293, line: 278, type: !61)
!5109 = !DILocalVariable(name: "timeout", arg: 6, scope: !5100, file: !293, line: 278, type: !61)
!5110 = !DILocation(line: 0, scope: !5100)
!5111 = !DILocation(line: 280, column: 9, scope: !5100)
!5112 = !DILocation(line: 286, column: 5, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !293, line: 283, column: 38)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !293, line: 283, column: 16)
!5115 = distinct !DILexicalBlock(scope: !5100, file: !293, line: 280, column: 9)
!5116 = !DILocation(line: 0, scope: !5115)
!5117 = !DILocation(line: 288, column: 1, scope: !5100)
!5118 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !293, file: !293, line: 290, type: !5119, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5121)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{null, !4854, !754}
!5121 = !{!5122, !5123}
!5122 = !DILocalVariable(name: "u_port", arg: 1, scope: !5118, file: !293, line: 290, type: !4854)
!5123 = !DILocalVariable(name: "func", arg: 2, scope: !5118, file: !293, line: 290, type: !754)
!5124 = !DILocation(line: 0, scope: !5118)
!5125 = !DILocation(line: 292, column: 9, scope: !5118)
!5126 = !DILocation(line: 296, column: 5, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !293, line: 294, column: 38)
!5128 = distinct !DILexicalBlock(scope: !5129, file: !293, line: 294, column: 16)
!5129 = distinct !DILexicalBlock(scope: !5118, file: !293, line: 292, column: 9)
!5130 = !DILocation(line: 0, scope: !5129)
!5131 = !DILocation(line: 298, column: 1, scope: !5118)
!5132 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !293, file: !293, line: 300, type: !5119, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5133)
!5133 = !{!5134, !5135}
!5134 = !DILocalVariable(name: "u_port", arg: 1, scope: !5132, file: !293, line: 300, type: !4854)
!5135 = !DILocalVariable(name: "func", arg: 2, scope: !5132, file: !293, line: 300, type: !754)
!5136 = !DILocation(line: 0, scope: !5132)
!5137 = !DILocation(line: 302, column: 9, scope: !5132)
!5138 = !DILocation(line: 306, column: 5, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !293, line: 304, column: 38)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !293, line: 304, column: 16)
!5141 = distinct !DILexicalBlock(scope: !5132, file: !293, line: 302, column: 9)
!5142 = !DILocation(line: 0, scope: !5141)
!5143 = !DILocation(line: 308, column: 1, scope: !5132)
!5144 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !293, file: !293, line: 310, type: !4908, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5145)
!5145 = !{!5146, !5147, !5148, !5149}
!5146 = !DILocalVariable(name: "u_port", arg: 1, scope: !5144, file: !293, line: 310, type: !4854)
!5147 = !DILocalVariable(name: "base", scope: !5144, file: !293, line: 312, type: !30)
!5148 = !DILocalVariable(name: "EFR", scope: !5144, file: !293, line: 313, type: !864)
!5149 = !DILocalVariable(name: "LCR", scope: !5144, file: !293, line: 313, type: !864)
!5150 = !DILocation(line: 0, scope: !5144)
!5151 = !DILocation(line: 312, column: 25, scope: !5144)
!5152 = !DILocation(line: 315, column: 11, scope: !5144)
!5153 = !DILocation(line: 317, column: 33, scope: !5144)
!5154 = !DILocation(line: 318, column: 11, scope: !5144)
!5155 = !DILocation(line: 320, column: 35, scope: !5144)
!5156 = !DILocation(line: 320, column: 33, scope: !5144)
!5157 = !DILocation(line: 322, column: 5, scope: !5144)
!5158 = !DILocation(line: 322, column: 39, scope: !5144)
!5159 = !DILocation(line: 324, column: 33, scope: !5144)
!5160 = !DILocation(line: 325, column: 5, scope: !5144)
!5161 = !DILocation(line: 325, column: 33, scope: !5144)
!5162 = !DILocation(line: 327, column: 35, scope: !5144)
!5163 = !DILocation(line: 327, column: 33, scope: !5144)
!5164 = !DILocation(line: 328, column: 1, scope: !5144)
!5165 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !293, file: !293, line: 330, type: !5166, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5168)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{null, !4854, !54, !54, !54}
!5168 = !{!5169, !5170, !5171, !5172, !5173, !5174, !5175}
!5169 = !DILocalVariable(name: "u_port", arg: 1, scope: !5165, file: !293, line: 330, type: !4854)
!5170 = !DILocalVariable(name: "xon", arg: 2, scope: !5165, file: !293, line: 330, type: !54)
!5171 = !DILocalVariable(name: "xoff", arg: 3, scope: !5165, file: !293, line: 330, type: !54)
!5172 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5165, file: !293, line: 330, type: !54)
!5173 = !DILocalVariable(name: "base", scope: !5165, file: !293, line: 332, type: !30)
!5174 = !DILocalVariable(name: "EFR", scope: !5165, file: !293, line: 333, type: !864)
!5175 = !DILocalVariable(name: "LCR", scope: !5165, file: !293, line: 333, type: !864)
!5176 = !DILocation(line: 0, scope: !5165)
!5177 = !DILocation(line: 332, column: 25, scope: !5165)
!5178 = !DILocation(line: 335, column: 11, scope: !5165)
!5179 = !DILocation(line: 337, column: 33, scope: !5165)
!5180 = !DILocation(line: 338, column: 36, scope: !5165)
!5181 = !DILocation(line: 338, column: 5, scope: !5165)
!5182 = !DILocation(line: 338, column: 34, scope: !5165)
!5183 = !DILocation(line: 339, column: 5, scope: !5165)
!5184 = !DILocation(line: 339, column: 34, scope: !5165)
!5185 = !DILocation(line: 340, column: 37, scope: !5165)
!5186 = !DILocation(line: 340, column: 5, scope: !5165)
!5187 = !DILocation(line: 340, column: 35, scope: !5165)
!5188 = !DILocation(line: 341, column: 5, scope: !5165)
!5189 = !DILocation(line: 341, column: 35, scope: !5165)
!5190 = !DILocation(line: 343, column: 11, scope: !5165)
!5191 = !DILocation(line: 345, column: 35, scope: !5165)
!5192 = !DILocation(line: 345, column: 33, scope: !5165)
!5193 = !DILocation(line: 347, column: 35, scope: !5165)
!5194 = !DILocation(line: 347, column: 33, scope: !5165)
!5195 = !DILocation(line: 349, column: 43, scope: !5165)
!5196 = !DILocation(line: 349, column: 5, scope: !5165)
!5197 = !DILocation(line: 349, column: 41, scope: !5165)
!5198 = !DILocation(line: 350, column: 5, scope: !5165)
!5199 = !DILocation(line: 350, column: 39, scope: !5165)
!5200 = !DILocation(line: 351, column: 1, scope: !5165)
!5201 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !293, file: !293, line: 353, type: !4908, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5202)
!5202 = !{!5203, !5204, !5205}
!5203 = !DILocalVariable(name: "u_port", arg: 1, scope: !5201, file: !293, line: 353, type: !4854)
!5204 = !DILocalVariable(name: "base", scope: !5201, file: !293, line: 355, type: !30)
!5205 = !DILocalVariable(name: "LCR", scope: !5201, file: !293, line: 356, type: !864)
!5206 = !DILocation(line: 0, scope: !5201)
!5207 = !DILocation(line: 355, column: 25, scope: !5201)
!5208 = !DILocation(line: 358, column: 11, scope: !5201)
!5209 = !DILocation(line: 360, column: 33, scope: !5201)
!5210 = !DILocation(line: 362, column: 5, scope: !5201)
!5211 = !DILocation(line: 362, column: 33, scope: !5201)
!5212 = !DILocation(line: 364, column: 33, scope: !5201)
!5213 = !DILocation(line: 366, column: 35, scope: !5201)
!5214 = !DILocation(line: 366, column: 33, scope: !5201)
!5215 = !DILocation(line: 367, column: 1, scope: !5201)
!5216 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !293, file: !293, line: 370, type: !4908, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5217)
!5217 = !{!5218, !5219}
!5218 = !DILocalVariable(name: "u_port", arg: 1, scope: !5216, file: !293, line: 370, type: !4854)
!5219 = !DILocalVariable(name: "base", scope: !5216, file: !293, line: 372, type: !30)
!5220 = !DILocation(line: 0, scope: !5216)
!5221 = !DILocation(line: 372, column: 25, scope: !5216)
!5222 = !DILocation(line: 374, column: 5, scope: !5216)
!5223 = !DILocation(line: 374, column: 38, scope: !5216)
!5224 = !DILocation(line: 375, column: 1, scope: !5216)
!5225 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !293, file: !293, line: 377, type: !4908, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5226)
!5226 = !{!5227, !5228, !5229, !5230}
!5227 = !DILocalVariable(name: "u_port", arg: 1, scope: !5225, file: !293, line: 377, type: !4854)
!5228 = !DILocalVariable(name: "base", scope: !5225, file: !293, line: 379, type: !30)
!5229 = !DILocalVariable(name: "IER", scope: !5225, file: !293, line: 380, type: !864)
!5230 = !DILocalVariable(name: "LCR", scope: !5225, file: !293, line: 380, type: !864)
!5231 = !DILocation(line: 0, scope: !5225)
!5232 = !DILocation(line: 379, column: 25, scope: !5225)
!5233 = !DILocation(line: 382, column: 11, scope: !5225)
!5234 = !DILocation(line: 383, column: 33, scope: !5225)
!5235 = !DILocation(line: 385, column: 11, scope: !5225)
!5236 = !DILocation(line: 387, column: 35, scope: !5225)
!5237 = !DILocation(line: 387, column: 33, scope: !5225)
!5238 = !DILocation(line: 389, column: 35, scope: !5225)
!5239 = !DILocation(line: 389, column: 33, scope: !5225)
!5240 = !DILocation(line: 391, column: 5, scope: !5225)
!5241 = !DILocation(line: 391, column: 38, scope: !5225)
!5242 = !DILocation(line: 392, column: 1, scope: !5225)
!5243 = distinct !DISubprogram(name: "uart_mask_send_interrupt", scope: !293, file: !293, line: 394, type: !4908, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5244)
!5244 = !{!5245, !5246, !5247, !5248}
!5245 = !DILocalVariable(name: "u_port", arg: 1, scope: !5243, file: !293, line: 394, type: !4854)
!5246 = !DILocalVariable(name: "base", scope: !5243, file: !293, line: 396, type: !30)
!5247 = !DILocalVariable(name: "IER", scope: !5243, file: !293, line: 397, type: !864)
!5248 = !DILocalVariable(name: "LCR", scope: !5243, file: !293, line: 397, type: !864)
!5249 = !DILocation(line: 0, scope: !5243)
!5250 = !DILocation(line: 396, column: 25, scope: !5243)
!5251 = !DILocation(line: 399, column: 11, scope: !5243)
!5252 = !DILocation(line: 400, column: 33, scope: !5243)
!5253 = !DILocation(line: 402, column: 11, scope: !5243)
!5254 = !DILocation(line: 403, column: 9, scope: !5243)
!5255 = !DILocation(line: 404, column: 33, scope: !5243)
!5256 = !DILocation(line: 406, column: 35, scope: !5243)
!5257 = !DILocation(line: 406, column: 33, scope: !5243)
!5258 = !DILocation(line: 408, column: 5, scope: !5243)
!5259 = !DILocation(line: 408, column: 38, scope: !5243)
!5260 = !DILocation(line: 409, column: 1, scope: !5243)
!5261 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !293, file: !293, line: 411, type: !600, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5262)
!5262 = !{!5263, !5264, !5265, !5266}
!5263 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5261, file: !293, line: 411, type: !339)
!5264 = !DILocalVariable(name: "u_port", scope: !5261, file: !293, line: 413, type: !4854)
!5265 = !DILocalVariable(name: "base", scope: !5261, file: !293, line: 414, type: !30)
!5266 = !DILocalVariable(name: "IIR", scope: !5261, file: !293, line: 415, type: !864)
!5267 = !DILocation(line: 0, scope: !5261)
!5268 = !DILocation(line: 417, column: 20, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5261, file: !293, line: 417, column: 9)
!5270 = !DILocation(line: 425, column: 11, scope: !5261)
!5271 = !DILocation(line: 426, column: 17, scope: !5261)
!5272 = !DILocation(line: 426, column: 5, scope: !5261)
!5273 = !DILocation(line: 428, column: 13, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5261, file: !293, line: 426, column: 25)
!5275 = !DILocation(line: 429, column: 13, scope: !5274)
!5276 = !DILocation(line: 433, column: 1, scope: !5261)
!5277 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !293, file: !293, line: 436, type: !4908, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5278)
!5278 = !{!5279, !5280}
!5279 = !DILocalVariable(name: "u_port", arg: 1, scope: !5277, file: !293, line: 436, type: !4854)
!5280 = !DILocalVariable(name: "base", scope: !5277, file: !293, line: 438, type: !30)
!5281 = !DILocation(line: 0, scope: !5277)
!5282 = !DILocation(line: 438, column: 25, scope: !5277)
!5283 = !DILocation(line: 440, column: 5, scope: !5277)
!5284 = !DILocation(line: 440, column: 33, scope: !5277)
!5285 = !DILocation(line: 441, column: 5, scope: !5277)
!5286 = !DILocation(line: 441, column: 33, scope: !5277)
!5287 = !DILocation(line: 442, column: 5, scope: !5277)
!5288 = !DILocation(line: 442, column: 34, scope: !5277)
!5289 = !DILocation(line: 443, column: 5, scope: !5277)
!5290 = !DILocation(line: 443, column: 35, scope: !5277)
!5291 = !DILocation(line: 445, column: 33, scope: !5277)
!5292 = !DILocation(line: 446, column: 5, scope: !5277)
!5293 = !DILocation(line: 446, column: 33, scope: !5277)
!5294 = !DILocation(line: 447, column: 5, scope: !5277)
!5295 = !DILocation(line: 447, column: 33, scope: !5277)
!5296 = !DILocation(line: 449, column: 33, scope: !5277)
!5297 = !DILocation(line: 450, column: 33, scope: !5277)
!5298 = !DILocation(line: 451, column: 33, scope: !5277)
!5299 = !DILocation(line: 453, column: 33, scope: !5277)
!5300 = !DILocation(line: 454, column: 33, scope: !5277)
!5301 = !DILocation(line: 455, column: 33, scope: !5277)
!5302 = !DILocation(line: 457, column: 33, scope: !5277)
!5303 = !DILocation(line: 458, column: 5, scope: !5277)
!5304 = !DILocation(line: 458, column: 33, scope: !5277)
!5305 = !DILocation(line: 459, column: 5, scope: !5277)
!5306 = !DILocation(line: 459, column: 39, scope: !5277)
!5307 = !DILocation(line: 460, column: 5, scope: !5277)
!5308 = !DILocation(line: 460, column: 40, scope: !5277)
!5309 = !DILocation(line: 461, column: 5, scope: !5277)
!5310 = !DILocation(line: 461, column: 42, scope: !5277)
!5311 = !DILocation(line: 462, column: 5, scope: !5277)
!5312 = !DILocation(line: 462, column: 42, scope: !5277)
!5313 = !DILocation(line: 463, column: 5, scope: !5277)
!5314 = !DILocation(line: 463, column: 35, scope: !5277)
!5315 = !DILocation(line: 464, column: 5, scope: !5277)
!5316 = !DILocation(line: 464, column: 41, scope: !5277)
!5317 = !DILocation(line: 465, column: 5, scope: !5277)
!5318 = !DILocation(line: 465, column: 39, scope: !5277)
!5319 = !DILocation(line: 466, column: 5, scope: !5277)
!5320 = !DILocation(line: 466, column: 38, scope: !5277)
!5321 = !DILocation(line: 467, column: 5, scope: !5277)
!5322 = !DILocation(line: 467, column: 42, scope: !5277)
!5323 = !DILocation(line: 468, column: 5, scope: !5277)
!5324 = !DILocation(line: 468, column: 45, scope: !5277)
!5325 = !DILocation(line: 469, column: 5, scope: !5277)
!5326 = !DILocation(line: 469, column: 39, scope: !5277)
!5327 = !DILocation(line: 470, column: 5, scope: !5277)
!5328 = !DILocation(line: 470, column: 39, scope: !5277)
!5329 = !DILocation(line: 471, column: 5, scope: !5277)
!5330 = !DILocation(line: 471, column: 42, scope: !5277)
!5331 = !DILocation(line: 472, column: 1, scope: !5277)
!5332 = distinct !DISubprogram(name: "uart_query_empty", scope: !293, file: !293, line: 474, type: !4908, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5333)
!5333 = !{!5334, !5335}
!5334 = !DILocalVariable(name: "u_port", arg: 1, scope: !5332, file: !293, line: 474, type: !4854)
!5335 = !DILocalVariable(name: "base", scope: !5332, file: !293, line: 476, type: !30)
!5336 = !DILocation(line: 0, scope: !5332)
!5337 = !DILocation(line: 476, column: 25, scope: !5332)
!5338 = !DILocation(line: 478, column: 5, scope: !5332)
!5339 = !DILocation(line: 478, column: 14, scope: !5332)
!5340 = !DILocation(line: 478, column: 42, scope: !5332)
!5341 = !DILocation(line: 478, column: 12, scope: !5332)
!5342 = distinct !{!5342, !5338, !5343}
!5343 = !DILocation(line: 478, column: 50, scope: !5332)
!5344 = !DILocation(line: 479, column: 1, scope: !5332)
!5345 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !343, file: !343, line: 129, type: !5346, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5348)
!5346 = !DISubroutineType(types: !5347)
!5347 = !{null, !331, !7, !331, null}
!5348 = !{!5349, !5350, !5351, !5352}
!5349 = !DILocalVariable(name: "func", arg: 1, scope: !5345, file: !343, line: 129, type: !331)
!5350 = !DILocalVariable(name: "line", arg: 2, scope: !5345, file: !343, line: 129, type: !7)
!5351 = !DILocalVariable(name: "message", arg: 3, scope: !5345, file: !343, line: 129, type: !331)
!5352 = !DILocalVariable(name: "ap", scope: !5345, file: !343, line: 131, type: !5353)
!5353 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5354, line: 46, baseType: !5355)
!5354 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!5355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5356, line: 32, baseType: !5357)
!5356 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!5357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !343, baseType: !5358)
!5358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5359)
!5359 = !{!5360}
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5358, file: !343, line: 131, baseType: !51, size: 32)
!5361 = !DILocation(line: 0, scope: !5345)
!5362 = !DILocation(line: 131, column: 5, scope: !5345)
!5363 = !DILocation(line: 131, column: 13, scope: !5345)
!5364 = !DILocation(line: 132, column: 5, scope: !5345)
!5365 = !DILocation(line: 133, column: 5, scope: !5345)
!5366 = !DILocation(line: 134, column: 5, scope: !5345)
!5367 = !DILocation(line: 135, column: 1, scope: !5345)
!5368 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !343, file: !343, line: 138, type: !5346, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5369)
!5369 = !{!5370, !5371, !5372, !5373}
!5370 = !DILocalVariable(name: "func", arg: 1, scope: !5368, file: !343, line: 138, type: !331)
!5371 = !DILocalVariable(name: "line", arg: 2, scope: !5368, file: !343, line: 138, type: !7)
!5372 = !DILocalVariable(name: "message", arg: 3, scope: !5368, file: !343, line: 138, type: !331)
!5373 = !DILocalVariable(name: "ap", scope: !5368, file: !343, line: 140, type: !5353)
!5374 = !DILocation(line: 0, scope: !5368)
!5375 = !DILocation(line: 140, column: 5, scope: !5368)
!5376 = !DILocation(line: 140, column: 13, scope: !5368)
!5377 = !DILocation(line: 141, column: 5, scope: !5368)
!5378 = !DILocation(line: 142, column: 5, scope: !5368)
!5379 = !DILocation(line: 143, column: 5, scope: !5368)
!5380 = !DILocation(line: 144, column: 1, scope: !5368)
!5381 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !343, file: !343, line: 146, type: !5346, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5382)
!5382 = !{!5383, !5384, !5385, !5386}
!5383 = !DILocalVariable(name: "func", arg: 1, scope: !5381, file: !343, line: 146, type: !331)
!5384 = !DILocalVariable(name: "line", arg: 2, scope: !5381, file: !343, line: 146, type: !7)
!5385 = !DILocalVariable(name: "message", arg: 3, scope: !5381, file: !343, line: 146, type: !331)
!5386 = !DILocalVariable(name: "ap", scope: !5381, file: !343, line: 148, type: !5353)
!5387 = !DILocation(line: 0, scope: !5381)
!5388 = !DILocation(line: 148, column: 5, scope: !5381)
!5389 = !DILocation(line: 148, column: 13, scope: !5381)
!5390 = !DILocation(line: 149, column: 5, scope: !5381)
!5391 = !DILocation(line: 150, column: 5, scope: !5381)
!5392 = !DILocation(line: 151, column: 5, scope: !5381)
!5393 = !DILocation(line: 152, column: 1, scope: !5381)
!5394 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !343, file: !343, line: 154, type: !5346, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5395)
!5395 = !{!5396, !5397, !5398, !5399}
!5396 = !DILocalVariable(name: "func", arg: 1, scope: !5394, file: !343, line: 154, type: !331)
!5397 = !DILocalVariable(name: "line", arg: 2, scope: !5394, file: !343, line: 154, type: !7)
!5398 = !DILocalVariable(name: "message", arg: 3, scope: !5394, file: !343, line: 154, type: !331)
!5399 = !DILocalVariable(name: "ap", scope: !5394, file: !343, line: 156, type: !5353)
!5400 = !DILocation(line: 0, scope: !5394)
!5401 = !DILocation(line: 156, column: 5, scope: !5394)
!5402 = !DILocation(line: 156, column: 13, scope: !5394)
!5403 = !DILocation(line: 157, column: 5, scope: !5394)
!5404 = !DILocation(line: 158, column: 5, scope: !5394)
!5405 = !DILocation(line: 159, column: 5, scope: !5394)
!5406 = !DILocation(line: 160, column: 1, scope: !5394)
!5407 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !343, file: !343, line: 162, type: !5408, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5410)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{null, !331, !7, !331, !375, !7, null}
!5410 = !{!5411, !5412, !5413, !5414, !5415, !5416}
!5411 = !DILocalVariable(name: "func", arg: 1, scope: !5407, file: !343, line: 162, type: !331)
!5412 = !DILocalVariable(name: "line", arg: 2, scope: !5407, file: !343, line: 162, type: !7)
!5413 = !DILocalVariable(name: "message", arg: 3, scope: !5407, file: !343, line: 162, type: !331)
!5414 = !DILocalVariable(name: "data", arg: 4, scope: !5407, file: !343, line: 162, type: !375)
!5415 = !DILocalVariable(name: "length", arg: 5, scope: !5407, file: !343, line: 162, type: !7)
!5416 = !DILocalVariable(name: "ap", scope: !5407, file: !343, line: 164, type: !5353)
!5417 = !DILocation(line: 0, scope: !5407)
!5418 = !DILocation(line: 164, column: 5, scope: !5407)
!5419 = !DILocation(line: 164, column: 13, scope: !5407)
!5420 = !DILocation(line: 165, column: 5, scope: !5407)
!5421 = !DILocation(line: 166, column: 5, scope: !5407)
!5422 = !DILocation(line: 167, column: 5, scope: !5407)
!5423 = !DILocation(line: 168, column: 1, scope: !5407)
!5424 = distinct !DISubprogram(name: "hal_cache_init", scope: !380, file: !380, line: 53, type: !5425, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5428)
!5425 = !DISubroutineType(types: !5426)
!5426 = !{!5427}
!5427 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !383, line: 172, baseType: !382)
!5428 = !{!5429, !5430}
!5429 = !DILocalVariable(name: "region", scope: !5424, file: !380, line: 55, type: !2243)
!5430 = !DILocalVariable(name: "irq_flag", scope: !5424, file: !380, line: 56, type: !61)
!5431 = !DILocation(line: 59, column: 16, scope: !5424)
!5432 = !DILocation(line: 0, scope: !5424)
!5433 = !DILocation(line: 62, column: 9, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5424, file: !380, line: 62, column: 9)
!5435 = !DILocation(line: 62, column: 9, scope: !5424)
!5436 = !DILocation(line: 64, column: 9, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5434, file: !380, line: 62, column: 39)
!5438 = !DILocation(line: 66, column: 9, scope: !5437)
!5439 = !DILocation(line: 69, column: 24, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5434, file: !380, line: 67, column: 12)
!5441 = !DILocation(line: 72, column: 9, scope: !5440)
!5442 = !DILocation(line: 77, column: 5, scope: !5424)
!5443 = !DILocation(line: 80, column: 22, scope: !5424)
!5444 = !DILocation(line: 81, column: 28, scope: !5424)
!5445 = !DILocation(line: 84, column: 19, scope: !5424)
!5446 = !DILocation(line: 85, column: 23, scope: !5424)
!5447 = !DILocation(line: 88, column: 5, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5424, file: !380, line: 88, column: 5)
!5449 = !DILocation(line: 90, column: 9, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !380, line: 88, column: 81)
!5451 = distinct !DILexicalBlock(scope: !5448, file: !380, line: 88, column: 5)
!5452 = !DILocation(line: 90, column: 38, scope: !5450)
!5453 = !DILocation(line: 91, column: 9, scope: !5450)
!5454 = !DILocation(line: 91, column: 42, scope: !5450)
!5455 = !DILocation(line: 94, column: 45, scope: !5450)
!5456 = !DILocation(line: 94, column: 47, scope: !5450)
!5457 = !DILocation(line: 95, column: 49, scope: !5450)
!5458 = !DILocation(line: 95, column: 51, scope: !5450)
!5459 = !DILocation(line: 88, column: 77, scope: !5451)
!5460 = !DILocation(line: 88, column: 46, scope: !5451)
!5461 = distinct !{!5461, !5447, !5462}
!5462 = !DILocation(line: 96, column: 5, scope: !5448)
!5463 = !DILocation(line: 99, column: 1, scope: !5424)
!5464 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !380, file: !380, line: 327, type: !5425, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5465)
!5465 = !{!5466}
!5466 = !DILocalVariable(name: "irq_flag", scope: !5464, file: !380, line: 329, type: !61)
!5467 = !DILocation(line: 332, column: 16, scope: !5464)
!5468 = !DILocation(line: 0, scope: !5464)
!5469 = !DILocation(line: 335, column: 21, scope: !5464)
!5470 = !DILocation(line: 336, column: 21, scope: !5464)
!5471 = !DILocation(line: 339, column: 21, scope: !5464)
!5472 = !DILocation(line: 340, column: 21, scope: !5464)
!5473 = !DILocation(line: 434, column: 3, scope: !5474, inlinedAt: !5476)
!5474 = distinct !DISubprogram(name: "__ISB", scope: !5475, file: !5475, line: 432, type: !154, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !1397)
!5475 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!5476 = distinct !DILocation(line: 343, column: 5, scope: !5464)
!5477 = !{i64 296977}
!5478 = !DILocation(line: 346, column: 5, scope: !5464)
!5479 = !DILocation(line: 348, column: 5, scope: !5464)
!5480 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !380, file: !380, line: 101, type: !5425, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5481)
!5481 = !{!5482}
!5482 = !DILocalVariable(name: "region", scope: !5480, file: !380, line: 103, type: !2243)
!5483 = !DILocation(line: 107, column: 5, scope: !5480)
!5484 = !DILocation(line: 110, column: 22, scope: !5480)
!5485 = !DILocation(line: 111, column: 28, scope: !5480)
!5486 = !DILocation(line: 114, column: 19, scope: !5480)
!5487 = !DILocation(line: 115, column: 23, scope: !5480)
!5488 = !DILocation(line: 0, scope: !5480)
!5489 = !DILocation(line: 118, column: 5, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5480, file: !380, line: 118, column: 5)
!5491 = !DILocation(line: 120, column: 9, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !380, line: 118, column: 81)
!5493 = distinct !DILexicalBlock(scope: !5490, file: !380, line: 118, column: 5)
!5494 = !DILocation(line: 120, column: 38, scope: !5492)
!5495 = !DILocation(line: 121, column: 9, scope: !5492)
!5496 = !DILocation(line: 121, column: 42, scope: !5492)
!5497 = !DILocation(line: 124, column: 45, scope: !5492)
!5498 = !DILocation(line: 124, column: 47, scope: !5492)
!5499 = !DILocation(line: 125, column: 49, scope: !5492)
!5500 = !DILocation(line: 125, column: 51, scope: !5492)
!5501 = !DILocation(line: 118, column: 77, scope: !5493)
!5502 = !DILocation(line: 118, column: 46, scope: !5493)
!5503 = distinct !{!5503, !5489, !5504}
!5504 = !DILocation(line: 126, column: 5, scope: !5490)
!5505 = !DILocation(line: 129, column: 20, scope: !5480)
!5506 = !DILocation(line: 131, column: 5, scope: !5480)
!5507 = distinct !DISubprogram(name: "hal_cache_enable", scope: !380, file: !380, line: 134, type: !5425, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !1397)
!5508 = !DILocation(line: 137, column: 45, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5507, file: !380, line: 137, column: 9)
!5510 = !DILocation(line: 137, column: 28, scope: !5509)
!5511 = !DILocation(line: 137, column: 9, scope: !5507)
!5512 = !DILocation(line: 142, column: 22, scope: !5507)
!5513 = !DILocation(line: 145, column: 28, scope: !5507)
!5514 = !DILocation(line: 145, column: 19, scope: !5507)
!5515 = !DILocation(line: 147, column: 5, scope: !5507)
!5516 = !DILocation(line: 0, scope: !5507)
!5517 = !DILocation(line: 148, column: 1, scope: !5507)
!5518 = distinct !DISubprogram(name: "hal_cache_disable", scope: !380, file: !380, line: 150, type: !5425, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5519)
!5519 = !{!5520}
!5520 = !DILocalVariable(name: "irq_flag", scope: !5518, file: !380, line: 152, type: !61)
!5521 = !DILocation(line: 155, column: 16, scope: !5518)
!5522 = !DILocation(line: 0, scope: !5518)
!5523 = !DILocation(line: 158, column: 16, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5518, file: !380, line: 158, column: 9)
!5525 = !DILocation(line: 158, column: 26, scope: !5524)
!5526 = !DILocation(line: 158, column: 9, scope: !5518)
!5527 = !DILocation(line: 160, column: 9, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5524, file: !380, line: 158, column: 49)
!5529 = !DILocation(line: 161, column: 5, scope: !5528)
!5530 = !DILocation(line: 164, column: 22, scope: !5518)
!5531 = !DILocation(line: 167, column: 28, scope: !5518)
!5532 = !DILocation(line: 167, column: 19, scope: !5518)
!5533 = !DILocation(line: 170, column: 5, scope: !5518)
!5534 = !DILocation(line: 172, column: 5, scope: !5518)
!5535 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !380, file: !380, line: 175, type: !5536, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5538)
!5536 = !DISubroutineType(types: !5537)
!5537 = !{!5427, !2243}
!5538 = !{!5539}
!5539 = !DILocalVariable(name: "region", arg: 1, scope: !5535, file: !380, line: 175, type: !2243)
!5540 = !DILocation(line: 0, scope: !5535)
!5541 = !DILocation(line: 178, column: 16, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5535, file: !380, line: 178, column: 9)
!5543 = !DILocation(line: 178, column: 9, scope: !5535)
!5544 = !DILocation(line: 183, column: 9, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5535, file: !380, line: 183, column: 9)
!5546 = !DILocation(line: 183, column: 38, scope: !5545)
!5547 = !DILocation(line: 183, column: 9, scope: !5535)
!5548 = !DILocation(line: 184, column: 38, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5545, file: !380, line: 183, column: 62)
!5550 = !DILocation(line: 184, column: 32, scope: !5549)
!5551 = !DILocation(line: 190, column: 32, scope: !5535)
!5552 = !DILocation(line: 190, column: 23, scope: !5535)
!5553 = !DILocation(line: 192, column: 5, scope: !5535)
!5554 = !DILocation(line: 193, column: 1, scope: !5535)
!5555 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !380, file: !380, line: 195, type: !5536, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5556)
!5556 = !{!5557}
!5557 = !DILocalVariable(name: "region", arg: 1, scope: !5555, file: !380, line: 195, type: !2243)
!5558 = !DILocation(line: 0, scope: !5555)
!5559 = !DILocation(line: 198, column: 16, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5555, file: !380, line: 198, column: 9)
!5561 = !DILocation(line: 198, column: 9, scope: !5555)
!5562 = !DILocation(line: 203, column: 35, scope: !5555)
!5563 = !DILocation(line: 203, column: 31, scope: !5555)
!5564 = !DILocation(line: 203, column: 28, scope: !5555)
!5565 = !DILocation(line: 206, column: 32, scope: !5555)
!5566 = !DILocation(line: 206, column: 23, scope: !5555)
!5567 = !DILocation(line: 209, column: 41, scope: !5555)
!5568 = !DILocation(line: 209, column: 43, scope: !5555)
!5569 = !DILocation(line: 210, column: 45, scope: !5555)
!5570 = !DILocation(line: 210, column: 47, scope: !5555)
!5571 = !DILocation(line: 212, column: 5, scope: !5555)
!5572 = !DILocation(line: 213, column: 1, scope: !5555)
!5573 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !380, file: !380, line: 215, type: !5574, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5577)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{!5427, !5576}
!5576 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !383, line: 182, baseType: !412)
!5577 = !{!5578}
!5578 = !DILocalVariable(name: "cache_size", arg: 1, scope: !5573, file: !380, line: 215, type: !5576)
!5579 = !DILocation(line: 0, scope: !5573)
!5580 = !DILocation(line: 218, column: 20, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5573, file: !380, line: 218, column: 9)
!5582 = !DILocation(line: 218, column: 9, scope: !5573)
!5583 = !DILocation(line: 223, column: 22, scope: !5573)
!5584 = !DILocation(line: 224, column: 37, scope: !5573)
!5585 = !DILocation(line: 224, column: 22, scope: !5573)
!5586 = !DILocation(line: 227, column: 20, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5573, file: !380, line: 227, column: 9)
!5588 = !DILocation(line: 227, column: 9, scope: !5573)
!5589 = !DILocation(line: 228, column: 26, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5587, file: !380, line: 227, column: 43)
!5591 = !DILocation(line: 229, column: 5, scope: !5590)
!5592 = !DILocation(line: 232, column: 28, scope: !5573)
!5593 = !DILocation(line: 232, column: 19, scope: !5573)
!5594 = !DILocation(line: 234, column: 5, scope: !5573)
!5595 = !DILocation(line: 235, column: 1, scope: !5573)
!5596 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !380, file: !380, line: 237, type: !5597, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5606)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{!5427, !2243, !5599}
!5599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5600, size: 32)
!5600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5601)
!5601 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !383, line: 222, baseType: !5602)
!5602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !383, line: 219, size: 64, elements: !5603)
!5603 = !{!5604, !5605}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !5602, file: !383, line: 220, baseType: !61, size: 32)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !5602, file: !383, line: 221, baseType: !61, size: 32, offset: 32)
!5606 = !{!5607, !5608}
!5607 = !DILocalVariable(name: "region", arg: 1, scope: !5596, file: !380, line: 237, type: !2243)
!5608 = !DILocalVariable(name: "region_config", arg: 2, scope: !5596, file: !380, line: 237, type: !5599)
!5609 = !DILocation(line: 0, scope: !5596)
!5610 = !DILocation(line: 240, column: 16, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5596, file: !380, line: 240, column: 9)
!5612 = !DILocation(line: 240, column: 9, scope: !5596)
!5613 = !DILocation(line: 245, column: 23, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5596, file: !380, line: 245, column: 9)
!5615 = !DILocation(line: 245, column: 9, scope: !5596)
!5616 = !DILocation(line: 250, column: 24, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5596, file: !380, line: 250, column: 9)
!5618 = !DILocation(line: 250, column: 45, scope: !5617)
!5619 = !DILocation(line: 250, column: 9, scope: !5596)
!5620 = !DILocation(line: 251, column: 9, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5617, file: !380, line: 250, column: 81)
!5622 = !DILocation(line: 256, column: 24, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5596, file: !380, line: 256, column: 9)
!5624 = !DILocation(line: 256, column: 42, scope: !5623)
!5625 = !DILocation(line: 256, column: 9, scope: !5596)
!5626 = !DILocation(line: 257, column: 9, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5623, file: !380, line: 256, column: 78)
!5628 = !DILocation(line: 262, column: 5, scope: !5596)
!5629 = !DILocation(line: 262, column: 34, scope: !5596)
!5630 = !DILocation(line: 263, column: 55, scope: !5596)
!5631 = !DILocation(line: 263, column: 93, scope: !5596)
!5632 = !DILocation(line: 263, column: 76, scope: !5596)
!5633 = !DILocation(line: 263, column: 5, scope: !5596)
!5634 = !DILocation(line: 263, column: 38, scope: !5596)
!5635 = !DILocation(line: 266, column: 34, scope: !5596)
!5636 = !DILocation(line: 269, column: 45, scope: !5596)
!5637 = !DILocation(line: 269, column: 41, scope: !5596)
!5638 = !DILocation(line: 269, column: 43, scope: !5596)
!5639 = !DILocation(line: 270, column: 49, scope: !5596)
!5640 = !DILocation(line: 270, column: 45, scope: !5596)
!5641 = !DILocation(line: 270, column: 47, scope: !5596)
!5642 = !DILocation(line: 272, column: 5, scope: !5596)
!5643 = !DILocation(line: 273, column: 1, scope: !5596)
!5644 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !380, file: !380, line: 275, type: !5645, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5647)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!5427, !61}
!5647 = !{!5648, !5649}
!5648 = !DILocalVariable(name: "address", arg: 1, scope: !5644, file: !380, line: 275, type: !61)
!5649 = !DILocalVariable(name: "irq_flag", scope: !5644, file: !380, line: 277, type: !61)
!5650 = !DILocation(line: 0, scope: !5644)
!5651 = !DILocation(line: 280, column: 17, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5644, file: !380, line: 280, column: 9)
!5653 = !DILocation(line: 280, column: 9, scope: !5644)
!5654 = !DILocation(line: 284, column: 16, scope: !5644)
!5655 = !DILocation(line: 287, column: 32, scope: !5644)
!5656 = !DILocation(line: 287, column: 21, scope: !5644)
!5657 = !DILocation(line: 288, column: 21, scope: !5644)
!5658 = !DILocation(line: 434, column: 3, scope: !5474, inlinedAt: !5659)
!5659 = distinct !DILocation(line: 291, column: 5, scope: !5644)
!5660 = !DILocation(line: 294, column: 5, scope: !5644)
!5661 = !DILocation(line: 296, column: 5, scope: !5644)
!5662 = !DILocation(line: 297, column: 1, scope: !5644)
!5663 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !380, file: !380, line: 299, type: !5664, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5666)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!5427, !61, !61}
!5666 = !{!5667, !5668, !5669, !5670}
!5667 = !DILocalVariable(name: "address", arg: 1, scope: !5663, file: !380, line: 299, type: !61)
!5668 = !DILocalVariable(name: "length", arg: 2, scope: !5663, file: !380, line: 299, type: !61)
!5669 = !DILocalVariable(name: "irq_flag", scope: !5663, file: !380, line: 301, type: !61)
!5670 = !DILocalVariable(name: "end_address", scope: !5663, file: !380, line: 302, type: !61)
!5671 = !DILocation(line: 0, scope: !5663)
!5672 = !DILocation(line: 302, column: 36, scope: !5663)
!5673 = !DILocation(line: 305, column: 47, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5663, file: !380, line: 305, column: 9)
!5675 = !DILocation(line: 310, column: 16, scope: !5663)
!5676 = !DILocation(line: 313, column: 20, scope: !5663)
!5677 = !DILocation(line: 313, column: 5, scope: !5663)
!5678 = !DILocation(line: 314, column: 9, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5663, file: !380, line: 313, column: 35)
!5680 = !DILocation(line: 315, column: 17, scope: !5679)
!5681 = distinct !{!5681, !5677, !5682}
!5682 = !DILocation(line: 316, column: 5, scope: !5663)
!5683 = !DILocation(line: 434, column: 3, scope: !5474, inlinedAt: !5684)
!5684 = distinct !DILocation(line: 319, column: 5, scope: !5663)
!5685 = !DILocation(line: 322, column: 5, scope: !5663)
!5686 = !DILocation(line: 324, column: 5, scope: !5663)
!5687 = !DILocation(line: 325, column: 1, scope: !5663)
!5688 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !380, file: !380, line: 351, type: !5645, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5689)
!5689 = !{!5690, !5691}
!5690 = !DILocalVariable(name: "address", arg: 1, scope: !5688, file: !380, line: 351, type: !61)
!5691 = !DILocalVariable(name: "irq_flag", scope: !5688, file: !380, line: 353, type: !61)
!5692 = !DILocation(line: 0, scope: !5688)
!5693 = !DILocation(line: 356, column: 17, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5688, file: !380, line: 356, column: 9)
!5695 = !DILocation(line: 356, column: 9, scope: !5688)
!5696 = !DILocation(line: 361, column: 16, scope: !5688)
!5697 = !DILocation(line: 364, column: 32, scope: !5688)
!5698 = !DILocation(line: 364, column: 21, scope: !5688)
!5699 = !DILocation(line: 365, column: 21, scope: !5688)
!5700 = !DILocation(line: 434, column: 3, scope: !5474, inlinedAt: !5701)
!5701 = distinct !DILocation(line: 368, column: 5, scope: !5688)
!5702 = !DILocation(line: 371, column: 5, scope: !5688)
!5703 = !DILocation(line: 373, column: 5, scope: !5688)
!5704 = !DILocation(line: 374, column: 1, scope: !5688)
!5705 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !380, file: !380, line: 376, type: !5664, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5706)
!5706 = !{!5707, !5708, !5709, !5710}
!5707 = !DILocalVariable(name: "address", arg: 1, scope: !5705, file: !380, line: 376, type: !61)
!5708 = !DILocalVariable(name: "length", arg: 2, scope: !5705, file: !380, line: 376, type: !61)
!5709 = !DILocalVariable(name: "irq_flag", scope: !5705, file: !380, line: 378, type: !61)
!5710 = !DILocalVariable(name: "end_address", scope: !5705, file: !380, line: 379, type: !61)
!5711 = !DILocation(line: 0, scope: !5705)
!5712 = !DILocation(line: 379, column: 36, scope: !5705)
!5713 = !DILocation(line: 382, column: 47, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5705, file: !380, line: 382, column: 9)
!5715 = !DILocation(line: 387, column: 16, scope: !5705)
!5716 = !DILocation(line: 390, column: 20, scope: !5705)
!5717 = !DILocation(line: 390, column: 5, scope: !5705)
!5718 = !DILocation(line: 391, column: 9, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5705, file: !380, line: 390, column: 35)
!5720 = !DILocation(line: 392, column: 17, scope: !5719)
!5721 = distinct !{!5721, !5717, !5722}
!5722 = !DILocation(line: 393, column: 5, scope: !5705)
!5723 = !DILocation(line: 434, column: 3, scope: !5474, inlinedAt: !5724)
!5724 = distinct !DILocation(line: 396, column: 5, scope: !5705)
!5725 = !DILocation(line: 399, column: 5, scope: !5705)
!5726 = !DILocation(line: 401, column: 5, scope: !5705)
!5727 = !DILocation(line: 402, column: 1, scope: !5705)
!5728 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !380, file: !380, line: 404, type: !5425, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5729)
!5729 = !{!5730}
!5730 = !DILocalVariable(name: "irq_flag", scope: !5728, file: !380, line: 406, type: !61)
!5731 = !DILocation(line: 409, column: 16, scope: !5728)
!5732 = !DILocation(line: 0, scope: !5728)
!5733 = !DILocation(line: 412, column: 21, scope: !5728)
!5734 = !DILocation(line: 413, column: 21, scope: !5728)
!5735 = !DILocation(line: 434, column: 3, scope: !5474, inlinedAt: !5736)
!5736 = distinct !DILocation(line: 416, column: 5, scope: !5728)
!5737 = !DILocation(line: 419, column: 5, scope: !5728)
!5738 = !DILocation(line: 421, column: 5, scope: !5728)
!5739 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !380, file: !380, line: 424, type: !5740, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5742)
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!69, !61}
!5742 = !{!5743, !5744}
!5743 = !DILocalVariable(name: "address", arg: 1, scope: !5739, file: !380, line: 424, type: !61)
!5744 = !DILocalVariable(name: "region", scope: !5739, file: !380, line: 426, type: !2243)
!5745 = !DILocation(line: 0, scope: !5739)
!5746 = !DILocation(line: 429, column: 18, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5739, file: !380, line: 429, column: 9)
!5748 = !DILocation(line: 429, column: 28, scope: !5747)
!5749 = !DILocation(line: 429, column: 9, scope: !5739)
!5750 = !DILocation(line: 435, column: 20, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !380, line: 435, column: 13)
!5752 = distinct !DILexicalBlock(scope: !5753, file: !380, line: 433, column: 81)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !380, line: 433, column: 5)
!5754 = distinct !DILexicalBlock(scope: !5739, file: !380, line: 433, column: 5)
!5755 = !DILocation(line: 435, column: 41, scope: !5751)
!5756 = !DILocation(line: 435, column: 36, scope: !5751)
!5757 = !DILocation(line: 435, column: 13, scope: !5752)
!5758 = !DILocation(line: 436, column: 30, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5760, file: !380, line: 436, column: 17)
!5760 = distinct !DILexicalBlock(scope: !5751, file: !380, line: 435, column: 53)
!5761 = !DILocation(line: 436, column: 59, scope: !5759)
!5762 = !DILocation(line: 436, column: 26, scope: !5759)
!5763 = !DILocation(line: 436, column: 85, scope: !5759)
!5764 = !DILocation(line: 436, column: 99, scope: !5759)
!5765 = !DILocation(line: 436, column: 97, scope: !5759)
!5766 = !DILocation(line: 436, column: 17, scope: !5760)
!5767 = !DILocation(line: 433, column: 77, scope: !5753)
!5768 = !DILocation(line: 433, column: 46, scope: !5753)
!5769 = !DILocation(line: 433, column: 5, scope: !5754)
!5770 = distinct !{!5770, !5769, !5771}
!5771 = !DILocation(line: 440, column: 5, scope: !5754)
!5772 = !DILocation(line: 442, column: 1, scope: !5739)
!5773 = distinct !DISubprogram(name: "hal_nvic_init", scope: !516, file: !516, line: 60, type: !5774, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !1397)
!5774 = !DISubroutineType(types: !5775)
!5775 = !{!5776}
!5776 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !519, line: 158, baseType: !518)
!5777 = !DILocation(line: 62, column: 5, scope: !5773)
!5778 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !516, file: !516, line: 65, type: !5779, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5781)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!5776, !339}
!5781 = !{!5782, !5783}
!5782 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5778, file: !516, line: 65, type: !339)
!5783 = !DILocalVariable(name: "status", scope: !5778, file: !516, line: 67, type: !5776)
!5784 = !DILocation(line: 0, scope: !5778)
!5785 = !DILocation(line: 69, column: 40, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5778, file: !516, line: 69, column: 9)
!5787 = !DILocation(line: 73, column: 9, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5786, file: !516, line: 72, column: 12)
!5789 = !DILocation(line: 77, column: 5, scope: !5778)
!5790 = !DILocation(line: 78, column: 1, scope: !5778)
!5791 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !531, file: !531, line: 1494, type: !5792, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5794)
!5792 = !DISubroutineType(types: !5793)
!5793 = !{null, !140}
!5794 = !{!5795}
!5795 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5791, file: !531, line: 1494, type: !140)
!5796 = !DILocation(line: 0, scope: !5791)
!5797 = !DILocation(line: 1497, column: 91, scope: !5791)
!5798 = !DILocation(line: 1497, column: 61, scope: !5791)
!5799 = !DILocation(line: 1497, column: 40, scope: !5791)
!5800 = !DILocation(line: 1497, column: 3, scope: !5791)
!5801 = !DILocation(line: 1497, column: 46, scope: !5791)
!5802 = !DILocation(line: 1498, column: 1, scope: !5791)
!5803 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !516, file: !516, line: 80, type: !5779, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5804)
!5804 = !{!5805, !5806}
!5805 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5803, file: !516, line: 80, type: !339)
!5806 = !DILocalVariable(name: "status", scope: !5803, file: !516, line: 82, type: !5776)
!5807 = !DILocation(line: 0, scope: !5803)
!5808 = !DILocation(line: 84, column: 40, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5803, file: !516, line: 84, column: 9)
!5810 = !DILocation(line: 88, column: 9, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5809, file: !516, line: 87, column: 12)
!5812 = !DILocation(line: 92, column: 5, scope: !5803)
!5813 = !DILocation(line: 93, column: 1, scope: !5803)
!5814 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !531, file: !531, line: 1507, type: !5792, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5815)
!5815 = !{!5816}
!5816 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5814, file: !531, line: 1507, type: !140)
!5817 = !DILocation(line: 0, scope: !5814)
!5818 = !DILocation(line: 1509, column: 65, scope: !5814)
!5819 = !DILocation(line: 1509, column: 44, scope: !5814)
!5820 = !DILocation(line: 1509, column: 32, scope: !5814)
!5821 = !DILocation(line: 1509, column: 3, scope: !5814)
!5822 = !DILocation(line: 1509, column: 39, scope: !5814)
!5823 = !DILocation(line: 1510, column: 1, scope: !5814)
!5824 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !516, file: !516, line: 95, type: !5825, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5827)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!61, !339}
!5827 = !{!5828, !5829}
!5828 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5824, file: !516, line: 95, type: !339)
!5829 = !DILocalVariable(name: "ret", scope: !5824, file: !516, line: 97, type: !61)
!5830 = !DILocation(line: 0, scope: !5824)
!5831 = !DILocation(line: 99, column: 40, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5824, file: !516, line: 99, column: 9)
!5833 = !DILocation(line: 102, column: 15, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5832, file: !516, line: 101, column: 12)
!5835 = !DILocation(line: 105, column: 5, scope: !5824)
!5836 = !DILocation(line: 106, column: 1, scope: !5824)
!5837 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !531, file: !531, line: 1523, type: !5838, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5840)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{!61, !140}
!5840 = !{!5841}
!5841 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5837, file: !531, line: 1523, type: !140)
!5842 = !DILocation(line: 0, scope: !5837)
!5843 = !DILocation(line: 1525, column: 51, scope: !5837)
!5844 = !DILocation(line: 1525, column: 23, scope: !5837)
!5845 = !DILocation(line: 1525, column: 83, scope: !5837)
!5846 = !DILocation(line: 1525, column: 22, scope: !5837)
!5847 = !DILocation(line: 1525, column: 3, scope: !5837)
!5848 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !516, file: !516, line: 108, type: !5779, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5849)
!5849 = !{!5850, !5851}
!5850 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5848, file: !516, line: 108, type: !339)
!5851 = !DILocalVariable(name: "status", scope: !5848, file: !516, line: 110, type: !5776)
!5852 = !DILocation(line: 0, scope: !5848)
!5853 = !DILocation(line: 112, column: 40, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5848, file: !516, line: 112, column: 9)
!5855 = !DILocation(line: 116, column: 9, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5854, file: !516, line: 115, column: 12)
!5857 = !DILocation(line: 120, column: 5, scope: !5848)
!5858 = !DILocation(line: 121, column: 1, scope: !5848)
!5859 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !531, file: !531, line: 1535, type: !5792, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5860)
!5860 = !{!5861}
!5861 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5859, file: !531, line: 1535, type: !140)
!5862 = !DILocation(line: 0, scope: !5859)
!5863 = !DILocation(line: 1537, column: 65, scope: !5859)
!5864 = !DILocation(line: 1537, column: 44, scope: !5859)
!5865 = !DILocation(line: 1537, column: 32, scope: !5859)
!5866 = !DILocation(line: 1537, column: 3, scope: !5859)
!5867 = !DILocation(line: 1537, column: 39, scope: !5859)
!5868 = !DILocation(line: 1538, column: 1, scope: !5859)
!5869 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !516, file: !516, line: 123, type: !5779, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5870)
!5870 = !{!5871, !5872}
!5871 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5869, file: !516, line: 123, type: !339)
!5872 = !DILocalVariable(name: "status", scope: !5869, file: !516, line: 125, type: !5776)
!5873 = !DILocation(line: 0, scope: !5869)
!5874 = !DILocation(line: 127, column: 40, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5869, file: !516, line: 127, column: 9)
!5876 = !DILocation(line: 131, column: 9, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5875, file: !516, line: 130, column: 12)
!5878 = !DILocation(line: 135, column: 5, scope: !5869)
!5879 = !DILocation(line: 136, column: 1, scope: !5869)
!5880 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !531, file: !531, line: 1547, type: !5792, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5881)
!5881 = !{!5882}
!5882 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5880, file: !531, line: 1547, type: !140)
!5883 = !DILocation(line: 0, scope: !5880)
!5884 = !DILocation(line: 1549, column: 65, scope: !5880)
!5885 = !DILocation(line: 1549, column: 44, scope: !5880)
!5886 = !DILocation(line: 1549, column: 32, scope: !5880)
!5887 = !DILocation(line: 1549, column: 3, scope: !5880)
!5888 = !DILocation(line: 1549, column: 39, scope: !5880)
!5889 = !DILocation(line: 1550, column: 1, scope: !5880)
!5890 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !516, file: !516, line: 138, type: !5891, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5893)
!5891 = !DISubroutineType(types: !5892)
!5892 = !{!5776, !339, !61}
!5893 = !{!5894, !5895, !5896}
!5894 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5890, file: !516, line: 138, type: !339)
!5895 = !DILocalVariable(name: "priority", arg: 2, scope: !5890, file: !516, line: 138, type: !61)
!5896 = !DILocalVariable(name: "status", scope: !5890, file: !516, line: 140, type: !5776)
!5897 = !DILocation(line: 0, scope: !5890)
!5898 = !DILocation(line: 142, column: 40, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5890, file: !516, line: 142, column: 9)
!5900 = !DILocation(line: 146, column: 9, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5899, file: !516, line: 145, column: 12)
!5902 = !DILocation(line: 150, column: 5, scope: !5890)
!5903 = !DILocation(line: 151, column: 1, scope: !5890)
!5904 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !531, file: !531, line: 1577, type: !5905, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5907)
!5905 = !DISubroutineType(types: !5906)
!5906 = !{null, !140, !61}
!5907 = !{!5908, !5909}
!5908 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5904, file: !531, line: 1577, type: !140)
!5909 = !DILocalVariable(name: "priority", arg: 2, scope: !5904, file: !531, line: 1577, type: !61)
!5910 = !DILocation(line: 0, scope: !5904)
!5911 = !DILocation(line: 1582, column: 34, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !531, line: 1581, column: 8)
!5913 = distinct !DILexicalBlock(scope: !5904, file: !531, line: 1579, column: 6)
!5914 = !DILocation(line: 1582, column: 5, scope: !5912)
!5915 = !DILocation(line: 1582, column: 32, scope: !5912)
!5916 = !DILocation(line: 1583, column: 1, scope: !5904)
!5917 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !516, file: !516, line: 153, type: !5825, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5918)
!5918 = !{!5919, !5920}
!5919 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5917, file: !516, line: 153, type: !339)
!5920 = !DILocalVariable(name: "ret", scope: !5917, file: !516, line: 155, type: !61)
!5921 = !DILocation(line: 0, scope: !5917)
!5922 = !DILocation(line: 157, column: 40, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5917, file: !516, line: 157, column: 9)
!5924 = !DILocation(line: 160, column: 15, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5923, file: !516, line: 159, column: 12)
!5926 = !DILocation(line: 163, column: 5, scope: !5917)
!5927 = !DILocation(line: 164, column: 1, scope: !5917)
!5928 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !531, file: !531, line: 1597, type: !5838, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5929)
!5929 = !{!5930}
!5930 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5928, file: !531, line: 1597, type: !140)
!5931 = !DILocation(line: 0, scope: !5928)
!5932 = !DILocation(line: 1603, column: 23, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !531, line: 1602, column: 8)
!5934 = distinct !DILexicalBlock(scope: !5928, file: !531, line: 1600, column: 6)
!5935 = !DILocation(line: 1603, column: 60, scope: !5933)
!5936 = !DILocation(line: 1604, column: 1, scope: !5928)
!5937 = distinct !DISubprogram(name: "isrC_main", scope: !516, file: !516, line: 178, type: !5774, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5938)
!5938 = !{!5939, !5940}
!5939 = !DILocalVariable(name: "status", scope: !5937, file: !516, line: 180, type: !5776)
!5940 = !DILocalVariable(name: "irq_number", scope: !5937, file: !516, line: 181, type: !339)
!5941 = !DILocation(line: 0, scope: !5937)
!5942 = !DILocation(line: 185, column: 5, scope: !5937)
!5943 = !DILocation(line: 188, column: 34, scope: !5937)
!5944 = !DILocation(line: 189, column: 24, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5937, file: !516, line: 189, column: 9)
!5946 = !DILocation(line: 192, column: 48, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5945, file: !516, line: 192, column: 16)
!5948 = !DILocation(line: 192, column: 62, scope: !5947)
!5949 = !DILocation(line: 192, column: 16, scope: !5945)
!5950 = !DILocation(line: 194, column: 9, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5947, file: !516, line: 192, column: 71)
!5952 = !DILocation(line: 195, column: 9, scope: !5951)
!5953 = !DILocation(line: 197, column: 55, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5947, file: !516, line: 196, column: 12)
!5955 = !DILocation(line: 197, column: 41, scope: !5954)
!5956 = !DILocation(line: 197, column: 53, scope: !5954)
!5957 = !DILocation(line: 198, column: 41, scope: !5954)
!5958 = !DILocation(line: 198, column: 9, scope: !5954)
!5959 = !DILocation(line: 202, column: 5, scope: !5937)
!5960 = !DILocation(line: 203, column: 1, scope: !5937)
!5961 = distinct !DISubprogram(name: "get_current_irq", scope: !516, file: !516, line: 166, type: !2255, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5962)
!5962 = !{!5963}
!5963 = !DILocalVariable(name: "irq_num", scope: !5961, file: !516, line: 168, type: !61)
!5964 = !DILocation(line: 168, column: 31, scope: !5961)
!5965 = !DILocation(line: 168, column: 36, scope: !5961)
!5966 = !DILocation(line: 0, scope: !5961)
!5967 = !DILocation(line: 169, column: 21, scope: !5961)
!5968 = !DILocation(line: 169, column: 5, scope: !5961)
!5969 = distinct !DISubprogram(name: "get_pending_irq", scope: !516, file: !516, line: 55, type: !2255, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !1397)
!5970 = !DILocation(line: 57, column: 19, scope: !5969)
!5971 = !DILocation(line: 57, column: 51, scope: !5969)
!5972 = !DILocation(line: 57, column: 5, scope: !5969)
!5973 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !516, file: !516, line: 205, type: !5974, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5977)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!5776, !339, !5976}
!5976 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !519, line: 175, baseType: !599)
!5977 = !{!5978, !5979, !5980}
!5978 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5973, file: !516, line: 205, type: !339)
!5979 = !DILocalVariable(name: "callback", arg: 2, scope: !5973, file: !516, line: 205, type: !5976)
!5980 = !DILocalVariable(name: "mask", scope: !5973, file: !516, line: 207, type: !61)
!5981 = !DILocation(line: 0, scope: !5973)
!5982 = !DILocation(line: 209, column: 24, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5973, file: !516, line: 209, column: 9)
!5984 = !DILocation(line: 213, column: 12, scope: !5973)
!5985 = !DILocation(line: 214, column: 5, scope: !5973)
!5986 = !DILocation(line: 215, column: 37, scope: !5973)
!5987 = !DILocation(line: 215, column: 51, scope: !5973)
!5988 = !DILocation(line: 216, column: 37, scope: !5973)
!5989 = !DILocation(line: 216, column: 49, scope: !5973)
!5990 = !DILocation(line: 217, column: 5, scope: !5973)
!5991 = !DILocation(line: 219, column: 5, scope: !5973)
!5992 = !DILocation(line: 220, column: 1, scope: !5973)
!5993 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !516, file: !516, line: 222, type: !5994, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5996)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!5776, !2833}
!5996 = !{!5997}
!5997 = !DILocalVariable(name: "mask", arg: 1, scope: !5993, file: !516, line: 222, type: !2833)
!5998 = !DILocation(line: 0, scope: !5993)
!5999 = !DILocation(line: 224, column: 13, scope: !5993)
!6000 = !DILocation(line: 224, column: 11, scope: !5993)
!6001 = !DILocation(line: 225, column: 5, scope: !5993)
!6002 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !516, file: !516, line: 228, type: !6003, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !6005)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!5776, !61}
!6005 = !{!6006}
!6006 = !DILocalVariable(name: "mask", arg: 1, scope: !6002, file: !516, line: 228, type: !61)
!6007 = !DILocation(line: 0, scope: !6002)
!6008 = !DILocation(line: 230, column: 5, scope: !6002)
!6009 = !DILocation(line: 231, column: 5, scope: !6002)
!6010 = distinct !DISubprogram(name: "hal_flash_init", scope: !2181, file: !2181, line: 42, type: !6011, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !6014)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!6013}
!6013 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !45, line: 119, baseType: !1717)
!6014 = !{!6015}
!6015 = !DILocalVariable(name: "ret_value", scope: !6010, file: !2181, line: 44, type: !527)
!6016 = !DILocation(line: 0, scope: !6010)
!6017 = !DILocation(line: 45, column: 17, scope: !6010)
!6018 = !DILocation(line: 46, column: 12, scope: !6010)
!6019 = !DILocation(line: 46, column: 5, scope: !6010)
!6020 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2181, file: !2181, line: 49, type: !6011, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !1397)
!6021 = !DILocation(line: 51, column: 5, scope: !6020)
!6022 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2181, file: !2181, line: 54, type: !6023, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !6026)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!6013, !61, !6025}
!6025 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !45, line: 127, baseType: !44)
!6026 = !{!6027, !6028, !6029}
!6027 = !DILocalVariable(name: "start_address", arg: 1, scope: !6022, file: !2181, line: 54, type: !61)
!6028 = !DILocalVariable(name: "block", arg: 2, scope: !6022, file: !2181, line: 54, type: !6025)
!6029 = !DILocalVariable(name: "ret_value", scope: !6022, file: !2181, line: 56, type: !527)
!6030 = !DILocation(line: 0, scope: !6022)
!6031 = !DILocation(line: 57, column: 17, scope: !6022)
!6032 = !DILocation(line: 58, column: 12, scope: !6022)
!6033 = !DILocation(line: 58, column: 5, scope: !6022)
!6034 = distinct !DISubprogram(name: "hal_flash_read", scope: !2181, file: !2181, line: 62, type: !6035, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !6037)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!6013, !61, !210, !61}
!6037 = !{!6038, !6039, !6040}
!6038 = !DILocalVariable(name: "start_address", arg: 1, scope: !6034, file: !2181, line: 62, type: !61)
!6039 = !DILocalVariable(name: "buffer", arg: 2, scope: !6034, file: !2181, line: 62, type: !210)
!6040 = !DILocalVariable(name: "length", arg: 3, scope: !6034, file: !2181, line: 62, type: !61)
!6041 = !DILocation(line: 0, scope: !6034)
!6042 = !DILocation(line: 64, column: 50, scope: !6034)
!6043 = !DILocation(line: 64, column: 27, scope: !6034)
!6044 = !DILocation(line: 64, column: 5, scope: !6034)
!6045 = !DILocation(line: 65, column: 5, scope: !6034)
!6046 = distinct !DISubprogram(name: "hal_flash_write", scope: !2181, file: !2181, line: 68, type: !6047, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !6049)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!6013, !61, !2415, !61}
!6049 = !{!6050, !6051, !6052, !6053}
!6050 = !DILocalVariable(name: "address", arg: 1, scope: !6046, file: !2181, line: 68, type: !61)
!6051 = !DILocalVariable(name: "data", arg: 2, scope: !6046, file: !2181, line: 68, type: !2415)
!6052 = !DILocalVariable(name: "length", arg: 3, scope: !6046, file: !2181, line: 68, type: !61)
!6053 = !DILocalVariable(name: "ret_value", scope: !6046, file: !2181, line: 70, type: !527)
!6054 = !DILocation(line: 0, scope: !6046)
!6055 = !DILocation(line: 70, column: 25, scope: !6046)
!6056 = !DILocation(line: 71, column: 12, scope: !6046)
!6057 = !DILocation(line: 71, column: 5, scope: !6046)
!6058 = distinct !DISubprogram(name: "hal_gpt_init", scope: !608, file: !608, line: 82, type: !6059, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6062)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!2260, !6061}
!6061 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !29, line: 663, baseType: !610)
!6062 = !{!6063}
!6063 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6058, file: !608, line: 82, type: !6061)
!6064 = !DILocation(line: 0, scope: !6058)
!6065 = !DILocation(line: 84, column: 9, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6058, file: !608, line: 84, column: 9)
!6067 = !DILocation(line: 84, column: 33, scope: !6066)
!6068 = !DILocation(line: 84, column: 9, scope: !6058)
!6069 = !DILocation(line: 88, column: 9, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6058, file: !608, line: 88, column: 9)
!6071 = !DILocation(line: 88, column: 9, scope: !6058)
!6072 = !DILocation(line: 89, column: 9, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6070, file: !608, line: 88, column: 50)
!6074 = !DILocation(line: 90, column: 9, scope: !6073)
!6075 = !DILocation(line: 92, column: 12, scope: !6058)
!6076 = !DILocation(line: 92, column: 5, scope: !6058)
!6077 = !DILocation(line: 96, column: 43, scope: !6058)
!6078 = !DILocation(line: 98, column: 5, scope: !6058)
!6079 = !DILocation(line: 99, column: 1, scope: !6058)
!6080 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !608, file: !608, line: 63, type: !6081, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6083)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!69, !6061}
!6083 = !{!6084}
!6084 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6080, file: !608, line: 63, type: !6061)
!6085 = !DILocation(line: 0, scope: !6080)
!6086 = !DILocation(line: 65, column: 19, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6080, file: !608, line: 65, column: 9)
!6088 = !DILocation(line: 65, column: 34, scope: !6087)
!6089 = !DILocation(line: 70, column: 1, scope: !6080)
!6090 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !608, file: !608, line: 101, type: !6059, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6091)
!6091 = !{!6092}
!6092 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6090, file: !608, line: 101, type: !6061)
!6093 = !DILocation(line: 0, scope: !6090)
!6094 = !DILocation(line: 103, column: 9, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6090, file: !608, line: 103, column: 9)
!6096 = !DILocation(line: 103, column: 9, scope: !6090)
!6097 = !DILocation(line: 104, column: 9, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6095, file: !608, line: 103, column: 50)
!6099 = !DILocation(line: 105, column: 9, scope: !6098)
!6100 = !DILocation(line: 108, column: 9, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6090, file: !608, line: 108, column: 9)
!6102 = !DILocation(line: 108, column: 33, scope: !6101)
!6103 = !DILocation(line: 108, column: 48, scope: !6101)
!6104 = !DILocation(line: 108, column: 9, scope: !6090)
!6105 = !DILocation(line: 109, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6101, file: !608, line: 108, column: 68)
!6107 = !DILocation(line: 110, column: 9, scope: !6106)
!6108 = !DILocation(line: 113, column: 12, scope: !6090)
!6109 = !DILocation(line: 113, column: 5, scope: !6090)
!6110 = !DILocation(line: 116, column: 29, scope: !6090)
!6111 = !DILocation(line: 116, column: 43, scope: !6090)
!6112 = !DILocation(line: 117, column: 5, scope: !6090)
!6113 = !DILocation(line: 118, column: 1, scope: !6090)
!6114 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !608, file: !608, line: 120, type: !6115, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6118)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{!2260, !6117, !2833}
!6117 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !29, line: 674, baseType: !28)
!6118 = !{!6119, !6120}
!6119 = !DILocalVariable(name: "clock_source", arg: 1, scope: !6114, file: !608, line: 120, type: !6117)
!6120 = !DILocalVariable(name: "count", arg: 2, scope: !6114, file: !608, line: 120, type: !2833)
!6121 = !DILocation(line: 0, scope: !6114)
!6122 = !DILocation(line: 122, column: 9, scope: !6114)
!6123 = !DILocation(line: 123, column: 50, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !608, line: 123, column: 13)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !608, line: 122, column: 51)
!6126 = distinct !DILexicalBlock(scope: !6114, file: !608, line: 122, column: 9)
!6127 = !DILocation(line: 123, column: 65, scope: !6124)
!6128 = !DILocation(line: 123, column: 13, scope: !6125)
!6129 = !DILocation(line: 124, column: 13, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6124, file: !608, line: 123, column: 86)
!6131 = !DILocation(line: 125, column: 9, scope: !6130)
!6132 = !DILocation(line: 126, column: 18, scope: !6125)
!6133 = !DILocation(line: 126, column: 16, scope: !6125)
!6134 = !DILocation(line: 127, column: 49, scope: !6125)
!6135 = !DILocation(line: 128, column: 5, scope: !6125)
!6136 = !DILocation(line: 129, column: 50, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6138, file: !608, line: 129, column: 13)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !608, line: 128, column: 57)
!6139 = distinct !DILexicalBlock(scope: !6126, file: !608, line: 128, column: 16)
!6140 = !DILocation(line: 129, column: 65, scope: !6137)
!6141 = !DILocation(line: 129, column: 13, scope: !6138)
!6142 = !DILocation(line: 130, column: 13, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6137, file: !608, line: 129, column: 86)
!6144 = !DILocation(line: 131, column: 9, scope: !6143)
!6145 = !DILocation(line: 132, column: 18, scope: !6138)
!6146 = !DILocation(line: 132, column: 46, scope: !6138)
!6147 = !DILocation(line: 132, column: 65, scope: !6138)
!6148 = !DILocation(line: 132, column: 43, scope: !6138)
!6149 = !DILocation(line: 132, column: 16, scope: !6138)
!6150 = !DILocation(line: 133, column: 49, scope: !6138)
!6151 = !DILocation(line: 134, column: 5, scope: !6138)
!6152 = !DILocation(line: 135, column: 50, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !608, line: 135, column: 13)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !608, line: 134, column: 58)
!6155 = distinct !DILexicalBlock(scope: !6139, file: !608, line: 134, column: 16)
!6156 = !DILocation(line: 135, column: 65, scope: !6153)
!6157 = !DILocation(line: 135, column: 13, scope: !6154)
!6158 = !DILocation(line: 136, column: 13, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6153, file: !608, line: 135, column: 86)
!6160 = !DILocation(line: 137, column: 9, scope: !6159)
!6161 = !DILocation(line: 138, column: 18, scope: !6154)
!6162 = !DILocation(line: 138, column: 16, scope: !6154)
!6163 = !DILocation(line: 139, column: 49, scope: !6154)
!6164 = !DILocation(line: 141, column: 9, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6155, file: !608, line: 140, column: 11)
!6166 = !DILocation(line: 142, column: 9, scope: !6165)
!6167 = !DILocation(line: 146, column: 1, scope: !6114)
!6168 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !608, file: !608, line: 148, type: !6169, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6171)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!2260, !61, !61, !2833}
!6171 = !{!6172, !6173, !6174}
!6172 = !DILocalVariable(name: "start_count", arg: 1, scope: !6168, file: !608, line: 148, type: !61)
!6173 = !DILocalVariable(name: "end_count", arg: 2, scope: !6168, file: !608, line: 148, type: !61)
!6174 = !DILocalVariable(name: "duration_count", arg: 3, scope: !6168, file: !608, line: 148, type: !2833)
!6175 = !DILocation(line: 0, scope: !6168)
!6176 = !DILocation(line: 150, column: 24, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6168, file: !608, line: 150, column: 9)
!6178 = !DILocation(line: 150, column: 9, scope: !6168)
!6179 = !DILocation(line: 0, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6168, file: !608, line: 154, column: 9)
!6181 = !DILocation(line: 160, column: 5, scope: !6168)
!6182 = !DILocation(line: 161, column: 1, scope: !6168)
!6183 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !608, file: !608, line: 163, type: !6184, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6187)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!2260, !6061, !6186}
!6186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!6187 = !{!6188, !6189}
!6188 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6183, file: !608, line: 163, type: !6061)
!6189 = !DILocalVariable(name: "running_status", arg: 2, scope: !6183, file: !608, line: 164, type: !6186)
!6190 = !DILocation(line: 0, scope: !6183)
!6191 = !DILocation(line: 166, column: 18, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6183, file: !608, line: 166, column: 9)
!6193 = !DILocation(line: 166, column: 9, scope: !6183)
!6194 = !DILocation(line: 167, column: 9, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6192, file: !608, line: 166, column: 34)
!6196 = !DILocation(line: 168, column: 9, scope: !6195)
!6197 = !DILocation(line: 170, column: 47, scope: !6183)
!6198 = !DILocation(line: 170, column: 21, scope: !6183)
!6199 = !DILocation(line: 171, column: 5, scope: !6183)
!6200 = !DILocation(line: 172, column: 1, scope: !6183)
!6201 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !608, file: !608, line: 174, type: !6202, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6204)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!2260, !6061, !638, !51}
!6204 = !{!6205, !6206, !6207}
!6205 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6201, file: !608, line: 174, type: !6061)
!6206 = !DILocalVariable(name: "callback", arg: 2, scope: !6201, file: !608, line: 175, type: !638)
!6207 = !DILocalVariable(name: "user_data", arg: 3, scope: !6201, file: !608, line: 176, type: !51)
!6208 = !DILocation(line: 0, scope: !6201)
!6209 = !DILocation(line: 178, column: 9, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6201, file: !608, line: 178, column: 9)
!6211 = !DILocation(line: 178, column: 9, scope: !6201)
!6212 = !DILocation(line: 179, column: 9, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6210, file: !608, line: 178, column: 50)
!6214 = !DILocation(line: 180, column: 9, scope: !6213)
!6215 = !DILocation(line: 182, column: 33, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6201, file: !608, line: 182, column: 9)
!6217 = !DILocation(line: 182, column: 47, scope: !6216)
!6218 = !DILocation(line: 182, column: 9, scope: !6201)
!6219 = !DILocation(line: 185, column: 18, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6201, file: !608, line: 185, column: 9)
!6221 = !DILocation(line: 185, column: 9, scope: !6201)
!6222 = !DILocation(line: 188, column: 46, scope: !6201)
!6223 = !DILocation(line: 188, column: 56, scope: !6201)
!6224 = !DILocation(line: 189, column: 46, scope: !6201)
!6225 = !DILocation(line: 189, column: 56, scope: !6201)
!6226 = !DILocation(line: 190, column: 5, scope: !6201)
!6227 = !DILocation(line: 191, column: 1, scope: !6201)
!6228 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !608, file: !608, line: 218, type: !6229, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6232)
!6229 = !DISubroutineType(types: !6230)
!6230 = !{!2260, !6061, !61, !6231}
!6231 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !21, line: 383, baseType: !621)
!6232 = !{!6233, !6234, !6235}
!6233 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6228, file: !608, line: 218, type: !6061)
!6234 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !6228, file: !608, line: 218, type: !61)
!6235 = !DILocalVariable(name: "timer_type", arg: 3, scope: !6228, file: !608, line: 218, type: !6231)
!6236 = !DILocation(line: 0, scope: !6228)
!6237 = !DILocation(line: 220, column: 9, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6228, file: !608, line: 220, column: 9)
!6239 = !DILocation(line: 220, column: 9, scope: !6228)
!6240 = !DILocation(line: 221, column: 9, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6238, file: !608, line: 220, column: 50)
!6242 = !DILocation(line: 222, column: 9, scope: !6241)
!6243 = !DILocation(line: 225, column: 33, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6228, file: !608, line: 225, column: 9)
!6245 = !DILocation(line: 225, column: 47, scope: !6244)
!6246 = !DILocation(line: 225, column: 9, scope: !6228)
!6247 = !DILocation(line: 229, column: 25, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6228, file: !608, line: 229, column: 9)
!6249 = !DILocation(line: 229, column: 9, scope: !6228)
!6250 = !DILocation(line: 234, column: 17, scope: !6228)
!6251 = !DILocation(line: 235, column: 17, scope: !6228)
!6252 = !DILocation(line: 236, column: 17, scope: !6228)
!6253 = !DILocation(line: 233, column: 5, scope: !6228)
!6254 = !DILocation(line: 237, column: 5, scope: !6228)
!6255 = !DILocation(line: 238, column: 29, scope: !6228)
!6256 = !DILocation(line: 238, column: 44, scope: !6228)
!6257 = !DILocation(line: 239, column: 5, scope: !6228)
!6258 = !DILocation(line: 240, column: 1, scope: !6228)
!6259 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !608, file: !608, line: 72, type: !6260, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6262)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!61, !61}
!6262 = !{!6263}
!6263 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !6259, file: !608, line: 72, type: !61)
!6264 = !DILocation(line: 0, scope: !6259)
!6265 = !DILocation(line: 74, column: 37, scope: !6259)
!6266 = !DILocation(line: 74, column: 47, scope: !6259)
!6267 = !DILocation(line: 74, column: 63, scope: !6259)
!6268 = !DILocation(line: 74, column: 42, scope: !6259)
!6269 = !DILocation(line: 74, column: 73, scope: !6259)
!6270 = !DILocation(line: 74, column: 89, scope: !6259)
!6271 = !DILocation(line: 74, column: 68, scope: !6259)
!6272 = !DILocation(line: 74, column: 100, scope: !6259)
!6273 = !DILocation(line: 74, column: 116, scope: !6259)
!6274 = !DILocation(line: 74, column: 95, scope: !6259)
!6275 = !DILocation(line: 74, column: 5, scope: !6259)
!6276 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !608, file: !608, line: 77, type: !6277, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!69, !6231}
!6279 = !{!6280}
!6280 = !DILocalVariable(name: "type", arg: 1, scope: !6276, file: !608, line: 77, type: !6231)
!6281 = !DILocation(line: 0, scope: !6276)
!6282 = !DILocation(line: 79, column: 38, scope: !6276)
!6283 = !DILocation(line: 79, column: 5, scope: !6276)
!6284 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !608, file: !608, line: 213, type: !6285, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6288)
!6285 = !DISubroutineType(types: !6286)
!6286 = !{!6287, !6061}
!6287 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !608, line: 211, baseType: !153)
!6288 = !{!6289}
!6289 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6284, file: !608, line: 213, type: !6061)
!6290 = !DILocation(line: 0, scope: !6284)
!6291 = !DILocation(line: 215, column: 23, scope: !6284)
!6292 = !DILocation(line: 215, column: 12, scope: !6284)
!6293 = !DILocation(line: 215, column: 5, scope: !6284)
!6294 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !608, file: !608, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6295)
!6295 = !{!6296}
!6296 = !DILocalVariable(name: "context", scope: !6294, file: !608, line: 195, type: !6297)
!6297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!6298 = !DILocation(line: 196, column: 26, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6294, file: !608, line: 196, column: 9)
!6300 = !DILocation(line: 196, column: 14, scope: !6299)
!6301 = !DILocation(line: 196, column: 9, scope: !6294)
!6302 = !DILocation(line: 197, column: 36, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6299, file: !608, line: 196, column: 36)
!6304 = !DILocation(line: 197, column: 9, scope: !6303)
!6305 = !DILocation(line: 198, column: 5, scope: !6303)
!6306 = !DILocation(line: 199, column: 45, scope: !6294)
!6307 = !DILocation(line: 200, column: 1, scope: !6294)
!6308 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !608, file: !608, line: 202, type: !154, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6309)
!6309 = !{!6310}
!6310 = !DILocalVariable(name: "context", scope: !6308, file: !608, line: 204, type: !6297)
!6311 = !DILocation(line: 205, column: 26, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6308, file: !608, line: 205, column: 9)
!6313 = !DILocation(line: 205, column: 14, scope: !6312)
!6314 = !DILocation(line: 205, column: 9, scope: !6308)
!6315 = !DILocation(line: 206, column: 36, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !608, line: 205, column: 36)
!6317 = !DILocation(line: 206, column: 9, scope: !6316)
!6318 = !DILocation(line: 207, column: 5, scope: !6316)
!6319 = !DILocation(line: 208, column: 45, scope: !6308)
!6320 = !DILocation(line: 209, column: 1, scope: !6308)
!6321 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !608, file: !608, line: 242, type: !6059, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6322)
!6322 = !{!6323}
!6323 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6321, file: !608, line: 242, type: !6061)
!6324 = !DILocation(line: 0, scope: !6321)
!6325 = !DILocation(line: 244, column: 9, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6321, file: !608, line: 244, column: 9)
!6327 = !DILocation(line: 244, column: 9, scope: !6321)
!6328 = !DILocation(line: 245, column: 9, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6326, file: !608, line: 244, column: 50)
!6330 = !DILocation(line: 246, column: 9, scope: !6329)
!6331 = !DILocation(line: 248, column: 5, scope: !6321)
!6332 = !DILocation(line: 249, column: 29, scope: !6321)
!6333 = !DILocation(line: 249, column: 44, scope: !6321)
!6334 = !DILocation(line: 250, column: 5, scope: !6321)
!6335 = !DILocation(line: 251, column: 1, scope: !6321)
!6336 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !608, file: !608, line: 253, type: !6337, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6339)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!2260, !61}
!6339 = !{!6340}
!6340 = !DILocalVariable(name: "ms", arg: 1, scope: !6336, file: !608, line: 253, type: !61)
!6341 = !DILocation(line: 0, scope: !6336)
!6342 = !DILocation(line: 255, column: 46, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6336, file: !608, line: 255, column: 9)
!6344 = !DILocation(line: 255, column: 61, scope: !6343)
!6345 = !DILocation(line: 255, column: 9, scope: !6336)
!6346 = !DILocation(line: 256, column: 9, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6343, file: !608, line: 255, column: 82)
!6348 = !DILocation(line: 257, column: 5, scope: !6347)
!6349 = !DILocation(line: 258, column: 5, scope: !6336)
!6350 = !DILocation(line: 259, column: 57, scope: !6336)
!6351 = !DILocation(line: 260, column: 5, scope: !6336)
!6352 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !608, file: !608, line: 264, type: !6337, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6353)
!6353 = !{!6354}
!6354 = !DILocalVariable(name: "us", arg: 1, scope: !6352, file: !608, line: 264, type: !61)
!6355 = !DILocation(line: 0, scope: !6352)
!6356 = !DILocation(line: 266, column: 46, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6352, file: !608, line: 266, column: 9)
!6358 = !DILocation(line: 266, column: 61, scope: !6357)
!6359 = !DILocation(line: 266, column: 9, scope: !6352)
!6360 = !DILocation(line: 267, column: 9, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6357, file: !608, line: 266, column: 82)
!6362 = !DILocation(line: 268, column: 5, scope: !6361)
!6363 = !DILocation(line: 269, column: 5, scope: !6352)
!6364 = !DILocation(line: 270, column: 57, scope: !6352)
!6365 = !DILocation(line: 271, column: 5, scope: !6352)
!6366 = distinct !DISubprogram(name: "uart_send_handler", scope: !647, file: !647, line: 213, type: !4908, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6367)
!6367 = !{!6368, !6369, !6370}
!6368 = !DILocalVariable(name: "u_port", arg: 1, scope: !6366, file: !647, line: 213, type: !4854)
!6369 = !DILocalVariable(name: "length", scope: !6366, file: !647, line: 215, type: !61)
!6370 = !DILocalVariable(name: "irq_status", scope: !6366, file: !647, line: 216, type: !61)
!6371 = !DILocation(line: 0, scope: !6366)
!6372 = !DILocation(line: 215, column: 5, scope: !6366)
!6373 = !DILocation(line: 216, column: 5, scope: !6366)
!6374 = !DILocation(line: 218, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6366, file: !647, line: 218, column: 9)
!6376 = !DILocation(line: 218, column: 54, scope: !6375)
!6377 = !DILocation(line: 218, column: 9, scope: !6366)
!6378 = !DILocation(line: 219, column: 9, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6375, file: !647, line: 218, column: 64)
!6380 = !DILocation(line: 220, column: 9, scope: !6379)
!6381 = !DILocation(line: 221, column: 53, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6379, file: !647, line: 221, column: 13)
!6383 = !DILocation(line: 221, column: 78, scope: !6382)
!6384 = !DILocation(line: 221, column: 85, scope: !6382)
!6385 = !DILocation(line: 221, column: 13, scope: !6379)
!6386 = !DILocation(line: 222, column: 17, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !647, line: 222, column: 17)
!6388 = distinct !DILexicalBlock(scope: !6382, file: !647, line: 221, column: 91)
!6389 = !DILocation(line: 222, column: 17, scope: !6388)
!6390 = !DILocation(line: 223, column: 48, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6387, file: !647, line: 222, column: 58)
!6392 = !DILocation(line: 223, column: 17, scope: !6391)
!6393 = !DILocation(line: 224, column: 49, scope: !6391)
!6394 = !DILocation(line: 225, column: 13, scope: !6391)
!6395 = !DILocation(line: 227, column: 41, scope: !6379)
!6396 = !DILocation(line: 227, column: 9, scope: !6379)
!6397 = !DILocation(line: 228, column: 5, scope: !6379)
!6398 = !DILocation(line: 229, column: 54, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6375, file: !647, line: 228, column: 12)
!6400 = !DILocation(line: 231, column: 1, scope: !6366)
!6401 = distinct !DISubprogram(name: "hal_uart_init", scope: !647, file: !647, line: 234, type: !6402, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6406)
!6402 = !DISubroutineType(types: !6403)
!6403 = !{!6404, !755, !6405}
!6404 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !650, line: 351, baseType: !649)
!6405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!6406 = !{!6407, !6408}
!6407 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6401, file: !647, line: 234, type: !755)
!6408 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6401, file: !647, line: 234, type: !6405)
!6409 = !DILocation(line: 0, scope: !6401)
!6410 = !DILocation(line: 236, column: 10, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6401, file: !647, line: 236, column: 9)
!6412 = !DILocation(line: 236, column: 9, scope: !6401)
!6413 = !DILocation(line: 239, column: 41, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6401, file: !647, line: 239, column: 9)
!6415 = !DILocation(line: 239, column: 9, scope: !6401)
!6416 = !DILocation(line: 242, column: 5, scope: !6401)
!6417 = !DILocation(line: 243, column: 45, scope: !6401)
!6418 = !DILocation(line: 243, column: 12, scope: !6401)
!6419 = !DILocation(line: 244, column: 12, scope: !6401)
!6420 = !DILocation(line: 243, column: 5, scope: !6401)
!6421 = !DILocation(line: 245, column: 58, scope: !6401)
!6422 = !DILocation(line: 246, column: 30, scope: !6401)
!6423 = !{i32 0, i32 2}
!6424 = !DILocation(line: 246, column: 5, scope: !6401)
!6425 = !DILocation(line: 247, column: 5, scope: !6401)
!6426 = !DILocation(line: 249, column: 31, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6401, file: !647, line: 249, column: 9)
!6428 = !DILocation(line: 249, column: 28, scope: !6427)
!6429 = !DILocation(line: 249, column: 9, scope: !6401)
!6430 = !DILocation(line: 254, column: 5, scope: !6401)
!6431 = !DILocation(line: 255, column: 5, scope: !6401)
!6432 = !DILocation(line: 255, column: 53, scope: !6401)
!6433 = !DILocation(line: 256, column: 5, scope: !6401)
!6434 = !DILocation(line: 256, column: 40, scope: !6401)
!6435 = !DILocation(line: 257, column: 82, scope: !6401)
!6436 = !DILocation(line: 257, column: 39, scope: !6401)
!6437 = !DILocation(line: 257, column: 5, scope: !6401)
!6438 = !DILocation(line: 257, column: 37, scope: !6401)
!6439 = !DILocation(line: 260, column: 5, scope: !6401)
!6440 = !DILocation(line: 261, column: 1, scope: !6401)
!6441 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !647, file: !647, line: 93, type: !6442, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6446)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!69, !755, !6444}
!6444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6445, size: 32)
!6445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!6446 = !{!6447, !6448}
!6447 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6441, file: !647, line: 93, type: !755)
!6448 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6441, file: !647, line: 93, type: !6444)
!6449 = !DILocation(line: 0, scope: !6441)
!6450 = !DILocation(line: 95, column: 10, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6441, file: !647, line: 95, column: 9)
!6452 = !DILocation(line: 95, column: 9, scope: !6441)
!6453 = !DILocation(line: 101, column: 23, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6441, file: !647, line: 101, column: 9)
!6455 = !DILocation(line: 101, column: 32, scope: !6454)
!6456 = !DILocation(line: 101, column: 60, scope: !6454)
!6457 = !DILocation(line: 102, column: 27, scope: !6454)
!6458 = !DILocation(line: 102, column: 34, scope: !6454)
!6459 = !DILocation(line: 102, column: 58, scope: !6454)
!6460 = !DILocation(line: 103, column: 27, scope: !6454)
!6461 = !DILocation(line: 103, column: 36, scope: !6454)
!6462 = !DILocation(line: 103, column: 59, scope: !6454)
!6463 = !DILocation(line: 104, column: 27, scope: !6454)
!6464 = !DILocation(line: 104, column: 39, scope: !6454)
!6465 = !DILocation(line: 101, column: 9, scope: !6441)
!6466 = !DILocation(line: 109, column: 1, scope: !6441)
!6467 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !647, file: !647, line: 139, type: !6468, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6470)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{!4854, !755}
!6470 = !{!6471}
!6471 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6467, file: !647, line: 139, type: !755)
!6472 = !DILocation(line: 0, scope: !6467)
!6473 = !DILocation(line: 141, column: 24, scope: !6467)
!6474 = !DILocation(line: 141, column: 12, scope: !6467)
!6475 = !DILocation(line: 141, column: 5, scope: !6467)
!6476 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !647, file: !647, line: 593, type: !6477, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6479)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!6404, !755, !6444}
!6479 = !{!6480, !6481}
!6480 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6476, file: !647, line: 593, type: !755)
!6481 = !DILocalVariable(name: "config", arg: 2, scope: !6476, file: !647, line: 593, type: !6444)
!6482 = !DILocation(line: 0, scope: !6476)
!6483 = !DILocation(line: 595, column: 10, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6476, file: !647, line: 595, column: 9)
!6485 = !DILocation(line: 595, column: 9, scope: !6476)
!6486 = !DILocation(line: 598, column: 45, scope: !6476)
!6487 = !DILocation(line: 598, column: 12, scope: !6476)
!6488 = !DILocation(line: 598, column: 59, scope: !6476)
!6489 = !DILocation(line: 598, column: 5, scope: !6476)
!6490 = !DILocation(line: 599, column: 23, scope: !6476)
!6491 = !DILocation(line: 600, column: 59, scope: !6476)
!6492 = !DILocation(line: 600, column: 23, scope: !6476)
!6493 = !DILocation(line: 601, column: 62, scope: !6476)
!6494 = !DILocation(line: 601, column: 23, scope: !6476)
!6495 = !DILocation(line: 602, column: 57, scope: !6476)
!6496 = !DILocation(line: 602, column: 23, scope: !6476)
!6497 = !DILocation(line: 603, column: 58, scope: !6476)
!6498 = !DILocation(line: 603, column: 23, scope: !6476)
!6499 = !DILocation(line: 599, column: 5, scope: !6476)
!6500 = !DILocation(line: 604, column: 5, scope: !6476)
!6501 = !DILocation(line: 605, column: 1, scope: !6476)
!6502 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !647, file: !647, line: 145, type: !6503, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!61, !712}
!6505 = !{!6506, !6507}
!6506 = !DILocalVariable(name: "bandrate", arg: 1, scope: !6502, file: !647, line: 145, type: !712)
!6507 = !DILocalVariable(name: "baudrate_tbl", scope: !6502, file: !647, line: 147, type: !6508)
!6508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 416, elements: !276)
!6509 = !DILocation(line: 0, scope: !6502)
!6510 = !DILocation(line: 147, column: 14, scope: !6502)
!6511 = !DILocation(line: 151, column: 12, scope: !6502)
!6512 = !DILocation(line: 151, column: 5, scope: !6502)
!6513 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !647, file: !647, line: 155, type: !6514, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!864, !714}
!6516 = !{!6517, !6518}
!6517 = !DILocalVariable(name: "word_length", arg: 1, scope: !6513, file: !647, line: 155, type: !714)
!6518 = !DILocalVariable(name: "databit_tbl", scope: !6513, file: !647, line: 157, type: !6519)
!6519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 64, elements: !220)
!6520 = !DILocation(line: 0, scope: !6513)
!6521 = !DILocation(line: 157, column: 14, scope: !6513)
!6522 = !DILocation(line: 160, column: 12, scope: !6513)
!6523 = !DILocation(line: 160, column: 5, scope: !6513)
!6524 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !647, file: !647, line: 164, type: !6525, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6527)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{!864, !718}
!6527 = !{!6528, !6529}
!6528 = !DILocalVariable(name: "parity", arg: 1, scope: !6524, file: !647, line: 164, type: !718)
!6529 = !DILocalVariable(name: "parity_tbl", scope: !6524, file: !647, line: 166, type: !6530)
!6530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 80, elements: !588)
!6531 = !DILocation(line: 0, scope: !6524)
!6532 = !DILocation(line: 166, column: 14, scope: !6524)
!6533 = !DILocation(line: 169, column: 12, scope: !6524)
!6534 = !DILocation(line: 169, column: 5, scope: !6524)
!6535 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !647, file: !647, line: 173, type: !6536, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6538)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{!864, !716}
!6538 = !{!6539, !6540}
!6539 = !DILocalVariable(name: "stopbit", arg: 1, scope: !6535, file: !647, line: 173, type: !716)
!6540 = !DILocalVariable(name: "stopbit_tbl", scope: !6535, file: !647, line: 175, type: !6541)
!6541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 48, elements: !1862)
!6542 = !DILocation(line: 0, scope: !6535)
!6543 = !DILocation(line: 175, column: 14, scope: !6535)
!6544 = !DILocation(line: 178, column: 12, scope: !6535)
!6545 = !DILocation(line: 178, column: 5, scope: !6535)
!6546 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !647, file: !647, line: 87, type: !6547, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6549)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{!69, !755}
!6549 = !{!6550}
!6550 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6546, file: !647, line: 87, type: !755)
!6551 = !DILocation(line: 0, scope: !6546)
!6552 = !DILocation(line: 89, column: 23, scope: !6546)
!6553 = !DILocation(line: 89, column: 5, scope: !6546)
!6554 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !647, file: !647, line: 264, type: !6555, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6557)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!6404, !755}
!6557 = !{!6558}
!6558 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6554, file: !647, line: 264, type: !755)
!6559 = !DILocation(line: 0, scope: !6554)
!6560 = !DILocation(line: 266, column: 10, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !647, line: 266, column: 9)
!6562 = !DILocation(line: 266, column: 9, scope: !6554)
!6563 = !DILocation(line: 269, column: 41, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6554, file: !647, line: 269, column: 9)
!6565 = !DILocation(line: 269, column: 62, scope: !6564)
!6566 = !DILocation(line: 269, column: 9, scope: !6554)
!6567 = !DILocation(line: 272, column: 5, scope: !6554)
!6568 = !DILocation(line: 275, column: 22, scope: !6554)
!6569 = !DILocation(line: 275, column: 5, scope: !6554)
!6570 = !DILocation(line: 278, column: 26, scope: !6554)
!6571 = !DILocation(line: 278, column: 5, scope: !6554)
!6572 = !DILocation(line: 279, column: 5, scope: !6554)
!6573 = !DILocation(line: 279, column: 53, scope: !6554)
!6574 = !DILocation(line: 280, column: 5, scope: !6554)
!6575 = !DILocation(line: 280, column: 40, scope: !6554)
!6576 = !DILocation(line: 281, column: 5, scope: !6554)
!6577 = !DILocation(line: 282, column: 44, scope: !6554)
!6578 = !DILocation(line: 282, column: 5, scope: !6554)
!6579 = !DILocation(line: 284, column: 5, scope: !6554)
!6580 = !DILocation(line: 286, column: 5, scope: !6554)
!6581 = !DILocation(line: 287, column: 1, scope: !6554)
!6582 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !647, file: !647, line: 290, type: !6583, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6585)
!6583 = !DISubroutineType(types: !6584)
!6584 = !{null, !755, !202}
!6585 = !{!6586, !6587, !6588}
!6586 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6582, file: !647, line: 290, type: !755)
!6587 = !DILocalVariable(name: "byte", arg: 2, scope: !6582, file: !647, line: 290, type: !202)
!6588 = !DILocalVariable(name: "int_no", scope: !6582, file: !647, line: 292, type: !4854)
!6589 = !DILocation(line: 0, scope: !6582)
!6590 = !DILocation(line: 292, column: 26, scope: !6582)
!6591 = !DILocation(line: 294, column: 16, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6582, file: !647, line: 294, column: 9)
!6593 = !DILocation(line: 294, column: 9, scope: !6582)
!6594 = !DILocation(line: 295, column: 9, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6592, file: !647, line: 294, column: 34)
!6596 = !DILocation(line: 296, column: 5, scope: !6595)
!6597 = !DILocation(line: 299, column: 1, scope: !6582)
!6598 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !647, file: !647, line: 302, type: !6599, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6601)
!6599 = !DISubroutineType(types: !6600)
!6600 = !{!61, !755, !2415, !61}
!6601 = !{!6602, !6603, !6604, !6605, !6606}
!6602 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6598, file: !647, line: 302, type: !755)
!6603 = !DILocalVariable(name: "data", arg: 2, scope: !6598, file: !647, line: 302, type: !2415)
!6604 = !DILocalVariable(name: "size", arg: 3, scope: !6598, file: !647, line: 302, type: !61)
!6605 = !DILocalVariable(name: "int_no", scope: !6598, file: !647, line: 304, type: !4854)
!6606 = !DILocalVariable(name: "index", scope: !6598, file: !647, line: 305, type: !61)
!6607 = !DILocation(line: 0, scope: !6598)
!6608 = !DILocation(line: 304, column: 26, scope: !6598)
!6609 = !DILocation(line: 307, column: 14, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6598, file: !647, line: 307, column: 9)
!6611 = !DILocation(line: 307, column: 9, scope: !6598)
!6612 = !DILocation(line: 313, column: 53, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !647, line: 312, column: 48)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !647, line: 312, column: 9)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !647, line: 312, column: 9)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !647, line: 311, column: 33)
!6617 = distinct !DILexicalBlock(scope: !6598, file: !647, line: 311, column: 9)
!6618 = !DILocation(line: 313, column: 13, scope: !6613)
!6619 = !DILocation(line: 312, column: 44, scope: !6614)
!6620 = !DILocation(line: 312, column: 31, scope: !6614)
!6621 = !DILocation(line: 312, column: 9, scope: !6615)
!6622 = distinct !{!6622, !6621, !6623}
!6623 = !DILocation(line: 314, column: 9, scope: !6615)
!6624 = !DILocation(line: 318, column: 1, scope: !6598)
!6625 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !647, file: !647, line: 320, type: !6599, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6626)
!6626 = !{!6627, !6628, !6629, !6630, !6631, !6632, !6634}
!6627 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6625, file: !647, line: 320, type: !755)
!6628 = !DILocalVariable(name: "data", arg: 2, scope: !6625, file: !647, line: 320, type: !2415)
!6629 = !DILocalVariable(name: "size", arg: 3, scope: !6625, file: !647, line: 320, type: !61)
!6630 = !DILocalVariable(name: "actual_space", scope: !6625, file: !647, line: 322, type: !61)
!6631 = !DILocalVariable(name: "send_size", scope: !6625, file: !647, line: 322, type: !61)
!6632 = !DILocalVariable(name: "ch", scope: !6625, file: !647, line: 323, type: !6633)
!6633 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !302, line: 144, baseType: !301)
!6634 = !DILocalVariable(name: "irq_status", scope: !6625, file: !647, line: 325, type: !61)
!6635 = !DILocation(line: 0, scope: !6625)
!6636 = !DILocation(line: 322, column: 5, scope: !6625)
!6637 = !DILocation(line: 325, column: 5, scope: !6625)
!6638 = !DILocation(line: 328, column: 10, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6625, file: !647, line: 328, column: 9)
!6640 = !DILocation(line: 328, column: 9, scope: !6625)
!6641 = !DILocation(line: 332, column: 15, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6625, file: !647, line: 332, column: 9)
!6643 = !DILocation(line: 332, column: 24, scope: !6642)
!6644 = !DILocation(line: 335, column: 42, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6625, file: !647, line: 335, column: 9)
!6646 = !DILocation(line: 335, column: 9, scope: !6625)
!6647 = !DILocation(line: 341, column: 5, scope: !6625)
!6648 = !DILocation(line: 342, column: 9, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6625, file: !647, line: 342, column: 9)
!6650 = !DILocation(line: 342, column: 44, scope: !6649)
!6651 = !DILocation(line: 342, column: 9, scope: !6625)
!6652 = !DILocation(line: 343, column: 38, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6649, file: !647, line: 342, column: 54)
!6654 = !DILocation(line: 343, column: 9, scope: !6653)
!6655 = !DILocation(line: 344, column: 44, scope: !6653)
!6656 = !DILocation(line: 345, column: 5, scope: !6653)
!6657 = !DILocation(line: 346, column: 37, scope: !6625)
!6658 = !DILocation(line: 346, column: 5, scope: !6625)
!6659 = !DILocation(line: 349, column: 30, scope: !6625)
!6660 = !DILocation(line: 349, column: 5, scope: !6625)
!6661 = !DILocation(line: 350, column: 9, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6625, file: !647, line: 350, column: 9)
!6663 = !DILocation(line: 350, column: 22, scope: !6662)
!6664 = !DILocation(line: 355, column: 5, scope: !6625)
!6665 = !DILocation(line: 357, column: 22, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6625, file: !647, line: 357, column: 9)
!6667 = !DILocation(line: 357, column: 19, scope: !6666)
!6668 = !DILocation(line: 357, column: 9, scope: !6625)
!6669 = !DILocation(line: 358, column: 14, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6666, file: !647, line: 357, column: 36)
!6671 = !{i32 14, i32 18}
!6672 = !DILocation(line: 359, column: 9, scope: !6670)
!6673 = !DILocation(line: 360, column: 5, scope: !6670)
!6674 = !DILocation(line: 362, column: 1, scope: !6625)
!6675 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !647, file: !647, line: 191, type: !6676, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6678)
!6676 = !DISubroutineType(types: !6677)
!6677 = !{!6633, !4854, !69}
!6678 = !{!6679, !6680, !6681}
!6679 = !DILocalVariable(name: "port", arg: 1, scope: !6675, file: !647, line: 191, type: !4854)
!6680 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6675, file: !647, line: 191, type: !69)
!6681 = !DILocalVariable(name: "ch", scope: !6675, file: !647, line: 193, type: !6633)
!6682 = !DILocation(line: 0, scope: !6675)
!6683 = !DILocation(line: 195, column: 14, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6675, file: !647, line: 195, column: 9)
!6685 = !DILocation(line: 195, column: 9, scope: !6675)
!6686 = !DILocation(line: 209, column: 5, scope: !6675)
!6687 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !647, file: !647, line: 365, type: !6688, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6690)
!6688 = !DISubroutineType(types: !6689)
!6689 = !{!202, !755}
!6690 = !{!6691, !6692}
!6691 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6687, file: !647, line: 365, type: !755)
!6692 = !DILocalVariable(name: "int_no", scope: !6687, file: !647, line: 367, type: !4854)
!6693 = !DILocation(line: 0, scope: !6687)
!6694 = !DILocation(line: 367, column: 26, scope: !6687)
!6695 = !DILocation(line: 369, column: 16, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6687, file: !647, line: 369, column: 9)
!6697 = !DILocation(line: 369, column: 9, scope: !6687)
!6698 = !DILocation(line: 370, column: 22, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6696, file: !647, line: 369, column: 33)
!6700 = !DILocation(line: 370, column: 9, scope: !6699)
!6701 = !DILocation(line: 0, scope: !6696)
!6702 = !DILocation(line: 375, column: 1, scope: !6687)
!6703 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !647, file: !647, line: 377, type: !6704, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6706)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{!61, !755}
!6706 = !{!6707, !6708}
!6707 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6703, file: !647, line: 377, type: !755)
!6708 = !DILocalVariable(name: "int_no", scope: !6703, file: !647, line: 379, type: !4854)
!6709 = !DILocation(line: 0, scope: !6703)
!6710 = !DILocation(line: 379, column: 26, scope: !6703)
!6711 = !DILocation(line: 381, column: 16, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6703, file: !647, line: 381, column: 9)
!6713 = !DILocation(line: 381, column: 9, scope: !6703)
!6714 = !DILocation(line: 382, column: 16, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6712, file: !647, line: 381, column: 33)
!6716 = !DILocation(line: 382, column: 9, scope: !6715)
!6717 = !DILocation(line: 0, scope: !6712)
!6718 = !DILocation(line: 387, column: 1, scope: !6703)
!6719 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !647, file: !647, line: 390, type: !6720, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6722)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{!61, !755, !210, !61}
!6722 = !{!6723, !6724, !6725, !6726, !6727}
!6723 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6719, file: !647, line: 390, type: !755)
!6724 = !DILocalVariable(name: "buffer", arg: 2, scope: !6719, file: !647, line: 390, type: !210)
!6725 = !DILocalVariable(name: "size", arg: 3, scope: !6719, file: !647, line: 390, type: !61)
!6726 = !DILocalVariable(name: "int_no", scope: !6719, file: !647, line: 392, type: !4854)
!6727 = !DILocalVariable(name: "index", scope: !6719, file: !647, line: 393, type: !61)
!6728 = !DILocation(line: 0, scope: !6719)
!6729 = !DILocation(line: 392, column: 26, scope: !6719)
!6730 = !DILocation(line: 395, column: 16, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6719, file: !647, line: 395, column: 9)
!6732 = !DILocation(line: 395, column: 9, scope: !6719)
!6733 = !DILocation(line: 401, column: 38, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !647, line: 400, column: 48)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !647, line: 400, column: 9)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !647, line: 400, column: 9)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !647, line: 399, column: 33)
!6738 = distinct !DILexicalBlock(scope: !6719, file: !647, line: 399, column: 9)
!6739 = !DILocation(line: 401, column: 13, scope: !6734)
!6740 = !DILocation(line: 401, column: 27, scope: !6734)
!6741 = !DILocation(line: 400, column: 44, scope: !6735)
!6742 = !DILocation(line: 400, column: 31, scope: !6735)
!6743 = !DILocation(line: 400, column: 9, scope: !6736)
!6744 = distinct !{!6744, !6743, !6745}
!6745 = !DILocation(line: 402, column: 9, scope: !6736)
!6746 = !DILocation(line: 406, column: 1, scope: !6719)
!6747 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !647, file: !647, line: 408, type: !6720, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6748)
!6748 = !{!6749, !6750, !6751, !6752, !6753, !6754}
!6749 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6747, file: !647, line: 408, type: !755)
!6750 = !DILocalVariable(name: "buffer", arg: 2, scope: !6747, file: !647, line: 408, type: !210)
!6751 = !DILocalVariable(name: "size", arg: 3, scope: !6747, file: !647, line: 408, type: !61)
!6752 = !DILocalVariable(name: "actual_size", scope: !6747, file: !647, line: 410, type: !61)
!6753 = !DILocalVariable(name: "receive_size", scope: !6747, file: !647, line: 410, type: !61)
!6754 = !DILocalVariable(name: "ch", scope: !6747, file: !647, line: 411, type: !6633)
!6755 = !DILocation(line: 0, scope: !6747)
!6756 = !DILocation(line: 410, column: 5, scope: !6747)
!6757 = !DILocation(line: 413, column: 10, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6747, file: !647, line: 413, column: 9)
!6759 = !DILocation(line: 413, column: 9, scope: !6747)
!6760 = !DILocation(line: 417, column: 17, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6747, file: !647, line: 417, column: 9)
!6762 = !DILocation(line: 417, column: 26, scope: !6761)
!6763 = !DILocation(line: 421, column: 30, scope: !6747)
!6764 = !DILocation(line: 421, column: 5, scope: !6747)
!6765 = !DILocation(line: 422, column: 9, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6747, file: !647, line: 422, column: 9)
!6767 = !DILocation(line: 422, column: 21, scope: !6766)
!6768 = !DILocation(line: 427, column: 5, scope: !6747)
!6769 = !DILocation(line: 429, column: 25, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6747, file: !647, line: 429, column: 9)
!6771 = !DILocation(line: 429, column: 22, scope: !6770)
!6772 = !DILocation(line: 429, column: 9, scope: !6747)
!6773 = !DILocation(line: 430, column: 14, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6770, file: !647, line: 429, column: 38)
!6775 = !DILocation(line: 431, column: 9, scope: !6774)
!6776 = !DILocation(line: 432, column: 5, scope: !6774)
!6777 = !DILocation(line: 435, column: 1, scope: !6747)
!6778 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !647, file: !647, line: 438, type: !6704, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6779)
!6779 = !{!6780, !6781}
!6780 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6778, file: !647, line: 438, type: !755)
!6781 = !DILocalVariable(name: "length", scope: !6778, file: !647, line: 440, type: !61)
!6782 = !DILocation(line: 0, scope: !6778)
!6783 = !DILocation(line: 440, column: 5, scope: !6778)
!6784 = !DILocation(line: 440, column: 14, scope: !6778)
!6785 = !DILocation(line: 442, column: 10, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6778, file: !647, line: 442, column: 9)
!6787 = !DILocation(line: 442, column: 9, scope: !6778)
!6788 = !DILocation(line: 446, column: 30, scope: !6778)
!6789 = !DILocation(line: 446, column: 5, scope: !6778)
!6790 = !DILocation(line: 447, column: 12, scope: !6778)
!6791 = !DILocation(line: 447, column: 5, scope: !6778)
!6792 = !DILocation(line: 448, column: 1, scope: !6778)
!6793 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !647, file: !647, line: 451, type: !6704, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6794)
!6794 = !{!6795, !6796}
!6795 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6793, file: !647, line: 451, type: !755)
!6796 = !DILocalVariable(name: "length", scope: !6793, file: !647, line: 453, type: !61)
!6797 = !DILocation(line: 0, scope: !6793)
!6798 = !DILocation(line: 453, column: 5, scope: !6793)
!6799 = !DILocation(line: 453, column: 14, scope: !6793)
!6800 = !DILocation(line: 455, column: 10, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6793, file: !647, line: 455, column: 9)
!6802 = !DILocation(line: 455, column: 9, scope: !6793)
!6803 = !DILocation(line: 459, column: 30, scope: !6793)
!6804 = !DILocation(line: 459, column: 5, scope: !6793)
!6805 = !DILocation(line: 461, column: 12, scope: !6793)
!6806 = !DILocation(line: 461, column: 5, scope: !6793)
!6807 = !DILocation(line: 462, column: 1, scope: !6793)
!6808 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !647, file: !647, line: 543, type: !6809, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6811)
!6809 = !DISubroutineType(types: !6810)
!6810 = !{!6404, !755, !725, !51}
!6811 = !{!6812, !6813, !6814, !6815}
!6812 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6808, file: !647, line: 543, type: !755)
!6813 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6808, file: !647, line: 544, type: !725)
!6814 = !DILocalVariable(name: "user_data", arg: 3, scope: !6808, file: !647, line: 545, type: !51)
!6815 = !DILocalVariable(name: "ch", scope: !6808, file: !647, line: 547, type: !6633)
!6816 = !DILocation(line: 0, scope: !6808)
!6817 = !DILocation(line: 549, column: 10, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6808, file: !647, line: 549, column: 9)
!6819 = !DILocation(line: 549, column: 9, scope: !6808)
!6820 = !DILocation(line: 556, column: 53, scope: !6808)
!6821 = !DILocation(line: 556, column: 62, scope: !6808)
!6822 = !DILocation(line: 557, column: 53, scope: !6808)
!6823 = !DILocation(line: 557, column: 63, scope: !6808)
!6824 = !DILocation(line: 558, column: 37, scope: !6808)
!6825 = !DILocation(line: 558, column: 54, scope: !6808)
!6826 = !DILocation(line: 560, column: 39, scope: !6808)
!6827 = !DILocation(line: 561, column: 39, scope: !6808)
!6828 = !DILocation(line: 560, column: 5, scope: !6808)
!6829 = !DILocation(line: 562, column: 5, scope: !6808)
!6830 = !DILocation(line: 564, column: 44, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6808, file: !647, line: 564, column: 9)
!6832 = !DILocation(line: 564, column: 9, scope: !6808)
!6833 = !DILocation(line: 565, column: 9, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6831, file: !647, line: 564, column: 59)
!6835 = !DILocation(line: 566, column: 5, scope: !6834)
!6836 = !DILocation(line: 567, column: 9, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6831, file: !647, line: 566, column: 12)
!6838 = !DILocation(line: 569, column: 10, scope: !6808)
!6839 = !DILocation(line: 570, column: 5, scope: !6808)
!6840 = !DILocation(line: 572, column: 5, scope: !6808)
!6841 = !DILocation(line: 572, column: 53, scope: !6808)
!6842 = !DILocation(line: 573, column: 35, scope: !6808)
!6843 = !DILocation(line: 573, column: 5, scope: !6808)
!6844 = !DILocation(line: 574, column: 5, scope: !6808)
!6845 = !DILocation(line: 575, column: 25, scope: !6808)
!6846 = !DILocation(line: 575, column: 5, scope: !6808)
!6847 = !DILocation(line: 578, column: 5, scope: !6808)
!6848 = !DILocation(line: 579, column: 1, scope: !6808)
!6849 = !DILocation(line: 0, scope: !751)
!6850 = !DILocation(line: 539, column: 12, scope: !751)
!6851 = !DILocation(line: 539, column: 5, scope: !751)
!6852 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !647, file: !647, line: 511, type: !154, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6853)
!6853 = !{!6854}
!6854 = !DILocalVariable(name: "callback_context", scope: !6855, file: !647, line: 514, type: !6857)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !647, line: 513, column: 60)
!6856 = distinct !DILexicalBlock(scope: !6852, file: !647, line: 513, column: 9)
!6857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!6858 = !DILocation(line: 513, column: 42, scope: !6856)
!6859 = !DILocation(line: 513, column: 9, scope: !6852)
!6860 = !DILocation(line: 515, column: 39, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6855, file: !647, line: 515, column: 13)
!6862 = !DILocation(line: 515, column: 18, scope: !6861)
!6863 = !DILocation(line: 515, column: 13, scope: !6855)
!6864 = !DILocation(line: 516, column: 89, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6861, file: !647, line: 515, column: 49)
!6866 = !DILocation(line: 516, column: 13, scope: !6865)
!6867 = !DILocation(line: 517, column: 9, scope: !6865)
!6868 = !DILocation(line: 519, column: 32, scope: !6852)
!6869 = !DILocation(line: 519, column: 5, scope: !6852)
!6870 = !DILocation(line: 520, column: 1, scope: !6852)
!6871 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !647, file: !647, line: 523, type: !154, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6872)
!6872 = !{!6873}
!6873 = !DILocalVariable(name: "callback_context", scope: !6874, file: !647, line: 526, type: !6857)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !647, line: 525, column: 60)
!6875 = distinct !DILexicalBlock(scope: !6871, file: !647, line: 525, column: 9)
!6876 = !DILocation(line: 525, column: 42, scope: !6875)
!6877 = !DILocation(line: 525, column: 9, scope: !6871)
!6878 = !DILocation(line: 527, column: 39, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6874, file: !647, line: 527, column: 13)
!6880 = !DILocation(line: 527, column: 18, scope: !6879)
!6881 = !DILocation(line: 527, column: 13, scope: !6874)
!6882 = !DILocation(line: 528, column: 89, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6879, file: !647, line: 527, column: 49)
!6884 = !DILocation(line: 528, column: 13, scope: !6883)
!6885 = !DILocation(line: 529, column: 9, scope: !6883)
!6886 = !DILocation(line: 531, column: 32, scope: !6871)
!6887 = !DILocation(line: 531, column: 5, scope: !6871)
!6888 = !DILocation(line: 532, column: 1, scope: !6871)
!6889 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !647, file: !647, line: 464, type: !6890, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6892)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{null, !4854, !69}
!6892 = !{!6893, !6894, !6895, !6896, !6897, !6899}
!6893 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6889, file: !647, line: 464, type: !4854)
!6894 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6889, file: !647, line: 464, type: !69)
!6895 = !DILocalVariable(name: "avail_size", scope: !6889, file: !647, line: 466, type: !61)
!6896 = !DILocalVariable(name: "avail_space", scope: !6889, file: !647, line: 466, type: !61)
!6897 = !DILocalVariable(name: "dma_config", scope: !6889, file: !647, line: 467, type: !6898)
!6898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!6899 = !DILocalVariable(name: "ch", scope: !6889, file: !647, line: 468, type: !6633)
!6900 = !DILocation(line: 0, scope: !6889)
!6901 = !DILocation(line: 466, column: 5, scope: !6889)
!6902 = !DILocation(line: 471, column: 9, scope: !6889)
!6903 = !DILocation(line: 472, column: 9, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !647, line: 471, column: 16)
!6905 = distinct !DILexicalBlock(scope: !6889, file: !647, line: 471, column: 9)
!6906 = !DILocation(line: 473, column: 13, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6904, file: !647, line: 473, column: 13)
!6908 = !DILocation(line: 473, column: 39, scope: !6907)
!6909 = !DILocation(line: 473, column: 24, scope: !6907)
!6910 = !DILocation(line: 473, column: 13, scope: !6904)
!6911 = !DILocation(line: 478, column: 9, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6905, file: !647, line: 477, column: 12)
!6913 = !DILocation(line: 479, column: 13, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6912, file: !647, line: 479, column: 13)
!6915 = !DILocation(line: 479, column: 40, scope: !6914)
!6916 = !DILocation(line: 479, column: 77, scope: !6914)
!6917 = !DILocation(line: 479, column: 63, scope: !6914)
!6918 = !DILocation(line: 479, column: 25, scope: !6914)
!6919 = !DILocation(line: 479, column: 13, scope: !6912)
!6920 = !DILocation(line: 0, scope: !6905)
!6921 = !DILocation(line: 484, column: 1, scope: !6889)
!6922 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !647, file: !647, line: 486, type: !154, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6923)
!6923 = !{!6924}
!6924 = !DILocalVariable(name: "callback_context", scope: !6925, file: !647, line: 490, type: !6857)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !647, line: 489, column: 70)
!6926 = distinct !DILexicalBlock(scope: !6922, file: !647, line: 488, column: 9)
!6927 = !DILocation(line: 488, column: 43, scope: !6926)
!6928 = !DILocation(line: 488, column: 61, scope: !6926)
!6929 = !DILocation(line: 489, column: 14, scope: !6926)
!6930 = !DILocation(line: 489, column: 63, scope: !6926)
!6931 = !DILocation(line: 488, column: 9, scope: !6922)
!6932 = !DILocation(line: 491, column: 39, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6925, file: !647, line: 491, column: 13)
!6934 = !DILocation(line: 491, column: 18, scope: !6933)
!6935 = !DILocation(line: 491, column: 13, scope: !6925)
!6936 = !DILocation(line: 492, column: 88, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6933, file: !647, line: 491, column: 49)
!6938 = !DILocation(line: 492, column: 13, scope: !6937)
!6939 = !DILocation(line: 493, column: 9, scope: !6937)
!6940 = !DILocation(line: 495, column: 32, scope: !6922)
!6941 = !DILocation(line: 495, column: 5, scope: !6922)
!6942 = !DILocation(line: 496, column: 1, scope: !6922)
!6943 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !647, file: !647, line: 499, type: !154, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6944)
!6944 = !{!6945}
!6945 = !DILocalVariable(name: "callback_context", scope: !6946, file: !647, line: 503, type: !6857)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !647, line: 502, column: 70)
!6947 = distinct !DILexicalBlock(scope: !6943, file: !647, line: 501, column: 9)
!6948 = !DILocation(line: 501, column: 43, scope: !6947)
!6949 = !DILocation(line: 501, column: 61, scope: !6947)
!6950 = !DILocation(line: 502, column: 14, scope: !6947)
!6951 = !DILocation(line: 502, column: 63, scope: !6947)
!6952 = !DILocation(line: 501, column: 9, scope: !6943)
!6953 = !DILocation(line: 504, column: 39, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6946, file: !647, line: 504, column: 13)
!6955 = !DILocation(line: 504, column: 18, scope: !6954)
!6956 = !DILocation(line: 504, column: 13, scope: !6946)
!6957 = !DILocation(line: 505, column: 88, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6954, file: !647, line: 504, column: 49)
!6959 = !DILocation(line: 505, column: 13, scope: !6958)
!6960 = !DILocation(line: 506, column: 9, scope: !6958)
!6961 = !DILocation(line: 508, column: 32, scope: !6943)
!6962 = !DILocation(line: 508, column: 5, scope: !6943)
!6963 = !DILocation(line: 509, column: 1, scope: !6943)
!6964 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !647, file: !647, line: 582, type: !6965, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6967)
!6965 = !DISubroutineType(types: !6966)
!6966 = !{!6404, !755, !712}
!6967 = !{!6968, !6969}
!6968 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6964, file: !647, line: 582, type: !755)
!6969 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6964, file: !647, line: 582, type: !712)
!6970 = !DILocation(line: 0, scope: !6964)
!6971 = !DILocation(line: 584, column: 11, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6964, file: !647, line: 584, column: 9)
!6973 = !DILocation(line: 584, column: 46, scope: !6972)
!6974 = !DILocation(line: 588, column: 37, scope: !6964)
!6975 = !DILocation(line: 588, column: 50, scope: !6964)
!6976 = !DILocation(line: 588, column: 59, scope: !6964)
!6977 = !DILocation(line: 589, column: 12, scope: !6964)
!6978 = !DILocation(line: 589, column: 5, scope: !6964)
!6979 = !DILocation(line: 590, column: 1, scope: !6964)
!6980 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !647, file: !647, line: 608, type: !6981, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6985)
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!6404, !755, !6983}
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!6985 = !{!6986, !6987}
!6986 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6980, file: !647, line: 608, type: !755)
!6987 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !6980, file: !647, line: 608, type: !6983)
!6988 = !DILocation(line: 0, scope: !6980)
!6989 = !DILocation(line: 610, column: 10, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6980, file: !647, line: 610, column: 9)
!6991 = !DILocation(line: 610, column: 9, scope: !6980)
!6992 = !DILocation(line: 614, column: 10, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6980, file: !647, line: 614, column: 9)
!6994 = !DILocation(line: 614, column: 9, scope: !6980)
!6995 = !DILocation(line: 618, column: 37, scope: !6980)
!6996 = !DILocation(line: 618, column: 56, scope: !6980)
!6997 = !DILocation(line: 619, column: 45, scope: !6980)
!6998 = !DILocation(line: 619, column: 12, scope: !6980)
!6999 = !DILocation(line: 620, column: 12, scope: !6980)
!7000 = !DILocation(line: 619, column: 5, scope: !6980)
!7001 = !DILocation(line: 621, column: 5, scope: !6980)
!7002 = !DILocation(line: 622, column: 5, scope: !6980)
!7003 = !DILocation(line: 623, column: 33, scope: !6980)
!7004 = !DILocation(line: 624, column: 50, scope: !6980)
!7005 = !DILocation(line: 625, column: 50, scope: !6980)
!7006 = !DILocation(line: 626, column: 50, scope: !6980)
!7007 = !DILocation(line: 627, column: 50, scope: !6980)
!7008 = !DILocation(line: 628, column: 33, scope: !6980)
!7009 = !DILocation(line: 623, column: 5, scope: !6980)
!7010 = !DILocation(line: 630, column: 50, scope: !6980)
!7011 = !DILocation(line: 631, column: 50, scope: !6980)
!7012 = !DILocation(line: 632, column: 50, scope: !6980)
!7013 = !DILocation(line: 629, column: 5, scope: !6980)
!7014 = !DILocation(line: 634, column: 5, scope: !6980)
!7015 = !DILocation(line: 635, column: 1, scope: !6980)
!7016 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !647, file: !647, line: 112, type: !7017, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !7019)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{!69, !6983}
!7019 = !{!7020}
!7020 = !DILocalVariable(name: "dma_config", arg: 1, scope: !7016, file: !647, line: 112, type: !6983)
!7021 = !DILocation(line: 0, scope: !7016)
!7022 = !DILocation(line: 114, column: 14, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7016, file: !647, line: 114, column: 9)
!7024 = !DILocation(line: 114, column: 9, scope: !7016)
!7025 = !DILocation(line: 117, column: 29, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7016, file: !647, line: 117, column: 9)
!7027 = !DILocation(line: 117, column: 14, scope: !7026)
!7028 = !DILocation(line: 117, column: 9, scope: !7016)
!7029 = !DILocation(line: 120, column: 21, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7016, file: !647, line: 120, column: 9)
!7031 = !DILocation(line: 120, column: 61, scope: !7030)
!7032 = !DILocation(line: 120, column: 47, scope: !7030)
!7033 = !DILocation(line: 120, column: 9, scope: !7016)
!7034 = !DILocation(line: 123, column: 61, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7016, file: !647, line: 123, column: 9)
!7036 = !DILocation(line: 123, column: 47, scope: !7035)
!7037 = !DILocation(line: 123, column: 9, scope: !7016)
!7038 = !DILocation(line: 126, column: 29, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7016, file: !647, line: 126, column: 9)
!7040 = !DILocation(line: 126, column: 14, scope: !7039)
!7041 = !DILocation(line: 126, column: 9, scope: !7016)
!7042 = !DILocation(line: 129, column: 21, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7016, file: !647, line: 129, column: 9)
!7044 = !DILocation(line: 129, column: 58, scope: !7043)
!7045 = !DILocation(line: 129, column: 44, scope: !7043)
!7046 = !DILocation(line: 129, column: 9, scope: !7016)
!7047 = !DILocation(line: 136, column: 1, scope: !7016)
!7048 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !647, file: !647, line: 182, type: !6260, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !7049)
!7049 = !{!7050, !7051}
!7050 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !7048, file: !647, line: 182, type: !61)
!7051 = !DILocalVariable(name: "ticks_per_us", scope: !7048, file: !647, line: 184, type: !61)
!7052 = !DILocation(line: 0, scope: !7048)
!7053 = !DILocation(line: 186, column: 20, scope: !7048)
!7054 = !DILocation(line: 186, column: 39, scope: !7048)
!7055 = !DILocation(line: 188, column: 25, scope: !7048)
!7056 = !DILocation(line: 188, column: 5, scope: !7048)
!7057 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !647, file: !647, line: 637, type: !6555, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !7058)
!7058 = !{!7059, !7060}
!7059 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7057, file: !647, line: 637, type: !755)
!7060 = !DILocalVariable(name: "int_no", scope: !7057, file: !647, line: 639, type: !4854)
!7061 = !DILocation(line: 0, scope: !7057)
!7062 = !DILocation(line: 641, column: 10, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7057, file: !647, line: 641, column: 9)
!7064 = !DILocation(line: 641, column: 9, scope: !7057)
!7065 = !DILocation(line: 645, column: 14, scope: !7057)
!7066 = !DILocation(line: 646, column: 5, scope: !7057)
!7067 = !DILocation(line: 648, column: 5, scope: !7057)
!7068 = !DILocation(line: 649, column: 1, scope: !7057)
!7069 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !647, file: !647, line: 651, type: !7070, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !7072)
!7070 = !DISubroutineType(types: !7071)
!7071 = !{!6404, !755, !54, !54, !54}
!7072 = !{!7073, !7074, !7075, !7076, !7077}
!7073 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7069, file: !647, line: 651, type: !755)
!7074 = !DILocalVariable(name: "xon", arg: 2, scope: !7069, file: !647, line: 652, type: !54)
!7075 = !DILocalVariable(name: "xoff", arg: 3, scope: !7069, file: !647, line: 653, type: !54)
!7076 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7069, file: !647, line: 654, type: !54)
!7077 = !DILocalVariable(name: "int_no", scope: !7069, file: !647, line: 656, type: !4854)
!7078 = !DILocation(line: 0, scope: !7069)
!7079 = !DILocation(line: 658, column: 10, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7069, file: !647, line: 658, column: 9)
!7081 = !DILocation(line: 658, column: 9, scope: !7069)
!7082 = !DILocation(line: 662, column: 14, scope: !7069)
!7083 = !DILocation(line: 663, column: 5, scope: !7069)
!7084 = !DILocation(line: 665, column: 5, scope: !7069)
!7085 = !DILocation(line: 666, column: 1, scope: !7069)
!7086 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !647, file: !647, line: 668, type: !6555, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !7087)
!7087 = !{!7088, !7089}
!7088 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7086, file: !647, line: 668, type: !755)
!7089 = !DILocalVariable(name: "int_no", scope: !7086, file: !647, line: 670, type: !4854)
!7090 = !DILocation(line: 0, scope: !7086)
!7091 = !DILocation(line: 672, column: 10, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7086, file: !647, line: 672, column: 9)
!7093 = !DILocation(line: 672, column: 9, scope: !7086)
!7094 = !DILocation(line: 676, column: 14, scope: !7086)
!7095 = !DILocation(line: 677, column: 5, scope: !7086)
!7096 = !DILocation(line: 679, column: 5, scope: !7086)
!7097 = !DILocation(line: 680, column: 1, scope: !7086)
!7098 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !647, file: !647, line: 683, type: !7099, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !7101)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{!6404, !755, !61}
!7101 = !{!7102, !7103}
!7102 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7098, file: !647, line: 683, type: !755)
!7103 = !DILocalVariable(name: "timeout", arg: 2, scope: !7098, file: !647, line: 683, type: !61)
!7104 = !DILocation(line: 0, scope: !7098)
!7105 = !DILocation(line: 685, column: 10, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7098, file: !647, line: 685, column: 9)
!7107 = !DILocation(line: 685, column: 9, scope: !7098)
!7108 = !DILocation(line: 689, column: 19, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7098, file: !647, line: 689, column: 9)
!7110 = !DILocation(line: 0, scope: !7109)
!7111 = !DILocation(line: 696, column: 1, scope: !7098)
!7112 = distinct !DISubprogram(name: "hal_dwt_reset", scope: !763, file: !763, line: 47, type: !154, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !1397)
!7113 = !DILocation(line: 49, column: 16, scope: !7112)
!7114 = !DILocation(line: 50, column: 16, scope: !7112)
!7115 = !DILocation(line: 51, column: 16, scope: !7112)
!7116 = !DILocation(line: 52, column: 16, scope: !7112)
!7117 = !DILocation(line: 53, column: 16, scope: !7112)
!7118 = !DILocation(line: 54, column: 16, scope: !7112)
!7119 = !DILocation(line: 55, column: 16, scope: !7112)
!7120 = !DILocation(line: 56, column: 16, scope: !7112)
!7121 = !DILocation(line: 57, column: 20, scope: !7112)
!7122 = !DILocation(line: 58, column: 20, scope: !7112)
!7123 = !DILocation(line: 59, column: 20, scope: !7112)
!7124 = !DILocation(line: 60, column: 20, scope: !7112)
!7125 = !DILocation(line: 61, column: 1, scope: !7112)
!7126 = distinct !DISubprogram(name: "hal_dwt_init", scope: !763, file: !763, line: 62, type: !154, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !1397)
!7127 = !DILocation(line: 70, column: 22, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7126, file: !763, line: 70, column: 9)
!7129 = !DILocation(line: 70, column: 28, scope: !7128)
!7130 = !DILocation(line: 70, column: 9, scope: !7126)
!7131 = !DILocation(line: 72, column: 9, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7128, file: !763, line: 70, column: 62)
!7133 = !DILocation(line: 75, column: 26, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7132, file: !763, line: 75, column: 13)
!7135 = !DILocation(line: 75, column: 32, scope: !7134)
!7136 = !DILocation(line: 75, column: 13, scope: !7132)
!7137 = !DILocation(line: 76, column: 30, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7134, file: !763, line: 75, column: 63)
!7139 = !DILocation(line: 77, column: 9, scope: !7138)
!7140 = !DILocation(line: 79, column: 28, scope: !7132)
!7141 = !DILocation(line: 79, column: 33, scope: !7132)
!7142 = !DILocation(line: 79, column: 21, scope: !7132)
!7143 = !DILocation(line: 83, column: 20, scope: !7132)
!7144 = !DILocation(line: 84, column: 20, scope: !7132)
!7145 = !DILocation(line: 85, column: 20, scope: !7132)
!7146 = !DILocation(line: 86, column: 20, scope: !7132)
!7147 = !DILocation(line: 92, column: 5, scope: !7132)
!7148 = !DILocation(line: 93, column: 1, scope: !7126)
!7149 = distinct !DISubprogram(name: "hal_dwt_request_watchpoint", scope: !763, file: !763, line: 120, type: !7150, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !7153)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{!527, !61, !61, !61, !7152}
!7152 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_FUNC_TYPE", file: !766, line: 48, baseType: !765)
!7153 = !{!7154, !7155, !7156, !7157, !7158}
!7154 = !DILocalVariable(name: "index", arg: 1, scope: !7149, file: !763, line: 120, type: !61)
!7155 = !DILocalVariable(name: "addr_base", arg: 2, scope: !7149, file: !763, line: 120, type: !61)
!7156 = !DILocalVariable(name: "addr_mask", arg: 3, scope: !7149, file: !763, line: 120, type: !61)
!7157 = !DILocalVariable(name: "func", arg: 4, scope: !7149, file: !763, line: 120, type: !7152)
!7158 = !DILocalVariable(name: "offset", scope: !7149, file: !763, line: 122, type: !61)
!7159 = !DILocation(line: 0, scope: !7149)
!7160 = !DILocation(line: 129, column: 22, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7149, file: !763, line: 129, column: 9)
!7162 = !DILocation(line: 129, column: 28, scope: !7161)
!7163 = !DILocation(line: 129, column: 9, scope: !7149)
!7164 = !DILocation(line: 131, column: 23, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !763, line: 131, column: 13)
!7166 = distinct !DILexicalBlock(scope: !7161, file: !763, line: 129, column: 62)
!7167 = !DILocation(line: 131, column: 20, scope: !7165)
!7168 = !DILocation(line: 131, column: 36, scope: !7165)
!7169 = !DILocation(line: 135, column: 33, scope: !7166)
!7170 = !DILocation(line: 138, column: 23, scope: !7166)
!7171 = !DILocation(line: 138, column: 33, scope: !7166)
!7172 = !DILocation(line: 139, column: 23, scope: !7166)
!7173 = !DILocation(line: 139, column: 33, scope: !7166)
!7174 = !DILocation(line: 140, column: 58, scope: !7166)
!7175 = !DILocation(line: 140, column: 40, scope: !7166)
!7176 = !DILocation(line: 140, column: 68, scope: !7166)
!7177 = !DILocation(line: 140, column: 97, scope: !7166)
!7178 = !DILocation(line: 140, column: 37, scope: !7166)
!7179 = !DILocation(line: 142, column: 9, scope: !7166)
!7180 = !DILocation(line: 0, scope: !7161)
!7181 = !DILocation(line: 146, column: 1, scope: !7149)
!7182 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !813, file: !813, line: 178, type: !7183, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !7185)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!58}
!7185 = !{!7186}
!7186 = !DILocalVariable(name: "suspend_bit", scope: !7182, file: !813, line: 181, type: !58)
!7187 = !DILocation(line: 0, scope: !7182)
!7188 = !DILocation(line: 182, column: 5, scope: !7182)
!7189 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !813, file: !813, line: 185, type: !7190, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !1397)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{!193}
!7192 = !DILocation(line: 188, column: 4, scope: !7189)
!7193 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !813, file: !813, line: 191, type: !7190, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !1397)
!7194 = !DILocation(line: 194, column: 5, scope: !7193)
!7195 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !813, file: !813, line: 197, type: !7183, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !7196)
!7196 = !{!7197}
!7197 = !DILocalVariable(name: "cmd", scope: !7195, file: !813, line: 201, type: !58)
!7198 = !DILocation(line: 0, scope: !7195)
!7199 = !DILocation(line: 202, column: 5, scope: !7195)
!7200 = distinct !DISubprogram(name: "customer_flash_register", scope: !813, file: !813, line: 207, type: !7201, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !1397)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{!815}
!7203 = !DILocation(line: 209, column: 5, scope: !7200)
!7204 = distinct !DISubprogram(name: "gpio_mode_init", scope: !2185, file: !2185, line: 93, type: !154, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7205)
!7205 = !{!7206, !7207}
!7206 = !DILocalVariable(name: "i", scope: !7204, file: !2185, line: 95, type: !61)
!7207 = !DILocalVariable(name: "mode_temp", scope: !7204, file: !2185, line: 98, type: !7208)
!7208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !1311)
!7209 = !DILocation(line: 98, column: 14, scope: !7204)
!7210 = !DILocation(line: 0, scope: !7204)
!7211 = !DILocation(line: 100, column: 5, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7204, file: !2185, line: 100, column: 5)
!7213 = !DILocation(line: 101, column: 9, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !2185, line: 100, column: 50)
!7215 = distinct !DILexicalBlock(scope: !7212, file: !2185, line: 100, column: 5)
!7216 = !DILocation(line: 100, column: 46, scope: !7215)
!7217 = !DILocation(line: 100, column: 19, scope: !7215)
!7218 = distinct !{!7218, !7211, !7219}
!7219 = !DILocation(line: 103, column: 5, scope: !7212)
!7220 = !DILocation(line: 106, column: 1, scope: !7204)
!7221 = distinct !DISubprogram(name: "gpio_oe_init", scope: !2185, file: !2185, line: 114, type: !154, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7222)
!7222 = !{!7223, !7224}
!7223 = !DILocalVariable(name: "i", scope: !7221, file: !2185, line: 116, type: !61)
!7224 = !DILocalVariable(name: "oe_temp", scope: !7221, file: !2185, line: 119, type: !7225)
!7225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 96, elements: !1862)
!7226 = !DILocation(line: 0, scope: !7221)
!7227 = !DILocation(line: 122, column: 9, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !2185, line: 121, column: 48)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !2185, line: 121, column: 5)
!7230 = distinct !DILexicalBlock(scope: !7221, file: !2185, line: 121, column: 5)
!7231 = !DILocation(line: 125, column: 1, scope: !7221)
!7232 = distinct !DISubprogram(name: "gpio_ies_init", scope: !2185, file: !2185, line: 133, type: !154, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7233)
!7233 = !{!7234, !7235}
!7234 = !DILocalVariable(name: "i", scope: !7232, file: !2185, line: 135, type: !61)
!7235 = !DILocalVariable(name: "ies_temp", scope: !7232, file: !2185, line: 138, type: !7225)
!7236 = !DILocation(line: 0, scope: !7232)
!7237 = !DILocation(line: 141, column: 9, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !2185, line: 140, column: 49)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !2185, line: 140, column: 5)
!7240 = distinct !DILexicalBlock(scope: !7232, file: !2185, line: 140, column: 5)
!7241 = !DILocation(line: 145, column: 33, scope: !7232)
!7242 = !DILocation(line: 146, column: 33, scope: !7232)
!7243 = !DILocation(line: 147, column: 33, scope: !7232)
!7244 = !DILocation(line: 150, column: 33, scope: !7232)
!7245 = !DILocation(line: 151, column: 33, scope: !7232)
!7246 = !DILocation(line: 152, column: 33, scope: !7232)
!7247 = !DILocation(line: 155, column: 35, scope: !7232)
!7248 = !DILocation(line: 156, column: 35, scope: !7232)
!7249 = !DILocation(line: 157, column: 35, scope: !7232)
!7250 = !DILocation(line: 160, column: 35, scope: !7232)
!7251 = !DILocation(line: 161, column: 35, scope: !7232)
!7252 = !DILocation(line: 162, column: 35, scope: !7232)
!7253 = !DILocation(line: 165, column: 35, scope: !7232)
!7254 = !DILocation(line: 166, column: 35, scope: !7232)
!7255 = !DILocation(line: 167, column: 35, scope: !7232)
!7256 = !DILocation(line: 170, column: 35, scope: !7232)
!7257 = !DILocation(line: 171, column: 35, scope: !7232)
!7258 = !DILocation(line: 172, column: 35, scope: !7232)
!7259 = !DILocation(line: 174, column: 1, scope: !7232)
!7260 = distinct !DISubprogram(name: "gpio_pull_up_init", scope: !2185, file: !2185, line: 182, type: !154, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7261)
!7261 = !{!7262, !7263}
!7262 = !DILocalVariable(name: "i", scope: !7260, file: !2185, line: 184, type: !61)
!7263 = !DILocalVariable(name: "pull_up_temp", scope: !7260, file: !2185, line: 187, type: !7225)
!7264 = !DILocation(line: 0, scope: !7260)
!7265 = !DILocation(line: 190, column: 9, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !2185, line: 189, column: 53)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !2185, line: 189, column: 5)
!7268 = distinct !DILexicalBlock(scope: !7260, file: !2185, line: 189, column: 5)
!7269 = !DILocation(line: 194, column: 33, scope: !7260)
!7270 = !DILocation(line: 202, column: 33, scope: !7260)
!7271 = !DILocation(line: 210, column: 35, scope: !7260)
!7272 = !DILocation(line: 218, column: 35, scope: !7260)
!7273 = !DILocation(line: 226, column: 35, scope: !7260)
!7274 = !DILocation(line: 234, column: 35, scope: !7260)
!7275 = !DILocation(line: 241, column: 1, scope: !7260)
!7276 = distinct !DISubprogram(name: "gpio_pull_down_init", scope: !2185, file: !2185, line: 250, type: !154, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7277)
!7277 = !{!7278, !7279}
!7278 = !DILocalVariable(name: "i", scope: !7276, file: !2185, line: 252, type: !61)
!7279 = !DILocalVariable(name: "pull_down_temp", scope: !7276, file: !2185, line: 255, type: !7225)
!7280 = !DILocation(line: 0, scope: !7276)
!7281 = !DILocation(line: 258, column: 9, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !2185, line: 257, column: 55)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !2185, line: 257, column: 5)
!7284 = distinct !DILexicalBlock(scope: !7276, file: !2185, line: 257, column: 5)
!7285 = !DILocation(line: 261, column: 1, scope: !7276)
!7286 = distinct !DISubprogram(name: "gpio_output_init", scope: !2185, file: !2185, line: 269, type: !154, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7287)
!7287 = !{!7288, !7289}
!7288 = !DILocalVariable(name: "i", scope: !7286, file: !2185, line: 271, type: !61)
!7289 = !DILocalVariable(name: "output_temp", scope: !7286, file: !2185, line: 274, type: !7225)
!7290 = !DILocation(line: 0, scope: !7286)
!7291 = !DILocation(line: 277, column: 9, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !2185, line: 276, column: 52)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !2185, line: 276, column: 5)
!7294 = distinct !DILexicalBlock(scope: !7286, file: !2185, line: 276, column: 5)
!7295 = !DILocation(line: 281, column: 1, scope: !7286)
!7296 = distinct !DISubprogram(name: "bsp_ept_gpio_set_control_by_cm4", scope: !2185, file: !2185, line: 289, type: !154, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !1397)
!7297 = !DILocation(line: 292, column: 39, scope: !7296)
!7298 = !DILocation(line: 293, column: 39, scope: !7296)
!7299 = !DILocation(line: 294, column: 39, scope: !7296)
!7300 = !DILocation(line: 295, column: 1, scope: !7296)
!7301 = distinct !DISubprogram(name: "bsp_ept_gpio_setting_init", scope: !2185, file: !2185, line: 302, type: !154, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !1397)
!7302 = !DILocation(line: 304, column: 5, scope: !7301)
!7303 = !DILocation(line: 305, column: 5, scope: !7301)
!7304 = !DILocation(line: 306, column: 5, scope: !7301)
!7305 = !DILocation(line: 307, column: 5, scope: !7301)
!7306 = !DILocation(line: 308, column: 5, scope: !7301)
!7307 = !DILocation(line: 309, column: 5, scope: !7301)
!7308 = !DILocation(line: 310, column: 1, scope: !7301)
!7309 = distinct !DISubprogram(name: "xTaskGenericCreate", scope: !839, file: !839, line: 547, type: !7310, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7328)
!7310 = !DISubroutineType(types: !7311)
!7311 = !{!869, !7312, !330, !7314, !7315, !862, !7316, !7318, !7319}
!7312 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !7313, line: 77, baseType: !639)
!7313 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/xml/GCC")
!7314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!7315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!7316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7317)
!7317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!7318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!7319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7320)
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 32)
!7321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7322)
!7322 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !847, line: 148, baseType: !7323)
!7323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !847, line: 143, size: 96, elements: !7324)
!7324 = !{!7325, !7326, !7327}
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !7323, file: !847, line: 145, baseType: !51, size: 32)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !7323, file: !847, line: 146, baseType: !61, size: 32, offset: 32)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !7323, file: !847, line: 147, baseType: !61, size: 32, offset: 64)
!7328 = !{!7329, !7330, !7331, !7332, !7333, !7334, !7335, !7336, !7337, !7338, !7339}
!7329 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !7309, file: !839, line: 547, type: !7312)
!7330 = !DILocalVariable(name: "pcName", arg: 2, scope: !7309, file: !839, line: 547, type: !330)
!7331 = !DILocalVariable(name: "usStackDepth", arg: 3, scope: !7309, file: !839, line: 547, type: !7314)
!7332 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !7309, file: !839, line: 547, type: !7315)
!7333 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !7309, file: !839, line: 547, type: !862)
!7334 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !7309, file: !839, line: 547, type: !7316)
!7335 = !DILocalVariable(name: "puxStackBuffer", arg: 7, scope: !7309, file: !839, line: 547, type: !7318)
!7336 = !DILocalVariable(name: "xRegions", arg: 8, scope: !7309, file: !839, line: 547, type: !7319)
!7337 = !DILocalVariable(name: "xReturn", scope: !7309, file: !839, line: 549, type: !869)
!7338 = !DILocalVariable(name: "pxNewTCB", scope: !7309, file: !839, line: 550, type: !870)
!7339 = !DILocalVariable(name: "pxTopOfStack", scope: !7309, file: !839, line: 551, type: !866)
!7340 = !DILocation(line: 0, scope: !7309)
!7341 = !DILocation(line: 553, column: 2, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7309, file: !839, line: 553, column: 2)
!7343 = !DILocation(line: 553, column: 2, scope: !7309)
!7344 = !DILocation(line: 553, column: 2, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7342, file: !839, line: 553, column: 2)
!7346 = !DILocation(line: 554, column: 2, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7309, file: !839, line: 554, column: 2)
!7348 = !DILocation(line: 554, column: 2, scope: !7309)
!7349 = !DILocation(line: 554, column: 2, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7347, file: !839, line: 554, column: 2)
!7351 = !DILocation(line: 558, column: 13, scope: !7309)
!7352 = !DILocation(line: 560, column: 15, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7309, file: !839, line: 560, column: 6)
!7354 = !DILocation(line: 560, column: 6, scope: !7309)
!7355 = !DILocation(line: 596, column: 29, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !839, line: 595, column: 3)
!7357 = distinct !DILexicalBlock(scope: !7353, file: !839, line: 561, column: 2)
!7358 = !DILocation(line: 596, column: 41, scope: !7356)
!7359 = !DILocation(line: 596, column: 54, scope: !7356)
!7360 = !DILocation(line: 596, column: 37, scope: !7356)
!7361 = !DILocation(line: 597, column: 41, scope: !7356)
!7362 = !DILocation(line: 597, column: 82, scope: !7356)
!7363 = !DILocation(line: 597, column: 19, scope: !7356)
!7364 = !DILocation(line: 617, column: 3, scope: !7357)
!7365 = !DILocation(line: 629, column: 29, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7357, file: !839, line: 628, column: 3)
!7367 = !DILocation(line: 629, column: 14, scope: !7366)
!7368 = !DILocation(line: 629, column: 27, scope: !7366)
!7369 = !DILocation(line: 633, column: 32, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7357, file: !839, line: 633, column: 7)
!7371 = !DILocation(line: 633, column: 7, scope: !7357)
!7372 = !DILocation(line: 638, column: 19, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7370, file: !839, line: 634, column: 3)
!7374 = !DILocation(line: 639, column: 3, scope: !7373)
!7375 = !DILocation(line: 647, column: 3, scope: !7357)
!7376 = !DILocation(line: 649, column: 26, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7357, file: !839, line: 648, column: 3)
!7378 = !DILocation(line: 650, column: 8, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7377, file: !839, line: 650, column: 8)
!7380 = !DILocation(line: 650, column: 21, scope: !7379)
!7381 = !DILocation(line: 650, column: 8, scope: !7377)
!7382 = !DILocation(line: 654, column: 18, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7379, file: !839, line: 651, column: 4)
!7384 = !DILocation(line: 656, column: 9, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7383, file: !839, line: 656, column: 9)
!7386 = !DILocation(line: 656, column: 32, scope: !7385)
!7387 = !DILocation(line: 656, column: 9, scope: !7383)
!7388 = !DILocation(line: 661, column: 6, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !839, line: 657, column: 5)
!7390 = !DILocation(line: 662, column: 5, scope: !7389)
!7391 = !DILocation(line: 673, column: 9, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !839, line: 673, column: 9)
!7393 = distinct !DILexicalBlock(scope: !7379, file: !839, line: 669, column: 4)
!7394 = !DILocation(line: 673, column: 27, scope: !7392)
!7395 = !DILocation(line: 673, column: 9, scope: !7393)
!7396 = !DILocation(line: 675, column: 10, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !839, line: 675, column: 10)
!7398 = distinct !DILexicalBlock(scope: !7392, file: !839, line: 674, column: 5)
!7399 = !DILocation(line: 675, column: 24, scope: !7397)
!7400 = !DILocation(line: 675, column: 35, scope: !7397)
!7401 = !DILocation(line: 675, column: 10, scope: !7398)
!7402 = !DILocation(line: 677, column: 20, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7397, file: !839, line: 676, column: 6)
!7404 = !DILocation(line: 678, column: 6, scope: !7403)
!7405 = !DILocation(line: 690, column: 16, scope: !7377)
!7406 = !DILocation(line: 695, column: 15, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7377, file: !839, line: 693, column: 4)
!7408 = !DILocation(line: 695, column: 27, scope: !7407)
!7409 = !DILocation(line: 700, column: 4, scope: !7377)
!7410 = !DILocation(line: 705, column: 3, scope: !7357)
!7411 = !DILocation(line: 715, column: 7, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7413, file: !839, line: 715, column: 7)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !839, line: 714, column: 2)
!7414 = distinct !DILexicalBlock(scope: !7309, file: !839, line: 713, column: 6)
!7415 = !DILocation(line: 715, column: 25, scope: !7412)
!7416 = !DILocation(line: 715, column: 7, scope: !7413)
!7417 = !DILocation(line: 719, column: 8, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !839, line: 719, column: 8)
!7419 = distinct !DILexicalBlock(scope: !7412, file: !839, line: 716, column: 3)
!7420 = !DILocation(line: 719, column: 22, scope: !7418)
!7421 = !DILocation(line: 719, column: 33, scope: !7418)
!7422 = !DILocation(line: 719, column: 8, scope: !7419)
!7423 = !DILocation(line: 721, column: 5, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !839, line: 721, column: 5)
!7425 = distinct !DILexicalBlock(scope: !7418, file: !839, line: 720, column: 4)
!7426 = !{i64 2148474598}
!7427 = !{i64 2148474638}
!7428 = !DILocation(line: 722, column: 4, scope: !7425)
!7429 = !DILocation(line: 734, column: 2, scope: !7309)
!7430 = distinct !DISubprogram(name: "prvAllocateTCBAndStack", scope: !839, file: !839, line: 3021, type: !7431, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7433)
!7431 = !DISubroutineType(types: !7432)
!7432 = !{!870, !7314, !7318}
!7433 = !{!7434, !7435, !7436, !7437}
!7434 = !DILocalVariable(name: "usStackDepth", arg: 1, scope: !7430, file: !839, line: 3021, type: !7314)
!7435 = !DILocalVariable(name: "puxStackBuffer", arg: 2, scope: !7430, file: !839, line: 3021, type: !7318)
!7436 = !DILocalVariable(name: "pxNewTCB", scope: !7430, file: !839, line: 3023, type: !870)
!7437 = !DILocalVariable(name: "pxStack", scope: !7438, file: !839, line: 3051, type: !866)
!7438 = distinct !DILexicalBlock(scope: !7430, file: !839, line: 3050, column: 2)
!7439 = !DILocation(line: 0, scope: !7430)
!7440 = !DILocation(line: 3054, column: 31, scope: !7438)
!7441 = !DILocation(line: 0, scope: !7438)
!7442 = !DILocation(line: 3056, column: 15, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7438, file: !839, line: 3056, column: 7)
!7444 = !DILocation(line: 3056, column: 7, scope: !7438)
!7445 = !DILocation(line: 3060, column: 27, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7443, file: !839, line: 3057, column: 3)
!7447 = !DILocation(line: 3062, column: 17, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7446, file: !839, line: 3062, column: 8)
!7449 = !DILocation(line: 3062, column: 8, scope: !7446)
!7450 = !DILocation(line: 3071, column: 5, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7448, file: !839, line: 3068, column: 4)
!7452 = !DILocation(line: 3065, column: 15, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7448, file: !839, line: 3063, column: 4)
!7454 = !DILocation(line: 3065, column: 23, scope: !7453)
!7455 = !DILocation(line: 3060, column: 15, scope: !7446)
!7456 = !DILocation(line: 3087, column: 68, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !839, line: 3085, column: 3)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !839, line: 3082, column: 2)
!7459 = distinct !DILexicalBlock(scope: !7430, file: !839, line: 3081, column: 6)
!7460 = !DILocation(line: 3087, column: 92, scope: !7457)
!7461 = !DILocation(line: 3087, column: 13, scope: !7457)
!7462 = !DILocation(line: 3090, column: 2, scope: !7458)
!7463 = !DILocation(line: 3092, column: 2, scope: !7430)
!7464 = distinct !DISubprogram(name: "prvInitialiseTCBVariables", scope: !839, file: !839, line: 2802, type: !7465, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7468)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{null, !7467, !330, !862, !7319, !7314}
!7467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!7468 = !{!7469, !7470, !7471, !7472, !7473, !7474}
!7469 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !7464, file: !839, line: 2802, type: !7467)
!7470 = !DILocalVariable(name: "pcName", arg: 2, scope: !7464, file: !839, line: 2802, type: !330)
!7471 = !DILocalVariable(name: "uxPriority", arg: 3, scope: !7464, file: !839, line: 2802, type: !862)
!7472 = !DILocalVariable(name: "xRegions", arg: 4, scope: !7464, file: !839, line: 2802, type: !7319)
!7473 = !DILocalVariable(name: "usStackDepth", arg: 5, scope: !7464, file: !839, line: 2802, type: !7314)
!7474 = !DILocalVariable(name: "x", scope: !7464, file: !839, line: 2804, type: !862)
!7475 = !DILocation(line: 0, scope: !7464)
!7476 = !DILocation(line: 2807, column: 2, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7464, file: !839, line: 2807, column: 2)
!7478 = !DILocation(line: 2809, column: 28, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !839, line: 2808, column: 2)
!7480 = distinct !DILexicalBlock(scope: !7477, file: !839, line: 2807, column: 2)
!7481 = !DILocation(line: 2809, column: 3, scope: !7479)
!7482 = !DILocation(line: 2809, column: 26, scope: !7479)
!7483 = !DILocation(line: 2814, column: 7, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7479, file: !839, line: 2814, column: 7)
!7485 = !DILocation(line: 2814, column: 19, scope: !7484)
!7486 = !DILocation(line: 2814, column: 7, scope: !7479)
!7487 = distinct !{!7487, !7476, !7488}
!7488 = !DILocation(line: 2822, column: 2, scope: !7477)
!7489 = !DILocation(line: 2826, column: 2, scope: !7464)
!7490 = !DILocation(line: 2826, column: 51, scope: !7464)
!7491 = !DILocation(line: 2830, column: 6, scope: !7464)
!7492 = !DILocation(line: 2839, column: 9, scope: !7464)
!7493 = !DILocation(line: 2839, column: 20, scope: !7464)
!7494 = !DILocation(line: 2842, column: 10, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7464, file: !839, line: 2841, column: 2)
!7496 = !DILocation(line: 2842, column: 25, scope: !7495)
!7497 = !DILocation(line: 2843, column: 10, scope: !7495)
!7498 = !DILocation(line: 2843, column: 24, scope: !7495)
!7499 = !DILocation(line: 2847, column: 33, scope: !7464)
!7500 = !DILocation(line: 2847, column: 2, scope: !7464)
!7501 = !DILocation(line: 2848, column: 33, scope: !7464)
!7502 = !DILocation(line: 2848, column: 2, scope: !7464)
!7503 = !DILocation(line: 2852, column: 2, scope: !7464)
!7504 = !DILocation(line: 2855, column: 2, scope: !7464)
!7505 = !DILocation(line: 2856, column: 2, scope: !7464)
!7506 = !DILocation(line: 2889, column: 10, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7464, file: !839, line: 2888, column: 2)
!7508 = !DILocation(line: 2889, column: 26, scope: !7507)
!7509 = !DILocation(line: 2890, column: 10, scope: !7507)
!7510 = !DILocation(line: 2890, column: 23, scope: !7507)
!7511 = !DILocation(line: 2900, column: 1, scope: !7464)
!7512 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !839, file: !839, line: 2918, type: !154, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7513)
!7513 = !{!7514}
!7514 = !DILocalVariable(name: "uxPriority", scope: !7512, file: !839, line: 2920, type: !862)
!7515 = !DILocation(line: 0, scope: !7512)
!7516 = !DILocation(line: 2922, column: 2, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7512, file: !839, line: 2922, column: 2)
!7518 = !DILocation(line: 2924, column: 23, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !839, line: 2923, column: 2)
!7520 = distinct !DILexicalBlock(scope: !7517, file: !839, line: 2922, column: 2)
!7521 = !DILocation(line: 2924, column: 3, scope: !7519)
!7522 = !DILocation(line: 2922, column: 101, scope: !7520)
!7523 = !DILocation(line: 2922, column: 51, scope: !7520)
!7524 = distinct !{!7524, !7516, !7525}
!7525 = !DILocation(line: 2925, column: 2, scope: !7517)
!7526 = !DILocation(line: 2927, column: 2, scope: !7512)
!7527 = !DILocation(line: 2928, column: 2, scope: !7512)
!7528 = !DILocation(line: 2929, column: 2, scope: !7512)
!7529 = !DILocation(line: 2933, column: 3, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7512, file: !839, line: 2932, column: 2)
!7531 = !DILocation(line: 2939, column: 3, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7512, file: !839, line: 2938, column: 2)
!7533 = !DILocation(line: 2945, column: 20, scope: !7512)
!7534 = !DILocation(line: 2946, column: 28, scope: !7512)
!7535 = !DILocation(line: 2947, column: 1, scope: !7512)
!7536 = distinct !DISubprogram(name: "vTaskDelete", scope: !839, file: !839, line: 740, type: !7537, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7539)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{null, !868}
!7539 = !{!7540, !7541}
!7540 = !DILocalVariable(name: "xTaskToDelete", arg: 1, scope: !7536, file: !839, line: 740, type: !868)
!7541 = !DILocalVariable(name: "pxTCB", scope: !7536, file: !839, line: 742, type: !870)
!7542 = !DILocation(line: 0, scope: !7536)
!7543 = !DILocation(line: 744, column: 3, scope: !7536)
!7544 = !DILocation(line: 748, column: 12, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7536, file: !839, line: 745, column: 3)
!7546 = !DILocation(line: 754, column: 32, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7545, file: !839, line: 754, column: 8)
!7548 = !DILocation(line: 754, column: 8, scope: !7547)
!7549 = !DILocation(line: 754, column: 53, scope: !7547)
!7550 = !DILocation(line: 754, column: 8, scope: !7545)
!7551 = !DILocation(line: 756, column: 5, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !839, line: 756, column: 5)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !839, line: 756, column: 5)
!7554 = distinct !DILexicalBlock(scope: !7547, file: !839, line: 755, column: 4)
!7555 = !DILocation(line: 756, column: 5, scope: !7553)
!7556 = !DILocation(line: 756, column: 5, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7552, file: !839, line: 756, column: 5)
!7558 = !DILocation(line: 764, column: 8, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7545, file: !839, line: 764, column: 8)
!7560 = !DILocation(line: 764, column: 62, scope: !7559)
!7561 = !DILocation(line: 764, column: 8, scope: !7545)
!7562 = !DILocation(line: 766, column: 14, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7559, file: !839, line: 765, column: 4)
!7564 = !DILocation(line: 767, column: 4, scope: !7563)
!7565 = !DILocation(line: 773, column: 4, scope: !7545)
!7566 = !DILocation(line: 778, column: 4, scope: !7545)
!7567 = !DILocation(line: 782, column: 16, scope: !7545)
!7568 = !DILocation(line: 786, column: 3, scope: !7536)
!7569 = !DILocation(line: 790, column: 7, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7536, file: !839, line: 790, column: 7)
!7571 = !DILocation(line: 790, column: 25, scope: !7570)
!7572 = !DILocation(line: 790, column: 7, scope: !7536)
!7573 = !DILocation(line: 792, column: 17, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !839, line: 792, column: 8)
!7575 = distinct !DILexicalBlock(scope: !7570, file: !839, line: 791, column: 3)
!7576 = !DILocation(line: 792, column: 14, scope: !7574)
!7577 = !DILocation(line: 792, column: 8, scope: !7575)
!7578 = !DILocation(line: 794, column: 5, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !839, line: 794, column: 5)
!7580 = distinct !DILexicalBlock(scope: !7574, file: !839, line: 793, column: 4)
!7581 = !DILocation(line: 794, column: 5, scope: !7580)
!7582 = !DILocation(line: 794, column: 5, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7579, file: !839, line: 794, column: 5)
!7584 = !DILocation(line: 802, column: 5, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7580, file: !839, line: 802, column: 5)
!7586 = !{i64 2148476004}
!7587 = !{i64 2148476044}
!7588 = !DILocation(line: 803, column: 4, scope: !7580)
!7589 = !DILocation(line: 808, column: 5, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7574, file: !839, line: 805, column: 4)
!7591 = !DILocation(line: 810, column: 6, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7590, file: !839, line: 809, column: 5)
!7593 = !DILocation(line: 812, column: 5, scope: !7590)
!7594 = !DILocation(line: 815, column: 2, scope: !7536)
!7595 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !839, file: !839, line: 3267, type: !154, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7596)
!7596 = !{!7597}
!7597 = !DILocalVariable(name: "pxTCB", scope: !7595, file: !839, line: 3269, type: !870)
!7598 = !DILocation(line: 3271, column: 6, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7595, file: !839, line: 3271, column: 6)
!7600 = !DILocation(line: 3271, column: 6, scope: !7595)
!7601 = !DILocation(line: 3286, column: 27, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7599, file: !839, line: 3281, column: 2)
!7603 = !DILocation(line: 0, scope: !7595)
!7604 = !DILocation(line: 3287, column: 26, scope: !7602)
!7605 = !DILocation(line: 0, scope: !7599)
!7606 = !DILocation(line: 3289, column: 1, scope: !7595)
!7607 = distinct !DISubprogram(name: "vTaskDelayUntil", scope: !839, file: !839, line: 822, type: !7608, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7613)
!7608 = !DISubroutineType(types: !7609)
!7609 = !{null, !7610, !7612}
!7610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7611)
!7611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!7612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!7613 = !{!7614, !7615, !7616, !7617, !7618, !7619}
!7614 = !DILocalVariable(name: "pxPreviousWakeTime", arg: 1, scope: !7607, file: !839, line: 822, type: !7610)
!7615 = !DILocalVariable(name: "xTimeIncrement", arg: 2, scope: !7607, file: !839, line: 822, type: !7612)
!7616 = !DILocalVariable(name: "xTimeToWake", scope: !7607, file: !839, line: 824, type: !884)
!7617 = !DILocalVariable(name: "xAlreadyYielded", scope: !7607, file: !839, line: 825, type: !869)
!7618 = !DILocalVariable(name: "xShouldDelay", scope: !7607, file: !839, line: 825, type: !869)
!7619 = !DILocalVariable(name: "xConstTickCount", scope: !7620, file: !839, line: 835, type: !7612)
!7620 = distinct !DILexicalBlock(scope: !7607, file: !839, line: 832, column: 3)
!7621 = !DILocation(line: 0, scope: !7607)
!7622 = !DILocation(line: 827, column: 3, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7607, file: !839, line: 827, column: 3)
!7624 = !DILocation(line: 827, column: 3, scope: !7607)
!7625 = !DILocation(line: 827, column: 3, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7623, file: !839, line: 827, column: 3)
!7627 = !DILocation(line: 828, column: 3, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7607, file: !839, line: 828, column: 3)
!7629 = !DILocation(line: 828, column: 3, scope: !7607)
!7630 = !DILocation(line: 828, column: 3, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7628, file: !839, line: 828, column: 3)
!7632 = !DILocation(line: 829, column: 3, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7607, file: !839, line: 829, column: 3)
!7634 = !DILocation(line: 829, column: 3, scope: !7607)
!7635 = !DILocation(line: 829, column: 3, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7633, file: !839, line: 829, column: 3)
!7637 = !DILocation(line: 831, column: 3, scope: !7607)
!7638 = !DILocation(line: 835, column: 39, scope: !7620)
!7639 = !DILocation(line: 0, scope: !7620)
!7640 = !DILocation(line: 838, column: 18, scope: !7620)
!7641 = !DILocation(line: 838, column: 38, scope: !7620)
!7642 = !DILocation(line: 840, column: 24, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7620, file: !839, line: 840, column: 8)
!7644 = !DILocation(line: 0, scope: !7643)
!7645 = !DILocation(line: 840, column: 8, scope: !7620)
!7646 = !DILocation(line: 847, column: 47, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !839, line: 847, column: 9)
!7648 = distinct !DILexicalBlock(scope: !7643, file: !839, line: 841, column: 4)
!7649 = !DILocation(line: 861, column: 47, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !839, line: 861, column: 9)
!7651 = distinct !DILexicalBlock(scope: !7643, file: !839, line: 857, column: 4)
!7652 = !DILocation(line: 872, column: 24, scope: !7620)
!7653 = !DILocation(line: 874, column: 8, scope: !7620)
!7654 = !DILocation(line: 880, column: 26, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !839, line: 880, column: 9)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !839, line: 875, column: 4)
!7657 = distinct !DILexicalBlock(scope: !7620, file: !839, line: 874, column: 8)
!7658 = !DILocation(line: 880, column: 40, scope: !7655)
!7659 = !DILocation(line: 880, column: 9, scope: !7655)
!7660 = !DILocation(line: 880, column: 61, scope: !7655)
!7661 = !DILocation(line: 880, column: 9, scope: !7656)
!7662 = !DILocation(line: 885, column: 6, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7655, file: !839, line: 881, column: 5)
!7664 = !DILocation(line: 886, column: 5, scope: !7663)
!7665 = !DILocation(line: 892, column: 5, scope: !7656)
!7666 = !DILocation(line: 893, column: 4, scope: !7656)
!7667 = !DILocation(line: 899, column: 21, scope: !7607)
!7668 = !DILocation(line: 903, column: 23, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7607, file: !839, line: 903, column: 7)
!7670 = !DILocation(line: 903, column: 7, scope: !7607)
!7671 = !DILocation(line: 905, column: 4, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !839, line: 905, column: 4)
!7673 = distinct !DILexicalBlock(scope: !7669, file: !839, line: 904, column: 3)
!7674 = !{i64 2148477242}
!7675 = !{i64 2148477282}
!7676 = !DILocation(line: 906, column: 3, scope: !7673)
!7677 = !DILocation(line: 911, column: 2, scope: !7607)
!7678 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !839, file: !839, line: 1628, type: !154, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !1397)
!7679 = !DILocation(line: 1634, column: 2, scope: !7678)
!7680 = !DILocation(line: 1635, column: 1, scope: !7678)
!7681 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !839, file: !839, line: 2991, type: !7682, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7684)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{null, !7612}
!7684 = !{!7685}
!7685 = !DILocalVariable(name: "xTimeToWake", arg: 1, scope: !7681, file: !839, line: 2991, type: !7612)
!7686 = !DILocation(line: 0, scope: !7681)
!7687 = !DILocation(line: 2994, column: 2, scope: !7681)
!7688 = !DILocation(line: 2996, column: 20, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7681, file: !839, line: 2996, column: 6)
!7690 = !DILocation(line: 2996, column: 18, scope: !7689)
!7691 = !DILocation(line: 2996, column: 6, scope: !7681)
!7692 = !DILocation(line: 2999, column: 16, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7689, file: !839, line: 2997, column: 2)
!7694 = !DILocation(line: 2999, column: 46, scope: !7693)
!7695 = !DILocation(line: 2999, column: 60, scope: !7693)
!7696 = !DILocation(line: 2999, column: 3, scope: !7693)
!7697 = !DILocation(line: 3000, column: 2, scope: !7693)
!7698 = !DILocation(line: 3004, column: 16, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7689, file: !839, line: 3002, column: 2)
!7700 = !DILocation(line: 3004, column: 38, scope: !7699)
!7701 = !DILocation(line: 3004, column: 52, scope: !7699)
!7702 = !DILocation(line: 3004, column: 3, scope: !7699)
!7703 = !DILocation(line: 3009, column: 21, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7699, file: !839, line: 3009, column: 7)
!7705 = !DILocation(line: 3009, column: 19, scope: !7704)
!7706 = !DILocation(line: 3009, column: 7, scope: !7699)
!7707 = !DILocation(line: 3011, column: 25, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7704, file: !839, line: 3010, column: 3)
!7709 = !DILocation(line: 3012, column: 3, scope: !7708)
!7710 = !DILocation(line: 3018, column: 1, scope: !7681)
!7711 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !839, file: !839, line: 1666, type: !7712, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7714)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{!869}
!7714 = !{!7715, !7716}
!7715 = !DILocalVariable(name: "pxTCB", scope: !7711, file: !839, line: 1668, type: !870)
!7716 = !DILocalVariable(name: "xAlreadyYielded", scope: !7711, file: !839, line: 1669, type: !869)
!7717 = !DILocation(line: 0, scope: !7711)
!7718 = !DILocation(line: 1673, column: 2, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7711, file: !839, line: 1673, column: 2)
!7720 = !DILocation(line: 1673, column: 2, scope: !7711)
!7721 = !DILocation(line: 1673, column: 2, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !839, line: 1673, column: 2)
!7723 = !DILocation(line: 1680, column: 2, scope: !7711)
!7724 = !DILocation(line: 1682, column: 3, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7711, file: !839, line: 1681, column: 2)
!7726 = !DILocation(line: 1684, column: 7, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7725, file: !839, line: 1684, column: 7)
!7728 = !DILocation(line: 1684, column: 28, scope: !7727)
!7729 = !DILocation(line: 1684, column: 7, scope: !7725)
!7730 = !DILocation(line: 1686, column: 8, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !839, line: 1686, column: 8)
!7732 = distinct !DILexicalBlock(scope: !7727, file: !839, line: 1685, column: 3)
!7733 = !DILocation(line: 1686, column: 31, scope: !7731)
!7734 = !DILocation(line: 1686, column: 8, scope: !7732)
!7735 = !DILocation(line: 1690, column: 12, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7731, file: !839, line: 1687, column: 4)
!7737 = !DILocation(line: 1690, column: 5, scope: !7736)
!7738 = !DILocation(line: 1692, column: 26, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7736, file: !839, line: 1691, column: 5)
!7740 = !DILocation(line: 1693, column: 39, scope: !7739)
!7741 = !DILocation(line: 1693, column: 15, scope: !7739)
!7742 = !DILocation(line: 1694, column: 39, scope: !7739)
!7743 = !DILocation(line: 1694, column: 15, scope: !7739)
!7744 = !DILocation(line: 1695, column: 6, scope: !7739)
!7745 = !DILocation(line: 1699, column: 17, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7739, file: !839, line: 1699, column: 10)
!7747 = !DILocation(line: 1699, column: 31, scope: !7746)
!7748 = !DILocation(line: 1699, column: 45, scope: !7746)
!7749 = !DILocation(line: 1699, column: 28, scope: !7746)
!7750 = !DILocation(line: 1699, column: 10, scope: !7739)
!7751 = !DILocation(line: 1701, column: 21, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7746, file: !839, line: 1700, column: 6)
!7753 = !DILocation(line: 1702, column: 6, scope: !7752)
!7754 = distinct !{!7754, !7737, !7755}
!7755 = !DILocation(line: 1707, column: 5, scope: !7736)
!7756 = !DILocation(line: 1713, column: 9, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7736, file: !839, line: 1713, column: 9)
!7758 = !DILocation(line: 1713, column: 23, scope: !7757)
!7759 = !DILocation(line: 1713, column: 9, scope: !7736)
!7760 = !DILocation(line: 1715, column: 13, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7757, file: !839, line: 1714, column: 5)
!7762 = !DILocation(line: 1715, column: 27, scope: !7761)
!7763 = !DILocation(line: 1715, column: 6, scope: !7761)
!7764 = !DILocation(line: 1717, column: 11, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !839, line: 1717, column: 11)
!7766 = distinct !DILexicalBlock(scope: !7761, file: !839, line: 1716, column: 6)
!7767 = !DILocation(line: 1717, column: 32, scope: !7765)
!7768 = !DILocation(line: 1717, column: 11, scope: !7766)
!7769 = !DILocation(line: 1719, column: 22, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7765, file: !839, line: 1718, column: 7)
!7771 = !DILocation(line: 1720, column: 7, scope: !7770)
!7772 = !DILocation(line: 1725, column: 7, scope: !7766)
!7773 = distinct !{!7773, !7763, !7774}
!7774 = !DILocation(line: 1726, column: 6, scope: !7761)
!7775 = !DILocation(line: 1733, column: 9, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7736, file: !839, line: 1733, column: 9)
!7777 = !DILocation(line: 1733, column: 23, scope: !7776)
!7778 = !DILocation(line: 1733, column: 9, scope: !7736)
!7779 = !DILocation(line: 1740, column: 6, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !839, line: 1740, column: 6)
!7781 = distinct !DILexicalBlock(scope: !7776, file: !839, line: 1734, column: 5)
!7782 = !{i64 2148486888}
!7783 = !{i64 2148486928}
!7784 = !DILocation(line: 1741, column: 5, scope: !7781)
!7785 = !DILocation(line: 1753, column: 2, scope: !7711)
!7786 = !DILocation(line: 1755, column: 2, scope: !7711)
!7787 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !839, file: !839, line: 1934, type: !7712, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7788)
!7788 = !{!7789, !7790, !7791, !7792, !7796}
!7789 = !DILocalVariable(name: "pxTCB", scope: !7787, file: !839, line: 1936, type: !870)
!7790 = !DILocalVariable(name: "xItemValue", scope: !7787, file: !839, line: 1937, type: !884)
!7791 = !DILocalVariable(name: "xSwitchRequired", scope: !7787, file: !839, line: 1938, type: !869)
!7792 = !DILocalVariable(name: "xConstTickCount", scope: !7793, file: !839, line: 1953, type: !7612)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !839, line: 1950, column: 3)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !839, line: 1945, column: 2)
!7795 = distinct !DILexicalBlock(scope: !7787, file: !839, line: 1944, column: 6)
!7796 = !DILocalVariable(name: "pxTemp", scope: !7797, file: !839, line: 1957, type: !905)
!7797 = distinct !DILexicalBlock(scope: !7798, file: !839, line: 1957, column: 5)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !839, line: 1956, column: 4)
!7799 = distinct !DILexicalBlock(scope: !7793, file: !839, line: 1955, column: 8)
!7800 = !DILocation(line: 0, scope: !7787)
!7801 = !DILocation(line: 1944, column: 6, scope: !7795)
!7802 = !DILocation(line: 1944, column: 27, scope: !7795)
!7803 = !DILocation(line: 1944, column: 6, scope: !7787)
!7804 = !DILocation(line: 1948, column: 3, scope: !7794)
!7805 = !DILocation(line: 1953, column: 39, scope: !7793)
!7806 = !DILocation(line: 0, scope: !7793)
!7807 = !DILocation(line: 1955, column: 24, scope: !7799)
!7808 = !DILocation(line: 1955, column: 8, scope: !7793)
!7809 = !DILocation(line: 1957, column: 5, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7797, file: !839, line: 1957, column: 5)
!7811 = !DILocation(line: 1957, column: 5, scope: !7797)
!7812 = !DILocation(line: 1957, column: 5, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7810, file: !839, line: 1957, column: 5)
!7814 = !DILocation(line: 0, scope: !7797)
!7815 = !DILocation(line: 1958, column: 4, scope: !7798)
!7816 = !DILocation(line: 1968, column: 27, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7793, file: !839, line: 1968, column: 8)
!7818 = !DILocation(line: 1968, column: 24, scope: !7817)
!7819 = !DILocation(line: 1968, column: 8, scope: !7793)
!7820 = !DILocation(line: 1972, column: 10, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !839, line: 1972, column: 10)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !839, line: 1971, column: 5)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !839, line: 1970, column: 5)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !839, line: 1970, column: 5)
!7825 = distinct !DILexicalBlock(scope: !7817, file: !839, line: 1969, column: 4)
!7826 = !DILocation(line: 1972, column: 10, scope: !7822)
!7827 = !DILocation(line: 1988, column: 27, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7821, file: !839, line: 1983, column: 6)
!7829 = !DILocation(line: 1989, column: 20, scope: !7828)
!7830 = !DILocation(line: 1991, column: 27, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7828, file: !839, line: 1991, column: 11)
!7832 = !DILocation(line: 1991, column: 11, scope: !7828)
!7833 = !DILocation(line: 2007, column: 16, scope: !7828)
!7834 = !DILocation(line: 2011, column: 11, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7828, file: !839, line: 2011, column: 11)
!7836 = !DILocation(line: 2011, column: 65, scope: !7835)
!7837 = !DILocation(line: 2011, column: 11, scope: !7828)
!7838 = !DILocation(line: 2013, column: 17, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !839, line: 2012, column: 7)
!7840 = !DILocation(line: 2014, column: 7, scope: !7839)
!7841 = !DILocation(line: 2022, column: 7, scope: !7828)
!7842 = !DILocation(line: 2032, column: 19, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !839, line: 2032, column: 12)
!7844 = distinct !DILexicalBlock(scope: !7828, file: !839, line: 2027, column: 7)
!7845 = !DILocation(line: 2032, column: 33, scope: !7843)
!7846 = !DILocation(line: 2032, column: 47, scope: !7843)
!7847 = !DILocation(line: 2032, column: 30, scope: !7843)
!7848 = !DILocation(line: 2032, column: 12, scope: !7844)
!7849 = distinct !{!7849, !7850, !7851}
!7850 = !DILocation(line: 1970, column: 5, scope: !7824)
!7851 = !DILocation(line: 2043, column: 5, scope: !7824)
!7852 = !DILocation(line: 0, scope: !7821)
!7853 = !DILocation(line: 2052, column: 8, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !839, line: 2052, column: 8)
!7855 = distinct !DILexicalBlock(scope: !7794, file: !839, line: 2051, column: 3)
!7856 = !DILocation(line: 1938, column: 12, scope: !7787)
!7857 = !DILocation(line: 2052, column: 86, scope: !7854)
!7858 = !DILocation(line: 2052, column: 8, scope: !7855)
!7859 = !DILocation(line: 2080, column: 3, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7795, file: !839, line: 2079, column: 2)
!7861 = !DILocation(line: 2093, column: 7, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !839, line: 2093, column: 7)
!7863 = distinct !DILexicalBlock(scope: !7787, file: !839, line: 2092, column: 2)
!7864 = !DILocation(line: 2093, column: 21, scope: !7862)
!7865 = !DILocation(line: 2093, column: 7, scope: !7863)
!7866 = !DILocation(line: 2104, column: 2, scope: !7787)
!7867 = distinct !DISubprogram(name: "vTaskDelay", scope: !839, file: !839, line: 918, type: !7682, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7868)
!7868 = !{!7869, !7870, !7871}
!7869 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !7867, file: !839, line: 918, type: !7612)
!7870 = !DILocalVariable(name: "xTimeToWake", scope: !7867, file: !839, line: 920, type: !884)
!7871 = !DILocalVariable(name: "xAlreadyYielded", scope: !7867, file: !839, line: 921, type: !869)
!7872 = !DILocation(line: 0, scope: !7867)
!7873 = !DILocation(line: 925, column: 21, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7867, file: !839, line: 925, column: 7)
!7875 = !DILocation(line: 925, column: 7, scope: !7867)
!7876 = !DILocation(line: 927, column: 4, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7878, file: !839, line: 927, column: 4)
!7878 = distinct !DILexicalBlock(scope: !7874, file: !839, line: 926, column: 3)
!7879 = !DILocation(line: 927, column: 4, scope: !7878)
!7880 = !DILocation(line: 927, column: 4, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7877, file: !839, line: 927, column: 4)
!7882 = !DILocation(line: 928, column: 4, scope: !7878)
!7883 = !DILocation(line: 942, column: 19, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7878, file: !839, line: 929, column: 4)
!7885 = !DILocation(line: 942, column: 30, scope: !7884)
!7886 = !DILocation(line: 947, column: 26, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7884, file: !839, line: 947, column: 9)
!7888 = !DILocation(line: 947, column: 40, scope: !7887)
!7889 = !DILocation(line: 947, column: 9, scope: !7887)
!7890 = !DILocation(line: 947, column: 61, scope: !7887)
!7891 = !DILocation(line: 947, column: 9, scope: !7884)
!7892 = !DILocation(line: 952, column: 6, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7887, file: !839, line: 948, column: 5)
!7894 = !DILocation(line: 953, column: 5, scope: !7893)
!7895 = !DILocation(line: 958, column: 5, scope: !7884)
!7896 = !DILocation(line: 960, column: 22, scope: !7878)
!7897 = !DILocation(line: 961, column: 3, scope: !7878)
!7898 = !DILocation(line: 969, column: 7, scope: !7867)
!7899 = !DILocation(line: 971, column: 4, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !839, line: 971, column: 4)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !839, line: 970, column: 3)
!7902 = distinct !DILexicalBlock(scope: !7867, file: !839, line: 969, column: 7)
!7903 = !{i64 2148478011}
!7904 = !{i64 2148478051}
!7905 = !DILocation(line: 972, column: 3, scope: !7901)
!7906 = !DILocation(line: 977, column: 2, scope: !7867)
!7907 = distinct !DISubprogram(name: "eTaskGetState", scope: !839, file: !839, line: 984, type: !7908, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7911)
!7908 = !DISubroutineType(types: !7909)
!7909 = !{!7910, !868}
!7910 = !DIDerivedType(tag: DW_TAG_typedef, name: "eTaskState", file: !847, line: 119, baseType: !846)
!7911 = !{!7912, !7913, !7914, !7915}
!7912 = !DILocalVariable(name: "xTask", arg: 1, scope: !7907, file: !839, line: 984, type: !868)
!7913 = !DILocalVariable(name: "eReturn", scope: !7907, file: !839, line: 986, type: !7910)
!7914 = !DILocalVariable(name: "pxStateList", scope: !7907, file: !839, line: 987, type: !905)
!7915 = !DILocalVariable(name: "pxTCB", scope: !7907, file: !839, line: 988, type: !7916)
!7916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7917)
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7918, size: 32)
!7918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !871)
!7919 = !DILocation(line: 0, scope: !7907)
!7920 = !DILocation(line: 988, column: 30, scope: !7907)
!7921 = !DILocation(line: 990, column: 3, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7907, file: !839, line: 990, column: 3)
!7923 = !DILocation(line: 990, column: 3, scope: !7907)
!7924 = !DILocation(line: 990, column: 3, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7922, file: !839, line: 990, column: 3)
!7926 = !DILocation(line: 992, column: 16, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7907, file: !839, line: 992, column: 7)
!7928 = !DILocation(line: 992, column: 13, scope: !7927)
!7929 = !DILocation(line: 992, column: 7, scope: !7907)
!7930 = !DILocation(line: 999, column: 4, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7927, file: !839, line: 998, column: 3)
!7932 = !DILocation(line: 1001, column: 32, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7931, file: !839, line: 1000, column: 4)
!7934 = !DILocation(line: 1003, column: 4, scope: !7931)
!7935 = !DILocation(line: 1005, column: 25, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7931, file: !839, line: 1005, column: 8)
!7937 = !DILocation(line: 1005, column: 22, scope: !7936)
!7938 = !DILocation(line: 1005, column: 45, scope: !7936)
!7939 = !DILocation(line: 1005, column: 65, scope: !7936)
!7940 = !DILocation(line: 1005, column: 62, scope: !7936)
!7941 = !DILocation(line: 1005, column: 8, scope: !7931)
!7942 = !DILocation(line: 1013, column: 26, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7936, file: !839, line: 1013, column: 14)
!7944 = !DILocation(line: 1013, column: 14, scope: !7936)
!7945 = !DILocation(line: 1018, column: 10, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !839, line: 1018, column: 10)
!7947 = distinct !DILexicalBlock(scope: !7943, file: !839, line: 1014, column: 5)
!7948 = !DILocation(line: 1018, column: 64, scope: !7946)
!7949 = !DILocation(line: 1030, column: 26, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7943, file: !839, line: 1030, column: 14)
!7951 = !DILocation(line: 0, scope: !7927)
!7952 = !DILocation(line: 1046, column: 3, scope: !7907)
!7953 = distinct !DISubprogram(name: "uxTaskPriorityGet", scope: !839, file: !839, line: 1054, type: !7954, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7956)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{!862, !868}
!7956 = !{!7957, !7958, !7959}
!7957 = !DILocalVariable(name: "xTask", arg: 1, scope: !7953, file: !839, line: 1054, type: !868)
!7958 = !DILocalVariable(name: "pxTCB", scope: !7953, file: !839, line: 1056, type: !870)
!7959 = !DILocalVariable(name: "uxReturn", scope: !7953, file: !839, line: 1057, type: !862)
!7960 = !DILocation(line: 0, scope: !7953)
!7961 = !DILocation(line: 1059, column: 3, scope: !7953)
!7962 = !DILocation(line: 1063, column: 12, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7953, file: !839, line: 1060, column: 3)
!7964 = !DILocation(line: 1064, column: 22, scope: !7963)
!7965 = !DILocation(line: 1066, column: 3, scope: !7953)
!7966 = !DILocation(line: 1068, column: 3, scope: !7953)
!7967 = distinct !DISubprogram(name: "uxTaskPriorityGetFromISR", scope: !839, file: !839, line: 1076, type: !7954, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7968)
!7968 = !{!7969, !7970, !7971, !7972}
!7969 = !DILocalVariable(name: "xTask", arg: 1, scope: !7967, file: !839, line: 1076, type: !868)
!7970 = !DILocalVariable(name: "pxTCB", scope: !7967, file: !839, line: 1078, type: !870)
!7971 = !DILocalVariable(name: "uxReturn", scope: !7967, file: !839, line: 1079, type: !862)
!7972 = !DILocalVariable(name: "uxSavedInterruptState", scope: !7967, file: !839, line: 1079, type: !862)
!7973 = !DILocation(line: 0, scope: !7967)
!7974 = !DILocation(line: 1097, column: 3, scope: !7967)
!7975 = !DILocation(line: 231, column: 2, scope: !7976, inlinedAt: !7980)
!7976 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !2255, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7977)
!7977 = !{!7978, !7979}
!7978 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !7976, file: !863, line: 229, type: !61)
!7979 = !DILocalVariable(name: "ulNewBASEPRI", scope: !7976, file: !863, line: 229, type: !61)
!7980 = distinct !DILocation(line: 1099, column: 27, scope: !7967)
!7981 = !{i64 815127, i64 815164, i64 815196, i64 815232, i64 815259}
!7982 = !DILocation(line: 0, scope: !7976, inlinedAt: !7980)
!7983 = !DILocation(line: 1103, column: 12, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7967, file: !839, line: 1100, column: 3)
!7985 = !DILocation(line: 1104, column: 22, scope: !7984)
!7986 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !7987, file: !863, line: 247, type: !61)
!7987 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2873, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7988)
!7988 = !{!7986}
!7989 = !DILocation(line: 0, scope: !7987, inlinedAt: !7990)
!7990 = distinct !DILocation(line: 1106, column: 3, scope: !7967)
!7991 = !DILocation(line: 249, column: 2, scope: !7987, inlinedAt: !7990)
!7992 = !{i64 815660}
!7993 = !DILocation(line: 1108, column: 3, scope: !7967)
!7994 = distinct !DISubprogram(name: "vTaskPrioritySet", scope: !839, file: !839, line: 1116, type: !7995, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !7997)
!7995 = !DISubroutineType(types: !7996)
!7996 = !{null, !868, !862}
!7997 = !{!7998, !7999, !8000, !8001, !8002, !8003}
!7998 = !DILocalVariable(name: "xTask", arg: 1, scope: !7994, file: !839, line: 1116, type: !868)
!7999 = !DILocalVariable(name: "uxNewPriority", arg: 2, scope: !7994, file: !839, line: 1116, type: !862)
!8000 = !DILocalVariable(name: "pxTCB", scope: !7994, file: !839, line: 1118, type: !870)
!8001 = !DILocalVariable(name: "uxCurrentBasePriority", scope: !7994, file: !839, line: 1119, type: !862)
!8002 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !7994, file: !839, line: 1119, type: !862)
!8003 = !DILocalVariable(name: "xYieldRequired", scope: !7994, file: !839, line: 1120, type: !869)
!8004 = !DILocation(line: 0, scope: !7994)
!8005 = !DILocation(line: 1122, column: 3, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7994, file: !839, line: 1122, column: 3)
!8007 = !DILocation(line: 1122, column: 3, scope: !7994)
!8008 = !DILocation(line: 1122, column: 3, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8006, file: !839, line: 1122, column: 3)
!8010 = !DILocation(line: 1125, column: 7, scope: !7994)
!8011 = !DILocation(line: 1134, column: 3, scope: !7994)
!8012 = !DILocation(line: 1138, column: 12, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7994, file: !839, line: 1135, column: 3)
!8014 = !DILocation(line: 1144, column: 36, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8013, file: !839, line: 1143, column: 4)
!8016 = !DILocation(line: 1152, column: 30, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8013, file: !839, line: 1152, column: 8)
!8018 = !DILocation(line: 1152, column: 8, scope: !8013)
!8019 = !DILocation(line: 1156, column: 23, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !839, line: 1156, column: 9)
!8021 = distinct !DILexicalBlock(scope: !8017, file: !839, line: 1153, column: 4)
!8022 = !DILocation(line: 0, scope: !8020)
!8023 = !DILocation(line: 1156, column: 9, scope: !8021)
!8024 = !DILocation(line: 1163, column: 28, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !839, line: 1163, column: 11)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !839, line: 1159, column: 6)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !839, line: 1158, column: 10)
!8028 = distinct !DILexicalBlock(scope: !8020, file: !839, line: 1157, column: 5)
!8029 = !DILocation(line: 1163, column: 42, scope: !8025)
!8030 = !DILocation(line: 1163, column: 25, scope: !8025)
!8031 = !DILocation(line: 1163, column: 11, scope: !8026)
!8032 = !DILocation(line: 1196, column: 36, scope: !8021)
!8033 = !DILocation(line: 1202, column: 32, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !839, line: 1202, column: 10)
!8035 = distinct !DILexicalBlock(scope: !8021, file: !839, line: 1199, column: 5)
!8036 = !DILocation(line: 1202, column: 10, scope: !8035)
!8037 = !DILocation(line: 1204, column: 25, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8034, file: !839, line: 1203, column: 6)
!8039 = !DILocation(line: 1205, column: 6, scope: !8038)
!8040 = !DILocation(line: 1212, column: 28, scope: !8035)
!8041 = !DILocation(line: 1222, column: 11, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8021, file: !839, line: 1222, column: 9)
!8043 = !DILocation(line: 1222, column: 102, scope: !8042)
!8044 = !DILocation(line: 1222, column: 9, scope: !8021)
!8045 = !DILocation(line: 1224, column: 6, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8042, file: !839, line: 1223, column: 5)
!8047 = !DILocation(line: 1225, column: 5, scope: !8046)
!8048 = !DILocation(line: 1235, column: 9, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8021, file: !839, line: 1235, column: 9)
!8050 = !DILocation(line: 1235, column: 9, scope: !8021)
!8051 = !DILocation(line: 1240, column: 10, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !839, line: 1240, column: 10)
!8053 = distinct !DILexicalBlock(scope: !8049, file: !839, line: 1236, column: 5)
!8054 = !DILocation(line: 1240, column: 55, scope: !8052)
!8055 = !DILocation(line: 1240, column: 10, scope: !8053)
!8056 = !DILocation(line: 1245, column: 7, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8052, file: !839, line: 1241, column: 6)
!8058 = !DILocation(line: 1246, column: 6, scope: !8057)
!8059 = !DILocation(line: 1251, column: 6, scope: !8053)
!8060 = !DILocation(line: 1252, column: 5, scope: !8053)
!8061 = !DILocation(line: 1258, column: 9, scope: !8021)
!8062 = !DILocation(line: 1260, column: 6, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !839, line: 1260, column: 6)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !839, line: 1259, column: 5)
!8065 = distinct !DILexicalBlock(scope: !8021, file: !839, line: 1258, column: 9)
!8066 = !{i64 2148480576}
!8067 = !{i64 2148480616}
!8068 = !DILocation(line: 1261, column: 5, scope: !8064)
!8069 = !DILocation(line: 1272, column: 3, scope: !7994)
!8070 = !DILocation(line: 1273, column: 2, scope: !7994)
!8071 = distinct !DISubprogram(name: "vTaskSuspend", scope: !839, file: !839, line: 1280, type: !7537, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8072)
!8072 = !{!8073, !8074}
!8073 = !DILocalVariable(name: "xTaskToSuspend", arg: 1, scope: !8071, file: !839, line: 1280, type: !868)
!8074 = !DILocalVariable(name: "pxTCB", scope: !8071, file: !839, line: 1282, type: !870)
!8075 = !DILocation(line: 0, scope: !8071)
!8076 = !DILocation(line: 1284, column: 3, scope: !8071)
!8077 = !DILocation(line: 1288, column: 12, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8071, file: !839, line: 1285, column: 3)
!8079 = !DILocation(line: 1294, column: 32, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8078, file: !839, line: 1294, column: 8)
!8081 = !DILocation(line: 1294, column: 8, scope: !8080)
!8082 = !DILocation(line: 1294, column: 53, scope: !8080)
!8083 = !DILocation(line: 1294, column: 8, scope: !8078)
!8084 = !DILocation(line: 1296, column: 5, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !839, line: 1296, column: 5)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !839, line: 1296, column: 5)
!8087 = distinct !DILexicalBlock(scope: !8080, file: !839, line: 1295, column: 4)
!8088 = !DILocation(line: 1296, column: 5, scope: !8086)
!8089 = !DILocation(line: 1296, column: 5, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8085, file: !839, line: 1296, column: 5)
!8091 = !DILocation(line: 1304, column: 8, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8078, file: !839, line: 1304, column: 8)
!8093 = !DILocation(line: 1304, column: 62, scope: !8092)
!8094 = !DILocation(line: 1304, column: 8, scope: !8078)
!8095 = !DILocation(line: 1306, column: 14, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8092, file: !839, line: 1305, column: 4)
!8097 = !DILocation(line: 1307, column: 4, scope: !8096)
!8098 = !DILocation(line: 1313, column: 4, scope: !8078)
!8099 = !DILocation(line: 1315, column: 3, scope: !8071)
!8100 = !DILocation(line: 1317, column: 16, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8071, file: !839, line: 1317, column: 7)
!8102 = !DILocation(line: 1317, column: 13, scope: !8101)
!8103 = !DILocation(line: 0, scope: !8101)
!8104 = !DILocation(line: 1317, column: 7, scope: !8071)
!8105 = !DILocation(line: 1319, column: 8, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8101, file: !839, line: 1318, column: 3)
!8107 = !DILocation(line: 1322, column: 5, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !839, line: 1322, column: 5)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !839, line: 1320, column: 4)
!8110 = distinct !DILexicalBlock(scope: !8106, file: !839, line: 1319, column: 8)
!8111 = !DILocation(line: 1322, column: 5, scope: !8109)
!8112 = !DILocation(line: 1322, column: 5, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8108, file: !839, line: 1322, column: 5)
!8114 = !DILocation(line: 1323, column: 5, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8109, file: !839, line: 1323, column: 5)
!8116 = !{i64 2148482025}
!8117 = !{i64 2148482065}
!8118 = !DILocation(line: 1324, column: 4, scope: !8109)
!8119 = !DILocation(line: 1330, column: 9, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !839, line: 1330, column: 9)
!8121 = distinct !DILexicalBlock(scope: !8110, file: !839, line: 1326, column: 4)
!8122 = !DILocation(line: 1330, column: 59, scope: !8120)
!8123 = !DILocation(line: 1330, column: 56, scope: !8120)
!8124 = !DILocation(line: 1330, column: 9, scope: !8121)
!8125 = !DILocation(line: 1336, column: 19, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8120, file: !839, line: 1331, column: 5)
!8127 = !DILocation(line: 1337, column: 5, scope: !8126)
!8128 = !DILocation(line: 1340, column: 6, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8120, file: !839, line: 1339, column: 5)
!8130 = !DILocation(line: 1346, column: 8, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8101, file: !839, line: 1345, column: 3)
!8132 = !DILocation(line: 1351, column: 5, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !839, line: 1347, column: 4)
!8134 = distinct !DILexicalBlock(scope: !8131, file: !839, line: 1346, column: 8)
!8135 = !DILocation(line: 1353, column: 6, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8133, file: !839, line: 1352, column: 5)
!8137 = !DILocation(line: 1355, column: 5, scope: !8133)
!8138 = !DILocation(line: 1356, column: 4, scope: !8133)
!8139 = !DILocation(line: 1362, column: 2, scope: !8071)
!8140 = !DILocation(line: 2200, column: 6, scope: !931)
!8141 = !DILocation(line: 2200, column: 27, scope: !931)
!8142 = !DILocation(line: 2200, column: 6, scope: !926)
!8143 = !DILocation(line: 2204, column: 17, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !931, file: !839, line: 2201, column: 2)
!8145 = !DILocation(line: 2205, column: 2, scope: !8144)
!8146 = !DILocation(line: 2208, column: 17, scope: !930)
!8147 = !DILocation(line: 2239, column: 3, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !839, line: 2239, column: 3)
!8149 = distinct !DILexicalBlock(scope: !930, file: !839, line: 2239, column: 3)
!8150 = !DILocation(line: 2239, column: 3, scope: !8149)
!8151 = !DILocation(line: 2239, column: 3, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !839, line: 2239, column: 3)
!8153 = distinct !DILexicalBlock(scope: !8148, file: !839, line: 2239, column: 3)
!8154 = !DILocation(line: 2239, column: 3, scope: !8153)
!8155 = !DILocation(line: 2239, column: 3, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8152, file: !839, line: 2239, column: 3)
!8157 = !DILocation(line: 2240, column: 3, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !839, line: 2240, column: 3)
!8159 = distinct !DILexicalBlock(scope: !930, file: !839, line: 2240, column: 3)
!8160 = !DILocation(line: 2240, column: 3, scope: !8159)
!8161 = !DILocation(line: 2240, column: 3, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !839, line: 2240, column: 3)
!8163 = distinct !DILexicalBlock(scope: !8158, file: !839, line: 2240, column: 3)
!8164 = !DILocation(line: 2240, column: 3, scope: !8163)
!8165 = !DILocation(line: 2240, column: 3, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8162, file: !839, line: 2240, column: 3)
!8167 = !DILocation(line: 2244, column: 3, scope: !929)
!8168 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !8169, file: !863, line: 172, type: !61)
!8169 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !863, file: !863, line: 172, type: !8170, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8172)
!8170 = !DISubroutineType(types: !8171)
!8171 = !{!54, !61}
!8172 = !{!8168, !8173}
!8173 = !DILocalVariable(name: "ucReturn", scope: !8169, file: !863, line: 174, type: !54)
!8174 = !DILocation(line: 0, scope: !8169, inlinedAt: !8175)
!8175 = distinct !DILocation(line: 2244, column: 3, scope: !929)
!8176 = !DILocation(line: 176, column: 3, scope: !8169, inlinedAt: !8175)
!8177 = !{i64 813219}
!8178 = !DILocation(line: 0, scope: !929)
!8179 = !DILocation(line: 2244, column: 3, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !929, file: !839, line: 2244, column: 3)
!8181 = !DILocation(line: 2244, column: 3, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8180, file: !839, line: 2244, column: 3)
!8183 = !DILocation(line: 0, scope: !933)
!8184 = !DILocation(line: 2244, column: 3, scope: !933)
!8185 = !DILocation(line: 2244, column: 3, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !933, file: !839, line: 2244, column: 3)
!8187 = !DILocation(line: 2244, column: 3, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8186, file: !839, line: 2244, column: 3)
!8189 = !DILocation(line: 2255, column: 1, scope: !926)
!8190 = distinct !DISubprogram(name: "vTaskResume", scope: !839, file: !839, line: 1415, type: !7537, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8191)
!8191 = !{!8192, !8193}
!8192 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !8190, file: !839, line: 1415, type: !868)
!8193 = !DILocalVariable(name: "pxTCB", scope: !8190, file: !839, line: 1417, type: !7467)
!8194 = !DILocation(line: 0, scope: !8190)
!8195 = !DILocation(line: 1420, column: 3, scope: !8190)
!8196 = !DILocation(line: 1420, column: 3, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !839, line: 1420, column: 3)
!8198 = distinct !DILexicalBlock(scope: !8190, file: !839, line: 1420, column: 3)
!8199 = !DILocation(line: 1424, column: 25, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8190, file: !839, line: 1424, column: 7)
!8201 = !DILocation(line: 1417, column: 24, scope: !8190)
!8202 = !DILocation(line: 1424, column: 39, scope: !8200)
!8203 = !DILocation(line: 1424, column: 36, scope: !8200)
!8204 = !DILocation(line: 1424, column: 7, scope: !8190)
!8205 = !DILocation(line: 1426, column: 4, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8200, file: !839, line: 1425, column: 3)
!8207 = !DILocation(line: 1428, column: 9, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !839, line: 1428, column: 9)
!8209 = distinct !DILexicalBlock(scope: !8206, file: !839, line: 1427, column: 4)
!8210 = !DILocation(line: 1428, column: 41, scope: !8208)
!8211 = !DILocation(line: 1428, column: 9, scope: !8209)
!8212 = !DILocation(line: 1434, column: 40, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8208, file: !839, line: 1429, column: 5)
!8214 = !DILocation(line: 1434, column: 15, scope: !8213)
!8215 = !DILocation(line: 1435, column: 6, scope: !8213)
!8216 = !DILocation(line: 1438, column: 17, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8213, file: !839, line: 1438, column: 10)
!8218 = !DILocation(line: 1438, column: 31, scope: !8217)
!8219 = !DILocation(line: 1438, column: 45, scope: !8217)
!8220 = !DILocation(line: 1438, column: 28, scope: !8217)
!8221 = !DILocation(line: 1438, column: 10, scope: !8213)
!8222 = !DILocation(line: 1443, column: 7, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !839, line: 1443, column: 7)
!8224 = distinct !DILexicalBlock(scope: !8217, file: !839, line: 1439, column: 6)
!8225 = !{i64 2148483928}
!8226 = !{i64 2148483968}
!8227 = !DILocation(line: 1444, column: 6, scope: !8224)
!8228 = !DILocation(line: 1455, column: 4, scope: !8206)
!8229 = !DILocation(line: 1456, column: 3, scope: !8206)
!8230 = !DILocation(line: 1461, column: 2, scope: !8190)
!8231 = distinct !DISubprogram(name: "prvTaskIsTaskSuspended", scope: !839, file: !839, line: 1369, type: !8232, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8235)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!869, !8234}
!8234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!8235 = !{!8236, !8237, !8238}
!8236 = !DILocalVariable(name: "xTask", arg: 1, scope: !8231, file: !839, line: 1369, type: !8234)
!8237 = !DILocalVariable(name: "xReturn", scope: !8231, file: !839, line: 1371, type: !869)
!8238 = !DILocalVariable(name: "pxTCB", scope: !8231, file: !839, line: 1372, type: !7916)
!8239 = !DILocation(line: 0, scope: !8231)
!8240 = !DILocation(line: 1378, column: 3, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8231, file: !839, line: 1378, column: 3)
!8242 = !DILocation(line: 1378, column: 3, scope: !8231)
!8243 = !DILocation(line: 1378, column: 3, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8241, file: !839, line: 1378, column: 3)
!8245 = !DILocation(line: 1381, column: 7, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8231, file: !839, line: 1381, column: 7)
!8247 = !DILocation(line: 1381, column: 7, scope: !8231)
!8248 = !DILocation(line: 1384, column: 8, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !839, line: 1384, column: 8)
!8250 = distinct !DILexicalBlock(scope: !8246, file: !839, line: 1382, column: 3)
!8251 = !DILocation(line: 1384, column: 8, scope: !8250)
!8252 = !DILocation(line: 1407, column: 3, scope: !8231)
!8253 = distinct !DISubprogram(name: "xTaskResumeFromISR", scope: !839, file: !839, line: 1469, type: !8254, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8256)
!8254 = !DISubroutineType(types: !8255)
!8255 = !{!869, !868}
!8256 = !{!8257, !8258, !8259, !8260}
!8257 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !8253, file: !839, line: 1469, type: !868)
!8258 = !DILocalVariable(name: "xYieldRequired", scope: !8253, file: !839, line: 1471, type: !869)
!8259 = !DILocalVariable(name: "pxTCB", scope: !8253, file: !839, line: 1472, type: !7467)
!8260 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !8253, file: !839, line: 1473, type: !862)
!8261 = !DILocation(line: 0, scope: !8253)
!8262 = !DILocation(line: 1475, column: 3, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8253, file: !839, line: 1475, column: 3)
!8264 = !DILocation(line: 1475, column: 3, scope: !8253)
!8265 = !DILocation(line: 1475, column: 3, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8263, file: !839, line: 1475, column: 3)
!8267 = !DILocation(line: 1493, column: 3, scope: !8253)
!8268 = !DILocation(line: 231, column: 2, scope: !7976, inlinedAt: !8269)
!8269 = distinct !DILocation(line: 1495, column: 28, scope: !8253)
!8270 = !DILocation(line: 0, scope: !7976, inlinedAt: !8269)
!8271 = !DILocation(line: 1497, column: 8, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !839, line: 1497, column: 8)
!8273 = distinct !DILexicalBlock(scope: !8253, file: !839, line: 1496, column: 3)
!8274 = !DILocation(line: 1497, column: 40, scope: !8272)
!8275 = !DILocation(line: 1497, column: 8, scope: !8273)
!8276 = !DILocation(line: 1502, column: 9, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !839, line: 1502, column: 9)
!8278 = distinct !DILexicalBlock(scope: !8272, file: !839, line: 1498, column: 4)
!8279 = !DILocation(line: 1502, column: 30, scope: !8277)
!8280 = !DILocation(line: 1502, column: 9, scope: !8278)
!8281 = !DILocation(line: 1506, column: 17, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !839, line: 1506, column: 10)
!8283 = distinct !DILexicalBlock(scope: !8277, file: !839, line: 1503, column: 5)
!8284 = !DILocation(line: 1506, column: 31, scope: !8282)
!8285 = !DILocation(line: 1506, column: 45, scope: !8282)
!8286 = !DILocation(line: 1506, column: 28, scope: !8282)
!8287 = !DILocation(line: 1506, column: 10, scope: !8283)
!8288 = !DILocation(line: 1515, column: 40, scope: !8283)
!8289 = !DILocation(line: 1515, column: 15, scope: !8283)
!8290 = !DILocation(line: 1516, column: 6, scope: !8283)
!8291 = !DILocation(line: 1517, column: 5, scope: !8283)
!8292 = !DILocation(line: 1523, column: 56, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8277, file: !839, line: 1519, column: 5)
!8294 = !DILocation(line: 1523, column: 6, scope: !8293)
!8295 = !DILocation(line: 0, scope: !7987, inlinedAt: !8296)
!8296 = distinct !DILocation(line: 1531, column: 3, scope: !8253)
!8297 = !DILocation(line: 249, column: 2, scope: !7987, inlinedAt: !8296)
!8298 = !DILocation(line: 1533, column: 3, scope: !8253)
!8299 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !839, file: !839, line: 1539, type: !154, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8300)
!8300 = !{!8301}
!8301 = !DILocalVariable(name: "xReturn", scope: !8299, file: !839, line: 1541, type: !869)
!8302 = !DILocation(line: 1553, column: 13, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8299, file: !839, line: 1551, column: 2)
!8304 = !DILocation(line: 0, scope: !8299)
!8305 = !DILocation(line: 1559, column: 15, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !839, line: 1559, column: 7)
!8307 = distinct !DILexicalBlock(scope: !8299, file: !839, line: 1558, column: 2)
!8308 = !DILocation(line: 1559, column: 7, scope: !8307)
!8309 = !DILocation(line: 1561, column: 14, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8306, file: !839, line: 1560, column: 3)
!8311 = !DILocation(line: 1562, column: 3, scope: !8310)
!8312 = !DILocation(line: 1570, column: 6, scope: !8299)
!8313 = !DILocation(line: 215, column: 2, scope: !8314, inlinedAt: !8317)
!8314 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !863, file: !863, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8315)
!8315 = !{!8316}
!8316 = !DILocalVariable(name: "ulNewBASEPRI", scope: !8314, file: !863, line: 213, type: !61)
!8317 = distinct !DILocation(line: 1577, column: 3, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !839, line: 1571, column: 2)
!8319 = distinct !DILexicalBlock(scope: !8299, file: !839, line: 1570, column: 6)
!8320 = !{i64 814739, i64 814772, i64 814808, i64 814835}
!8321 = !DILocation(line: 0, scope: !8314, inlinedAt: !8317)
!8322 = !DILocation(line: 1587, column: 21, scope: !8318)
!8323 = !DILocation(line: 1588, column: 14, scope: !8318)
!8324 = !DILocation(line: 1597, column: 7, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8318, file: !839, line: 1597, column: 7)
!8326 = !DILocation(line: 1606, column: 2, scope: !8318)
!8327 = !DILocation(line: 1612, column: 3, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !839, line: 1612, column: 3)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !839, line: 1612, column: 3)
!8330 = distinct !DILexicalBlock(scope: !8319, file: !839, line: 1608, column: 2)
!8331 = !DILocation(line: 1614, column: 1, scope: !8299)
!8332 = distinct !DISubprogram(name: "prvIdleTask", scope: !839, file: !839, line: 2653, type: !640, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8333)
!8333 = !{!8334}
!8334 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !8332, file: !839, line: 2653, type: !51)
!8335 = !DILocation(line: 0, scope: !8332)
!8336 = !DILocation(line: 2658, column: 2, scope: !8332)
!8337 = !DILocation(line: 2661, column: 3, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !839, line: 2659, column: 2)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !839, line: 2658, column: 2)
!8340 = distinct !DILexicalBlock(scope: !8332, file: !839, line: 2658, column: 2)
!8341 = !DILocation(line: 2684, column: 8, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !839, line: 2684, column: 8)
!8343 = distinct !DILexicalBlock(scope: !8338, file: !839, line: 2674, column: 3)
!8344 = !DILocation(line: 2684, column: 78, scope: !8342)
!8345 = !DILocation(line: 2684, column: 8, scope: !8343)
!8346 = distinct !{!8346, !8347, !8348}
!8347 = !DILocation(line: 2658, column: 2, scope: !8340)
!8348 = !DILocation(line: 2754, column: 2, scope: !8340)
!8349 = !DILocation(line: 2686, column: 5, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !839, line: 2686, column: 5)
!8351 = distinct !DILexicalBlock(scope: !8342, file: !839, line: 2685, column: 4)
!8352 = !{i64 2148497158}
!8353 = !{i64 2148497198}
!8354 = !DILocation(line: 2687, column: 4, scope: !8351)
!8355 = distinct !DISubprogram(name: "prvCheckTasksWaitingTermination", scope: !839, file: !839, line: 2950, type: !154, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8356)
!8356 = !{!8357, !8359}
!8357 = !DILocalVariable(name: "xListIsEmpty", scope: !8358, file: !839, line: 2954, type: !869)
!8358 = distinct !DILexicalBlock(scope: !8355, file: !839, line: 2953, column: 2)
!8359 = !DILocalVariable(name: "pxTCB", scope: !8360, file: !839, line: 2968, type: !870)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !839, line: 2967, column: 4)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !839, line: 2966, column: 8)
!8362 = distinct !DILexicalBlock(scope: !8358, file: !839, line: 2959, column: 3)
!8363 = !DILocation(line: 2958, column: 10, scope: !8358)
!8364 = !DILocation(line: 2958, column: 25, scope: !8358)
!8365 = !DILocation(line: 2958, column: 3, scope: !8358)
!8366 = !DILocation(line: 2960, column: 4, scope: !8362)
!8367 = !DILocation(line: 2962, column: 20, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8362, file: !839, line: 2961, column: 4)
!8369 = !DILocation(line: 0, scope: !8358)
!8370 = !DILocation(line: 2964, column: 13, scope: !8362)
!8371 = !DILocation(line: 2966, column: 8, scope: !8362)
!8372 = !DILocation(line: 2970, column: 5, scope: !8360)
!8373 = !DILocation(line: 2972, column: 26, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8360, file: !839, line: 2971, column: 5)
!8375 = !DILocation(line: 0, scope: !8360)
!8376 = !DILocation(line: 2973, column: 39, scope: !8374)
!8377 = !DILocation(line: 2973, column: 15, scope: !8374)
!8378 = !DILocation(line: 2974, column: 6, scope: !8374)
!8379 = !DILocation(line: 2975, column: 6, scope: !8374)
!8380 = !DILocation(line: 2977, column: 5, scope: !8360)
!8381 = !DILocation(line: 2979, column: 5, scope: !8360)
!8382 = !DILocation(line: 2980, column: 4, scope: !8360)
!8383 = distinct !{!8383, !8365, !8384}
!8384 = !DILocation(line: 2985, column: 3, scope: !8358)
!8385 = !DILocation(line: 2988, column: 1, scope: !8355)
!8386 = distinct !DISubprogram(name: "prvDeleteTCB", scope: !839, file: !839, line: 3231, type: !8387, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8389)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{null, !870}
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !8386, file: !839, line: 3231, type: !870)
!8391 = !DILocation(line: 0, scope: !8386)
!8392 = !DILocation(line: 3257, column: 4, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8386, file: !839, line: 3256, column: 3)
!8394 = !DILocation(line: 3261, column: 14, scope: !8386)
!8395 = !DILocation(line: 3261, column: 3, scope: !8386)
!8396 = !DILocation(line: 3262, column: 2, scope: !8386)
!8397 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !839, file: !839, line: 1617, type: !154, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !1397)
!8398 = !DILocation(line: 215, column: 2, scope: !8314, inlinedAt: !8399)
!8399 = distinct !DILocation(line: 1622, column: 2, scope: !8397)
!8400 = !DILocation(line: 0, scope: !8314, inlinedAt: !8399)
!8401 = !DILocation(line: 1623, column: 20, scope: !8397)
!8402 = !DILocation(line: 1624, column: 2, scope: !8397)
!8403 = !DILocation(line: 1625, column: 1, scope: !8397)
!8404 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !839, file: !839, line: 1759, type: !8405, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8407)
!8405 = !DISubroutineType(types: !8406)
!8406 = !{!884}
!8407 = !{!8408}
!8408 = !DILocalVariable(name: "xTicks", scope: !8404, file: !839, line: 1761, type: !884)
!8409 = !DILocation(line: 1766, column: 12, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8404, file: !839, line: 1765, column: 2)
!8411 = !DILocation(line: 0, scope: !8404)
!8412 = !DILocation(line: 1770, column: 2, scope: !8404)
!8413 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !839, file: !839, line: 1774, type: !8405, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8414)
!8414 = !{!8415, !8416}
!8415 = !DILocalVariable(name: "xReturn", scope: !8413, file: !839, line: 1776, type: !884)
!8416 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !8413, file: !839, line: 1777, type: !862)
!8417 = !DILocation(line: 1793, column: 2, scope: !8413)
!8418 = !DILocation(line: 0, scope: !8413)
!8419 = !DILocation(line: 1797, column: 13, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8413, file: !839, line: 1796, column: 2)
!8421 = !DILocation(line: 1801, column: 2, scope: !8413)
!8422 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !839, file: !839, line: 1805, type: !8423, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !1397)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!862}
!8425 = !DILocation(line: 1809, column: 9, scope: !8422)
!8426 = !DILocation(line: 1809, column: 2, scope: !8422)
!8427 = distinct !DISubprogram(name: "pcTaskGetTaskName", scope: !839, file: !839, line: 1815, type: !8428, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8430)
!8428 = !DISubroutineType(types: !8429)
!8429 = !{!201, !868}
!8430 = !{!8431, !8432}
!8431 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !8427, file: !839, line: 1815, type: !868)
!8432 = !DILocalVariable(name: "pxTCB", scope: !8427, file: !839, line: 1817, type: !870)
!8433 = !DILocation(line: 0, scope: !8427)
!8434 = !DILocation(line: 1820, column: 11, scope: !8427)
!8435 = !DILocation(line: 1821, column: 3, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8427, file: !839, line: 1821, column: 3)
!8437 = !DILocation(line: 1821, column: 3, scope: !8427)
!8438 = !DILocation(line: 1821, column: 3, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8436, file: !839, line: 1821, column: 3)
!8440 = !DILocation(line: 1822, column: 13, scope: !8427)
!8441 = !DILocation(line: 1822, column: 3, scope: !8427)
!8442 = distinct !DISubprogram(name: "uxTaskGetSystemState", scope: !839, file: !839, line: 1830, type: !8443, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8460)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{!862, !8445, !8458, !8459}
!8445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8446)
!8446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8447, size: 32)
!8447 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskStatus_t", file: !847, line: 176, baseType: !8448)
!8448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTASK_STATUS", file: !847, line: 166, size: 256, elements: !8449)
!8449 = !{!8450, !8451, !8452, !8453, !8454, !8455, !8456, !8457}
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !8448, file: !847, line: 168, baseType: !868, size: 32)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !8448, file: !847, line: 169, baseType: !331, size: 32, offset: 32)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "xTaskNumber", scope: !8448, file: !847, line: 170, baseType: !862, size: 32, offset: 64)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "eCurrentState", scope: !8448, file: !847, line: 171, baseType: !7910, size: 32, offset: 96)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "uxCurrentPriority", scope: !8448, file: !847, line: 172, baseType: !862, size: 32, offset: 128)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !8448, file: !847, line: 173, baseType: !862, size: 32, offset: 160)
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "ulRunTimeCounter", scope: !8448, file: !847, line: 174, baseType: !61, size: 32, offset: 192)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "usStackHighWaterMark", scope: !8448, file: !847, line: 175, baseType: !864, size: 16, offset: 224)
!8458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!8459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2833)
!8460 = !{!8461, !8462, !8463, !8464, !8465}
!8461 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !8442, file: !839, line: 1830, type: !8445)
!8462 = !DILocalVariable(name: "uxArraySize", arg: 2, scope: !8442, file: !839, line: 1830, type: !8458)
!8463 = !DILocalVariable(name: "pulTotalRunTime", arg: 3, scope: !8442, file: !839, line: 1830, type: !8459)
!8464 = !DILocalVariable(name: "uxTask", scope: !8442, file: !839, line: 1832, type: !862)
!8465 = !DILocalVariable(name: "uxQueue", scope: !8442, file: !839, line: 1832, type: !862)
!8466 = !DILocation(line: 0, scope: !8442)
!8467 = !DILocation(line: 1834, column: 3, scope: !8442)
!8468 = !DILocation(line: 1837, column: 23, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !839, line: 1837, column: 8)
!8470 = distinct !DILexicalBlock(scope: !8442, file: !839, line: 1835, column: 3)
!8471 = !DILocation(line: 1837, column: 20, scope: !8469)
!8472 = !DILocation(line: 1837, column: 8, scope: !8470)
!8473 = !DILocation(line: 1843, column: 13, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !839, line: 1842, column: 5)
!8475 = distinct !DILexicalBlock(scope: !8469, file: !839, line: 1838, column: 4)
!8476 = !DILocation(line: 1844, column: 48, scope: !8474)
!8477 = !DILocation(line: 1844, column: 82, scope: !8474)
!8478 = !DILocation(line: 1844, column: 16, scope: !8474)
!8479 = !DILocation(line: 1844, column: 13, scope: !8474)
!8480 = !DILocation(line: 1846, column: 22, scope: !8475)
!8481 = !DILocation(line: 1846, column: 5, scope: !8474)
!8482 = distinct !{!8482, !8483, !8484}
!8483 = !DILocation(line: 1841, column: 5, scope: !8475)
!8484 = !DILocation(line: 1846, column: 57, scope: !8475)
!8485 = !DILocation(line: 1850, column: 47, scope: !8475)
!8486 = !DILocation(line: 1850, column: 91, scope: !8475)
!8487 = !DILocation(line: 1850, column: 15, scope: !8475)
!8488 = !DILocation(line: 1850, column: 12, scope: !8475)
!8489 = !DILocation(line: 1851, column: 47, scope: !8475)
!8490 = !DILocation(line: 1851, column: 91, scope: !8475)
!8491 = !DILocation(line: 1851, column: 15, scope: !8475)
!8492 = !DILocation(line: 1851, column: 12, scope: !8475)
!8493 = !DILocation(line: 1857, column: 48, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8475, file: !839, line: 1854, column: 5)
!8495 = !DILocation(line: 1857, column: 16, scope: !8494)
!8496 = !DILocation(line: 1857, column: 13, scope: !8494)
!8497 = !DILocation(line: 1865, column: 48, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8475, file: !839, line: 1862, column: 5)
!8499 = !DILocation(line: 1865, column: 16, scope: !8498)
!8500 = !DILocation(line: 1865, column: 13, scope: !8498)
!8501 = !DILocation(line: 1882, column: 26, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !839, line: 1882, column: 10)
!8503 = distinct !DILexicalBlock(scope: !8475, file: !839, line: 1881, column: 5)
!8504 = !DILocation(line: 1882, column: 10, scope: !8503)
!8505 = !DILocation(line: 1884, column: 24, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8502, file: !839, line: 1883, column: 6)
!8507 = !DILocation(line: 1885, column: 6, scope: !8506)
!8508 = !DILocation(line: 1894, column: 12, scope: !8442)
!8509 = !DILocation(line: 1896, column: 3, scope: !8442)
!8510 = distinct !DISubprogram(name: "prvListTaskWithinSingleList", scope: !839, file: !839, line: 3098, type: !8511, scopeLine: 3099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8513)
!8511 = !DISubroutineType(types: !8512)
!8512 = !{!862, !8446, !905, !7910}
!8513 = !{!8514, !8515, !8516, !8517, !8520, !8521, !8522, !8526}
!8514 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !8510, file: !839, line: 3098, type: !8446)
!8515 = !DILocalVariable(name: "pxList", arg: 2, scope: !8510, file: !839, line: 3098, type: !905)
!8516 = !DILocalVariable(name: "eState", arg: 3, scope: !8510, file: !839, line: 3098, type: !7910)
!8517 = !DILocalVariable(name: "pxNextTCB", scope: !8510, file: !839, line: 3100, type: !8518)
!8518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8519, size: 32)
!8519 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !871)
!8520 = !DILocalVariable(name: "pxFirstTCB", scope: !8510, file: !839, line: 3100, type: !8518)
!8521 = !DILocalVariable(name: "uxTask", scope: !8510, file: !839, line: 3101, type: !862)
!8522 = !DILocalVariable(name: "pxConstList", scope: !8523, file: !839, line: 3105, type: !934)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !839, line: 3105, column: 4)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !839, line: 3104, column: 3)
!8525 = distinct !DILexicalBlock(scope: !8510, file: !839, line: 3103, column: 7)
!8526 = !DILocalVariable(name: "pxConstList", scope: !8527, file: !839, line: 3113, type: !934)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !839, line: 3113, column: 5)
!8528 = distinct !DILexicalBlock(scope: !8524, file: !839, line: 3112, column: 4)
!8529 = !DILocation(line: 0, scope: !8510)
!8530 = !DILocation(line: 3103, column: 7, scope: !8525)
!8531 = !DILocation(line: 3103, column: 41, scope: !8525)
!8532 = !DILocation(line: 3103, column: 7, scope: !8510)
!8533 = !DILocation(line: 0, scope: !8523)
!8534 = !DILocation(line: 3105, column: 4, scope: !8523)
!8535 = !DILocation(line: 3105, column: 4, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8523, file: !839, line: 3105, column: 4)
!8537 = !DILocation(line: 3105, column: 4, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8536, file: !839, line: 3105, column: 4)
!8539 = !DILocation(line: 3111, column: 4, scope: !8524)
!8540 = !DILocation(line: 3113, column: 5, scope: !8527)
!8541 = !DILocation(line: 0, scope: !8527)
!8542 = !DILocation(line: 3113, column: 5, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8527, file: !839, line: 3113, column: 5)
!8544 = !DILocation(line: 3113, column: 5, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8543, file: !839, line: 3113, column: 5)
!8546 = !DILocation(line: 3115, column: 33, scope: !8528)
!8547 = !DILocation(line: 3115, column: 41, scope: !8528)
!8548 = !DILocation(line: 3116, column: 77, scope: !8528)
!8549 = !DILocation(line: 3116, column: 33, scope: !8528)
!8550 = !DILocation(line: 3116, column: 44, scope: !8528)
!8551 = !DILocation(line: 3117, column: 58, scope: !8528)
!8552 = !DILocation(line: 3117, column: 33, scope: !8528)
!8553 = !DILocation(line: 3117, column: 45, scope: !8528)
!8554 = !DILocation(line: 3118, column: 33, scope: !8528)
!8555 = !DILocation(line: 3118, column: 47, scope: !8528)
!8556 = !DILocation(line: 3119, column: 64, scope: !8528)
!8557 = !DILocation(line: 3119, column: 33, scope: !8528)
!8558 = !DILocation(line: 3119, column: 51, scope: !8528)
!8559 = !DILocation(line: 3126, column: 10, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8528, file: !839, line: 3122, column: 5)
!8561 = !DILocation(line: 3128, column: 11, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !839, line: 3128, column: 11)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !839, line: 3127, column: 6)
!8564 = distinct !DILexicalBlock(scope: !8560, file: !839, line: 3126, column: 10)
!8565 = !DILocation(line: 3128, column: 69, scope: !8562)
!8566 = !DILocation(line: 3128, column: 11, scope: !8563)
!8567 = !DILocation(line: 3130, column: 50, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8562, file: !839, line: 3129, column: 7)
!8569 = !DILocation(line: 3131, column: 7, scope: !8568)
!8570 = !DILocation(line: 3138, column: 62, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8528, file: !839, line: 3137, column: 5)
!8572 = !DILocation(line: 3138, column: 34, scope: !8571)
!8573 = !DILocation(line: 3138, column: 49, scope: !8571)
!8574 = !DILocation(line: 3152, column: 34, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8528, file: !839, line: 3151, column: 5)
!8576 = !DILocation(line: 3152, column: 51, scope: !8575)
!8577 = !DILocation(line: 3162, column: 110, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8528, file: !839, line: 3161, column: 5)
!8579 = !DILocation(line: 3162, column: 85, scope: !8578)
!8580 = !DILocation(line: 3162, column: 57, scope: !8578)
!8581 = !DILocation(line: 3162, column: 34, scope: !8578)
!8582 = !DILocation(line: 3162, column: 55, scope: !8578)
!8583 = !DILocation(line: 3166, column: 11, scope: !8528)
!8584 = !DILocation(line: 3168, column: 23, scope: !8524)
!8585 = !DILocation(line: 3168, column: 4, scope: !8528)
!8586 = distinct !{!8586, !8539, !8587}
!8587 = !DILocation(line: 3168, column: 37, scope: !8524)
!8588 = !DILocation(line: 3175, column: 3, scope: !8510)
!8589 = distinct !DISubprogram(name: "prvTaskCheckFreeStackSpace", scope: !839, file: !839, line: 3183, type: !8590, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8592)
!8590 = !DISubroutineType(types: !8591)
!8591 = !{!864, !2415}
!8592 = !{!8593, !8594}
!8593 = !DILocalVariable(name: "pucStackByte", arg: 1, scope: !8589, file: !839, line: 3183, type: !2415)
!8594 = !DILocalVariable(name: "ulCount", scope: !8589, file: !839, line: 3185, type: !61)
!8595 = !DILocation(line: 0, scope: !8589)
!8596 = !DILocation(line: 3187, column: 10, scope: !8589)
!8597 = !DILocation(line: 3187, column: 24, scope: !8589)
!8598 = !DILocation(line: 3187, column: 3, scope: !8589)
!8599 = !DILocation(line: 3189, column: 17, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8589, file: !839, line: 3188, column: 3)
!8601 = !DILocation(line: 3190, column: 11, scope: !8600)
!8602 = distinct !{!8602, !8598, !8603}
!8603 = !DILocation(line: 3191, column: 3, scope: !8589)
!8604 = !DILocation(line: 3193, column: 11, scope: !8589)
!8605 = !DILocation(line: 3195, column: 3, scope: !8589)
!8606 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !839, file: !839, line: 2258, type: !8607, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8609)
!8607 = !DISubroutineType(types: !8608)
!8608 = !{null, !934, !7612}
!8609 = !{!8610, !8611, !8612}
!8610 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8606, file: !839, line: 2258, type: !934)
!8611 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !8606, file: !839, line: 2258, type: !7612)
!8612 = !DILocalVariable(name: "xTimeToWake", scope: !8606, file: !839, line: 2260, type: !884)
!8613 = !DILocation(line: 0, scope: !8606)
!8614 = !DILocation(line: 2262, column: 2, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8606, file: !839, line: 2262, column: 2)
!8616 = !DILocation(line: 2262, column: 2, scope: !8606)
!8617 = !DILocation(line: 2262, column: 2, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8615, file: !839, line: 2262, column: 2)
!8619 = !DILocation(line: 2271, column: 31, scope: !8606)
!8620 = !DILocation(line: 2271, column: 45, scope: !8606)
!8621 = !DILocation(line: 2271, column: 2, scope: !8606)
!8622 = !DILocation(line: 2276, column: 23, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8606, file: !839, line: 2276, column: 6)
!8624 = !DILocation(line: 2276, column: 37, scope: !8623)
!8625 = !DILocation(line: 2276, column: 6, scope: !8623)
!8626 = !DILocation(line: 2276, column: 58, scope: !8623)
!8627 = !DILocation(line: 2276, column: 6, scope: !8606)
!8628 = !DILocation(line: 2280, column: 3, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8623, file: !839, line: 2277, column: 2)
!8630 = !DILocation(line: 2281, column: 2, scope: !8629)
!8631 = !DILocation(line: 2289, column: 20, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !839, line: 2289, column: 7)
!8633 = distinct !DILexicalBlock(scope: !8606, file: !839, line: 2288, column: 2)
!8634 = !DILocation(line: 2289, column: 7, scope: !8633)
!8635 = !DILocation(line: 2294, column: 44, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8632, file: !839, line: 2290, column: 3)
!8637 = !DILocation(line: 2294, column: 58, scope: !8636)
!8638 = !DILocation(line: 2294, column: 4, scope: !8636)
!8639 = !DILocation(line: 2295, column: 3, scope: !8636)
!8640 = !DILocation(line: 2301, column: 18, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8632, file: !839, line: 2297, column: 3)
!8642 = !DILocation(line: 2301, column: 29, scope: !8641)
!8643 = !DILocation(line: 2302, column: 4, scope: !8641)
!8644 = !DILocation(line: 2314, column: 1, scope: !8606)
!8645 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !839, file: !839, line: 2317, type: !8646, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8648)
!8646 = !DISubroutineType(types: !8647)
!8647 = !{null, !905, !7612, !7612}
!8648 = !{!8649, !8650, !8651, !8652}
!8649 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8645, file: !839, line: 2317, type: !905)
!8650 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !8645, file: !839, line: 2317, type: !7612)
!8651 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !8645, file: !839, line: 2317, type: !7612)
!8652 = !DILocalVariable(name: "xTimeToWake", scope: !8645, file: !839, line: 2319, type: !884)
!8653 = !DILocation(line: 0, scope: !8645)
!8654 = !DILocation(line: 2321, column: 2, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8645, file: !839, line: 2321, column: 2)
!8656 = !DILocation(line: 2321, column: 2, scope: !8645)
!8657 = !DILocation(line: 2321, column: 2, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8655, file: !839, line: 2321, column: 2)
!8659 = !DILocation(line: 2325, column: 2, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8645, file: !839, line: 2325, column: 2)
!8661 = !DILocation(line: 2325, column: 2, scope: !8645)
!8662 = !DILocation(line: 2325, column: 2, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8660, file: !839, line: 2325, column: 2)
!8664 = !DILocation(line: 2330, column: 2, scope: !8645)
!8665 = !DILocation(line: 2337, column: 34, scope: !8645)
!8666 = !DILocation(line: 2337, column: 48, scope: !8645)
!8667 = !DILocation(line: 2337, column: 2, scope: !8645)
!8668 = !DILocation(line: 2342, column: 23, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8645, file: !839, line: 2342, column: 6)
!8670 = !DILocation(line: 2342, column: 37, scope: !8669)
!8671 = !DILocation(line: 2342, column: 6, scope: !8669)
!8672 = !DILocation(line: 2342, column: 58, scope: !8669)
!8673 = !DILocation(line: 2342, column: 6, scope: !8645)
!8674 = !DILocation(line: 2346, column: 3, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8669, file: !839, line: 2343, column: 2)
!8676 = !DILocation(line: 2347, column: 2, scope: !8675)
!8677 = !DILocation(line: 2355, column: 20, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !839, line: 2355, column: 7)
!8679 = distinct !DILexicalBlock(scope: !8645, file: !839, line: 2354, column: 2)
!8680 = !DILocation(line: 2355, column: 7, scope: !8679)
!8681 = !DILocation(line: 2360, column: 44, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8678, file: !839, line: 2356, column: 3)
!8683 = !DILocation(line: 2360, column: 58, scope: !8682)
!8684 = !DILocation(line: 2360, column: 4, scope: !8682)
!8685 = !DILocation(line: 2361, column: 3, scope: !8682)
!8686 = !DILocation(line: 2367, column: 18, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8678, file: !839, line: 2363, column: 3)
!8688 = !DILocation(line: 2367, column: 29, scope: !8687)
!8689 = !DILocation(line: 2368, column: 4, scope: !8687)
!8690 = !DILocation(line: 2380, column: 1, scope: !8645)
!8691 = distinct !DISubprogram(name: "vTaskPlaceOnEventListRestricted", scope: !839, file: !839, line: 2385, type: !8607, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8692)
!8692 = !{!8693, !8694, !8695}
!8693 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8691, file: !839, line: 2385, type: !934)
!8694 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !8691, file: !839, line: 2385, type: !7612)
!8695 = !DILocalVariable(name: "xTimeToWake", scope: !8691, file: !839, line: 2387, type: !884)
!8696 = !DILocation(line: 0, scope: !8691)
!8697 = !DILocation(line: 2389, column: 3, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8691, file: !839, line: 2389, column: 3)
!8699 = !DILocation(line: 2389, column: 3, scope: !8691)
!8700 = !DILocation(line: 2389, column: 3, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8698, file: !839, line: 2389, column: 3)
!8702 = !DILocation(line: 2401, column: 35, scope: !8691)
!8703 = !DILocation(line: 2401, column: 49, scope: !8691)
!8704 = !DILocation(line: 2401, column: 3, scope: !8691)
!8705 = !DILocation(line: 2406, column: 24, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8691, file: !839, line: 2406, column: 7)
!8707 = !DILocation(line: 2406, column: 38, scope: !8706)
!8708 = !DILocation(line: 2406, column: 7, scope: !8706)
!8709 = !DILocation(line: 2406, column: 59, scope: !8706)
!8710 = !DILocation(line: 2406, column: 7, scope: !8691)
!8711 = !DILocation(line: 2410, column: 4, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8706, file: !839, line: 2407, column: 3)
!8713 = !DILocation(line: 2411, column: 3, scope: !8712)
!8714 = !DILocation(line: 2419, column: 17, scope: !8691)
!8715 = !DILocation(line: 2419, column: 28, scope: !8691)
!8716 = !DILocation(line: 2422, column: 3, scope: !8691)
!8717 = !DILocation(line: 2423, column: 2, scope: !8691)
!8718 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !839, file: !839, line: 2428, type: !8719, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8724)
!8719 = !DISubroutineType(types: !8720)
!8720 = !{!869, !8721}
!8721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8722)
!8722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8723, size: 32)
!8723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!8724 = !{!8725, !8726, !8727}
!8725 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8718, file: !839, line: 2428, type: !8721)
!8726 = !DILocalVariable(name: "pxUnblockedTCB", scope: !8718, file: !839, line: 2430, type: !870)
!8727 = !DILocalVariable(name: "xReturn", scope: !8718, file: !839, line: 2431, type: !869)
!8728 = !DILocation(line: 0, scope: !8718)
!8729 = !DILocation(line: 2446, column: 31, scope: !8718)
!8730 = !DILocation(line: 2447, column: 2, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8718, file: !839, line: 2447, column: 2)
!8732 = !DILocation(line: 2447, column: 2, scope: !8718)
!8733 = !DILocation(line: 2447, column: 2, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8731, file: !839, line: 2447, column: 2)
!8735 = !DILocation(line: 2448, column: 44, scope: !8718)
!8736 = !DILocation(line: 2448, column: 11, scope: !8718)
!8737 = !DILocation(line: 2450, column: 6, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8718, file: !839, line: 2450, column: 6)
!8739 = !DILocation(line: 2450, column: 27, scope: !8738)
!8740 = !DILocation(line: 2450, column: 6, scope: !8718)
!8741 = !DILocation(line: 2452, column: 45, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8738, file: !839, line: 2451, column: 2)
!8743 = !DILocation(line: 2452, column: 12, scope: !8742)
!8744 = !DILocation(line: 2453, column: 3, scope: !8742)
!8745 = !DILocation(line: 2454, column: 2, scope: !8742)
!8746 = !DILocation(line: 2459, column: 3, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8738, file: !839, line: 2456, column: 2)
!8748 = !DILocation(line: 2462, column: 22, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8718, file: !839, line: 2462, column: 6)
!8750 = !DILocation(line: 2462, column: 35, scope: !8749)
!8751 = !DILocation(line: 2462, column: 49, scope: !8749)
!8752 = !DILocation(line: 2462, column: 33, scope: !8749)
!8753 = !DILocation(line: 2462, column: 6, scope: !8718)
!8754 = !DILocation(line: 2471, column: 17, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8749, file: !839, line: 2463, column: 2)
!8756 = !DILocation(line: 2472, column: 2, scope: !8755)
!8757 = !DILocation(line: 0, scope: !8749)
!8758 = !DILocation(line: 2492, column: 2, scope: !8718)
!8759 = distinct !DISubprogram(name: "xTaskRemoveFromUnorderedEventList", scope: !839, file: !839, line: 2496, type: !8760, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8762)
!8760 = !DISubroutineType(types: !8761)
!8761 = !{!869, !911, !7612}
!8762 = !{!8763, !8764, !8765, !8766}
!8763 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !8759, file: !839, line: 2496, type: !911)
!8764 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !8759, file: !839, line: 2496, type: !7612)
!8765 = !DILocalVariable(name: "pxUnblockedTCB", scope: !8759, file: !839, line: 2498, type: !870)
!8766 = !DILocalVariable(name: "xReturn", scope: !8759, file: !839, line: 2499, type: !869)
!8767 = !DILocation(line: 0, scope: !8759)
!8768 = !DILocation(line: 2503, column: 2, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8759, file: !839, line: 2503, column: 2)
!8770 = !DILocation(line: 2503, column: 2, scope: !8759)
!8771 = !DILocation(line: 2503, column: 2, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8769, file: !839, line: 2503, column: 2)
!8773 = !DILocation(line: 2506, column: 2, scope: !8759)
!8774 = !DILocation(line: 2510, column: 31, scope: !8759)
!8775 = !DILocation(line: 2511, column: 2, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8759, file: !839, line: 2511, column: 2)
!8777 = !DILocation(line: 2511, column: 2, scope: !8759)
!8778 = !DILocation(line: 2511, column: 2, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8776, file: !839, line: 2511, column: 2)
!8780 = !DILocation(line: 2512, column: 11, scope: !8759)
!8781 = !DILocation(line: 2517, column: 44, scope: !8759)
!8782 = !DILocation(line: 2517, column: 11, scope: !8759)
!8783 = !DILocation(line: 2518, column: 2, scope: !8759)
!8784 = !DILocation(line: 2520, column: 22, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8759, file: !839, line: 2520, column: 6)
!8786 = !DILocation(line: 2520, column: 35, scope: !8785)
!8787 = !DILocation(line: 2520, column: 49, scope: !8785)
!8788 = !DILocation(line: 2520, column: 33, scope: !8785)
!8789 = !DILocation(line: 2520, column: 6, scope: !8759)
!8790 = !DILocation(line: 2530, column: 17, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8785, file: !839, line: 2521, column: 2)
!8792 = !DILocation(line: 2531, column: 2, scope: !8791)
!8793 = !DILocation(line: 0, scope: !8785)
!8794 = !DILocation(line: 2537, column: 2, scope: !8759)
!8795 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !839, file: !839, line: 2541, type: !8796, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8805)
!8796 = !DISubroutineType(types: !8797)
!8797 = !{null, !8798}
!8798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8799)
!8799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8800, size: 32)
!8800 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !847, line: 138, baseType: !8801)
!8801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !847, line: 134, size: 64, elements: !8802)
!8802 = !{!8803, !8804}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !8801, file: !847, line: 136, baseType: !869, size: 32)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !8801, file: !847, line: 137, baseType: !884, size: 32, offset: 32)
!8805 = !{!8806}
!8806 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !8795, file: !839, line: 2541, type: !8798)
!8807 = !DILocation(line: 0, scope: !8795)
!8808 = !DILocation(line: 2543, column: 2, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8795, file: !839, line: 2543, column: 2)
!8810 = !DILocation(line: 2543, column: 2, scope: !8795)
!8811 = !DILocation(line: 2543, column: 2, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8809, file: !839, line: 2543, column: 2)
!8813 = !DILocation(line: 2544, column: 30, scope: !8795)
!8814 = !DILocation(line: 2544, column: 13, scope: !8795)
!8815 = !DILocation(line: 2544, column: 28, scope: !8795)
!8816 = !DILocation(line: 2545, column: 31, scope: !8795)
!8817 = !DILocation(line: 2545, column: 13, scope: !8795)
!8818 = !DILocation(line: 2545, column: 29, scope: !8795)
!8819 = !DILocation(line: 2546, column: 1, scope: !8795)
!8820 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !839, file: !839, line: 2549, type: !8821, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8823)
!8821 = !DISubroutineType(types: !8822)
!8822 = !{!869, !8798, !7610}
!8823 = !{!8824, !8825, !8826, !8827}
!8824 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !8820, file: !839, line: 2549, type: !8798)
!8825 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !8820, file: !839, line: 2549, type: !7610)
!8826 = !DILocalVariable(name: "xReturn", scope: !8820, file: !839, line: 2551, type: !869)
!8827 = !DILocalVariable(name: "xConstTickCount", scope: !8828, file: !839, line: 2559, type: !7612)
!8828 = distinct !DILexicalBlock(scope: !8820, file: !839, line: 2557, column: 2)
!8829 = !DILocation(line: 0, scope: !8820)
!8830 = !DILocation(line: 2553, column: 2, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8820, file: !839, line: 2553, column: 2)
!8832 = !DILocation(line: 2553, column: 2, scope: !8820)
!8833 = !DILocation(line: 2553, column: 2, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8831, file: !839, line: 2553, column: 2)
!8835 = !DILocation(line: 2554, column: 2, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8820, file: !839, line: 2554, column: 2)
!8837 = !DILocation(line: 2554, column: 2, scope: !8820)
!8838 = !DILocation(line: 2554, column: 2, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8836, file: !839, line: 2554, column: 2)
!8840 = !DILocation(line: 2556, column: 2, scope: !8820)
!8841 = !DILocation(line: 2559, column: 38, scope: !8828)
!8842 = !DILocation(line: 0, scope: !8828)
!8843 = !DILocation(line: 2565, column: 8, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8828, file: !839, line: 2565, column: 8)
!8845 = !DILocation(line: 2565, column: 23, scope: !8844)
!8846 = !DILocation(line: 2565, column: 8, scope: !8828)
!8847 = !DILocation(line: 2572, column: 9, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8844, file: !839, line: 2572, column: 7)
!8849 = !DILocation(line: 2572, column: 39, scope: !8848)
!8850 = !DILocation(line: 2572, column: 25, scope: !8848)
!8851 = !DILocation(line: 0, scope: !8848)
!8852 = !DILocation(line: 2572, column: 56, scope: !8848)
!8853 = !DILocation(line: 2580, column: 30, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8848, file: !839, line: 2580, column: 12)
!8855 = !DILocation(line: 2580, column: 61, scope: !8854)
!8856 = !DILocation(line: 2580, column: 12, scope: !8848)
!8857 = !DILocation(line: 2583, column: 19, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8854, file: !839, line: 2581, column: 3)
!8859 = !DILocation(line: 2584, column: 4, scope: !8858)
!8860 = !DILocation(line: 2586, column: 3, scope: !8858)
!8861 = !DILocation(line: 0, scope: !8844)
!8862 = !DILocation(line: 2592, column: 2, scope: !8820)
!8863 = !DILocation(line: 2594, column: 2, scope: !8820)
!8864 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !839, file: !839, line: 2598, type: !154, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !1397)
!8865 = !DILocation(line: 2600, column: 16, scope: !8864)
!8866 = !DILocation(line: 2601, column: 1, scope: !8864)
!8867 = distinct !DISubprogram(name: "uxTaskGetTaskNumber", scope: !839, file: !839, line: 2606, type: !7954, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8868)
!8868 = !{!8869, !8870, !8871}
!8869 = !DILocalVariable(name: "xTask", arg: 1, scope: !8867, file: !839, line: 2606, type: !868)
!8870 = !DILocalVariable(name: "uxReturn", scope: !8867, file: !839, line: 2608, type: !862)
!8871 = !DILocalVariable(name: "pxTCB", scope: !8867, file: !839, line: 2609, type: !870)
!8872 = !DILocation(line: 0, scope: !8867)
!8873 = !DILocation(line: 2611, column: 13, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8867, file: !839, line: 2611, column: 7)
!8875 = !DILocation(line: 2611, column: 7, scope: !8867)
!8876 = !DILocation(line: 2614, column: 22, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8874, file: !839, line: 2612, column: 3)
!8878 = !DILocation(line: 2615, column: 3, scope: !8877)
!8879 = !DILocation(line: 0, scope: !8874)
!8880 = !DILocation(line: 2621, column: 3, scope: !8867)
!8881 = distinct !DISubprogram(name: "vTaskSetTaskNumber", scope: !839, file: !839, line: 2629, type: !8882, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8884)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{null, !868, !8458}
!8884 = !{!8885, !8886, !8887}
!8885 = !DILocalVariable(name: "xTask", arg: 1, scope: !8881, file: !839, line: 2629, type: !868)
!8886 = !DILocalVariable(name: "uxHandle", arg: 2, scope: !8881, file: !839, line: 2629, type: !8458)
!8887 = !DILocalVariable(name: "pxTCB", scope: !8881, file: !839, line: 2631, type: !870)
!8888 = !DILocation(line: 0, scope: !8881)
!8889 = !DILocation(line: 2633, column: 13, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8881, file: !839, line: 2633, column: 7)
!8891 = !DILocation(line: 2633, column: 7, scope: !8881)
!8892 = !DILocation(line: 2636, column: 11, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8890, file: !839, line: 2634, column: 3)
!8894 = !DILocation(line: 2636, column: 24, scope: !8893)
!8895 = !DILocation(line: 2637, column: 3, scope: !8893)
!8896 = !DILocation(line: 2638, column: 2, scope: !8881)
!8897 = distinct !DISubprogram(name: "uxTaskGetStackHighWaterMark", scope: !839, file: !839, line: 3203, type: !7954, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8898)
!8898 = !{!8899, !8900, !8901, !8902}
!8899 = !DILocalVariable(name: "xTask", arg: 1, scope: !8897, file: !839, line: 3203, type: !868)
!8900 = !DILocalVariable(name: "pxTCB", scope: !8897, file: !839, line: 3205, type: !870)
!8901 = !DILocalVariable(name: "pucEndOfStack", scope: !8897, file: !839, line: 3206, type: !210)
!8902 = !DILocalVariable(name: "uxReturn", scope: !8897, file: !839, line: 3207, type: !862)
!8903 = !DILocation(line: 0, scope: !8897)
!8904 = !DILocation(line: 3209, column: 11, scope: !8897)
!8905 = !DILocation(line: 3213, column: 41, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8897, file: !839, line: 3212, column: 3)
!8907 = !DILocation(line: 3221, column: 30, scope: !8897)
!8908 = !DILocation(line: 3221, column: 14, scope: !8897)
!8909 = !DILocation(line: 3223, column: 3, scope: !8897)
!8910 = distinct !DISubprogram(name: "xTaskGetCurrentTaskHandle", scope: !839, file: !839, line: 3294, type: !8911, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8913)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{!868}
!8913 = !{!8914}
!8914 = !DILocalVariable(name: "xReturn", scope: !8910, file: !839, line: 3296, type: !868)
!8915 = !DILocation(line: 3301, column: 13, scope: !8910)
!8916 = !DILocation(line: 0, scope: !8910)
!8917 = !DILocation(line: 3303, column: 3, scope: !8910)
!8918 = distinct !DISubprogram(name: "xTaskGetSchedulerState", scope: !839, file: !839, line: 3311, type: !7712, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8919)
!8919 = !{!8920}
!8920 = !DILocalVariable(name: "xReturn", scope: !8918, file: !839, line: 3313, type: !869)
!8921 = !DILocation(line: 3315, column: 7, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8918, file: !839, line: 3315, column: 7)
!8923 = !DILocation(line: 3315, column: 25, scope: !8922)
!8924 = !DILocation(line: 3315, column: 7, scope: !8918)
!8925 = !DILocation(line: 3321, column: 8, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !839, line: 3321, column: 8)
!8927 = distinct !DILexicalBlock(scope: !8922, file: !839, line: 3320, column: 3)
!8928 = !DILocation(line: 3321, column: 29, scope: !8926)
!8929 = !DILocation(line: 0, scope: !8922)
!8930 = !DILocation(line: 0, scope: !8918)
!8931 = !DILocation(line: 3331, column: 3, scope: !8918)
!8932 = distinct !DISubprogram(name: "vTaskPriorityInherit", scope: !839, file: !839, line: 3339, type: !8933, scopeLine: 3340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8935)
!8933 = !DISubroutineType(types: !8934)
!8934 = !{null, !8234}
!8935 = !{!8936, !8937}
!8936 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !8932, file: !839, line: 3339, type: !8234)
!8937 = !DILocalVariable(name: "pxTCB", scope: !8932, file: !839, line: 3341, type: !7467)
!8938 = !DILocation(line: 0, scope: !8932)
!8939 = !DILocation(line: 3345, column: 21, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8932, file: !839, line: 3345, column: 7)
!8941 = !DILocation(line: 3345, column: 7, scope: !8932)
!8942 = !DILocation(line: 3347, column: 15, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !839, line: 3347, column: 8)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !839, line: 3346, column: 3)
!8945 = !DILocation(line: 3347, column: 28, scope: !8943)
!8946 = !DILocation(line: 3347, column: 42, scope: !8943)
!8947 = !DILocation(line: 3347, column: 26, scope: !8943)
!8948 = !DILocation(line: 3347, column: 8, scope: !8944)
!8949 = !DILocation(line: 3352, column: 11, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8951, file: !839, line: 3352, column: 9)
!8951 = distinct !DILexicalBlock(scope: !8943, file: !839, line: 3348, column: 4)
!8952 = !DILocation(line: 3352, column: 102, scope: !8950)
!8953 = !DILocation(line: 3352, column: 9, scope: !8951)
!8954 = !DILocation(line: 3354, column: 6, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8950, file: !839, line: 3353, column: 5)
!8956 = !DILocation(line: 3355, column: 5, scope: !8955)
!8957 = !DILocation(line: 3363, column: 9, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8951, file: !839, line: 3363, column: 9)
!8959 = !DILocation(line: 3363, column: 9, scope: !8951)
!8960 = !DILocation(line: 3365, column: 10, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !839, line: 3365, column: 10)
!8962 = distinct !DILexicalBlock(scope: !8958, file: !839, line: 3364, column: 5)
!8963 = !DILocation(line: 3365, column: 55, scope: !8961)
!8964 = !DILocation(line: 3365, column: 10, scope: !8962)
!8965 = !DILocation(line: 3367, column: 7, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !839, line: 3367, column: 7)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !839, line: 3367, column: 7)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !839, line: 3366, column: 6)
!8969 = !DILocation(line: 3367, column: 7, scope: !8967)
!8970 = !DILocation(line: 3367, column: 7, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8966, file: !839, line: 3367, column: 7)
!8972 = !DILocation(line: 3375, column: 26, scope: !8962)
!8973 = !DILocation(line: 3375, column: 40, scope: !8962)
!8974 = !DILocation(line: 3375, column: 24, scope: !8962)
!8975 = !DILocation(line: 3376, column: 6, scope: !8962)
!8976 = !DILocation(line: 3377, column: 5, scope: !8962)
!8977 = !DILocation(line: 3381, column: 26, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8958, file: !839, line: 3379, column: 5)
!8979 = !DILocation(line: 3381, column: 40, scope: !8978)
!8980 = !DILocation(line: 3381, column: 24, scope: !8978)
!8981 = !DILocation(line: 3395, column: 2, scope: !8932)
!8982 = distinct !DISubprogram(name: "xTaskPriorityDisinherit", scope: !839, file: !839, line: 3402, type: !8232, scopeLine: 3403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8983)
!8983 = !{!8984, !8985, !8986}
!8984 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !8982, file: !839, line: 3402, type: !8234)
!8985 = !DILocalVariable(name: "pxTCB", scope: !8982, file: !839, line: 3404, type: !7467)
!8986 = !DILocalVariable(name: "xReturn", scope: !8982, file: !839, line: 3405, type: !869)
!8987 = !DILocation(line: 0, scope: !8982)
!8988 = !DILocation(line: 3407, column: 21, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8982, file: !839, line: 3407, column: 7)
!8990 = !DILocation(line: 3407, column: 7, scope: !8982)
!8991 = !DILocation(line: 3409, column: 4, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !839, line: 3409, column: 4)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !839, line: 3408, column: 3)
!8994 = !DILocation(line: 3409, column: 4, scope: !8993)
!8995 = !DILocation(line: 3409, column: 4, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8992, file: !839, line: 3409, column: 4)
!8997 = !DILocation(line: 3410, column: 28, scope: !8993)
!8998 = !DILocation(line: 3412, column: 15, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8993, file: !839, line: 3412, column: 8)
!9000 = !DILocation(line: 3412, column: 36, scope: !8999)
!9001 = !DILocation(line: 3412, column: 26, scope: !8999)
!9002 = !DILocation(line: 3412, column: 8, scope: !8993)
!9003 = !DILocation(line: 3422, column: 34, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !839, line: 3422, column: 10)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !839, line: 3416, column: 5)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !839, line: 3415, column: 9)
!9007 = distinct !DILexicalBlock(scope: !8999, file: !839, line: 3413, column: 4)
!9008 = !DILocation(line: 3422, column: 10, scope: !9004)
!9009 = !DILocation(line: 3422, column: 55, scope: !9004)
!9010 = !DILocation(line: 3422, column: 10, scope: !9005)
!9011 = !DILocation(line: 3424, column: 7, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !839, line: 3424, column: 7)
!9013 = distinct !DILexicalBlock(scope: !9014, file: !839, line: 3424, column: 7)
!9014 = distinct !DILexicalBlock(scope: !9004, file: !839, line: 3423, column: 6)
!9015 = !DILocation(line: 3424, column: 7, scope: !9013)
!9016 = !DILocation(line: 3424, column: 7, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9012, file: !839, line: 3424, column: 7)
!9018 = !DILocation(line: 3434, column: 33, scope: !9005)
!9019 = !DILocation(line: 3434, column: 24, scope: !9005)
!9020 = !DILocation(line: 3439, column: 6, scope: !9005)
!9021 = !DILocation(line: 3440, column: 6, scope: !9005)
!9022 = !DILocation(line: 3451, column: 5, scope: !9005)
!9023 = !DILocation(line: 3467, column: 3, scope: !8982)
!9024 = distinct !DISubprogram(name: "vTaskList", scope: !839, file: !839, line: 3565, type: !9025, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9027)
!9025 = !DISubroutineType(types: !9026)
!9026 = !{null, !201}
!9027 = !{!9028, !9029, !9030, !9031, !9032}
!9028 = !DILocalVariable(name: "pcWriteBuffer", arg: 1, scope: !9024, file: !839, line: 3565, type: !201)
!9029 = !DILocalVariable(name: "pxTaskStatusArray", scope: !9024, file: !839, line: 3567, type: !8446)
!9030 = !DILocalVariable(name: "uxArraySize", scope: !9024, file: !839, line: 3568, type: !955)
!9031 = !DILocalVariable(name: "x", scope: !9024, file: !839, line: 3568, type: !955)
!9032 = !DILocalVariable(name: "cStatus", scope: !9024, file: !839, line: 3569, type: !202)
!9033 = !DILocation(line: 0, scope: !9024)
!9034 = !DILocation(line: 3568, column: 2, scope: !9024)
!9035 = !DILocation(line: 3568, column: 23, scope: !9024)
!9036 = !DILocation(line: 3568, column: 36, scope: !9024)
!9037 = !DILocation(line: 3597, column: 18, scope: !9024)
!9038 = !DILocation(line: 3601, column: 17, scope: !9024)
!9039 = !DILocation(line: 3601, column: 15, scope: !9024)
!9040 = !DILocation(line: 3604, column: 37, scope: !9024)
!9041 = !DILocation(line: 3604, column: 60, scope: !9024)
!9042 = !DILocation(line: 3604, column: 23, scope: !9024)
!9043 = !DILocation(line: 3606, column: 25, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9024, file: !839, line: 3606, column: 7)
!9045 = !DILocation(line: 3606, column: 7, scope: !9024)
!9046 = !DILocation(line: 3609, column: 59, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9044, file: !839, line: 3607, column: 3)
!9048 = !DILocation(line: 3609, column: 18, scope: !9047)
!9049 = !DILocation(line: 3609, column: 16, scope: !9047)
!9050 = !DILocation(line: 3612, column: 11, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9047, file: !839, line: 3612, column: 4)
!9052 = !DILocation(line: 3612, column: 16, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9051, file: !839, line: 3612, column: 4)
!9054 = !DILocation(line: 3612, column: 20, scope: !9053)
!9055 = !DILocation(line: 3612, column: 18, scope: !9053)
!9056 = !DILocation(line: 3612, column: 4, scope: !9051)
!9057 = !DILocation(line: 3614, column: 32, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9053, file: !839, line: 3613, column: 4)
!9059 = !DILocation(line: 3614, column: 36, scope: !9058)
!9060 = !DILocation(line: 3614, column: 5, scope: !9058)
!9061 = !DILocation(line: 3636, column: 77, scope: !9058)
!9062 = !DILocation(line: 3636, column: 81, scope: !9058)
!9063 = !DILocation(line: 3636, column: 21, scope: !9058)
!9064 = !DILocation(line: 3639, column: 98, scope: !9058)
!9065 = !DILocation(line: 3639, column: 102, scope: !9058)
!9066 = !DILocation(line: 3639, column: 157, scope: !9058)
!9067 = !DILocation(line: 3639, column: 161, scope: !9058)
!9068 = !DILocation(line: 3639, column: 121, scope: !9058)
!9069 = !DILocation(line: 3639, column: 219, scope: !9058)
!9070 = !DILocation(line: 3639, column: 223, scope: !9058)
!9071 = !DILocation(line: 3639, column: 5, scope: !9058)
!9072 = !DILocation(line: 3640, column: 22, scope: !9058)
!9073 = !DILocation(line: 3640, column: 19, scope: !9058)
!9074 = !DILocation(line: 3612, column: 34, scope: !9053)
!9075 = distinct !{!9075, !9056, !9076}
!9076 = !DILocation(line: 3641, column: 4, scope: !9051)
!9077 = !DILocation(line: 3644, column: 4, scope: !9047)
!9078 = !DILocation(line: 3645, column: 3, scope: !9047)
!9079 = !DILocation(line: 3650, column: 2, scope: !9024)
!9080 = distinct !DISubprogram(name: "prvWriteNameToBuffer", scope: !839, file: !839, line: 3539, type: !9081, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9083)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!201, !201, !331}
!9083 = !{!9084, !9085, !9086}
!9084 = !DILocalVariable(name: "pcBuffer", arg: 1, scope: !9080, file: !839, line: 3539, type: !201)
!9085 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !9080, file: !839, line: 3539, type: !331)
!9086 = !DILocalVariable(name: "x", scope: !9080, file: !839, line: 3541, type: !869)
!9087 = !DILocation(line: 0, scope: !9080)
!9088 = !DILocation(line: 3544, column: 3, scope: !9080)
!9089 = !DILocation(line: 3548, column: 12, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9080, file: !839, line: 3548, column: 3)
!9091 = !DILocation(line: 3548, column: 34, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9090, file: !839, line: 3548, column: 3)
!9093 = !DILocation(line: 3548, column: 3, scope: !9090)
!9094 = !DILocation(line: 3550, column: 4, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9092, file: !839, line: 3549, column: 3)
!9096 = !DILocation(line: 3550, column: 18, scope: !9095)
!9097 = !DILocation(line: 3548, column: 70, scope: !9092)
!9098 = distinct !{!9098, !9093, !9099}
!9099 = !DILocation(line: 3551, column: 3, scope: !9090)
!9100 = !DILocation(line: 0, scope: !9090)
!9101 = !DILocation(line: 3554, column: 3, scope: !9080)
!9102 = !DILocation(line: 3554, column: 17, scope: !9080)
!9103 = !DILocation(line: 3557, column: 3, scope: !9080)
!9104 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !839, file: !839, line: 3779, type: !8405, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9105)
!9105 = !{!9106}
!9106 = !DILocalVariable(name: "uxReturn", scope: !9104, file: !839, line: 3781, type: !884)
!9107 = !DILocation(line: 3783, column: 13, scope: !9104)
!9108 = !DILocation(line: 0, scope: !9104)
!9109 = !DILocation(line: 3787, column: 2, scope: !9104)
!9110 = !DILocation(line: 3789, column: 2, scope: !9104)
!9111 = distinct !DISubprogram(name: "pvTaskIncrementMutexHeldCount", scope: !839, file: !839, line: 3795, type: !9112, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !1397)
!9112 = !DISubroutineType(types: !2183)
!9113 = !DILocation(line: 3799, column: 7, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9111, file: !839, line: 3799, column: 7)
!9115 = !DILocation(line: 3799, column: 20, scope: !9114)
!9116 = !DILocation(line: 3799, column: 7, scope: !9111)
!9117 = !DILocation(line: 3801, column: 6, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9114, file: !839, line: 3800, column: 3)
!9119 = !DILocation(line: 3801, column: 20, scope: !9118)
!9120 = !DILocation(line: 3801, column: 35, scope: !9118)
!9121 = !DILocation(line: 3802, column: 3, scope: !9118)
!9122 = !DILocation(line: 3804, column: 10, scope: !9111)
!9123 = !DILocation(line: 3804, column: 3, scope: !9111)
!9124 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !839, file: !839, line: 3812, type: !9125, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9127)
!9125 = !DISubroutineType(types: !9126)
!9126 = !{!61, !869, !884}
!9127 = !{!9128, !9129, !9130, !9131}
!9128 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !9124, file: !839, line: 3812, type: !869)
!9129 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !9124, file: !839, line: 3812, type: !884)
!9130 = !DILocalVariable(name: "xTimeToWake", scope: !9124, file: !839, line: 3814, type: !884)
!9131 = !DILocalVariable(name: "ulReturn", scope: !9124, file: !839, line: 3815, type: !61)
!9132 = !DILocation(line: 0, scope: !9124)
!9133 = !DILocation(line: 3817, column: 3, scope: !9124)
!9134 = !DILocation(line: 3820, column: 8, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !839, line: 3820, column: 8)
!9136 = distinct !DILexicalBlock(scope: !9124, file: !839, line: 3818, column: 3)
!9137 = !DILocation(line: 3820, column: 22, scope: !9135)
!9138 = !DILocation(line: 3820, column: 38, scope: !9135)
!9139 = !DILocation(line: 3820, column: 8, scope: !9136)
!9140 = !DILocation(line: 3823, column: 5, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9135, file: !839, line: 3821, column: 4)
!9142 = !DILocation(line: 3823, column: 19, scope: !9141)
!9143 = !DILocation(line: 3823, column: 32, scope: !9141)
!9144 = !DILocation(line: 3825, column: 22, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9141, file: !839, line: 3825, column: 9)
!9146 = !DILocation(line: 3825, column: 9, scope: !9141)
!9147 = !DILocation(line: 3829, column: 27, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !839, line: 3829, column: 10)
!9149 = distinct !DILexicalBlock(scope: !9145, file: !839, line: 3826, column: 5)
!9150 = !DILocation(line: 3829, column: 41, scope: !9148)
!9151 = !DILocation(line: 3829, column: 10, scope: !9148)
!9152 = !DILocation(line: 3829, column: 62, scope: !9148)
!9153 = !DILocation(line: 3829, column: 10, scope: !9149)
!9154 = !DILocation(line: 3834, column: 7, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9148, file: !839, line: 3830, column: 6)
!9156 = !DILocation(line: 3835, column: 6, scope: !9155)
!9157 = !DILocation(line: 3843, column: 24, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !839, line: 3843, column: 11)
!9159 = distinct !DILexicalBlock(scope: !9149, file: !839, line: 3842, column: 6)
!9160 = !DILocation(line: 3843, column: 11, scope: !9159)
!9161 = !DILocation(line: 3849, column: 48, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9158, file: !839, line: 3844, column: 7)
!9163 = !DILocation(line: 3849, column: 62, scope: !9162)
!9164 = !DILocation(line: 3849, column: 8, scope: !9162)
!9165 = !DILocation(line: 3850, column: 7, scope: !9162)
!9166 = !DILocation(line: 3857, column: 22, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9158, file: !839, line: 3852, column: 7)
!9168 = !DILocation(line: 3857, column: 33, scope: !9167)
!9169 = !DILocation(line: 3858, column: 8, scope: !9167)
!9170 = !DILocation(line: 3876, column: 6, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9149, file: !839, line: 3876, column: 6)
!9172 = !{i64 2148503533}
!9173 = !{i64 2148503573}
!9174 = !DILocation(line: 3877, column: 5, scope: !9149)
!9175 = !DILocation(line: 3888, column: 3, scope: !9124)
!9176 = !DILocation(line: 3890, column: 3, scope: !9124)
!9177 = !DILocation(line: 3892, column: 15, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9124, file: !839, line: 3891, column: 3)
!9179 = !DILocation(line: 3892, column: 29, scope: !9178)
!9180 = !DILocation(line: 3894, column: 17, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9178, file: !839, line: 3894, column: 8)
!9182 = !DILocation(line: 3894, column: 8, scope: !9178)
!9183 = !DILocation(line: 3896, column: 27, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !839, line: 3896, column: 9)
!9185 = distinct !DILexicalBlock(scope: !9181, file: !839, line: 3895, column: 4)
!9186 = !DILocation(line: 0, scope: !9184)
!9187 = !DILocation(line: 3896, column: 9, scope: !9185)
!9188 = !DILocation(line: 3902, column: 39, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9184, file: !839, line: 3901, column: 5)
!9190 = !DILocation(line: 3910, column: 4, scope: !9178)
!9191 = !DILocation(line: 3910, column: 18, scope: !9178)
!9192 = !DILocation(line: 3910, column: 31, scope: !9178)
!9193 = !DILocation(line: 3912, column: 3, scope: !9124)
!9194 = !DILocation(line: 3914, column: 3, scope: !9124)
!9195 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !839, file: !839, line: 3922, type: !9196, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9198)
!9196 = !DISubroutineType(types: !9197)
!9197 = !{!869, !61, !61, !2833, !884}
!9198 = !{!9199, !9200, !9201, !9202, !9203, !9204}
!9199 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !9195, file: !839, line: 3922, type: !61)
!9200 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !9195, file: !839, line: 3922, type: !61)
!9201 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !9195, file: !839, line: 3922, type: !2833)
!9202 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !9195, file: !839, line: 3922, type: !884)
!9203 = !DILocalVariable(name: "xTimeToWake", scope: !9195, file: !839, line: 3924, type: !884)
!9204 = !DILocalVariable(name: "xReturn", scope: !9195, file: !839, line: 3925, type: !869)
!9205 = !DILocation(line: 0, scope: !9195)
!9206 = !DILocation(line: 3927, column: 3, scope: !9195)
!9207 = !DILocation(line: 3930, column: 8, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !839, line: 3930, column: 8)
!9209 = distinct !DILexicalBlock(scope: !9195, file: !839, line: 3928, column: 3)
!9210 = !DILocation(line: 3930, column: 22, scope: !9208)
!9211 = !DILocation(line: 3930, column: 35, scope: !9208)
!9212 = !DILocation(line: 3930, column: 8, scope: !9209)
!9213 = !DILocation(line: 3935, column: 38, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9208, file: !839, line: 3931, column: 4)
!9215 = !DILocation(line: 3935, column: 5, scope: !9214)
!9216 = !DILocation(line: 3935, column: 19, scope: !9214)
!9217 = !DILocation(line: 3935, column: 35, scope: !9214)
!9218 = !DILocation(line: 3938, column: 5, scope: !9214)
!9219 = !DILocation(line: 3938, column: 19, scope: !9214)
!9220 = !DILocation(line: 3938, column: 32, scope: !9214)
!9221 = !DILocation(line: 3940, column: 22, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9214, file: !839, line: 3940, column: 9)
!9223 = !DILocation(line: 3940, column: 9, scope: !9214)
!9224 = !DILocation(line: 3944, column: 27, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !839, line: 3944, column: 10)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !839, line: 3941, column: 5)
!9227 = !DILocation(line: 3944, column: 41, scope: !9225)
!9228 = !DILocation(line: 3944, column: 10, scope: !9225)
!9229 = !DILocation(line: 3944, column: 62, scope: !9225)
!9230 = !DILocation(line: 3944, column: 10, scope: !9226)
!9231 = !DILocation(line: 3949, column: 7, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9225, file: !839, line: 3945, column: 6)
!9233 = !DILocation(line: 3950, column: 6, scope: !9232)
!9234 = !DILocation(line: 3958, column: 24, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !839, line: 3958, column: 11)
!9236 = distinct !DILexicalBlock(scope: !9226, file: !839, line: 3957, column: 6)
!9237 = !DILocation(line: 3958, column: 11, scope: !9236)
!9238 = !DILocation(line: 3964, column: 48, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !839, line: 3959, column: 7)
!9240 = !DILocation(line: 3964, column: 62, scope: !9239)
!9241 = !DILocation(line: 3964, column: 8, scope: !9239)
!9242 = !DILocation(line: 3965, column: 7, scope: !9239)
!9243 = !DILocation(line: 3972, column: 22, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9235, file: !839, line: 3967, column: 7)
!9245 = !DILocation(line: 3972, column: 33, scope: !9244)
!9246 = !DILocation(line: 3973, column: 8, scope: !9244)
!9247 = !DILocation(line: 3991, column: 6, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9226, file: !839, line: 3991, column: 6)
!9249 = !{i64 2148504304}
!9250 = !{i64 2148504344}
!9251 = !DILocation(line: 3992, column: 5, scope: !9226)
!9252 = !DILocation(line: 4003, column: 3, scope: !9195)
!9253 = !DILocation(line: 4005, column: 3, scope: !9195)
!9254 = !DILocation(line: 4007, column: 29, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9256, file: !839, line: 4007, column: 8)
!9256 = distinct !DILexicalBlock(scope: !9195, file: !839, line: 4006, column: 3)
!9257 = !DILocation(line: 4007, column: 8, scope: !9256)
!9258 = !DILocation(line: 4011, column: 29, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9255, file: !839, line: 4008, column: 4)
!9260 = !DILocation(line: 4011, column: 43, scope: !9259)
!9261 = !DILocation(line: 4011, column: 27, scope: !9259)
!9262 = !DILocation(line: 4012, column: 4, scope: !9259)
!9263 = !DILocation(line: 4018, column: 8, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9256, file: !839, line: 4018, column: 8)
!9265 = !DILocation(line: 4018, column: 22, scope: !9264)
!9266 = !DILocation(line: 4018, column: 35, scope: !9264)
!9267 = !DILocation(line: 4018, column: 8, scope: !9256)
!9268 = !DILocation(line: 4027, column: 38, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9264, file: !839, line: 4024, column: 4)
!9270 = !DILocation(line: 4027, column: 5, scope: !9269)
!9271 = !DILocation(line: 4027, column: 19, scope: !9269)
!9272 = !DILocation(line: 4027, column: 35, scope: !9269)
!9273 = !DILocation(line: 0, scope: !9264)
!9274 = !DILocation(line: 4031, column: 4, scope: !9256)
!9275 = !DILocation(line: 4031, column: 18, scope: !9256)
!9276 = !DILocation(line: 4031, column: 31, scope: !9256)
!9277 = !DILocation(line: 4033, column: 3, scope: !9195)
!9278 = !DILocation(line: 4035, column: 3, scope: !9195)
!9279 = distinct !DISubprogram(name: "xTaskNotify", scope: !839, file: !839, line: 4043, type: !9280, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9283)
!9280 = !DISubroutineType(types: !9281)
!9281 = !{!869, !868, !61, !9282}
!9282 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !847, line: 129, baseType: !854)
!9283 = !{!9284, !9285, !9286, !9287, !9288, !9289}
!9284 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9279, file: !839, line: 4043, type: !868)
!9285 = !DILocalVariable(name: "ulValue", arg: 2, scope: !9279, file: !839, line: 4043, type: !61)
!9286 = !DILocalVariable(name: "eAction", arg: 3, scope: !9279, file: !839, line: 4043, type: !9282)
!9287 = !DILocalVariable(name: "pxTCB", scope: !9279, file: !839, line: 4045, type: !870)
!9288 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9279, file: !839, line: 4046, type: !904)
!9289 = !DILocalVariable(name: "xReturn", scope: !9279, file: !839, line: 4047, type: !869)
!9290 = !DILocation(line: 0, scope: !9279)
!9291 = !DILocation(line: 4049, column: 3, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9279, file: !839, line: 4049, column: 3)
!9293 = !DILocation(line: 4049, column: 3, scope: !9279)
!9294 = !DILocation(line: 4049, column: 3, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9292, file: !839, line: 4049, column: 3)
!9296 = !DILocation(line: 4052, column: 3, scope: !9279)
!9297 = !DILocation(line: 4054, column: 34, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9279, file: !839, line: 4053, column: 3)
!9299 = !DILocation(line: 4056, column: 24, scope: !9298)
!9300 = !DILocation(line: 4058, column: 4, scope: !9298)
!9301 = !DILocation(line: 4061, column: 13, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9298, file: !839, line: 4059, column: 4)
!9303 = !DILocation(line: 4061, column: 29, scope: !9302)
!9304 = !DILocation(line: 4062, column: 6, scope: !9302)
!9305 = !DILocation(line: 4065, column: 15, scope: !9302)
!9306 = !DILocation(line: 4065, column: 32, scope: !9302)
!9307 = !DILocation(line: 4066, column: 6, scope: !9302)
!9308 = !DILocation(line: 4069, column: 13, scope: !9302)
!9309 = !DILocation(line: 4069, column: 29, scope: !9302)
!9310 = !DILocation(line: 4070, column: 6, scope: !9302)
!9311 = !DILocation(line: 4073, column: 31, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9302, file: !839, line: 4073, column: 10)
!9313 = !DILocation(line: 4073, column: 10, scope: !9302)
!9314 = !DILocation(line: 4075, column: 14, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9312, file: !839, line: 4074, column: 6)
!9316 = !DILocation(line: 4075, column: 30, scope: !9315)
!9317 = !DILocation(line: 4076, column: 6, scope: !9315)
!9318 = !DILocation(line: 4093, column: 29, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9298, file: !839, line: 4093, column: 8)
!9320 = !DILocation(line: 4093, column: 8, scope: !9298)
!9321 = !DILocation(line: 4095, column: 38, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9319, file: !839, line: 4094, column: 4)
!9323 = !DILocation(line: 4095, column: 14, scope: !9322)
!9324 = !DILocation(line: 4096, column: 5, scope: !9322)
!9325 = !DILocation(line: 4099, column: 5, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9322, file: !839, line: 4099, column: 5)
!9327 = !DILocation(line: 4099, column: 5, scope: !9322)
!9328 = !DILocation(line: 4099, column: 5, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9326, file: !839, line: 4099, column: 5)
!9330 = !DILocation(line: 4101, column: 16, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9322, file: !839, line: 4101, column: 9)
!9332 = !DILocation(line: 4101, column: 29, scope: !9331)
!9333 = !DILocation(line: 4101, column: 43, scope: !9331)
!9334 = !DILocation(line: 4101, column: 27, scope: !9331)
!9335 = !DILocation(line: 4101, column: 9, scope: !9322)
!9336 = !DILocation(line: 4105, column: 6, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9338, file: !839, line: 4105, column: 6)
!9338 = distinct !DILexicalBlock(scope: !9331, file: !839, line: 4102, column: 5)
!9339 = !{i64 2148505929}
!9340 = !{i64 2148505969}
!9341 = !DILocation(line: 4106, column: 5, scope: !9338)
!9342 = !DILocation(line: 4117, column: 3, scope: !9279)
!9343 = !DILocation(line: 4119, column: 3, scope: !9279)
!9344 = distinct !DISubprogram(name: "xTaskNotifyFromISR", scope: !839, file: !839, line: 4127, type: !9345, scopeLine: 4128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9347)
!9345 = !DISubroutineType(types: !9346)
!9346 = !{!869, !868, !61, !9282, !1101}
!9347 = !{!9348, !9349, !9350, !9351, !9352, !9353, !9354, !9355}
!9348 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9344, file: !839, line: 4127, type: !868)
!9349 = !DILocalVariable(name: "ulValue", arg: 2, scope: !9344, file: !839, line: 4127, type: !61)
!9350 = !DILocalVariable(name: "eAction", arg: 3, scope: !9344, file: !839, line: 4127, type: !9282)
!9351 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !9344, file: !839, line: 4127, type: !1101)
!9352 = !DILocalVariable(name: "pxTCB", scope: !9344, file: !839, line: 4129, type: !870)
!9353 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9344, file: !839, line: 4130, type: !904)
!9354 = !DILocalVariable(name: "xReturn", scope: !9344, file: !839, line: 4131, type: !869)
!9355 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9344, file: !839, line: 4132, type: !862)
!9356 = !DILocation(line: 0, scope: !9344)
!9357 = !DILocation(line: 4134, column: 3, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9344, file: !839, line: 4134, column: 3)
!9359 = !DILocation(line: 4134, column: 3, scope: !9344)
!9360 = !DILocation(line: 4134, column: 3, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9358, file: !839, line: 4134, column: 3)
!9362 = !DILocation(line: 4152, column: 3, scope: !9344)
!9363 = !DILocation(line: 231, column: 2, scope: !7976, inlinedAt: !9364)
!9364 = distinct !DILocation(line: 4156, column: 28, scope: !9344)
!9365 = !DILocation(line: 0, scope: !7976, inlinedAt: !9364)
!9366 = !DILocation(line: 4158, column: 34, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9344, file: !839, line: 4157, column: 3)
!9368 = !DILocation(line: 4160, column: 24, scope: !9367)
!9369 = !DILocation(line: 4162, column: 4, scope: !9367)
!9370 = !DILocation(line: 4165, column: 13, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9367, file: !839, line: 4163, column: 4)
!9372 = !DILocation(line: 4165, column: 29, scope: !9371)
!9373 = !DILocation(line: 4166, column: 6, scope: !9371)
!9374 = !DILocation(line: 4169, column: 15, scope: !9371)
!9375 = !DILocation(line: 4169, column: 32, scope: !9371)
!9376 = !DILocation(line: 4170, column: 6, scope: !9371)
!9377 = !DILocation(line: 4173, column: 13, scope: !9371)
!9378 = !DILocation(line: 4173, column: 29, scope: !9371)
!9379 = !DILocation(line: 4174, column: 6, scope: !9371)
!9380 = !DILocation(line: 4177, column: 31, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9371, file: !839, line: 4177, column: 10)
!9382 = !DILocation(line: 4177, column: 10, scope: !9371)
!9383 = !DILocation(line: 4179, column: 14, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9381, file: !839, line: 4178, column: 6)
!9385 = !DILocation(line: 4179, column: 30, scope: !9384)
!9386 = !DILocation(line: 4180, column: 6, scope: !9384)
!9387 = !DILocation(line: 4197, column: 29, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9367, file: !839, line: 4197, column: 8)
!9389 = !DILocation(line: 4197, column: 8, scope: !9367)
!9390 = !DILocation(line: 4200, column: 5, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9392, file: !839, line: 4200, column: 5)
!9392 = distinct !DILexicalBlock(scope: !9388, file: !839, line: 4198, column: 4)
!9393 = !DILocation(line: 4200, column: 5, scope: !9392)
!9394 = !DILocation(line: 4200, column: 5, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9391, file: !839, line: 4200, column: 5)
!9396 = !DILocation(line: 4202, column: 9, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9392, file: !839, line: 4202, column: 9)
!9398 = !DILocation(line: 4202, column: 30, scope: !9397)
!9399 = !DILocation(line: 4202, column: 9, scope: !9392)
!9400 = !DILocation(line: 4204, column: 39, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9397, file: !839, line: 4203, column: 5)
!9402 = !DILocation(line: 4204, column: 15, scope: !9401)
!9403 = !DILocation(line: 4205, column: 6, scope: !9401)
!9404 = !DILocation(line: 4206, column: 5, scope: !9401)
!9405 = !DILocation(line: 4211, column: 6, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9397, file: !839, line: 4208, column: 5)
!9407 = !DILocation(line: 4214, column: 16, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9392, file: !839, line: 4214, column: 9)
!9409 = !DILocation(line: 4214, column: 29, scope: !9408)
!9410 = !DILocation(line: 4214, column: 43, scope: !9408)
!9411 = !DILocation(line: 4214, column: 27, scope: !9408)
!9412 = !DILocation(line: 4214, column: 9, scope: !9392)
!9413 = !DILocation(line: 4220, column: 34, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9415, file: !839, line: 4219, column: 6)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !839, line: 4218, column: 10)
!9416 = distinct !DILexicalBlock(scope: !9408, file: !839, line: 4215, column: 5)
!9417 = !DILocation(line: 4221, column: 6, scope: !9414)
!9418 = !DILocation(line: 0, scope: !7987, inlinedAt: !9419)
!9419 = distinct !DILocation(line: 4229, column: 3, scope: !9344)
!9420 = !DILocation(line: 249, column: 2, scope: !7987, inlinedAt: !9419)
!9421 = !DILocation(line: 4231, column: 3, scope: !9344)
!9422 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !839, file: !839, line: 4239, type: !9423, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{null, !868, !1101}
!9425 = !{!9426, !9427, !9428, !9429, !9430}
!9426 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9422, file: !839, line: 4239, type: !868)
!9427 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !9422, file: !839, line: 4239, type: !1101)
!9428 = !DILocalVariable(name: "pxTCB", scope: !9422, file: !839, line: 4241, type: !870)
!9429 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9422, file: !839, line: 4242, type: !904)
!9430 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9422, file: !839, line: 4243, type: !862)
!9431 = !DILocation(line: 0, scope: !9422)
!9432 = !DILocation(line: 4245, column: 3, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9422, file: !839, line: 4245, column: 3)
!9434 = !DILocation(line: 4245, column: 3, scope: !9422)
!9435 = !DILocation(line: 4245, column: 3, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9433, file: !839, line: 4245, column: 3)
!9437 = !DILocation(line: 4263, column: 3, scope: !9422)
!9438 = !DILocation(line: 231, column: 2, scope: !7976, inlinedAt: !9439)
!9439 = distinct !DILocation(line: 4267, column: 28, scope: !9422)
!9440 = !DILocation(line: 0, scope: !7976, inlinedAt: !9439)
!9441 = !DILocation(line: 4269, column: 34, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9422, file: !839, line: 4268, column: 3)
!9443 = !DILocation(line: 4270, column: 24, scope: !9442)
!9444 = !DILocation(line: 4274, column: 13, scope: !9442)
!9445 = !DILocation(line: 4274, column: 30, scope: !9442)
!9446 = !DILocation(line: 4278, column: 29, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9442, file: !839, line: 4278, column: 8)
!9448 = !DILocation(line: 4278, column: 8, scope: !9442)
!9449 = !DILocation(line: 4281, column: 5, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !839, line: 4281, column: 5)
!9451 = distinct !DILexicalBlock(scope: !9447, file: !839, line: 4279, column: 4)
!9452 = !DILocation(line: 4281, column: 5, scope: !9451)
!9453 = !DILocation(line: 4281, column: 5, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9450, file: !839, line: 4281, column: 5)
!9455 = !DILocation(line: 4283, column: 9, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9451, file: !839, line: 4283, column: 9)
!9457 = !DILocation(line: 4283, column: 30, scope: !9456)
!9458 = !DILocation(line: 4283, column: 9, scope: !9451)
!9459 = !DILocation(line: 4285, column: 39, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9456, file: !839, line: 4284, column: 5)
!9461 = !DILocation(line: 4285, column: 15, scope: !9460)
!9462 = !DILocation(line: 4286, column: 6, scope: !9460)
!9463 = !DILocation(line: 4287, column: 5, scope: !9460)
!9464 = !DILocation(line: 4292, column: 6, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9456, file: !839, line: 4289, column: 5)
!9466 = !DILocation(line: 4295, column: 16, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9451, file: !839, line: 4295, column: 9)
!9468 = !DILocation(line: 4295, column: 29, scope: !9467)
!9469 = !DILocation(line: 4295, column: 43, scope: !9467)
!9470 = !DILocation(line: 4295, column: 27, scope: !9467)
!9471 = !DILocation(line: 4295, column: 9, scope: !9451)
!9472 = !DILocation(line: 4301, column: 34, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9474, file: !839, line: 4300, column: 6)
!9474 = distinct !DILexicalBlock(scope: !9475, file: !839, line: 4299, column: 10)
!9475 = distinct !DILexicalBlock(scope: !9467, file: !839, line: 4296, column: 5)
!9476 = !DILocation(line: 4302, column: 6, scope: !9473)
!9477 = !DILocation(line: 0, scope: !7987, inlinedAt: !9478)
!9478 = distinct !DILocation(line: 4310, column: 3, scope: !9422)
!9479 = !DILocation(line: 249, column: 2, scope: !7987, inlinedAt: !9478)
!9480 = !DILocation(line: 4311, column: 2, scope: !9422)
!9481 = distinct !DISubprogram(name: "uxTaskGetBottomOfStack", scope: !839, file: !839, line: 4351, type: !7954, scopeLine: 4352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !9482)
!9482 = !{!9483, !9484}
!9483 = !DILocalVariable(name: "TaskHandle_t", arg: 1, scope: !9481, file: !839, line: 4351, type: !868)
!9484 = !DILocalVariable(name: "pxTCB", scope: !9481, file: !839, line: 4353, type: !870)
!9485 = !DILocation(line: 0, scope: !9481)
!9486 = !DILocation(line: 4355, column: 24, scope: !9481)
!9487 = !DILocation(line: 4355, column: 10, scope: !9481)
!9488 = !DILocation(line: 4355, column: 47, scope: !9481)
!9489 = !DILocation(line: 4355, column: 62, scope: !9481)
!9490 = !DILocation(line: 4358, column: 33, scope: !9481)
!9491 = !DILocation(line: 4358, column: 9, scope: !9481)
!9492 = !DILocation(line: 4358, column: 2, scope: !9481)
!9493 = distinct !DISubprogram(name: "vListInitialise", scope: !2188, file: !2188, line: 79, type: !9494, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !9497)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{null, !9496}
!9496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2200)
!9497 = !{!9498}
!9498 = !DILocalVariable(name: "pxList", arg: 1, scope: !9493, file: !2188, line: 79, type: !9496)
!9499 = !DILocation(line: 0, scope: !9493)
!9500 = !DILocation(line: 84, column: 48, scope: !9493)
!9501 = !DILocation(line: 84, column: 10, scope: !9493)
!9502 = !DILocation(line: 84, column: 18, scope: !9493)
!9503 = !DILocation(line: 88, column: 19, scope: !9493)
!9504 = !DILocation(line: 88, column: 30, scope: !9493)
!9505 = !DILocation(line: 92, column: 19, scope: !9493)
!9506 = !DILocation(line: 92, column: 26, scope: !9493)
!9507 = !DILocation(line: 93, column: 19, scope: !9493)
!9508 = !DILocation(line: 93, column: 30, scope: !9493)
!9509 = !DILocation(line: 95, column: 10, scope: !9493)
!9510 = !DILocation(line: 95, column: 26, scope: !9493)
!9511 = !DILocation(line: 101, column: 1, scope: !9493)
!9512 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !2188, file: !2188, line: 104, type: !9513, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !9516)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{null, !9515}
!9515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2190)
!9516 = !{!9517}
!9517 = !DILocalVariable(name: "pxItem", arg: 1, scope: !9512, file: !2188, line: 104, type: !9515)
!9518 = !DILocation(line: 0, scope: !9512)
!9519 = !DILocation(line: 107, column: 10, scope: !9512)
!9520 = !DILocation(line: 107, column: 22, scope: !9512)
!9521 = !DILocation(line: 113, column: 1, scope: !9512)
!9522 = distinct !DISubprogram(name: "vListInsertEnd", scope: !2188, file: !2188, line: 116, type: !9523, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{null, !9496, !9515}
!9525 = !{!9526, !9527, !9528}
!9526 = !DILocalVariable(name: "pxList", arg: 1, scope: !9522, file: !2188, line: 116, type: !9496)
!9527 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !9522, file: !2188, line: 116, type: !9515)
!9528 = !DILocalVariable(name: "pxIndex", scope: !9522, file: !2188, line: 118, type: !9515)
!9529 = !DILocation(line: 0, scope: !9522)
!9530 = !DILocation(line: 118, column: 38, scope: !9522)
!9531 = !DILocation(line: 129, column: 17, scope: !9522)
!9532 = !DILocation(line: 129, column: 24, scope: !9522)
!9533 = !DILocation(line: 130, column: 39, scope: !9522)
!9534 = !DILocation(line: 130, column: 17, scope: !9522)
!9535 = !DILocation(line: 130, column: 28, scope: !9522)
!9536 = !DILocation(line: 131, column: 11, scope: !9522)
!9537 = !DILocation(line: 131, column: 23, scope: !9522)
!9538 = !DILocation(line: 131, column: 30, scope: !9522)
!9539 = !DILocation(line: 132, column: 22, scope: !9522)
!9540 = !DILocation(line: 135, column: 17, scope: !9522)
!9541 = !DILocation(line: 135, column: 29, scope: !9522)
!9542 = !DILocation(line: 137, column: 12, scope: !9522)
!9543 = !DILocation(line: 137, column: 29, scope: !9522)
!9544 = !DILocation(line: 138, column: 1, scope: !9522)
!9545 = distinct !DISubprogram(name: "vListInsert", scope: !2188, file: !2188, line: 141, type: !9523, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !9546)
!9546 = !{!9547, !9548, !9549, !9550}
!9547 = !DILocalVariable(name: "pxList", arg: 1, scope: !9545, file: !2188, line: 141, type: !9496)
!9548 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !9545, file: !2188, line: 141, type: !9515)
!9549 = !DILocalVariable(name: "pxIterator", scope: !9545, file: !2188, line: 143, type: !2190)
!9550 = !DILocalVariable(name: "xValueOfInsertion", scope: !9545, file: !2188, line: 144, type: !7612)
!9551 = !DILocation(line: 0, scope: !9545)
!9552 = !DILocation(line: 144, column: 53, scope: !9545)
!9553 = !DILocation(line: 160, column: 24, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9545, file: !2188, line: 160, column: 6)
!9555 = !DILocation(line: 160, column: 6, scope: !9545)
!9556 = !DILocation(line: 162, column: 33, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9554, file: !2188, line: 161, column: 2)
!9558 = !DILocation(line: 195, column: 38, scope: !9545)
!9559 = !DILocation(line: 163, column: 2, scope: !9557)
!9560 = !DILocation(line: 188, column: 49, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9562, file: !2188, line: 188, column: 3)
!9562 = distinct !DILexicalBlock(scope: !9554, file: !2188, line: 165, column: 2)
!9563 = !DILocation(line: 188, column: 21, scope: !9561)
!9564 = !DILocation(line: 188, column: 8, scope: !9561)
!9565 = !DILocation(line: 0, scope: !9561)
!9566 = !DILocation(line: 188, column: 73, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9561, file: !2188, line: 188, column: 3)
!9568 = !DILocation(line: 188, column: 81, scope: !9567)
!9569 = !DILocation(line: 188, column: 92, scope: !9567)
!9570 = !DILocation(line: 188, column: 3, scope: !9561)
!9571 = distinct !{!9571, !9570, !9572}
!9572 = !DILocation(line: 192, column: 3, scope: !9561)
!9573 = !DILocation(line: 0, scope: !9554)
!9574 = !DILocation(line: 195, column: 17, scope: !9545)
!9575 = !DILocation(line: 195, column: 24, scope: !9545)
!9576 = !DILocation(line: 196, column: 25, scope: !9545)
!9577 = !DILocation(line: 196, column: 36, scope: !9545)
!9578 = !DILocation(line: 197, column: 17, scope: !9545)
!9579 = !DILocation(line: 197, column: 28, scope: !9545)
!9580 = !DILocation(line: 198, column: 21, scope: !9545)
!9581 = !DILocation(line: 202, column: 17, scope: !9545)
!9582 = !DILocation(line: 202, column: 29, scope: !9545)
!9583 = !DILocation(line: 204, column: 12, scope: !9545)
!9584 = !DILocation(line: 204, column: 29, scope: !9545)
!9585 = !DILocation(line: 205, column: 1, scope: !9545)
!9586 = distinct !DISubprogram(name: "uxListRemove", scope: !2188, file: !2188, line: 208, type: !9587, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !9589)
!9587 = !DISubroutineType(types: !9588)
!9588 = !{!862, !9515}
!9589 = !{!9590, !9591}
!9590 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !9586, file: !2188, line: 208, type: !9515)
!9591 = !DILocalVariable(name: "pxList", scope: !9586, file: !2188, line: 212, type: !9496)
!9592 = !DILocation(line: 0, scope: !9586)
!9593 = !DILocation(line: 212, column: 54, scope: !9586)
!9594 = !DILocation(line: 214, column: 55, scope: !9586)
!9595 = !DILocation(line: 214, column: 18, scope: !9586)
!9596 = !DILocation(line: 214, column: 26, scope: !9586)
!9597 = !DILocation(line: 214, column: 37, scope: !9586)
!9598 = !DILocation(line: 215, column: 55, scope: !9586)
!9599 = !DILocation(line: 215, column: 18, scope: !9586)
!9600 = !DILocation(line: 215, column: 30, scope: !9586)
!9601 = !DILocation(line: 215, column: 37, scope: !9586)
!9602 = !DILocation(line: 218, column: 14, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9586, file: !2188, line: 218, column: 6)
!9604 = !DILocation(line: 218, column: 22, scope: !9603)
!9605 = !DILocation(line: 218, column: 6, scope: !9586)
!9606 = !DILocation(line: 220, column: 37, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !2188, line: 219, column: 2)
!9608 = !DILocation(line: 220, column: 19, scope: !9607)
!9609 = !DILocation(line: 221, column: 2, scope: !9607)
!9610 = !DILocation(line: 227, column: 30, scope: !9586)
!9611 = !DILocation(line: 228, column: 12, scope: !9586)
!9612 = !DILocation(line: 228, column: 29, scope: !9586)
!9613 = !DILocation(line: 230, column: 2, scope: !9586)
!9614 = distinct !DISubprogram(name: "xQueueGenericReset", scope: !986, file: !986, line: 260, type: !9615, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9617)
!9615 = !DISubroutineType(types: !9616)
!9616 = !{!869, !1044, !869}
!9617 = !{!9618, !9619, !9620}
!9618 = !DILocalVariable(name: "xQueue", arg: 1, scope: !9614, file: !986, line: 260, type: !1044)
!9619 = !DILocalVariable(name: "xNewQueue", arg: 2, scope: !9614, file: !986, line: 260, type: !869)
!9620 = !DILocalVariable(name: "pxQueue", scope: !9614, file: !986, line: 262, type: !9621)
!9621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!9622 = !DILocation(line: 0, scope: !9614)
!9623 = !DILocation(line: 264, column: 2, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9614, file: !986, line: 264, column: 2)
!9625 = !DILocation(line: 264, column: 2, scope: !9614)
!9626 = !DILocation(line: 264, column: 2, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9624, file: !986, line: 264, column: 2)
!9628 = !DILocation(line: 266, column: 2, scope: !9614)
!9629 = !DILocation(line: 268, column: 30, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9614, file: !986, line: 267, column: 2)
!9631 = !DILocation(line: 268, column: 50, scope: !9630)
!9632 = !DILocation(line: 268, column: 70, scope: !9630)
!9633 = !DILocation(line: 268, column: 59, scope: !9630)
!9634 = !DILocation(line: 268, column: 37, scope: !9630)
!9635 = !DILocation(line: 268, column: 12, scope: !9630)
!9636 = !DILocation(line: 268, column: 19, scope: !9630)
!9637 = !DILocation(line: 269, column: 12, scope: !9630)
!9638 = !DILocation(line: 269, column: 30, scope: !9630)
!9639 = !DILocation(line: 270, column: 12, scope: !9630)
!9640 = !DILocation(line: 270, column: 22, scope: !9630)
!9641 = !DILocation(line: 271, column: 67, scope: !9630)
!9642 = !DILocation(line: 271, column: 90, scope: !9630)
!9643 = !DILocation(line: 271, column: 43, scope: !9630)
!9644 = !DILocation(line: 271, column: 12, scope: !9630)
!9645 = !DILocation(line: 271, column: 14, scope: !9630)
!9646 = !DILocation(line: 271, column: 25, scope: !9630)
!9647 = !DILocation(line: 272, column: 12, scope: !9630)
!9648 = !DILocation(line: 272, column: 20, scope: !9630)
!9649 = !DILocation(line: 273, column: 12, scope: !9630)
!9650 = !DILocation(line: 273, column: 20, scope: !9630)
!9651 = !DILocation(line: 275, column: 17, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9630, file: !986, line: 275, column: 7)
!9653 = !DILocation(line: 0, scope: !9652)
!9654 = !DILocation(line: 275, column: 7, scope: !9630)
!9655 = !DILocation(line: 282, column: 8, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9657, file: !986, line: 282, column: 8)
!9657 = distinct !DILexicalBlock(scope: !9652, file: !986, line: 276, column: 3)
!9658 = !DILocation(line: 282, column: 8, scope: !9657)
!9659 = !DILocation(line: 284, column: 9, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !986, line: 284, column: 9)
!9661 = distinct !DILexicalBlock(scope: !9656, file: !986, line: 283, column: 4)
!9662 = !DILocation(line: 284, column: 71, scope: !9660)
!9663 = !DILocation(line: 284, column: 9, scope: !9661)
!9664 = !DILocation(line: 286, column: 6, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !986, line: 286, column: 6)
!9666 = distinct !DILexicalBlock(scope: !9660, file: !986, line: 285, column: 5)
!9667 = !{i64 2148411822}
!9668 = !{i64 2148411862}
!9669 = !DILocation(line: 287, column: 5, scope: !9666)
!9670 = !DILocation(line: 301, column: 33, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9652, file: !986, line: 299, column: 3)
!9672 = !DILocation(line: 301, column: 4, scope: !9671)
!9673 = !DILocation(line: 302, column: 33, scope: !9671)
!9674 = !DILocation(line: 302, column: 4, scope: !9671)
!9675 = !DILocation(line: 305, column: 2, scope: !9614)
!9676 = !DILocation(line: 309, column: 2, scope: !9614)
!9677 = distinct !DISubprogram(name: "xQueueGenericCreate", scope: !986, file: !986, line: 313, type: !9678, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9680)
!9678 = !DISubroutineType(types: !9679)
!9679 = !{!1044, !8458, !8458, !936}
!9680 = !{!9681, !9682, !9683, !9684, !9685, !9686, !9687}
!9681 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !9677, file: !986, line: 313, type: !8458)
!9682 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !9677, file: !986, line: 313, type: !8458)
!9683 = !DILocalVariable(name: "ucQueueType", arg: 3, scope: !9677, file: !986, line: 313, type: !936)
!9684 = !DILocalVariable(name: "pxNewQueue", scope: !9677, file: !986, line: 315, type: !988)
!9685 = !DILocalVariable(name: "xQueueSizeInBytes", scope: !9677, file: !986, line: 316, type: !919)
!9686 = !DILocalVariable(name: "xReturn", scope: !9677, file: !986, line: 317, type: !1044)
!9687 = !DILocalVariable(name: "pcAllocatedBuffer", scope: !9677, file: !986, line: 318, type: !994)
!9688 = !DILocation(line: 0, scope: !9677)
!9689 = !DILocation(line: 324, column: 2, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9677, file: !986, line: 324, column: 2)
!9691 = !DILocation(line: 324, column: 2, scope: !9677)
!9692 = !DILocation(line: 324, column: 2, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9690, file: !986, line: 324, column: 2)
!9694 = !DILocation(line: 326, column: 17, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9677, file: !986, line: 326, column: 6)
!9696 = !DILocation(line: 326, column: 6, scope: !9677)
!9697 = !DILocation(line: 339, column: 35, scope: !9677)
!9698 = !DILocation(line: 341, column: 24, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9677, file: !986, line: 341, column: 6)
!9700 = !DILocation(line: 341, column: 6, scope: !9677)
!9701 = !DILocation(line: 345, column: 7, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9699, file: !986, line: 342, column: 2)
!9703 = !DILocation(line: 0, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9702, file: !986, line: 345, column: 7)
!9705 = !DILocation(line: 362, column: 15, scope: !9702)
!9706 = !DILocation(line: 362, column: 24, scope: !9702)
!9707 = !DILocation(line: 363, column: 15, scope: !9702)
!9708 = !DILocation(line: 363, column: 26, scope: !9702)
!9709 = !DILocation(line: 364, column: 12, scope: !9702)
!9710 = !DILocation(line: 368, column: 16, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9702, file: !986, line: 367, column: 3)
!9712 = !DILocation(line: 368, column: 28, scope: !9711)
!9713 = !DILocation(line: 386, column: 2, scope: !9677)
!9714 = !DILocation(line: 386, column: 2, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !986, line: 386, column: 2)
!9716 = distinct !DILexicalBlock(scope: !9677, file: !986, line: 386, column: 2)
!9717 = !DILocation(line: 388, column: 2, scope: !9677)
!9718 = distinct !DISubprogram(name: "xQueueCreateMutex", scope: !986, file: !986, line: 394, type: !9719, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9721)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{!1044, !936}
!9721 = !{!9722, !9723}
!9722 = !DILocalVariable(name: "ucQueueType", arg: 1, scope: !9718, file: !986, line: 394, type: !936)
!9723 = !DILocalVariable(name: "pxNewQueue", scope: !9718, file: !986, line: 396, type: !988)
!9724 = !DILocation(line: 0, scope: !9718)
!9725 = !DILocation(line: 403, column: 30, scope: !9718)
!9726 = !DILocation(line: 404, column: 7, scope: !9718)
!9727 = !DILocation(line: 407, column: 16, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9729, file: !986, line: 405, column: 3)
!9729 = distinct !DILexicalBlock(scope: !9718, file: !986, line: 404, column: 7)
!9730 = !DILocation(line: 407, column: 30, scope: !9728)
!9731 = !DILocation(line: 408, column: 16, scope: !9728)
!9732 = !DILocation(line: 408, column: 28, scope: !9728)
!9733 = !DILocation(line: 412, column: 16, scope: !9728)
!9734 = !DILocation(line: 412, column: 26, scope: !9728)
!9735 = !DILocation(line: 413, column: 16, scope: !9728)
!9736 = !DILocation(line: 413, column: 18, scope: !9728)
!9737 = !DILocation(line: 413, column: 29, scope: !9728)
!9738 = !DILocation(line: 418, column: 16, scope: !9728)
!9739 = !DILocation(line: 418, column: 34, scope: !9728)
!9740 = !DILocation(line: 419, column: 16, scope: !9728)
!9741 = !DILocation(line: 419, column: 25, scope: !9728)
!9742 = !DILocation(line: 420, column: 16, scope: !9728)
!9743 = !DILocation(line: 420, column: 27, scope: !9728)
!9744 = !DILocation(line: 421, column: 16, scope: !9728)
!9745 = !DILocation(line: 421, column: 24, scope: !9728)
!9746 = !DILocation(line: 422, column: 16, scope: !9728)
!9747 = !DILocation(line: 422, column: 24, scope: !9728)
!9748 = !DILocation(line: 426, column: 17, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9728, file: !986, line: 425, column: 4)
!9750 = !DILocation(line: 426, column: 29, scope: !9749)
!9751 = !DILocation(line: 437, column: 36, scope: !9728)
!9752 = !DILocation(line: 437, column: 4, scope: !9728)
!9753 = !DILocation(line: 438, column: 36, scope: !9728)
!9754 = !DILocation(line: 438, column: 4, scope: !9728)
!9755 = !DILocation(line: 443, column: 13, scope: !9728)
!9756 = !DILocation(line: 450, column: 3, scope: !9718)
!9757 = !DILocation(line: 450, column: 3, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !986, line: 450, column: 3)
!9759 = distinct !DILexicalBlock(scope: !9718, file: !986, line: 450, column: 3)
!9760 = !DILocation(line: 451, column: 3, scope: !9718)
!9761 = distinct !DISubprogram(name: "xQueueGenericSend", scope: !986, file: !986, line: 613, type: !9762, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9766)
!9762 = !DISubroutineType(types: !9763)
!9763 = !{!869, !1044, !9764, !884, !9765}
!9764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!9765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !869)
!9766 = !{!9767, !9768, !9769, !9770, !9771, !9772, !9773, !9779}
!9767 = !DILocalVariable(name: "xQueue", arg: 1, scope: !9761, file: !986, line: 613, type: !1044)
!9768 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !9761, file: !986, line: 613, type: !9764)
!9769 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !9761, file: !986, line: 613, type: !884)
!9770 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !9761, file: !986, line: 613, type: !9765)
!9771 = !DILocalVariable(name: "xEntryTimeSet", scope: !9761, file: !986, line: 615, type: !869)
!9772 = !DILocalVariable(name: "xYieldRequired", scope: !9761, file: !986, line: 615, type: !869)
!9773 = !DILocalVariable(name: "xTimeOut", scope: !9761, file: !986, line: 616, type: !9774)
!9774 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !847, line: 138, baseType: !9775)
!9775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !847, line: 134, size: 64, elements: !9776)
!9776 = !{!9777, !9778}
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !9775, file: !847, line: 136, baseType: !869, size: 32)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !9775, file: !847, line: 137, baseType: !884, size: 32, offset: 32)
!9779 = !DILocalVariable(name: "pxQueue", scope: !9761, file: !986, line: 617, type: !9621)
!9780 = !DILocation(line: 0, scope: !9761)
!9781 = !DILocation(line: 616, column: 1, scope: !9761)
!9782 = !DILocation(line: 616, column: 11, scope: !9761)
!9783 = !DILocation(line: 617, column: 27, scope: !9761)
!9784 = !DILocation(line: 619, column: 2, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9761, file: !986, line: 619, column: 2)
!9786 = !DILocation(line: 619, column: 2, scope: !9761)
!9787 = !DILocation(line: 619, column: 2, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9785, file: !986, line: 619, column: 2)
!9789 = !DILocation(line: 620, column: 2, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9761, file: !986, line: 620, column: 2)
!9791 = !DILocation(line: 620, column: 2, scope: !9761)
!9792 = !DILocation(line: 620, column: 2, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9790, file: !986, line: 620, column: 2)
!9794 = !DILocation(line: 621, column: 2, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9761, file: !986, line: 621, column: 2)
!9796 = !DILocation(line: 621, column: 2, scope: !9761)
!9797 = !DILocation(line: 621, column: 2, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9795, file: !986, line: 621, column: 2)
!9799 = !DILocation(line: 624, column: 3, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !986, line: 624, column: 3)
!9801 = distinct !DILexicalBlock(scope: !9761, file: !986, line: 623, column: 2)
!9802 = !DILocation(line: 624, column: 3, scope: !9801)
!9803 = !DILocation(line: 624, column: 3, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9800, file: !986, line: 624, column: 3)
!9805 = !DILocation(line: 634, column: 3, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9807, file: !986, line: 633, column: 2)
!9807 = distinct !DILexicalBlock(scope: !9808, file: !986, line: 632, column: 2)
!9808 = distinct !DILexicalBlock(scope: !9761, file: !986, line: 632, column: 2)
!9809 = !DILocation(line: 640, column: 19, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !986, line: 640, column: 8)
!9811 = distinct !DILexicalBlock(scope: !9806, file: !986, line: 635, column: 3)
!9812 = !DILocation(line: 640, column: 48, scope: !9810)
!9813 = !DILocation(line: 640, column: 37, scope: !9810)
!9814 = !DILocation(line: 640, column: 59, scope: !9810)
!9815 = !DILocation(line: 733, column: 22, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !986, line: 733, column: 9)
!9817 = distinct !DILexicalBlock(scope: !9810, file: !986, line: 732, column: 4)
!9818 = !DILocation(line: 733, column: 9, scope: !9817)
!9819 = !DILocation(line: 643, column: 22, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9810, file: !986, line: 641, column: 4)
!9821 = !DILocation(line: 698, column: 10, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !986, line: 698, column: 10)
!9823 = distinct !DILexicalBlock(scope: !9820, file: !986, line: 695, column: 5)
!9824 = !DILocation(line: 698, column: 10, scope: !9823)
!9825 = !DILocation(line: 700, column: 11, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9827, file: !986, line: 700, column: 11)
!9827 = distinct !DILexicalBlock(scope: !9822, file: !986, line: 699, column: 6)
!9828 = !DILocation(line: 700, column: 76, scope: !9826)
!9829 = !DILocation(line: 700, column: 11, scope: !9827)
!9830 = !DILocation(line: 706, column: 8, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !986, line: 706, column: 8)
!9832 = distinct !DILexicalBlock(scope: !9826, file: !986, line: 701, column: 7)
!9833 = !{i64 2148415363}
!9834 = !{i64 2148415403}
!9835 = !DILocation(line: 707, column: 7, scope: !9832)
!9836 = !DILocation(line: 713, column: 30, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9822, file: !986, line: 713, column: 15)
!9838 = !DILocation(line: 713, column: 15, scope: !9822)
!9839 = !DILocation(line: 719, column: 7, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !986, line: 719, column: 7)
!9841 = distinct !DILexicalBlock(scope: !9837, file: !986, line: 714, column: 6)
!9842 = !{i64 2148415865}
!9843 = !{i64 2148415905}
!9844 = !DILocation(line: 720, column: 6, scope: !9841)
!9845 = !DILocation(line: 728, column: 5, scope: !9820)
!9846 = !DILocation(line: 729, column: 5, scope: !9820)
!9847 = !DILocation(line: 737, column: 6, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9816, file: !986, line: 734, column: 5)
!9849 = !DILocation(line: 742, column: 6, scope: !9848)
!9850 = !DILocation(line: 748, column: 6, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9852, file: !986, line: 745, column: 5)
!9852 = distinct !DILexicalBlock(scope: !9816, file: !986, line: 744, column: 14)
!9853 = !DILocation(line: 750, column: 5, scope: !9851)
!9854 = !DILocation(line: 758, column: 3, scope: !9806)
!9855 = !DILocation(line: 763, column: 3, scope: !9806)
!9856 = !DILocation(line: 764, column: 3, scope: !9806)
!9857 = !DILocation(line: 764, column: 3, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9859, file: !986, line: 764, column: 3)
!9859 = distinct !DILexicalBlock(scope: !9806, file: !986, line: 764, column: 3)
!9860 = !DILocation(line: 764, column: 3, scope: !9859)
!9861 = !DILocation(line: 764, column: 3, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9858, file: !986, line: 764, column: 3)
!9863 = !DILocation(line: 764, column: 3, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9859, file: !986, line: 764, column: 3)
!9865 = !DILocation(line: 764, column: 3, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9864, file: !986, line: 764, column: 3)
!9867 = !DILocation(line: 767, column: 7, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9806, file: !986, line: 767, column: 7)
!9869 = !DILocation(line: 767, column: 56, scope: !9868)
!9870 = !DILocation(line: 767, column: 7, scope: !9806)
!9871 = !DILocation(line: 769, column: 8, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9873, file: !986, line: 769, column: 8)
!9873 = distinct !DILexicalBlock(scope: !9868, file: !986, line: 768, column: 3)
!9874 = !DILocation(line: 769, column: 34, scope: !9872)
!9875 = !DILocation(line: 769, column: 8, scope: !9873)
!9876 = !DILocation(line: 772, column: 63, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9872, file: !986, line: 770, column: 4)
!9878 = !DILocation(line: 772, column: 5, scope: !9877)
!9879 = !DILocation(line: 779, column: 5, scope: !9877)
!9880 = !DILocation(line: 786, column: 9, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9877, file: !986, line: 786, column: 9)
!9882 = !DILocation(line: 786, column: 26, scope: !9881)
!9883 = !DILocation(line: 786, column: 9, scope: !9877)
!9884 = !DILocation(line: 788, column: 6, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9886, file: !986, line: 788, column: 6)
!9886 = distinct !DILexicalBlock(scope: !9881, file: !986, line: 787, column: 5)
!9887 = !{i64 2148417166}
!9888 = !{i64 2148417206}
!9889 = !DILocation(line: 789, column: 5, scope: !9886)
!9890 = !DILocation(line: 794, column: 5, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9872, file: !986, line: 792, column: 4)
!9892 = !DILocation(line: 795, column: 14, scope: !9891)
!9893 = !DILocation(line: 801, column: 4, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9868, file: !986, line: 799, column: 3)
!9895 = !DILocation(line: 802, column: 13, scope: !9894)
!9896 = !DILocation(line: 807, column: 4, scope: !9894)
!9897 = distinct !{!9897, !9898, !9899}
!9898 = !DILocation(line: 632, column: 2, scope: !9808)
!9899 = !DILocation(line: 809, column: 2, scope: !9808)
!9900 = !DILocation(line: 733, column: 9, scope: !9816)
!9901 = !DILocation(line: 0, scope: !9806)
!9902 = !DILocation(line: 810, column: 1, scope: !9761)
!9903 = distinct !DISubprogram(name: "prvCopyDataToQueue", scope: !986, file: !986, line: 1783, type: !9904, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9906)
!9904 = !DISubroutineType(types: !9905)
!9905 = !{!869, !9621, !375, !9765}
!9906 = !{!9907, !9908, !9909, !9910}
!9907 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9903, file: !986, line: 1783, type: !9621)
!9908 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !9903, file: !986, line: 1783, type: !375)
!9909 = !DILocalVariable(name: "xPosition", arg: 3, scope: !9903, file: !986, line: 1783, type: !9765)
!9910 = !DILocalVariable(name: "xReturn", scope: !9903, file: !986, line: 1785, type: !869)
!9911 = !DILocation(line: 0, scope: !9903)
!9912 = !DILocation(line: 1787, column: 15, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9903, file: !986, line: 1787, column: 6)
!9914 = !DILocation(line: 1787, column: 26, scope: !9913)
!9915 = !DILocation(line: 1787, column: 6, scope: !9903)
!9916 = !DILocation(line: 1791, column: 17, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !986, line: 1791, column: 8)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !986, line: 1790, column: 3)
!9919 = distinct !DILexicalBlock(scope: !9913, file: !986, line: 1788, column: 2)
!9920 = !DILocation(line: 1791, column: 29, scope: !9917)
!9921 = !DILocation(line: 1791, column: 8, scope: !9918)
!9922 = !DILocation(line: 1794, column: 60, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9917, file: !986, line: 1792, column: 4)
!9924 = !DILocation(line: 1794, column: 15, scope: !9923)
!9925 = !DILocation(line: 1795, column: 28, scope: !9923)
!9926 = !DILocation(line: 1796, column: 4, scope: !9923)
!9927 = !DILocation(line: 1804, column: 21, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9913, file: !986, line: 1804, column: 11)
!9929 = !DILocation(line: 1804, column: 11, scope: !9913)
!9930 = !DILocation(line: 1806, column: 40, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9928, file: !986, line: 1805, column: 2)
!9932 = !DILocation(line: 1806, column: 12, scope: !9931)
!9933 = !DILocation(line: 1807, column: 34, scope: !9931)
!9934 = !DILocation(line: 1807, column: 22, scope: !9931)
!9935 = !DILocation(line: 1808, column: 38, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9931, file: !986, line: 1808, column: 7)
!9937 = !DILocation(line: 1808, column: 26, scope: !9936)
!9938 = !DILocation(line: 1808, column: 7, scope: !9931)
!9939 = !DILocation(line: 1810, column: 34, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9936, file: !986, line: 1809, column: 3)
!9941 = !DILocation(line: 1810, column: 23, scope: !9940)
!9942 = !DILocation(line: 1811, column: 3, scope: !9940)
!9943 = !DILocation(line: 1819, column: 42, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9928, file: !986, line: 1818, column: 2)
!9945 = !DILocation(line: 1819, column: 12, scope: !9944)
!9946 = !DILocation(line: 1820, column: 37, scope: !9944)
!9947 = !DILocation(line: 1820, column: 25, scope: !9944)
!9948 = !DILocation(line: 1821, column: 40, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9944, file: !986, line: 1821, column: 7)
!9950 = !DILocation(line: 1821, column: 29, scope: !9949)
!9951 = !DILocation(line: 1821, column: 7, scope: !9944)
!9952 = !DILocation(line: 1823, column: 39, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9949, file: !986, line: 1822, column: 3)
!9954 = !DILocation(line: 1823, column: 46, scope: !9953)
!9955 = !DILocation(line: 1823, column: 26, scope: !9953)
!9956 = !DILocation(line: 1824, column: 3, scope: !9953)
!9957 = !DILocation(line: 1830, column: 17, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9944, file: !986, line: 1830, column: 7)
!9959 = !DILocation(line: 1830, column: 7, scope: !9944)
!9960 = !DILocation(line: 1832, column: 17, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !986, line: 1832, column: 8)
!9962 = distinct !DILexicalBlock(scope: !9958, file: !986, line: 1831, column: 3)
!9963 = !DILocation(line: 1832, column: 35, scope: !9961)
!9964 = !DILocation(line: 1832, column: 8, scope: !9962)
!9965 = !DILocation(line: 1838, column: 5, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9961, file: !986, line: 1833, column: 4)
!9967 = !DILocation(line: 1839, column: 4, scope: !9966)
!9968 = !DILocation(line: 1851, column: 15, scope: !9903)
!9969 = !DILocation(line: 1851, column: 2, scope: !9903)
!9970 = !DILocation(line: 1853, column: 2, scope: !9903)
!9971 = distinct !DISubprogram(name: "prvIsQueueFull", scope: !986, file: !986, line: 2029, type: !9972, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9976)
!9972 = !DISubroutineType(types: !9973)
!9973 = !{!869, !9974}
!9974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9975, size: 32)
!9975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!9976 = !{!9977, !9978}
!9977 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9971, file: !986, line: 2029, type: !9974)
!9978 = !DILocalVariable(name: "xReturn", scope: !9971, file: !986, line: 2031, type: !869)
!9979 = !DILocation(line: 0, scope: !9971)
!9980 = !DILocation(line: 2033, column: 2, scope: !9971)
!9981 = !DILocation(line: 2035, column: 16, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9983, file: !986, line: 2035, column: 7)
!9983 = distinct !DILexicalBlock(scope: !9971, file: !986, line: 2034, column: 2)
!9984 = !DILocation(line: 2035, column: 46, scope: !9982)
!9985 = !DILocation(line: 2035, column: 34, scope: !9982)
!9986 = !DILocation(line: 2044, column: 2, scope: !9971)
!9987 = !DILocation(line: 2046, column: 2, scope: !9971)
!9988 = distinct !DISubprogram(name: "prvUnlockQueue", scope: !986, file: !986, line: 1875, type: !9989, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{null, !9621}
!9991 = !{!9992}
!9992 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9988, file: !986, line: 1875, type: !9621)
!9993 = !DILocation(line: 0, scope: !9988)
!9994 = !DILocation(line: 1883, column: 2, scope: !9988)
!9995 = !DILocation(line: 1933, column: 9, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !986, line: 1933, column: 9)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !986, line: 1930, column: 4)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !986, line: 1887, column: 3)
!9999 = distinct !DILexicalBlock(scope: !9988, file: !986, line: 1884, column: 2)
!10000 = !DILocation(line: 1886, column: 19, scope: !9999)
!10001 = !DILocation(line: 1886, column: 27, scope: !9999)
!10002 = !DILocation(line: 1886, column: 3, scope: !9999)
!10003 = !DILocation(line: 1933, column: 9, scope: !9997)
!10004 = !DILocation(line: 1935, column: 10, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10006, file: !986, line: 1935, column: 10)
!10006 = distinct !DILexicalBlock(scope: !9996, file: !986, line: 1934, column: 5)
!10007 = !DILocation(line: 1935, column: 75, scope: !10005)
!10008 = !DILocation(line: 1935, column: 10, scope: !10006)
!10009 = !DILocation(line: 1939, column: 7, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10005, file: !986, line: 1936, column: 6)
!10011 = !DILocation(line: 1940, column: 6, scope: !10010)
!10012 = !DILocation(line: 1953, column: 4, scope: !9998)
!10013 = distinct !{!10013, !10002, !10014}
!10014 = !DILocation(line: 1954, column: 3, scope: !9999)
!10015 = !DILocation(line: 1956, column: 20, scope: !9999)
!10016 = !DILocation(line: 1958, column: 2, scope: !9988)
!10017 = !DILocation(line: 1961, column: 2, scope: !9988)
!10018 = !DILocation(line: 1965, column: 8, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10020, file: !986, line: 1965, column: 8)
!10020 = distinct !DILexicalBlock(scope: !10021, file: !986, line: 1964, column: 3)
!10021 = distinct !DILexicalBlock(scope: !9988, file: !986, line: 1962, column: 2)
!10022 = !DILocation(line: 1963, column: 19, scope: !10021)
!10023 = !DILocation(line: 1963, column: 27, scope: !10021)
!10024 = !DILocation(line: 1963, column: 3, scope: !10021)
!10025 = !DILocation(line: 1965, column: 8, scope: !10020)
!10026 = !DILocation(line: 1967, column: 9, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10028, file: !986, line: 1967, column: 9)
!10028 = distinct !DILexicalBlock(scope: !10019, file: !986, line: 1966, column: 4)
!10029 = !DILocation(line: 1967, column: 71, scope: !10027)
!10030 = !DILocation(line: 1967, column: 9, scope: !10028)
!10031 = !DILocation(line: 1969, column: 6, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10027, file: !986, line: 1968, column: 5)
!10033 = !DILocation(line: 1970, column: 5, scope: !10032)
!10034 = !DILocation(line: 1976, column: 5, scope: !10028)
!10035 = distinct !{!10035, !10024, !10036}
!10036 = !DILocation(line: 1982, column: 3, scope: !10021)
!10037 = !DILocation(line: 1984, column: 20, scope: !10021)
!10038 = !DILocation(line: 1986, column: 2, scope: !9988)
!10039 = !DILocation(line: 1987, column: 1, scope: !9988)
!10040 = distinct !DISubprogram(name: "xQueueGiveMutexRecursive", scope: !986, file: !986, line: 489, type: !10041, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10043)
!10041 = !DISubroutineType(types: !10042)
!10042 = !{!869, !1044}
!10043 = !{!10044, !10045, !10046}
!10044 = !DILocalVariable(name: "xMutex", arg: 1, scope: !10040, file: !986, line: 489, type: !1044)
!10045 = !DILocalVariable(name: "xReturn", scope: !10040, file: !986, line: 491, type: !869)
!10046 = !DILocalVariable(name: "pxMutex", scope: !10040, file: !986, line: 492, type: !9621)
!10047 = !DILocation(line: 0, scope: !10040)
!10048 = !DILocation(line: 494, column: 3, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10040, file: !986, line: 494, column: 3)
!10050 = !DILocation(line: 494, column: 3, scope: !10040)
!10051 = !DILocation(line: 494, column: 3, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10049, file: !986, line: 494, column: 3)
!10053 = !DILocation(line: 502, column: 16, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10040, file: !986, line: 502, column: 7)
!10055 = !DILocation(line: 502, column: 44, scope: !10054)
!10056 = !DILocation(line: 502, column: 30, scope: !10054)
!10057 = !DILocation(line: 502, column: 7, scope: !10040)
!10058 = !DILocation(line: 511, column: 15, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10054, file: !986, line: 503, column: 3)
!10060 = !DILocation(line: 511, column: 17, scope: !10059)
!10061 = !DILocation(line: 511, column: 39, scope: !10059)
!10062 = !DILocation(line: 514, column: 40, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10059, file: !986, line: 514, column: 8)
!10064 = !DILocation(line: 514, column: 8, scope: !10059)
!10065 = !DILocation(line: 518, column: 14, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10063, file: !986, line: 515, column: 4)
!10067 = !DILocation(line: 519, column: 4, scope: !10066)
!10068 = !DILocation(line: 0, scope: !10054)
!10069 = !DILocation(line: 536, column: 3, scope: !10040)
!10070 = distinct !DISubprogram(name: "xQueueTakeMutexRecursive", scope: !986, file: !986, line: 544, type: !10071, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10073)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!869, !1044, !884}
!10073 = !{!10074, !10075, !10076, !10077}
!10074 = !DILocalVariable(name: "xMutex", arg: 1, scope: !10070, file: !986, line: 544, type: !1044)
!10075 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !10070, file: !986, line: 544, type: !884)
!10076 = !DILocalVariable(name: "xReturn", scope: !10070, file: !986, line: 546, type: !869)
!10077 = !DILocalVariable(name: "pxMutex", scope: !10070, file: !986, line: 547, type: !9621)
!10078 = !DILocation(line: 0, scope: !10070)
!10079 = !DILocation(line: 549, column: 3, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10070, file: !986, line: 549, column: 3)
!10081 = !DILocation(line: 549, column: 3, scope: !10070)
!10082 = !DILocation(line: 549, column: 3, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10080, file: !986, line: 549, column: 3)
!10084 = !DILocation(line: 556, column: 16, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10070, file: !986, line: 556, column: 7)
!10086 = !DILocation(line: 556, column: 44, scope: !10085)
!10087 = !DILocation(line: 556, column: 30, scope: !10085)
!10088 = !DILocation(line: 556, column: 7, scope: !10070)
!10089 = !DILocation(line: 563, column: 14, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10085, file: !986, line: 562, column: 3)
!10091 = !DILocation(line: 568, column: 16, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10090, file: !986, line: 568, column: 8)
!10093 = !DILocation(line: 568, column: 8, scope: !10090)
!10094 = !DILocation(line: 0, scope: !10085)
!10095 = !DILocation(line: 578, column: 3, scope: !10070)
!10096 = distinct !DISubprogram(name: "xQueueGenericReceive", scope: !986, file: !986, line: 1361, type: !10097, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10099)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!869, !1044, !7315, !884, !9765}
!10099 = !{!10100, !10101, !10102, !10103, !10104, !10105, !10106, !10107}
!10100 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10096, file: !986, line: 1361, type: !1044)
!10101 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10096, file: !986, line: 1361, type: !7315)
!10102 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !10096, file: !986, line: 1361, type: !884)
!10103 = !DILocalVariable(name: "xJustPeeking", arg: 4, scope: !10096, file: !986, line: 1361, type: !9765)
!10104 = !DILocalVariable(name: "xEntryTimeSet", scope: !10096, file: !986, line: 1363, type: !869)
!10105 = !DILocalVariable(name: "xTimeOut", scope: !10096, file: !986, line: 1364, type: !9774)
!10106 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !10096, file: !986, line: 1365, type: !994)
!10107 = !DILocalVariable(name: "pxQueue", scope: !10096, file: !986, line: 1366, type: !9621)
!10108 = !DILocation(line: 0, scope: !10096)
!10109 = !DILocation(line: 1364, column: 1, scope: !10096)
!10110 = !DILocation(line: 1364, column: 11, scope: !10096)
!10111 = !DILocation(line: 1366, column: 27, scope: !10096)
!10112 = !DILocation(line: 1368, column: 2, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10096, file: !986, line: 1368, column: 2)
!10114 = !DILocation(line: 1368, column: 2, scope: !10096)
!10115 = !DILocation(line: 1368, column: 2, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10113, file: !986, line: 1368, column: 2)
!10117 = !DILocation(line: 1369, column: 2, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10096, file: !986, line: 1369, column: 2)
!10119 = !DILocation(line: 1369, column: 2, scope: !10096)
!10120 = !DILocation(line: 1369, column: 2, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10118, file: !986, line: 1369, column: 2)
!10122 = !DILocation(line: 1372, column: 3, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !986, line: 1372, column: 3)
!10124 = distinct !DILexicalBlock(scope: !10096, file: !986, line: 1371, column: 2)
!10125 = !DILocation(line: 1372, column: 3, scope: !10124)
!10126 = !DILocation(line: 1372, column: 3, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10123, file: !986, line: 1372, column: 3)
!10128 = !DILocation(line: 1382, column: 3, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !986, line: 1381, column: 2)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !986, line: 1380, column: 2)
!10131 = distinct !DILexicalBlock(scope: !10096, file: !986, line: 1380, column: 2)
!10132 = !DILocation(line: 1386, column: 17, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10134, file: !986, line: 1386, column: 8)
!10134 = distinct !DILexicalBlock(scope: !10129, file: !986, line: 1383, column: 3)
!10135 = !DILocation(line: 1386, column: 35, scope: !10133)
!10136 = !DILocation(line: 1386, column: 8, scope: !10134)
!10137 = !DILocation(line: 1467, column: 22, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !986, line: 1467, column: 9)
!10139 = distinct !DILexicalBlock(scope: !10133, file: !986, line: 1466, column: 4)
!10140 = !DILocation(line: 1467, column: 9, scope: !10139)
!10141 = !DILocation(line: 1390, column: 39, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10133, file: !986, line: 1387, column: 4)
!10143 = !DILocation(line: 1390, column: 41, scope: !10142)
!10144 = !DILocation(line: 1392, column: 5, scope: !10142)
!10145 = !DILocation(line: 1394, column: 22, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10142, file: !986, line: 1394, column: 9)
!10147 = !DILocation(line: 1394, column: 9, scope: !10142)
!10148 = !DILocation(line: 1399, column: 6, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10146, file: !986, line: 1395, column: 5)
!10150 = !DILocation(line: 1403, column: 20, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10152, file: !986, line: 1403, column: 11)
!10152 = distinct !DILexicalBlock(scope: !10149, file: !986, line: 1402, column: 6)
!10153 = !DILocation(line: 1403, column: 32, scope: !10151)
!10154 = !DILocation(line: 1403, column: 11, scope: !10152)
!10155 = !DILocation(line: 1407, column: 46, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10151, file: !986, line: 1404, column: 7)
!10157 = !DILocation(line: 1407, column: 17, scope: !10156)
!10158 = !DILocation(line: 1407, column: 31, scope: !10156)
!10159 = !DILocation(line: 1408, column: 7, scope: !10156)
!10160 = !DILocation(line: 1416, column: 10, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10149, file: !986, line: 1416, column: 10)
!10162 = !DILocation(line: 1416, column: 10, scope: !10149)
!10163 = !DILocation(line: 1418, column: 11, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !986, line: 1418, column: 11)
!10165 = distinct !DILexicalBlock(scope: !10161, file: !986, line: 1417, column: 6)
!10166 = !DILocation(line: 1418, column: 73, scope: !10164)
!10167 = !DILocation(line: 1418, column: 11, scope: !10165)
!10168 = !DILocation(line: 1420, column: 8, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10170, file: !986, line: 1420, column: 8)
!10170 = distinct !DILexicalBlock(scope: !10164, file: !986, line: 1419, column: 7)
!10171 = !{i64 2148420434}
!10172 = !{i64 2148420474}
!10173 = !DILocation(line: 1421, column: 7, scope: !10170)
!10174 = !DILocation(line: 1438, column: 28, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10146, file: !986, line: 1433, column: 5)
!10176 = !DILocation(line: 1442, column: 10, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10175, file: !986, line: 1442, column: 10)
!10178 = !DILocation(line: 1442, column: 10, scope: !10175)
!10179 = !DILocation(line: 1446, column: 11, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10181, file: !986, line: 1446, column: 11)
!10181 = distinct !DILexicalBlock(scope: !10177, file: !986, line: 1443, column: 6)
!10182 = !DILocation(line: 1446, column: 76, scope: !10180)
!10183 = !DILocation(line: 1446, column: 11, scope: !10181)
!10184 = !DILocation(line: 1449, column: 8, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !986, line: 1449, column: 8)
!10186 = distinct !DILexicalBlock(scope: !10180, file: !986, line: 1447, column: 7)
!10187 = !{i64 2148421066}
!10188 = !{i64 2148421106}
!10189 = !DILocation(line: 1450, column: 7, scope: !10186)
!10190 = !DILocation(line: 1462, column: 5, scope: !10142)
!10191 = !DILocation(line: 1463, column: 5, scope: !10142)
!10192 = !DILocation(line: 1471, column: 6, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10138, file: !986, line: 1468, column: 5)
!10194 = !DILocation(line: 1473, column: 6, scope: !10193)
!10195 = !DILocation(line: 1479, column: 6, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10197, file: !986, line: 1476, column: 5)
!10197 = distinct !DILexicalBlock(scope: !10138, file: !986, line: 1475, column: 14)
!10198 = !DILocation(line: 1481, column: 5, scope: !10196)
!10199 = !DILocation(line: 1489, column: 3, scope: !10129)
!10200 = !DILocation(line: 1494, column: 3, scope: !10129)
!10201 = !DILocation(line: 1495, column: 3, scope: !10129)
!10202 = !DILocation(line: 1495, column: 3, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !986, line: 1495, column: 3)
!10204 = distinct !DILexicalBlock(scope: !10129, file: !986, line: 1495, column: 3)
!10205 = !DILocation(line: 1495, column: 3, scope: !10204)
!10206 = !DILocation(line: 1495, column: 3, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10203, file: !986, line: 1495, column: 3)
!10208 = !DILocation(line: 1495, column: 3, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10204, file: !986, line: 1495, column: 3)
!10210 = !DILocation(line: 1495, column: 3, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10209, file: !986, line: 1495, column: 3)
!10212 = !DILocation(line: 1498, column: 7, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10129, file: !986, line: 1498, column: 7)
!10214 = !DILocation(line: 1498, column: 56, scope: !10213)
!10215 = !DILocation(line: 1498, column: 7, scope: !10129)
!10216 = !DILocation(line: 1500, column: 8, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !986, line: 1500, column: 8)
!10218 = distinct !DILexicalBlock(scope: !10213, file: !986, line: 1499, column: 3)
!10219 = !DILocation(line: 1500, column: 35, scope: !10217)
!10220 = !DILocation(line: 1500, column: 8, scope: !10218)
!10221 = !DILocation(line: 1506, column: 19, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !986, line: 1506, column: 10)
!10223 = distinct !DILexicalBlock(scope: !10224, file: !986, line: 1505, column: 5)
!10224 = distinct !DILexicalBlock(scope: !10217, file: !986, line: 1501, column: 4)
!10225 = !DILocation(line: 1506, column: 31, scope: !10222)
!10226 = !DILocation(line: 1506, column: 10, scope: !10223)
!10227 = !DILocation(line: 1508, column: 7, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10222, file: !986, line: 1507, column: 6)
!10229 = !DILocation(line: 1510, column: 50, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10228, file: !986, line: 1509, column: 7)
!10231 = !DILocation(line: 1510, column: 8, scope: !10230)
!10232 = !DILocation(line: 1512, column: 7, scope: !10228)
!10233 = !DILocation(line: 1513, column: 6, scope: !10228)
!10234 = !DILocation(line: 1521, column: 66, scope: !10224)
!10235 = !DILocation(line: 1521, column: 5, scope: !10224)
!10236 = !DILocation(line: 1522, column: 5, scope: !10224)
!10237 = !DILocation(line: 1523, column: 9, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10224, file: !986, line: 1523, column: 9)
!10239 = !DILocation(line: 1523, column: 26, scope: !10238)
!10240 = !DILocation(line: 1523, column: 9, scope: !10224)
!10241 = !DILocation(line: 1525, column: 6, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !986, line: 1525, column: 6)
!10243 = distinct !DILexicalBlock(scope: !10238, file: !986, line: 1524, column: 5)
!10244 = !{i64 2148422481}
!10245 = !{i64 2148422521}
!10246 = !DILocation(line: 1526, column: 5, scope: !10243)
!10247 = !DILocation(line: 1535, column: 5, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10217, file: !986, line: 1533, column: 4)
!10249 = !DILocation(line: 1536, column: 14, scope: !10248)
!10250 = !DILocation(line: 1541, column: 4, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10213, file: !986, line: 1540, column: 3)
!10252 = !DILocation(line: 1542, column: 13, scope: !10251)
!10253 = !DILocation(line: 1544, column: 4, scope: !10251)
!10254 = distinct !{!10254, !10255, !10256}
!10255 = !DILocation(line: 1380, column: 2, scope: !10131)
!10256 = !DILocation(line: 1546, column: 2, scope: !10131)
!10257 = !DILocation(line: 1467, column: 9, scope: !10138)
!10258 = !DILocation(line: 0, scope: !10129)
!10259 = !DILocation(line: 1547, column: 1, scope: !10096)
!10260 = distinct !DISubprogram(name: "prvCopyDataFromQueue", scope: !986, file: !986, line: 1857, type: !10261, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10263)
!10261 = !DISubroutineType(types: !10262)
!10262 = !{null, !9621, !7315}
!10263 = !{!10264, !10265}
!10264 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10260, file: !986, line: 1857, type: !9621)
!10265 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10260, file: !986, line: 1857, type: !7315)
!10266 = !DILocation(line: 0, scope: !10260)
!10267 = !DILocation(line: 1859, column: 15, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10260, file: !986, line: 1859, column: 6)
!10269 = !DILocation(line: 1859, column: 26, scope: !10268)
!10270 = !DILocation(line: 1859, column: 6, scope: !10260)
!10271 = !DILocation(line: 1861, column: 14, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10268, file: !986, line: 1860, column: 2)
!10273 = !DILocation(line: 1861, column: 25, scope: !10272)
!10274 = !DILocation(line: 1862, column: 41, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10272, file: !986, line: 1862, column: 7)
!10276 = !DILocation(line: 1862, column: 29, scope: !10275)
!10277 = !DILocation(line: 1862, column: 7, scope: !10272)
!10278 = !DILocation(line: 1864, column: 37, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10275, file: !986, line: 1863, column: 3)
!10280 = !DILocation(line: 1864, column: 26, scope: !10279)
!10281 = !DILocation(line: 1865, column: 3, scope: !10279)
!10282 = !DILocation(line: 1870, column: 63, scope: !10272)
!10283 = !DILocation(line: 1870, column: 12, scope: !10272)
!10284 = !DILocation(line: 1871, column: 2, scope: !10272)
!10285 = !DILocation(line: 1872, column: 1, scope: !10260)
!10286 = distinct !DISubprogram(name: "prvIsQueueEmpty", scope: !986, file: !986, line: 1990, type: !9972, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10287)
!10287 = !{!10288, !10289}
!10288 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10286, file: !986, line: 1990, type: !9974)
!10289 = !DILocalVariable(name: "xReturn", scope: !10286, file: !986, line: 1992, type: !869)
!10290 = !DILocation(line: 0, scope: !10286)
!10291 = !DILocation(line: 1994, column: 2, scope: !10286)
!10292 = !DILocation(line: 1996, column: 16, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !986, line: 1996, column: 7)
!10294 = distinct !DILexicalBlock(scope: !10286, file: !986, line: 1995, column: 2)
!10295 = !DILocation(line: 1996, column: 34, scope: !10293)
!10296 = !DILocation(line: 2005, column: 2, scope: !10286)
!10297 = !DILocation(line: 2007, column: 2, scope: !10286)
!10298 = distinct !DISubprogram(name: "xQueueCreateCountingSemaphore", scope: !986, file: !986, line: 586, type: !10299, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10301)
!10299 = !DISubroutineType(types: !10300)
!10300 = !{!1044, !8458, !8458}
!10301 = !{!10302, !10303, !10304}
!10302 = !DILocalVariable(name: "uxMaxCount", arg: 1, scope: !10298, file: !986, line: 586, type: !8458)
!10303 = !DILocalVariable(name: "uxInitialCount", arg: 2, scope: !10298, file: !986, line: 586, type: !8458)
!10304 = !DILocalVariable(name: "xHandle", scope: !10298, file: !986, line: 588, type: !1044)
!10305 = !DILocation(line: 0, scope: !10298)
!10306 = !DILocation(line: 590, column: 3, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10298, file: !986, line: 590, column: 3)
!10308 = !DILocation(line: 590, column: 3, scope: !10298)
!10309 = !DILocation(line: 590, column: 3, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10307, file: !986, line: 590, column: 3)
!10311 = !DILocation(line: 591, column: 3, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10298, file: !986, line: 591, column: 3)
!10313 = !DILocation(line: 591, column: 3, scope: !10298)
!10314 = !DILocation(line: 591, column: 3, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10312, file: !986, line: 591, column: 3)
!10316 = !DILocation(line: 593, column: 13, scope: !10298)
!10317 = !DILocation(line: 595, column: 7, scope: !10298)
!10318 = !DILocation(line: 597, column: 31, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !986, line: 596, column: 3)
!10320 = distinct !DILexicalBlock(scope: !10298, file: !986, line: 595, column: 7)
!10321 = !DILocation(line: 597, column: 49, scope: !10319)
!10322 = !DILocation(line: 606, column: 3, scope: !10298)
!10323 = !DILocation(line: 606, column: 3, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !986, line: 606, column: 3)
!10325 = distinct !DILexicalBlock(scope: !10298, file: !986, line: 606, column: 3)
!10326 = !DILocation(line: 607, column: 3, scope: !10298)
!10327 = distinct !DISubprogram(name: "xQueueGenericSendFromISR", scope: !986, file: !986, line: 1058, type: !10328, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10330)
!10328 = !DISubroutineType(types: !10329)
!10329 = !{!869, !1044, !9764, !1100, !9765}
!10330 = !{!10331, !10332, !10333, !10334, !10335, !10336, !10337}
!10331 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10327, file: !986, line: 1058, type: !1044)
!10332 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !10327, file: !986, line: 1058, type: !9764)
!10333 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !10327, file: !986, line: 1058, type: !1100)
!10334 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !10327, file: !986, line: 1058, type: !9765)
!10335 = !DILocalVariable(name: "xReturn", scope: !10327, file: !986, line: 1060, type: !869)
!10336 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10327, file: !986, line: 1061, type: !862)
!10337 = !DILocalVariable(name: "pxQueue", scope: !10327, file: !986, line: 1062, type: !9621)
!10338 = !DILocation(line: 0, scope: !10327)
!10339 = !DILocation(line: 1062, column: 27, scope: !10327)
!10340 = !DILocation(line: 1064, column: 2, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10327, file: !986, line: 1064, column: 2)
!10342 = !DILocation(line: 1064, column: 2, scope: !10327)
!10343 = !DILocation(line: 1064, column: 2, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10341, file: !986, line: 1064, column: 2)
!10345 = !DILocation(line: 1065, column: 2, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10327, file: !986, line: 1065, column: 2)
!10347 = !DILocation(line: 1065, column: 2, scope: !10327)
!10348 = !DILocation(line: 1065, column: 2, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10346, file: !986, line: 1065, column: 2)
!10350 = !DILocation(line: 1066, column: 2, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10327, file: !986, line: 1066, column: 2)
!10352 = !DILocation(line: 1066, column: 2, scope: !10327)
!10353 = !DILocation(line: 1066, column: 2, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10351, file: !986, line: 1066, column: 2)
!10355 = !DILocation(line: 1082, column: 2, scope: !10327)
!10356 = !DILocation(line: 231, column: 2, scope: !10357, inlinedAt: !10361)
!10357 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !2255, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10358)
!10358 = !{!10359, !10360}
!10359 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !10357, file: !863, line: 229, type: !61)
!10360 = !DILocalVariable(name: "ulNewBASEPRI", scope: !10357, file: !863, line: 229, type: !61)
!10361 = distinct !DILocation(line: 1089, column: 27, scope: !10327)
!10362 = !{i64 755678, i64 755715, i64 755747, i64 755783, i64 755810}
!10363 = !DILocation(line: 0, scope: !10357, inlinedAt: !10361)
!10364 = !DILocation(line: 1091, column: 18, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !986, line: 1091, column: 7)
!10366 = distinct !DILexicalBlock(scope: !10327, file: !986, line: 1090, column: 2)
!10367 = !DILocation(line: 1091, column: 47, scope: !10365)
!10368 = !DILocation(line: 1091, column: 36, scope: !10365)
!10369 = !DILocation(line: 1091, column: 58, scope: !10365)
!10370 = !DILocation(line: 1100, column: 13, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10365, file: !986, line: 1092, column: 3)
!10372 = !DILocation(line: 1104, column: 17, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10371, file: !986, line: 1104, column: 8)
!10374 = !DILocation(line: 1104, column: 25, scope: !10373)
!10375 = !DILocation(line: 1104, column: 8, scope: !10371)
!10376 = !DILocation(line: 1159, column: 10, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10378, file: !986, line: 1159, column: 10)
!10378 = distinct !DILexicalBlock(scope: !10379, file: !986, line: 1158, column: 5)
!10379 = distinct !DILexicalBlock(scope: !10373, file: !986, line: 1105, column: 4)
!10380 = !DILocation(line: 1159, column: 10, scope: !10378)
!10381 = !DILocation(line: 1161, column: 11, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !986, line: 1161, column: 11)
!10383 = distinct !DILexicalBlock(scope: !10377, file: !986, line: 1160, column: 6)
!10384 = !DILocation(line: 1161, column: 76, scope: !10382)
!10385 = !DILocation(line: 1161, column: 11, scope: !10383)
!10386 = !DILocation(line: 1167, column: 36, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10388, file: !986, line: 1166, column: 8)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !986, line: 1165, column: 12)
!10389 = distinct !DILexicalBlock(scope: !10382, file: !986, line: 1162, column: 7)
!10390 = !DILocation(line: 1168, column: 8, scope: !10387)
!10391 = !DILocation(line: 1190, column: 5, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10373, file: !986, line: 1187, column: 4)
!10393 = !DILocation(line: 0, scope: !10365)
!10394 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !10395, file: !863, line: 247, type: !61)
!10395 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2873, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10396)
!10396 = !{!10394}
!10397 = !DILocation(line: 0, scope: !10395, inlinedAt: !10398)
!10398 = distinct !DILocation(line: 1201, column: 2, scope: !10327)
!10399 = !DILocation(line: 249, column: 2, scope: !10395, inlinedAt: !10398)
!10400 = !{i64 756211}
!10401 = !DILocation(line: 1203, column: 2, scope: !10327)
!10402 = distinct !DISubprogram(name: "xQueueGiveFromISR", scope: !986, file: !986, line: 1207, type: !10403, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10405)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!869, !1044, !1100}
!10405 = !{!10406, !10407, !10408, !10409, !10410}
!10406 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10402, file: !986, line: 1207, type: !1044)
!10407 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !10402, file: !986, line: 1207, type: !1100)
!10408 = !DILocalVariable(name: "xReturn", scope: !10402, file: !986, line: 1209, type: !869)
!10409 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10402, file: !986, line: 1210, type: !862)
!10410 = !DILocalVariable(name: "pxQueue", scope: !10402, file: !986, line: 1211, type: !9621)
!10411 = !DILocation(line: 0, scope: !10402)
!10412 = !DILocation(line: 1213, column: 2, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10402, file: !986, line: 1213, column: 2)
!10414 = !DILocation(line: 1213, column: 2, scope: !10402)
!10415 = !DILocation(line: 1213, column: 2, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10413, file: !986, line: 1213, column: 2)
!10417 = !DILocation(line: 1216, column: 2, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10402, file: !986, line: 1216, column: 2)
!10419 = !DILocation(line: 1216, column: 2, scope: !10402)
!10420 = !DILocation(line: 1216, column: 2, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10418, file: !986, line: 1216, column: 2)
!10422 = !DILocation(line: 1232, column: 2, scope: !10402)
!10423 = !DILocation(line: 231, column: 2, scope: !10357, inlinedAt: !10424)
!10424 = distinct !DILocation(line: 1239, column: 27, scope: !10402)
!10425 = !DILocation(line: 0, scope: !10357, inlinedAt: !10424)
!10426 = !DILocation(line: 1244, column: 16, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !986, line: 1244, column: 7)
!10428 = distinct !DILexicalBlock(scope: !10402, file: !986, line: 1240, column: 2)
!10429 = !DILocation(line: 1244, column: 45, scope: !10427)
!10430 = !DILocation(line: 1244, column: 34, scope: !10427)
!10431 = !DILocation(line: 1244, column: 7, scope: !10428)
!10432 = !DILocation(line: 1254, column: 4, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10427, file: !986, line: 1245, column: 3)
!10434 = !DILocation(line: 1258, column: 17, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10433, file: !986, line: 1258, column: 8)
!10436 = !DILocation(line: 1258, column: 25, scope: !10435)
!10437 = !DILocation(line: 1258, column: 8, scope: !10433)
!10438 = !DILocation(line: 1313, column: 10, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !986, line: 1313, column: 10)
!10440 = distinct !DILexicalBlock(scope: !10441, file: !986, line: 1312, column: 5)
!10441 = distinct !DILexicalBlock(scope: !10435, file: !986, line: 1259, column: 4)
!10442 = !DILocation(line: 1313, column: 10, scope: !10440)
!10443 = !DILocation(line: 1315, column: 11, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !986, line: 1315, column: 11)
!10445 = distinct !DILexicalBlock(scope: !10439, file: !986, line: 1314, column: 6)
!10446 = !DILocation(line: 1315, column: 76, scope: !10444)
!10447 = !DILocation(line: 1315, column: 11, scope: !10445)
!10448 = !DILocation(line: 1321, column: 36, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !986, line: 1320, column: 8)
!10450 = distinct !DILexicalBlock(scope: !10451, file: !986, line: 1319, column: 12)
!10451 = distinct !DILexicalBlock(scope: !10444, file: !986, line: 1316, column: 7)
!10452 = !DILocation(line: 1322, column: 8, scope: !10449)
!10453 = !DILocation(line: 1344, column: 5, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10435, file: !986, line: 1341, column: 4)
!10455 = !DILocation(line: 0, scope: !10427)
!10456 = !DILocation(line: 0, scope: !10395, inlinedAt: !10457)
!10457 = distinct !DILocation(line: 1355, column: 2, scope: !10402)
!10458 = !DILocation(line: 249, column: 2, scope: !10395, inlinedAt: !10457)
!10459 = !DILocation(line: 1357, column: 2, scope: !10402)
!10460 = distinct !DISubprogram(name: "xQueueReceiveFromISR", scope: !986, file: !986, line: 1550, type: !10461, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10463)
!10461 = !DISubroutineType(types: !10462)
!10462 = !{!869, !1044, !7315, !1100}
!10463 = !{!10464, !10465, !10466, !10467, !10468, !10469}
!10464 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10460, file: !986, line: 1550, type: !1044)
!10465 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10460, file: !986, line: 1550, type: !7315)
!10466 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !10460, file: !986, line: 1550, type: !1100)
!10467 = !DILocalVariable(name: "xReturn", scope: !10460, file: !986, line: 1552, type: !869)
!10468 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10460, file: !986, line: 1553, type: !862)
!10469 = !DILocalVariable(name: "pxQueue", scope: !10460, file: !986, line: 1554, type: !9621)
!10470 = !DILocation(line: 0, scope: !10460)
!10471 = !DILocation(line: 1554, column: 27, scope: !10460)
!10472 = !DILocation(line: 1556, column: 2, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10460, file: !986, line: 1556, column: 2)
!10474 = !DILocation(line: 1556, column: 2, scope: !10460)
!10475 = !DILocation(line: 1556, column: 2, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10473, file: !986, line: 1556, column: 2)
!10477 = !DILocation(line: 1557, column: 2, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10460, file: !986, line: 1557, column: 2)
!10479 = !DILocation(line: 1557, column: 2, scope: !10460)
!10480 = !DILocation(line: 1557, column: 2, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10478, file: !986, line: 1557, column: 2)
!10482 = !DILocation(line: 1573, column: 2, scope: !10460)
!10483 = !DILocation(line: 231, column: 2, scope: !10357, inlinedAt: !10484)
!10484 = distinct !DILocation(line: 1575, column: 27, scope: !10460)
!10485 = !DILocation(line: 0, scope: !10357, inlinedAt: !10484)
!10486 = !DILocation(line: 1578, column: 16, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !986, line: 1578, column: 7)
!10488 = distinct !DILexicalBlock(scope: !10460, file: !986, line: 1576, column: 2)
!10489 = !DILocation(line: 1578, column: 34, scope: !10487)
!10490 = !DILocation(line: 1578, column: 7, scope: !10488)
!10491 = !DILocation(line: 1582, column: 4, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10487, file: !986, line: 1579, column: 3)
!10493 = !DILocation(line: 1583, column: 4, scope: !10492)
!10494 = !DILocation(line: 1589, column: 17, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10492, file: !986, line: 1589, column: 8)
!10496 = !DILocation(line: 1589, column: 25, scope: !10495)
!10497 = !DILocation(line: 1589, column: 8, scope: !10492)
!10498 = !DILocation(line: 1591, column: 9, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !986, line: 1591, column: 9)
!10500 = distinct !DILexicalBlock(scope: !10495, file: !986, line: 1590, column: 4)
!10501 = !DILocation(line: 1591, column: 9, scope: !10500)
!10502 = !DILocation(line: 1593, column: 10, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !986, line: 1593, column: 10)
!10504 = distinct !DILexicalBlock(scope: !10499, file: !986, line: 1592, column: 5)
!10505 = !DILocation(line: 1593, column: 72, scope: !10503)
!10506 = !DILocation(line: 1593, column: 10, scope: !10504)
!10507 = !DILocation(line: 1599, column: 35, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10509, file: !986, line: 1598, column: 7)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !986, line: 1597, column: 11)
!10510 = distinct !DILexicalBlock(scope: !10503, file: !986, line: 1594, column: 6)
!10511 = !DILocation(line: 1600, column: 7, scope: !10508)
!10512 = !DILocation(line: 1620, column: 5, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10495, file: !986, line: 1617, column: 4)
!10514 = !DILocation(line: 0, scope: !10487)
!10515 = !DILocation(line: 0, scope: !10395, inlinedAt: !10516)
!10516 = distinct !DILocation(line: 1631, column: 2, scope: !10460)
!10517 = !DILocation(line: 249, column: 2, scope: !10395, inlinedAt: !10516)
!10518 = !DILocation(line: 1633, column: 2, scope: !10460)
!10519 = distinct !DISubprogram(name: "xQueuePeekFromISR", scope: !986, file: !986, line: 1637, type: !10520, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10522)
!10520 = !DISubroutineType(types: !10521)
!10521 = !{!869, !1044, !7315}
!10522 = !{!10523, !10524, !10525, !10526, !10527, !10528}
!10523 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10519, file: !986, line: 1637, type: !1044)
!10524 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10519, file: !986, line: 1637, type: !7315)
!10525 = !DILocalVariable(name: "xReturn", scope: !10519, file: !986, line: 1639, type: !869)
!10526 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10519, file: !986, line: 1640, type: !862)
!10527 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !10519, file: !986, line: 1641, type: !994)
!10528 = !DILocalVariable(name: "pxQueue", scope: !10519, file: !986, line: 1642, type: !9621)
!10529 = !DILocation(line: 0, scope: !10519)
!10530 = !DILocation(line: 1642, column: 27, scope: !10519)
!10531 = !DILocation(line: 1644, column: 2, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10519, file: !986, line: 1644, column: 2)
!10533 = !DILocation(line: 1644, column: 2, scope: !10519)
!10534 = !DILocation(line: 1644, column: 2, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10532, file: !986, line: 1644, column: 2)
!10536 = !DILocation(line: 1645, column: 2, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10519, file: !986, line: 1645, column: 2)
!10538 = !DILocation(line: 1645, column: 2, scope: !10519)
!10539 = !DILocation(line: 1645, column: 2, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10537, file: !986, line: 1645, column: 2)
!10541 = !DILocation(line: 1646, column: 2, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10519, file: !986, line: 1646, column: 2)
!10543 = !DILocation(line: 1646, column: 2, scope: !10519)
!10544 = !DILocation(line: 1646, column: 2, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10542, file: !986, line: 1646, column: 2)
!10546 = !DILocation(line: 1662, column: 2, scope: !10519)
!10547 = !DILocation(line: 231, column: 2, scope: !10357, inlinedAt: !10548)
!10548 = distinct !DILocation(line: 1664, column: 27, scope: !10519)
!10549 = !DILocation(line: 0, scope: !10357, inlinedAt: !10548)
!10550 = !DILocation(line: 1667, column: 16, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10552, file: !986, line: 1667, column: 7)
!10552 = distinct !DILexicalBlock(scope: !10519, file: !986, line: 1665, column: 2)
!10553 = !DILocation(line: 1667, column: 34, scope: !10551)
!10554 = !DILocation(line: 1667, column: 7, scope: !10552)
!10555 = !DILocation(line: 1673, column: 38, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10551, file: !986, line: 1668, column: 3)
!10557 = !DILocation(line: 1673, column: 40, scope: !10556)
!10558 = !DILocation(line: 1674, column: 4, scope: !10556)
!10559 = !DILocation(line: 1675, column: 26, scope: !10556)
!10560 = !DILocation(line: 1678, column: 3, scope: !10556)
!10561 = !DILocation(line: 0, scope: !10551)
!10562 = !DILocation(line: 0, scope: !10395, inlinedAt: !10563)
!10563 = distinct !DILocation(line: 1685, column: 2, scope: !10519)
!10564 = !DILocation(line: 249, column: 2, scope: !10395, inlinedAt: !10563)
!10565 = !DILocation(line: 1687, column: 2, scope: !10519)
!10566 = distinct !DISubprogram(name: "uxQueueMessagesWaiting", scope: !986, file: !986, line: 1691, type: !10567, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10570)
!10567 = !DISubroutineType(types: !10568)
!10568 = !{!862, !10569}
!10569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!10570 = !{!10571, !10572}
!10571 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10566, file: !986, line: 1691, type: !10569)
!10572 = !DILocalVariable(name: "uxReturn", scope: !10566, file: !986, line: 1693, type: !862)
!10573 = !DILocation(line: 0, scope: !10566)
!10574 = !DILocation(line: 1695, column: 2, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10566, file: !986, line: 1695, column: 2)
!10576 = !DILocation(line: 1695, column: 2, scope: !10566)
!10577 = !DILocation(line: 1695, column: 2, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10575, file: !986, line: 1695, column: 2)
!10579 = !DILocation(line: 1697, column: 2, scope: !10566)
!10580 = !DILocation(line: 1699, column: 40, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10566, file: !986, line: 1698, column: 2)
!10582 = !DILocation(line: 1701, column: 2, scope: !10566)
!10583 = !DILocation(line: 1703, column: 2, scope: !10566)
!10584 = distinct !DISubprogram(name: "uxQueueSpacesAvailable", scope: !986, file: !986, line: 1707, type: !10567, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10585)
!10585 = !{!10586, !10587, !10588}
!10586 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10584, file: !986, line: 1707, type: !10569)
!10587 = !DILocalVariable(name: "uxReturn", scope: !10584, file: !986, line: 1709, type: !862)
!10588 = !DILocalVariable(name: "pxQueue", scope: !10584, file: !986, line: 1710, type: !988)
!10589 = !DILocation(line: 0, scope: !10584)
!10590 = !DILocation(line: 1713, column: 2, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10584, file: !986, line: 1713, column: 2)
!10592 = !DILocation(line: 1713, column: 2, scope: !10584)
!10593 = !DILocation(line: 1713, column: 2, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10591, file: !986, line: 1713, column: 2)
!10595 = !DILocation(line: 1715, column: 2, scope: !10584)
!10596 = !DILocation(line: 1717, column: 23, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10584, file: !986, line: 1716, column: 2)
!10598 = !DILocation(line: 1717, column: 43, scope: !10597)
!10599 = !DILocation(line: 1717, column: 32, scope: !10597)
!10600 = !DILocation(line: 1719, column: 2, scope: !10584)
!10601 = !DILocation(line: 1721, column: 2, scope: !10584)
!10602 = distinct !DISubprogram(name: "uxQueueMessagesWaitingFromISR", scope: !986, file: !986, line: 1725, type: !10567, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10603)
!10603 = !{!10604, !10605}
!10604 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10602, file: !986, line: 1725, type: !10569)
!10605 = !DILocalVariable(name: "uxReturn", scope: !10602, file: !986, line: 1727, type: !862)
!10606 = !DILocation(line: 0, scope: !10602)
!10607 = !DILocation(line: 1729, column: 2, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10602, file: !986, line: 1729, column: 2)
!10609 = !DILocation(line: 1729, column: 2, scope: !10602)
!10610 = !DILocation(line: 1729, column: 2, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10608, file: !986, line: 1729, column: 2)
!10612 = !DILocation(line: 1731, column: 39, scope: !10602)
!10613 = !DILocation(line: 1733, column: 2, scope: !10602)
!10614 = distinct !DISubprogram(name: "vQueueDelete", scope: !986, file: !986, line: 1737, type: !10615, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10617)
!10615 = !DISubroutineType(types: !10616)
!10616 = !{null, !1044}
!10617 = !{!10618, !10619}
!10618 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10614, file: !986, line: 1737, type: !1044)
!10619 = !DILocalVariable(name: "pxQueue", scope: !10614, file: !986, line: 1739, type: !9621)
!10620 = !DILocation(line: 0, scope: !10614)
!10621 = !DILocation(line: 1741, column: 2, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10614, file: !986, line: 1741, column: 2)
!10623 = !DILocation(line: 1741, column: 2, scope: !10614)
!10624 = !DILocation(line: 1741, column: 2, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10622, file: !986, line: 1741, column: 2)
!10626 = !DILocation(line: 1746, column: 3, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10614, file: !986, line: 1745, column: 2)
!10628 = !DILocation(line: 1749, column: 2, scope: !10614)
!10629 = !DILocation(line: 1750, column: 1, scope: !10614)
!10630 = distinct !DISubprogram(name: "vQueueUnregisterQueue", scope: !986, file: !986, line: 2374, type: !10615, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10631)
!10631 = !{!10632, !10633}
!10632 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10630, file: !986, line: 2374, type: !1044)
!10633 = !DILocalVariable(name: "ux", scope: !10630, file: !986, line: 2376, type: !862)
!10634 = !DILocation(line: 0, scope: !10630)
!10635 = !DILocation(line: 2380, column: 3, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10630, file: !986, line: 2380, column: 3)
!10637 = !DILocation(line: 2382, column: 29, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10639, file: !986, line: 2382, column: 8)
!10639 = distinct !DILexicalBlock(scope: !10640, file: !986, line: 2381, column: 3)
!10640 = distinct !DILexicalBlock(scope: !10636, file: !986, line: 2380, column: 3)
!10641 = !DILocation(line: 2382, column: 37, scope: !10638)
!10642 = !DILocation(line: 2382, column: 8, scope: !10639)
!10643 = !DILocation(line: 2385, column: 26, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10638, file: !986, line: 2383, column: 4)
!10645 = !DILocation(line: 2385, column: 38, scope: !10644)
!10646 = !DILocation(line: 2386, column: 5, scope: !10644)
!10647 = !DILocation(line: 2380, column: 83, scope: !10640)
!10648 = !DILocation(line: 2380, column: 36, scope: !10640)
!10649 = distinct !{!10649, !10635, !10650}
!10650 = !DILocation(line: 2392, column: 3, scope: !10636)
!10651 = !DILocation(line: 2394, column: 2, scope: !10630)
!10652 = distinct !DISubprogram(name: "uxQueueGetQueueNumber", scope: !986, file: !986, line: 1755, type: !10653, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10655)
!10653 = !DISubroutineType(types: !10654)
!10654 = !{!862, !1044}
!10655 = !{!10656}
!10656 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10652, file: !986, line: 1755, type: !1044)
!10657 = !DILocation(line: 0, scope: !10652)
!10658 = !DILocation(line: 1757, column: 36, scope: !10652)
!10659 = !DILocation(line: 1757, column: 3, scope: !10652)
!10660 = distinct !DISubprogram(name: "vQueueSetQueueNumber", scope: !986, file: !986, line: 1765, type: !10661, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10663)
!10661 = !DISubroutineType(types: !10662)
!10662 = !{null, !1044, !862}
!10663 = !{!10664, !10665}
!10664 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10660, file: !986, line: 1765, type: !1044)
!10665 = !DILocalVariable(name: "uxQueueNumber", arg: 2, scope: !10660, file: !986, line: 1765, type: !862)
!10666 = !DILocation(line: 0, scope: !10660)
!10667 = !DILocation(line: 1767, column: 29, scope: !10660)
!10668 = !DILocation(line: 1767, column: 43, scope: !10660)
!10669 = !DILocation(line: 1768, column: 2, scope: !10660)
!10670 = distinct !DISubprogram(name: "ucQueueGetQueueType", scope: !986, file: !986, line: 1775, type: !10671, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10673)
!10671 = !DISubroutineType(types: !10672)
!10672 = !{!54, !1044}
!10673 = !{!10674}
!10674 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10670, file: !986, line: 1775, type: !1044)
!10675 = !DILocation(line: 0, scope: !10670)
!10676 = !DILocation(line: 1777, column: 36, scope: !10670)
!10677 = !DILocation(line: 1777, column: 3, scope: !10670)
!10678 = distinct !DISubprogram(name: "xQueueIsQueueEmptyFromISR", scope: !986, file: !986, line: 2011, type: !10679, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!869, !10569}
!10681 = !{!10682, !10683}
!10682 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10678, file: !986, line: 2011, type: !10569)
!10683 = !DILocalVariable(name: "xReturn", scope: !10678, file: !986, line: 2013, type: !869)
!10684 = !DILocation(line: 0, scope: !10678)
!10685 = !DILocation(line: 2015, column: 2, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10678, file: !986, line: 2015, column: 2)
!10687 = !DILocation(line: 2015, column: 2, scope: !10678)
!10688 = !DILocation(line: 2015, column: 2, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10686, file: !986, line: 2015, column: 2)
!10690 = !DILocation(line: 2016, column: 32, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10678, file: !986, line: 2016, column: 6)
!10692 = !DILocation(line: 2016, column: 50, scope: !10691)
!10693 = !DILocation(line: 2025, column: 2, scope: !10678)
!10694 = distinct !DISubprogram(name: "xQueueIsQueueFullFromISR", scope: !986, file: !986, line: 2050, type: !10679, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10695)
!10695 = !{!10696, !10697}
!10696 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10694, file: !986, line: 2050, type: !10569)
!10697 = !DILocalVariable(name: "xReturn", scope: !10694, file: !986, line: 2052, type: !869)
!10698 = !DILocation(line: 0, scope: !10694)
!10699 = !DILocation(line: 2054, column: 2, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10694, file: !986, line: 2054, column: 2)
!10701 = !DILocation(line: 2054, column: 2, scope: !10694)
!10702 = !DILocation(line: 2054, column: 2, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10700, file: !986, line: 2054, column: 2)
!10704 = !DILocation(line: 2055, column: 32, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10694, file: !986, line: 2055, column: 6)
!10706 = !DILocation(line: 2055, column: 79, scope: !10705)
!10707 = !DILocation(line: 2055, column: 50, scope: !10705)
!10708 = !DILocation(line: 2064, column: 2, scope: !10694)
!10709 = distinct !DISubprogram(name: "vQueueAddToRegistry", scope: !986, file: !986, line: 2345, type: !10710, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10712)
!10710 = !DISubroutineType(types: !10711)
!10711 = !{null, !1044, !331}
!10712 = !{!10713, !10714, !10715}
!10713 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10709, file: !986, line: 2345, type: !1044)
!10714 = !DILocalVariable(name: "pcQueueName", arg: 2, scope: !10709, file: !986, line: 2345, type: !331)
!10715 = !DILocalVariable(name: "ux", scope: !10709, file: !986, line: 2347, type: !862)
!10716 = !DILocation(line: 0, scope: !10709)
!10717 = !DILocation(line: 2351, column: 3, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10709, file: !986, line: 2351, column: 3)
!10719 = !DILocation(line: 2353, column: 29, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10721, file: !986, line: 2353, column: 8)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !986, line: 2352, column: 3)
!10722 = distinct !DILexicalBlock(scope: !10718, file: !986, line: 2351, column: 3)
!10723 = !DILocation(line: 2353, column: 41, scope: !10720)
!10724 = !DILocation(line: 2353, column: 8, scope: !10721)
!10725 = !DILocation(line: 2356, column: 38, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10720, file: !986, line: 2354, column: 4)
!10727 = !DILocation(line: 2357, column: 26, scope: !10726)
!10728 = !DILocation(line: 2357, column: 34, scope: !10726)
!10729 = !DILocation(line: 2360, column: 5, scope: !10726)
!10730 = !DILocation(line: 2351, column: 83, scope: !10722)
!10731 = !DILocation(line: 2351, column: 36, scope: !10722)
!10732 = distinct !{!10732, !10717, !10733}
!10733 = !DILocation(line: 2366, column: 3, scope: !10718)
!10734 = !DILocation(line: 2367, column: 2, scope: !10709)
!10735 = distinct !DISubprogram(name: "vQueueWaitForMessageRestricted", scope: !986, file: !986, line: 2401, type: !10736, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !985, retainedNodes: !10738)
!10736 = !DISubroutineType(types: !10737)
!10737 = !{null, !1044, !884}
!10738 = !{!10739, !10740, !10741}
!10739 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10735, file: !986, line: 2401, type: !1044)
!10740 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !10735, file: !986, line: 2401, type: !884)
!10741 = !DILocalVariable(name: "pxQueue", scope: !10735, file: !986, line: 2403, type: !9621)
!10742 = !DILocation(line: 0, scope: !10735)
!10743 = !DILocation(line: 2419, column: 3, scope: !10735)
!10744 = !DILocation(line: 2419, column: 3, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10746, file: !986, line: 2419, column: 3)
!10746 = distinct !DILexicalBlock(scope: !10735, file: !986, line: 2419, column: 3)
!10747 = !DILocation(line: 2419, column: 3, scope: !10746)
!10748 = !DILocation(line: 2419, column: 3, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10745, file: !986, line: 2419, column: 3)
!10750 = !DILocation(line: 2419, column: 3, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10746, file: !986, line: 2419, column: 3)
!10752 = !DILocation(line: 2419, column: 3, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10751, file: !986, line: 2419, column: 3)
!10754 = !DILocation(line: 2420, column: 16, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10735, file: !986, line: 2420, column: 7)
!10756 = !DILocation(line: 2420, column: 34, scope: !10755)
!10757 = !DILocation(line: 2420, column: 7, scope: !10735)
!10758 = !DILocation(line: 2423, column: 49, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10755, file: !986, line: 2421, column: 3)
!10760 = !DILocation(line: 2423, column: 4, scope: !10759)
!10761 = !DILocation(line: 2424, column: 3, scope: !10759)
!10762 = !DILocation(line: 2403, column: 28, scope: !10735)
!10763 = !DILocation(line: 2429, column: 3, scope: !10735)
!10764 = !DILocation(line: 2430, column: 2, scope: !10735)
!10765 = distinct !DISubprogram(name: "xTimerCreateTimerTask", scope: !1049, file: !1049, line: 240, type: !7712, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10766)
!10766 = !{!10767}
!10767 = !DILocalVariable(name: "xReturn", scope: !10765, file: !1049, line: 242, type: !869)
!10768 = !DILocation(line: 0, scope: !10765)
!10769 = !DILocation(line: 248, column: 2, scope: !10765)
!10770 = !DILocation(line: 250, column: 6, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10765, file: !1049, line: 250, column: 6)
!10772 = !DILocation(line: 250, column: 18, scope: !10771)
!10773 = !DILocation(line: 250, column: 6, scope: !10765)
!10774 = !DILocation(line: 261, column: 14, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10776, file: !1049, line: 259, column: 3)
!10776 = distinct !DILexicalBlock(scope: !10771, file: !1049, line: 251, column: 2)
!10777 = !DILocation(line: 270, column: 2, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10765, file: !1049, line: 270, column: 2)
!10779 = !DILocation(line: 270, column: 2, scope: !10765)
!10780 = !DILocation(line: 270, column: 2, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10778, file: !1049, line: 270, column: 2)
!10782 = !DILocation(line: 271, column: 2, scope: !10765)
!10783 = distinct !DISubprogram(name: "prvCheckForValidListAndQueue", scope: !1049, file: !1049, line: 770, type: !154, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !1397)
!10784 = !DILocation(line: 775, column: 2, scope: !10783)
!10785 = !DILocation(line: 777, column: 7, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10787, file: !1049, line: 777, column: 7)
!10787 = distinct !DILexicalBlock(scope: !10783, file: !1049, line: 776, column: 2)
!10788 = !DILocation(line: 777, column: 19, scope: !10786)
!10789 = !DILocation(line: 777, column: 7, scope: !10787)
!10790 = !DILocation(line: 779, column: 4, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10786, file: !1049, line: 778, column: 3)
!10792 = !DILocation(line: 780, column: 4, scope: !10791)
!10793 = !DILocation(line: 781, column: 23, scope: !10791)
!10794 = !DILocation(line: 782, column: 24, scope: !10791)
!10795 = !DILocation(line: 783, column: 18, scope: !10791)
!10796 = !DILocation(line: 783, column: 16, scope: !10791)
!10797 = !DILocation(line: 784, column: 4, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10791, file: !1049, line: 784, column: 4)
!10799 = !DILocation(line: 784, column: 4, scope: !10791)
!10800 = !DILocation(line: 784, column: 4, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10798, file: !1049, line: 784, column: 4)
!10802 = !DILocation(line: 788, column: 9, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !1049, line: 788, column: 9)
!10804 = distinct !DILexicalBlock(scope: !10791, file: !1049, line: 787, column: 4)
!10805 = !DILocation(line: 788, column: 21, scope: !10803)
!10806 = !DILocation(line: 788, column: 9, scope: !10804)
!10807 = !DILocation(line: 790, column: 6, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10803, file: !1049, line: 789, column: 5)
!10809 = !DILocation(line: 791, column: 5, scope: !10808)
!10810 = !DILocation(line: 804, column: 2, scope: !10783)
!10811 = !DILocation(line: 805, column: 1, scope: !10783)
!10812 = distinct !DISubprogram(name: "prvTimerTask", scope: !1049, file: !1049, line: 418, type: !640, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10813)
!10813 = !{!10814, !10815, !10816}
!10814 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !10812, file: !1049, line: 418, type: !51)
!10815 = !DILocalVariable(name: "xNextExpireTime", scope: !10812, file: !1049, line: 420, type: !884)
!10816 = !DILocalVariable(name: "xListWasEmpty", scope: !10812, file: !1049, line: 421, type: !869)
!10817 = !DILocation(line: 0, scope: !10812)
!10818 = !DILocation(line: 421, column: 1, scope: !10812)
!10819 = !DILocation(line: 426, column: 2, scope: !10812)
!10820 = !DILocation(line: 430, column: 21, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !1049, line: 427, column: 2)
!10822 = distinct !DILexicalBlock(scope: !10823, file: !1049, line: 426, column: 2)
!10823 = distinct !DILexicalBlock(scope: !10812, file: !1049, line: 426, column: 2)
!10824 = !DILocation(line: 434, column: 48, scope: !10821)
!10825 = !DILocation(line: 434, column: 3, scope: !10821)
!10826 = !DILocation(line: 437, column: 3, scope: !10821)
!10827 = !DILocation(line: 426, column: 2, scope: !10822)
!10828 = distinct !{!10828, !10829, !10830}
!10829 = !DILocation(line: 426, column: 2, scope: !10823)
!10830 = !DILocation(line: 438, column: 2, scope: !10823)
!10831 = distinct !DISubprogram(name: "prvGetNextExpireTime", scope: !1049, file: !1049, line: 495, type: !1098, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10832)
!10832 = !{!10833, !10834}
!10833 = !DILocalVariable(name: "pxListWasEmpty", arg: 1, scope: !10831, file: !1049, line: 495, type: !1100)
!10834 = !DILocalVariable(name: "xNextExpireTime", scope: !10831, file: !1049, line: 497, type: !884)
!10835 = !DILocation(line: 0, scope: !10831)
!10836 = !DILocation(line: 506, column: 20, scope: !10831)
!10837 = !DILocation(line: 506, column: 18, scope: !10831)
!10838 = !DILocation(line: 507, column: 6, scope: !10831)
!10839 = !DILocation(line: 509, column: 21, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10841, file: !1049, line: 508, column: 2)
!10841 = distinct !DILexicalBlock(scope: !10831, file: !1049, line: 507, column: 6)
!10842 = !DILocation(line: 510, column: 2, scope: !10840)
!10843 = !DILocation(line: 0, scope: !10841)
!10844 = !DILocation(line: 517, column: 2, scope: !10831)
!10845 = distinct !DISubprogram(name: "prvProcessTimerOrBlockTask", scope: !1049, file: !1049, line: 442, type: !10846, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10848)
!10846 = !DISubroutineType(types: !10847)
!10847 = !{null, !7612, !9765}
!10848 = !{!10849, !10850, !10851, !10852}
!10849 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !10845, file: !1049, line: 442, type: !7612)
!10850 = !DILocalVariable(name: "xListWasEmpty", arg: 2, scope: !10845, file: !1049, line: 442, type: !9765)
!10851 = !DILocalVariable(name: "xTimeNow", scope: !10845, file: !1049, line: 444, type: !884)
!10852 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !10845, file: !1049, line: 445, type: !869)
!10853 = !DILocation(line: 0, scope: !10845)
!10854 = !DILocation(line: 445, column: 1, scope: !10845)
!10855 = !DILocation(line: 447, column: 2, scope: !10845)
!10856 = !DILocation(line: 454, column: 14, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10845, file: !1049, line: 448, column: 2)
!10858 = !DILocation(line: 455, column: 7, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10857, file: !1049, line: 455, column: 7)
!10860 = !DILocation(line: 455, column: 31, scope: !10859)
!10861 = !DILocation(line: 455, column: 7, scope: !10857)
!10862 = !DILocation(line: 458, column: 24, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !1049, line: 458, column: 8)
!10864 = distinct !DILexicalBlock(scope: !10859, file: !1049, line: 456, column: 3)
!10865 = !DILocation(line: 458, column: 37, scope: !10863)
!10866 = !DILocation(line: 460, column: 14, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10863, file: !1049, line: 459, column: 4)
!10868 = !DILocation(line: 461, column: 5, scope: !10867)
!10869 = !DILocation(line: 462, column: 4, scope: !10867)
!10870 = !DILocation(line: 471, column: 37, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10863, file: !1049, line: 464, column: 4)
!10872 = !DILocation(line: 471, column: 68, scope: !10871)
!10873 = !DILocation(line: 471, column: 5, scope: !10871)
!10874 = !DILocation(line: 473, column: 9, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10871, file: !1049, line: 473, column: 9)
!10876 = !DILocation(line: 473, column: 26, scope: !10875)
!10877 = !DILocation(line: 473, column: 9, scope: !10871)
!10878 = !DILocation(line: 479, column: 6, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !1049, line: 479, column: 6)
!10880 = distinct !DILexicalBlock(scope: !10875, file: !1049, line: 474, column: 5)
!10881 = !{i64 2148405867}
!10882 = !{i64 2148405907}
!10883 = !DILocation(line: 480, column: 5, scope: !10880)
!10884 = !DILocation(line: 489, column: 13, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10859, file: !1049, line: 488, column: 3)
!10886 = !DILocation(line: 492, column: 1, scope: !10845)
!10887 = distinct !DISubprogram(name: "prvProcessReceivedCommands", scope: !1049, file: !1049, line: 585, type: !154, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10888)
!10888 = !{!10889, !10903, !10904, !10905, !10906}
!10889 = !DILocalVariable(name: "xMessage", scope: !10887, file: !1049, line: 587, type: !10890)
!10890 = !DIDerivedType(tag: DW_TAG_typedef, name: "DaemonTaskMessage_t", file: !1049, line: 155, baseType: !10891)
!10891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerQueueMessage", file: !1049, line: 142, size: 96, elements: !10892)
!10892 = !{!10893, !10894}
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageID", scope: !10891, file: !1049, line: 144, baseType: !869, size: 32)
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !10891, file: !1049, line: 154, baseType: !10895, size: 64, offset: 32)
!10895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10891, file: !1049, line: 145, size: 64, elements: !10896)
!10896 = !{!10897}
!10897 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerParameters", scope: !10895, file: !1049, line: 147, baseType: !10898, size: 64)
!10898 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerParameter_t", file: !1049, line: 130, baseType: !10899)
!10899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerParameters", file: !1049, line: 126, size: 64, elements: !10900)
!10900 = !{!10901, !10902}
!10901 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageValue", scope: !10899, file: !1049, line: 128, baseType: !884, size: 32)
!10902 = !DIDerivedType(tag: DW_TAG_member, name: "pxTimer", scope: !10899, file: !1049, line: 129, baseType: !1051, size: 32, offset: 32)
!10903 = !DILocalVariable(name: "pxTimer", scope: !10887, file: !1049, line: 588, type: !1051)
!10904 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !10887, file: !1049, line: 589, type: !869)
!10905 = !DILocalVariable(name: "xResult", scope: !10887, file: !1049, line: 589, type: !869)
!10906 = !DILocalVariable(name: "xTimeNow", scope: !10887, file: !1049, line: 590, type: !884)
!10907 = !DILocation(line: 587, column: 1, scope: !10887)
!10908 = !DILocation(line: 587, column: 21, scope: !10887)
!10909 = !DILocation(line: 589, column: 1, scope: !10887)
!10910 = !DILocation(line: 592, column: 9, scope: !10887)
!10911 = !DILocation(line: 592, column: 62, scope: !10887)
!10912 = !DILocation(line: 592, column: 2, scope: !10887)
!10913 = !DILocation(line: 618, column: 16, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !1049, line: 618, column: 7)
!10915 = distinct !DILexicalBlock(scope: !10887, file: !1049, line: 593, column: 2)
!10916 = !DILocation(line: 618, column: 27, scope: !10914)
!10917 = !DILocation(line: 618, column: 7, scope: !10915)
!10918 = !DILocation(line: 622, column: 42, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10914, file: !1049, line: 619, column: 3)
!10920 = !DILocation(line: 0, scope: !10887)
!10921 = !DILocation(line: 624, column: 8, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10919, file: !1049, line: 624, column: 8)
!10923 = !DILocation(line: 624, column: 8, scope: !10919)
!10924 = !DILocation(line: 627, column: 14, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10922, file: !1049, line: 625, column: 4)
!10926 = !DILocation(line: 628, column: 4, scope: !10925)
!10927 = !DILocation(line: 642, column: 15, scope: !10919)
!10928 = !DILocation(line: 644, column: 21, scope: !10919)
!10929 = !DILocation(line: 644, column: 4, scope: !10919)
!10930 = !DILocation(line: 652, column: 76, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10932, file: !1049, line: 652, column: 10)
!10932 = distinct !DILexicalBlock(scope: !10919, file: !1049, line: 645, column: 4)
!10933 = !DILocation(line: 652, column: 101, scope: !10931)
!10934 = !DILocation(line: 652, column: 90, scope: !10931)
!10935 = !DILocation(line: 652, column: 10, scope: !10931)
!10936 = !DILocation(line: 652, column: 176, scope: !10931)
!10937 = !DILocation(line: 652, column: 10, scope: !10932)
!10938 = !DILocation(line: 656, column: 16, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10931, file: !1049, line: 653, column: 6)
!10940 = !DILocation(line: 656, column: 36, scope: !10939)
!10941 = !DILocation(line: 656, column: 7, scope: !10939)
!10942 = !DILocation(line: 659, column: 20, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10939, file: !1049, line: 659, column: 11)
!10944 = !DILocation(line: 659, column: 33, scope: !10943)
!10945 = !DILocation(line: 659, column: 11, scope: !10939)
!10946 = !DILocation(line: 661, column: 106, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10943, file: !1049, line: 660, column: 7)
!10948 = !DILocation(line: 661, column: 131, scope: !10947)
!10949 = !DILocation(line: 661, column: 120, scope: !10947)
!10950 = !DILocation(line: 661, column: 18, scope: !10947)
!10951 = !DILocation(line: 662, column: 8, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10947, file: !1049, line: 662, column: 8)
!10953 = !DILocation(line: 662, column: 8, scope: !10947)
!10954 = !DILocation(line: 662, column: 8, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10952, file: !1049, line: 662, column: 8)
!10956 = !DILocation(line: 684, column: 65, scope: !10932)
!10957 = !DILocation(line: 684, column: 15, scope: !10932)
!10958 = !DILocation(line: 684, column: 35, scope: !10932)
!10959 = !DILocation(line: 685, column: 6, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10932, file: !1049, line: 685, column: 6)
!10961 = !DILocation(line: 685, column: 6, scope: !10932)
!10962 = !DILocation(line: 685, column: 6, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10960, file: !1049, line: 685, column: 6)
!10964 = !DILocation(line: 693, column: 74, scope: !10932)
!10965 = !DILocation(line: 693, column: 63, scope: !10932)
!10966 = !DILocation(line: 693, column: 15, scope: !10932)
!10967 = !DILocation(line: 694, column: 6, scope: !10932)
!10968 = !DILocation(line: 699, column: 17, scope: !10932)
!10969 = !DILocation(line: 699, column: 6, scope: !10932)
!10970 = !DILocation(line: 700, column: 6, scope: !10932)
!10971 = distinct !{!10971, !10912, !10972}
!10972 = !DILocation(line: 707, column: 2, scope: !10887)
!10973 = !DILocation(line: 708, column: 1, scope: !10887)
!10974 = !DILocation(line: 0, scope: !1097)
!10975 = !DILocation(line: 526, column: 13, scope: !1097)
!10976 = !DILocation(line: 528, column: 17, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !1097, file: !1049, line: 528, column: 6)
!10978 = !DILocation(line: 528, column: 15, scope: !10977)
!10979 = !DILocation(line: 528, column: 6, scope: !1097)
!10980 = !DILocation(line: 530, column: 3, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10977, file: !1049, line: 529, column: 2)
!10982 = !DILocation(line: 532, column: 2, scope: !10981)
!10983 = !DILocation(line: 0, scope: !10977)
!10984 = !DILocation(line: 538, column: 12, scope: !1097)
!10985 = !DILocation(line: 540, column: 2, scope: !1097)
!10986 = distinct !DISubprogram(name: "prvInsertTimerInActiveList", scope: !1049, file: !1049, line: 544, type: !10987, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !10990)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{!869, !10989, !7612, !7612, !7612}
!10989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!10990 = !{!10991, !10992, !10993, !10994, !10995}
!10991 = !DILocalVariable(name: "pxTimer", arg: 1, scope: !10986, file: !1049, line: 544, type: !10989)
!10992 = !DILocalVariable(name: "xNextExpiryTime", arg: 2, scope: !10986, file: !1049, line: 544, type: !7612)
!10993 = !DILocalVariable(name: "xTimeNow", arg: 3, scope: !10986, file: !1049, line: 544, type: !7612)
!10994 = !DILocalVariable(name: "xCommandTime", arg: 4, scope: !10986, file: !1049, line: 544, type: !7612)
!10995 = !DILocalVariable(name: "xProcessTimerNow", scope: !10986, file: !1049, line: 546, type: !869)
!10996 = !DILocation(line: 0, scope: !10986)
!10997 = !DILocation(line: 548, column: 2, scope: !10986)
!10998 = !DILocation(line: 549, column: 2, scope: !10986)
!10999 = !DILocation(line: 551, column: 22, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10986, file: !1049, line: 551, column: 6)
!11001 = !DILocation(line: 551, column: 6, scope: !10986)
!11002 = !DILocation(line: 555, column: 18, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !11004, file: !1049, line: 555, column: 7)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !1049, line: 552, column: 2)
!11005 = !DILocation(line: 555, column: 47, scope: !11003)
!11006 = !DILocation(line: 555, column: 35, scope: !11003)
!11007 = !DILocation(line: 555, column: 7, scope: !11004)
!11008 = !DILocation(line: 568, column: 18, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !1049, line: 568, column: 7)
!11010 = distinct !DILexicalBlock(scope: !11000, file: !1049, line: 567, column: 2)
!11011 = !DILocation(line: 568, column: 35, scope: !11009)
!11012 = !DILocation(line: 0, scope: !11000)
!11013 = !DILocation(line: 581, column: 2, scope: !10986)
!11014 = distinct !DISubprogram(name: "xTimerGenericCommand", scope: !1049, file: !1049, line: 316, type: !11015, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !11017)
!11015 = !DISubroutineType(types: !11016)
!11016 = !{!869, !1076, !9765, !7612, !1100, !7612}
!11017 = !{!11018, !11019, !11020, !11021, !11022, !11023, !11024}
!11018 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11014, file: !1049, line: 316, type: !1076)
!11019 = !DILocalVariable(name: "xCommandID", arg: 2, scope: !11014, file: !1049, line: 316, type: !9765)
!11020 = !DILocalVariable(name: "xOptionalValue", arg: 3, scope: !11014, file: !1049, line: 316, type: !7612)
!11021 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !11014, file: !1049, line: 316, type: !1100)
!11022 = !DILocalVariable(name: "xTicksToWait", arg: 5, scope: !11014, file: !1049, line: 316, type: !7612)
!11023 = !DILocalVariable(name: "xReturn", scope: !11014, file: !1049, line: 318, type: !869)
!11024 = !DILocalVariable(name: "xMessage", scope: !11014, file: !1049, line: 319, type: !10890)
!11025 = !DILocation(line: 0, scope: !11014)
!11026 = !DILocation(line: 319, column: 1, scope: !11014)
!11027 = !DILocation(line: 319, column: 21, scope: !11014)
!11028 = !DILocation(line: 323, column: 6, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11014, file: !1049, line: 323, column: 6)
!11030 = !DILocation(line: 323, column: 18, scope: !11029)
!11031 = !DILocation(line: 323, column: 6, scope: !11014)
!11032 = !DILocation(line: 326, column: 12, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11029, file: !1049, line: 324, column: 2)
!11034 = !DILocation(line: 326, column: 23, scope: !11033)
!11035 = !DILocation(line: 327, column: 31, scope: !11033)
!11036 = !DILocation(line: 327, column: 45, scope: !11033)
!11037 = !DILocation(line: 328, column: 31, scope: !11033)
!11038 = !DILocation(line: 328, column: 39, scope: !11033)
!11039 = !DILocation(line: 330, column: 18, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11033, file: !1049, line: 330, column: 7)
!11041 = !DILocation(line: 330, column: 7, scope: !11033)
!11042 = !DILocation(line: 332, column: 8, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !1049, line: 332, column: 8)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !1049, line: 331, column: 3)
!11045 = !DILocation(line: 332, column: 33, scope: !11043)
!11046 = !DILocation(line: 0, scope: !11043)
!11047 = !DILocation(line: 332, column: 8, scope: !11044)
!11048 = !DILocation(line: 334, column: 15, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11043, file: !1049, line: 333, column: 4)
!11050 = !DILocation(line: 335, column: 4, scope: !11049)
!11051 = !DILocation(line: 338, column: 15, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11043, file: !1049, line: 337, column: 4)
!11053 = !DILocation(line: 343, column: 14, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11040, file: !1049, line: 342, column: 3)
!11055 = !DILocation(line: 354, column: 1, scope: !11014)
!11056 = !DILocation(line: 353, column: 2, scope: !11014)
!11057 = distinct !DISubprogram(name: "prvSwitchTimerLists", scope: !1049, file: !1049, line: 711, type: !154, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !11058)
!11058 = !{!11059, !11060, !11061, !11062, !11063}
!11059 = !DILocalVariable(name: "xNextExpireTime", scope: !11057, file: !1049, line: 713, type: !884)
!11060 = !DILocalVariable(name: "xReloadTime", scope: !11057, file: !1049, line: 713, type: !884)
!11061 = !DILocalVariable(name: "pxTemp", scope: !11057, file: !1049, line: 714, type: !1081)
!11062 = !DILocalVariable(name: "pxTimer", scope: !11057, file: !1049, line: 715, type: !1051)
!11063 = !DILocalVariable(name: "xResult", scope: !11057, file: !1049, line: 716, type: !869)
!11064 = !DILocation(line: 722, column: 9, scope: !11057)
!11065 = !DILocation(line: 722, column: 2, scope: !11057)
!11066 = !DILocation(line: 724, column: 21, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11057, file: !1049, line: 723, column: 2)
!11068 = !DILocation(line: 0, scope: !11057)
!11069 = !DILocation(line: 727, column: 27, scope: !11067)
!11070 = !DILocation(line: 728, column: 38, scope: !11067)
!11071 = !DILocation(line: 728, column: 12, scope: !11067)
!11072 = !DILocation(line: 734, column: 12, scope: !11067)
!11073 = !DILocation(line: 734, column: 3, scope: !11067)
!11074 = !DILocation(line: 736, column: 16, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11067, file: !1049, line: 736, column: 7)
!11076 = !DILocation(line: 736, column: 29, scope: !11075)
!11077 = !DILocation(line: 736, column: 7, scope: !11067)
!11078 = !DILocation(line: 744, column: 47, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !1049, line: 737, column: 3)
!11080 = !DILocation(line: 744, column: 36, scope: !11079)
!11081 = !DILocation(line: 745, column: 20, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11079, file: !1049, line: 745, column: 8)
!11083 = !DILocation(line: 745, column: 8, scope: !11079)
!11084 = !DILocation(line: 747, column: 5, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11082, file: !1049, line: 746, column: 4)
!11086 = !DILocation(line: 748, column: 5, scope: !11085)
!11087 = !DILocation(line: 749, column: 18, scope: !11085)
!11088 = !DILocation(line: 749, column: 5, scope: !11085)
!11089 = !DILocation(line: 750, column: 4, scope: !11085)
!11090 = !DILocation(line: 753, column: 15, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11082, file: !1049, line: 752, column: 4)
!11092 = !DILocation(line: 754, column: 5, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11091, file: !1049, line: 754, column: 5)
!11094 = !DILocation(line: 754, column: 5, scope: !11091)
!11095 = !DILocation(line: 754, column: 5, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11093, file: !1049, line: 754, column: 5)
!11097 = distinct !{!11097, !11065, !11098}
!11098 = !DILocation(line: 762, column: 2, scope: !11057)
!11099 = !DILocation(line: 765, column: 23, scope: !11057)
!11100 = !DILocation(line: 765, column: 21, scope: !11057)
!11101 = !DILocation(line: 766, column: 22, scope: !11057)
!11102 = !DILocation(line: 767, column: 1, scope: !11057)
!11103 = distinct !DISubprogram(name: "prvProcessExpiredTimer", scope: !1049, file: !1049, line: 378, type: !11104, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !11106)
!11104 = !DISubroutineType(types: !11105)
!11105 = !{null, !7612, !7612}
!11106 = !{!11107, !11108, !11109, !11110}
!11107 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !11103, file: !1049, line: 378, type: !7612)
!11108 = !DILocalVariable(name: "xTimeNow", arg: 2, scope: !11103, file: !1049, line: 378, type: !7612)
!11109 = !DILocalVariable(name: "xResult", scope: !11103, file: !1049, line: 380, type: !869)
!11110 = !DILocalVariable(name: "pxTimer", scope: !11103, file: !1049, line: 381, type: !10989)
!11111 = !DILocation(line: 0, scope: !11103)
!11112 = !DILocation(line: 381, column: 41, scope: !11103)
!11113 = !DILocation(line: 385, column: 37, scope: !11103)
!11114 = !DILocation(line: 385, column: 11, scope: !11103)
!11115 = !DILocation(line: 390, column: 15, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11103, file: !1049, line: 390, column: 6)
!11117 = !DILocation(line: 390, column: 28, scope: !11116)
!11118 = !DILocation(line: 390, column: 6, scope: !11103)
!11119 = !DILocation(line: 381, column: 27, scope: !11103)
!11120 = !DILocation(line: 395, column: 73, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !1049, line: 395, column: 7)
!11122 = distinct !DILexicalBlock(scope: !11116, file: !1049, line: 391, column: 2)
!11123 = !DILocation(line: 395, column: 62, scope: !11121)
!11124 = !DILocation(line: 395, column: 7, scope: !11121)
!11125 = !DILocation(line: 395, column: 124, scope: !11121)
!11126 = !DILocation(line: 395, column: 7, scope: !11122)
!11127 = !DILocation(line: 399, column: 14, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11121, file: !1049, line: 396, column: 3)
!11129 = !DILocation(line: 400, column: 4, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11128, file: !1049, line: 400, column: 4)
!11131 = !DILocation(line: 400, column: 4, scope: !11128)
!11132 = !DILocation(line: 400, column: 4, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11130, file: !1049, line: 400, column: 4)
!11134 = !DILocation(line: 414, column: 11, scope: !11103)
!11135 = !DILocation(line: 414, column: 2, scope: !11103)
!11136 = !DILocation(line: 415, column: 1, scope: !11103)
!11137 = distinct !DISubprogram(name: "xTimerCreate", scope: !1049, file: !1049, line: 275, type: !11138, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !11140)
!11138 = !DISubroutineType(types: !11139)
!11139 = !{!1076, !330, !7612, !8458, !7315, !1071}
!11140 = !{!11141, !11142, !11143, !11144, !11145, !11146}
!11141 = !DILocalVariable(name: "pcTimerName", arg: 1, scope: !11137, file: !1049, line: 275, type: !330)
!11142 = !DILocalVariable(name: "xTimerPeriodInTicks", arg: 2, scope: !11137, file: !1049, line: 275, type: !7612)
!11143 = !DILocalVariable(name: "uxAutoReload", arg: 3, scope: !11137, file: !1049, line: 275, type: !8458)
!11144 = !DILocalVariable(name: "pvTimerID", arg: 4, scope: !11137, file: !1049, line: 275, type: !7315)
!11145 = !DILocalVariable(name: "pxCallbackFunction", arg: 5, scope: !11137, file: !1049, line: 275, type: !1071)
!11146 = !DILocalVariable(name: "pxNewTimer", scope: !11137, file: !1049, line: 277, type: !1051)
!11147 = !DILocation(line: 0, scope: !11137)
!11148 = !DILocation(line: 280, column: 26, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11137, file: !1049, line: 280, column: 6)
!11150 = !DILocation(line: 280, column: 6, scope: !11137)
!11151 = !DILocation(line: 286, column: 30, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11149, file: !1049, line: 285, column: 2)
!11153 = !DILocation(line: 287, column: 18, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11152, file: !1049, line: 287, column: 7)
!11155 = !DILocation(line: 287, column: 7, scope: !11152)
!11156 = !DILocation(line: 291, column: 4, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11154, file: !1049, line: 288, column: 3)
!11158 = !DILocation(line: 294, column: 16, scope: !11157)
!11159 = !DILocation(line: 294, column: 28, scope: !11157)
!11160 = !DILocation(line: 295, column: 16, scope: !11157)
!11161 = !DILocation(line: 295, column: 36, scope: !11157)
!11162 = !DILocation(line: 296, column: 16, scope: !11157)
!11163 = !DILocation(line: 296, column: 29, scope: !11157)
!11164 = !DILocation(line: 297, column: 16, scope: !11157)
!11165 = !DILocation(line: 297, column: 26, scope: !11157)
!11166 = !DILocation(line: 298, column: 16, scope: !11157)
!11167 = !DILocation(line: 298, column: 35, scope: !11157)
!11168 = !DILocation(line: 299, column: 40, scope: !11157)
!11169 = !DILocation(line: 299, column: 4, scope: !11157)
!11170 = !DILocation(line: 302, column: 3, scope: !11157)
!11171 = !DILocation(line: 310, column: 2, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !1049, line: 310, column: 2)
!11173 = distinct !DILexicalBlock(scope: !11137, file: !1049, line: 310, column: 2)
!11174 = !DILocation(line: 312, column: 2, scope: !11137)
!11175 = distinct !DISubprogram(name: "pcTimerGetTimerName", scope: !1049, file: !1049, line: 370, type: !11176, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !11178)
!11176 = !DISubroutineType(types: !11177)
!11177 = !{!331, !1076}
!11178 = !{!11179, !11180}
!11179 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11175, file: !1049, line: 370, type: !1076)
!11180 = !DILocalVariable(name: "pxTimer", scope: !11175, file: !1049, line: 372, type: !1051)
!11181 = !DILocation(line: 0, scope: !11175)
!11182 = !DILocation(line: 374, column: 18, scope: !11175)
!11183 = !DILocation(line: 374, column: 2, scope: !11175)
!11184 = distinct !DISubprogram(name: "xTimerIsTimerActive", scope: !1049, file: !1049, line: 808, type: !11185, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !11187)
!11185 = !DISubroutineType(types: !11186)
!11186 = !{!869, !1076}
!11187 = !{!11188, !11189, !11190}
!11188 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11184, file: !1049, line: 808, type: !1076)
!11189 = !DILocalVariable(name: "xTimerIsInActiveList", scope: !11184, file: !1049, line: 810, type: !869)
!11190 = !DILocalVariable(name: "pxTimer", scope: !11184, file: !1049, line: 811, type: !1051)
!11191 = !DILocation(line: 0, scope: !11184)
!11192 = !DILocation(line: 814, column: 2, scope: !11184)
!11193 = !DILocation(line: 819, column: 44, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11184, file: !1049, line: 815, column: 2)
!11195 = !DILocation(line: 819, column: 41, scope: !11194)
!11196 = !DILocation(line: 821, column: 2, scope: !11184)
!11197 = !DILocation(line: 823, column: 2, scope: !11184)
!11198 = distinct !DISubprogram(name: "pvTimerGetTimerID", scope: !1049, file: !1049, line: 827, type: !11199, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1048, retainedNodes: !11202)
!11199 = !DISubroutineType(types: !11200)
!11200 = !{!51, !11201}
!11201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!11202 = !{!11203, !11204}
!11203 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11198, file: !1049, line: 827, type: !11201)
!11204 = !DILocalVariable(name: "pxTimer", scope: !11198, file: !1049, line: 829, type: !10989)
!11205 = !DILocation(line: 0, scope: !11198)
!11206 = !DILocation(line: 831, column: 18, scope: !11198)
!11207 = !DILocation(line: 831, column: 2, scope: !11198)
!11208 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !1114, file: !1114, line: 222, type: !11209, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11211)
!11209 = !DISubroutineType(types: !11210)
!11210 = !{!866, !866, !7312, !51}
!11211 = !{!11212, !11213, !11214}
!11212 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !11208, file: !1114, line: 222, type: !866)
!11213 = !DILocalVariable(name: "pxCode", arg: 2, scope: !11208, file: !1114, line: 222, type: !7312)
!11214 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !11208, file: !1114, line: 222, type: !51)
!11215 = !DILocation(line: 0, scope: !11208)
!11216 = !DILocation(line: 229, column: 14, scope: !11208)
!11217 = !DILocation(line: 231, column: 16, scope: !11208)
!11218 = !DILocation(line: 232, column: 14, scope: !11208)
!11219 = !DILocation(line: 233, column: 18, scope: !11208)
!11220 = !DILocation(line: 233, column: 16, scope: !11208)
!11221 = !DILocation(line: 234, column: 14, scope: !11208)
!11222 = !DILocation(line: 235, column: 16, scope: !11208)
!11223 = !DILocation(line: 238, column: 15, scope: !11208)
!11224 = !DILocation(line: 239, column: 18, scope: !11208)
!11225 = !DILocation(line: 239, column: 16, scope: !11208)
!11226 = !DILocation(line: 243, column: 14, scope: !11208)
!11227 = !DILocation(line: 244, column: 16, scope: !11208)
!11228 = !DILocation(line: 246, column: 15, scope: !11208)
!11229 = !DILocation(line: 248, column: 2, scope: !11208)
!11230 = distinct !DISubprogram(name: "prvTaskExitError", scope: !1114, file: !1114, line: 252, type: !154, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11231 = !DILocation(line: 260, column: 2, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11230, file: !1114, line: 260, column: 2)
!11233 = !DILocation(line: 260, column: 2, scope: !11230)
!11234 = !DILocation(line: 260, column: 2, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11232, file: !1114, line: 260, column: 2)
!11236 = !DILocation(line: 215, column: 2, scope: !11237, inlinedAt: !11240)
!11237 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !863, file: !863, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11238)
!11238 = !{!11239}
!11239 = !DILocalVariable(name: "ulNewBASEPRI", scope: !11237, file: !863, line: 213, type: !61)
!11240 = distinct !DILocation(line: 261, column: 2, scope: !11230)
!11241 = !{i64 666031, i64 666064, i64 666100, i64 666127}
!11242 = !DILocation(line: 0, scope: !11237, inlinedAt: !11240)
!11243 = !DILocation(line: 262, column: 2, scope: !11230)
!11244 = !DILocation(line: 262, column: 2, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !1114, line: 262, column: 2)
!11246 = distinct !DILexicalBlock(scope: !11230, file: !1114, line: 262, column: 2)
!11247 = distinct !{!11247, !11248, !11249}
!11248 = !DILocation(line: 262, column: 2, scope: !11246)
!11249 = !DILocation(line: 262, column: 11, scope: !11246)
!11250 = distinct !DISubprogram(name: "vPortCurrentTaskStackOverflowCheck", scope: !1114, file: !1114, line: 268, type: !154, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11251)
!11251 = !{!11252, !11253}
!11252 = !DILocalVariable(name: "stack_start_address", scope: !11250, file: !1114, line: 270, type: !61)
!11253 = !DILocalVariable(name: "ret", scope: !11250, file: !1114, line: 271, type: !527)
!11254 = !DILocation(line: 273, column: 24, scope: !11250)
!11255 = !DILocation(line: 0, scope: !11250)
!11256 = !DILocation(line: 276, column: 8, scope: !11250)
!11257 = !DILocation(line: 281, column: 1, scope: !11250)
!11258 = distinct !DISubprogram(name: "SVC_Handler", scope: !1114, file: !1114, line: 287, type: !154, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11259 = !DILocation(line: 289, column: 2, scope: !11258)
!11260 = !{i64 11674, i64 11700, i64 11789, i64 11939, i64 11982, i64 12128, i64 12194, i64 12283, i64 12374, i64 12519, i64 12585, i64 12607, i64 12635, i64 12666, i64 12690, i64 12709, i64 12734}
!11261 = !DILocation(line: 312, column: 1, scope: !11258)
!11262 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !1114, file: !1114, line: 335, type: !7712, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11263)
!11263 = !{!11264, !11266, !11268}
!11264 = !DILocalVariable(name: "ulOriginalPriority", scope: !11265, file: !1114, line: 343, type: !60)
!11265 = distinct !DILexicalBlock(scope: !11262, file: !1114, line: 342, column: 2)
!11266 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !11265, file: !1114, line: 344, type: !11267)
!11267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!11268 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !11265, file: !1114, line: 345, type: !53)
!11269 = !DILocation(line: 343, column: 3, scope: !11265)
!11270 = !DILocation(line: 343, column: 21, scope: !11265)
!11271 = !DILocation(line: 0, scope: !11265)
!11272 = !DILocation(line: 345, column: 3, scope: !11265)
!11273 = !DILocation(line: 345, column: 20, scope: !11265)
!11274 = !DILocation(line: 353, column: 24, scope: !11265)
!11275 = !DILocation(line: 353, column: 22, scope: !11265)
!11276 = !DILocation(line: 357, column: 33, scope: !11265)
!11277 = !DILocation(line: 360, column: 24, scope: !11265)
!11278 = !DILocation(line: 360, column: 22, scope: !11265)
!11279 = !DILocation(line: 363, column: 65, scope: !11265)
!11280 = !DILocation(line: 363, column: 63, scope: !11265)
!11281 = !DILocation(line: 363, column: 24, scope: !11265)
!11282 = !DILocation(line: 368, column: 12, scope: !11265)
!11283 = !DILocation(line: 368, column: 55, scope: !11265)
!11284 = !DILocation(line: 368, column: 3, scope: !11265)
!11285 = !DILocation(line: 370, column: 22, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11265, file: !1114, line: 369, column: 3)
!11287 = !DILocation(line: 371, column: 23, scope: !11286)
!11288 = distinct !{!11288, !11284, !11289}
!11289 = !DILocation(line: 372, column: 3, scope: !11265)
!11290 = !DILocation(line: 376, column: 22, scope: !11265)
!11291 = !DILocation(line: 377, column: 22, scope: !11265)
!11292 = !DILocation(line: 381, column: 35, scope: !11265)
!11293 = !DILocation(line: 381, column: 33, scope: !11265)
!11294 = !DILocation(line: 382, column: 2, scope: !11262)
!11295 = !DILocation(line: 386, column: 23, scope: !11262)
!11296 = !DILocation(line: 388, column: 23, scope: !11262)
!11297 = !DILocation(line: 392, column: 2, scope: !11262)
!11298 = !DILocation(line: 395, column: 20, scope: !11262)
!11299 = !DILocation(line: 398, column: 2, scope: !11262)
!11300 = !DILocation(line: 401, column: 17, scope: !11262)
!11301 = !DILocation(line: 404, column: 2, scope: !11262)
!11302 = !DILocation(line: 410, column: 2, scope: !11262)
!11303 = !DILocation(line: 413, column: 2, scope: !11262)
!11304 = distinct !DISubprogram(name: "vPortEnableVFP", scope: !1114, file: !1114, line: 741, type: !154, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11305 = !DILocation(line: 743, column: 2, scope: !11304)
!11306 = !{i64 28402, i64 28478, i64 28502, i64 28517, i64 28609, i64 28633}
!11307 = !DILocation(line: 752, column: 1, scope: !11304)
!11308 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !1114, file: !1114, line: 315, type: !154, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11309 = !DILocation(line: 317, column: 2, scope: !11308)
!11310 = !{i64 12920, i64 13009, i64 13036, i64 13063, i64 13138, i64 13194, i64 13216, i64 13235, i64 13254, i64 13314}
!11311 = !DILocation(line: 329, column: 1, scope: !11308)
!11312 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !1114, file: !1114, line: 417, type: !154, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11313 = !DILocation(line: 421, column: 2, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11312, file: !1114, line: 421, column: 2)
!11315 = !DILocation(line: 421, column: 2, scope: !11312)
!11316 = !DILocation(line: 421, column: 2, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11314, file: !1114, line: 421, column: 2)
!11318 = !DILocation(line: 422, column: 1, scope: !11312)
!11319 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !1114, file: !1114, line: 425, type: !154, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11320 = !DILocation(line: 215, column: 2, scope: !11237, inlinedAt: !11321)
!11321 = distinct !DILocation(line: 427, column: 2, scope: !11319)
!11322 = !DILocation(line: 0, scope: !11237, inlinedAt: !11321)
!11323 = !DILocation(line: 428, column: 19, scope: !11319)
!11324 = !DILocation(line: 435, column: 24, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11319, file: !1114, line: 435, column: 6)
!11326 = !DILocation(line: 435, column: 6, scope: !11319)
!11327 = !DILocation(line: 437, column: 3, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !1114, line: 437, column: 3)
!11329 = distinct !DILexicalBlock(scope: !11325, file: !1114, line: 436, column: 2)
!11330 = !DILocation(line: 437, column: 3, scope: !11329)
!11331 = !DILocation(line: 437, column: 3, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11328, file: !1114, line: 437, column: 3)
!11333 = !DILocation(line: 439, column: 1, scope: !11319)
!11334 = distinct !DISubprogram(name: "vPortExitCritical", scope: !1114, file: !1114, line: 442, type: !154, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11335 = !DILocation(line: 444, column: 2, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11334, file: !1114, line: 444, column: 2)
!11337 = !DILocation(line: 444, column: 2, scope: !11334)
!11338 = !DILocation(line: 444, column: 2, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11336, file: !1114, line: 444, column: 2)
!11340 = !DILocation(line: 445, column: 19, scope: !11334)
!11341 = !DILocation(line: 446, column: 24, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11334, file: !1114, line: 446, column: 6)
!11343 = !DILocation(line: 446, column: 6, scope: !11334)
!11344 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !11345, file: !863, line: 247, type: !61)
!11345 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2873, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11346)
!11346 = !{!11344}
!11347 = !DILocation(line: 0, scope: !11345, inlinedAt: !11348)
!11348 = distinct !DILocation(line: 448, column: 3, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11342, file: !1114, line: 447, column: 2)
!11350 = !DILocation(line: 249, column: 2, scope: !11345, inlinedAt: !11348)
!11351 = !{i64 666952}
!11352 = !DILocation(line: 449, column: 2, scope: !11349)
!11353 = !DILocation(line: 450, column: 1, scope: !11334)
!11354 = distinct !DISubprogram(name: "PendSV_Handler", scope: !1114, file: !1114, line: 469, type: !154, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !1397)
!11355 = !DILocation(line: 473, column: 2, scope: !11354)
!11356 = !{i64 18243, i64 18266, i64 18289, i64 18376, i64 18399, i64 18421, i64 18446, i64 18465, i64 18481, i64 18559, i64 18584, i64 18600, i64 18701, i64 18721, i64 18755, i64 18771, i64 18836, i64 18852, i64 18943, i64 18959, i64 18987, i64 19012, i64 19040, i64 19059, i64 19080, i64 19258, i64 19436, i64 19460, i64 19488, i64 19516, i64 19532, i64 19620, i64 19645, i64 19661, i64 19725, i64 19741, i64 19849, i64 19869, i64 19903, i64 19919, i64 19944, i64 19963, i64 20148, i64 20164, i64 20185, i64 20201, i64 20223}
!11357 = !DILocation(line: 537, column: 1, scope: !11354)
!11358 = distinct !DISubprogram(name: "SysTick_Handler", scope: !1114, file: !1114, line: 540, type: !154, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11359)
!11359 = !{!11360}
!11360 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !11358, file: !1114, line: 547, type: !862)
!11361 = !DILocation(line: 231, column: 2, scope: !11362, inlinedAt: !11366)
!11362 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !2255, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11363)
!11363 = !{!11364, !11365}
!11364 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !11362, file: !863, line: 229, type: !61)
!11365 = !DILocalVariable(name: "ulNewBASEPRI", scope: !11362, file: !863, line: 229, type: !61)
!11366 = distinct !DILocation(line: 548, column: 27, scope: !11358)
!11367 = !{i64 666419, i64 666456, i64 666488, i64 666524, i64 666551}
!11368 = !DILocation(line: 0, scope: !11362, inlinedAt: !11366)
!11369 = !DILocation(line: 0, scope: !11358)
!11370 = !DILocation(line: 552, column: 3, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11358, file: !1114, line: 549, column: 2)
!11372 = !DILocation(line: 555, column: 7, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11371, file: !1114, line: 555, column: 7)
!11374 = !DILocation(line: 555, column: 28, scope: !11373)
!11375 = !DILocation(line: 555, column: 7, scope: !11371)
!11376 = !DILocation(line: 559, column: 26, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11373, file: !1114, line: 556, column: 3)
!11378 = !DILocation(line: 560, column: 3, scope: !11377)
!11379 = !DILocation(line: 0, scope: !11345, inlinedAt: !11380)
!11380 = distinct !DILocation(line: 562, column: 2, scope: !11358)
!11381 = !DILocation(line: 249, column: 2, scope: !11345, inlinedAt: !11380)
!11382 = !DILocation(line: 564, column: 1, scope: !11358)
!11383 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !1114, file: !1114, line: 757, type: !154, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !11384)
!11384 = !{!11385, !11386}
!11385 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !11383, file: !1114, line: 759, type: !61)
!11386 = !DILocalVariable(name: "ucCurrentPriority", scope: !11383, file: !1114, line: 760, type: !54)
!11387 = !DILocation(line: 763, column: 3, scope: !11383)
!11388 = !{i64 28942}
!11389 = !DILocation(line: 0, scope: !11383)
!11390 = !DILocation(line: 766, column: 26, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11383, file: !1114, line: 766, column: 7)
!11392 = !DILocation(line: 766, column: 7, scope: !11383)
!11393 = !DILocation(line: 769, column: 24, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11391, file: !1114, line: 767, column: 3)
!11395 = !DILocation(line: 794, column: 4, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11394, file: !1114, line: 794, column: 4)
!11397 = !DILocation(line: 794, column: 4, scope: !11394)
!11398 = !DILocation(line: 794, column: 4, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11396, file: !1114, line: 794, column: 4)
!11400 = !DILocation(line: 810, column: 3, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11383, file: !1114, line: 810, column: 3)
!11402 = !DILocation(line: 810, column: 3, scope: !11383)
!11403 = !DILocation(line: 810, column: 3, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11401, file: !1114, line: 810, column: 3)
!11405 = !DILocation(line: 811, column: 2, scope: !11383)
!11406 = distinct !DISubprogram(name: "pvPortMalloc", scope: !1137, file: !1137, line: 162, type: !11407, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11409)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{!51, !919}
!11409 = !{!11410, !11411, !11412, !11413, !11414}
!11410 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !11406, file: !1137, line: 162, type: !919)
!11411 = !DILocalVariable(name: "pxBlock", scope: !11406, file: !1137, line: 164, type: !1139)
!11412 = !DILocalVariable(name: "pxPreviousBlock", scope: !11406, file: !1137, line: 164, type: !1139)
!11413 = !DILocalVariable(name: "pxNewBlockLink", scope: !11406, file: !1137, line: 164, type: !1139)
!11414 = !DILocalVariable(name: "pvReturn", scope: !11406, file: !1137, line: 165, type: !51)
!11415 = !DILocation(line: 0, scope: !11406)
!11416 = !DILocation(line: 178, column: 2, scope: !11406)
!11417 = !DILocation(line: 182, column: 7, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !1137, line: 182, column: 7)
!11419 = distinct !DILexicalBlock(scope: !11406, file: !1137, line: 179, column: 2)
!11420 = !DILocation(line: 182, column: 13, scope: !11418)
!11421 = !DILocation(line: 182, column: 7, scope: !11419)
!11422 = !DILocation(line: 184, column: 4, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11418, file: !1137, line: 183, column: 3)
!11424 = !DILocation(line: 185, column: 3, scope: !11423)
!11425 = !DILocation(line: 195, column: 23, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11419, file: !1137, line: 195, column: 7)
!11427 = !DILocation(line: 195, column: 21, scope: !11426)
!11428 = !DILocation(line: 195, column: 44, scope: !11426)
!11429 = !DILocation(line: 195, column: 7, scope: !11419)
!11430 = !DILocation(line: 201, column: 17, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11432, file: !1137, line: 200, column: 4)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !1137, line: 199, column: 8)
!11433 = distinct !DILexicalBlock(scope: !11426, file: !1137, line: 196, column: 3)
!11434 = !DILocation(line: 205, column: 23, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11431, file: !1137, line: 205, column: 9)
!11436 = !DILocation(line: 205, column: 51, scope: !11435)
!11437 = !DILocation(line: 205, column: 9, scope: !11431)
!11438 = !DILocation(line: 221, column: 22, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11433, file: !1137, line: 221, column: 8)
!11440 = !DILocation(line: 221, column: 28, scope: !11439)
!11441 = !DILocation(line: 226, column: 22, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11439, file: !1137, line: 222, column: 4)
!11443 = !DILocation(line: 227, column: 23, scope: !11442)
!11444 = !DILocation(line: 227, column: 34, scope: !11442)
!11445 = !DILocation(line: 227, column: 50, scope: !11442)
!11446 = !DILocation(line: 227, column: 64, scope: !11442)
!11447 = !DILocation(line: 227, column: 80, scope: !11442)
!11448 = !DILocation(line: 227, column: 5, scope: !11442)
!11449 = distinct !{!11449, !11448, !11450}
!11450 = !DILocation(line: 231, column: 5, scope: !11442)
!11451 = !DILocation(line: 0, scope: !11442)
!11452 = !DILocation(line: 235, column: 20, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11442, file: !1137, line: 235, column: 9)
!11454 = !DILocation(line: 235, column: 17, scope: !11453)
!11455 = !DILocation(line: 235, column: 9, scope: !11442)
!11456 = !DILocation(line: 239, column: 63, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !1137, line: 236, column: 5)
!11458 = !DILocation(line: 239, column: 81, scope: !11457)
!11459 = !DILocation(line: 246, column: 50, scope: !11457)
!11460 = !DILocation(line: 246, column: 39, scope: !11457)
!11461 = !DILocation(line: 250, column: 21, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11457, file: !1137, line: 250, column: 10)
!11463 = !DILocation(line: 250, column: 32, scope: !11462)
!11464 = !DILocation(line: 250, column: 48, scope: !11462)
!11465 = !DILocation(line: 250, column: 10, scope: !11457)
!11466 = !DILocation(line: 256, column: 39, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11462, file: !1137, line: 251, column: 6)
!11468 = !DILocation(line: 256, column: 63, scope: !11467)
!11469 = !DILocation(line: 256, column: 24, scope: !11467)
!11470 = !DILocation(line: 257, column: 7, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11467, file: !1137, line: 257, column: 7)
!11472 = !DILocation(line: 257, column: 7, scope: !11467)
!11473 = !DILocation(line: 257, column: 7, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11471, file: !1137, line: 257, column: 7)
!11475 = !DILocation(line: 261, column: 45, scope: !11467)
!11476 = !DILocation(line: 261, column: 56, scope: !11467)
!11477 = !DILocation(line: 261, column: 23, scope: !11467)
!11478 = !DILocation(line: 261, column: 34, scope: !11467)
!11479 = !DILocation(line: 262, column: 27, scope: !11467)
!11480 = !DILocation(line: 265, column: 7, scope: !11467)
!11481 = !DILocation(line: 272, column: 38, scope: !11457)
!11482 = !DILocation(line: 266, column: 6, scope: !11467)
!11483 = !DILocation(line: 272, column: 26, scope: !11457)
!11484 = !DILocation(line: 274, column: 32, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11457, file: !1137, line: 274, column: 10)
!11486 = !DILocation(line: 274, column: 30, scope: !11485)
!11487 = !DILocation(line: 274, column: 10, scope: !11457)
!11488 = !DILocation(line: 276, column: 38, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11485, file: !1137, line: 275, column: 6)
!11490 = !DILocation(line: 277, column: 6, scope: !11489)
!11491 = !DILocation(line: 285, column: 29, scope: !11457)
!11492 = !DILocation(line: 285, column: 26, scope: !11457)
!11493 = !DILocation(line: 286, column: 31, scope: !11457)
!11494 = !DILocation(line: 287, column: 5, scope: !11457)
!11495 = !DILocation(line: 305, column: 11, scope: !11406)
!11496 = !DILocation(line: 321, column: 2, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11406, file: !1137, line: 321, column: 2)
!11498 = !DILocation(line: 321, column: 2, scope: !11406)
!11499 = !DILocation(line: 321, column: 2, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11497, file: !1137, line: 321, column: 2)
!11501 = !DILocation(line: 322, column: 2, scope: !11406)
!11502 = distinct !DISubprogram(name: "prvHeapInit", scope: !1137, file: !1137, line: 392, type: !154, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11503)
!11503 = !{!11504, !11505, !11506, !11507}
!11504 = !DILocalVariable(name: "pxFirstFreeBlock", scope: !11502, file: !1137, line: 394, type: !1139)
!11505 = !DILocalVariable(name: "pucAlignedHeap", scope: !11502, file: !1137, line: 395, type: !210)
!11506 = !DILocalVariable(name: "ulAddress", scope: !11502, file: !1137, line: 396, type: !61)
!11507 = !DILocalVariable(name: "xTotalHeapSize", scope: !11502, file: !1137, line: 397, type: !919)
!11508 = !DILocation(line: 0, scope: !11502)
!11509 = !DILocation(line: 412, column: 25, scope: !11502)
!11510 = !DILocation(line: 413, column: 20, scope: !11502)
!11511 = !DILocation(line: 420, column: 8, scope: !11502)
!11512 = !DILocation(line: 421, column: 20, scope: !11502)
!11513 = !DILocation(line: 422, column: 25, scope: !11502)
!11514 = !DILocation(line: 427, column: 31, scope: !11502)
!11515 = !DILocation(line: 428, column: 38, scope: !11502)
!11516 = !DILocation(line: 428, column: 36, scope: !11502)
!11517 = !DILocation(line: 434, column: 33, scope: !11502)
!11518 = !DILocation(line: 435, column: 22, scope: !11502)
!11519 = !DILocation(line: 438, column: 21, scope: !11502)
!11520 = !DILocation(line: 439, column: 1, scope: !11502)
!11521 = distinct !DISubprogram(name: "prvInsertBlockIntoFreeList", scope: !1137, file: !1137, line: 442, type: !11522, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11524)
!11522 = !DISubroutineType(types: !11523)
!11523 = !{null, !1139}
!11524 = !{!11525, !11526, !11527}
!11525 = !DILocalVariable(name: "pxBlockToInsert", arg: 1, scope: !11521, file: !1137, line: 442, type: !1139)
!11526 = !DILocalVariable(name: "pxIterator", scope: !11521, file: !1137, line: 444, type: !1139)
!11527 = !DILocalVariable(name: "puc", scope: !11521, file: !1137, line: 445, type: !210)
!11528 = !DILocation(line: 0, scope: !11521)
!11529 = !DILocation(line: 449, column: 7, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11521, file: !1137, line: 449, column: 2)
!11531 = !DILocation(line: 0, scope: !11530)
!11532 = !DILocation(line: 449, column: 41, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11530, file: !1137, line: 449, column: 2)
!11534 = !DILocation(line: 449, column: 57, scope: !11533)
!11535 = !DILocation(line: 449, column: 2, scope: !11530)
!11536 = distinct !{!11536, !11535, !11537}
!11537 = !DILocation(line: 452, column: 2, scope: !11530)
!11538 = !DILocation(line: 456, column: 8, scope: !11521)
!11539 = !DILocation(line: 457, column: 26, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11521, file: !1137, line: 457, column: 6)
!11541 = !DILocation(line: 457, column: 12, scope: !11540)
!11542 = !DILocation(line: 457, column: 42, scope: !11540)
!11543 = !DILocation(line: 457, column: 39, scope: !11540)
!11544 = !DILocation(line: 457, column: 6, scope: !11521)
!11545 = !DILocation(line: 459, column: 26, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11540, file: !1137, line: 458, column: 2)
!11547 = !DILocation(line: 461, column: 2, scope: !11546)
!11548 = !DILocation(line: 469, column: 8, scope: !11521)
!11549 = !DILocation(line: 470, column: 31, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11521, file: !1137, line: 470, column: 6)
!11551 = !DILocation(line: 470, column: 12, scope: !11550)
!11552 = !DILocation(line: 470, column: 47, scope: !11550)
!11553 = !DILocation(line: 470, column: 44, scope: !11550)
!11554 = !DILocation(line: 470, column: 6, scope: !11521)
!11555 = !DILocation(line: 475, column: 64, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !1137, line: 473, column: 3)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !1137, line: 472, column: 7)
!11558 = distinct !DILexicalBlock(scope: !11550, file: !1137, line: 471, column: 2)
!11559 = !DILocation(line: 475, column: 32, scope: !11556)
!11560 = !DILocation(line: 476, column: 51, scope: !11556)
!11561 = !DILocation(line: 476, column: 68, scope: !11556)
!11562 = !DILocation(line: 477, column: 3, scope: !11556)
!11563 = !DILocation(line: 0, scope: !11550)
!11564 = !DILocation(line: 492, column: 17, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11521, file: !1137, line: 492, column: 6)
!11566 = !DILocation(line: 492, column: 6, scope: !11521)
!11567 = !DILocation(line: 494, column: 31, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11565, file: !1137, line: 493, column: 2)
!11569 = !DILocation(line: 495, column: 2, scope: !11568)
!11570 = !DILocation(line: 500, column: 1, scope: !11521)
!11571 = distinct !DISubprogram(name: "vPortFree", scope: !1137, file: !1137, line: 326, type: !640, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11572)
!11572 = !{!11573, !11574, !11575}
!11573 = !DILocalVariable(name: "pv", arg: 1, scope: !11571, file: !1137, line: 326, type: !51)
!11574 = !DILocalVariable(name: "puc", scope: !11571, file: !1137, line: 328, type: !210)
!11575 = !DILocalVariable(name: "pxLink", scope: !11571, file: !1137, line: 329, type: !1139)
!11576 = !DILocation(line: 0, scope: !11571)
!11577 = !DILocation(line: 331, column: 9, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11571, file: !1137, line: 331, column: 6)
!11579 = !DILocation(line: 331, column: 6, scope: !11571)
!11580 = !DILocation(line: 335, column: 7, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !1137, line: 332, column: 2)
!11582 = !DILocation(line: 338, column: 12, scope: !11581)
!11583 = !DILocation(line: 341, column: 3, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11581, file: !1137, line: 341, column: 3)
!11585 = !DILocation(line: 341, column: 3, scope: !11581)
!11586 = !DILocation(line: 341, column: 3, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11584, file: !1137, line: 341, column: 3)
!11588 = !DILocation(line: 342, column: 3, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11581, file: !1137, line: 342, column: 3)
!11590 = !DILocation(line: 342, column: 3, scope: !11581)
!11591 = !DILocation(line: 342, column: 3, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11589, file: !1137, line: 342, column: 3)
!11593 = !DILocation(line: 344, column: 17, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11581, file: !1137, line: 344, column: 7)
!11595 = !DILocation(line: 344, column: 30, scope: !11594)
!11596 = !DILocation(line: 344, column: 28, scope: !11594)
!11597 = !DILocation(line: 344, column: 51, scope: !11594)
!11598 = !DILocation(line: 344, column: 7, scope: !11581)
!11599 = !DILocation(line: 346, column: 16, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11601, file: !1137, line: 346, column: 8)
!11601 = distinct !DILexicalBlock(scope: !11594, file: !1137, line: 345, column: 3)
!11602 = !DILocation(line: 346, column: 32, scope: !11600)
!11603 = !DILocation(line: 346, column: 8, scope: !11601)
!11604 = !DILocation(line: 350, column: 27, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11600, file: !1137, line: 347, column: 4)
!11606 = !DILocation(line: 350, column: 24, scope: !11605)
!11607 = !DILocation(line: 352, column: 5, scope: !11605)
!11608 = !DILocation(line: 355, column: 37, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11605, file: !1137, line: 353, column: 5)
!11610 = !DILocation(line: 355, column: 26, scope: !11609)
!11611 = !DILocation(line: 357, column: 6, scope: !11609)
!11612 = !DILocation(line: 359, column: 14, scope: !11605)
!11613 = !DILocation(line: 360, column: 4, scope: !11605)
!11614 = !DILocation(line: 371, column: 1, scope: !11571)
!11615 = distinct !DISubprogram(name: "xPortGetFreeHeapSize", scope: !1137, file: !1137, line: 374, type: !11616, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !1397)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{!919}
!11618 = !DILocation(line: 376, column: 9, scope: !11615)
!11619 = !DILocation(line: 376, column: 2, scope: !11615)
!11620 = distinct !DISubprogram(name: "xPortGetMinimumEverFreeHeapSize", scope: !1137, file: !1137, line: 380, type: !11616, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !1397)
!11621 = !DILocation(line: 382, column: 9, scope: !11620)
!11622 = !DILocation(line: 382, column: 2, scope: !11620)
!11623 = distinct !DISubprogram(name: "vPortInitialiseBlocks", scope: !1137, file: !1137, line: 386, type: !154, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !1397)
!11624 = !DILocation(line: 389, column: 1, scope: !11623)
!11625 = distinct !DISubprogram(name: "pvPortCalloc", scope: !1137, file: !1137, line: 505, type: !11626, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11628)
!11626 = !DISubroutineType(types: !11627)
!11627 = !{!51, !919, !919}
!11628 = !{!11629, !11630, !11631}
!11629 = !DILocalVariable(name: "nmemb", arg: 1, scope: !11625, file: !1137, line: 505, type: !919)
!11630 = !DILocalVariable(name: "size", arg: 2, scope: !11625, file: !1137, line: 505, type: !919)
!11631 = !DILocalVariable(name: "pvReturn", scope: !11625, file: !1137, line: 507, type: !51)
!11632 = !DILocation(line: 0, scope: !11625)
!11633 = !DILocation(line: 516, column: 35, scope: !11625)
!11634 = !DILocation(line: 516, column: 16, scope: !11625)
!11635 = !DILocation(line: 518, column: 9, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11625, file: !1137, line: 518, column: 9)
!11637 = !DILocation(line: 518, column: 9, scope: !11625)
!11638 = !DILocation(line: 520, column: 9, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11636, file: !1137, line: 519, column: 5)
!11640 = !DILocation(line: 521, column: 5, scope: !11639)
!11641 = !DILocation(line: 523, column: 5, scope: !11625)
!11642 = distinct !DISubprogram(name: "pvPortRealloc", scope: !1137, file: !1137, line: 528, type: !11643, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11645)
!11643 = !DISubroutineType(types: !11644)
!11644 = !{!51, !51, !919}
!11645 = !{!11646, !11647, !11648, !11649, !11650, !11651}
!11646 = !DILocalVariable(name: "pv", arg: 1, scope: !11642, file: !1137, line: 528, type: !51)
!11647 = !DILocalVariable(name: "size", arg: 2, scope: !11642, file: !1137, line: 528, type: !919)
!11648 = !DILocalVariable(name: "pvReturn", scope: !11642, file: !1137, line: 530, type: !51)
!11649 = !DILocalVariable(name: "xBlockSize", scope: !11642, file: !1137, line: 531, type: !919)
!11650 = !DILocalVariable(name: "puc", scope: !11642, file: !1137, line: 532, type: !210)
!11651 = !DILocalVariable(name: "pxLink", scope: !11642, file: !1137, line: 533, type: !1139)
!11652 = !DILocation(line: 0, scope: !11642)
!11653 = !DILocation(line: 535, column: 16, scope: !11642)
!11654 = !DILocation(line: 537, column: 12, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11642, file: !1137, line: 537, column: 9)
!11656 = !DILocation(line: 537, column: 9, scope: !11642)
!11657 = !DILocation(line: 540, column: 13, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11655, file: !1137, line: 538, column: 5)
!11659 = !DILocation(line: 546, column: 9, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11658, file: !1137, line: 546, column: 9)
!11661 = !DILocation(line: 546, column: 9, scope: !11658)
!11662 = !DILocation(line: 546, column: 9, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11660, file: !1137, line: 546, column: 9)
!11664 = !DILocation(line: 547, column: 9, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11658, file: !1137, line: 547, column: 9)
!11666 = !DILocation(line: 547, column: 9, scope: !11658)
!11667 = !DILocation(line: 547, column: 9, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11665, file: !1137, line: 547, column: 9)
!11669 = !DILocation(line: 550, column: 31, scope: !11658)
!11670 = !DILocation(line: 550, column: 45, scope: !11658)
!11671 = !DILocation(line: 550, column: 44, scope: !11658)
!11672 = !DILocation(line: 550, column: 42, scope: !11658)
!11673 = !DILocation(line: 553, column: 34, scope: !11658)
!11674 = !DILocation(line: 555, column: 23, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11658, file: !1137, line: 555, column: 12)
!11676 = !DILocation(line: 0, scope: !11675)
!11677 = !DILocation(line: 561, column: 9, scope: !11658)
!11678 = !DILocation(line: 562, column: 5, scope: !11658)
!11679 = !DILocation(line: 564, column: 5, scope: !11642)
!11680 = distinct !DISubprogram(name: "pvPortMallocNC", scope: !1137, file: !1137, line: 570, type: !11407, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11681)
!11681 = !{!11682}
!11682 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !11680, file: !1137, line: 570, type: !919)
!11683 = !DILocation(line: 0, scope: !11680)
!11684 = !DILocation(line: 649, column: 12, scope: !11680)
!11685 = !DILocation(line: 649, column: 5, scope: !11680)
!11686 = distinct !DISubprogram(name: "vPortFreeNC", scope: !1137, file: !1137, line: 652, type: !640, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11687)
!11687 = !{!11688}
!11688 = !DILocalVariable(name: "pv", arg: 1, scope: !11686, file: !1137, line: 652, type: !51)
!11689 = !DILocation(line: 0, scope: !11686)
!11690 = !DILocation(line: 680, column: 5, scope: !11686)
!11691 = !DILocation(line: 682, column: 1, scope: !11686)
!11692 = distinct !DISubprogram(name: "__wrap_malloc", scope: !1137, file: !1137, line: 686, type: !11407, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11693)
!11693 = !{!11694}
!11694 = !DILocalVariable(name: "size", arg: 1, scope: !11692, file: !1137, line: 686, type: !919)
!11695 = !DILocation(line: 0, scope: !11692)
!11696 = !DILocation(line: 688, column: 12, scope: !11692)
!11697 = !DILocation(line: 688, column: 5, scope: !11692)
!11698 = distinct !DISubprogram(name: "__wrap_calloc", scope: !1137, file: !1137, line: 690, type: !11626, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11699)
!11699 = !{!11700, !11701}
!11700 = !DILocalVariable(name: "nmemb", arg: 1, scope: !11698, file: !1137, line: 690, type: !919)
!11701 = !DILocalVariable(name: "size", arg: 2, scope: !11698, file: !1137, line: 690, type: !919)
!11702 = !DILocation(line: 0, scope: !11698)
!11703 = !DILocation(line: 692, column: 12, scope: !11698)
!11704 = !DILocation(line: 692, column: 5, scope: !11698)
!11705 = distinct !DISubprogram(name: "__wrap_realloc", scope: !1137, file: !1137, line: 694, type: !11643, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11706)
!11706 = !{!11707, !11708}
!11707 = !DILocalVariable(name: "pv", arg: 1, scope: !11705, file: !1137, line: 694, type: !51)
!11708 = !DILocalVariable(name: "size", arg: 2, scope: !11705, file: !1137, line: 694, type: !919)
!11709 = !DILocation(line: 0, scope: !11705)
!11710 = !DILocation(line: 696, column: 12, scope: !11705)
!11711 = !DILocation(line: 696, column: 5, scope: !11705)
!11712 = distinct !DISubprogram(name: "__wrap_free", scope: !1137, file: !1137, line: 698, type: !640, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1136, retainedNodes: !11713)
!11713 = !{!11714}
!11714 = !DILocalVariable(name: "pv", arg: 1, scope: !11712, file: !1137, line: 698, type: !51)
!11715 = !DILocation(line: 0, scope: !11712)
!11716 = !DILocation(line: 700, column: 6, scope: !11712)
!11717 = !DILocation(line: 701, column: 1, scope: !11712)
!11718 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !2214, file: !2214, line: 769, type: !154, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !1397)
!11719 = !DILocation(line: 781, column: 22, scope: !11718)
!11720 = !DILocation(line: 781, column: 45, scope: !11718)
!11721 = !DILocation(line: 781, column: 67, scope: !11718)
!11722 = !DILocation(line: 781, column: 19, scope: !11718)
!11723 = !DILocation(line: 782, column: 19, scope: !11718)
!11724 = !DILocation(line: 783, column: 1, scope: !11718)
!11725 = distinct !DISubprogram(name: "mxmlElementDeleteAttr", scope: !2225, file: !2225, line: 40, type: !11726, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !11773)
!11726 = !DISubroutineType(types: !11727)
!11727 = !{null, !11728, !331}
!11728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11729, size: 32)
!11729 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !11730)
!11730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !11731)
!11731 = !{!11732, !11733, !11735, !11736, !11737, !11738, !11739, !11771, !11772}
!11732 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11730, file: !1173, line: 139, baseType: !1209, size: 32)
!11733 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11730, file: !1173, line: 140, baseType: !11734, size: 32, offset: 32)
!11734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11730, size: 32)
!11735 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11730, file: !1173, line: 141, baseType: !11734, size: 32, offset: 64)
!11736 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11730, file: !1173, line: 142, baseType: !11734, size: 32, offset: 96)
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !11730, file: !1173, line: 143, baseType: !11734, size: 32, offset: 128)
!11738 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !11730, file: !1173, line: 144, baseType: !11734, size: 32, offset: 160)
!11739 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11730, file: !1173, line: 145, baseType: !11740, size: 128, offset: 192)
!11740 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !11741)
!11741 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !11742)
!11742 = !{!11743, !11756, !11757, !11758, !11759, !11765}
!11743 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !11741, file: !1173, line: 129, baseType: !11744, size: 96)
!11744 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !11745)
!11745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !11746)
!11746 = !{!11747, !11748, !11749}
!11747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11745, file: !1173, line: 110, baseType: !201, size: 32)
!11748 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !11745, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!11749 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !11745, file: !1173, line: 112, baseType: !11750, size: 32, offset: 64)
!11750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11751, size: 32)
!11751 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !11752)
!11752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !11753)
!11753 = !{!11754, !11755}
!11754 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11752, file: !1173, line: 104, baseType: !201, size: 32)
!11755 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11752, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!11756 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !11741, file: !1173, line: 130, baseType: !7, size: 32)
!11757 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !11741, file: !1173, line: 131, baseType: !201, size: 32)
!11758 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !11741, file: !1173, line: 132, baseType: !1236, size: 64)
!11759 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !11741, file: !1173, line: 133, baseType: !11760, size: 64)
!11760 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !11761)
!11761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !11762)
!11762 = !{!11763, !11764}
!11763 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !11761, file: !1173, line: 117, baseType: !7, size: 32)
!11764 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !11761, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!11765 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !11741, file: !1173, line: 134, baseType: !11766, size: 64)
!11766 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !11767)
!11767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !11768)
!11768 = !{!11769, !11770}
!11769 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11767, file: !1173, line: 123, baseType: !51, size: 32)
!11770 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !11767, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!11771 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !11730, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!11772 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !11730, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!11773 = !{!11774, !11775, !11776, !11777}
!11774 = !DILocalVariable(name: "node", arg: 1, scope: !11725, file: !2225, line: 40, type: !11728)
!11775 = !DILocalVariable(name: "name", arg: 2, scope: !11725, file: !2225, line: 41, type: !331)
!11776 = !DILocalVariable(name: "i", scope: !11725, file: !2225, line: 43, type: !7)
!11777 = !DILocalVariable(name: "attr", scope: !11725, file: !2225, line: 44, type: !11750)
!11778 = !DILocation(line: 0, scope: !11725)
!11779 = !DILocation(line: 56, column: 8, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11725, file: !2225, line: 56, column: 7)
!11781 = !DILocation(line: 56, column: 13, scope: !11780)
!11782 = !DILocation(line: 56, column: 22, scope: !11780)
!11783 = !DILocation(line: 56, column: 27, scope: !11780)
!11784 = !DILocation(line: 56, column: 43, scope: !11780)
!11785 = !DILocation(line: 63, column: 18, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11725, file: !2225, line: 63, column: 3)
!11787 = !DILocation(line: 63, column: 24, scope: !11786)
!11788 = !DILocation(line: 63, column: 32, scope: !11786)
!11789 = !DILocation(line: 63, column: 70, scope: !11786)
!11790 = !DILocation(line: 64, column: 10, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11786, file: !2225, line: 63, column: 3)
!11792 = !DILocation(line: 63, column: 3, scope: !11786)
!11793 = !DILocation(line: 71, column: 23, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11795, file: !2225, line: 71, column: 9)
!11795 = distinct !DILexicalBlock(scope: !11791, file: !2225, line: 66, column: 3)
!11796 = !DILocation(line: 71, column: 10, scope: !11794)
!11797 = !DILocation(line: 71, column: 9, scope: !11795)
!11798 = !DILocation(line: 77, column: 18, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11794, file: !2225, line: 72, column: 5)
!11800 = !DILocation(line: 77, column: 7, scope: !11799)
!11801 = !DILocation(line: 78, column: 18, scope: !11799)
!11802 = !DILocation(line: 78, column: 7, scope: !11799)
!11803 = !DILocation(line: 81, column: 13, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11799, file: !2225, line: 81, column: 11)
!11805 = !DILocation(line: 81, column: 11, scope: !11799)
!11806 = !DILocation(line: 82, column: 17, scope: !11804)
!11807 = !DILocation(line: 82, column: 28, scope: !11804)
!11808 = !DILocation(line: 82, column: 23, scope: !11804)
!11809 = !DILocation(line: 82, column: 35, scope: !11804)
!11810 = !DILocation(line: 82, column: 9, scope: !11804)
!11811 = !DILocation(line: 84, column: 37, scope: !11799)
!11812 = !DILocation(line: 86, column: 41, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11799, file: !2225, line: 86, column: 11)
!11814 = !DILocation(line: 86, column: 11, scope: !11799)
!11815 = !DILocation(line: 87, column: 34, scope: !11813)
!11816 = !DILocation(line: 87, column: 9, scope: !11813)
!11817 = !DILocation(line: 65, column: 10, scope: !11791)
!11818 = !DILocation(line: 65, column: 19, scope: !11791)
!11819 = distinct !{!11819, !11792, !11820}
!11820 = !DILocation(line: 90, column: 3, scope: !11786)
!11821 = !DILocation(line: 91, column: 1, scope: !11725)
!11822 = distinct !DISubprogram(name: "mxmlElementGetAttr", scope: !2225, file: !2225, line: 102, type: !11823, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !11825)
!11823 = !DISubroutineType(types: !11824)
!11824 = !{!331, !11728, !331}
!11825 = !{!11826, !11827, !11828, !11829}
!11826 = !DILocalVariable(name: "node", arg: 1, scope: !11822, file: !2225, line: 102, type: !11728)
!11827 = !DILocalVariable(name: "name", arg: 2, scope: !11822, file: !2225, line: 103, type: !331)
!11828 = !DILocalVariable(name: "i", scope: !11822, file: !2225, line: 105, type: !7)
!11829 = !DILocalVariable(name: "attr", scope: !11822, file: !2225, line: 106, type: !11750)
!11830 = !DILocation(line: 0, scope: !11822)
!11831 = !DILocation(line: 118, column: 8, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11822, file: !2225, line: 118, column: 7)
!11833 = !DILocation(line: 118, column: 13, scope: !11832)
!11834 = !DILocation(line: 118, column: 22, scope: !11832)
!11835 = !DILocation(line: 118, column: 27, scope: !11832)
!11836 = !DILocation(line: 118, column: 43, scope: !11832)
!11837 = !DILocation(line: 125, column: 18, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11822, file: !2225, line: 125, column: 3)
!11839 = !DILocation(line: 125, column: 24, scope: !11838)
!11840 = !DILocation(line: 125, column: 32, scope: !11838)
!11841 = !DILocation(line: 126, column: 10, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11838, file: !2225, line: 125, column: 3)
!11843 = !DILocation(line: 125, column: 3, scope: !11838)
!11844 = !DILocation(line: 125, column: 70, scope: !11838)
!11845 = !DILocation(line: 133, column: 23, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !2225, line: 133, column: 9)
!11847 = distinct !DILexicalBlock(scope: !11842, file: !2225, line: 128, column: 3)
!11848 = !DILocation(line: 133, column: 10, scope: !11846)
!11849 = !DILocation(line: 133, column: 9, scope: !11847)
!11850 = !DILocation(line: 138, column: 21, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11846, file: !2225, line: 134, column: 5)
!11852 = !DILocation(line: 138, column: 7, scope: !11851)
!11853 = !DILocation(line: 127, column: 10, scope: !11842)
!11854 = !DILocation(line: 127, column: 19, scope: !11842)
!11855 = distinct !{!11855, !11843, !11856}
!11856 = !DILocation(line: 140, column: 3, scope: !11838)
!11857 = !DILocation(line: 151, column: 1, scope: !11822)
!11858 = distinct !DISubprogram(name: "mxmlElementSetAttr", scope: !2225, file: !2225, line: 164, type: !11859, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{null, !11728, !331, !331}
!11861 = !{!11862, !11863, !11864, !11865}
!11862 = !DILocalVariable(name: "node", arg: 1, scope: !11858, file: !2225, line: 164, type: !11728)
!11863 = !DILocalVariable(name: "name", arg: 2, scope: !11858, file: !2225, line: 165, type: !331)
!11864 = !DILocalVariable(name: "value", arg: 3, scope: !11858, file: !2225, line: 166, type: !331)
!11865 = !DILocalVariable(name: "valuec", scope: !11858, file: !2225, line: 168, type: !201)
!11866 = !DILocation(line: 0, scope: !11858)
!11867 = !DILocation(line: 180, column: 8, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11858, file: !2225, line: 180, column: 7)
!11869 = !DILocation(line: 180, column: 13, scope: !11868)
!11870 = !DILocation(line: 180, column: 22, scope: !11868)
!11871 = !DILocation(line: 180, column: 27, scope: !11868)
!11872 = !DILocation(line: 180, column: 43, scope: !11868)
!11873 = !DILocation(line: 183, column: 7, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11858, file: !2225, line: 183, column: 7)
!11875 = !DILocation(line: 183, column: 7, scope: !11858)
!11876 = !DILocation(line: 184, column: 14, scope: !11874)
!11877 = !DILocation(line: 184, column: 5, scope: !11874)
!11878 = !DILocation(line: 0, scope: !11874)
!11879 = !DILocation(line: 188, column: 7, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11858, file: !2225, line: 188, column: 7)
!11881 = !DILocation(line: 188, column: 7, scope: !11858)
!11882 = !DILocation(line: 189, column: 5, scope: !11880)
!11883 = !DILocation(line: 190, column: 1, scope: !11858)
!11884 = distinct !DISubprogram(name: "mxml_set_attr", scope: !2225, file: !2225, line: 248, type: !11885, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !11887)
!11885 = !DISubroutineType(types: !11886)
!11886 = !{!7, !11728, !331, !201}
!11887 = !{!11888, !11889, !11890, !11891, !11892}
!11888 = !DILocalVariable(name: "node", arg: 1, scope: !11884, file: !2225, line: 248, type: !11728)
!11889 = !DILocalVariable(name: "name", arg: 2, scope: !11884, file: !2225, line: 249, type: !331)
!11890 = !DILocalVariable(name: "value", arg: 3, scope: !11884, file: !2225, line: 250, type: !201)
!11891 = !DILocalVariable(name: "i", scope: !11884, file: !2225, line: 252, type: !7)
!11892 = !DILocalVariable(name: "attr", scope: !11884, file: !2225, line: 253, type: !11750)
!11893 = !DILocation(line: 0, scope: !11884)
!11894 = !DILocation(line: 260, column: 18, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11884, file: !2225, line: 260, column: 3)
!11896 = !DILocation(line: 260, column: 24, scope: !11895)
!11897 = !DILocation(line: 260, column: 32, scope: !11895)
!11898 = !DILocation(line: 260, column: 70, scope: !11895)
!11899 = !DILocation(line: 261, column: 10, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11895, file: !2225, line: 260, column: 3)
!11901 = !DILocation(line: 260, column: 3, scope: !11895)
!11902 = !DILocation(line: 263, column: 23, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11900, file: !2225, line: 263, column: 9)
!11904 = !DILocation(line: 263, column: 10, scope: !11903)
!11905 = !DILocation(line: 263, column: 9, scope: !11900)
!11906 = !DILocation(line: 269, column: 17, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !2225, line: 269, column: 11)
!11908 = distinct !DILexicalBlock(scope: !11903, file: !2225, line: 264, column: 5)
!11909 = !DILocation(line: 269, column: 11, scope: !11907)
!11910 = !DILocation(line: 269, column: 11, scope: !11908)
!11911 = !DILocation(line: 270, column: 9, scope: !11907)
!11912 = !DILocation(line: 272, column: 19, scope: !11908)
!11913 = !DILocation(line: 274, column: 7, scope: !11908)
!11914 = !DILocation(line: 262, column: 10, scope: !11900)
!11915 = !DILocation(line: 262, column: 19, scope: !11900)
!11916 = distinct !{!11916, !11901, !11917}
!11917 = !DILocation(line: 275, column: 5, scope: !11895)
!11918 = !DILocation(line: 281, column: 27, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11884, file: !2225, line: 281, column: 7)
!11920 = !DILocation(line: 281, column: 37, scope: !11919)
!11921 = !DILocation(line: 281, column: 7, scope: !11884)
!11922 = !DILocation(line: 282, column: 12, scope: !11919)
!11923 = !DILocation(line: 282, column: 5, scope: !11919)
!11924 = !DILocation(line: 284, column: 40, scope: !11919)
!11925 = !DILocation(line: 285, column: 56, scope: !11919)
!11926 = !DILocation(line: 284, column: 12, scope: !11919)
!11927 = !DILocation(line: 287, column: 8, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11884, file: !2225, line: 287, column: 7)
!11929 = !DILocation(line: 287, column: 7, scope: !11884)
!11930 = !DILocation(line: 290, column: 42, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11928, file: !2225, line: 288, column: 3)
!11932 = !DILocation(line: 289, column: 5, scope: !11931)
!11933 = !DILocation(line: 291, column: 5, scope: !11931)
!11934 = !DILocation(line: 0, scope: !11919)
!11935 = !DILocation(line: 294, column: 29, scope: !11884)
!11936 = !DILocation(line: 295, column: 31, scope: !11884)
!11937 = !DILocation(line: 297, column: 21, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11884, file: !2225, line: 297, column: 7)
!11939 = !DILocation(line: 297, column: 14, scope: !11938)
!11940 = !DILocation(line: 297, column: 19, scope: !11938)
!11941 = !DILocation(line: 297, column: 35, scope: !11938)
!11942 = !DILocation(line: 297, column: 7, scope: !11884)
!11943 = !DILocation(line: 300, column: 42, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11938, file: !2225, line: 298, column: 3)
!11945 = !DILocation(line: 299, column: 5, scope: !11944)
!11946 = !DILocation(line: 301, column: 5, scope: !11944)
!11947 = !DILocation(line: 304, column: 9, scope: !11884)
!11948 = !DILocation(line: 304, column: 15, scope: !11884)
!11949 = !DILocation(line: 306, column: 33, scope: !11884)
!11950 = !DILocation(line: 308, column: 3, scope: !11884)
!11951 = !DILocation(line: 309, column: 1, scope: !11884)
!11952 = distinct !DISubprogram(name: "mxmlElementSetAttrf", scope: !2225, file: !2225, line: 205, type: !11953, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !11955)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{null, !11728, !331, !331, null}
!11955 = !{!11956, !11957, !11958, !11959, !11966}
!11956 = !DILocalVariable(name: "node", arg: 1, scope: !11952, file: !2225, line: 205, type: !11728)
!11957 = !DILocalVariable(name: "name", arg: 2, scope: !11952, file: !2225, line: 206, type: !331)
!11958 = !DILocalVariable(name: "format", arg: 3, scope: !11952, file: !2225, line: 207, type: !331)
!11959 = !DILocalVariable(name: "ap", scope: !11952, file: !2225, line: 210, type: !11960)
!11960 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5354, line: 46, baseType: !11961)
!11961 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5356, line: 32, baseType: !11962)
!11962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2225, baseType: !11963)
!11963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !11964)
!11964 = !{!11965}
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !11963, file: !2225, line: 210, baseType: !51, size: 32)
!11966 = !DILocalVariable(name: "value", scope: !11952, file: !2225, line: 211, type: !201)
!11967 = !DILocation(line: 0, scope: !11952)
!11968 = !DILocation(line: 210, column: 3, scope: !11952)
!11969 = !DILocation(line: 210, column: 11, scope: !11952)
!11970 = !DILocation(line: 224, column: 8, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11952, file: !2225, line: 224, column: 7)
!11972 = !DILocation(line: 224, column: 13, scope: !11971)
!11973 = !DILocation(line: 224, column: 22, scope: !11971)
!11974 = !DILocation(line: 224, column: 27, scope: !11971)
!11975 = !DILocation(line: 224, column: 43, scope: !11971)
!11976 = !DILocation(line: 231, column: 3, scope: !11952)
!11977 = !DILocation(line: 232, column: 11, scope: !11952)
!11978 = !DILocation(line: 233, column: 3, scope: !11952)
!11979 = !DILocation(line: 235, column: 8, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11952, file: !2225, line: 235, column: 7)
!11981 = !DILocation(line: 235, column: 7, scope: !11952)
!11982 = !DILocation(line: 237, column: 28, scope: !11980)
!11983 = !DILocation(line: 237, column: 42, scope: !11980)
!11984 = !DILocation(line: 236, column: 5, scope: !11980)
!11985 = !DILocation(line: 238, column: 12, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11980, file: !2225, line: 238, column: 12)
!11987 = !DILocation(line: 238, column: 12, scope: !11980)
!11988 = !DILocation(line: 239, column: 5, scope: !11986)
!11989 = !DILocation(line: 240, column: 1, scope: !11952)
!11990 = distinct !DISubprogram(name: "mxmlEntityAddCallback", scope: !1167, file: !1167, line: 31, type: !11991, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1170, retainedNodes: !11994)
!11991 = !DISubroutineType(types: !11992)
!11992 = !{!7, !11993}
!11993 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_entity_cb_t", file: !1173, line: 173, baseType: !1310)
!11994 = !{!11995, !11996}
!11995 = !DILocalVariable(name: "cb", arg: 1, scope: !11990, file: !1167, line: 32, type: !11993)
!11996 = !DILocalVariable(name: "global", scope: !11990, file: !1167, line: 34, type: !11997)
!11997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11998, size: 32)
!11998 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mxml_global_t", file: !1300, line: 39, baseType: !11999)
!11999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mxml_global_s", file: !1300, line: 31, size: 480, elements: !12000)
!12000 = !{!12001, !12002, !12003, !12004, !12005, !12055}
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "error_cb", scope: !11999, file: !1300, line: 33, baseType: !1304, size: 32)
!12002 = !DIDerivedType(tag: DW_TAG_member, name: "num_entity_cbs", scope: !11999, file: !1300, line: 34, baseType: !7, size: 32, offset: 32)
!12003 = !DIDerivedType(tag: DW_TAG_member, name: "entity_cbs", scope: !11999, file: !1300, line: 35, baseType: !1309, size: 320, offset: 64)
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "wrap", scope: !11999, file: !1300, line: 36, baseType: !7, size: 32, offset: 384)
!12005 = !DIDerivedType(tag: DW_TAG_member, name: "custom_load_cb", scope: !11999, file: !1300, line: 37, baseType: !12006, size: 32, offset: 416)
!12006 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_load_cb_t", file: !1173, line: 166, baseType: !12007)
!12007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12008, size: 32)
!12008 = !DISubroutineType(types: !12009)
!12009 = !{!7, !12010, !331}
!12010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12011, size: 32)
!12011 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !12012)
!12012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !12013)
!12013 = !{!12014, !12015, !12017, !12018, !12019, !12020, !12021, !12053, !12054}
!12014 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12012, file: !1173, line: 139, baseType: !1209, size: 32)
!12015 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12012, file: !1173, line: 140, baseType: !12016, size: 32, offset: 32)
!12016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12012, size: 32)
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12012, file: !1173, line: 141, baseType: !12016, size: 32, offset: 64)
!12018 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !12012, file: !1173, line: 142, baseType: !12016, size: 32, offset: 96)
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !12012, file: !1173, line: 143, baseType: !12016, size: 32, offset: 128)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !12012, file: !1173, line: 144, baseType: !12016, size: 32, offset: 160)
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12012, file: !1173, line: 145, baseType: !12022, size: 128, offset: 192)
!12022 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !12023)
!12023 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !12024)
!12024 = !{!12025, !12038, !12039, !12040, !12041, !12047}
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !12023, file: !1173, line: 129, baseType: !12026, size: 96)
!12026 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !12027)
!12027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !12028)
!12028 = !{!12029, !12030, !12031}
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12027, file: !1173, line: 110, baseType: !201, size: 32)
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !12027, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !12027, file: !1173, line: 112, baseType: !12032, size: 32, offset: 64)
!12032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12033, size: 32)
!12033 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !12034)
!12034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !12035)
!12035 = !{!12036, !12037}
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12034, file: !1173, line: 104, baseType: !201, size: 32)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12034, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !12023, file: !1173, line: 130, baseType: !7, size: 32)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !12023, file: !1173, line: 131, baseType: !201, size: 32)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !12023, file: !1173, line: 132, baseType: !1236, size: 64)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !12023, file: !1173, line: 133, baseType: !12042, size: 64)
!12042 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !12043)
!12043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !12044)
!12044 = !{!12045, !12046}
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !12043, file: !1173, line: 117, baseType: !7, size: 32)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !12043, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !12023, file: !1173, line: 134, baseType: !12048, size: 64)
!12048 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !12049)
!12049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !12050)
!12050 = !{!12051, !12052}
!12051 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12049, file: !1173, line: 123, baseType: !51, size: 32)
!12052 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !12049, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !12012, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !12012, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "custom_save_cb", scope: !11999, file: !1300, line: 38, baseType: !12056, size: 32, offset: 448)
!12056 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_save_cb_t", file: !1173, line: 169, baseType: !12057)
!12057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12058, size: 32)
!12058 = !DISubroutineType(types: !12059)
!12059 = !{!201, !12010}
!12060 = !DILocation(line: 0, scope: !11990)
!12061 = !DILocation(line: 34, column: 28, scope: !11990)
!12062 = !DILocation(line: 38, column: 15, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !11990, file: !1167, line: 38, column: 7)
!12064 = !DILocation(line: 38, column: 30, scope: !12063)
!12065 = !DILocation(line: 38, column: 7, scope: !11990)
!12066 = !DILocation(line: 40, column: 5, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !1167, line: 39, column: 3)
!12068 = !DILocation(line: 40, column: 48, scope: !12067)
!12069 = !DILocation(line: 41, column: 28, scope: !12067)
!12070 = !DILocation(line: 43, column: 5, scope: !12067)
!12071 = !DILocation(line: 47, column: 5, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12063, file: !1167, line: 46, column: 3)
!12073 = !DILocation(line: 49, column: 5, scope: !12072)
!12074 = !DILocation(line: 0, scope: !12063)
!12075 = !DILocation(line: 51, column: 1, scope: !11990)
!12076 = distinct !DISubprogram(name: "mxmlEntityGetName", scope: !1167, file: !1167, line: 61, type: !12077, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1170, retainedNodes: !12079)
!12077 = !DISubroutineType(types: !12078)
!12078 = !{!331, !7}
!12079 = !{!12080}
!12080 = !DILocalVariable(name: "val", arg: 1, scope: !12076, file: !1167, line: 61, type: !7)
!12081 = !DILocation(line: 0, scope: !12076)
!12082 = !DILocation(line: 63, column: 3, scope: !12076)
!12083 = !DILocation(line: 69, column: 9, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12076, file: !1167, line: 64, column: 3)
!12085 = !DILocation(line: 72, column: 9, scope: !12084)
!12086 = !DILocation(line: 75, column: 9, scope: !12084)
!12087 = !DILocation(line: 78, column: 9, scope: !12084)
!12088 = !DILocation(line: 0, scope: !12084)
!12089 = !DILocation(line: 80, column: 1, scope: !12076)
!12090 = distinct !DISubprogram(name: "mxmlEntityGetValue", scope: !1167, file: !1167, line: 91, type: !1168, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1170, retainedNodes: !12091)
!12091 = !{!12092, !12093, !12094, !12095}
!12092 = !DILocalVariable(name: "name", arg: 1, scope: !12090, file: !1167, line: 91, type: !331)
!12093 = !DILocalVariable(name: "i", scope: !12090, file: !1167, line: 93, type: !7)
!12094 = !DILocalVariable(name: "ch", scope: !12090, file: !1167, line: 94, type: !7)
!12095 = !DILocalVariable(name: "global", scope: !12090, file: !1167, line: 95, type: !11997)
!12096 = !DILocation(line: 0, scope: !12090)
!12097 = !DILocation(line: 95, column: 28, scope: !12090)
!12098 = !DILocation(line: 99, column: 27, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !1167, line: 99, column: 3)
!12100 = distinct !DILexicalBlock(scope: !12090, file: !1167, line: 99, column: 3)
!12101 = !DILocation(line: 99, column: 17, scope: !12099)
!12102 = !DILocation(line: 99, column: 3, scope: !12100)
!12103 = distinct !{!12103, !12102, !12104}
!12104 = !DILocation(line: 101, column: 17, scope: !12100)
!12105 = !DILocation(line: 100, column: 16, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12099, file: !1167, line: 100, column: 9)
!12107 = !DILocation(line: 100, column: 15, scope: !12106)
!12108 = !DILocation(line: 100, column: 46, scope: !12106)
!12109 = !DILocation(line: 99, column: 45, scope: !12099)
!12110 = !DILocation(line: 100, column: 9, scope: !12099)
!12111 = !DILocation(line: 104, column: 1, scope: !12090)
!12112 = distinct !DISubprogram(name: "mxmlEntityRemoveCallback", scope: !1167, file: !1167, line: 112, type: !12113, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1170, retainedNodes: !12115)
!12113 = !DISubroutineType(types: !12114)
!12114 = !{null, !11993}
!12115 = !{!12116, !12117, !12118}
!12116 = !DILocalVariable(name: "cb", arg: 1, scope: !12112, file: !1167, line: 113, type: !11993)
!12117 = !DILocalVariable(name: "i", scope: !12112, file: !1167, line: 115, type: !7)
!12118 = !DILocalVariable(name: "global", scope: !12112, file: !1167, line: 116, type: !11997)
!12119 = !DILocation(line: 0, scope: !12112)
!12120 = !DILocation(line: 116, column: 28, scope: !12112)
!12121 = !DILocation(line: 120, column: 17, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !1167, line: 120, column: 3)
!12123 = distinct !DILexicalBlock(scope: !12112, file: !1167, line: 120, column: 3)
!12124 = !DILocation(line: 120, column: 3, scope: !12123)
!12125 = !DILocation(line: 121, column: 15, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12122, file: !1167, line: 121, column: 9)
!12127 = !DILocation(line: 121, column: 12, scope: !12126)
!12128 = !DILocation(line: 121, column: 9, scope: !12122)
!12129 = !DILocation(line: 127, column: 30, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12126, file: !1167, line: 122, column: 5)
!12131 = !DILocation(line: 129, column: 13, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12130, file: !1167, line: 129, column: 11)
!12133 = !DILocation(line: 129, column: 11, scope: !12130)
!12134 = !DILocation(line: 130, column: 17, scope: !12132)
!12135 = !DILocation(line: 130, column: 64, scope: !12132)
!12136 = !DILocation(line: 130, column: 41, scope: !12132)
!12137 = !DILocation(line: 131, column: 34, scope: !12132)
!12138 = !DILocation(line: 131, column: 39, scope: !12132)
!12139 = !DILocation(line: 130, column: 9, scope: !12132)
!12140 = !DILocation(line: 120, column: 45, scope: !12122)
!12141 = distinct !{!12141, !12124, !12142}
!12142 = !DILocation(line: 134, column: 5, scope: !12123)
!12143 = !DILocation(line: 135, column: 1, scope: !12112)
!12144 = !DILocation(line: 0, scope: !1166)
!12145 = !DILocation(line: 422, column: 3, scope: !1166)
!12146 = !DILocation(line: 424, column: 22, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !1166, file: !1167, line: 423, column: 3)
!12148 = !DILocation(line: 424, column: 30, scope: !12147)
!12149 = !DILocation(line: 426, column: 48, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12147, file: !1167, line: 426, column: 9)
!12151 = !DILocation(line: 426, column: 17, scope: !12150)
!12152 = !DILocation(line: 426, column: 55, scope: !12150)
!12153 = !DILocation(line: 426, column: 9, scope: !12147)
!12154 = !DILocation(line: 428, column: 19, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12150, file: !1167, line: 428, column: 14)
!12156 = !DILocation(line: 422, column: 16, scope: !1166)
!12157 = !DILocation(line: 422, column: 25, scope: !1166)
!12158 = distinct !{!12158, !12145, !12159}
!12159 = !DILocation(line: 432, column: 3, scope: !1166)
!12160 = !DILocation(line: 439, column: 37, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !1166, file: !1167, line: 439, column: 7)
!12162 = !DILocation(line: 439, column: 8, scope: !12161)
!12163 = !DILocation(line: 439, column: 7, scope: !1166)
!12164 = !DILocation(line: 441, column: 41, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12161, file: !1167, line: 441, column: 12)
!12166 = !DILocation(line: 441, column: 13, scope: !12165)
!12167 = !DILocation(line: 441, column: 12, scope: !12161)
!12168 = !DILocation(line: 445, column: 1, scope: !1166)
!12169 = distinct !DISubprogram(name: "mxmlLoadString", scope: !1201, file: !1201, line: 191, type: !12170, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !12172)
!12170 = !DISubroutineType(types: !12171)
!12171 = !{!1204, !1204, !331, !1252}
!12172 = !{!12173, !12174, !12175}
!12173 = !DILocalVariable(name: "top", arg: 1, scope: !12169, file: !1201, line: 191, type: !1204)
!12174 = !DILocalVariable(name: "s", arg: 2, scope: !12169, file: !1201, line: 192, type: !331)
!12175 = !DILocalVariable(name: "cb", arg: 3, scope: !12169, file: !1201, line: 193, type: !1252)
!12176 = !DILocation(line: 0, scope: !12169)
!12177 = !DILocation(line: 199, column: 31, scope: !12169)
!12178 = !DILocation(line: 199, column: 11, scope: !12169)
!12179 = !DILocation(line: 199, column: 3, scope: !12169)
!12180 = !DILocation(line: 0, scope: !1200)
!12181 = !DILocation(line: 1409, column: 3, scope: !1200)
!12182 = !DILocation(line: 1411, column: 3, scope: !1200)
!12183 = !DILocation(line: 1413, column: 3, scope: !1200)
!12184 = !DILocation(line: 1414, column: 28, scope: !1200)
!12185 = !DILocation(line: 1431, column: 17, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !1200, file: !1201, line: 1431, column: 7)
!12187 = !DILocation(line: 1431, column: 15, scope: !12186)
!12188 = !DILocation(line: 1431, column: 29, scope: !12186)
!12189 = !DILocation(line: 1431, column: 7, scope: !1200)
!12190 = !DILocation(line: 1433, column: 5, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12186, file: !1201, line: 1432, column: 3)
!12192 = !DILocation(line: 1434, column: 5, scope: !12191)
!12193 = !DILocation(line: 1437, column: 14, scope: !1200)
!12194 = !DILocation(line: 1438, column: 14, scope: !1200)
!12195 = !DILocation(line: 1442, column: 14, scope: !1200)
!12196 = !DILocation(line: 1444, column: 7, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !1200, file: !1201, line: 1444, column: 7)
!12198 = !DILocation(line: 1444, column: 10, scope: !12197)
!12199 = !DILocation(line: 1445, column: 12, scope: !12197)
!12200 = !DILocation(line: 1445, column: 5, scope: !12197)
!12201 = !DILocation(line: 0, scope: !12197)
!12202 = !DILocation(line: 1451, column: 16, scope: !1200)
!12203 = !DILocation(line: 1451, column: 42, scope: !1200)
!12204 = !DILocation(line: 1451, column: 3, scope: !1200)
!12205 = !DILocation(line: 1453, column: 13, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !1201, line: 1453, column: 9)
!12207 = distinct !DILexicalBlock(scope: !1200, file: !1201, line: 1452, column: 3)
!12208 = !DILocation(line: 1453, column: 20, scope: !12206)
!12209 = !DILocation(line: 1454, column: 11, scope: !12206)
!12210 = !DILocation(line: 1454, column: 28, scope: !12206)
!12211 = !DILocation(line: 1455, column: 9, scope: !12206)
!12212 = !DILocation(line: 1455, column: 18, scope: !12206)
!12213 = !DILocation(line: 1455, column: 16, scope: !12206)
!12214 = !DILocation(line: 1453, column: 9, scope: !12207)
!12215 = !DILocation(line: 1542, column: 14, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12206, file: !1201, line: 1542, column: 14)
!12217 = !DILocation(line: 1461, column: 15, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12206, file: !1201, line: 1456, column: 5)
!12219 = !DILocation(line: 1463, column: 7, scope: !12218)
!12220 = !DILocation(line: 1466, column: 50, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12218, file: !1201, line: 1464, column: 7)
!12222 = !DILocation(line: 1466, column: 43, scope: !12221)
!12223 = !DILocation(line: 1466, column: 20, scope: !12221)
!12224 = !DILocation(line: 1467, column: 6, scope: !12221)
!12225 = !DILocation(line: 1470, column: 42, scope: !12221)
!12226 = !DILocation(line: 1470, column: 20, scope: !12221)
!12227 = !DILocation(line: 1471, column: 6, scope: !12221)
!12228 = !DILocation(line: 1474, column: 47, scope: !12221)
!12229 = !DILocation(line: 1474, column: 40, scope: !12221)
!12230 = !DILocation(line: 1474, column: 20, scope: !12221)
!12231 = !DILocation(line: 1475, column: 6, scope: !12221)
!12232 = !DILocation(line: 1478, column: 52, scope: !12221)
!12233 = !DILocation(line: 1478, column: 20, scope: !12221)
!12234 = !DILocation(line: 1479, column: 6, scope: !12221)
!12235 = !DILocation(line: 1482, column: 18, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12221, file: !1201, line: 1482, column: 10)
!12237 = !DILocation(line: 1482, column: 10, scope: !12236)
!12238 = !DILocation(line: 1482, column: 10, scope: !12221)
!12239 = !DILocation(line: 1488, column: 22, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12236, file: !1201, line: 1483, column: 6)
!12241 = !DILocation(line: 1490, column: 22, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12240, file: !1201, line: 1490, column: 12)
!12243 = !DILocation(line: 1490, column: 44, scope: !12242)
!12244 = !DILocation(line: 1490, column: 12, scope: !12242)
!12245 = !DILocation(line: 1490, column: 12, scope: !12240)
!12246 = !DILocation(line: 1493, column: 14, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12242, file: !1201, line: 1491, column: 8)
!12248 = !DILocation(line: 1493, column: 22, scope: !12247)
!12249 = !DILocation(line: 1493, column: 39, scope: !12247)
!12250 = !DILocation(line: 1493, column: 53, scope: !12247)
!12251 = !DILocation(line: 1492, column: 10, scope: !12247)
!12252 = !DILocation(line: 1494, column: 3, scope: !12247)
!12253 = !DILocation(line: 1496, column: 8, scope: !12247)
!12254 = !DILocation(line: 0, scope: !12221)
!12255 = !DILocation(line: 1505, column: 12, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12218, file: !1201, line: 1505, column: 11)
!12257 = !DILocation(line: 1505, column: 11, scope: !12256)
!12258 = !DILocation(line: 1505, column: 11, scope: !12218)
!12259 = !DILocation(line: 1512, column: 18, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12256, file: !1201, line: 1506, column: 7)
!12261 = !DILocation(line: 1512, column: 13, scope: !12260)
!12262 = !DILocation(line: 1512, column: 56, scope: !12260)
!12263 = !DILocation(line: 1513, column: 6, scope: !12260)
!12264 = !DILocation(line: 1513, column: 23, scope: !12260)
!12265 = !DILocation(line: 1513, column: 37, scope: !12260)
!12266 = !DILocation(line: 1511, column: 9, scope: !12260)
!12267 = !DILocation(line: 1514, column: 2, scope: !12260)
!12268 = !DILocation(line: 1517, column: 20, scope: !12218)
!12269 = !DILocation(line: 1517, column: 18, scope: !12218)
!12270 = !DILocation(line: 1518, column: 20, scope: !12218)
!12271 = !DILocation(line: 1518, column: 37, scope: !12218)
!12272 = !DILocation(line: 1520, column: 12, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12218, file: !1201, line: 1520, column: 11)
!12274 = !DILocation(line: 1520, column: 17, scope: !12273)
!12275 = !DILocation(line: 1527, column: 13, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12273, file: !1201, line: 1521, column: 7)
!12277 = !DILocation(line: 1527, column: 26, scope: !12276)
!12278 = !DILocation(line: 1527, column: 43, scope: !12276)
!12279 = !DILocation(line: 1527, column: 57, scope: !12276)
!12280 = !DILocation(line: 1526, column: 2, scope: !12276)
!12281 = !DILocation(line: 1528, column: 2, scope: !12276)
!12282 = !DILocation(line: 1531, column: 11, scope: !12218)
!12283 = !DILocation(line: 1533, column: 9, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !1201, line: 1532, column: 7)
!12285 = distinct !DILexicalBlock(scope: !12218, file: !1201, line: 1531, column: 11)
!12286 = !DILocation(line: 1535, column: 14, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12284, file: !1201, line: 1535, column: 13)
!12288 = !DILocation(line: 1535, column: 13, scope: !12284)
!12289 = !DILocation(line: 0, scope: !12218)
!12290 = !DILocation(line: 1539, column: 12, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12218, file: !1201, line: 1539, column: 11)
!12292 = !DILocation(line: 1539, column: 18, scope: !12291)
!12293 = !DILocation(line: 1542, column: 31, scope: !12216)
!12294 = !DILocation(line: 1550, column: 19, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12207, file: !1201, line: 1550, column: 9)
!12296 = !DILocation(line: 1552, column: 11, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !1201, line: 1552, column: 11)
!12298 = distinct !DILexicalBlock(scope: !12295, file: !1201, line: 1551, column: 5)
!12299 = !DILocation(line: 1552, column: 11, scope: !12298)
!12300 = !DILocation(line: 1554, column: 9, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12297, file: !1201, line: 1553, column: 7)
!12302 = !DILocation(line: 1556, column: 6, scope: !12301)
!12303 = !DILocation(line: 1558, column: 4, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !1201, line: 1557, column: 2)
!12305 = distinct !DILexicalBlock(scope: !12301, file: !1201, line: 1556, column: 6)
!12306 = !DILocation(line: 1560, column: 9, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12304, file: !1201, line: 1560, column: 8)
!12308 = !DILocation(line: 1560, column: 8, scope: !12304)
!12309 = !DILocation(line: 0, scope: !12301)
!12310 = !DILocation(line: 1564, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12301, file: !1201, line: 1564, column: 6)
!12312 = !DILocation(line: 1564, column: 13, scope: !12311)
!12313 = !DILocation(line: 0, scope: !12207)
!12314 = !DILocation(line: 1571, column: 9, scope: !12207)
!12315 = !DILocation(line: 1577, column: 16, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !1201, line: 1572, column: 5)
!12317 = distinct !DILexicalBlock(scope: !12207, file: !1201, line: 1571, column: 9)
!12318 = !DILocation(line: 1577, column: 14, scope: !12316)
!12319 = !DILocation(line: 1579, column: 20, scope: !12316)
!12320 = !DILocation(line: 1579, column: 46, scope: !12316)
!12321 = !DILocation(line: 1579, column: 7, scope: !12316)
!12322 = !DILocation(line: 1580, column: 13, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12316, file: !1201, line: 1580, column: 13)
!12324 = !DILocation(line: 1580, column: 30, scope: !12323)
!12325 = !DILocation(line: 1580, column: 57, scope: !12323)
!12326 = !DILocation(line: 1580, column: 60, scope: !12323)
!12327 = !DILocation(line: 1580, column: 69, scope: !12323)
!12328 = !DILocation(line: 1580, column: 67, scope: !12323)
!12329 = !DILocation(line: 1580, column: 13, scope: !12316)
!12330 = !DILocation(line: 1584, column: 4, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12332, file: !1201, line: 1583, column: 2)
!12332 = distinct !DILexicalBlock(scope: !12323, file: !1201, line: 1582, column: 11)
!12333 = !DILocation(line: 1585, column: 4, scope: !12331)
!12334 = !DILocation(line: 1589, column: 14, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !1201, line: 1589, column: 8)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !1201, line: 1588, column: 2)
!12337 = distinct !DILexicalBlock(scope: !12332, file: !1201, line: 1587, column: 11)
!12338 = !DILocation(line: 1589, column: 62, scope: !12335)
!12339 = !DILocation(line: 1589, column: 8, scope: !12336)
!12340 = !DILocation(line: 1592, column: 8, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12336, file: !1201, line: 1592, column: 8)
!12342 = !DILocation(line: 1592, column: 8, scope: !12336)
!12343 = !DILocation(line: 1595, column: 11, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12337, file: !1201, line: 1595, column: 11)
!12345 = !DILocation(line: 1595, column: 11, scope: !12337)
!12346 = !DILocation(line: 1597, column: 13, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12344, file: !1201, line: 1597, column: 11)
!12348 = !DILocation(line: 1597, column: 22, scope: !12347)
!12349 = !DILocation(line: 1597, column: 20, scope: !12347)
!12350 = !DILocation(line: 1597, column: 35, scope: !12347)
!12351 = !DILocation(line: 1597, column: 38, scope: !12347)
!12352 = !DILocation(line: 1597, column: 48, scope: !12347)
!12353 = !DILocation(line: 1597, column: 56, scope: !12347)
!12354 = !DILocation(line: 1598, column: 39, scope: !12347)
!12355 = !DILocation(line: 1598, column: 66, scope: !12347)
!12356 = !DILocation(line: 1599, column: 13, scope: !12347)
!12357 = !DILocation(line: 1599, column: 22, scope: !12347)
!12358 = !DILocation(line: 1599, column: 20, scope: !12347)
!12359 = !DILocation(line: 1599, column: 30, scope: !12347)
!12360 = !DILocation(line: 1599, column: 35, scope: !12347)
!12361 = !DILocation(line: 1599, column: 39, scope: !12347)
!12362 = !DILocation(line: 1597, column: 11, scope: !12344)
!12363 = distinct !{!12363, !12321, !12364}
!12364 = !DILocation(line: 1600, column: 4, scope: !12316)
!12365 = !DILocation(line: 1602, column: 8, scope: !12316)
!12366 = !DILocation(line: 1602, column: 15, scope: !12316)
!12367 = !DILocation(line: 1604, column: 19, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12316, file: !1201, line: 1604, column: 11)
!12369 = !DILocation(line: 1604, column: 12, scope: !12368)
!12370 = !DILocation(line: 1604, column: 11, scope: !12316)
!12371 = !DILocation(line: 1610, column: 15, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12368, file: !1201, line: 1605, column: 7)
!12373 = !DILocation(line: 1610, column: 2, scope: !12372)
!12374 = !DILocation(line: 1612, column: 21, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12376, file: !1201, line: 1612, column: 8)
!12376 = distinct !DILexicalBlock(scope: !12372, file: !1201, line: 1611, column: 2)
!12377 = !DILocation(line: 1612, column: 31, scope: !12375)
!12378 = !DILocation(line: 1612, column: 38, scope: !12375)
!12379 = !DILocation(line: 1612, column: 28, scope: !12375)
!12380 = !DILocation(line: 1612, column: 43, scope: !12375)
!12381 = !DILocation(line: 1613, column: 8, scope: !12375)
!12382 = !DILocation(line: 1613, column: 19, scope: !12375)
!12383 = !DILocation(line: 1613, column: 26, scope: !12375)
!12384 = !DILocation(line: 1613, column: 29, scope: !12375)
!12385 = !DILocation(line: 1613, column: 40, scope: !12375)
!12386 = !DILocation(line: 1613, column: 47, scope: !12375)
!12387 = !DILocation(line: 1613, column: 50, scope: !12375)
!12388 = !DILocation(line: 1613, column: 61, scope: !12375)
!12389 = !DILocation(line: 1612, column: 8, scope: !12376)
!12390 = !DILocation(line: 1615, column: 13, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12375, file: !1201, line: 1615, column: 13)
!12392 = !DILocation(line: 1615, column: 13, scope: !12375)
!12393 = distinct !{!12393, !12373, !12394}
!12394 = !DILocation(line: 1617, column: 2, scope: !12372)
!12395 = !DILocation(line: 1629, column: 4, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !1201, line: 1624, column: 2)
!12397 = distinct !DILexicalBlock(scope: !12372, file: !1201, line: 1623, column: 13)
!12398 = !DILocation(line: 1630, column: 4, scope: !12396)
!12399 = !DILocation(line: 1638, column: 10, scope: !12372)
!12400 = !DILocation(line: 1640, column: 14, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12372, file: !1201, line: 1640, column: 13)
!12402 = !DILocation(line: 1640, column: 21, scope: !12401)
!12403 = !DILocation(line: 0, scope: !12372)
!12404 = !DILocation(line: 1647, column: 30, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12401, file: !1201, line: 1641, column: 2)
!12406 = !DILocation(line: 1647, column: 44, scope: !12405)
!12407 = !DILocation(line: 1646, column: 4, scope: !12405)
!12408 = !DILocation(line: 1648, column: 11, scope: !12405)
!12409 = !DILocation(line: 1651, column: 14, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12372, file: !1201, line: 1651, column: 6)
!12411 = !DILocation(line: 1651, column: 46, scope: !12410)
!12412 = !DILocation(line: 1651, column: 6, scope: !12372)
!12413 = !DILocation(line: 1658, column: 15, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12410, file: !1201, line: 1652, column: 2)
!12415 = !DILocation(line: 1658, column: 32, scope: !12414)
!12416 = !DILocation(line: 1658, column: 46, scope: !12414)
!12417 = !DILocation(line: 1657, column: 4, scope: !12414)
!12418 = !DILocation(line: 1659, column: 4, scope: !12414)
!12419 = !DILocation(line: 1662, column: 13, scope: !12372)
!12420 = !DILocation(line: 1664, column: 11, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !1201, line: 1663, column: 9)
!12422 = distinct !DILexicalBlock(scope: !12372, file: !1201, line: 1662, column: 13)
!12423 = !DILocation(line: 1666, column: 16, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12421, file: !1201, line: 1666, column: 15)
!12425 = !DILocation(line: 1666, column: 15, scope: !12421)
!12426 = !DILocation(line: 1670, column: 6, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12372, file: !1201, line: 1670, column: 6)
!12428 = !DILocation(line: 1670, column: 11, scope: !12427)
!12429 = !DILocation(line: 1673, column: 24, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12368, file: !1201, line: 1673, column: 16)
!12431 = !DILocation(line: 1673, column: 17, scope: !12430)
!12432 = !DILocation(line: 1673, column: 16, scope: !12368)
!12433 = !DILocation(line: 1679, column: 15, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12430, file: !1201, line: 1674, column: 7)
!12435 = !DILocation(line: 1679, column: 2, scope: !12434)
!12436 = !DILocation(line: 1681, column: 30, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !1201, line: 1681, column: 8)
!12438 = distinct !DILexicalBlock(scope: !12434, file: !1201, line: 1680, column: 2)
!12439 = !DILocation(line: 1681, column: 37, scope: !12437)
!12440 = !DILocation(line: 1681, column: 22, scope: !12437)
!12441 = !DILocation(line: 1681, column: 8, scope: !12438)
!12442 = !DILocation(line: 1683, column: 13, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12437, file: !1201, line: 1683, column: 13)
!12444 = !DILocation(line: 1683, column: 13, scope: !12437)
!12445 = distinct !{!12445, !12435, !12446}
!12446 = !DILocation(line: 1685, column: 2, scope: !12434)
!12447 = !DILocation(line: 1697, column: 4, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12449, file: !1201, line: 1692, column: 2)
!12449 = distinct !DILexicalBlock(scope: !12434, file: !1201, line: 1691, column: 13)
!12450 = !DILocation(line: 1698, column: 4, scope: !12448)
!12451 = !DILocation(line: 1706, column: 3, scope: !12434)
!12452 = !DILocation(line: 1706, column: 10, scope: !12434)
!12453 = !DILocation(line: 1708, column: 14, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12434, file: !1201, line: 1708, column: 13)
!12455 = !DILocation(line: 1708, column: 21, scope: !12454)
!12456 = !DILocation(line: 0, scope: !12434)
!12457 = !DILocation(line: 1715, column: 30, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12454, file: !1201, line: 1709, column: 2)
!12459 = !DILocation(line: 1715, column: 44, scope: !12458)
!12460 = !DILocation(line: 1714, column: 4, scope: !12458)
!12461 = !DILocation(line: 1716, column: 11, scope: !12458)
!12462 = !DILocation(line: 1719, column: 14, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12434, file: !1201, line: 1719, column: 6)
!12464 = !DILocation(line: 1719, column: 46, scope: !12463)
!12465 = !DILocation(line: 1719, column: 6, scope: !12434)
!12466 = !DILocation(line: 1726, column: 15, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12463, file: !1201, line: 1720, column: 2)
!12468 = !DILocation(line: 1726, column: 32, scope: !12467)
!12469 = !DILocation(line: 1726, column: 46, scope: !12467)
!12470 = !DILocation(line: 1725, column: 4, scope: !12467)
!12471 = !DILocation(line: 1727, column: 4, scope: !12467)
!12472 = !DILocation(line: 1730, column: 13, scope: !12434)
!12473 = !DILocation(line: 1732, column: 11, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12475, file: !1201, line: 1731, column: 9)
!12475 = distinct !DILexicalBlock(scope: !12434, file: !1201, line: 1730, column: 13)
!12476 = !DILocation(line: 1734, column: 16, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12474, file: !1201, line: 1734, column: 15)
!12478 = !DILocation(line: 1734, column: 15, scope: !12474)
!12479 = !DILocation(line: 1738, column: 6, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12434, file: !1201, line: 1738, column: 6)
!12481 = !DILocation(line: 1738, column: 11, scope: !12480)
!12482 = !DILocation(line: 1741, column: 16, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12430, file: !1201, line: 1741, column: 16)
!12484 = !DILocation(line: 1741, column: 16, scope: !12430)
!12485 = !DILocation(line: 1747, column: 15, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12483, file: !1201, line: 1742, column: 7)
!12487 = !DILocation(line: 1747, column: 2, scope: !12486)
!12488 = !DILocation(line: 1749, column: 21, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12490, file: !1201, line: 1749, column: 8)
!12490 = distinct !DILexicalBlock(scope: !12486, file: !1201, line: 1748, column: 2)
!12491 = !DILocation(line: 1749, column: 30, scope: !12489)
!12492 = !DILocation(line: 1749, column: 28, scope: !12489)
!12493 = !DILocation(line: 1749, column: 37, scope: !12489)
!12494 = !DILocation(line: 1749, column: 40, scope: !12489)
!12495 = !DILocation(line: 1749, column: 51, scope: !12489)
!12496 = !DILocation(line: 1749, column: 8, scope: !12490)
!12497 = !DILocation(line: 1751, column: 13, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12489, file: !1201, line: 1751, column: 13)
!12499 = !DILocation(line: 1751, column: 13, scope: !12489)
!12500 = distinct !{!12500, !12487, !12501}
!12501 = !DILocation(line: 1753, column: 2, scope: !12486)
!12502 = !DILocation(line: 1765, column: 4, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12504, file: !1201, line: 1760, column: 2)
!12504 = distinct !DILexicalBlock(scope: !12486, file: !1201, line: 1759, column: 13)
!12505 = !DILocation(line: 1766, column: 4, scope: !12503)
!12506 = !DILocation(line: 1773, column: 10, scope: !12486)
!12507 = !DILocation(line: 1775, column: 14, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12486, file: !1201, line: 1775, column: 13)
!12509 = !DILocation(line: 1775, column: 21, scope: !12508)
!12510 = !DILocation(line: 0, scope: !12486)
!12511 = !DILocation(line: 1782, column: 30, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12508, file: !1201, line: 1776, column: 2)
!12513 = !DILocation(line: 1782, column: 44, scope: !12512)
!12514 = !DILocation(line: 1781, column: 4, scope: !12512)
!12515 = !DILocation(line: 1783, column: 11, scope: !12512)
!12516 = !DILocation(line: 1786, column: 14, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12486, file: !1201, line: 1786, column: 6)
!12518 = !DILocation(line: 1786, column: 46, scope: !12517)
!12519 = !DILocation(line: 1786, column: 6, scope: !12486)
!12520 = !DILocation(line: 1793, column: 15, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12517, file: !1201, line: 1787, column: 2)
!12522 = !DILocation(line: 1793, column: 32, scope: !12521)
!12523 = !DILocation(line: 1793, column: 46, scope: !12521)
!12524 = !DILocation(line: 1792, column: 4, scope: !12521)
!12525 = !DILocation(line: 1794, column: 4, scope: !12521)
!12526 = !DILocation(line: 1797, column: 13, scope: !12486)
!12527 = !DILocation(line: 1799, column: 11, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12529, file: !1201, line: 1798, column: 9)
!12529 = distinct !DILexicalBlock(scope: !12486, file: !1201, line: 1797, column: 13)
!12530 = !DILocation(line: 1801, column: 16, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12528, file: !1201, line: 1801, column: 15)
!12532 = !DILocation(line: 1801, column: 15, scope: !12528)
!12533 = !DILocation(line: 1807, column: 8, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !1201, line: 1806, column: 2)
!12535 = distinct !DILexicalBlock(scope: !12486, file: !1201, line: 1805, column: 13)
!12536 = !DILocation(line: 1810, column: 8, scope: !12534)
!12537 = !DILocation(line: 1815, column: 15, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12539, file: !1201, line: 1814, column: 10)
!12539 = distinct !DILexicalBlock(scope: !12540, file: !1201, line: 1811, column: 4)
!12540 = distinct !DILexicalBlock(scope: !12534, file: !1201, line: 1810, column: 8)
!12541 = !DILocation(line: 1815, column: 8, scope: !12538)
!12542 = !DILocation(line: 1829, column: 11, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !1201, line: 1829, column: 8)
!12544 = distinct !DILexicalBlock(scope: !12545, file: !1201, line: 1828, column: 2)
!12545 = distinct !DILexicalBlock(scope: !12546, file: !1201, line: 1822, column: 7)
!12546 = distinct !DILexicalBlock(scope: !12483, file: !1201, line: 1821, column: 16)
!12547 = !DILocation(line: 1829, column: 8, scope: !12544)
!12548 = !DILocation(line: 0, scope: !12316)
!12549 = !DILocation(line: 1833, column: 20, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !1201, line: 1833, column: 17)
!12551 = distinct !DILexicalBlock(scope: !12543, file: !1201, line: 1832, column: 4)
!12552 = !DILocation(line: 1833, column: 17, scope: !12551)
!12553 = !DILocation(line: 1834, column: 18, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12550, file: !1201, line: 1834, column: 12)
!12555 = !DILocation(line: 1834, column: 66, scope: !12554)
!12556 = !DILocation(line: 1834, column: 12, scope: !12550)
!12557 = !DILocation(line: 1837, column: 10, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12551, file: !1201, line: 1837, column: 10)
!12559 = !DILocation(line: 1837, column: 10, scope: !12551)
!12560 = !DILocation(line: 1841, column: 22, scope: !12545)
!12561 = !DILocation(line: 1840, column: 2, scope: !12544)
!12562 = !DILocation(line: 1853, column: 4, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !1201, line: 1848, column: 2)
!12564 = distinct !DILexicalBlock(scope: !12545, file: !1201, line: 1847, column: 13)
!12565 = !DILocation(line: 1854, column: 4, scope: !12563)
!12566 = !DILocation(line: 1861, column: 3, scope: !12545)
!12567 = !DILocation(line: 1861, column: 10, scope: !12545)
!12568 = !DILocation(line: 1863, column: 14, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12545, file: !1201, line: 1863, column: 13)
!12570 = !DILocation(line: 1863, column: 21, scope: !12569)
!12571 = !DILocation(line: 0, scope: !12545)
!12572 = !DILocation(line: 1870, column: 30, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12569, file: !1201, line: 1864, column: 2)
!12574 = !DILocation(line: 1870, column: 44, scope: !12573)
!12575 = !DILocation(line: 1869, column: 4, scope: !12573)
!12576 = !DILocation(line: 1871, column: 11, scope: !12573)
!12577 = !DILocation(line: 1874, column: 14, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12545, file: !1201, line: 1874, column: 6)
!12579 = !DILocation(line: 1874, column: 46, scope: !12578)
!12580 = !DILocation(line: 1874, column: 6, scope: !12545)
!12581 = !DILocation(line: 1881, column: 15, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12578, file: !1201, line: 1875, column: 2)
!12583 = !DILocation(line: 1881, column: 32, scope: !12582)
!12584 = !DILocation(line: 1881, column: 46, scope: !12582)
!12585 = !DILocation(line: 1880, column: 4, scope: !12582)
!12586 = !DILocation(line: 1882, column: 4, scope: !12582)
!12587 = !DILocation(line: 1885, column: 13, scope: !12545)
!12588 = !DILocation(line: 1887, column: 11, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !1201, line: 1886, column: 9)
!12590 = distinct !DILexicalBlock(scope: !12545, file: !1201, line: 1885, column: 13)
!12591 = !DILocation(line: 1889, column: 16, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12589, file: !1201, line: 1889, column: 15)
!12593 = !DILocation(line: 1889, column: 15, scope: !12589)
!12594 = !DILocation(line: 1895, column: 8, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !1201, line: 1894, column: 2)
!12596 = distinct !DILexicalBlock(scope: !12545, file: !1201, line: 1893, column: 13)
!12597 = !DILocation(line: 1898, column: 8, scope: !12595)
!12598 = !DILocation(line: 1903, column: 15, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !1201, line: 1902, column: 10)
!12600 = distinct !DILexicalBlock(scope: !12601, file: !1201, line: 1899, column: 4)
!12601 = distinct !DILexicalBlock(scope: !12595, file: !1201, line: 1898, column: 8)
!12602 = !DILocation(line: 1903, column: 8, scope: !12599)
!12603 = !DILocation(line: 1915, column: 14, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12605, file: !1201, line: 1915, column: 13)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !1201, line: 1910, column: 7)
!12606 = distinct !DILexicalBlock(scope: !12546, file: !1201, line: 1909, column: 16)
!12607 = !DILocation(line: 1915, column: 21, scope: !12604)
!12608 = !DILocation(line: 1915, column: 38, scope: !12604)
!12609 = !DILocation(line: 1915, column: 51, scope: !12604)
!12610 = !DILocation(line: 1915, column: 65, scope: !12604)
!12611 = !DILocation(line: 1915, column: 24, scope: !12604)
!12612 = !DILocation(line: 1915, column: 13, scope: !12605)
!12613 = !DILocation(line: 1922, column: 54, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12604, file: !1201, line: 1916, column: 2)
!12615 = !DILocation(line: 1922, column: 15, scope: !12614)
!12616 = !DILocation(line: 1922, column: 23, scope: !12614)
!12617 = !DILocation(line: 1921, column: 4, scope: !12614)
!12618 = !DILocation(line: 1923, column: 11, scope: !12614)
!12619 = !DILocation(line: 1930, column: 9, scope: !12605)
!12620 = !DILocation(line: 1931, column: 9, scope: !12605)
!12621 = distinct !{!12621, !12619, !12622}
!12622 = !DILocation(line: 1931, column: 32, scope: !12605)
!12623 = !DILocation(line: 1934, column: 26, scope: !12605)
!12624 = !DILocation(line: 1936, column: 13, scope: !12605)
!12625 = !DILocation(line: 1938, column: 11, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !1201, line: 1937, column: 9)
!12627 = distinct !DILexicalBlock(scope: !12605, file: !1201, line: 1936, column: 13)
!12628 = !DILocation(line: 1940, column: 16, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12626, file: !1201, line: 1940, column: 15)
!12630 = !DILocation(line: 1940, column: 34, scope: !12629)
!12631 = !DILocation(line: 1948, column: 9, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12605, file: !1201, line: 1948, column: 6)
!12633 = !DILocation(line: 1949, column: 11, scope: !12632)
!12634 = !DILocation(line: 1949, column: 4, scope: !12632)
!12635 = !DILocation(line: 1957, column: 14, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12637, file: !1201, line: 1957, column: 13)
!12637 = distinct !DILexicalBlock(scope: !12606, file: !1201, line: 1952, column: 7)
!12638 = !DILocation(line: 1957, column: 21, scope: !12636)
!12639 = !DILocation(line: 1964, column: 30, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12636, file: !1201, line: 1958, column: 2)
!12641 = !DILocation(line: 1964, column: 44, scope: !12640)
!12642 = !DILocation(line: 1963, column: 4, scope: !12640)
!12643 = !DILocation(line: 1965, column: 11, scope: !12640)
!12644 = !DILocation(line: 1968, column: 21, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12637, file: !1201, line: 1968, column: 13)
!12646 = !DILocation(line: 1968, column: 53, scope: !12645)
!12647 = !DILocation(line: 1968, column: 13, scope: !12637)
!12648 = !DILocation(line: 1975, column: 15, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12645, file: !1201, line: 1969, column: 2)
!12650 = !DILocation(line: 1975, column: 32, scope: !12649)
!12651 = !DILocation(line: 1975, column: 46, scope: !12649)
!12652 = !DILocation(line: 1974, column: 4, scope: !12649)
!12653 = !DILocation(line: 1976, column: 4, scope: !12649)
!12654 = !DILocation(line: 1979, column: 13, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12637, file: !1201, line: 1979, column: 13)
!12656 = !DILocation(line: 1979, column: 13, scope: !12637)
!12657 = !DILocation(line: 1981, column: 14, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !1201, line: 1981, column: 8)
!12659 = distinct !DILexicalBlock(scope: !12655, file: !1201, line: 1980, column: 9)
!12660 = !DILocation(line: 1981, column: 63, scope: !12658)
!12661 = !DILocation(line: 1981, column: 8, scope: !12659)
!12662 = !DILocation(line: 1984, column: 21, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12655, file: !1201, line: 1984, column: 18)
!12664 = !DILocation(line: 1984, column: 18, scope: !12655)
!12665 = !DILocation(line: 1986, column: 14, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !1201, line: 1986, column: 8)
!12667 = distinct !DILexicalBlock(scope: !12663, file: !1201, line: 1985, column: 2)
!12668 = !DILocation(line: 1986, column: 40, scope: !12666)
!12669 = !DILocation(line: 1986, column: 8, scope: !12667)
!12670 = !DILocation(line: 1989, column: 21, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12666, file: !1201, line: 1987, column: 4)
!12672 = !DILocation(line: 1988, column: 6, scope: !12671)
!12673 = !DILocation(line: 1990, column: 13, scope: !12671)
!12674 = !DILocation(line: 1991, column: 13, scope: !12671)
!12675 = !DILocation(line: 1997, column: 13, scope: !12637)
!12676 = !DILocation(line: 1998, column: 11, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12637, file: !1201, line: 1997, column: 13)
!12678 = !DILocation(line: 2000, column: 13, scope: !12637)
!12679 = !DILocation(line: 2003, column: 6, scope: !12637)
!12680 = !DILocation(line: 2014, column: 11, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !1201, line: 2014, column: 8)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !1201, line: 2007, column: 2)
!12683 = distinct !DILexicalBlock(scope: !12637, file: !1201, line: 2006, column: 13)
!12684 = !DILocation(line: 2015, column: 13, scope: !12681)
!12685 = !DILocation(line: 2015, column: 6, scope: !12681)
!12686 = !DILocation(line: 2017, column: 18, scope: !12683)
!12687 = !DILocation(line: 2019, column: 11, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12689, file: !1201, line: 2018, column: 9)
!12689 = distinct !DILexicalBlock(scope: !12683, file: !1201, line: 2017, column: 18)
!12690 = !DILocation(line: 2021, column: 16, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12688, file: !1201, line: 2021, column: 15)
!12692 = !DILocation(line: 2021, column: 34, scope: !12691)
!12693 = !DILocation(line: 2026, column: 17, scope: !12316)
!12694 = !DILocation(line: 2026, column: 15, scope: !12316)
!12695 = !DILocation(line: 2027, column: 5, scope: !12316)
!12696 = !DILocation(line: 2028, column: 17, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12317, file: !1201, line: 2028, column: 14)
!12698 = !DILocation(line: 2028, column: 14, scope: !12317)
!12699 = !DILocation(line: 2033, column: 17, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !1201, line: 2033, column: 11)
!12701 = distinct !DILexicalBlock(scope: !12697, file: !1201, line: 2029, column: 5)
!12702 = !DILocation(line: 2033, column: 65, scope: !12700)
!12703 = !DILocation(line: 2033, column: 11, scope: !12701)
!12704 = !DILocation(line: 2036, column: 11, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12701, file: !1201, line: 2036, column: 11)
!12706 = !DILocation(line: 2036, column: 11, scope: !12701)
!12707 = !DILocation(line: 2039, column: 34, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12697, file: !1201, line: 2039, column: 14)
!12709 = !DILocation(line: 2039, column: 61, scope: !12708)
!12710 = !DILocation(line: 2039, column: 14, scope: !12697)
!12711 = !DILocation(line: 2045, column: 11, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12713, file: !1201, line: 2045, column: 11)
!12713 = distinct !DILexicalBlock(scope: !12708, file: !1201, line: 2040, column: 5)
!12714 = !DILocation(line: 2045, column: 11, scope: !12713)
!12715 = !DILocation(line: 1565, column: 10, scope: !12311)
!12716 = !DILocation(line: 1439, column: 14, scope: !1200)
!12717 = !DILocation(line: 1445, column: 10, scope: !12197)
!12718 = distinct !{!12718, !12204, !12719}
!12719 = !DILocation(line: 2048, column: 3, scope: !1200)
!12720 = !DILocation(line: 2054, column: 8, scope: !1200)
!12721 = !DILocation(line: 2054, column: 3, scope: !1200)
!12722 = !DILocation(line: 2060, column: 7, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !1200, file: !1201, line: 2060, column: 7)
!12724 = !DILocation(line: 2060, column: 7, scope: !1200)
!12725 = !DILocation(line: 2064, column: 19, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12723, file: !1201, line: 2061, column: 3)
!12727 = !DILocation(line: 2064, column: 26, scope: !12726)
!12728 = !DILocation(line: 2064, column: 37, scope: !12726)
!12729 = !DILocation(line: 2064, column: 5, scope: !12726)
!12730 = distinct !{!12730, !12729, !12731}
!12731 = !DILocation(line: 2065, column: 24, scope: !12726)
!12732 = !DILocation(line: 2067, column: 14, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12726, file: !1201, line: 2067, column: 9)
!12734 = !DILocation(line: 2067, column: 9, scope: !12726)
!12735 = !DILocation(line: 2070, column: 17, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12733, file: !1201, line: 2068, column: 5)
!12737 = !DILocation(line: 2070, column: 31, scope: !12736)
!12738 = !DILocation(line: 2071, column: 10, scope: !12736)
!12739 = !DILocation(line: 2071, column: 4, scope: !12736)
!12740 = !DILocation(line: 2071, column: 33, scope: !12736)
!12741 = !DILocation(line: 2071, column: 47, scope: !12736)
!12742 = !DILocation(line: 2069, column: 7, scope: !12736)
!12743 = !DILocation(line: 2073, column: 7, scope: !12736)
!12744 = !DILocation(line: 2075, column: 7, scope: !12736)
!12745 = !DILocation(line: 2079, column: 7, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !1200, file: !1201, line: 2079, column: 7)
!12747 = !DILocation(line: 0, scope: !12746)
!12748 = !DILocation(line: 2088, column: 1, scope: !1200)
!12749 = !DILocation(line: 2090, column: 3, scope: !1200)
!12750 = !DILocation(line: 2092, column: 8, scope: !1200)
!12751 = !DILocation(line: 2092, column: 3, scope: !1200)
!12752 = !DILocation(line: 2094, column: 3, scope: !1200)
!12753 = !DILocation(line: 2095, column: 1, scope: !1200)
!12754 = distinct !DISubprogram(name: "mxml_string_getc", scope: !1201, file: !1201, line: 2371, type: !1258, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !12755)
!12755 = !{!12756, !12757, !12758, !12759, !12760, !12767}
!12756 = !DILocalVariable(name: "p", arg: 1, scope: !12754, file: !1201, line: 2371, type: !51)
!12757 = !DILocalVariable(name: "encoding", arg: 2, scope: !12754, file: !1201, line: 2372, type: !1260)
!12758 = !DILocalVariable(name: "ch", scope: !12754, file: !1201, line: 2374, type: !7)
!12759 = !DILocalVariable(name: "s", scope: !12754, file: !1201, line: 2375, type: !1277)
!12760 = !DILocalVariable(name: "lch", scope: !12761, file: !1201, line: 2543, type: !7)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !1201, line: 2538, column: 4)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !1201, line: 2537, column: 20)
!12763 = distinct !DILexicalBlock(scope: !12764, file: !1201, line: 2531, column: 15)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !1201, line: 2389, column: 5)
!12765 = distinct !DILexicalBlock(scope: !12766, file: !1201, line: 2381, column: 3)
!12766 = distinct !DILexicalBlock(scope: !12754, file: !1201, line: 2380, column: 7)
!12767 = !DILocalVariable(name: "lch", scope: !12768, file: !1201, line: 2591, type: !7)
!12768 = distinct !DILexicalBlock(scope: !12769, file: !1201, line: 2586, column: 4)
!12769 = distinct !DILexicalBlock(scope: !12770, file: !1201, line: 2585, column: 20)
!12770 = distinct !DILexicalBlock(scope: !12764, file: !1201, line: 2579, column: 15)
!12771 = !DILocation(line: 2380, column: 14, scope: !12766)
!12772 = !DILocation(line: 2418, column: 14, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12774, file: !1201, line: 2407, column: 4)
!12774 = distinct !DILexicalBlock(scope: !12775, file: !1201, line: 2406, column: 13)
!12775 = distinct !DILexicalBlock(scope: !12764, file: !1201, line: 2391, column: 8)
!12776 = !DILocation(line: 0, scope: !12754)
!12777 = !DILocation(line: 2380, column: 13, scope: !12766)
!12778 = !DILocation(line: 2380, column: 28, scope: !12766)
!12779 = !DILocation(line: 2380, column: 33, scope: !12766)
!12780 = !DILocation(line: 2380, column: 36, scope: !12766)
!12781 = !DILocation(line: 2380, column: 46, scope: !12766)
!12782 = !DILocation(line: 2380, column: 7, scope: !12754)
!12783 = !DILocation(line: 2386, column: 9, scope: !12765)
!12784 = !DILocation(line: 2388, column: 13, scope: !12765)
!12785 = !DILocation(line: 2388, column: 5, scope: !12765)
!12786 = !DILocation(line: 2391, column: 13, scope: !12775)
!12787 = !DILocation(line: 2391, column: 8, scope: !12764)
!12788 = !DILocation(line: 2397, column: 10, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12790, file: !1201, line: 2397, column: 10)
!12790 = distinct !DILexicalBlock(scope: !12775, file: !1201, line: 2392, column: 4)
!12791 = !DILocation(line: 2399, column: 8, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12789, file: !1201, line: 2398, column: 6)
!12793 = !DILocation(line: 2401, column: 8, scope: !12792)
!12794 = !DILocation(line: 2406, column: 13, scope: !12775)
!12795 = !DILocation(line: 2412, column: 18, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12773, file: !1201, line: 2412, column: 17)
!12797 = !DILocation(line: 2412, column: 33, scope: !12796)
!12798 = !DILocation(line: 2412, column: 17, scope: !12773)
!12799 = !DILocation(line: 0, scope: !12774)
!12800 = !DILocation(line: 2426, column: 18, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !1201, line: 2426, column: 17)
!12802 = distinct !DILexicalBlock(scope: !12803, file: !1201, line: 2421, column: 4)
!12803 = distinct !DILexicalBlock(scope: !12774, file: !1201, line: 2420, column: 13)
!12804 = !DILocation(line: 2426, column: 33, scope: !12801)
!12805 = !DILocation(line: 2426, column: 17, scope: !12802)
!12806 = !DILocation(line: 2434, column: 17, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12803, file: !1201, line: 2434, column: 13)
!12808 = !DILocation(line: 2434, column: 25, scope: !12807)
!12809 = !DILocation(line: 2434, column: 13, scope: !12803)
!12810 = !DILocation(line: 2440, column: 11, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !1201, line: 2440, column: 10)
!12812 = distinct !DILexicalBlock(scope: !12807, file: !1201, line: 2435, column: 4)
!12813 = !DILocation(line: 2440, column: 19, scope: !12811)
!12814 = !DILocation(line: 2440, column: 27, scope: !12811)
!12815 = !DILocation(line: 2440, column: 10, scope: !12812)
!12816 = !DILocation(line: 2443, column: 24, scope: !12812)
!12817 = !DILocation(line: 2443, column: 41, scope: !12812)
!12818 = !DILocation(line: 2443, column: 30, scope: !12812)
!12819 = !DILocation(line: 2445, column: 10, scope: !12812)
!12820 = !DILocation(line: 2447, column: 13, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12812, file: !1201, line: 2447, column: 10)
!12822 = !DILocation(line: 2447, column: 10, scope: !12812)
!12823 = !DILocation(line: 2449, column: 8, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12821, file: !1201, line: 2448, column: 6)
!12825 = !DILocation(line: 2450, column: 8, scope: !12824)
!12826 = !DILocation(line: 2459, column: 17, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12807, file: !1201, line: 2459, column: 13)
!12828 = !DILocation(line: 2459, column: 25, scope: !12827)
!12829 = !DILocation(line: 2459, column: 13, scope: !12807)
!12830 = !DILocation(line: 2465, column: 11, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12832, file: !1201, line: 2465, column: 10)
!12832 = distinct !DILexicalBlock(scope: !12827, file: !1201, line: 2460, column: 4)
!12833 = !DILocation(line: 2465, column: 19, scope: !12831)
!12834 = !DILocation(line: 2465, column: 27, scope: !12831)
!12835 = !DILocation(line: 2465, column: 35, scope: !12831)
!12836 = !DILocation(line: 2466, column: 11, scope: !12831)
!12837 = !DILocation(line: 2466, column: 19, scope: !12831)
!12838 = !DILocation(line: 2466, column: 27, scope: !12831)
!12839 = !DILocation(line: 2465, column: 10, scope: !12832)
!12840 = !DILocation(line: 2469, column: 26, scope: !12832)
!12841 = !DILocation(line: 2469, column: 43, scope: !12832)
!12842 = !DILocation(line: 2469, column: 32, scope: !12832)
!12843 = !DILocation(line: 2469, column: 52, scope: !12832)
!12844 = !DILocation(line: 2469, column: 69, scope: !12832)
!12845 = !DILocation(line: 2469, column: 58, scope: !12832)
!12846 = !DILocation(line: 2471, column: 11, scope: !12832)
!12847 = !DILocation(line: 2473, column: 13, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12832, file: !1201, line: 2473, column: 10)
!12849 = !DILocation(line: 2473, column: 10, scope: !12832)
!12850 = !DILocation(line: 2475, column: 8, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12848, file: !1201, line: 2474, column: 6)
!12852 = !DILocation(line: 2476, column: 8, scope: !12851)
!12853 = !DILocation(line: 2483, column: 13, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12832, file: !1201, line: 2483, column: 10)
!12855 = !DILocation(line: 2483, column: 10, scope: !12832)
!12856 = !DILocation(line: 2492, column: 17, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12827, file: !1201, line: 2492, column: 13)
!12858 = !DILocation(line: 2492, column: 25, scope: !12857)
!12859 = !DILocation(line: 2492, column: 13, scope: !12827)
!12860 = !DILocation(line: 2498, column: 11, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12862, file: !1201, line: 2498, column: 10)
!12862 = distinct !DILexicalBlock(scope: !12857, file: !1201, line: 2493, column: 4)
!12863 = !DILocation(line: 2498, column: 19, scope: !12861)
!12864 = !DILocation(line: 2498, column: 27, scope: !12861)
!12865 = !DILocation(line: 2498, column: 35, scope: !12861)
!12866 = !DILocation(line: 2499, column: 11, scope: !12861)
!12867 = !DILocation(line: 2499, column: 19, scope: !12861)
!12868 = !DILocation(line: 2499, column: 27, scope: !12861)
!12869 = !DILocation(line: 2499, column: 35, scope: !12861)
!12870 = !DILocation(line: 2500, column: 11, scope: !12861)
!12871 = !DILocation(line: 2500, column: 19, scope: !12861)
!12872 = !DILocation(line: 2500, column: 27, scope: !12861)
!12873 = !DILocation(line: 2498, column: 10, scope: !12862)
!12874 = !DILocation(line: 2503, column: 28, scope: !12862)
!12875 = !DILocation(line: 2503, column: 45, scope: !12862)
!12876 = !DILocation(line: 2503, column: 34, scope: !12862)
!12877 = !DILocation(line: 2504, column: 31, scope: !12862)
!12878 = !DILocation(line: 2504, column: 48, scope: !12862)
!12879 = !DILocation(line: 2504, column: 37, scope: !12862)
!12880 = !DILocation(line: 2506, column: 11, scope: !12862)
!12881 = !DILocation(line: 2508, column: 13, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12862, file: !1201, line: 2508, column: 10)
!12883 = !DILocation(line: 2508, column: 10, scope: !12862)
!12884 = !DILocation(line: 2510, column: 8, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12882, file: !1201, line: 2509, column: 6)
!12886 = !DILocation(line: 2511, column: 8, scope: !12885)
!12887 = !DILocation(line: 2528, column: 13, scope: !12764)
!12888 = !DILocation(line: 2528, column: 22, scope: !12764)
!12889 = !DILocation(line: 2528, column: 19, scope: !12764)
!12890 = !DILocation(line: 2529, column: 9, scope: !12764)
!12891 = !DILocation(line: 2531, column: 15, scope: !12763)
!12892 = !DILocation(line: 2533, column: 6, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12763, file: !1201, line: 2532, column: 4)
!12894 = !DILocation(line: 2535, column: 6, scope: !12893)
!12895 = !DILocation(line: 2537, column: 33, scope: !12762)
!12896 = !DILocation(line: 2546, column: 18, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12761, file: !1201, line: 2546, column: 17)
!12898 = !DILocation(line: 2546, column: 17, scope: !12761)
!12899 = !DILocation(line: 2549, column: 21, scope: !12761)
!12900 = !DILocation(line: 2549, column: 36, scope: !12761)
!12901 = !DILocation(line: 2549, column: 45, scope: !12761)
!12902 = !DILocation(line: 2549, column: 42, scope: !12761)
!12903 = !DILocation(line: 0, scope: !12761)
!12904 = !DILocation(line: 2550, column: 11, scope: !12761)
!12905 = !DILocation(line: 2552, column: 30, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12761, file: !1201, line: 2552, column: 17)
!12907 = !DILocation(line: 2555, column: 33, scope: !12761)
!12908 = !DILocation(line: 2555, column: 47, scope: !12761)
!12909 = !DILocation(line: 2555, column: 40, scope: !12761)
!12910 = !DILocation(line: 2555, column: 57, scope: !12761)
!12911 = !DILocation(line: 2569, column: 16, scope: !12764)
!12912 = !DILocation(line: 2569, column: 31, scope: !12764)
!12913 = !DILocation(line: 2569, column: 12, scope: !12764)
!12914 = !DILocation(line: 2571, column: 9, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12764, file: !1201, line: 2571, column: 8)
!12916 = !DILocation(line: 2571, column: 8, scope: !12764)
!12917 = !DILocation(line: 2573, column: 11, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12915, file: !1201, line: 2572, column: 4)
!12919 = !DILocation(line: 2574, column: 6, scope: !12918)
!12920 = !DILocation(line: 2577, column: 9, scope: !12764)
!12921 = !DILocation(line: 2579, column: 15, scope: !12770)
!12922 = !DILocation(line: 2581, column: 6, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12770, file: !1201, line: 2580, column: 4)
!12924 = !DILocation(line: 2583, column: 6, scope: !12923)
!12925 = !DILocation(line: 2585, column: 33, scope: !12769)
!12926 = !DILocation(line: 2594, column: 18, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12768, file: !1201, line: 2594, column: 17)
!12928 = !DILocation(line: 2594, column: 17, scope: !12768)
!12929 = !DILocation(line: 2597, column: 21, scope: !12768)
!12930 = !DILocation(line: 2597, column: 36, scope: !12768)
!12931 = !DILocation(line: 2597, column: 45, scope: !12768)
!12932 = !DILocation(line: 2597, column: 42, scope: !12768)
!12933 = !DILocation(line: 0, scope: !12768)
!12934 = !DILocation(line: 2598, column: 11, scope: !12768)
!12935 = !DILocation(line: 2600, column: 30, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12768, file: !1201, line: 2600, column: 17)
!12937 = !DILocation(line: 2603, column: 33, scope: !12768)
!12938 = !DILocation(line: 2603, column: 47, scope: !12768)
!12939 = !DILocation(line: 2603, column: 40, scope: !12768)
!12940 = !DILocation(line: 2603, column: 57, scope: !12768)
!12941 = !DILocation(line: 2615, column: 1, scope: !12754)
!12942 = distinct !DISubprogram(name: "mxml_isspace", scope: !1201, file: !1201, line: 80, type: !3653, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !12943)
!12943 = !{!12944}
!12944 = !DILocalVariable(name: "ch", arg: 1, scope: !12942, file: !1201, line: 80, type: !7)
!12945 = !DILocation(line: 0, scope: !12942)
!12946 = !DILocation(line: 82, column: 24, scope: !12942)
!12947 = !DILocation(line: 83, column: 17, scope: !12942)
!12948 = !DILocation(line: 82, column: 52, scope: !12942)
!12949 = !DILocation(line: 82, column: 6, scope: !12942)
!12950 = distinct !DISubprogram(name: "mxml_get_entity", scope: !1201, file: !1201, line: 1333, type: !12951, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !12953)
!12951 = !DISubroutineType(types: !12952)
!12952 = !{!7, !1204, !51, !1260, !1257}
!12953 = !{!12954, !12955, !12956, !12957, !12958, !12959, !12963}
!12954 = !DILocalVariable(name: "parent", arg: 1, scope: !12950, file: !1201, line: 1333, type: !1204)
!12955 = !DILocalVariable(name: "p", arg: 2, scope: !12950, file: !1201, line: 1334, type: !51)
!12956 = !DILocalVariable(name: "encoding", arg: 3, scope: !12950, file: !1201, line: 1335, type: !1260)
!12957 = !DILocalVariable(name: "getc_cb", arg: 4, scope: !12950, file: !1201, line: 1336, type: !1257)
!12958 = !DILocalVariable(name: "ch", scope: !12950, file: !1201, line: 1339, type: !7)
!12959 = !DILocalVariable(name: "entity", scope: !12950, file: !1201, line: 1340, type: !12960)
!12960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 512, elements: !12961)
!12961 = !{!12962}
!12962 = !DISubrange(count: 64)
!12963 = !DILocalVariable(name: "entptr", scope: !12950, file: !1201, line: 1341, type: !201)
!12964 = !DILocation(line: 0, scope: !12950)
!12965 = !DILocation(line: 1340, column: 3, scope: !12950)
!12966 = !DILocation(line: 1340, column: 8, scope: !12950)
!12967 = !DILocation(line: 1346, column: 16, scope: !12950)
!12968 = !DILocation(line: 1346, column: 41, scope: !12950)
!12969 = !DILocation(line: 1346, column: 3, scope: !12950)
!12970 = !DILocation(line: 1347, column: 23, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12950, file: !1201, line: 1347, column: 9)
!12972 = !DILocation(line: 1347, column: 35, scope: !12971)
!12973 = !DILocation(line: 1349, column: 21, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12971, file: !1201, line: 1349, column: 14)
!12975 = !DILocation(line: 1349, column: 14, scope: !12971)
!12976 = !DILocation(line: 1350, column: 19, scope: !12974)
!12977 = !DILocation(line: 1350, column: 14, scope: !12974)
!12978 = !DILocation(line: 1350, column: 17, scope: !12974)
!12979 = distinct !{!12979, !12969, !12980}
!12980 = !DILocation(line: 1356, column: 5, scope: !12950)
!12981 = !DILocation(line: 1354, column: 11, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12974, file: !1201, line: 1352, column: 5)
!12983 = !DILocation(line: 1354, column: 28, scope: !12982)
!12984 = !DILocation(line: 1354, column: 42, scope: !12982)
!12985 = !DILocation(line: 1353, column: 7, scope: !12982)
!12986 = !DILocation(line: 1355, column: 7, scope: !12982)
!12987 = !DILocation(line: 1358, column: 11, scope: !12950)
!12988 = !DILocation(line: 1360, column: 10, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12950, file: !1201, line: 1360, column: 7)
!12990 = !DILocation(line: 1360, column: 7, scope: !12950)
!12991 = !DILocation(line: 1363, column: 17, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12989, file: !1201, line: 1361, column: 3)
!12993 = !DILocation(line: 1363, column: 34, scope: !12992)
!12994 = !DILocation(line: 1363, column: 48, scope: !12992)
!12995 = !DILocation(line: 1362, column: 5, scope: !12992)
!12996 = !DILocation(line: 1364, column: 5, scope: !12992)
!12997 = !DILocation(line: 1367, column: 7, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12950, file: !1201, line: 1367, column: 7)
!12999 = !DILocation(line: 1367, column: 17, scope: !12998)
!13000 = !DILocation(line: 1367, column: 7, scope: !12950)
!13001 = !DILocation(line: 1369, column: 9, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !1201, line: 1369, column: 9)
!13003 = distinct !DILexicalBlock(scope: !12998, file: !1201, line: 1368, column: 3)
!13004 = !DILocation(line: 1369, column: 19, scope: !13002)
!13005 = !DILocation(line: 1369, column: 9, scope: !13003)
!13006 = !DILocation(line: 1370, column: 26, scope: !13002)
!13007 = !DILocation(line: 1370, column: 12, scope: !13002)
!13008 = !DILocation(line: 1370, column: 7, scope: !13002)
!13009 = !DILocation(line: 1372, column: 12, scope: !13002)
!13010 = !DILocation(line: 1375, column: 18, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !12998, file: !1201, line: 1375, column: 12)
!13012 = !DILocation(line: 1375, column: 46, scope: !13011)
!13013 = !DILocation(line: 1375, column: 12, scope: !12998)
!13014 = !DILocation(line: 1377, column: 17, scope: !13011)
!13015 = !DILocation(line: 1377, column: 34, scope: !13011)
!13016 = !DILocation(line: 1377, column: 48, scope: !13011)
!13017 = !DILocation(line: 1376, column: 5, scope: !13011)
!13018 = !DILocation(line: 1379, column: 7, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !12950, file: !1201, line: 1379, column: 7)
!13020 = !DILocation(line: 0, scope: !12998)
!13021 = !DILocation(line: 1382, column: 20, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13019, file: !1201, line: 1380, column: 3)
!13023 = !DILocation(line: 1382, column: 37, scope: !13022)
!13024 = !DILocation(line: 1382, column: 51, scope: !13022)
!13025 = !DILocation(line: 1381, column: 5, scope: !13022)
!13026 = !DILocation(line: 1383, column: 5, scope: !13022)
!13027 = !DILocation(line: 1387, column: 1, scope: !12950)
!13028 = distinct !DISubprogram(name: "mxml_add_char", scope: !1201, file: !1201, line: 602, type: !13029, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13031)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{!7, !7, !1278, !1278, !1260}
!13031 = !{!13032, !13033, !13034, !13035, !13036}
!13032 = !DILocalVariable(name: "ch", arg: 1, scope: !13028, file: !1201, line: 602, type: !7)
!13033 = !DILocalVariable(name: "bufptr", arg: 2, scope: !13028, file: !1201, line: 603, type: !1278)
!13034 = !DILocalVariable(name: "buffer", arg: 3, scope: !13028, file: !1201, line: 604, type: !1278)
!13035 = !DILocalVariable(name: "bufsize", arg: 4, scope: !13028, file: !1201, line: 605, type: !1260)
!13036 = !DILocalVariable(name: "newbuffer", scope: !13028, file: !1201, line: 607, type: !201)
!13037 = !DILocation(line: 0, scope: !13028)
!13038 = !DILocation(line: 610, column: 7, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13028, file: !1201, line: 610, column: 7)
!13040 = !DILocation(line: 610, column: 19, scope: !13039)
!13041 = !DILocation(line: 610, column: 29, scope: !13039)
!13042 = !DILocation(line: 610, column: 27, scope: !13039)
!13043 = !DILocation(line: 610, column: 38, scope: !13039)
!13044 = !DILocation(line: 610, column: 15, scope: !13039)
!13045 = !DILocation(line: 610, column: 7, scope: !13028)
!13046 = !DILocation(line: 616, column: 18, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13048, file: !1201, line: 616, column: 9)
!13048 = distinct !DILexicalBlock(scope: !13039, file: !1201, line: 611, column: 3)
!13049 = !DILocation(line: 616, column: 9, scope: !13048)
!13050 = !DILocation(line: 0, scope: !13047)
!13051 = !DILocation(line: 621, column: 30, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13048, file: !1201, line: 621, column: 9)
!13053 = !DILocation(line: 621, column: 22, scope: !13052)
!13054 = !DILocation(line: 621, column: 50, scope: !13052)
!13055 = !DILocation(line: 621, column: 9, scope: !13048)
!13056 = !DILocation(line: 623, column: 12, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13052, file: !1201, line: 622, column: 5)
!13058 = !DILocation(line: 623, column: 7, scope: !13057)
!13059 = !DILocation(line: 625, column: 65, scope: !13057)
!13060 = !DILocation(line: 625, column: 7, scope: !13057)
!13061 = !DILocation(line: 627, column: 7, scope: !13057)
!13062 = !DILocation(line: 630, column: 28, scope: !13048)
!13063 = !DILocation(line: 630, column: 38, scope: !13048)
!13064 = !DILocation(line: 630, column: 36, scope: !13048)
!13065 = !DILocation(line: 630, column: 25, scope: !13048)
!13066 = !DILocation(line: 630, column: 13, scope: !13048)
!13067 = !DILocation(line: 631, column: 13, scope: !13048)
!13068 = !DILocation(line: 632, column: 3, scope: !13048)
!13069 = !DILocation(line: 634, column: 10, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13028, file: !1201, line: 634, column: 7)
!13071 = !DILocation(line: 634, column: 7, scope: !13028)
!13072 = !DILocation(line: 640, column: 20, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13070, file: !1201, line: 635, column: 3)
!13074 = !DILocation(line: 640, column: 15, scope: !13073)
!13075 = !DILocation(line: 640, column: 18, scope: !13073)
!13076 = !DILocation(line: 641, column: 3, scope: !13073)
!13077 = !DILocation(line: 642, column: 15, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13070, file: !1201, line: 642, column: 12)
!13079 = !DILocation(line: 642, column: 12, scope: !13070)
!13080 = !DILocation(line: 648, column: 31, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13078, file: !1201, line: 643, column: 3)
!13082 = !DILocation(line: 648, column: 20, scope: !13081)
!13083 = !DILocation(line: 648, column: 15, scope: !13081)
!13084 = !DILocation(line: 648, column: 18, scope: !13081)
!13085 = !DILocation(line: 649, column: 20, scope: !13081)
!13086 = !DILocation(line: 649, column: 15, scope: !13081)
!13087 = !DILocation(line: 649, column: 18, scope: !13081)
!13088 = !DILocation(line: 650, column: 3, scope: !13081)
!13089 = !DILocation(line: 651, column: 15, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13078, file: !1201, line: 651, column: 12)
!13091 = !DILocation(line: 651, column: 12, scope: !13078)
!13092 = !DILocation(line: 657, column: 31, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13090, file: !1201, line: 652, column: 3)
!13094 = !DILocation(line: 657, column: 20, scope: !13093)
!13095 = !DILocation(line: 657, column: 15, scope: !13093)
!13096 = !DILocation(line: 657, column: 18, scope: !13093)
!13097 = !DILocation(line: 658, column: 32, scope: !13093)
!13098 = !DILocation(line: 658, column: 20, scope: !13093)
!13099 = !DILocation(line: 658, column: 15, scope: !13093)
!13100 = !DILocation(line: 658, column: 18, scope: !13093)
!13101 = !DILocation(line: 659, column: 20, scope: !13093)
!13102 = !DILocation(line: 659, column: 15, scope: !13093)
!13103 = !DILocation(line: 659, column: 18, scope: !13093)
!13104 = !DILocation(line: 660, column: 3, scope: !13093)
!13105 = !DILocation(line: 667, column: 31, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13090, file: !1201, line: 662, column: 3)
!13107 = !DILocation(line: 667, column: 20, scope: !13106)
!13108 = !DILocation(line: 667, column: 15, scope: !13106)
!13109 = !DILocation(line: 667, column: 18, scope: !13106)
!13110 = !DILocation(line: 668, column: 32, scope: !13106)
!13111 = !DILocation(line: 668, column: 20, scope: !13106)
!13112 = !DILocation(line: 668, column: 15, scope: !13106)
!13113 = !DILocation(line: 668, column: 18, scope: !13106)
!13114 = !DILocation(line: 669, column: 32, scope: !13106)
!13115 = !DILocation(line: 669, column: 20, scope: !13106)
!13116 = !DILocation(line: 669, column: 15, scope: !13106)
!13117 = !DILocation(line: 669, column: 18, scope: !13106)
!13118 = !DILocation(line: 670, column: 20, scope: !13106)
!13119 = !DILocation(line: 670, column: 15, scope: !13106)
!13120 = !DILocation(line: 670, column: 18, scope: !13106)
!13121 = !DILocation(line: 674, column: 1, scope: !13028)
!13122 = distinct !DISubprogram(name: "mxml_parse_element", scope: !1201, file: !1201, line: 2103, type: !13123, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13125)
!13123 = !DISubroutineType(types: !13124)
!13124 = !{!7, !1204, !51, !1260, !1256}
!13125 = !{!13126, !13127, !13128, !13129, !13130, !13131, !13132, !13133, !13134, !13135, !13136, !13137}
!13126 = !DILocalVariable(name: "node", arg: 1, scope: !13122, file: !1201, line: 2104, type: !1204)
!13127 = !DILocalVariable(name: "p", arg: 2, scope: !13122, file: !1201, line: 2105, type: !51)
!13128 = !DILocalVariable(name: "encoding", arg: 3, scope: !13122, file: !1201, line: 2106, type: !1260)
!13129 = !DILocalVariable(name: "getc_cb", arg: 4, scope: !13122, file: !1201, line: 2107, type: !1256)
!13130 = !DILocalVariable(name: "ch", scope: !13122, file: !1201, line: 2109, type: !7)
!13131 = !DILocalVariable(name: "quote", scope: !13122, file: !1201, line: 2110, type: !7)
!13132 = !DILocalVariable(name: "name", scope: !13122, file: !1201, line: 2111, type: !201)
!13133 = !DILocalVariable(name: "value", scope: !13122, file: !1201, line: 2112, type: !201)
!13134 = !DILocalVariable(name: "ptr", scope: !13122, file: !1201, line: 2113, type: !201)
!13135 = !DILocalVariable(name: "namesize", scope: !13122, file: !1201, line: 2114, type: !7)
!13136 = !DILocalVariable(name: "valsize", scope: !13122, file: !1201, line: 2115, type: !7)
!13137 = !DILabel(scope: !13122, name: "error", file: !1201, line: 2357)
!13138 = !DILocation(line: 0, scope: !13122)
!13139 = !DILocation(line: 2111, column: 3, scope: !13122)
!13140 = !DILocation(line: 2114, column: 3, scope: !13122)
!13141 = !DILocation(line: 2122, column: 15, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13122, file: !1201, line: 2122, column: 7)
!13143 = !DILocation(line: 2122, column: 13, scope: !13142)
!13144 = !DILocation(line: 2122, column: 27, scope: !13142)
!13145 = !DILocation(line: 2122, column: 7, scope: !13122)
!13146 = !DILocation(line: 2124, column: 5, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13142, file: !1201, line: 2123, column: 3)
!13148 = !DILocation(line: 2125, column: 5, scope: !13147)
!13149 = !DILocation(line: 2128, column: 12, scope: !13122)
!13150 = !DILocation(line: 2130, column: 16, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13122, file: !1201, line: 2130, column: 7)
!13152 = !DILocation(line: 2130, column: 14, scope: !13151)
!13153 = !DILocation(line: 2130, column: 28, scope: !13151)
!13154 = !DILocation(line: 2130, column: 7, scope: !13122)
!13155 = !DILocation(line: 2132, column: 5, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13151, file: !1201, line: 2131, column: 3)
!13157 = !DILocation(line: 2133, column: 5, scope: !13156)
!13158 = !DILocation(line: 2134, column: 5, scope: !13156)
!13159 = !DILocation(line: 2137, column: 11, scope: !13122)
!13160 = !DILocation(line: 2143, column: 16, scope: !13122)
!13161 = !DILocation(line: 2143, column: 41, scope: !13122)
!13162 = !DILocation(line: 2143, column: 3, scope: !13122)
!13163 = !DILocation(line: 2153, column: 9, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13165, file: !1201, line: 2153, column: 9)
!13165 = distinct !DILexicalBlock(scope: !13122, file: !1201, line: 2144, column: 3)
!13166 = !DILocation(line: 2153, column: 9, scope: !13165)
!13167 = distinct !{!13167, !13162, !13168}
!13168 = !DILocation(line: 2342, column: 3, scope: !13122)
!13169 = !DILocation(line: 2160, column: 19, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13165, file: !1201, line: 2160, column: 9)
!13171 = !DILocation(line: 2166, column: 15, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13170, file: !1201, line: 2161, column: 5)
!13173 = !DILocation(line: 2168, column: 17, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13172, file: !1201, line: 2168, column: 11)
!13175 = !DILocation(line: 2168, column: 11, scope: !13172)
!13176 = !DILocation(line: 2171, column: 23, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13174, file: !1201, line: 2169, column: 7)
!13178 = !DILocation(line: 2171, column: 37, scope: !13177)
!13179 = !DILocation(line: 2170, column: 9, scope: !13177)
!13180 = !DILocation(line: 2172, column: 9, scope: !13177)
!13181 = !DILocation(line: 2177, column: 14, scope: !13170)
!13182 = !DILocation(line: 2179, column: 49, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !1201, line: 2178, column: 5)
!13184 = distinct !DILexicalBlock(scope: !13170, file: !1201, line: 2177, column: 14)
!13185 = !DILocation(line: 2179, column: 63, scope: !13183)
!13186 = !DILocation(line: 2179, column: 7, scope: !13183)
!13187 = !DILocation(line: 2180, column: 7, scope: !13183)
!13188 = !DILocation(line: 2189, column: 15, scope: !13165)
!13189 = !DILocation(line: 2189, column: 13, scope: !13165)
!13190 = !DILocation(line: 2190, column: 20, scope: !13165)
!13191 = !DILocation(line: 2190, column: 13, scope: !13165)
!13192 = !DILocation(line: 2192, column: 20, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13165, file: !1201, line: 2192, column: 9)
!13194 = !DILocation(line: 2200, column: 7, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13193, file: !1201, line: 2193, column: 5)
!13196 = !DILocation(line: 2200, column: 20, scope: !13195)
!13197 = !DILocation(line: 2203, column: 14, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13199, file: !1201, line: 2203, column: 8)
!13199 = distinct !DILexicalBlock(scope: !13200, file: !1201, line: 2202, column: 13)
!13200 = distinct !DILexicalBlock(scope: !13195, file: !1201, line: 2201, column: 7)
!13201 = !DILocation(line: 2203, column: 59, scope: !13198)
!13202 = !DILocation(line: 2203, column: 8, scope: !13199)
!13203 = !DILocation(line: 0, scope: !13195)
!13204 = !DILocation(line: 2206, column: 6, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13200, file: !1201, line: 2206, column: 6)
!13206 = !DILocation(line: 2206, column: 6, scope: !13200)
!13207 = !DILocation(line: 2209, column: 9, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13200, file: !1201, line: 2209, column: 6)
!13209 = !DILocation(line: 2209, column: 6, scope: !13200)
!13210 = distinct !{!13210, !13194, !13211}
!13211 = !DILocation(line: 2211, column: 7, scope: !13195)
!13212 = !DILocation(line: 2219, column: 20, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13193, file: !1201, line: 2214, column: 5)
!13214 = !DILocation(line: 2219, column: 45, scope: !13213)
!13215 = !DILocation(line: 2219, column: 7, scope: !13213)
!13216 = !DILocation(line: 2220, column: 6, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13213, file: !1201, line: 2220, column: 6)
!13218 = !DILocation(line: 2220, column: 23, scope: !13217)
!13219 = !DILocation(line: 2226, column: 16, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13221, file: !1201, line: 2226, column: 10)
!13221 = distinct !DILexicalBlock(scope: !13222, file: !1201, line: 2225, column: 15)
!13222 = distinct !DILexicalBlock(scope: !13217, file: !1201, line: 2224, column: 2)
!13223 = !DILocation(line: 2226, column: 61, scope: !13220)
!13224 = !DILocation(line: 2226, column: 10, scope: !13221)
!13225 = !DILocation(line: 0, scope: !13213)
!13226 = !DILocation(line: 2229, column: 8, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13222, file: !1201, line: 2229, column: 8)
!13228 = !DILocation(line: 2229, column: 8, scope: !13222)
!13229 = distinct !{!13229, !13215, !13230}
!13230 = !DILocation(line: 2231, column: 2, scope: !13213)
!13231 = !DILocation(line: 0, scope: !13193)
!13232 = !DILocation(line: 2234, column: 6, scope: !13165)
!13233 = !DILocation(line: 2234, column: 10, scope: !13165)
!13234 = !DILocation(line: 2236, column: 34, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13165, file: !1201, line: 2236, column: 9)
!13236 = !DILocation(line: 2236, column: 9, scope: !13235)
!13237 = !DILocation(line: 2236, column: 9, scope: !13165)
!13238 = !DILocation(line: 2239, column: 22, scope: !13165)
!13239 = !DILocation(line: 2239, column: 25, scope: !13165)
!13240 = !DILocation(line: 2239, column: 5, scope: !13165)
!13241 = !DILocation(line: 2240, column: 12, scope: !13165)
!13242 = distinct !{!13242, !13240, !13243}
!13243 = !DILocation(line: 2240, column: 34, scope: !13165)
!13244 = !DILocation(line: 2242, column: 12, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13165, file: !1201, line: 2242, column: 9)
!13246 = !DILocation(line: 2242, column: 9, scope: !13165)
!13247 = !DILocation(line: 2248, column: 20, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13245, file: !1201, line: 2243, column: 5)
!13249 = !DILocation(line: 2248, column: 52, scope: !13248)
!13250 = !DILocation(line: 2248, column: 55, scope: !13248)
!13251 = !DILocation(line: 2248, column: 7, scope: !13248)
!13252 = distinct !{!13252, !13251, !13253}
!13253 = !DILocation(line: 2248, column: 72, scope: !13248)
!13254 = !DILocation(line: 2250, column: 11, scope: !13248)
!13255 = !DILocation(line: 2253, column: 25, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !1201, line: 2251, column: 7)
!13257 = distinct !DILexicalBlock(scope: !13248, file: !1201, line: 2250, column: 11)
!13258 = !DILocation(line: 2253, column: 39, scope: !13256)
!13259 = !DILocation(line: 2252, column: 9, scope: !13256)
!13260 = !DILocation(line: 2254, column: 9, scope: !13256)
!13261 = !DILocation(line: 2264, column: 10, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13263, file: !1201, line: 2258, column: 7)
!13263 = distinct !DILexicalBlock(scope: !13248, file: !1201, line: 2257, column: 11)
!13264 = !DILocation(line: 2264, column: 8, scope: !13262)
!13265 = !DILocation(line: 2266, column: 9, scope: !13262)
!13266 = !DILocation(line: 2266, column: 22, scope: !13262)
!13267 = !DILocation(line: 2266, column: 47, scope: !13262)
!13268 = !DILocation(line: 2271, column: 13, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !1201, line: 2271, column: 10)
!13270 = distinct !DILexicalBlock(scope: !13271, file: !1201, line: 2270, column: 4)
!13271 = distinct !DILexicalBlock(scope: !13262, file: !1201, line: 2267, column: 8)
!13272 = !DILocation(line: 2271, column: 10, scope: !13270)
!13273 = !DILocation(line: 2272, column: 18, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13269, file: !1201, line: 2272, column: 12)
!13275 = !DILocation(line: 2272, column: 63, scope: !13274)
!13276 = !DILocation(line: 2272, column: 12, scope: !13269)
!13277 = !DILocation(line: 0, scope: !13262)
!13278 = !DILocation(line: 2275, column: 10, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13270, file: !1201, line: 2275, column: 10)
!13280 = !DILocation(line: 2275, column: 10, scope: !13270)
!13281 = distinct !{!13281, !13265, !13282}
!13282 = !DILocation(line: 2277, column: 4, scope: !13262)
!13283 = !DILocation(line: 2287, column: 13, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13263, file: !1201, line: 2282, column: 7)
!13285 = !DILocation(line: 2287, column: 2, scope: !13284)
!13286 = !DILocation(line: 2287, column: 11, scope: !13284)
!13287 = !DILocation(line: 2288, column: 19, scope: !13284)
!13288 = !DILocation(line: 2288, column: 11, scope: !13284)
!13289 = !DILocation(line: 2290, column: 2, scope: !13284)
!13290 = !DILocation(line: 2290, column: 15, scope: !13284)
!13291 = !DILocation(line: 2290, column: 40, scope: !13284)
!13292 = !DILocation(line: 2291, column: 8, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13284, file: !1201, line: 2291, column: 8)
!13294 = !DILocation(line: 2291, column: 25, scope: !13293)
!13295 = !DILocation(line: 2296, column: 18, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13297, file: !1201, line: 2296, column: 12)
!13297 = distinct !DILexicalBlock(scope: !13298, file: !1201, line: 2295, column: 10)
!13298 = distinct !DILexicalBlock(scope: !13293, file: !1201, line: 2294, column: 4)
!13299 = !DILocation(line: 2296, column: 63, scope: !13296)
!13300 = !DILocation(line: 2296, column: 12, scope: !13297)
!13301 = !DILocation(line: 0, scope: !13284)
!13302 = !DILocation(line: 2299, column: 10, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13298, file: !1201, line: 2299, column: 10)
!13304 = !DILocation(line: 2299, column: 10, scope: !13298)
!13305 = distinct !{!13305, !13289, !13306}
!13306 = !DILocation(line: 2301, column: 4, scope: !13284)
!13307 = !DILocation(line: 0, scope: !13263)
!13308 = !DILocation(line: 2310, column: 38, scope: !13248)
!13309 = !DILocation(line: 2310, column: 7, scope: !13248)
!13310 = !DILocation(line: 2323, column: 19, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13165, file: !1201, line: 2323, column: 9)
!13312 = !DILocation(line: 2315, column: 23, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13245, file: !1201, line: 2313, column: 5)
!13314 = !DILocation(line: 2315, column: 37, scope: !13313)
!13315 = !DILocation(line: 2314, column: 7, scope: !13313)
!13316 = !DILocation(line: 2316, column: 7, scope: !13313)
!13317 = !DILocation(line: 2329, column: 15, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13311, file: !1201, line: 2324, column: 5)
!13319 = !DILocation(line: 2331, column: 17, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13318, file: !1201, line: 2331, column: 11)
!13321 = !DILocation(line: 2331, column: 11, scope: !13318)
!13322 = !DILocation(line: 2334, column: 23, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13320, file: !1201, line: 2332, column: 7)
!13324 = !DILocation(line: 2334, column: 37, scope: !13323)
!13325 = !DILocation(line: 2333, column: 9, scope: !13323)
!13326 = !DILocation(line: 2336, column: 7, scope: !13323)
!13327 = !DILocation(line: 2340, column: 17, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13311, file: !1201, line: 2340, column: 14)
!13329 = !DILocation(line: 2340, column: 14, scope: !13311)
!13330 = !DILocation(line: 2349, column: 8, scope: !13122)
!13331 = !DILocation(line: 2348, column: 8, scope: !13122)
!13332 = !DILocation(line: 2348, column: 3, scope: !13122)
!13333 = !DILocation(line: 2349, column: 3, scope: !13122)
!13334 = !DILocation(line: 2351, column: 3, scope: !13122)
!13335 = !DILocation(line: 2357, column: 1, scope: !13122)
!13336 = !DILocation(line: 2359, column: 8, scope: !13122)
!13337 = !DILocation(line: 2359, column: 3, scope: !13122)
!13338 = !DILocation(line: 2360, column: 8, scope: !13122)
!13339 = !DILocation(line: 2360, column: 3, scope: !13122)
!13340 = !DILocation(line: 2362, column: 3, scope: !13122)
!13341 = !DILocation(line: 2363, column: 1, scope: !13122)
!13342 = distinct !DISubprogram(name: "mxmlSaveAllocString", scope: !1201, file: !1201, line: 221, type: !13343, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13349)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{!201, !1204, !13345}
!13345 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_save_cb_t", file: !1173, line: 180, baseType: !13346)
!13346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13347, size: 32)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{!331, !1204, !7}
!13349 = !{!13350, !13351, !13352, !13353, !13357}
!13350 = !DILocalVariable(name: "node", arg: 1, scope: !13342, file: !1201, line: 222, type: !1204)
!13351 = !DILocalVariable(name: "cb", arg: 2, scope: !13342, file: !1201, line: 223, type: !13345)
!13352 = !DILocalVariable(name: "bytes", scope: !13342, file: !1201, line: 225, type: !7)
!13353 = !DILocalVariable(name: "buffer", scope: !13342, file: !1201, line: 226, type: !13354)
!13354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 65536, elements: !13355)
!13355 = !{!13356}
!13356 = !DISubrange(count: 8192)
!13357 = !DILocalVariable(name: "s", scope: !13342, file: !1201, line: 227, type: !201)
!13358 = !DILocation(line: 0, scope: !13342)
!13359 = !DILocation(line: 226, column: 3, scope: !13342)
!13360 = !DILocation(line: 226, column: 8, scope: !13342)
!13361 = !DILocation(line: 234, column: 11, scope: !13342)
!13362 = !DILocation(line: 236, column: 13, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13342, file: !1201, line: 236, column: 7)
!13364 = !DILocation(line: 236, column: 7, scope: !13342)
!13365 = !DILocation(line: 239, column: 13, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13342, file: !1201, line: 239, column: 7)
!13367 = !DILocation(line: 239, column: 7, scope: !13342)
!13368 = !DILocation(line: 246, column: 13, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13366, file: !1201, line: 240, column: 3)
!13370 = !DILocation(line: 246, column: 5, scope: !13369)
!13371 = !DILocation(line: 254, column: 25, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13342, file: !1201, line: 254, column: 7)
!13373 = !DILocation(line: 254, column: 12, scope: !13372)
!13374 = !DILocation(line: 254, column: 31, scope: !13372)
!13375 = !DILocation(line: 254, column: 7, scope: !13342)
!13376 = !DILocation(line: 257, column: 3, scope: !13342)
!13377 = !DILocation(line: 263, column: 3, scope: !13342)
!13378 = !DILocation(line: 264, column: 1, scope: !13342)
!13379 = distinct !DISubprogram(name: "mxmlSaveString", scope: !1201, file: !1201, line: 371, type: !13380, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13382)
!13380 = !DISubroutineType(types: !13381)
!13381 = !{!7, !1204, !201, !7, !13345}
!13382 = !{!13383, !13384, !13385, !13386, !13387, !13388, !13390}
!13383 = !DILocalVariable(name: "node", arg: 1, scope: !13379, file: !1201, line: 371, type: !1204)
!13384 = !DILocalVariable(name: "buffer", arg: 2, scope: !13379, file: !1201, line: 372, type: !201)
!13385 = !DILocalVariable(name: "bufsize", arg: 3, scope: !13379, file: !1201, line: 373, type: !7)
!13386 = !DILocalVariable(name: "cb", arg: 4, scope: !13379, file: !1201, line: 374, type: !13345)
!13387 = !DILocalVariable(name: "col", scope: !13379, file: !1201, line: 376, type: !7)
!13388 = !DILocalVariable(name: "ptr", scope: !13379, file: !1201, line: 377, type: !13389)
!13389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 64, elements: !333)
!13390 = !DILocalVariable(name: "global", scope: !13379, file: !1201, line: 378, type: !1298)
!13391 = !DILocation(line: 0, scope: !13379)
!13392 = !DILocation(line: 377, column: 3, scope: !13379)
!13393 = !DILocation(line: 377, column: 9, scope: !13379)
!13394 = !DILocation(line: 378, column: 28, scope: !13379)
!13395 = !DILocation(line: 386, column: 3, scope: !13379)
!13396 = !DILocation(line: 386, column: 10, scope: !13379)
!13397 = !DILocation(line: 387, column: 19, scope: !13379)
!13398 = !DILocation(line: 387, column: 3, scope: !13379)
!13399 = !DILocation(line: 387, column: 10, scope: !13379)
!13400 = !DILocation(line: 389, column: 14, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13379, file: !1201, line: 389, column: 7)
!13402 = !DILocation(line: 389, column: 75, scope: !13401)
!13403 = !DILocation(line: 389, column: 7, scope: !13379)
!13404 = !DILocation(line: 392, column: 11, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13379, file: !1201, line: 392, column: 7)
!13406 = !DILocation(line: 392, column: 7, scope: !13379)
!13407 = !DILocation(line: 393, column: 5, scope: !13405)
!13408 = !DILocation(line: 399, column: 7, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13379, file: !1201, line: 399, column: 7)
!13410 = !DILocation(line: 399, column: 17, scope: !13409)
!13411 = !DILocation(line: 399, column: 14, scope: !13409)
!13412 = !DILocation(line: 399, column: 7, scope: !13379)
!13413 = !DILocation(line: 400, column: 20, scope: !13409)
!13414 = !DILocation(line: 400, column: 5, scope: !13409)
!13415 = !DILocation(line: 400, column: 25, scope: !13409)
!13416 = !DILocation(line: 402, column: 15, scope: !13409)
!13417 = !DILocation(line: 408, column: 11, scope: !13379)
!13418 = !DILocation(line: 408, column: 18, scope: !13379)
!13419 = !DILocation(line: 408, column: 3, scope: !13379)
!13420 = !DILocation(line: 409, column: 1, scope: !13379)
!13421 = distinct !DISubprogram(name: "mxml_write_node", scope: !1201, file: !1201, line: 2724, type: !13422, scopeLine: 2730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13428)
!13422 = !DISubroutineType(types: !13423)
!13423 = !{!7, !1204, !51, !13345, !7, !13424, !1298}
!13424 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mxml_putc_cb_t", file: !1201, line: 49, baseType: !13425)
!13425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13426, size: 32)
!13426 = !DISubroutineType(types: !13427)
!13427 = !{!7, !7, !51}
!13428 = !{!13429, !13430, !13431, !13432, !13433, !13434, !13435, !13436, !13437, !13438, !13442, !13446, !13449, !13452}
!13429 = !DILocalVariable(name: "node", arg: 1, scope: !13421, file: !1201, line: 2724, type: !1204)
!13430 = !DILocalVariable(name: "p", arg: 2, scope: !13421, file: !1201, line: 2725, type: !51)
!13431 = !DILocalVariable(name: "cb", arg: 3, scope: !13421, file: !1201, line: 2726, type: !13345)
!13432 = !DILocalVariable(name: "col", arg: 4, scope: !13421, file: !1201, line: 2727, type: !7)
!13433 = !DILocalVariable(name: "putc_cb", arg: 5, scope: !13421, file: !1201, line: 2728, type: !13424)
!13434 = !DILocalVariable(name: "global", arg: 6, scope: !13421, file: !1201, line: 2729, type: !1298)
!13435 = !DILocalVariable(name: "i", scope: !13421, file: !1201, line: 2731, type: !7)
!13436 = !DILocalVariable(name: "width", scope: !13421, file: !1201, line: 2732, type: !7)
!13437 = !DILocalVariable(name: "attr", scope: !13421, file: !1201, line: 2733, type: !1227)
!13438 = !DILocalVariable(name: "s", scope: !13421, file: !1201, line: 2734, type: !13439)
!13439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 2040, elements: !13440)
!13440 = !{!13441}
!13441 = !DISubrange(count: 255)
!13442 = !DILocalVariable(name: "ptr", scope: !13443, file: !1201, line: 2757, type: !331)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !1201, line: 2751, column: 2)
!13444 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2748, column: 6)
!13445 = distinct !DILexicalBlock(scope: !13421, file: !1201, line: 2742, column: 3)
!13446 = !DILocalVariable(name: "child", scope: !13447, file: !1201, line: 2817, type: !1204)
!13447 = distinct !DILexicalBlock(scope: !13448, file: !1201, line: 2812, column: 2)
!13448 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2811, column: 6)
!13449 = !DILocalVariable(name: "data", scope: !13450, file: !1201, line: 2963, type: !201)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !1201, line: 2962, column: 2)
!13451 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2961, column: 6)
!13452 = !DILocalVariable(name: "newline", scope: !13450, file: !1201, line: 2964, type: !331)
!13453 = !DILocation(line: 0, scope: !13421)
!13454 = !DILocation(line: 2734, column: 3, scope: !13421)
!13455 = !DILocation(line: 2734, column: 9, scope: !13421)
!13456 = !DILocation(line: 2741, column: 17, scope: !13421)
!13457 = !DILocation(line: 2741, column: 3, scope: !13421)
!13458 = !DILocation(line: 2744, column: 8, scope: !13445)
!13459 = !DILocation(line: 2746, column: 6, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2746, column: 6)
!13461 = !DILocation(line: 2746, column: 25, scope: !13460)
!13462 = !DILocation(line: 2746, column: 6, scope: !13445)
!13463 = !DILocation(line: 2748, column: 12, scope: !13444)
!13464 = !DILocation(line: 2748, column: 18, scope: !13444)
!13465 = !DILocation(line: 2748, column: 26, scope: !13444)
!13466 = !DILocation(line: 2748, column: 6, scope: !13444)
!13467 = !DILocation(line: 2748, column: 34, scope: !13444)
!13468 = !DILocation(line: 2748, column: 41, scope: !13444)
!13469 = !DILocation(line: 2749, column: 7, scope: !13444)
!13470 = !DILocation(line: 2749, column: 51, scope: !13444)
!13471 = !DILocation(line: 2750, column: 35, scope: !13444)
!13472 = !DILocation(line: 2750, column: 7, scope: !13444)
!13473 = !DILocation(line: 2748, column: 6, scope: !13445)
!13474 = !DILocation(line: 2760, column: 35, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13443, file: !1201, line: 2760, column: 4)
!13476 = !DILocation(line: 0, scope: !13443)
!13477 = !DILocation(line: 2760, column: 41, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13475, file: !1201, line: 2760, column: 4)
!13479 = !DILocation(line: 2760, column: 4, scope: !13475)
!13480 = distinct !{!13480, !13479, !13481}
!13481 = !DILocation(line: 2762, column: 18, scope: !13475)
!13482 = !DILocation(line: 2761, column: 21, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13478, file: !1201, line: 2761, column: 10)
!13484 = !DILocation(line: 2761, column: 10, scope: !13483)
!13485 = !DILocation(line: 2761, column: 30, scope: !13483)
!13486 = !DILocation(line: 2760, column: 51, scope: !13478)
!13487 = !DILocation(line: 2761, column: 10, scope: !13478)
!13488 = !DILocation(line: 2764, column: 47, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13444, file: !1201, line: 2764, column: 11)
!13490 = !DILocation(line: 2764, column: 11, scope: !13489)
!13491 = !DILocation(line: 2764, column: 65, scope: !13489)
!13492 = !DILocation(line: 2764, column: 11, scope: !13444)
!13493 = !DILocation(line: 2767, column: 36, scope: !13445)
!13494 = !DILocation(line: 2767, column: 9, scope: !13445)
!13495 = !DILocation(line: 2767, column: 42, scope: !13445)
!13496 = !DILocation(line: 2767, column: 6, scope: !13445)
!13497 = !DILocation(line: 2769, column: 31, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2769, column: 2)
!13499 = !DILocation(line: 2770, column: 9, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13498, file: !1201, line: 2769, column: 2)
!13501 = !DILocation(line: 2769, column: 2, scope: !13498)
!13502 = !DILocation(line: 2769, column: 69, scope: !13498)
!13503 = !DILocation(line: 2773, column: 25, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13500, file: !1201, line: 2772, column: 2)
!13505 = !DILocation(line: 2773, column: 12, scope: !13504)
!13506 = !DILocation(line: 2775, column: 14, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13504, file: !1201, line: 2775, column: 8)
!13508 = !DILocation(line: 2775, column: 8, scope: !13507)
!13509 = !DILocation(line: 2775, column: 8, scope: !13504)
!13510 = !DILocation(line: 2776, column: 15, scope: !13507)
!13511 = !DILocation(line: 2776, column: 35, scope: !13507)
!13512 = !DILocation(line: 2776, column: 12, scope: !13507)
!13513 = !DILocation(line: 2776, column: 6, scope: !13507)
!13514 = !DILocation(line: 0, scope: !13504)
!13515 = !DILocation(line: 2778, column: 16, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13504, file: !1201, line: 2778, column: 8)
!13517 = !DILocation(line: 2778, column: 21, scope: !13516)
!13518 = !DILocation(line: 2778, column: 25, scope: !13516)
!13519 = !DILocation(line: 2780, column: 10, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !1201, line: 2780, column: 10)
!13521 = distinct !DILexicalBlock(scope: !13516, file: !1201, line: 2779, column: 4)
!13522 = !DILocation(line: 2780, column: 30, scope: !13520)
!13523 = !DILocation(line: 2780, column: 10, scope: !13521)
!13524 = !DILocation(line: 2787, column: 10, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13526, file: !1201, line: 2787, column: 10)
!13526 = distinct !DILexicalBlock(scope: !13516, file: !1201, line: 2786, column: 4)
!13527 = !DILocation(line: 2787, column: 29, scope: !13525)
!13528 = !DILocation(line: 2787, column: 10, scope: !13526)
!13529 = !DILocation(line: 2790, column: 10, scope: !13526)
!13530 = !DILocation(line: 0, scope: !13516)
!13531 = !DILocation(line: 2793, column: 30, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13504, file: !1201, line: 2793, column: 8)
!13533 = !DILocation(line: 2793, column: 8, scope: !13532)
!13534 = !DILocation(line: 2793, column: 48, scope: !13532)
!13535 = !DILocation(line: 2793, column: 8, scope: !13504)
!13536 = !DILocation(line: 2796, column: 14, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13504, file: !1201, line: 2796, column: 8)
!13538 = !DILocation(line: 2796, column: 8, scope: !13537)
!13539 = !DILocation(line: 2796, column: 8, scope: !13504)
!13540 = !DILocation(line: 2798, column: 10, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !1201, line: 2798, column: 10)
!13542 = distinct !DILexicalBlock(scope: !13537, file: !1201, line: 2797, column: 4)
!13543 = !DILocation(line: 2798, column: 29, scope: !13541)
!13544 = !DILocation(line: 2798, column: 10, scope: !13542)
!13545 = !DILocation(line: 2800, column: 10, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13542, file: !1201, line: 2800, column: 10)
!13547 = !DILocation(line: 2800, column: 30, scope: !13546)
!13548 = !DILocation(line: 2800, column: 10, scope: !13542)
!13549 = !DILocation(line: 2802, column: 34, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13542, file: !1201, line: 2802, column: 10)
!13551 = !DILocation(line: 2802, column: 10, scope: !13550)
!13552 = !DILocation(line: 2802, column: 53, scope: !13550)
!13553 = !DILocation(line: 2802, column: 10, scope: !13542)
!13554 = !DILocation(line: 2804, column: 10, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13542, file: !1201, line: 2804, column: 10)
!13556 = !DILocation(line: 2804, column: 30, scope: !13555)
!13557 = !DILocation(line: 2804, column: 10, scope: !13542)
!13558 = !DILocation(line: 2808, column: 8, scope: !13504)
!13559 = !DILocation(line: 2771, column: 9, scope: !13500)
!13560 = !DILocation(line: 2771, column: 18, scope: !13500)
!13561 = distinct !{!13561, !13501, !13562}
!13562 = !DILocation(line: 2809, column: 2, scope: !13498)
!13563 = !DILocation(line: 0, scope: !13445)
!13564 = !DILocation(line: 2811, column: 12, scope: !13448)
!13565 = !DILocation(line: 2811, column: 6, scope: !13448)
!13566 = !DILocation(line: 2811, column: 6, scope: !13445)
!13567 = !DILocation(line: 2820, column: 8, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13447, file: !1201, line: 2820, column: 8)
!13569 = !DILocation(line: 2820, column: 27, scope: !13568)
!13570 = !DILocation(line: 2820, column: 8, scope: !13447)
!13571 = !DILocation(line: 2823, column: 10, scope: !13568)
!13572 = !DILocation(line: 2825, column: 10, scope: !13447)
!13573 = !DILocation(line: 0, scope: !13447)
!13574 = !DILocation(line: 0, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13447, file: !1201, line: 2827, column: 11)
!13576 = !DILocation(line: 2827, column: 11, scope: !13575)
!13577 = !DILocation(line: 2827, column: 59, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13575, file: !1201, line: 2827, column: 11)
!13579 = distinct !{!13579, !13576, !13580}
!13580 = !DILocation(line: 2831, column: 4, scope: !13575)
!13581 = !DILocation(line: 2829, column: 17, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !1201, line: 2829, column: 10)
!13583 = distinct !DILexicalBlock(scope: !13578, file: !1201, line: 2828, column: 4)
!13584 = !DILocation(line: 2829, column: 70, scope: !13582)
!13585 = !DILocation(line: 2829, column: 10, scope: !13583)
!13586 = !DILocation(line: 2837, column: 28, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13447, file: !1201, line: 2837, column: 8)
!13588 = !DILocation(line: 2837, column: 8, scope: !13587)
!13589 = !DILocation(line: 2837, column: 43, scope: !13587)
!13590 = !DILocation(line: 2840, column: 12, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13587, file: !1201, line: 2839, column: 4)
!13592 = !DILocation(line: 2842, column: 10, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13591, file: !1201, line: 2842, column: 10)
!13594 = !DILocation(line: 2842, column: 29, scope: !13593)
!13595 = !DILocation(line: 2842, column: 10, scope: !13591)
!13596 = !DILocation(line: 2844, column: 10, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13591, file: !1201, line: 2844, column: 10)
!13598 = !DILocation(line: 2844, column: 29, scope: !13597)
!13599 = !DILocation(line: 2844, column: 10, scope: !13591)
!13600 = !DILocation(line: 2846, column: 48, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13591, file: !1201, line: 2846, column: 10)
!13602 = !DILocation(line: 2846, column: 10, scope: !13601)
!13603 = !DILocation(line: 2846, column: 66, scope: !13601)
!13604 = !DILocation(line: 2846, column: 10, scope: !13591)
!13605 = !DILocation(line: 2848, column: 10, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13591, file: !1201, line: 2848, column: 10)
!13607 = !DILocation(line: 2848, column: 29, scope: !13606)
!13608 = !DILocation(line: 2848, column: 10, scope: !13591)
!13609 = !DILocation(line: 2851, column: 40, scope: !13591)
!13610 = !DILocation(line: 2851, column: 13, scope: !13591)
!13611 = !DILocation(line: 2851, column: 46, scope: !13591)
!13612 = !DILocation(line: 2851, column: 10, scope: !13591)
!13613 = !DILocation(line: 2853, column: 12, scope: !13591)
!13614 = !DILocation(line: 2854, column: 4, scope: !13591)
!13615 = !DILocation(line: 2856, column: 31, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13448, file: !1201, line: 2856, column: 11)
!13617 = !DILocation(line: 2856, column: 11, scope: !13616)
!13618 = !DILocation(line: 2856, column: 46, scope: !13616)
!13619 = !DILocation(line: 2863, column: 8, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13621, file: !1201, line: 2863, column: 8)
!13621 = distinct !DILexicalBlock(scope: !13616, file: !1201, line: 2858, column: 2)
!13622 = !DILocation(line: 2863, column: 27, scope: !13620)
!13623 = !DILocation(line: 2863, column: 8, scope: !13621)
!13624 = !DILocation(line: 2866, column: 10, scope: !13620)
!13625 = !DILocation(line: 2868, column: 10, scope: !13621)
!13626 = !DILocation(line: 2869, column: 2, scope: !13621)
!13627 = !DILocation(line: 2872, column: 8, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13629, file: !1201, line: 2872, column: 8)
!13629 = distinct !DILexicalBlock(scope: !13616, file: !1201, line: 2871, column: 2)
!13630 = !DILocation(line: 2872, column: 27, scope: !13628)
!13631 = !DILocation(line: 2872, column: 8, scope: !13629)
!13632 = !DILocation(line: 2874, column: 8, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13629, file: !1201, line: 2874, column: 8)
!13634 = !DILocation(line: 2874, column: 27, scope: !13633)
!13635 = !DILocation(line: 2874, column: 8, scope: !13629)
!13636 = !DILocation(line: 2876, column: 8, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13629, file: !1201, line: 2876, column: 8)
!13638 = !DILocation(line: 2876, column: 27, scope: !13637)
!13639 = !DILocation(line: 2876, column: 8, scope: !13629)
!13640 = !DILocation(line: 2879, column: 8, scope: !13629)
!13641 = !DILocation(line: 2881, column: 10, scope: !13629)
!13642 = !DILocation(line: 2886, column: 12, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2886, column: 6)
!13644 = !DILocation(line: 2886, column: 6, scope: !13643)
!13645 = !DILocation(line: 2886, column: 6, scope: !13445)
!13646 = !DILocation(line: 2888, column: 16, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13648, file: !1201, line: 2888, column: 8)
!13648 = distinct !DILexicalBlock(scope: !13643, file: !1201, line: 2887, column: 2)
!13649 = !DILocation(line: 2888, column: 21, scope: !13647)
!13650 = !DILocation(line: 2888, column: 25, scope: !13647)
!13651 = !DILocation(line: 2890, column: 10, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13653, file: !1201, line: 2890, column: 10)
!13653 = distinct !DILexicalBlock(scope: !13647, file: !1201, line: 2889, column: 4)
!13654 = !DILocation(line: 2890, column: 30, scope: !13652)
!13655 = !DILocation(line: 2890, column: 10, scope: !13653)
!13656 = !DILocation(line: 2895, column: 13, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13647, file: !1201, line: 2895, column: 13)
!13658 = !DILocation(line: 2895, column: 32, scope: !13657)
!13659 = !DILocation(line: 2895, column: 13, scope: !13647)
!13660 = !DILocation(line: 2898, column: 10, scope: !13657)
!13661 = !DILocation(line: 2901, column: 25, scope: !13445)
!13662 = !DILocation(line: 2901, column: 31, scope: !13445)
!13663 = !DILocation(line: 2901, column: 2, scope: !13445)
!13664 = !DILocation(line: 2902, column: 6, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2902, column: 6)
!13666 = !DILocation(line: 2902, column: 39, scope: !13665)
!13667 = !DILocation(line: 2902, column: 6, scope: !13445)
!13668 = !DILocation(line: 2905, column: 9, scope: !13445)
!13669 = !DILocation(line: 2905, column: 6, scope: !13445)
!13670 = !DILocation(line: 2906, column: 2, scope: !13445)
!13671 = !DILocation(line: 2909, column: 30, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2909, column: 6)
!13673 = !DILocation(line: 2909, column: 36, scope: !13672)
!13674 = !DILocation(line: 2909, column: 6, scope: !13672)
!13675 = !DILocation(line: 2909, column: 56, scope: !13672)
!13676 = !DILocation(line: 2909, column: 6, scope: !13445)
!13677 = !DILocation(line: 2912, column: 28, scope: !13445)
!13678 = !DILocation(line: 2912, column: 9, scope: !13445)
!13679 = !DILocation(line: 2912, column: 6, scope: !13445)
!13680 = !DILocation(line: 2913, column: 2, scope: !13445)
!13681 = !DILocation(line: 2916, column: 12, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2916, column: 6)
!13683 = !DILocation(line: 2916, column: 6, scope: !13682)
!13684 = !DILocation(line: 2916, column: 6, scope: !13445)
!13685 = !DILocation(line: 2918, column: 16, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13687, file: !1201, line: 2918, column: 8)
!13687 = distinct !DILexicalBlock(scope: !13682, file: !1201, line: 2917, column: 2)
!13688 = !DILocation(line: 2918, column: 21, scope: !13686)
!13689 = !DILocation(line: 2918, column: 25, scope: !13686)
!13690 = !DILocation(line: 2920, column: 10, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13692, file: !1201, line: 2920, column: 10)
!13692 = distinct !DILexicalBlock(scope: !13686, file: !1201, line: 2919, column: 4)
!13693 = !DILocation(line: 2920, column: 30, scope: !13691)
!13694 = !DILocation(line: 2920, column: 10, scope: !13692)
!13695 = !DILocation(line: 2925, column: 13, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13686, file: !1201, line: 2925, column: 13)
!13697 = !DILocation(line: 2925, column: 32, scope: !13696)
!13698 = !DILocation(line: 2925, column: 13, scope: !13686)
!13699 = !DILocation(line: 2928, column: 10, scope: !13696)
!13700 = !DILocation(line: 2931, column: 31, scope: !13445)
!13701 = !DILocation(line: 2931, column: 2, scope: !13445)
!13702 = !DILocation(line: 2932, column: 6, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2932, column: 6)
!13704 = !DILocation(line: 2932, column: 39, scope: !13703)
!13705 = !DILocation(line: 2932, column: 6, scope: !13445)
!13706 = !DILocation(line: 2935, column: 9, scope: !13445)
!13707 = !DILocation(line: 2935, column: 6, scope: !13445)
!13708 = !DILocation(line: 2936, column: 2, scope: !13445)
!13709 = !DILocation(line: 2939, column: 12, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2939, column: 6)
!13711 = !DILocation(line: 2939, column: 18, scope: !13710)
!13712 = !DILocation(line: 2939, column: 23, scope: !13710)
!13713 = !DILocation(line: 2939, column: 6, scope: !13710)
!13714 = !DILocation(line: 2939, column: 34, scope: !13710)
!13715 = !DILocation(line: 2941, column: 16, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !1201, line: 2941, column: 8)
!13717 = distinct !DILexicalBlock(scope: !13710, file: !1201, line: 2940, column: 2)
!13718 = !DILocation(line: 2941, column: 21, scope: !13716)
!13719 = !DILocation(line: 2941, column: 25, scope: !13716)
!13720 = !DILocation(line: 2943, column: 10, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13722, file: !1201, line: 2943, column: 10)
!13722 = distinct !DILexicalBlock(scope: !13716, file: !1201, line: 2942, column: 4)
!13723 = !DILocation(line: 2943, column: 30, scope: !13721)
!13724 = !DILocation(line: 2943, column: 10, scope: !13722)
!13725 = !DILocation(line: 2948, column: 13, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13716, file: !1201, line: 2948, column: 13)
!13727 = !DILocation(line: 2948, column: 32, scope: !13726)
!13728 = !DILocation(line: 2948, column: 13, scope: !13716)
!13729 = !DILocation(line: 2951, column: 10, scope: !13726)
!13730 = !DILocation(line: 2954, column: 41, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13445, file: !1201, line: 2954, column: 6)
!13732 = !DILocation(line: 2954, column: 6, scope: !13731)
!13733 = !DILocation(line: 2954, column: 61, scope: !13731)
!13734 = !DILocation(line: 2954, column: 6, scope: !13445)
!13735 = !DILocation(line: 2957, column: 33, scope: !13445)
!13736 = !DILocation(line: 2957, column: 9, scope: !13445)
!13737 = !DILocation(line: 2957, column: 6, scope: !13445)
!13738 = !DILocation(line: 2958, column: 2, scope: !13445)
!13739 = !DILocation(line: 2961, column: 14, scope: !13451)
!13740 = !DILocation(line: 2961, column: 6, scope: !13451)
!13741 = !DILocation(line: 2961, column: 6, scope: !13445)
!13742 = !DILocation(line: 2967, column: 16, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13450, file: !1201, line: 2967, column: 8)
!13744 = !DILocation(line: 0, scope: !13450)
!13745 = !DILocation(line: 2967, column: 49, scope: !13743)
!13746 = !DILocation(line: 2967, column: 8, scope: !13450)
!13747 = !DILocation(line: 2970, column: 8, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13450, file: !1201, line: 2970, column: 8)
!13749 = !DILocation(line: 2970, column: 44, scope: !13748)
!13750 = !DILocation(line: 2970, column: 8, scope: !13450)
!13751 = !DILocation(line: 2973, column: 19, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13450, file: !1201, line: 2973, column: 8)
!13753 = !DILocation(line: 2973, column: 40, scope: !13752)
!13754 = !DILocation(line: 2973, column: 8, scope: !13450)
!13755 = !DILocation(line: 2974, column: 13, scope: !13752)
!13756 = !DILocation(line: 2974, column: 10, scope: !13752)
!13757 = !DILocation(line: 2974, column: 6, scope: !13752)
!13758 = !DILocation(line: 2976, column: 12, scope: !13752)
!13759 = !DILocation(line: 0, scope: !13752)
!13760 = !DILocation(line: 2978, column: 4, scope: !13450)
!13761 = !DILocation(line: 2987, column: 1, scope: !13421)
!13762 = distinct !DISubprogram(name: "mxml_string_putc", scope: !1201, file: !1201, line: 2623, type: !13426, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13763)
!13763 = !{!13764, !13765, !13766}
!13764 = !DILocalVariable(name: "ch", arg: 1, scope: !13762, file: !1201, line: 2623, type: !7)
!13765 = !DILocalVariable(name: "p", arg: 2, scope: !13762, file: !1201, line: 2624, type: !51)
!13766 = !DILocalVariable(name: "pp", scope: !13762, file: !1201, line: 2626, type: !1278)
!13767 = !DILocation(line: 0, scope: !13762)
!13768 = !DILocation(line: 2629, column: 8, scope: !13762)
!13769 = !DILocation(line: 2631, column: 7, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13762, file: !1201, line: 2631, column: 7)
!13771 = !DILocation(line: 2631, column: 15, scope: !13770)
!13772 = !DILocation(line: 2631, column: 13, scope: !13770)
!13773 = !DILocation(line: 2631, column: 7, scope: !13762)
!13774 = !DILocation(line: 2632, column: 16, scope: !13770)
!13775 = !DILocation(line: 2632, column: 14, scope: !13770)
!13776 = !DILocation(line: 2634, column: 9, scope: !13762)
!13777 = !DILocation(line: 2632, column: 5, scope: !13770)
!13778 = !DILocation(line: 2636, column: 3, scope: !13762)
!13779 = distinct !DISubprogram(name: "mxml_write_ws", scope: !1201, file: !1201, line: 3039, type: !13780, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13782)
!13780 = !DISubroutineType(types: !13781)
!13781 = !{!7, !1204, !51, !13345, !7, !7, !13424}
!13782 = !{!13783, !13784, !13785, !13786, !13787, !13788, !13789}
!13783 = !DILocalVariable(name: "node", arg: 1, scope: !13779, file: !1201, line: 3039, type: !1204)
!13784 = !DILocalVariable(name: "p", arg: 2, scope: !13779, file: !1201, line: 3040, type: !51)
!13785 = !DILocalVariable(name: "cb", arg: 3, scope: !13779, file: !1201, line: 3041, type: !13345)
!13786 = !DILocalVariable(name: "ws", arg: 4, scope: !13779, file: !1201, line: 3042, type: !7)
!13787 = !DILocalVariable(name: "col", arg: 5, scope: !13779, file: !1201, line: 3043, type: !7)
!13788 = !DILocalVariable(name: "putc_cb", arg: 6, scope: !13779, file: !1201, line: 3044, type: !13424)
!13789 = !DILocalVariable(name: "s", scope: !13779, file: !1201, line: 3046, type: !331)
!13790 = !DILocation(line: 0, scope: !13779)
!13791 = !DILocation(line: 3049, column: 7, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13779, file: !1201, line: 3049, column: 7)
!13793 = !DILocation(line: 3049, column: 10, scope: !13792)
!13794 = !DILocation(line: 3049, column: 18, scope: !13792)
!13795 = !DILocation(line: 3049, column: 35, scope: !13792)
!13796 = !DILocation(line: 3049, column: 7, scope: !13779)
!13797 = !DILocation(line: 3051, column: 12, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13792, file: !1201, line: 3050, column: 3)
!13799 = !DILocation(line: 3051, column: 5, scope: !13798)
!13800 = !DILocation(line: 3053, column: 22, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13802, file: !1201, line: 3053, column: 11)
!13802 = distinct !DILexicalBlock(scope: !13798, file: !1201, line: 3052, column: 5)
!13803 = !DILocation(line: 3053, column: 11, scope: !13801)
!13804 = !DILocation(line: 3053, column: 29, scope: !13801)
!13805 = !DILocation(line: 3053, column: 11, scope: !13802)
!13806 = !DILocation(line: 3055, column: 16, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13801, file: !1201, line: 3055, column: 16)
!13808 = !DILocation(line: 3055, column: 16, scope: !13801)
!13809 = !DILocation(line: 3059, column: 6, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13811, file: !1201, line: 3058, column: 7)
!13811 = distinct !DILexicalBlock(scope: !13807, file: !1201, line: 3057, column: 16)
!13812 = !DILocation(line: 3060, column: 19, scope: !13810)
!13813 = !DILocation(line: 3060, column: 12, scope: !13810)
!13814 = !DILocation(line: 3061, column: 7, scope: !13810)
!13815 = !DILocation(line: 3063, column: 6, scope: !13811)
!13816 = !DILocation(line: 0, scope: !13807)
!13817 = !DILocation(line: 3065, column: 9, scope: !13802)
!13818 = distinct !{!13818, !13799, !13819}
!13819 = !DILocation(line: 3066, column: 5, scope: !13798)
!13820 = !DILocation(line: 3070, column: 1, scope: !13779)
!13821 = distinct !DISubprogram(name: "mxml_write_name", scope: !1201, file: !1201, line: 2645, type: !13822, scopeLine: 2649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13824)
!13822 = !DISubroutineType(types: !13823)
!13823 = !{!7, !331, !51, !13425}
!13824 = !{!13825, !13826, !13827, !13828, !13829}
!13825 = !DILocalVariable(name: "s", arg: 1, scope: !13821, file: !1201, line: 2645, type: !331)
!13826 = !DILocalVariable(name: "p", arg: 2, scope: !13821, file: !1201, line: 2646, type: !51)
!13827 = !DILocalVariable(name: "putc_cb", arg: 3, scope: !13821, file: !1201, line: 2647, type: !13425)
!13828 = !DILocalVariable(name: "quote", scope: !13821, file: !1201, line: 2650, type: !202)
!13829 = !DILocalVariable(name: "name", scope: !13821, file: !1201, line: 2652, type: !331)
!13830 = !DILocation(line: 0, scope: !13821)
!13831 = !DILocation(line: 2655, column: 7, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13821, file: !1201, line: 2655, column: 7)
!13833 = !DILocation(line: 2655, column: 18, scope: !13832)
!13834 = !DILocation(line: 2661, column: 20, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13836, file: !1201, line: 2661, column: 9)
!13836 = distinct !DILexicalBlock(scope: !13832, file: !1201, line: 2656, column: 3)
!13837 = !DILocation(line: 2661, column: 9, scope: !13835)
!13838 = !DILocation(line: 2661, column: 27, scope: !13835)
!13839 = !DILocation(line: 2661, column: 9, scope: !13836)
!13840 = !DILocation(line: 2664, column: 13, scope: !13836)
!13841 = !DILocation(line: 0, scope: !13836)
!13842 = !DILocation(line: 2666, column: 12, scope: !13836)
!13843 = !DILocation(line: 2666, column: 15, scope: !13836)
!13844 = !DILocation(line: 2669, column: 19, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13846, file: !1201, line: 2669, column: 11)
!13846 = distinct !DILexicalBlock(scope: !13836, file: !1201, line: 2667, column: 5)
!13847 = !DILocation(line: 2669, column: 42, scope: !13845)
!13848 = !DILocation(line: 2669, column: 11, scope: !13846)
!13849 = !DILocation(line: 2671, column: 6, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !1201, line: 2671, column: 6)
!13851 = distinct !DILexicalBlock(scope: !13845, file: !1201, line: 2670, column: 7)
!13852 = !DILocation(line: 2671, column: 25, scope: !13850)
!13853 = !DILocation(line: 2671, column: 6, scope: !13851)
!13854 = !DILocation(line: 2674, column: 16, scope: !13851)
!13855 = !DILocation(line: 2674, column: 9, scope: !13851)
!13856 = distinct !{!13856, !13855, !13857}
!13857 = !DILocation(line: 2680, column: 2, scope: !13851)
!13858 = !DILocation(line: 2676, column: 19, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !1201, line: 2676, column: 8)
!13860 = distinct !DILexicalBlock(scope: !13851, file: !1201, line: 2675, column: 2)
!13861 = !DILocation(line: 2676, column: 8, scope: !13859)
!13862 = !DILocation(line: 2676, column: 29, scope: !13859)
!13863 = !DILocation(line: 2679, column: 16, scope: !13860)
!13864 = !DILocation(line: 2676, column: 8, scope: !13860)
!13865 = !DILocation(line: 2682, column: 6, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13851, file: !1201, line: 2682, column: 6)
!13867 = !DILocation(line: 2682, column: 25, scope: !13866)
!13868 = !DILocation(line: 2682, column: 6, scope: !13851)
!13869 = !DILocation(line: 2687, column: 22, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13845, file: !1201, line: 2687, column: 11)
!13871 = !DILocation(line: 2687, column: 11, scope: !13870)
!13872 = !DILocation(line: 2687, column: 29, scope: !13870)
!13873 = !DILocation(line: 2687, column: 11, scope: !13845)
!13874 = distinct !{!13874, !13875, !13876}
!13875 = !DILocation(line: 2666, column: 5, scope: !13836)
!13876 = !DILocation(line: 2691, column: 5, scope: !13836)
!13877 = !DILocation(line: 2697, column: 20, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13836, file: !1201, line: 2697, column: 9)
!13879 = !DILocation(line: 2697, column: 9, scope: !13878)
!13880 = !DILocation(line: 2697, column: 30, scope: !13878)
!13881 = !DILocation(line: 2697, column: 9, scope: !13836)
!13882 = !DILocation(line: 2708, column: 22, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !1201, line: 2708, column: 11)
!13884 = distinct !DILexicalBlock(scope: !13885, file: !1201, line: 2707, column: 5)
!13885 = distinct !DILexicalBlock(scope: !13832, file: !1201, line: 2701, column: 3)
!13886 = !DILocation(line: 2708, column: 11, scope: !13883)
!13887 = !DILocation(line: 2708, column: 29, scope: !13883)
!13888 = !DILocation(line: 2708, column: 11, scope: !13884)
!13889 = !DILocation(line: 2711, column: 9, scope: !13884)
!13890 = !DILocation(line: 2706, column: 12, scope: !13885)
!13891 = !DILocation(line: 2706, column: 5, scope: !13885)
!13892 = distinct !{!13892, !13891, !13893}
!13893 = !DILocation(line: 2712, column: 5, scope: !13885)
!13894 = !DILocation(line: 2715, column: 3, scope: !13821)
!13895 = !DILocation(line: 2716, column: 1, scope: !13821)
!13896 = distinct !DISubprogram(name: "mxml_write_string", scope: !1201, file: !1201, line: 2995, type: !13897, scopeLine: 2999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13899)
!13897 = !DISubroutineType(types: !13898)
!13898 = !{!7, !331, !51, !13424}
!13899 = !{!13900, !13901, !13902, !13903}
!13900 = !DILocalVariable(name: "s", arg: 1, scope: !13896, file: !1201, line: 2996, type: !331)
!13901 = !DILocalVariable(name: "p", arg: 2, scope: !13896, file: !1201, line: 2997, type: !51)
!13902 = !DILocalVariable(name: "putc_cb", arg: 3, scope: !13896, file: !1201, line: 2998, type: !13424)
!13903 = !DILocalVariable(name: "name", scope: !13896, file: !1201, line: 3001, type: !331)
!13904 = !DILocation(line: 0, scope: !13896)
!13905 = !DILocation(line: 3004, column: 10, scope: !13896)
!13906 = !DILocation(line: 3004, column: 3, scope: !13896)
!13907 = !DILocation(line: 3007, column: 35, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13909, file: !1201, line: 3007, column: 9)
!13909 = distinct !DILexicalBlock(scope: !13896, file: !1201, line: 3005, column: 3)
!13910 = !DILocation(line: 3007, column: 17, scope: !13908)
!13911 = !DILocation(line: 3007, column: 40, scope: !13908)
!13912 = !DILocation(line: 3007, column: 9, scope: !13909)
!13913 = !DILocation(line: 3009, column: 11, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !1201, line: 3009, column: 11)
!13915 = distinct !DILexicalBlock(scope: !13908, file: !1201, line: 3008, column: 5)
!13916 = !DILocation(line: 3009, column: 30, scope: !13914)
!13917 = !DILocation(line: 3009, column: 11, scope: !13915)
!13918 = !DILocation(line: 3012, column: 14, scope: !13915)
!13919 = !DILocation(line: 3012, column: 7, scope: !13915)
!13920 = distinct !{!13920, !13919, !13921}
!13921 = !DILocation(line: 3017, column: 7, scope: !13915)
!13922 = !DILocation(line: 3014, column: 17, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13924, file: !1201, line: 3014, column: 6)
!13924 = distinct !DILexicalBlock(scope: !13915, file: !1201, line: 3013, column: 7)
!13925 = !DILocation(line: 3014, column: 6, scope: !13923)
!13926 = !DILocation(line: 3014, column: 27, scope: !13923)
!13927 = !DILocation(line: 3016, column: 14, scope: !13924)
!13928 = !DILocation(line: 3014, column: 6, scope: !13924)
!13929 = !DILocation(line: 3019, column: 11, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13915, file: !1201, line: 3019, column: 11)
!13931 = !DILocation(line: 3019, column: 30, scope: !13930)
!13932 = !DILocation(line: 3019, column: 11, scope: !13915)
!13933 = !DILocation(line: 3024, column: 20, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13908, file: !1201, line: 3024, column: 9)
!13935 = !DILocation(line: 3024, column: 9, scope: !13934)
!13936 = !DILocation(line: 3024, column: 27, scope: !13934)
!13937 = !DILocation(line: 3024, column: 9, scope: !13908)
!13938 = !DILocation(line: 3027, column: 7, scope: !13909)
!13939 = distinct !{!13939, !13906, !13940}
!13940 = !DILocation(line: 3028, column: 3, scope: !13896)
!13941 = !DILocation(line: 3031, column: 1, scope: !13896)
!13942 = distinct !DISubprogram(name: "mxmlSAXLoadString", scope: !1201, file: !1201, line: 523, type: !13943, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13945)
!13943 = !DISubroutineType(types: !13944)
!13944 = !{!1204, !1204, !331, !1252, !1261, !51}
!13945 = !{!13946, !13947, !13948, !13949, !13950}
!13946 = !DILocalVariable(name: "top", arg: 1, scope: !13942, file: !1201, line: 524, type: !1204)
!13947 = !DILocalVariable(name: "s", arg: 2, scope: !13942, file: !1201, line: 525, type: !331)
!13948 = !DILocalVariable(name: "cb", arg: 3, scope: !13942, file: !1201, line: 526, type: !1252)
!13949 = !DILocalVariable(name: "sax_cb", arg: 4, scope: !13942, file: !1201, line: 527, type: !1261)
!13950 = !DILocalVariable(name: "sax_data", arg: 5, scope: !13942, file: !1201, line: 528, type: !51)
!13951 = !DILocation(line: 0, scope: !13942)
!13952 = !DILocation(line: 534, column: 31, scope: !13942)
!13953 = !DILocation(line: 534, column: 11, scope: !13942)
!13954 = !DILocation(line: 534, column: 3, scope: !13942)
!13955 = distinct !DISubprogram(name: "mxmlSetCustomHandlers", scope: !1201, file: !1201, line: 550, type: !13956, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{null, !1315, !1320}
!13958 = !{!13959, !13960, !13961}
!13959 = !DILocalVariable(name: "load", arg: 1, scope: !13955, file: !1201, line: 551, type: !1315)
!13960 = !DILocalVariable(name: "save", arg: 2, scope: !13955, file: !1201, line: 552, type: !1320)
!13961 = !DILocalVariable(name: "global", scope: !13955, file: !1201, line: 554, type: !1298)
!13962 = !DILocation(line: 0, scope: !13955)
!13963 = !DILocation(line: 554, column: 28, scope: !13955)
!13964 = !DILocation(line: 558, column: 11, scope: !13955)
!13965 = !DILocation(line: 558, column: 26, scope: !13955)
!13966 = !DILocation(line: 559, column: 11, scope: !13955)
!13967 = !DILocation(line: 559, column: 26, scope: !13955)
!13968 = !DILocation(line: 560, column: 1, scope: !13955)
!13969 = distinct !DISubprogram(name: "mxmlSetErrorCallback", scope: !1201, file: !1201, line: 568, type: !13970, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13973)
!13970 = !DISubroutineType(types: !13971)
!13971 = !{null, !13972}
!13972 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_error_cb_t", file: !1173, line: 99, baseType: !1304)
!13973 = !{!13974, !13975}
!13974 = !DILocalVariable(name: "cb", arg: 1, scope: !13969, file: !1201, line: 568, type: !13972)
!13975 = !DILocalVariable(name: "global", scope: !13969, file: !1201, line: 570, type: !1298)
!13976 = !DILocation(line: 0, scope: !13969)
!13977 = !DILocation(line: 570, column: 28, scope: !13969)
!13978 = !DILocation(line: 574, column: 11, scope: !13969)
!13979 = !DILocation(line: 574, column: 20, scope: !13969)
!13980 = !DILocation(line: 575, column: 1, scope: !13969)
!13981 = distinct !DISubprogram(name: "mxmlSetWrapMargin", scope: !1201, file: !1201, line: 587, type: !1951, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !13982)
!13982 = !{!13983, !13984}
!13983 = !DILocalVariable(name: "column", arg: 1, scope: !13981, file: !1201, line: 587, type: !7)
!13984 = !DILocalVariable(name: "global", scope: !13981, file: !1201, line: 589, type: !1298)
!13985 = !DILocation(line: 0, scope: !13981)
!13986 = !DILocation(line: 589, column: 28, scope: !13981)
!13987 = !DILocation(line: 593, column: 11, scope: !13981)
!13988 = !DILocation(line: 593, column: 16, scope: !13981)
!13989 = !DILocation(line: 594, column: 1, scope: !13981)
!13990 = distinct !DISubprogram(name: "mxmlGetCDATA", scope: !2227, file: !2227, line: 35, type: !13991, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14038)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!331, !13993}
!13993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13994, size: 32)
!13994 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !13995)
!13995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !13996)
!13996 = !{!13997, !13998, !14000, !14001, !14002, !14003, !14004, !14036, !14037}
!13997 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13995, file: !1173, line: 139, baseType: !1209, size: 32)
!13998 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13995, file: !1173, line: 140, baseType: !13999, size: 32, offset: 32)
!13999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13995, size: 32)
!14000 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13995, file: !1173, line: 141, baseType: !13999, size: 32, offset: 64)
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !13995, file: !1173, line: 142, baseType: !13999, size: 32, offset: 96)
!14002 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !13995, file: !1173, line: 143, baseType: !13999, size: 32, offset: 128)
!14003 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !13995, file: !1173, line: 144, baseType: !13999, size: 32, offset: 160)
!14004 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !13995, file: !1173, line: 145, baseType: !14005, size: 128, offset: 192)
!14005 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !14006)
!14006 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !14007)
!14007 = !{!14008, !14021, !14022, !14023, !14024, !14030}
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !14006, file: !1173, line: 129, baseType: !14009, size: 96)
!14009 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !14010)
!14010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !14011)
!14011 = !{!14012, !14013, !14014}
!14012 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14010, file: !1173, line: 110, baseType: !201, size: 32)
!14013 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !14010, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!14014 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !14010, file: !1173, line: 112, baseType: !14015, size: 32, offset: 64)
!14015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14016, size: 32)
!14016 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !14017)
!14017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !14018)
!14018 = !{!14019, !14020}
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14017, file: !1173, line: 104, baseType: !201, size: 32)
!14020 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !14017, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!14021 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !14006, file: !1173, line: 130, baseType: !7, size: 32)
!14022 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !14006, file: !1173, line: 131, baseType: !201, size: 32)
!14023 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !14006, file: !1173, line: 132, baseType: !1236, size: 64)
!14024 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !14006, file: !1173, line: 133, baseType: !14025, size: 64)
!14025 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !14026)
!14026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !14027)
!14027 = !{!14028, !14029}
!14028 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !14026, file: !1173, line: 117, baseType: !7, size: 32)
!14029 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !14026, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!14030 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !14006, file: !1173, line: 134, baseType: !14031, size: 64)
!14031 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !14032)
!14032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !14033)
!14033 = !{!14034, !14035}
!14034 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14032, file: !1173, line: 123, baseType: !51, size: 32)
!14035 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !14032, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !13995, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !13995, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!14038 = !{!14039}
!14039 = !DILocalVariable(name: "node", arg: 1, scope: !13990, file: !2227, line: 35, type: !13993)
!14040 = !DILocation(line: 0, scope: !13990)
!14041 = !DILocation(line: 41, column: 8, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !13990, file: !2227, line: 41, column: 7)
!14043 = !DILocation(line: 41, column: 13, scope: !14042)
!14044 = !DILocation(line: 41, column: 22, scope: !14042)
!14045 = !DILocation(line: 41, column: 27, scope: !14042)
!14046 = !DILocation(line: 41, column: 43, scope: !14042)
!14047 = !DILocation(line: 42, column: 21, scope: !14042)
!14048 = !DILocation(line: 42, column: 35, scope: !14042)
!14049 = !DILocation(line: 42, column: 7, scope: !14042)
!14050 = !DILocation(line: 41, column: 7, scope: !13990)
!14051 = !DILocation(line: 49, column: 31, scope: !13990)
!14052 = !DILocation(line: 49, column: 36, scope: !13990)
!14053 = !DILocation(line: 49, column: 3, scope: !13990)
!14054 = !DILocation(line: 50, column: 1, scope: !13990)
!14055 = distinct !DISubprogram(name: "mxmlGetCustom", scope: !2227, file: !2227, line: 63, type: !14056, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14058)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!375, !13993}
!14058 = !{!14059}
!14059 = !DILocalVariable(name: "node", arg: 1, scope: !14055, file: !2227, line: 63, type: !13993)
!14060 = !DILocation(line: 0, scope: !14055)
!14061 = !DILocation(line: 69, column: 8, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14055, file: !2227, line: 69, column: 7)
!14063 = !DILocation(line: 69, column: 7, scope: !14055)
!14064 = !DILocation(line: 76, column: 13, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14055, file: !2227, line: 76, column: 7)
!14066 = !DILocation(line: 76, column: 7, scope: !14055)
!14067 = !DILocation(line: 79, column: 18, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14065, file: !2227, line: 78, column: 12)
!14069 = !DILocation(line: 79, column: 12, scope: !14068)
!14070 = !DILocation(line: 79, column: 24, scope: !14068)
!14071 = !DILocation(line: 80, column: 18, scope: !14068)
!14072 = !DILocation(line: 80, column: 23, scope: !14068)
!14073 = !DILocation(line: 78, column: 12, scope: !14065)
!14074 = !DILocation(line: 0, scope: !14065)
!14075 = !DILocation(line: 84, column: 1, scope: !14055)
!14076 = distinct !DISubprogram(name: "mxmlGetElement", scope: !2227, file: !2227, line: 96, type: !13991, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14077)
!14077 = !{!14078}
!14078 = !DILocalVariable(name: "node", arg: 1, scope: !14076, file: !2227, line: 96, type: !13993)
!14079 = !DILocation(line: 0, scope: !14076)
!14080 = !DILocation(line: 102, column: 8, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14076, file: !2227, line: 102, column: 7)
!14082 = !DILocation(line: 102, column: 13, scope: !14081)
!14083 = !DILocation(line: 102, column: 22, scope: !14081)
!14084 = !DILocation(line: 102, column: 27, scope: !14081)
!14085 = !DILocation(line: 102, column: 7, scope: !14076)
!14086 = !DILocation(line: 109, column: 17, scope: !14076)
!14087 = !DILocation(line: 109, column: 31, scope: !14076)
!14088 = !DILocation(line: 109, column: 3, scope: !14076)
!14089 = !DILocation(line: 110, column: 1, scope: !14076)
!14090 = distinct !DISubprogram(name: "mxmlGetFirstChild", scope: !2227, file: !2227, line: 123, type: !14091, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14093)
!14091 = !DISubroutineType(types: !14092)
!14092 = !{!13993, !13993}
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "node", arg: 1, scope: !14090, file: !2227, line: 123, type: !13993)
!14095 = !DILocation(line: 0, scope: !14090)
!14096 = !DILocation(line: 129, column: 8, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14090, file: !2227, line: 129, column: 7)
!14098 = !DILocation(line: 129, column: 13, scope: !14097)
!14099 = !DILocation(line: 129, column: 22, scope: !14097)
!14100 = !DILocation(line: 129, column: 27, scope: !14097)
!14101 = !DILocation(line: 129, column: 7, scope: !14090)
!14102 = !DILocation(line: 136, column: 17, scope: !14090)
!14103 = !DILocation(line: 136, column: 3, scope: !14090)
!14104 = !DILocation(line: 137, column: 1, scope: !14090)
!14105 = distinct !DISubprogram(name: "mxmlGetInteger", scope: !2227, file: !2227, line: 150, type: !14106, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14108)
!14106 = !DISubroutineType(types: !14107)
!14107 = !{!7, !13993}
!14108 = !{!14109}
!14109 = !DILocalVariable(name: "node", arg: 1, scope: !14105, file: !2227, line: 150, type: !13993)
!14110 = !DILocation(line: 0, scope: !14105)
!14111 = !DILocation(line: 156, column: 8, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14105, file: !2227, line: 156, column: 7)
!14113 = !DILocation(line: 156, column: 7, scope: !14105)
!14114 = !DILocation(line: 163, column: 13, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14105, file: !2227, line: 163, column: 7)
!14116 = !DILocation(line: 163, column: 7, scope: !14105)
!14117 = !DILocation(line: 166, column: 18, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14115, file: !2227, line: 165, column: 12)
!14119 = !DILocation(line: 166, column: 12, scope: !14118)
!14120 = !DILocation(line: 166, column: 24, scope: !14118)
!14121 = !DILocation(line: 167, column: 18, scope: !14118)
!14122 = !DILocation(line: 167, column: 23, scope: !14118)
!14123 = !DILocation(line: 165, column: 12, scope: !14115)
!14124 = !DILocation(line: 0, scope: !14115)
!14125 = !DILocation(line: 171, column: 1, scope: !14105)
!14126 = distinct !DISubprogram(name: "mxmlGetLastChild", scope: !2227, file: !2227, line: 184, type: !14091, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14127)
!14127 = !{!14128}
!14128 = !DILocalVariable(name: "node", arg: 1, scope: !14126, file: !2227, line: 184, type: !13993)
!14129 = !DILocation(line: 0, scope: !14126)
!14130 = !DILocation(line: 190, column: 8, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14126, file: !2227, line: 190, column: 7)
!14132 = !DILocation(line: 190, column: 13, scope: !14131)
!14133 = !DILocation(line: 190, column: 22, scope: !14131)
!14134 = !DILocation(line: 190, column: 27, scope: !14131)
!14135 = !DILocation(line: 190, column: 7, scope: !14126)
!14136 = !DILocation(line: 197, column: 17, scope: !14126)
!14137 = !DILocation(line: 197, column: 3, scope: !14126)
!14138 = !DILocation(line: 198, column: 1, scope: !14126)
!14139 = distinct !DISubprogram(name: "mxmlGetNextSibling", scope: !2227, file: !2227, line: 210, type: !14091, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14140)
!14140 = !{!14141}
!14141 = !DILocalVariable(name: "node", arg: 1, scope: !14139, file: !2227, line: 210, type: !13993)
!14142 = !DILocation(line: 0, scope: !14139)
!14143 = !DILocation(line: 216, column: 8, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14139, file: !2227, line: 216, column: 7)
!14145 = !DILocation(line: 216, column: 7, scope: !14139)
!14146 = !DILocation(line: 223, column: 17, scope: !14139)
!14147 = !DILocation(line: 223, column: 3, scope: !14139)
!14148 = !DILocation(line: 224, column: 1, scope: !14139)
!14149 = distinct !DISubprogram(name: "mxmlGetOpaque", scope: !2227, file: !2227, line: 237, type: !13991, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14150)
!14150 = !{!14151}
!14151 = !DILocalVariable(name: "node", arg: 1, scope: !14149, file: !2227, line: 237, type: !13993)
!14152 = !DILocation(line: 0, scope: !14149)
!14153 = !DILocation(line: 243, column: 8, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14149, file: !2227, line: 243, column: 7)
!14155 = !DILocation(line: 243, column: 7, scope: !14149)
!14156 = !DILocation(line: 250, column: 13, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14149, file: !2227, line: 250, column: 7)
!14158 = !DILocation(line: 250, column: 7, scope: !14149)
!14159 = !DILocation(line: 253, column: 18, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14157, file: !2227, line: 252, column: 12)
!14161 = !DILocation(line: 253, column: 12, scope: !14160)
!14162 = !DILocation(line: 253, column: 24, scope: !14160)
!14163 = !DILocation(line: 254, column: 18, scope: !14160)
!14164 = !DILocation(line: 254, column: 23, scope: !14160)
!14165 = !DILocation(line: 252, column: 12, scope: !14157)
!14166 = !DILocation(line: 0, scope: !14157)
!14167 = !DILocation(line: 258, column: 1, scope: !14149)
!14168 = distinct !DISubprogram(name: "mxmlGetParent", scope: !2227, file: !2227, line: 270, type: !14091, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14169)
!14169 = !{!14170}
!14170 = !DILocalVariable(name: "node", arg: 1, scope: !14168, file: !2227, line: 270, type: !13993)
!14171 = !DILocation(line: 0, scope: !14168)
!14172 = !DILocation(line: 276, column: 8, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14168, file: !2227, line: 276, column: 7)
!14174 = !DILocation(line: 276, column: 7, scope: !14168)
!14175 = !DILocation(line: 283, column: 17, scope: !14168)
!14176 = !DILocation(line: 283, column: 3, scope: !14168)
!14177 = !DILocation(line: 284, column: 1, scope: !14168)
!14178 = distinct !DISubprogram(name: "mxmlGetPrevSibling", scope: !2227, file: !2227, line: 296, type: !14091, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14179)
!14179 = !{!14180}
!14180 = !DILocalVariable(name: "node", arg: 1, scope: !14178, file: !2227, line: 296, type: !13993)
!14181 = !DILocation(line: 0, scope: !14178)
!14182 = !DILocation(line: 302, column: 8, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14178, file: !2227, line: 302, column: 7)
!14184 = !DILocation(line: 302, column: 7, scope: !14178)
!14185 = !DILocation(line: 309, column: 17, scope: !14178)
!14186 = !DILocation(line: 309, column: 3, scope: !14178)
!14187 = !DILocation(line: 310, column: 1, scope: !14178)
!14188 = distinct !DISubprogram(name: "mxmlGetReal", scope: !2227, file: !2227, line: 322, type: !14189, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14191)
!14189 = !DISubroutineType(types: !14190)
!14190 = !{!1236, !13993}
!14191 = !{!14192}
!14192 = !DILocalVariable(name: "node", arg: 1, scope: !14188, file: !2227, line: 322, type: !13993)
!14193 = !DILocation(line: 0, scope: !14188)
!14194 = !DILocation(line: 328, column: 8, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14188, file: !2227, line: 328, column: 7)
!14196 = !DILocation(line: 328, column: 7, scope: !14188)
!14197 = !DILocation(line: 335, column: 13, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14188, file: !2227, line: 335, column: 7)
!14199 = !DILocation(line: 335, column: 7, scope: !14188)
!14200 = !DILocation(line: 338, column: 18, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14198, file: !2227, line: 337, column: 12)
!14202 = !DILocation(line: 338, column: 12, scope: !14201)
!14203 = !DILocation(line: 338, column: 24, scope: !14201)
!14204 = !DILocation(line: 339, column: 18, scope: !14201)
!14205 = !DILocation(line: 339, column: 23, scope: !14201)
!14206 = !DILocation(line: 337, column: 12, scope: !14198)
!14207 = !DILocation(line: 0, scope: !14198)
!14208 = !DILocation(line: 343, column: 1, scope: !14188)
!14209 = distinct !DISubprogram(name: "mxmlGetText", scope: !2227, file: !2227, line: 356, type: !14210, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14212)
!14210 = !DISubroutineType(types: !14211)
!14211 = !{!331, !13993, !1260}
!14212 = !{!14213, !14214}
!14213 = !DILocalVariable(name: "node", arg: 1, scope: !14209, file: !2227, line: 356, type: !13993)
!14214 = !DILocalVariable(name: "whitespace", arg: 2, scope: !14209, file: !2227, line: 357, type: !1260)
!14215 = !DILocation(line: 0, scope: !14209)
!14216 = !DILocation(line: 363, column: 8, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14209, file: !2227, line: 363, column: 7)
!14218 = !DILocation(line: 363, column: 7, scope: !14209)
!14219 = !DILocation(line: 365, column: 9, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14221, file: !2227, line: 365, column: 9)
!14221 = distinct !DILexicalBlock(scope: !14217, file: !2227, line: 364, column: 3)
!14222 = !DILocation(line: 365, column: 9, scope: !14221)
!14223 = !DILocation(line: 366, column: 19, scope: !14220)
!14224 = !DILocation(line: 366, column: 7, scope: !14220)
!14225 = !DILocation(line: 375, column: 13, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14209, file: !2227, line: 375, column: 7)
!14227 = !DILocation(line: 375, column: 7, scope: !14209)
!14228 = !DILocation(line: 377, column: 9, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14230, file: !2227, line: 377, column: 9)
!14230 = distinct !DILexicalBlock(scope: !14226, file: !2227, line: 376, column: 3)
!14231 = !DILocation(line: 377, column: 9, scope: !14230)
!14232 = !DILocation(line: 378, column: 27, scope: !14229)
!14233 = !DILocation(line: 378, column: 38, scope: !14229)
!14234 = !DILocation(line: 378, column: 19, scope: !14229)
!14235 = !DILocation(line: 378, column: 7, scope: !14229)
!14236 = !DILocation(line: 380, column: 19, scope: !14230)
!14237 = !DILocation(line: 380, column: 25, scope: !14230)
!14238 = !DILocation(line: 380, column: 30, scope: !14230)
!14239 = !DILocation(line: 380, column: 5, scope: !14230)
!14240 = !DILocation(line: 383, column: 18, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14226, file: !2227, line: 382, column: 12)
!14242 = !DILocation(line: 383, column: 12, scope: !14241)
!14243 = !DILocation(line: 383, column: 24, scope: !14241)
!14244 = !DILocation(line: 384, column: 18, scope: !14241)
!14245 = !DILocation(line: 384, column: 23, scope: !14241)
!14246 = !DILocation(line: 382, column: 12, scope: !14226)
!14247 = !DILocation(line: 386, column: 9, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14249, file: !2227, line: 386, column: 9)
!14249 = distinct !DILexicalBlock(scope: !14241, file: !2227, line: 385, column: 3)
!14250 = !DILocation(line: 386, column: 9, scope: !14249)
!14251 = !DILocation(line: 387, column: 34, scope: !14248)
!14252 = !DILocation(line: 387, column: 45, scope: !14248)
!14253 = !DILocation(line: 387, column: 19, scope: !14248)
!14254 = !DILocation(line: 389, column: 19, scope: !14249)
!14255 = !DILocation(line: 387, column: 7, scope: !14248)
!14256 = !DILocation(line: 389, column: 26, scope: !14249)
!14257 = !DILocation(line: 389, column: 32, scope: !14249)
!14258 = !DILocation(line: 389, column: 37, scope: !14249)
!14259 = !DILocation(line: 389, column: 5, scope: !14249)
!14260 = !DILocation(line: 393, column: 9, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14262, file: !2227, line: 393, column: 9)
!14262 = distinct !DILexicalBlock(scope: !14241, file: !2227, line: 392, column: 3)
!14263 = !DILocation(line: 393, column: 9, scope: !14262)
!14264 = !DILocation(line: 394, column: 19, scope: !14261)
!14265 = !DILocation(line: 394, column: 7, scope: !14261)
!14266 = !DILocation(line: 398, column: 1, scope: !14209)
!14267 = distinct !DISubprogram(name: "mxmlGetType", scope: !2227, file: !2227, line: 410, type: !14268, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14270)
!14268 = !DISubroutineType(types: !14269)
!14269 = !{!1209, !13993}
!14270 = !{!14271}
!14271 = !DILocalVariable(name: "node", arg: 1, scope: !14267, file: !2227, line: 410, type: !13993)
!14272 = !DILocation(line: 0, scope: !14267)
!14273 = !DILocation(line: 416, column: 8, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14267, file: !2227, line: 416, column: 7)
!14275 = !DILocation(line: 416, column: 7, scope: !14267)
!14276 = !DILocation(line: 423, column: 17, scope: !14267)
!14277 = !DILocation(line: 423, column: 3, scope: !14267)
!14278 = !DILocation(line: 424, column: 1, scope: !14267)
!14279 = distinct !DISubprogram(name: "mxmlGetUserData", scope: !2227, file: !2227, line: 434, type: !14280, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2226, retainedNodes: !14282)
!14280 = !DISubroutineType(types: !14281)
!14281 = !{!51, !13993}
!14282 = !{!14283}
!14283 = !DILocalVariable(name: "node", arg: 1, scope: !14279, file: !2227, line: 434, type: !13993)
!14284 = !DILocation(line: 0, scope: !14279)
!14285 = !DILocation(line: 440, column: 8, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14279, file: !2227, line: 440, column: 7)
!14287 = !DILocation(line: 440, column: 7, scope: !14279)
!14288 = !DILocation(line: 447, column: 17, scope: !14279)
!14289 = !DILocation(line: 447, column: 3, scope: !14279)
!14290 = !DILocation(line: 448, column: 1, scope: !14279)
!14291 = distinct !DISubprogram(name: "mxmlIndexDelete", scope: !2229, file: !2229, line: 43, type: !14292, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14349)
!14292 = !DISubroutineType(types: !14293)
!14293 = !{null, !14294}
!14294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14295, size: 32)
!14295 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_index_t", file: !1173, line: 162, baseType: !14296)
!14296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_index_s", file: !1173, line: 153, size: 160, elements: !14297)
!14297 = !{!14298, !14299, !14300, !14301, !14302}
!14298 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !14296, file: !1173, line: 155, baseType: !201, size: 32)
!14299 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !14296, file: !1173, line: 156, baseType: !7, size: 32, offset: 32)
!14300 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_nodes", scope: !14296, file: !1173, line: 157, baseType: !7, size: 32, offset: 64)
!14301 = !DIDerivedType(tag: DW_TAG_member, name: "cur_node", scope: !14296, file: !1173, line: 158, baseType: !7, size: 32, offset: 96)
!14302 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !14296, file: !1173, line: 159, baseType: !14303, size: 32, offset: 128)
!14303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14304, size: 32)
!14304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14305, size: 32)
!14305 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !14306)
!14306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !14307)
!14307 = !{!14308, !14309, !14311, !14312, !14313, !14314, !14315, !14347, !14348}
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14306, file: !1173, line: 139, baseType: !1209, size: 32)
!14309 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14306, file: !1173, line: 140, baseType: !14310, size: 32, offset: 32)
!14310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14306, size: 32)
!14311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14306, file: !1173, line: 141, baseType: !14310, size: 32, offset: 64)
!14312 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !14306, file: !1173, line: 142, baseType: !14310, size: 32, offset: 96)
!14313 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !14306, file: !1173, line: 143, baseType: !14310, size: 32, offset: 128)
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !14306, file: !1173, line: 144, baseType: !14310, size: 32, offset: 160)
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !14306, file: !1173, line: 145, baseType: !14316, size: 128, offset: 192)
!14316 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !14317)
!14317 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !14318)
!14318 = !{!14319, !14332, !14333, !14334, !14335, !14341}
!14319 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !14317, file: !1173, line: 129, baseType: !14320, size: 96)
!14320 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !14321)
!14321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !14322)
!14322 = !{!14323, !14324, !14325}
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14321, file: !1173, line: 110, baseType: !201, size: 32)
!14324 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !14321, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!14325 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !14321, file: !1173, line: 112, baseType: !14326, size: 32, offset: 64)
!14326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14327, size: 32)
!14327 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !14328)
!14328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !14329)
!14329 = !{!14330, !14331}
!14330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14328, file: !1173, line: 104, baseType: !201, size: 32)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !14328, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!14332 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !14317, file: !1173, line: 130, baseType: !7, size: 32)
!14333 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !14317, file: !1173, line: 131, baseType: !201, size: 32)
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !14317, file: !1173, line: 132, baseType: !1236, size: 64)
!14335 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !14317, file: !1173, line: 133, baseType: !14336, size: 64)
!14336 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !14337)
!14337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !14338)
!14338 = !{!14339, !14340}
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !14337, file: !1173, line: 117, baseType: !7, size: 32)
!14340 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !14337, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!14341 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !14317, file: !1173, line: 134, baseType: !14342, size: 64)
!14342 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !14343)
!14343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !14344)
!14344 = !{!14345, !14346}
!14345 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14343, file: !1173, line: 123, baseType: !51, size: 32)
!14346 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !14343, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!14347 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !14306, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!14348 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !14306, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!14349 = !{!14350}
!14350 = !DILocalVariable(name: "ind", arg: 1, scope: !14291, file: !2229, line: 43, type: !14294)
!14351 = !DILocation(line: 0, scope: !14291)
!14352 = !DILocation(line: 49, column: 8, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14291, file: !2229, line: 49, column: 7)
!14354 = !DILocation(line: 49, column: 7, scope: !14291)
!14355 = !DILocation(line: 56, column: 12, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14291, file: !2229, line: 56, column: 7)
!14357 = !DILocation(line: 56, column: 7, scope: !14356)
!14358 = !DILocation(line: 56, column: 7, scope: !14291)
!14359 = !DILocation(line: 57, column: 5, scope: !14356)
!14360 = !DILocation(line: 59, column: 12, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14291, file: !2229, line: 59, column: 7)
!14362 = !DILocation(line: 59, column: 7, scope: !14361)
!14363 = !DILocation(line: 59, column: 7, scope: !14291)
!14364 = !DILocation(line: 60, column: 15, scope: !14361)
!14365 = !DILocation(line: 60, column: 5, scope: !14361)
!14366 = !DILocation(line: 62, column: 8, scope: !14291)
!14367 = !DILocation(line: 62, column: 3, scope: !14291)
!14368 = !DILocation(line: 63, column: 1, scope: !14291)
!14369 = distinct !DISubprogram(name: "mxmlIndexEnum", scope: !2229, file: !2229, line: 73, type: !14370, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14372)
!14370 = !DISubroutineType(types: !14371)
!14371 = !{!14304, !14294}
!14372 = !{!14373}
!14373 = !DILocalVariable(name: "ind", arg: 1, scope: !14369, file: !2229, line: 73, type: !14294)
!14374 = !DILocation(line: 0, scope: !14369)
!14375 = !DILocation(line: 79, column: 8, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14369, file: !2229, line: 79, column: 7)
!14377 = !DILocation(line: 79, column: 7, scope: !14369)
!14378 = !DILocation(line: 86, column: 12, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14369, file: !2229, line: 86, column: 7)
!14380 = !DILocation(line: 86, column: 28, scope: !14379)
!14381 = !DILocation(line: 86, column: 21, scope: !14379)
!14382 = !DILocation(line: 86, column: 7, scope: !14369)
!14383 = !DILocation(line: 87, column: 18, scope: !14379)
!14384 = !DILocation(line: 87, column: 38, scope: !14379)
!14385 = !DILocation(line: 87, column: 13, scope: !14379)
!14386 = !DILocation(line: 87, column: 5, scope: !14379)
!14387 = !DILocation(line: 90, column: 1, scope: !14369)
!14388 = distinct !DISubprogram(name: "mxmlIndexFind", scope: !2229, file: !2229, line: 103, type: !14389, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14391)
!14389 = !DISubroutineType(types: !14390)
!14390 = !{!14304, !14294, !331, !331}
!14391 = !{!14392, !14393, !14394, !14395, !14396, !14397, !14398}
!14392 = !DILocalVariable(name: "ind", arg: 1, scope: !14388, file: !2229, line: 103, type: !14294)
!14393 = !DILocalVariable(name: "element", arg: 2, scope: !14388, file: !2229, line: 104, type: !331)
!14394 = !DILocalVariable(name: "value", arg: 3, scope: !14388, file: !2229, line: 105, type: !331)
!14395 = !DILocalVariable(name: "diff", scope: !14388, file: !2229, line: 107, type: !7)
!14396 = !DILocalVariable(name: "current", scope: !14388, file: !2229, line: 108, type: !7)
!14397 = !DILocalVariable(name: "first", scope: !14388, file: !2229, line: 109, type: !7)
!14398 = !DILocalVariable(name: "last", scope: !14388, file: !2229, line: 110, type: !7)
!14399 = !DILocation(line: 0, scope: !14388)
!14400 = !DILocation(line: 122, column: 8, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14388, file: !2229, line: 122, column: 7)
!14402 = !DILocation(line: 122, column: 12, scope: !14401)
!14403 = !DILocation(line: 122, column: 22, scope: !14401)
!14404 = !DILocation(line: 122, column: 17, scope: !14401)
!14405 = !DILocation(line: 122, column: 27, scope: !14401)
!14406 = !DILocation(line: 137, column: 8, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14388, file: !2229, line: 137, column: 7)
!14408 = !DILocation(line: 137, column: 16, scope: !14407)
!14409 = !DILocation(line: 138, column: 13, scope: !14407)
!14410 = !DILocation(line: 138, column: 5, scope: !14407)
!14411 = !DILocation(line: 144, column: 13, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14388, file: !2229, line: 144, column: 7)
!14413 = !DILocation(line: 144, column: 8, scope: !14412)
!14414 = !DILocation(line: 144, column: 7, scope: !14388)
!14415 = !DILocation(line: 158, column: 12, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !14388, file: !2229, line: 158, column: 7)
!14417 = !DILocation(line: 158, column: 21, scope: !14416)
!14418 = !DILocation(line: 158, column: 7, scope: !14388)
!14419 = !DILocation(line: 165, column: 28, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14416, file: !2229, line: 159, column: 3)
!14421 = !DILocation(line: 171, column: 27, scope: !14420)
!14422 = !DILocation(line: 171, column: 5, scope: !14420)
!14423 = !DILocation(line: 164, column: 11, scope: !14420)
!14424 = !DILocation(line: 0, scope: !14420)
!14425 = !DILocation(line: 219, column: 35, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !2229, line: 219, column: 5)
!14427 = distinct !DILexicalBlock(scope: !14420, file: !2229, line: 219, column: 5)
!14428 = !DILocation(line: 219, column: 5, scope: !14427)
!14429 = !DILocation(line: 173, column: 24, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14420, file: !2229, line: 172, column: 5)
!14431 = !DILocation(line: 173, column: 32, scope: !14430)
!14432 = !DILocation(line: 179, column: 56, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14430, file: !2229, line: 179, column: 11)
!14434 = !DILocation(line: 179, column: 51, scope: !14433)
!14435 = !DILocation(line: 179, column: 19, scope: !14433)
!14436 = !DILocation(line: 179, column: 73, scope: !14433)
!14437 = !DILocation(line: 179, column: 11, scope: !14430)
!14438 = !DILocation(line: 0, scope: !14430)
!14439 = !DILocation(line: 189, column: 24, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14433, file: !2229, line: 180, column: 7)
!14441 = !DILocation(line: 189, column: 28, scope: !14440)
!14442 = !DILocation(line: 190, column: 47, scope: !14440)
!14443 = !DILocation(line: 190, column: 61, scope: !14440)
!14444 = !DILocation(line: 190, column: 42, scope: !14440)
!14445 = !DILocation(line: 190, column: 10, scope: !14440)
!14446 = !DILocation(line: 190, column: 9, scope: !14440)
!14447 = !DILocation(line: 189, column: 9, scope: !14440)
!14448 = distinct !{!14448, !14447, !14449}
!14449 = !DILocation(line: 191, column: 12, scope: !14440)
!14450 = !DILocation(line: 201, column: 33, scope: !14440)
!14451 = !DILocation(line: 201, column: 23, scope: !14440)
!14452 = !DILocation(line: 203, column: 15, scope: !14440)
!14453 = !DILocation(line: 203, column: 10, scope: !14440)
!14454 = !DILocation(line: 203, column: 2, scope: !14440)
!14455 = !DILocation(line: 205, column: 21, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14433, file: !2229, line: 205, column: 16)
!14457 = !DILocation(line: 171, column: 18, scope: !14420)
!14458 = distinct !{!14458, !14422, !14459}
!14459 = !DILocation(line: 213, column: 5, scope: !14420)
!14460 = !DILocation(line: 220, column: 49, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14426, file: !2229, line: 220, column: 11)
!14462 = !DILocation(line: 220, column: 44, scope: !14461)
!14463 = !DILocation(line: 220, column: 12, scope: !14461)
!14464 = !DILocation(line: 0, scope: !14426)
!14465 = !DILocation(line: 220, column: 11, scope: !14426)
!14466 = !DILocation(line: 230, column: 16, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14461, file: !2229, line: 221, column: 7)
!14468 = !DILocation(line: 232, column: 15, scope: !14467)
!14469 = !DILocation(line: 232, column: 10, scope: !14467)
!14470 = !DILocation(line: 232, column: 2, scope: !14467)
!14471 = distinct !{!14471, !14428, !14472}
!14472 = !DILocation(line: 233, column: 7, scope: !14427)
!14473 = !DILocation(line: 239, column: 26, scope: !14420)
!14474 = !DILocation(line: 239, column: 19, scope: !14420)
!14475 = !DILocation(line: 245, column: 5, scope: !14420)
!14476 = !DILocation(line: 247, column: 26, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14416, file: !2229, line: 247, column: 12)
!14478 = !DILocation(line: 247, column: 43, scope: !14477)
!14479 = !DILocation(line: 248, column: 50, scope: !14477)
!14480 = !DILocation(line: 248, column: 45, scope: !14477)
!14481 = !DILocation(line: 248, column: 13, scope: !14477)
!14482 = !DILocation(line: 247, column: 12, scope: !14416)
!14483 = !DILocation(line: 265, column: 24, scope: !14388)
!14484 = !DILocation(line: 258, column: 18, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14477, file: !2229, line: 249, column: 3)
!14486 = !DILocation(line: 258, column: 38, scope: !14485)
!14487 = !DILocation(line: 258, column: 13, scope: !14485)
!14488 = !DILocation(line: 258, column: 5, scope: !14485)
!14489 = !DILocation(line: 265, column: 17, scope: !14388)
!14490 = !DILocation(line: 271, column: 3, scope: !14388)
!14491 = !DILocation(line: 272, column: 1, scope: !14388)
!14492 = distinct !DISubprogram(name: "index_find", scope: !2229, file: !2229, line: 542, type: !14493, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14495)
!14493 = !DISubroutineType(types: !14494)
!14494 = !{!7, !14294, !331, !331, !14304}
!14495 = !{!14496, !14497, !14498, !14499, !14500}
!14496 = !DILocalVariable(name: "ind", arg: 1, scope: !14492, file: !2229, line: 542, type: !14294)
!14497 = !DILocalVariable(name: "element", arg: 2, scope: !14492, file: !2229, line: 543, type: !331)
!14498 = !DILocalVariable(name: "value", arg: 3, scope: !14492, file: !2229, line: 544, type: !331)
!14499 = !DILocalVariable(name: "node", arg: 4, scope: !14492, file: !2229, line: 545, type: !14304)
!14500 = !DILocalVariable(name: "diff", scope: !14492, file: !2229, line: 547, type: !7)
!14501 = !DILocation(line: 0, scope: !14492)
!14502 = !DILocation(line: 554, column: 7, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14492, file: !2229, line: 554, column: 7)
!14504 = !DILocation(line: 554, column: 7, scope: !14492)
!14505 = !DILocation(line: 556, column: 39, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14507, file: !2229, line: 556, column: 9)
!14507 = distinct !DILexicalBlock(scope: !14503, file: !2229, line: 555, column: 3)
!14508 = !DILocation(line: 556, column: 53, scope: !14506)
!14509 = !DILocation(line: 556, column: 17, scope: !14506)
!14510 = !DILocation(line: 556, column: 60, scope: !14506)
!14511 = !DILocation(line: 556, column: 9, scope: !14507)
!14512 = !DILocation(line: 564, column: 7, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14492, file: !2229, line: 564, column: 7)
!14514 = !DILocation(line: 564, column: 7, scope: !14492)
!14515 = !DILocation(line: 566, column: 61, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !2229, line: 566, column: 9)
!14517 = distinct !DILexicalBlock(scope: !14513, file: !2229, line: 565, column: 3)
!14518 = !DILocation(line: 566, column: 31, scope: !14516)
!14519 = !DILocation(line: 566, column: 17, scope: !14516)
!14520 = !DILocation(line: 566, column: 69, scope: !14516)
!14521 = !DILocation(line: 566, column: 9, scope: !14517)
!14522 = !DILocation(line: 574, column: 3, scope: !14492)
!14523 = !DILocation(line: 575, column: 1, scope: !14492)
!14524 = distinct !DISubprogram(name: "mxmlIndexGetCount", scope: !2229, file: !2229, line: 282, type: !14525, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14527)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!7, !14294}
!14527 = !{!14528}
!14528 = !DILocalVariable(name: "ind", arg: 1, scope: !14524, file: !2229, line: 282, type: !14294)
!14529 = !DILocation(line: 0, scope: !14524)
!14530 = !DILocation(line: 288, column: 8, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14524, file: !2229, line: 288, column: 7)
!14532 = !DILocation(line: 288, column: 7, scope: !14524)
!14533 = !DILocation(line: 295, column: 16, scope: !14524)
!14534 = !DILocation(line: 295, column: 3, scope: !14524)
!14535 = !DILocation(line: 296, column: 1, scope: !14524)
!14536 = distinct !DISubprogram(name: "mxmlIndexNew", scope: !2229, file: !2229, line: 310, type: !14537, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14539)
!14537 = !DISubroutineType(types: !14538)
!14538 = !{!14294, !14304, !331, !331}
!14539 = !{!14540, !14541, !14542, !14543, !14544, !14545}
!14540 = !DILocalVariable(name: "node", arg: 1, scope: !14536, file: !2229, line: 310, type: !14304)
!14541 = !DILocalVariable(name: "element", arg: 2, scope: !14536, file: !2229, line: 311, type: !331)
!14542 = !DILocalVariable(name: "attr", arg: 3, scope: !14536, file: !2229, line: 312, type: !331)
!14543 = !DILocalVariable(name: "ind", scope: !14536, file: !2229, line: 314, type: !14294)
!14544 = !DILocalVariable(name: "current", scope: !14536, file: !2229, line: 315, type: !14304)
!14545 = !DILocalVariable(name: "temp", scope: !14536, file: !2229, line: 316, type: !14303)
!14546 = !DILocation(line: 0, scope: !14536)
!14547 = !DILocation(line: 328, column: 8, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14536, file: !2229, line: 328, column: 7)
!14549 = !DILocation(line: 328, column: 7, scope: !14536)
!14550 = !DILocation(line: 335, column: 14, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14536, file: !2229, line: 335, column: 7)
!14552 = !DILocation(line: 335, column: 47, scope: !14551)
!14553 = !DILocation(line: 335, column: 7, scope: !14536)
!14554 = !DILocation(line: 338, column: 47, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14551, file: !2229, line: 336, column: 3)
!14556 = !DILocation(line: 338, column: 38, scope: !14555)
!14557 = !DILocation(line: 337, column: 5, scope: !14555)
!14558 = !DILocation(line: 339, column: 5, scope: !14555)
!14559 = !DILocation(line: 342, column: 7, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14536, file: !2229, line: 342, column: 7)
!14561 = !DILocation(line: 342, column: 7, scope: !14536)
!14562 = !DILocation(line: 343, column: 17, scope: !14560)
!14563 = !DILocation(line: 343, column: 10, scope: !14560)
!14564 = !DILocation(line: 343, column: 15, scope: !14560)
!14565 = !DILocation(line: 345, column: 16, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14536, file: !2229, line: 345, column: 7)
!14567 = !DILocation(line: 345, column: 8, scope: !14566)
!14568 = !DILocation(line: 348, column: 15, scope: !14566)
!14569 = !DILocation(line: 350, column: 3, scope: !14536)
!14570 = !DILocation(line: 352, column: 14, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14572, file: !2229, line: 352, column: 9)
!14572 = distinct !DILexicalBlock(scope: !14536, file: !2229, line: 351, column: 3)
!14573 = !DILocation(line: 352, column: 32, scope: !14571)
!14574 = !DILocation(line: 352, column: 24, scope: !14571)
!14575 = !DILocation(line: 352, column: 9, scope: !14572)
!14576 = !DILocation(line: 377, column: 10, scope: !14572)
!14577 = !DILocation(line: 354, column: 12, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !2229, line: 354, column: 11)
!14579 = distinct !DILexicalBlock(scope: !14571, file: !2229, line: 353, column: 5)
!14580 = !DILocation(line: 354, column: 11, scope: !14579)
!14581 = !DILocation(line: 355, column: 16, scope: !14578)
!14582 = !DILocation(line: 355, column: 9, scope: !14578)
!14583 = !DILocation(line: 357, column: 29, scope: !14578)
!14584 = !DILocation(line: 357, column: 60, scope: !14578)
!14585 = !DILocation(line: 357, column: 16, scope: !14578)
!14586 = !DILocation(line: 359, column: 12, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14579, file: !2229, line: 359, column: 11)
!14588 = !DILocation(line: 359, column: 11, scope: !14579)
!14589 = !DILocation(line: 366, column: 19, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14587, file: !2229, line: 360, column: 7)
!14591 = !DILocation(line: 366, column: 37, scope: !14590)
!14592 = !DILocation(line: 367, column: 15, scope: !14590)
!14593 = !DILocation(line: 367, column: 6, scope: !14590)
!14594 = !DILocation(line: 365, column: 9, scope: !14590)
!14595 = !DILocation(line: 369, column: 9, scope: !14590)
!14596 = !DILocation(line: 370, column: 2, scope: !14590)
!14597 = !DILocation(line: 373, column: 24, scope: !14579)
!14598 = !DILocation(line: 374, column: 24, scope: !14579)
!14599 = !DILocation(line: 375, column: 5, scope: !14579)
!14600 = !DILocation(line: 377, column: 31, scope: !14572)
!14601 = !DILocation(line: 377, column: 5, scope: !14572)
!14602 = !DILocation(line: 377, column: 35, scope: !14572)
!14603 = !DILocation(line: 379, column: 15, scope: !14572)
!14604 = distinct !{!14604, !14569, !14605}
!14605 = !DILocation(line: 380, column: 3, scope: !14536)
!14606 = !DILocation(line: 417, column: 12, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14536, file: !2229, line: 417, column: 7)
!14608 = !DILocation(line: 417, column: 22, scope: !14607)
!14609 = !DILocation(line: 417, column: 7, scope: !14536)
!14610 = !DILocation(line: 418, column: 39, scope: !14607)
!14611 = !DILocation(line: 418, column: 5, scope: !14607)
!14612 = !DILocation(line: 456, column: 1, scope: !14536)
!14613 = distinct !DISubprogram(name: "index_sort", scope: !2229, file: !2229, line: 585, type: !14614, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14616)
!14614 = !DISubroutineType(types: !14615)
!14615 = !{null, !14294, !7, !7}
!14616 = !{!14617, !14618, !14619, !14620, !14621, !14622, !14623}
!14617 = !DILocalVariable(name: "ind", arg: 1, scope: !14613, file: !2229, line: 585, type: !14294)
!14618 = !DILocalVariable(name: "left", arg: 2, scope: !14613, file: !2229, line: 586, type: !7)
!14619 = !DILocalVariable(name: "right", arg: 3, scope: !14613, file: !2229, line: 587, type: !7)
!14620 = !DILocalVariable(name: "pivot", scope: !14613, file: !2229, line: 589, type: !14304)
!14621 = !DILocalVariable(name: "temp", scope: !14613, file: !2229, line: 590, type: !14304)
!14622 = !DILocalVariable(name: "templ", scope: !14613, file: !2229, line: 591, type: !7)
!14623 = !DILocalVariable(name: "tempr", scope: !14613, file: !2229, line: 592, type: !7)
!14624 = !DILocation(line: 0, scope: !14613)
!14625 = !DILocation(line: 599, column: 3, scope: !14613)
!14626 = !DILocation(line: 605, column: 18, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14613, file: !2229, line: 600, column: 3)
!14628 = !DILocation(line: 605, column: 13, scope: !14627)
!14629 = !DILocation(line: 607, column: 45, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14631, file: !2229, line: 607, column: 5)
!14631 = distinct !DILexicalBlock(scope: !14627, file: !2229, line: 607, column: 5)
!14632 = !DILocation(line: 607, column: 5, scope: !14631)
!14633 = !DILocation(line: 613, column: 21, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14630, file: !2229, line: 608, column: 5)
!14635 = !DILocation(line: 613, column: 30, scope: !14634)
!14636 = !DILocation(line: 614, column: 38, scope: !14634)
!14637 = !DILocation(line: 614, column: 33, scope: !14634)
!14638 = !DILocation(line: 614, column: 14, scope: !14634)
!14639 = !DILocation(line: 614, column: 59, scope: !14634)
!14640 = !DILocation(line: 613, column: 7, scope: !14634)
!14641 = !DILocation(line: 615, column: 8, scope: !14634)
!14642 = distinct !{!14642, !14640, !14641}
!14643 = !DILocation(line: 0, scope: !14631)
!14644 = !DILocation(line: 621, column: 21, scope: !14634)
!14645 = !DILocation(line: 621, column: 29, scope: !14634)
!14646 = !DILocation(line: 622, column: 38, scope: !14634)
!14647 = !DILocation(line: 622, column: 33, scope: !14634)
!14648 = !DILocation(line: 622, column: 14, scope: !14634)
!14649 = !DILocation(line: 622, column: 59, scope: !14634)
!14650 = !DILocation(line: 621, column: 7, scope: !14634)
!14651 = !DILocation(line: 623, column: 8, scope: !14634)
!14652 = distinct !{!14652, !14650, !14651}
!14653 = !DILocation(line: 629, column: 17, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14634, file: !2229, line: 629, column: 11)
!14655 = !DILocation(line: 0, scope: !14627)
!14656 = !DILocation(line: 629, column: 11, scope: !14634)
!14657 = !DILocation(line: 631, column: 22, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14654, file: !2229, line: 630, column: 7)
!14659 = !DILocation(line: 632, column: 22, scope: !14658)
!14660 = !DILocation(line: 632, column: 20, scope: !14658)
!14661 = !DILocation(line: 633, column: 7, scope: !14658)
!14662 = !DILocation(line: 633, column: 2, scope: !14658)
!14663 = !DILocation(line: 633, column: 20, scope: !14658)
!14664 = !DILocation(line: 642, column: 40, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14627, file: !2229, line: 642, column: 9)
!14666 = !DILocation(line: 607, column: 30, scope: !14631)
!14667 = !DILocation(line: 642, column: 35, scope: !14665)
!14668 = !DILocation(line: 642, column: 9, scope: !14665)
!14669 = !DILocation(line: 642, column: 54, scope: !14665)
!14670 = !DILocation(line: 642, column: 9, scope: !14627)
!14671 = !DILocation(line: 644, column: 32, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14665, file: !2229, line: 643, column: 5)
!14673 = !DILocation(line: 644, column: 27, scope: !14672)
!14674 = !DILocation(line: 644, column: 7, scope: !14672)
!14675 = !DILocation(line: 644, column: 25, scope: !14672)
!14676 = !DILocation(line: 645, column: 12, scope: !14672)
!14677 = !DILocation(line: 645, column: 7, scope: !14672)
!14678 = !DILocation(line: 645, column: 25, scope: !14672)
!14679 = !DILocation(line: 646, column: 5, scope: !14672)
!14680 = !DILocation(line: 652, column: 23, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14627, file: !2229, line: 652, column: 9)
!14682 = !DILocation(line: 652, column: 14, scope: !14681)
!14683 = !DILocation(line: 652, column: 9, scope: !14627)
!14684 = !DILocation(line: 653, column: 7, scope: !14681)
!14685 = !DILocation(line: 655, column: 32, scope: !14613)
!14686 = !DILocation(line: 655, column: 16, scope: !14613)
!14687 = !DILocation(line: 654, column: 3, scope: !14627)
!14688 = distinct !{!14688, !14625, !14689}
!14689 = !DILocation(line: 655, column: 36, scope: !14613)
!14690 = !DILocation(line: 656, column: 1, scope: !14613)
!14691 = distinct !DISubprogram(name: "index_compare", scope: !2229, file: !2229, line: 503, type: !14692, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14694)
!14692 = !DISubroutineType(types: !14693)
!14693 = !{!7, !14294, !14304, !14304}
!14694 = !{!14695, !14696, !14697, !14698}
!14695 = !DILocalVariable(name: "ind", arg: 1, scope: !14691, file: !2229, line: 503, type: !14294)
!14696 = !DILocalVariable(name: "first", arg: 2, scope: !14691, file: !2229, line: 504, type: !14304)
!14697 = !DILocalVariable(name: "second", arg: 3, scope: !14691, file: !2229, line: 505, type: !14304)
!14698 = !DILocalVariable(name: "diff", scope: !14691, file: !2229, line: 507, type: !7)
!14699 = !DILocation(line: 0, scope: !14691)
!14700 = !DILocation(line: 514, column: 29, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14691, file: !2229, line: 514, column: 7)
!14702 = !DILocation(line: 514, column: 43, scope: !14701)
!14703 = !DILocation(line: 515, column: 30, scope: !14701)
!14704 = !DILocation(line: 515, column: 44, scope: !14701)
!14705 = !DILocation(line: 514, column: 15, scope: !14701)
!14706 = !DILocation(line: 515, column: 51, scope: !14701)
!14707 = !DILocation(line: 514, column: 7, scope: !14691)
!14708 = !DILocation(line: 522, column: 12, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14691, file: !2229, line: 522, column: 7)
!14710 = !DILocation(line: 522, column: 7, scope: !14709)
!14711 = !DILocation(line: 522, column: 7, scope: !14691)
!14712 = !DILocation(line: 524, column: 24, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14714, file: !2229, line: 524, column: 9)
!14714 = distinct !DILexicalBlock(scope: !14709, file: !2229, line: 523, column: 3)
!14715 = !DILocation(line: 525, column: 56, scope: !14713)
!14716 = !DILocation(line: 525, column: 24, scope: !14713)
!14717 = !DILocation(line: 524, column: 17, scope: !14713)
!14718 = !DILocation(line: 525, column: 64, scope: !14713)
!14719 = !DILocation(line: 524, column: 9, scope: !14714)
!14720 = !DILocation(line: 533, column: 3, scope: !14691)
!14721 = !DILocation(line: 534, column: 1, scope: !14691)
!14722 = distinct !DISubprogram(name: "mxmlIndexReset", scope: !2229, file: !2229, line: 468, type: !14370, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14723)
!14723 = !{!14724}
!14724 = !DILocalVariable(name: "ind", arg: 1, scope: !14722, file: !2229, line: 468, type: !14294)
!14725 = !DILocation(line: 0, scope: !14722)
!14726 = !DILocation(line: 478, column: 8, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14722, file: !2229, line: 478, column: 7)
!14728 = !DILocation(line: 478, column: 7, scope: !14722)
!14729 = !DILocation(line: 485, column: 8, scope: !14722)
!14730 = !DILocation(line: 485, column: 17, scope: !14722)
!14731 = !DILocation(line: 491, column: 12, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14722, file: !2229, line: 491, column: 7)
!14733 = !DILocation(line: 491, column: 7, scope: !14732)
!14734 = !DILocation(line: 491, column: 7, scope: !14722)
!14735 = !DILocation(line: 492, column: 18, scope: !14732)
!14736 = !DILocation(line: 492, column: 13, scope: !14732)
!14737 = !DILocation(line: 492, column: 5, scope: !14732)
!14738 = !DILocation(line: 495, column: 1, scope: !14722)
!14739 = distinct !DISubprogram(name: "mxmlAdd", scope: !2231, file: !2231, line: 44, type: !14740, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !14787)
!14740 = !DISubroutineType(types: !14741)
!14741 = !{null, !14742, !7, !14742, !14742}
!14742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14743, size: 32)
!14743 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !14744)
!14744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !14745)
!14745 = !{!14746, !14747, !14749, !14750, !14751, !14752, !14753, !14785, !14786}
!14746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14744, file: !1173, line: 139, baseType: !1209, size: 32)
!14747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14744, file: !1173, line: 140, baseType: !14748, size: 32, offset: 32)
!14748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14744, size: 32)
!14749 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14744, file: !1173, line: 141, baseType: !14748, size: 32, offset: 64)
!14750 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !14744, file: !1173, line: 142, baseType: !14748, size: 32, offset: 96)
!14751 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !14744, file: !1173, line: 143, baseType: !14748, size: 32, offset: 128)
!14752 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !14744, file: !1173, line: 144, baseType: !14748, size: 32, offset: 160)
!14753 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !14744, file: !1173, line: 145, baseType: !14754, size: 128, offset: 192)
!14754 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !14755)
!14755 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !14756)
!14756 = !{!14757, !14770, !14771, !14772, !14773, !14779}
!14757 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !14755, file: !1173, line: 129, baseType: !14758, size: 96)
!14758 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !14759)
!14759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !14760)
!14760 = !{!14761, !14762, !14763}
!14761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14759, file: !1173, line: 110, baseType: !201, size: 32)
!14762 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !14759, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!14763 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !14759, file: !1173, line: 112, baseType: !14764, size: 32, offset: 64)
!14764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14765, size: 32)
!14765 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !14766)
!14766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !14767)
!14767 = !{!14768, !14769}
!14768 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14766, file: !1173, line: 104, baseType: !201, size: 32)
!14769 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !14766, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!14770 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !14755, file: !1173, line: 130, baseType: !7, size: 32)
!14771 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !14755, file: !1173, line: 131, baseType: !201, size: 32)
!14772 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !14755, file: !1173, line: 132, baseType: !1236, size: 64)
!14773 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !14755, file: !1173, line: 133, baseType: !14774, size: 64)
!14774 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !14775)
!14775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !14776)
!14776 = !{!14777, !14778}
!14777 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !14775, file: !1173, line: 117, baseType: !7, size: 32)
!14778 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !14775, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!14779 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !14755, file: !1173, line: 134, baseType: !14780, size: 64)
!14780 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !14781)
!14781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !14782)
!14782 = !{!14783, !14784}
!14783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14781, file: !1173, line: 123, baseType: !51, size: 32)
!14784 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !14781, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!14785 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !14744, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!14786 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !14744, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!14787 = !{!14788, !14789, !14790, !14791}
!14788 = !DILocalVariable(name: "parent", arg: 1, scope: !14739, file: !2231, line: 44, type: !14742)
!14789 = !DILocalVariable(name: "where", arg: 2, scope: !14739, file: !2231, line: 45, type: !7)
!14790 = !DILocalVariable(name: "child", arg: 3, scope: !14739, file: !2231, line: 46, type: !14742)
!14791 = !DILocalVariable(name: "node", arg: 4, scope: !14739, file: !2231, line: 47, type: !14742)
!14792 = !DILocation(line: 0, scope: !14739)
!14793 = !DILocation(line: 58, column: 8, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14739, file: !2231, line: 58, column: 7)
!14795 = !DILocation(line: 58, column: 15, scope: !14794)
!14796 = !DILocation(line: 76, column: 13, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14739, file: !2231, line: 76, column: 7)
!14798 = !DILocation(line: 76, column: 7, scope: !14797)
!14799 = !DILocation(line: 76, column: 7, scope: !14739)
!14800 = !DILocation(line: 77, column: 5, scope: !14797)
!14801 = !DILocation(line: 83, column: 16, scope: !14739)
!14802 = !DILocation(line: 85, column: 3, scope: !14739)
!14803 = !DILocation(line: 88, column: 14, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !2231, line: 88, column: 13)
!14805 = distinct !DILexicalBlock(scope: !14739, file: !2231, line: 86, column: 3)
!14806 = !DILocation(line: 0, scope: !14804)
!14807 = !DILocation(line: 88, column: 20, scope: !14804)
!14808 = !DILocation(line: 88, column: 29, scope: !14804)
!14809 = !DILocation(line: 88, column: 46, scope: !14804)
!14810 = !DILocation(line: 88, column: 56, scope: !14804)
!14811 = !DILocation(line: 88, column: 63, scope: !14804)
!14812 = !DILocation(line: 88, column: 13, scope: !14805)
!14813 = !DILocation(line: 94, column: 25, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14804, file: !2231, line: 89, column: 2)
!14815 = !DILocation(line: 94, column: 10, scope: !14814)
!14816 = !DILocation(line: 94, column: 15, scope: !14814)
!14817 = !DILocation(line: 96, column: 16, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14814, file: !2231, line: 96, column: 8)
!14819 = !DILocation(line: 96, column: 8, scope: !14818)
!14820 = !DILocation(line: 96, column: 8, scope: !14814)
!14821 = !DILocation(line: 97, column: 21, scope: !14818)
!14822 = !DILocation(line: 97, column: 26, scope: !14818)
!14823 = !DILocation(line: 97, column: 6, scope: !14818)
!14824 = !DILocation(line: 99, column: 14, scope: !14818)
!14825 = !DILocation(line: 99, column: 25, scope: !14818)
!14826 = !DILocation(line: 101, column: 18, scope: !14814)
!14827 = !DILocation(line: 102, column: 2, scope: !14814)
!14828 = !DILocation(line: 109, column: 10, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14804, file: !2231, line: 104, column: 2)
!14830 = !DILocation(line: 109, column: 15, scope: !14829)
!14831 = !DILocation(line: 110, column: 24, scope: !14829)
!14832 = !DILocation(line: 110, column: 10, scope: !14829)
!14833 = !DILocation(line: 110, column: 15, scope: !14829)
!14834 = !DILocation(line: 112, column: 15, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14829, file: !2231, line: 112, column: 8)
!14836 = !DILocation(line: 112, column: 8, scope: !14835)
!14837 = !DILocation(line: 112, column: 8, scope: !14829)
!14838 = !DILocation(line: 113, column: 19, scope: !14835)
!14839 = !DILocation(line: 113, column: 24, scope: !14835)
!14840 = !DILocation(line: 113, column: 6, scope: !14835)
!14841 = !DILocation(line: 115, column: 20, scope: !14835)
!14842 = !DILocation(line: 117, column: 16, scope: !14829)
!14843 = !DILocation(line: 122, column: 14, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14805, file: !2231, line: 122, column: 13)
!14845 = !DILocation(line: 122, column: 20, scope: !14844)
!14846 = !DILocation(line: 122, column: 40, scope: !14844)
!14847 = !DILocation(line: 122, column: 29, scope: !14844)
!14848 = !DILocation(line: 122, column: 51, scope: !14844)
!14849 = !DILocation(line: 122, column: 61, scope: !14844)
!14850 = !DILocation(line: 122, column: 68, scope: !14844)
!14851 = !DILocation(line: 122, column: 13, scope: !14805)
!14852 = !DILocation(line: 129, column: 27, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14844, file: !2231, line: 123, column: 2)
!14854 = !DILocation(line: 129, column: 10, scope: !14853)
!14855 = !DILocation(line: 129, column: 17, scope: !14853)
!14856 = !DILocation(line: 131, column: 16, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14853, file: !2231, line: 131, column: 8)
!14858 = !DILocation(line: 131, column: 8, scope: !14857)
!14859 = !DILocation(line: 131, column: 8, scope: !14853)
!14860 = !DILocation(line: 132, column: 26, scope: !14857)
!14861 = !DILocation(line: 132, column: 31, scope: !14857)
!14862 = !DILocation(line: 132, column: 6, scope: !14857)
!14863 = !DILocation(line: 134, column: 14, scope: !14857)
!14864 = !DILocation(line: 134, column: 20, scope: !14857)
!14865 = !DILocation(line: 136, column: 23, scope: !14853)
!14866 = !DILocation(line: 137, column: 9, scope: !14853)
!14867 = !DILocation(line: 144, column: 10, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14844, file: !2231, line: 139, column: 2)
!14869 = !DILocation(line: 144, column: 15, scope: !14868)
!14870 = !DILocation(line: 145, column: 24, scope: !14868)
!14871 = !DILocation(line: 145, column: 10, scope: !14868)
!14872 = !DILocation(line: 145, column: 15, scope: !14868)
!14873 = !DILocation(line: 147, column: 15, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14868, file: !2231, line: 147, column: 8)
!14875 = !DILocation(line: 147, column: 8, scope: !14874)
!14876 = !DILocation(line: 147, column: 8, scope: !14868)
!14877 = !DILocation(line: 148, column: 19, scope: !14874)
!14878 = !DILocation(line: 148, column: 24, scope: !14874)
!14879 = !DILocation(line: 148, column: 6, scope: !14874)
!14880 = !DILocation(line: 150, column: 25, scope: !14874)
!14881 = !DILocation(line: 152, column: 16, scope: !14868)
!14882 = !DILocation(line: 167, column: 1, scope: !14739)
!14883 = distinct !DISubprogram(name: "mxmlRemove", scope: !2231, file: !2231, line: 635, type: !14884, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !14886)
!14884 = !DISubroutineType(types: !14885)
!14885 = !{null, !14742}
!14886 = !{!14887}
!14887 = !DILocalVariable(name: "node", arg: 1, scope: !14883, file: !2231, line: 635, type: !14742)
!14888 = !DILocation(line: 0, scope: !14883)
!14889 = !DILocation(line: 645, column: 8, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14883, file: !2231, line: 645, column: 7)
!14891 = !DILocation(line: 645, column: 13, scope: !14890)
!14892 = !DILocation(line: 645, column: 23, scope: !14890)
!14893 = !DILocation(line: 645, column: 17, scope: !14890)
!14894 = !DILocation(line: 645, column: 7, scope: !14883)
!14895 = !DILocation(line: 665, column: 13, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14883, file: !2231, line: 665, column: 7)
!14897 = !DILocation(line: 665, column: 7, scope: !14896)
!14898 = !DILocation(line: 0, scope: !14896)
!14899 = !DILocation(line: 665, column: 7, scope: !14883)
!14900 = !DILocation(line: 666, column: 17, scope: !14896)
!14901 = !DILocation(line: 666, column: 22, scope: !14896)
!14902 = !DILocation(line: 666, column: 5, scope: !14896)
!14903 = !DILocation(line: 668, column: 19, scope: !14896)
!14904 = !DILocation(line: 668, column: 25, scope: !14896)
!14905 = !DILocation(line: 670, column: 13, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14883, file: !2231, line: 670, column: 7)
!14907 = !DILocation(line: 670, column: 7, scope: !14906)
!14908 = !DILocation(line: 0, scope: !14906)
!14909 = !DILocation(line: 670, column: 7, scope: !14883)
!14910 = !DILocation(line: 671, column: 17, scope: !14906)
!14911 = !DILocation(line: 671, column: 22, scope: !14906)
!14912 = !DILocation(line: 671, column: 5, scope: !14906)
!14913 = !DILocation(line: 673, column: 11, scope: !14906)
!14914 = !DILocation(line: 673, column: 19, scope: !14906)
!14915 = !DILocation(line: 673, column: 30, scope: !14906)
!14916 = !DILocation(line: 675, column: 16, scope: !14883)
!14917 = !DILocation(line: 676, column: 16, scope: !14883)
!14918 = !DILocation(line: 677, column: 16, scope: !14883)
!14919 = !DILocation(line: 691, column: 1, scope: !14883)
!14920 = distinct !DISubprogram(name: "mxmlDelete", scope: !2231, file: !2231, line: 178, type: !14884, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !14921)
!14921 = !{!14922, !14923}
!14922 = !DILocalVariable(name: "node", arg: 1, scope: !14920, file: !2231, line: 178, type: !14742)
!14923 = !DILocalVariable(name: "i", scope: !14920, file: !2231, line: 180, type: !7)
!14924 = !DILocation(line: 0, scope: !14920)
!14925 = !DILocation(line: 191, column: 8, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14920, file: !2231, line: 191, column: 7)
!14927 = !DILocation(line: 191, column: 7, scope: !14920)
!14928 = !DILocation(line: 201, column: 3, scope: !14920)
!14929 = !DILocation(line: 210, column: 16, scope: !14920)
!14930 = !DILocation(line: 210, column: 3, scope: !14920)
!14931 = !DILocation(line: 211, column: 5, scope: !14920)
!14932 = distinct !{!14932, !14930, !14933}
!14933 = !DILocation(line: 211, column: 27, scope: !14920)
!14934 = !DILocation(line: 221, column: 17, scope: !14920)
!14935 = !DILocation(line: 221, column: 3, scope: !14920)
!14936 = !DILocation(line: 224, column: 19, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14938, file: !2231, line: 224, column: 13)
!14938 = distinct !DILexicalBlock(scope: !14920, file: !2231, line: 222, column: 3)
!14939 = !DILocation(line: 224, column: 25, scope: !14937)
!14940 = !DILocation(line: 224, column: 33, scope: !14937)
!14941 = !DILocation(line: 224, column: 13, scope: !14937)
!14942 = !DILocation(line: 224, column: 13, scope: !14938)
!14943 = !DILocation(line: 229, column: 4, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14937, file: !2231, line: 225, column: 9)
!14945 = !DILocation(line: 230, column: 9, scope: !14944)
!14946 = !DILocation(line: 232, column: 26, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14938, file: !2231, line: 232, column: 6)
!14948 = !DILocation(line: 232, column: 6, scope: !14947)
!14949 = !DILocation(line: 232, column: 6, scope: !14938)
!14950 = !DILocation(line: 237, column: 18, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14952, file: !2231, line: 237, column: 4)
!14952 = distinct !DILexicalBlock(scope: !14953, file: !2231, line: 237, column: 4)
!14953 = distinct !DILexicalBlock(scope: !14947, file: !2231, line: 233, column: 2)
!14954 = !DILocation(line: 237, column: 4, scope: !14952)
!14955 = !DILocation(line: 243, column: 30, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14957, file: !2231, line: 243, column: 10)
!14957 = distinct !DILexicalBlock(scope: !14951, file: !2231, line: 238, column: 4)
!14958 = !DILocation(line: 243, column: 39, scope: !14956)
!14959 = !DILocation(line: 243, column: 10, scope: !14956)
!14960 = !DILocation(line: 243, column: 10, scope: !14957)
!14961 = !DILocation(line: 244, column: 8, scope: !14956)
!14962 = !DILocation(line: 245, column: 30, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14957, file: !2231, line: 245, column: 10)
!14964 = !DILocation(line: 245, column: 39, scope: !14963)
!14965 = !DILocation(line: 245, column: 10, scope: !14963)
!14966 = !DILocation(line: 245, column: 10, scope: !14957)
!14967 = !DILocation(line: 246, column: 8, scope: !14963)
!14968 = !DILocation(line: 237, column: 53, scope: !14951)
!14969 = !DILocation(line: 237, column: 40, scope: !14951)
!14970 = distinct !{!14970, !14954, !14971}
!14971 = !DILocation(line: 247, column: 4, scope: !14952)
!14972 = !DILocation(line: 251, column: 36, scope: !14953)
!14973 = !DILocation(line: 251, column: 11, scope: !14953)
!14974 = !DILocation(line: 252, column: 2, scope: !14953)
!14975 = !DILocation(line: 258, column: 19, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14938, file: !2231, line: 258, column: 13)
!14977 = !DILocation(line: 258, column: 25, scope: !14976)
!14978 = !DILocation(line: 258, column: 13, scope: !14976)
!14979 = !DILocation(line: 258, column: 13, scope: !14938)
!14980 = !DILocation(line: 259, column: 4, scope: !14976)
!14981 = !DILocation(line: 265, column: 19, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14938, file: !2231, line: 265, column: 13)
!14983 = !DILocation(line: 265, column: 25, scope: !14982)
!14984 = !DILocation(line: 265, column: 30, scope: !14982)
!14985 = !DILocation(line: 265, column: 13, scope: !14982)
!14986 = !DILocation(line: 265, column: 13, scope: !14938)
!14987 = !DILocation(line: 266, column: 4, scope: !14982)
!14988 = !DILocation(line: 269, column: 19, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14938, file: !2231, line: 269, column: 13)
!14990 = !DILocation(line: 269, column: 32, scope: !14989)
!14991 = !DILocation(line: 269, column: 13, scope: !14989)
!14992 = !DILocation(line: 269, column: 37, scope: !14989)
!14993 = !DILocation(line: 269, column: 25, scope: !14989)
!14994 = !DILocation(line: 270, column: 25, scope: !14989)
!14995 = !DILocation(line: 270, column: 6, scope: !14989)
!14996 = !DILocation(line: 269, column: 13, scope: !14938)
!14997 = !DILocation(line: 271, column: 4, scope: !14989)
!14998 = !DILocation(line: 284, column: 8, scope: !14920)
!14999 = !DILocation(line: 284, column: 3, scope: !14920)
!15000 = !DILocation(line: 285, column: 1, scope: !14920)
!15001 = distinct !DISubprogram(name: "mxmlGetRefCount", scope: !2231, file: !2231, line: 299, type: !15002, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15004)
!15002 = !DISubroutineType(types: !15003)
!15003 = !{!7, !14742}
!15004 = !{!15005}
!15005 = !DILocalVariable(name: "node", arg: 1, scope: !15001, file: !2231, line: 299, type: !14742)
!15006 = !DILocation(line: 0, scope: !15001)
!15007 = !DILocation(line: 305, column: 8, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15001, file: !2231, line: 305, column: 7)
!15009 = !DILocation(line: 305, column: 7, scope: !15001)
!15010 = !DILocation(line: 312, column: 17, scope: !15001)
!15011 = !DILocation(line: 312, column: 3, scope: !15001)
!15012 = !DILocation(line: 313, column: 1, scope: !15001)
!15013 = distinct !DISubprogram(name: "mxmlNewCDATA", scope: !2231, file: !2231, line: 328, type: !15014, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15016)
!15014 = !DISubroutineType(types: !15015)
!15015 = !{!14742, !14742, !331}
!15016 = !{!15017, !15018, !15019}
!15017 = !DILocalVariable(name: "parent", arg: 1, scope: !15013, file: !2231, line: 328, type: !14742)
!15018 = !DILocalVariable(name: "data", arg: 2, scope: !15013, file: !2231, line: 329, type: !331)
!15019 = !DILocalVariable(name: "node", scope: !15013, file: !2231, line: 331, type: !14742)
!15020 = !DILocation(line: 0, scope: !15013)
!15021 = !DILocation(line: 343, column: 8, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15013, file: !2231, line: 343, column: 7)
!15023 = !DILocation(line: 343, column: 7, scope: !15013)
!15024 = !DILocation(line: 350, column: 15, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15013, file: !2231, line: 350, column: 7)
!15026 = !DILocation(line: 350, column: 47, scope: !15025)
!15027 = !DILocation(line: 350, column: 7, scope: !15013)
!15028 = !DILocation(line: 351, column: 32, scope: !15025)
!15029 = !DILocation(line: 351, column: 11, scope: !15025)
!15030 = !DILocation(line: 351, column: 25, scope: !15025)
!15031 = !DILocation(line: 351, column: 30, scope: !15025)
!15032 = !DILocation(line: 351, column: 5, scope: !15025)
!15033 = !DILocation(line: 354, column: 1, scope: !15013)
!15034 = distinct !DISubprogram(name: "mxml_new", scope: !2231, file: !2231, line: 764, type: !15035, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15037)
!15035 = !DISubroutineType(types: !15036)
!15036 = !{!14742, !14742, !1209}
!15037 = !{!15038, !15039, !15040}
!15038 = !DILocalVariable(name: "parent", arg: 1, scope: !15034, file: !2231, line: 764, type: !14742)
!15039 = !DILocalVariable(name: "type", arg: 2, scope: !15034, file: !2231, line: 765, type: !1209)
!15040 = !DILocalVariable(name: "node", scope: !15034, file: !2231, line: 767, type: !14742)
!15041 = !DILocation(line: 0, scope: !15034)
!15042 = !DILocation(line: 778, column: 15, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15034, file: !2231, line: 778, column: 7)
!15044 = !DILocation(line: 778, column: 47, scope: !15043)
!15045 = !DILocation(line: 778, column: 7, scope: !15034)
!15046 = !DILocation(line: 795, column: 9, scope: !15034)
!15047 = !DILocation(line: 795, column: 19, scope: !15034)
!15048 = !DILocation(line: 796, column: 9, scope: !15034)
!15049 = !DILocation(line: 796, column: 19, scope: !15034)
!15050 = !DILocation(line: 802, column: 7, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15034, file: !2231, line: 802, column: 7)
!15052 = !DILocation(line: 802, column: 7, scope: !15034)
!15053 = !DILocation(line: 803, column: 5, scope: !15051)
!15054 = !DILocation(line: 810, column: 1, scope: !15034)
!15055 = distinct !DISubprogram(name: "mxmlNewCustom", scope: !2231, file: !2231, line: 369, type: !15056, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15058)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{!14742, !14742, !51, !1249}
!15058 = !{!15059, !15060, !15061, !15062}
!15059 = !DILocalVariable(name: "parent", arg: 1, scope: !15055, file: !2231, line: 370, type: !14742)
!15060 = !DILocalVariable(name: "data", arg: 2, scope: !15055, file: !2231, line: 371, type: !51)
!15061 = !DILocalVariable(name: "destroy", arg: 3, scope: !15055, file: !2231, line: 372, type: !1249)
!15062 = !DILocalVariable(name: "node", scope: !15055, file: !2231, line: 374, type: !14742)
!15063 = !DILocation(line: 0, scope: !15055)
!15064 = !DILocation(line: 386, column: 15, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15055, file: !2231, line: 386, column: 7)
!15066 = !DILocation(line: 386, column: 46, scope: !15065)
!15067 = !DILocation(line: 386, column: 7, scope: !15055)
!15068 = !DILocation(line: 388, column: 11, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15065, file: !2231, line: 387, column: 3)
!15070 = !DILocation(line: 388, column: 17, scope: !15069)
!15071 = !DILocation(line: 388, column: 24, scope: !15069)
!15072 = !DILocation(line: 388, column: 32, scope: !15069)
!15073 = !DILocation(line: 389, column: 24, scope: !15069)
!15074 = !DILocation(line: 389, column: 32, scope: !15069)
!15075 = !DILocation(line: 390, column: 3, scope: !15069)
!15076 = !DILocation(line: 392, column: 3, scope: !15055)
!15077 = distinct !DISubprogram(name: "mxmlNewElement", scope: !2231, file: !2231, line: 405, type: !15014, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15078)
!15078 = !{!15079, !15080, !15081}
!15079 = !DILocalVariable(name: "parent", arg: 1, scope: !15077, file: !2231, line: 405, type: !14742)
!15080 = !DILocalVariable(name: "name", arg: 2, scope: !15077, file: !2231, line: 406, type: !331)
!15081 = !DILocalVariable(name: "node", scope: !15077, file: !2231, line: 408, type: !14742)
!15082 = !DILocation(line: 0, scope: !15077)
!15083 = !DILocation(line: 420, column: 8, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15077, file: !2231, line: 420, column: 7)
!15085 = !DILocation(line: 420, column: 7, scope: !15077)
!15086 = !DILocation(line: 427, column: 15, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15077, file: !2231, line: 427, column: 7)
!15088 = !DILocation(line: 427, column: 47, scope: !15087)
!15089 = !DILocation(line: 427, column: 7, scope: !15077)
!15090 = !DILocation(line: 428, column: 32, scope: !15087)
!15091 = !DILocation(line: 428, column: 11, scope: !15087)
!15092 = !DILocation(line: 428, column: 25, scope: !15087)
!15093 = !DILocation(line: 428, column: 30, scope: !15087)
!15094 = !DILocation(line: 428, column: 5, scope: !15087)
!15095 = !DILocation(line: 431, column: 1, scope: !15077)
!15096 = distinct !DISubprogram(name: "mxmlNewInteger", scope: !2231, file: !2231, line: 443, type: !15097, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15099)
!15097 = !DISubroutineType(types: !15098)
!15098 = !{!14742, !14742, !7}
!15099 = !{!15100, !15101, !15102}
!15100 = !DILocalVariable(name: "parent", arg: 1, scope: !15096, file: !2231, line: 443, type: !14742)
!15101 = !DILocalVariable(name: "integer", arg: 2, scope: !15096, file: !2231, line: 444, type: !7)
!15102 = !DILocalVariable(name: "node", scope: !15096, file: !2231, line: 446, type: !14742)
!15103 = !DILocation(line: 0, scope: !15096)
!15104 = !DILocation(line: 457, column: 15, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15096, file: !2231, line: 457, column: 7)
!15106 = !DILocation(line: 457, column: 47, scope: !15105)
!15107 = !DILocation(line: 457, column: 7, scope: !15096)
!15108 = !DILocation(line: 458, column: 11, scope: !15105)
!15109 = !DILocation(line: 458, column: 17, scope: !15105)
!15110 = !DILocation(line: 458, column: 25, scope: !15105)
!15111 = !DILocation(line: 458, column: 5, scope: !15105)
!15112 = !DILocation(line: 460, column: 3, scope: !15096)
!15113 = distinct !DISubprogram(name: "mxmlNewOpaque", scope: !2231, file: !2231, line: 474, type: !15014, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15114)
!15114 = !{!15115, !15116, !15117}
!15115 = !DILocalVariable(name: "parent", arg: 1, scope: !15113, file: !2231, line: 474, type: !14742)
!15116 = !DILocalVariable(name: "opaque", arg: 2, scope: !15113, file: !2231, line: 475, type: !331)
!15117 = !DILocalVariable(name: "node", scope: !15113, file: !2231, line: 477, type: !14742)
!15118 = !DILocation(line: 0, scope: !15113)
!15119 = !DILocation(line: 489, column: 8, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15113, file: !2231, line: 489, column: 7)
!15121 = !DILocation(line: 489, column: 7, scope: !15113)
!15122 = !DILocation(line: 496, column: 15, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15113, file: !2231, line: 496, column: 7)
!15124 = !DILocation(line: 496, column: 46, scope: !15123)
!15125 = !DILocation(line: 496, column: 7, scope: !15113)
!15126 = !DILocation(line: 497, column: 26, scope: !15123)
!15127 = !DILocation(line: 497, column: 11, scope: !15123)
!15128 = !DILocation(line: 497, column: 17, scope: !15123)
!15129 = !DILocation(line: 497, column: 24, scope: !15123)
!15130 = !DILocation(line: 497, column: 5, scope: !15123)
!15131 = !DILocation(line: 500, column: 1, scope: !15113)
!15132 = distinct !DISubprogram(name: "mxmlNewReal", scope: !2231, file: !2231, line: 512, type: !15133, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15135)
!15133 = !DISubroutineType(types: !15134)
!15134 = !{!14742, !14742, !1236}
!15135 = !{!15136, !15137, !15138}
!15136 = !DILocalVariable(name: "parent", arg: 1, scope: !15132, file: !2231, line: 512, type: !14742)
!15137 = !DILocalVariable(name: "real", arg: 2, scope: !15132, file: !2231, line: 513, type: !1236)
!15138 = !DILocalVariable(name: "node", scope: !15132, file: !2231, line: 515, type: !14742)
!15139 = !DILocation(line: 0, scope: !15132)
!15140 = !DILocation(line: 526, column: 15, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15132, file: !2231, line: 526, column: 7)
!15142 = !DILocation(line: 526, column: 44, scope: !15141)
!15143 = !DILocation(line: 526, column: 7, scope: !15132)
!15144 = !DILocation(line: 527, column: 17, scope: !15141)
!15145 = !DILocation(line: 527, column: 22, scope: !15141)
!15146 = !DILocation(line: 527, column: 5, scope: !15141)
!15147 = !DILocation(line: 529, column: 3, scope: !15132)
!15148 = distinct !DISubprogram(name: "mxmlNewText", scope: !2231, file: !2231, line: 544, type: !15149, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15151)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{!14742, !14742, !7, !331}
!15151 = !{!15152, !15153, !15154, !15155}
!15152 = !DILocalVariable(name: "parent", arg: 1, scope: !15148, file: !2231, line: 544, type: !14742)
!15153 = !DILocalVariable(name: "whitespace", arg: 2, scope: !15148, file: !2231, line: 545, type: !7)
!15154 = !DILocalVariable(name: "string", arg: 3, scope: !15148, file: !2231, line: 546, type: !331)
!15155 = !DILocalVariable(name: "node", scope: !15148, file: !2231, line: 548, type: !14742)
!15156 = !DILocation(line: 0, scope: !15148)
!15157 = !DILocation(line: 560, column: 8, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15148, file: !2231, line: 560, column: 7)
!15159 = !DILocation(line: 560, column: 7, scope: !15148)
!15160 = !DILocation(line: 567, column: 15, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15148, file: !2231, line: 567, column: 7)
!15162 = !DILocation(line: 567, column: 44, scope: !15161)
!15163 = !DILocation(line: 567, column: 7, scope: !15148)
!15164 = !DILocation(line: 569, column: 11, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15161, file: !2231, line: 568, column: 3)
!15166 = !DILocation(line: 569, column: 17, scope: !15165)
!15167 = !DILocation(line: 569, column: 22, scope: !15165)
!15168 = !DILocation(line: 569, column: 33, scope: !15165)
!15169 = !DILocation(line: 570, column: 35, scope: !15165)
!15170 = !DILocation(line: 570, column: 22, scope: !15165)
!15171 = !DILocation(line: 570, column: 33, scope: !15165)
!15172 = !DILocation(line: 571, column: 3, scope: !15165)
!15173 = !DILocation(line: 574, column: 1, scope: !15148)
!15174 = distinct !DISubprogram(name: "mxmlNewTextf", scope: !2231, file: !2231, line: 588, type: !15175, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15177)
!15175 = !DISubroutineType(types: !15176)
!15176 = !{!14742, !14742, !7, !331, null}
!15177 = !{!15178, !15179, !15180, !15181, !15182}
!15178 = !DILocalVariable(name: "parent", arg: 1, scope: !15174, file: !2231, line: 588, type: !14742)
!15179 = !DILocalVariable(name: "whitespace", arg: 2, scope: !15174, file: !2231, line: 589, type: !7)
!15180 = !DILocalVariable(name: "format", arg: 3, scope: !15174, file: !2231, line: 590, type: !331)
!15181 = !DILocalVariable(name: "node", scope: !15174, file: !2231, line: 593, type: !14742)
!15182 = !DILocalVariable(name: "ap", scope: !15174, file: !2231, line: 594, type: !15183)
!15183 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5354, line: 46, baseType: !15184)
!15184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5356, line: 32, baseType: !15185)
!15185 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2231, baseType: !15186)
!15186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !15187)
!15187 = !{!15188}
!15188 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !15186, file: !2231, line: 594, baseType: !51, size: 32)
!15189 = !DILocation(line: 0, scope: !15174)
!15190 = !DILocation(line: 594, column: 3, scope: !15174)
!15191 = !DILocation(line: 594, column: 11, scope: !15174)
!15192 = !DILocation(line: 606, column: 8, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15174, file: !2231, line: 606, column: 7)
!15194 = !DILocation(line: 606, column: 7, scope: !15174)
!15195 = !DILocation(line: 613, column: 15, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15174, file: !2231, line: 613, column: 7)
!15197 = !DILocation(line: 613, column: 44, scope: !15196)
!15198 = !DILocation(line: 613, column: 7, scope: !15174)
!15199 = !DILocation(line: 615, column: 5, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15196, file: !2231, line: 614, column: 3)
!15201 = !DILocation(line: 617, column: 11, scope: !15200)
!15202 = !DILocation(line: 617, column: 17, scope: !15200)
!15203 = !DILocation(line: 617, column: 22, scope: !15200)
!15204 = !DILocation(line: 617, column: 33, scope: !15200)
!15205 = !DILocation(line: 618, column: 35, scope: !15200)
!15206 = !DILocation(line: 618, column: 22, scope: !15200)
!15207 = !DILocation(line: 618, column: 33, scope: !15200)
!15208 = !DILocation(line: 620, column: 5, scope: !15200)
!15209 = !DILocation(line: 621, column: 3, scope: !15200)
!15210 = !DILocation(line: 624, column: 1, scope: !15174)
!15211 = distinct !DISubprogram(name: "mxmlNewXML", scope: !2231, file: !2231, line: 704, type: !15212, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15214)
!15212 = !DISubroutineType(types: !15213)
!15213 = !{!14742, !331}
!15214 = !{!15215, !15216}
!15215 = !DILocalVariable(name: "version", arg: 1, scope: !15211, file: !2231, line: 704, type: !331)
!15216 = !DILocalVariable(name: "element", scope: !15211, file: !2231, line: 706, type: !15217)
!15217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 8192, elements: !15218)
!15218 = !{!15219}
!15219 = !DISubrange(count: 1024)
!15220 = !DILocation(line: 0, scope: !15211)
!15221 = !DILocation(line: 706, column: 3, scope: !15211)
!15222 = !DILocation(line: 706, column: 8, scope: !15211)
!15223 = !DILocation(line: 710, column: 12, scope: !15211)
!15224 = !DILocation(line: 709, column: 3, scope: !15211)
!15225 = !DILocation(line: 712, column: 11, scope: !15211)
!15226 = !DILocation(line: 713, column: 1, scope: !15211)
!15227 = !DILocation(line: 712, column: 3, scope: !15211)
!15228 = distinct !DISubprogram(name: "mxmlRelease", scope: !2231, file: !2231, line: 726, type: !15002, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15229)
!15229 = !{!15230}
!15230 = !DILocalVariable(name: "node", arg: 1, scope: !15228, file: !2231, line: 726, type: !14742)
!15231 = !DILocation(line: 0, scope: !15228)
!15232 = !DILocation(line: 728, column: 7, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15228, file: !2231, line: 728, column: 7)
!15234 = !DILocation(line: 728, column: 7, scope: !15228)
!15235 = !DILocation(line: 730, column: 19, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15237, file: !2231, line: 730, column: 9)
!15237 = distinct !DILexicalBlock(scope: !15233, file: !2231, line: 729, column: 3)
!15238 = !DILocation(line: 730, column: 10, scope: !15236)
!15239 = !DILocation(line: 730, column: 30, scope: !15236)
!15240 = !DILocation(line: 730, column: 9, scope: !15237)
!15241 = !DILocation(line: 732, column: 7, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15236, file: !2231, line: 731, column: 5)
!15243 = !DILocation(line: 733, column: 7, scope: !15242)
!15244 = !DILocation(line: 0, scope: !15233)
!15245 = !DILocation(line: 740, column: 1, scope: !15228)
!15246 = distinct !DISubprogram(name: "mxmlRetain", scope: !2231, file: !2231, line: 750, type: !15002, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2230, retainedNodes: !15247)
!15247 = !{!15248}
!15248 = !DILocalVariable(name: "node", arg: 1, scope: !15246, file: !2231, line: 750, type: !14742)
!15249 = !DILocation(line: 0, scope: !15246)
!15250 = !DILocation(line: 752, column: 7, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15246, file: !2231, line: 752, column: 7)
!15252 = !DILocation(line: 752, column: 7, scope: !15246)
!15253 = !DILocation(line: 753, column: 22, scope: !15251)
!15254 = !DILocation(line: 753, column: 13, scope: !15251)
!15255 = !DILocation(line: 753, column: 5, scope: !15251)
!15256 = !DILocation(line: 0, scope: !15251)
!15257 = !DILocation(line: 756, column: 1, scope: !15246)
!15258 = distinct !DISubprogram(name: "mxml_error", scope: !1329, file: !1329, line: 56, type: !15259, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !15261)
!15259 = !DISubroutineType(types: !15260)
!15260 = !{null, !331, null}
!15261 = !{!15262, !15263, !15270, !15271}
!15262 = !DILocalVariable(name: "format", arg: 1, scope: !15258, file: !1329, line: 56, type: !331)
!15263 = !DILocalVariable(name: "ap", scope: !15258, file: !1329, line: 59, type: !15264)
!15264 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5354, line: 46, baseType: !15265)
!15265 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5356, line: 32, baseType: !15266)
!15266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1329, baseType: !15267)
!15267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !15268)
!15268 = !{!15269}
!15269 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !15267, file: !1329, line: 59, baseType: !51, size: 32)
!15270 = !DILocalVariable(name: "s", scope: !15258, file: !1329, line: 60, type: !15217)
!15271 = !DILocalVariable(name: "global", scope: !15258, file: !1329, line: 61, type: !1332)
!15272 = !DILocation(line: 0, scope: !15258)
!15273 = !DILocation(line: 59, column: 3, scope: !15258)
!15274 = !DILocation(line: 59, column: 11, scope: !15258)
!15275 = !DILocation(line: 60, column: 3, scope: !15258)
!15276 = !DILocation(line: 60, column: 9, scope: !15258)
!15277 = !DILocation(line: 69, column: 8, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15258, file: !1329, line: 69, column: 7)
!15279 = !DILocation(line: 69, column: 7, scope: !15258)
!15280 = !DILocation(line: 76, column: 3, scope: !15258)
!15281 = !DILocation(line: 78, column: 3, scope: !15258)
!15282 = !DILocation(line: 80, column: 3, scope: !15258)
!15283 = !DILocation(line: 86, column: 15, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15258, file: !1329, line: 86, column: 7)
!15285 = !DILocation(line: 86, column: 7, scope: !15284)
!15286 = !DILocation(line: 86, column: 7, scope: !15258)
!15287 = !DILocation(line: 87, column: 5, scope: !15284)
!15288 = !DILocation(line: 89, column: 13, scope: !15284)
!15289 = !DILocation(line: 89, column: 5, scope: !15284)
!15290 = !DILocation(line: 90, column: 1, scope: !15258)
!15291 = !DILocation(line: 324, column: 3, scope: !1328)
!15292 = distinct !DISubprogram(name: "mxml_ignore_cb", scope: !1329, file: !1329, line: 98, type: !15293, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !15295)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{!1209, !1345}
!15295 = !{!15296}
!15296 = !DILocalVariable(name: "node", arg: 1, scope: !15292, file: !1329, line: 98, type: !1345)
!15297 = !DILocation(line: 0, scope: !15292)
!15298 = !DILocation(line: 102, column: 3, scope: !15292)
!15299 = distinct !DISubprogram(name: "mxml_integer_cb", scope: !1329, file: !1329, line: 111, type: !15293, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !15300)
!15300 = !{!15301}
!15301 = !DILocalVariable(name: "node", arg: 1, scope: !15299, file: !1329, line: 111, type: !1345)
!15302 = !DILocation(line: 0, scope: !15299)
!15303 = !DILocation(line: 115, column: 3, scope: !15299)
!15304 = distinct !DISubprogram(name: "mxml_opaque_cb", scope: !1329, file: !1329, line: 124, type: !15293, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !15305)
!15305 = !{!15306}
!15306 = !DILocalVariable(name: "node", arg: 1, scope: !15304, file: !1329, line: 124, type: !1345)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 128, column: 3, scope: !15304)
!15309 = distinct !DISubprogram(name: "mxml_real_cb", scope: !1329, file: !1329, line: 137, type: !15293, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !15310)
!15310 = !{!15311}
!15311 = !DILocalVariable(name: "node", arg: 1, scope: !15309, file: !1329, line: 137, type: !1345)
!15312 = !DILocation(line: 0, scope: !15309)
!15313 = !DILocation(line: 141, column: 3, scope: !15309)
!15314 = distinct !DISubprogram(name: "mxmlFindElement", scope: !2233, file: !2233, line: 41, type: !15315, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !15362)
!15315 = !DISubroutineType(types: !15316)
!15316 = !{!15317, !15317, !15317, !331, !331, !331, !7}
!15317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15318, size: 32)
!15318 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_node_t", file: !1173, line: 150, baseType: !15319)
!15319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_node_s", file: !1173, line: 137, size: 384, elements: !15320)
!15320 = !{!15321, !15322, !15324, !15325, !15326, !15327, !15328, !15360, !15361}
!15321 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15319, file: !1173, line: 139, baseType: !1209, size: 32)
!15322 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15319, file: !1173, line: 140, baseType: !15323, size: 32, offset: 32)
!15323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15319, size: 32)
!15324 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15319, file: !1173, line: 141, baseType: !15323, size: 32, offset: 64)
!15325 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !15319, file: !1173, line: 142, baseType: !15323, size: 32, offset: 96)
!15326 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !15319, file: !1173, line: 143, baseType: !15323, size: 32, offset: 128)
!15327 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !15319, file: !1173, line: 144, baseType: !15323, size: 32, offset: 160)
!15328 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !15319, file: !1173, line: 145, baseType: !15329, size: 128, offset: 192)
!15329 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_value_t", file: !1173, line: 135, baseType: !15330)
!15330 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mxml_value_u", file: !1173, line: 127, size: 128, elements: !15331)
!15331 = !{!15332, !15345, !15346, !15347, !15348, !15354}
!15332 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !15330, file: !1173, line: 129, baseType: !15333, size: 96)
!15333 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_element_t", file: !1173, line: 113, baseType: !15334)
!15334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_element_s", file: !1173, line: 108, size: 96, elements: !15335)
!15335 = !{!15336, !15337, !15338}
!15336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15334, file: !1173, line: 110, baseType: !201, size: 32)
!15337 = !DIDerivedType(tag: DW_TAG_member, name: "num_attrs", scope: !15334, file: !1173, line: 111, baseType: !7, size: 32, offset: 32)
!15338 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !15334, file: !1173, line: 112, baseType: !15339, size: 32, offset: 64)
!15339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15340, size: 32)
!15340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_attr_t", file: !1173, line: 106, baseType: !15341)
!15341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_attr_s", file: !1173, line: 102, size: 64, elements: !15342)
!15342 = !{!15343, !15344}
!15343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15341, file: !1173, line: 104, baseType: !201, size: 32)
!15344 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !15341, file: !1173, line: 105, baseType: !201, size: 32, offset: 32)
!15345 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !15330, file: !1173, line: 130, baseType: !7, size: 32)
!15346 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !15330, file: !1173, line: 131, baseType: !201, size: 32)
!15347 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !15330, file: !1173, line: 132, baseType: !1236, size: 64)
!15348 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !15330, file: !1173, line: 133, baseType: !15349, size: 64)
!15349 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_text_t", file: !1173, line: 119, baseType: !15350)
!15350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_text_s", file: !1173, line: 115, size: 64, elements: !15351)
!15351 = !{!15352, !15353}
!15352 = !DIDerivedType(tag: DW_TAG_member, name: "whitespace", scope: !15350, file: !1173, line: 117, baseType: !7, size: 32)
!15353 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !15350, file: !1173, line: 118, baseType: !201, size: 32, offset: 32)
!15354 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !15330, file: !1173, line: 134, baseType: !15355, size: 64)
!15355 = !DIDerivedType(tag: DW_TAG_typedef, name: "mxml_custom_t", file: !1173, line: 125, baseType: !15356)
!15356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxml_custom_s", file: !1173, line: 121, size: 64, elements: !15357)
!15357 = !{!15358, !15359}
!15358 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15356, file: !1173, line: 123, baseType: !51, size: 32)
!15359 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !15356, file: !1173, line: 124, baseType: !1249, size: 32, offset: 32)
!15360 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !15319, file: !1173, line: 146, baseType: !7, size: 32, offset: 320)
!15361 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !15319, file: !1173, line: 147, baseType: !51, size: 32, offset: 352)
!15362 = !{!15363, !15364, !15365, !15366, !15367, !15368, !15369}
!15363 = !DILocalVariable(name: "node", arg: 1, scope: !15314, file: !2233, line: 41, type: !15317)
!15364 = !DILocalVariable(name: "top", arg: 2, scope: !15314, file: !2233, line: 42, type: !15317)
!15365 = !DILocalVariable(name: "name", arg: 3, scope: !15314, file: !2233, line: 43, type: !331)
!15366 = !DILocalVariable(name: "attr", arg: 4, scope: !15314, file: !2233, line: 44, type: !331)
!15367 = !DILocalVariable(name: "value", arg: 5, scope: !15314, file: !2233, line: 45, type: !331)
!15368 = !DILocalVariable(name: "descend", arg: 6, scope: !15314, file: !2233, line: 46, type: !7)
!15369 = !DILocalVariable(name: "temp", scope: !15314, file: !2233, line: 48, type: !331)
!15370 = !DILocation(line: 0, scope: !15314)
!15371 = !DILocation(line: 55, column: 8, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15314, file: !2233, line: 55, column: 7)
!15373 = !DILocation(line: 55, column: 13, scope: !15372)
!15374 = !DILocation(line: 55, column: 26, scope: !15372)
!15375 = !DILocation(line: 55, column: 31, scope: !15372)
!15376 = !DILocation(line: 62, column: 10, scope: !15314)
!15377 = !DILocation(line: 68, column: 15, scope: !15314)
!15378 = !DILocation(line: 68, column: 3, scope: !15314)
!15379 = !DILocation(line: 74, column: 15, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !2233, line: 74, column: 9)
!15381 = distinct !DILexicalBlock(scope: !15314, file: !2233, line: 69, column: 3)
!15382 = !DILocation(line: 74, column: 20, scope: !15380)
!15383 = !DILocation(line: 74, column: 36, scope: !15380)
!15384 = !DILocation(line: 75, column: 15, scope: !15380)
!15385 = !DILocation(line: 75, column: 29, scope: !15380)
!15386 = !DILocation(line: 75, column: 9, scope: !15380)
!15387 = !DILocation(line: 75, column: 34, scope: !15380)
!15388 = !DILocation(line: 76, column: 9, scope: !15380)
!15389 = !DILocation(line: 76, column: 13, scope: !15380)
!15390 = !DILocation(line: 74, column: 9, scope: !15381)
!15391 = !DILocation(line: 82, column: 11, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15380, file: !2233, line: 77, column: 5)
!15393 = !DILocation(line: 89, column: 19, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15392, file: !2233, line: 89, column: 11)
!15395 = !DILocation(line: 89, column: 51, scope: !15394)
!15396 = !DILocation(line: 89, column: 11, scope: !15392)
!15397 = !DILocation(line: 95, column: 13, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15399, file: !2233, line: 95, column: 6)
!15399 = distinct !DILexicalBlock(scope: !15394, file: !2233, line: 90, column: 7)
!15400 = !DILocation(line: 95, column: 17, scope: !15398)
!15401 = !DILocation(line: 95, column: 6, scope: !15399)
!15402 = !DILocation(line: 104, column: 9, scope: !15381)
!15403 = !DILocation(line: 105, column: 14, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15381, file: !2233, line: 104, column: 9)
!15405 = !DILocation(line: 105, column: 7, scope: !15404)
!15406 = !DILocation(line: 107, column: 20, scope: !15404)
!15407 = !DILocation(line: 0, scope: !15404)
!15408 = distinct !{!15408, !15378, !15409}
!15409 = !DILocation(line: 108, column: 3, scope: !15314)
!15410 = !DILocation(line: 111, column: 1, scope: !15314)
!15411 = distinct !DISubprogram(name: "mxmlWalkNext", scope: !2233, file: !2233, line: 210, type: !15412, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !15414)
!15412 = !DISubroutineType(types: !15413)
!15413 = !{!15317, !15317, !15317, !7}
!15414 = !{!15415, !15416, !15417}
!15415 = !DILocalVariable(name: "node", arg: 1, scope: !15411, file: !2233, line: 210, type: !15317)
!15416 = !DILocalVariable(name: "top", arg: 2, scope: !15411, file: !2233, line: 211, type: !15317)
!15417 = !DILocalVariable(name: "descend", arg: 3, scope: !15411, file: !2233, line: 212, type: !7)
!15418 = !DILocation(line: 0, scope: !15411)
!15419 = !DILocation(line: 214, column: 8, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15411, file: !2233, line: 214, column: 7)
!15421 = !DILocation(line: 214, column: 7, scope: !15411)
!15422 = !DILocation(line: 216, column: 18, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15420, file: !2233, line: 216, column: 12)
!15424 = !DILocation(line: 216, column: 12, scope: !15423)
!15425 = !DILocation(line: 216, column: 24, scope: !15423)
!15426 = !DILocation(line: 218, column: 17, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15423, file: !2233, line: 218, column: 12)
!15428 = !DILocation(line: 218, column: 12, scope: !15423)
!15429 = !DILocation(line: 220, column: 18, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15427, file: !2233, line: 220, column: 12)
!15431 = !DILocation(line: 220, column: 12, scope: !15430)
!15432 = !DILocation(line: 220, column: 12, scope: !15427)
!15433 = !DILocation(line: 222, column: 18, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15430, file: !2233, line: 222, column: 12)
!15435 = !DILocation(line: 222, column: 12, scope: !15434)
!15436 = !DILocation(line: 222, column: 25, scope: !15434)
!15437 = !DILocation(line: 0, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15434, file: !2233, line: 223, column: 3)
!15439 = !DILocation(line: 226, column: 19, scope: !15438)
!15440 = !DILocation(line: 226, column: 12, scope: !15438)
!15441 = !DILocation(line: 226, column: 5, scope: !15438)
!15442 = !DILocation(line: 227, column: 17, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15438, file: !2233, line: 227, column: 11)
!15444 = !DILocation(line: 227, column: 24, scope: !15443)
!15445 = !DILocation(line: 227, column: 31, scope: !15443)
!15446 = distinct !{!15446, !15441, !15447}
!15447 = !DILocation(line: 230, column: 22, scope: !15438)
!15448 = !DILocation(line: 0, scope: !15420)
!15449 = !DILocation(line: 236, column: 1, scope: !15411)
!15450 = distinct !DISubprogram(name: "mxmlFindPath", scope: !2233, file: !2233, line: 128, type: !15451, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !15453)
!15451 = !DISubroutineType(types: !15452)
!15452 = !{!15317, !15317, !331}
!15453 = !{!15454, !15455, !15456, !15457, !15461, !15462}
!15454 = !DILocalVariable(name: "top", arg: 1, scope: !15450, file: !2233, line: 128, type: !15317)
!15455 = !DILocalVariable(name: "path", arg: 2, scope: !15450, file: !2233, line: 129, type: !331)
!15456 = !DILocalVariable(name: "node", scope: !15450, file: !2233, line: 131, type: !15317)
!15457 = !DILocalVariable(name: "element", scope: !15450, file: !2233, line: 132, type: !15458)
!15458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 2048, elements: !15459)
!15459 = !{!15460}
!15460 = !DISubrange(count: 256)
!15461 = !DILocalVariable(name: "pathsep", scope: !15450, file: !2233, line: 133, type: !331)
!15462 = !DILocalVariable(name: "descend", scope: !15450, file: !2233, line: 134, type: !7)
!15463 = !DILocation(line: 0, scope: !15450)
!15464 = !DILocation(line: 132, column: 3, scope: !15450)
!15465 = !DILocation(line: 132, column: 9, scope: !15450)
!15466 = !DILocation(line: 141, column: 8, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15450, file: !2233, line: 141, column: 7)
!15468 = !DILocation(line: 141, column: 12, scope: !15467)
!15469 = !DILocation(line: 141, column: 25, scope: !15467)
!15470 = !DILocation(line: 141, column: 7, scope: !15450)
!15471 = !DILocation(line: 149, column: 10, scope: !15450)
!15472 = !DILocation(line: 149, column: 3, scope: !15450)
!15473 = !DILocation(line: 155, column: 10, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15475, file: !2233, line: 155, column: 9)
!15475 = distinct !DILexicalBlock(scope: !15450, file: !2233, line: 150, column: 3)
!15476 = !DILocation(line: 155, column: 9, scope: !15475)
!15477 = !DILocation(line: 167, column: 20, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15475, file: !2233, line: 167, column: 9)
!15479 = !DILocation(line: 167, column: 39, scope: !15478)
!15480 = !DILocation(line: 167, column: 9, scope: !15475)
!15481 = !DILocation(line: 168, column: 24, scope: !15478)
!15482 = !DILocation(line: 168, column: 22, scope: !15478)
!15483 = !DILocation(line: 168, column: 7, scope: !15478)
!15484 = !DILocation(line: 0, scope: !15478)
!15485 = !DILocation(line: 170, column: 17, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15475, file: !2233, line: 170, column: 9)
!15487 = !DILocation(line: 170, column: 25, scope: !15486)
!15488 = !DILocation(line: 170, column: 37, scope: !15486)
!15489 = !DILocation(line: 170, column: 45, scope: !15486)
!15490 = !DILocation(line: 170, column: 9, scope: !15475)
!15491 = !DILocation(line: 173, column: 5, scope: !15475)
!15492 = !DILocation(line: 174, column: 5, scope: !15475)
!15493 = !DILocation(line: 174, column: 29, scope: !15475)
!15494 = !DILocation(line: 176, column: 9, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15475, file: !2233, line: 176, column: 9)
!15496 = !DILocation(line: 176, column: 9, scope: !15475)
!15497 = !DILocation(line: 185, column: 17, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15475, file: !2233, line: 185, column: 9)
!15499 = !DILocation(line: 186, column: 43, scope: !15498)
!15500 = !DILocation(line: 185, column: 9, scope: !15475)
!15501 = distinct !{!15501, !15472, !15502}
!15502 = !DILocation(line: 188, column: 3, scope: !15450)
!15503 = !DILocation(line: 194, column: 13, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15450, file: !2233, line: 194, column: 7)
!15505 = !DILocation(line: 194, column: 7, scope: !15504)
!15506 = !DILocation(line: 194, column: 19, scope: !15504)
!15507 = !DILocation(line: 194, column: 35, scope: !15504)
!15508 = !DILocation(line: 194, column: 40, scope: !15504)
!15509 = !DILocation(line: 194, column: 7, scope: !15450)
!15510 = !DILocation(line: 197, column: 5, scope: !15504)
!15511 = !DILocation(line: 198, column: 1, scope: !15450)
!15512 = distinct !DISubprogram(name: "mxmlWalkPrev", scope: !2233, file: !2233, line: 248, type: !15412, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2232, retainedNodes: !15513)
!15513 = !{!15514, !15515, !15516}
!15514 = !DILocalVariable(name: "node", arg: 1, scope: !15512, file: !2233, line: 248, type: !15317)
!15515 = !DILocalVariable(name: "top", arg: 2, scope: !15512, file: !2233, line: 249, type: !15317)
!15516 = !DILocalVariable(name: "descend", arg: 3, scope: !15512, file: !2233, line: 250, type: !7)
!15517 = !DILocation(line: 0, scope: !15512)
!15518 = !DILocation(line: 252, column: 8, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15512, file: !2233, line: 252, column: 7)
!15520 = !DILocation(line: 252, column: 13, scope: !15519)
!15521 = !DILocation(line: 254, column: 18, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15519, file: !2233, line: 254, column: 12)
!15523 = !DILocation(line: 254, column: 12, scope: !15522)
!15524 = !DILocation(line: 254, column: 12, scope: !15519)
!15525 = !DILocation(line: 256, column: 21, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2233, line: 256, column: 9)
!15527 = distinct !DILexicalBlock(scope: !15522, file: !2233, line: 255, column: 3)
!15528 = !DILocation(line: 256, column: 9, scope: !15526)
!15529 = !DILocation(line: 256, column: 32, scope: !15526)
!15530 = !DILocation(line: 0, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15526, file: !2233, line: 257, column: 5)
!15532 = !DILocation(line: 264, column: 20, scope: !15531)
!15533 = !DILocation(line: 264, column: 7, scope: !15531)
!15534 = distinct !{!15534, !15533, !15535}
!15535 = !DILocation(line: 265, column: 22, scope: !15531)
!15536 = !DILocation(line: 272, column: 18, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15522, file: !2233, line: 272, column: 12)
!15538 = !DILocation(line: 272, column: 25, scope: !15537)
!15539 = !DILocation(line: 0, scope: !15537)
!15540 = !DILocation(line: 0, scope: !15519)
!15541 = !DILocation(line: 276, column: 1, scope: !15512)
!15542 = distinct !DISubprogram(name: "_mxml_strdup", scope: !2235, file: !2235, line: 68, type: !15543, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2234, retainedNodes: !15545)
!15543 = !DISubroutineType(types: !15544)
!15544 = !{!201, !331}
!15545 = !{!15546, !15547}
!15546 = !DILocalVariable(name: "s", arg: 1, scope: !15542, file: !2235, line: 68, type: !331)
!15547 = !DILocalVariable(name: "t", scope: !15542, file: !2235, line: 70, type: !201)
!15548 = !DILocation(line: 0, scope: !15542)
!15549 = !DILocation(line: 73, column: 9, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15542, file: !2235, line: 73, column: 7)
!15551 = !DILocation(line: 73, column: 7, scope: !15542)
!15552 = !DILocation(line: 76, column: 19, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !15542, file: !2235, line: 76, column: 7)
!15554 = !DILocation(line: 76, column: 29, scope: !15553)
!15555 = !DILocation(line: 76, column: 12, scope: !15553)
!15556 = !DILocation(line: 76, column: 35, scope: !15553)
!15557 = !DILocation(line: 76, column: 7, scope: !15542)
!15558 = !DILocation(line: 79, column: 11, scope: !15542)
!15559 = !DILocation(line: 79, column: 3, scope: !15542)
!15560 = !DILocation(line: 80, column: 1, scope: !15542)
!15561 = distinct !DISubprogram(name: "_mxml_strdupf", scope: !2235, file: !2235, line: 89, type: !15562, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2234, retainedNodes: !15564)
!15562 = !DISubroutineType(types: !15563)
!15563 = !{!201, !331, null}
!15564 = !{!15565, !15566, !15573}
!15565 = !DILocalVariable(name: "format", arg: 1, scope: !15561, file: !2235, line: 89, type: !331)
!15566 = !DILocalVariable(name: "ap", scope: !15561, file: !2235, line: 92, type: !15567)
!15567 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5354, line: 46, baseType: !15568)
!15568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5356, line: 32, baseType: !15569)
!15569 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2235, baseType: !15570)
!15570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !15571)
!15571 = !{!15572}
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !15570, file: !2235, line: 92, baseType: !51, size: 32)
!15573 = !DILocalVariable(name: "s", scope: !15561, file: !2235, line: 93, type: !201)
!15574 = !DILocation(line: 0, scope: !15561)
!15575 = !DILocation(line: 92, column: 3, scope: !15561)
!15576 = !DILocation(line: 92, column: 11, scope: !15561)
!15577 = !DILocation(line: 101, column: 3, scope: !15561)
!15578 = !DILocation(line: 102, column: 7, scope: !15561)
!15579 = !DILocation(line: 103, column: 3, scope: !15561)
!15580 = !DILocation(line: 106, column: 1, scope: !15561)
!15581 = !DILocation(line: 105, column: 3, scope: !15561)
!15582 = distinct !DISubprogram(name: "_mxml_vstrdupf", scope: !2235, file: !2235, line: 425, type: !15583, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2234, retainedNodes: !15585)
!15583 = !DISubroutineType(types: !15584)
!15584 = !{!201, !331, !15567}
!15585 = !{!15586, !15587, !15588, !15589, !15590, !15591}
!15586 = !DILocalVariable(name: "format", arg: 1, scope: !15582, file: !2235, line: 425, type: !331)
!15587 = !DILocalVariable(name: "ap", arg: 2, scope: !15582, file: !2235, line: 426, type: !15567)
!15588 = !DILocalVariable(name: "bytes", scope: !15582, file: !2235, line: 428, type: !7)
!15589 = !DILocalVariable(name: "buffer", scope: !15582, file: !2235, line: 429, type: !201)
!15590 = !DILocalVariable(name: "temp", scope: !15582, file: !2235, line: 430, type: !15458)
!15591 = !DILocalVariable(name: "apcopy", scope: !15582, file: !2235, line: 431, type: !15567)
!15592 = !DILocation(line: 0, scope: !15582)
!15593 = !DILocation(line: 426, column: 27, scope: !15582)
!15594 = !DILocation(line: 429, column: 3, scope: !15582)
!15595 = !DILocation(line: 430, column: 3, scope: !15582)
!15596 = !DILocation(line: 431, column: 3, scope: !15582)
!15597 = !DILocation(line: 431, column: 11, scope: !15582)
!15598 = !DILocation(line: 439, column: 3, scope: !15582)
!15599 = !DILocation(line: 440, column: 11, scope: !15582)
!15600 = !DILocation(line: 442, column: 13, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15582, file: !2235, line: 442, column: 7)
!15602 = !DILocation(line: 442, column: 7, scope: !15582)
!15603 = !DILocation(line: 448, column: 13, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15601, file: !2235, line: 443, column: 3)
!15605 = !DILocation(line: 448, column: 5, scope: !15604)
!15606 = !DILocation(line: 456, column: 33, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15582, file: !2235, line: 456, column: 7)
!15608 = !DILocation(line: 456, column: 17, scope: !15607)
!15609 = !DILocation(line: 456, column: 39, scope: !15607)
!15610 = !DILocation(line: 456, column: 7, scope: !15582)
!15611 = !DILocation(line: 457, column: 5, scope: !15607)
!15612 = !DILocation(line: 464, column: 1, scope: !15582)
!15613 = distinct !DISubprogram(name: "abort", scope: !1401, file: !1401, line: 108, type: !154, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!15614 = !DILocation(line: 110, column: 5, scope: !15613)
!15615 = !{i64 4281}
!15616 = !DILocation(line: 111, column: 14, scope: !15613)
!15617 = !DILocation(line: 112, column: 45, scope: !15613)
!15618 = !DILocation(line: 113, column: 5, scope: !15613)
!15619 = !DILocation(line: 113, column: 5, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15621, file: !1401, line: 113, column: 5)
!15621 = distinct !DILexicalBlock(scope: !15613, file: !1401, line: 113, column: 5)
!15622 = distinct !{!15622, !15623, !15624}
!15623 = !DILocation(line: 113, column: 5, scope: !15621)
!15624 = !DILocation(line: 113, column: 13, scope: !15621)
!15625 = distinct !DISubprogram(name: "platform_assert", scope: !1401, file: !1401, line: 116, type: !15626, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15628)
!15626 = !DISubroutineType(types: !15627)
!15627 = !{null, !331, !331, !7}
!15628 = !{!15629, !15630, !15631}
!15629 = !DILocalVariable(name: "expr", arg: 1, scope: !15625, file: !1401, line: 116, type: !331)
!15630 = !DILocalVariable(name: "file", arg: 2, scope: !15625, file: !1401, line: 116, type: !331)
!15631 = !DILocalVariable(name: "line", arg: 3, scope: !15625, file: !1401, line: 116, type: !7)
!15632 = !DILocation(line: 0, scope: !15625)
!15633 = !DILocation(line: 118, column: 5, scope: !15625)
!15634 = !{i64 4480}
!15635 = !DILocation(line: 119, column: 14, scope: !15625)
!15636 = !DILocation(line: 120, column: 26, scope: !15625)
!15637 = !DILocation(line: 121, column: 22, scope: !15625)
!15638 = !DILocation(line: 122, column: 22, scope: !15625)
!15639 = !DILocation(line: 123, column: 22, scope: !15625)
!15640 = !DILocation(line: 124, column: 45, scope: !15625)
!15641 = !DILocation(line: 125, column: 5, scope: !15625)
!15642 = !DILocation(line: 125, column: 5, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15644, file: !1401, line: 125, column: 5)
!15644 = distinct !DILexicalBlock(scope: !15625, file: !1401, line: 125, column: 5)
!15645 = distinct !{!15645, !15646, !15647}
!15646 = !DILocation(line: 125, column: 5, scope: !15644)
!15647 = !DILocation(line: 125, column: 13, scope: !15644)
!15648 = distinct !DISubprogram(name: "exception_dump_config", scope: !1401, file: !1401, line: 128, type: !1951, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15649)
!15649 = !{!15650}
!15650 = !DILocalVariable(name: "flag", arg: 1, scope: !15648, file: !1401, line: 128, type: !7)
!15651 = !DILocation(line: 0, scope: !15648)
!15652 = !DILocation(line: 130, column: 17, scope: !15648)
!15653 = !DILocation(line: 131, column: 1, scope: !15648)
!15654 = distinct !DISubprogram(name: "exception_register_callbacks", scope: !1401, file: !1401, line: 142, type: !15655, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15658)
!15655 = !DISubroutineType(types: !15656)
!15656 = !{!69, !15657}
!15657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!15658 = !{!15659, !15660}
!15659 = !DILocalVariable(name: "cb", arg: 1, scope: !15654, file: !1401, line: 142, type: !15657)
!15660 = !DILocalVariable(name: "i", scope: !15654, file: !1401, line: 144, type: !7)
!15661 = !DILocation(line: 0, scope: !15654)
!15662 = !DILocation(line: 146, column: 26, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15654, file: !1401, line: 146, column: 9)
!15664 = !DILocation(line: 146, column: 32, scope: !15663)
!15665 = !DILocation(line: 146, column: 9, scope: !15654)
!15666 = !DILocation(line: 150, column: 22, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !1401, line: 150, column: 8)
!15668 = distinct !DILexicalBlock(scope: !15669, file: !1401, line: 150, column: 8)
!15669 = distinct !DILexicalBlock(scope: !15663, file: !1401, line: 148, column: 12)
!15670 = !DILocation(line: 150, column: 8, scope: !15668)
!15671 = !DILocation(line: 151, column: 45, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15673, file: !1401, line: 151, column: 17)
!15673 = distinct !DILexicalBlock(scope: !15667, file: !1401, line: 150, column: 53)
!15674 = !DILocation(line: 151, column: 53, scope: !15672)
!15675 = !DILocation(line: 152, column: 14, scope: !15672)
!15676 = !DILocation(line: 152, column: 45, scope: !15672)
!15677 = !DILocation(line: 152, column: 60, scope: !15672)
!15678 = !DILocation(line: 152, column: 53, scope: !15672)
!15679 = !DILocation(line: 151, column: 17, scope: !15673)
!15680 = !DILocation(line: 150, column: 49, scope: !15667)
!15681 = distinct !{!15681, !15670, !15682}
!15682 = !DILocation(line: 155, column: 8, scope: !15668)
!15683 = !DILocation(line: 156, column: 57, scope: !15669)
!15684 = !DILocation(line: 156, column: 65, scope: !15669)
!15685 = !DILocation(line: 157, column: 71, scope: !15669)
!15686 = !DILocation(line: 157, column: 57, scope: !15669)
!15687 = !DILocation(line: 157, column: 65, scope: !15669)
!15688 = !DILocation(line: 158, column: 30, scope: !15669)
!15689 = !DILocation(line: 159, column: 8, scope: !15669)
!15690 = !DILocation(line: 0, scope: !15663)
!15691 = !DILocation(line: 161, column: 1, scope: !15654)
!15692 = distinct !DISubprogram(name: "exception_init", scope: !1401, file: !1401, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15693)
!15693 = !{!15694}
!15694 = !DILocalVariable(name: "i", scope: !15692, file: !1401, line: 165, type: !7)
!15695 = !DILocation(line: 167, column: 14, scope: !15692)
!15696 = !DILocation(line: 170, column: 5, scope: !15692)
!15697 = !DILocation(line: 0, scope: !15692)
!15698 = !DILocation(line: 177, column: 38, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15700, file: !1401, line: 177, column: 5)
!15700 = distinct !DILexicalBlock(scope: !15692, file: !1401, line: 177, column: 5)
!15701 = !DILocation(line: 177, column: 19, scope: !15699)
!15702 = !DILocation(line: 177, column: 5, scope: !15700)
!15703 = !DILocation(line: 178, column: 41, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15705, file: !1401, line: 178, column: 13)
!15705 = distinct !DILexicalBlock(scope: !15699, file: !1401, line: 177, column: 50)
!15706 = !DILocation(line: 178, column: 13, scope: !15704)
!15707 = !DILocation(line: 178, column: 13, scope: !15705)
!15708 = !DILocation(line: 179, column: 13, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15704, file: !1401, line: 178, column: 50)
!15710 = !DILocation(line: 180, column: 9, scope: !15709)
!15711 = !DILocation(line: 177, column: 46, scope: !15699)
!15712 = distinct !{!15712, !15702, !15713}
!15713 = !DILocation(line: 181, column: 5, scope: !15700)
!15714 = !DILocation(line: 183, column: 21, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15692, file: !1401, line: 183, column: 9)
!15716 = !DILocation(line: 183, column: 9, scope: !15692)
!15717 = !DILocation(line: 185, column: 28, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15715, file: !1401, line: 183, column: 31)
!15719 = !DILocation(line: 186, column: 28, scope: !15718)
!15720 = !DILocation(line: 187, column: 28, scope: !15718)
!15721 = !DILocation(line: 184, column: 9, scope: !15718)
!15722 = !DILocation(line: 188, column: 5, scope: !15718)
!15723 = !DILocation(line: 189, column: 1, scope: !15692)
!15724 = distinct !DISubprogram(name: "NMI_Handler", scope: !1401, file: !1401, line: 196, type: !154, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!15725 = !DILocation(line: 198, column: 1, scope: !15724)
!15726 = distinct !DISubprogram(name: "printUsageErrorMsg", scope: !1401, file: !1401, line: 200, type: !2873, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15727)
!15727 = !{!15728}
!15728 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !15726, file: !1401, line: 200, type: !61)
!15729 = !DILocation(line: 0, scope: !15726)
!15730 = !DILocation(line: 202, column: 5, scope: !15726)
!15731 = !DILocation(line: 204, column: 32, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15726, file: !1401, line: 204, column: 9)
!15733 = !DILocation(line: 204, column: 9, scope: !15726)
!15734 = !DILocation(line: 205, column: 9, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15732, file: !1401, line: 204, column: 38)
!15736 = !DILocation(line: 206, column: 5, scope: !15735)
!15737 = !DILocation(line: 207, column: 32, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15726, file: !1401, line: 207, column: 9)
!15739 = !DILocation(line: 207, column: 9, scope: !15726)
!15740 = !DILocation(line: 208, column: 9, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15738, file: !1401, line: 207, column: 38)
!15742 = !DILocation(line: 209, column: 5, scope: !15741)
!15743 = !DILocation(line: 210, column: 32, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15726, file: !1401, line: 210, column: 9)
!15745 = !DILocation(line: 210, column: 9, scope: !15726)
!15746 = !DILocation(line: 211, column: 9, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15744, file: !1401, line: 210, column: 38)
!15748 = !DILocation(line: 212, column: 5, scope: !15747)
!15749 = !DILocation(line: 213, column: 32, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15726, file: !1401, line: 213, column: 9)
!15751 = !DILocation(line: 213, column: 9, scope: !15726)
!15752 = !DILocation(line: 214, column: 9, scope: !15753)
!15753 = distinct !DILexicalBlock(scope: !15750, file: !1401, line: 213, column: 38)
!15754 = !DILocation(line: 215, column: 5, scope: !15753)
!15755 = !DILocation(line: 216, column: 32, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15726, file: !1401, line: 216, column: 9)
!15757 = !DILocation(line: 216, column: 9, scope: !15726)
!15758 = !DILocation(line: 217, column: 9, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15756, file: !1401, line: 216, column: 38)
!15760 = !DILocation(line: 218, column: 5, scope: !15759)
!15761 = !DILocation(line: 219, column: 32, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15726, file: !1401, line: 219, column: 9)
!15763 = !DILocation(line: 219, column: 9, scope: !15726)
!15764 = !DILocation(line: 220, column: 9, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15762, file: !1401, line: 219, column: 38)
!15766 = !DILocation(line: 221, column: 5, scope: !15765)
!15767 = !DILocation(line: 222, column: 1, scope: !15726)
!15768 = distinct !DISubprogram(name: "printMemoryManagementErrorMsg", scope: !1401, file: !1401, line: 224, type: !2873, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15769)
!15769 = !{!15770}
!15770 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !15768, file: !1401, line: 224, type: !61)
!15771 = !DILocation(line: 0, scope: !15768)
!15772 = !DILocation(line: 226, column: 5, scope: !15768)
!15773 = !DILocation(line: 228, column: 20, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15768, file: !1401, line: 228, column: 9)
!15775 = !DILocation(line: 228, column: 32, scope: !15774)
!15776 = !DILocation(line: 228, column: 9, scope: !15768)
!15777 = !DILocation(line: 229, column: 9, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15774, file: !1401, line: 228, column: 38)
!15779 = !DILocation(line: 230, column: 5, scope: !15778)
!15780 = !DILocation(line: 231, column: 20, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15768, file: !1401, line: 231, column: 9)
!15782 = !DILocation(line: 231, column: 32, scope: !15781)
!15783 = !DILocation(line: 231, column: 9, scope: !15768)
!15784 = !DILocation(line: 232, column: 9, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15781, file: !1401, line: 231, column: 38)
!15786 = !DILocation(line: 233, column: 5, scope: !15785)
!15787 = !DILocation(line: 234, column: 20, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15768, file: !1401, line: 234, column: 9)
!15789 = !DILocation(line: 234, column: 32, scope: !15788)
!15790 = !DILocation(line: 234, column: 9, scope: !15768)
!15791 = !DILocation(line: 235, column: 9, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15788, file: !1401, line: 234, column: 38)
!15793 = !DILocation(line: 236, column: 5, scope: !15792)
!15794 = !DILocation(line: 237, column: 20, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15768, file: !1401, line: 237, column: 9)
!15796 = !DILocation(line: 237, column: 32, scope: !15795)
!15797 = !DILocation(line: 237, column: 9, scope: !15768)
!15798 = !DILocation(line: 238, column: 72, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15795, file: !1401, line: 237, column: 38)
!15800 = !DILocation(line: 238, column: 9, scope: !15799)
!15801 = !DILocation(line: 239, column: 5, scope: !15799)
!15802 = !DILocation(line: 240, column: 20, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15768, file: !1401, line: 240, column: 9)
!15804 = !DILocation(line: 240, column: 32, scope: !15803)
!15805 = !DILocation(line: 240, column: 9, scope: !15768)
!15806 = !DILocation(line: 241, column: 9, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15803, file: !1401, line: 240, column: 38)
!15808 = !DILocation(line: 242, column: 5, scope: !15807)
!15809 = !DILocation(line: 243, column: 20, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15768, file: !1401, line: 243, column: 9)
!15811 = !DILocation(line: 243, column: 32, scope: !15810)
!15812 = !DILocation(line: 243, column: 9, scope: !15768)
!15813 = !DILocation(line: 244, column: 62, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15810, file: !1401, line: 243, column: 38)
!15815 = !DILocation(line: 244, column: 9, scope: !15814)
!15816 = !DILocation(line: 245, column: 5, scope: !15814)
!15817 = !DILocation(line: 246, column: 1, scope: !15768)
!15818 = distinct !DISubprogram(name: "printBusFaultErrorMsg", scope: !1401, file: !1401, line: 248, type: !2873, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15819)
!15819 = !{!15820}
!15820 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !15818, file: !1401, line: 248, type: !61)
!15821 = !DILocation(line: 0, scope: !15818)
!15822 = !DILocation(line: 250, column: 5, scope: !15818)
!15823 = !DILocation(line: 253, column: 32, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15818, file: !1401, line: 253, column: 9)
!15825 = !DILocation(line: 253, column: 9, scope: !15818)
!15826 = !DILocation(line: 254, column: 9, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15824, file: !1401, line: 253, column: 38)
!15828 = !DILocation(line: 255, column: 5, scope: !15827)
!15829 = !DILocation(line: 256, column: 32, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !15818, file: !1401, line: 256, column: 9)
!15831 = !DILocation(line: 256, column: 9, scope: !15818)
!15832 = !DILocation(line: 257, column: 9, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15830, file: !1401, line: 256, column: 38)
!15834 = !DILocation(line: 258, column: 5, scope: !15833)
!15835 = !DILocation(line: 259, column: 32, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !15818, file: !1401, line: 259, column: 9)
!15837 = !DILocation(line: 259, column: 9, scope: !15818)
!15838 = !DILocation(line: 260, column: 9, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15836, file: !1401, line: 259, column: 38)
!15840 = !DILocation(line: 261, column: 5, scope: !15839)
!15841 = !DILocation(line: 262, column: 32, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15818, file: !1401, line: 262, column: 9)
!15843 = !DILocation(line: 262, column: 9, scope: !15818)
!15844 = !DILocation(line: 263, column: 9, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15842, file: !1401, line: 262, column: 38)
!15846 = !DILocation(line: 264, column: 5, scope: !15845)
!15847 = !DILocation(line: 265, column: 32, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15818, file: !1401, line: 265, column: 9)
!15849 = !DILocation(line: 265, column: 9, scope: !15818)
!15850 = !DILocation(line: 266, column: 90, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15848, file: !1401, line: 265, column: 38)
!15852 = !DILocation(line: 266, column: 9, scope: !15851)
!15853 = !DILocation(line: 267, column: 5, scope: !15851)
!15854 = !DILocation(line: 268, column: 32, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15818, file: !1401, line: 268, column: 9)
!15856 = !DILocation(line: 268, column: 9, scope: !15818)
!15857 = !DILocation(line: 269, column: 9, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15855, file: !1401, line: 268, column: 38)
!15859 = !DILocation(line: 270, column: 5, scope: !15858)
!15860 = !DILocation(line: 271, column: 32, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15818, file: !1401, line: 271, column: 9)
!15862 = !DILocation(line: 271, column: 9, scope: !15818)
!15863 = !DILocation(line: 272, column: 61, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15861, file: !1401, line: 271, column: 38)
!15865 = !DILocation(line: 272, column: 9, scope: !15864)
!15866 = !DILocation(line: 273, column: 5, scope: !15864)
!15867 = !DILocation(line: 274, column: 1, scope: !15818)
!15868 = distinct !DISubprogram(name: "exception_reboot", scope: !1401, file: !1401, line: 799, type: !154, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!15869 = !DILocation(line: 805, column: 5, scope: !15868)
!15870 = distinct !DISubprogram(name: "stackDump", scope: !1401, file: !1401, line: 823, type: !15871, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !15873)
!15871 = !DISubroutineType(types: !15872)
!15872 = !{null, !2833}
!15873 = !{!15874}
!15874 = !DILocalVariable(name: "stack", arg: 1, scope: !15870, file: !1401, line: 823, type: !2833)
!15875 = !DILocation(line: 0, scope: !15870)
!15876 = !DILocation(line: 825, column: 24, scope: !15870)
!15877 = !DILocation(line: 825, column: 22, scope: !15870)
!15878 = !DILocation(line: 826, column: 24, scope: !15870)
!15879 = !DILocation(line: 826, column: 22, scope: !15870)
!15880 = !DILocation(line: 827, column: 24, scope: !15870)
!15881 = !DILocation(line: 827, column: 22, scope: !15870)
!15882 = !DILocation(line: 828, column: 24, scope: !15870)
!15883 = !DILocation(line: 828, column: 22, scope: !15870)
!15884 = !DILocation(line: 829, column: 24, scope: !15870)
!15885 = !DILocation(line: 829, column: 22, scope: !15870)
!15886 = !DILocation(line: 830, column: 25, scope: !15870)
!15887 = !DILocation(line: 830, column: 42, scope: !15870)
!15888 = !DILocation(line: 830, column: 22, scope: !15870)
!15889 = !DILocation(line: 831, column: 24, scope: !15870)
!15890 = !DILocation(line: 831, column: 22, scope: !15870)
!15891 = !DILocation(line: 832, column: 24, scope: !15870)
!15892 = !DILocation(line: 832, column: 22, scope: !15870)
!15893 = !DILocation(line: 833, column: 24, scope: !15870)
!15894 = !DILocation(line: 833, column: 22, scope: !15870)
!15895 = !DILocation(line: 836, column: 23, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15870, file: !1401, line: 836, column: 10)
!15897 = !DILocation(line: 836, column: 34, scope: !15896)
!15898 = !DILocation(line: 836, column: 42, scope: !15896)
!15899 = !DILocation(line: 836, column: 10, scope: !15870)
!15900 = !DILocation(line: 837, column: 26, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15896, file: !1401, line: 836, column: 49)
!15902 = !DILocation(line: 837, column: 24, scope: !15901)
!15903 = !DILocation(line: 838, column: 26, scope: !15901)
!15904 = !DILocation(line: 838, column: 24, scope: !15901)
!15905 = !DILocation(line: 839, column: 26, scope: !15901)
!15906 = !DILocation(line: 839, column: 24, scope: !15901)
!15907 = !DILocation(line: 840, column: 26, scope: !15901)
!15908 = !DILocation(line: 840, column: 24, scope: !15901)
!15909 = !DILocation(line: 841, column: 26, scope: !15901)
!15910 = !DILocation(line: 841, column: 24, scope: !15901)
!15911 = !DILocation(line: 842, column: 26, scope: !15901)
!15912 = !DILocation(line: 842, column: 24, scope: !15901)
!15913 = !DILocation(line: 843, column: 26, scope: !15901)
!15914 = !DILocation(line: 843, column: 24, scope: !15901)
!15915 = !DILocation(line: 844, column: 26, scope: !15901)
!15916 = !DILocation(line: 844, column: 24, scope: !15901)
!15917 = !DILocation(line: 845, column: 26, scope: !15901)
!15918 = !DILocation(line: 845, column: 24, scope: !15901)
!15919 = !DILocation(line: 846, column: 26, scope: !15901)
!15920 = !DILocation(line: 846, column: 24, scope: !15901)
!15921 = !DILocation(line: 847, column: 27, scope: !15901)
!15922 = !DILocation(line: 847, column: 25, scope: !15901)
!15923 = !DILocation(line: 848, column: 27, scope: !15901)
!15924 = !DILocation(line: 848, column: 25, scope: !15901)
!15925 = !DILocation(line: 849, column: 27, scope: !15901)
!15926 = !DILocation(line: 849, column: 25, scope: !15901)
!15927 = !DILocation(line: 850, column: 27, scope: !15901)
!15928 = !DILocation(line: 850, column: 25, scope: !15901)
!15929 = !DILocation(line: 851, column: 27, scope: !15901)
!15930 = !DILocation(line: 851, column: 25, scope: !15901)
!15931 = !DILocation(line: 852, column: 27, scope: !15901)
!15932 = !DILocation(line: 852, column: 25, scope: !15901)
!15933 = !DILocation(line: 853, column: 29, scope: !15901)
!15934 = !DILocation(line: 853, column: 27, scope: !15901)
!15935 = !DILocation(line: 854, column: 24, scope: !15901)
!15936 = !DILocation(line: 855, column: 5, scope: !15901)
!15937 = !DILocation(line: 858, column: 16, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15870, file: !1401, line: 858, column: 10)
!15939 = !DILocation(line: 858, column: 20, scope: !15938)
!15940 = !DILocation(line: 858, column: 44, scope: !15938)
!15941 = !DILocation(line: 859, column: 24, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15938, file: !1401, line: 858, column: 74)
!15943 = !DILocation(line: 860, column: 5, scope: !15942)
!15944 = !DILocation(line: 862, column: 5, scope: !15870)
!15945 = !DILocation(line: 863, column: 44, scope: !15870)
!15946 = !DILocation(line: 863, column: 5, scope: !15870)
!15947 = !DILocation(line: 864, column: 44, scope: !15870)
!15948 = !DILocation(line: 864, column: 5, scope: !15870)
!15949 = !DILocation(line: 865, column: 44, scope: !15870)
!15950 = !DILocation(line: 865, column: 5, scope: !15870)
!15951 = !DILocation(line: 866, column: 44, scope: !15870)
!15952 = !DILocation(line: 866, column: 5, scope: !15870)
!15953 = !DILocation(line: 867, column: 44, scope: !15870)
!15954 = !DILocation(line: 867, column: 5, scope: !15870)
!15955 = !DILocation(line: 868, column: 44, scope: !15870)
!15956 = !DILocation(line: 868, column: 5, scope: !15870)
!15957 = !DILocation(line: 869, column: 44, scope: !15870)
!15958 = !DILocation(line: 869, column: 5, scope: !15870)
!15959 = !DILocation(line: 870, column: 44, scope: !15870)
!15960 = !DILocation(line: 870, column: 5, scope: !15870)
!15961 = !DILocation(line: 871, column: 44, scope: !15870)
!15962 = !DILocation(line: 871, column: 5, scope: !15870)
!15963 = !DILocation(line: 872, column: 44, scope: !15870)
!15964 = !DILocation(line: 872, column: 5, scope: !15870)
!15965 = !DILocation(line: 873, column: 44, scope: !15870)
!15966 = !DILocation(line: 873, column: 5, scope: !15870)
!15967 = !DILocation(line: 874, column: 44, scope: !15870)
!15968 = !DILocation(line: 874, column: 5, scope: !15870)
!15969 = !DILocation(line: 875, column: 44, scope: !15870)
!15970 = !DILocation(line: 875, column: 5, scope: !15870)
!15971 = !DILocation(line: 876, column: 44, scope: !15870)
!15972 = !DILocation(line: 876, column: 5, scope: !15870)
!15973 = !DILocation(line: 877, column: 44, scope: !15870)
!15974 = !DILocation(line: 877, column: 5, scope: !15870)
!15975 = !DILocation(line: 878, column: 48, scope: !15870)
!15976 = !DILocation(line: 878, column: 5, scope: !15870)
!15977 = !DILocation(line: 881, column: 21, scope: !15978)
!15978 = distinct !DILexicalBlock(scope: !15870, file: !1401, line: 881, column: 9)
!15979 = !DILocation(line: 881, column: 32, scope: !15978)
!15980 = !DILocation(line: 881, column: 9, scope: !15870)
!15981 = !DILocation(line: 882, column: 29, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15978, file: !1401, line: 881, column: 39)
!15983 = !DILocation(line: 884, column: 5, scope: !15982)
!15984 = !DILocation(line: 0, scope: !15978)
!15985 = !DILocation(line: 889, column: 34, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15870, file: !1401, line: 889, column: 10)
!15987 = !DILocation(line: 889, column: 42, scope: !15986)
!15988 = !DILocation(line: 889, column: 10, scope: !15870)
!15989 = !DILocation(line: 890, column: 29, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15986, file: !1401, line: 889, column: 49)
!15991 = !DILocation(line: 891, column: 48, scope: !15990)
!15992 = !DILocation(line: 891, column: 9, scope: !15990)
!15993 = !DILocation(line: 892, column: 48, scope: !15990)
!15994 = !DILocation(line: 892, column: 9, scope: !15990)
!15995 = !DILocation(line: 893, column: 48, scope: !15990)
!15996 = !DILocation(line: 893, column: 9, scope: !15990)
!15997 = !DILocation(line: 894, column: 48, scope: !15990)
!15998 = !DILocation(line: 894, column: 9, scope: !15990)
!15999 = !DILocation(line: 895, column: 48, scope: !15990)
!16000 = !DILocation(line: 895, column: 9, scope: !15990)
!16001 = !DILocation(line: 896, column: 48, scope: !15990)
!16002 = !DILocation(line: 896, column: 9, scope: !15990)
!16003 = !DILocation(line: 897, column: 48, scope: !15990)
!16004 = !DILocation(line: 897, column: 9, scope: !15990)
!16005 = !DILocation(line: 898, column: 48, scope: !15990)
!16006 = !DILocation(line: 898, column: 9, scope: !15990)
!16007 = !DILocation(line: 899, column: 48, scope: !15990)
!16008 = !DILocation(line: 899, column: 9, scope: !15990)
!16009 = !DILocation(line: 900, column: 48, scope: !15990)
!16010 = !DILocation(line: 900, column: 9, scope: !15990)
!16011 = !DILocation(line: 901, column: 48, scope: !15990)
!16012 = !DILocation(line: 901, column: 9, scope: !15990)
!16013 = !DILocation(line: 902, column: 48, scope: !15990)
!16014 = !DILocation(line: 902, column: 9, scope: !15990)
!16015 = !DILocation(line: 903, column: 48, scope: !15990)
!16016 = !DILocation(line: 903, column: 9, scope: !15990)
!16017 = !DILocation(line: 904, column: 48, scope: !15990)
!16018 = !DILocation(line: 904, column: 9, scope: !15990)
!16019 = !DILocation(line: 905, column: 48, scope: !15990)
!16020 = !DILocation(line: 905, column: 9, scope: !15990)
!16021 = !DILocation(line: 906, column: 48, scope: !15990)
!16022 = !DILocation(line: 906, column: 9, scope: !15990)
!16023 = !DILocation(line: 907, column: 48, scope: !15990)
!16024 = !DILocation(line: 907, column: 9, scope: !15990)
!16025 = !DILocation(line: 908, column: 48, scope: !15990)
!16026 = !DILocation(line: 908, column: 9, scope: !15990)
!16027 = !DILocation(line: 909, column: 48, scope: !15990)
!16028 = !DILocation(line: 909, column: 9, scope: !15990)
!16029 = !DILocation(line: 910, column: 48, scope: !15990)
!16030 = !DILocation(line: 910, column: 9, scope: !15990)
!16031 = !DILocation(line: 911, column: 48, scope: !15990)
!16032 = !DILocation(line: 911, column: 9, scope: !15990)
!16033 = !DILocation(line: 912, column: 48, scope: !15990)
!16034 = !DILocation(line: 912, column: 9, scope: !15990)
!16035 = !DILocation(line: 913, column: 48, scope: !15990)
!16036 = !DILocation(line: 913, column: 9, scope: !15990)
!16037 = !DILocation(line: 914, column: 48, scope: !15990)
!16038 = !DILocation(line: 914, column: 9, scope: !15990)
!16039 = !DILocation(line: 915, column: 48, scope: !15990)
!16040 = !DILocation(line: 915, column: 9, scope: !15990)
!16041 = !DILocation(line: 916, column: 48, scope: !15990)
!16042 = !DILocation(line: 916, column: 9, scope: !15990)
!16043 = !DILocation(line: 917, column: 48, scope: !15990)
!16044 = !DILocation(line: 917, column: 9, scope: !15990)
!16045 = !DILocation(line: 918, column: 48, scope: !15990)
!16046 = !DILocation(line: 918, column: 9, scope: !15990)
!16047 = !DILocation(line: 919, column: 48, scope: !15990)
!16048 = !DILocation(line: 919, column: 9, scope: !15990)
!16049 = !DILocation(line: 920, column: 48, scope: !15990)
!16050 = !DILocation(line: 920, column: 9, scope: !15990)
!16051 = !DILocation(line: 921, column: 48, scope: !15990)
!16052 = !DILocation(line: 921, column: 9, scope: !15990)
!16053 = !DILocation(line: 922, column: 48, scope: !15990)
!16054 = !DILocation(line: 922, column: 9, scope: !15990)
!16055 = !DILocation(line: 923, column: 50, scope: !15990)
!16056 = !DILocation(line: 923, column: 9, scope: !15990)
!16057 = !DILocation(line: 924, column: 5, scope: !15990)
!16058 = !DILocation(line: 926, column: 48, scope: !15870)
!16059 = !DILocation(line: 926, column: 5, scope: !15870)
!16060 = !DILocation(line: 927, column: 48, scope: !15870)
!16061 = !DILocation(line: 927, column: 5, scope: !15870)
!16062 = !DILocation(line: 928, column: 48, scope: !15870)
!16063 = !DILocation(line: 928, column: 5, scope: !15870)
!16064 = !DILocation(line: 929, column: 48, scope: !15870)
!16065 = !DILocation(line: 929, column: 5, scope: !15870)
!16066 = !DILocation(line: 959, column: 9, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !15870, file: !1401, line: 959, column: 9)
!16068 = !DILocation(line: 959, column: 9, scope: !15870)
!16069 = !DILocation(line: 960, column: 9, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16067, file: !1401, line: 959, column: 33)
!16071 = !DILocation(line: 961, column: 5, scope: !16070)
!16072 = !DILocation(line: 962, column: 1, scope: !15870)
!16073 = distinct !DISubprogram(name: "reboot_check", scope: !1401, file: !1401, line: 808, type: !16074, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!16074 = !DISubroutineType(types: !16075)
!16075 = !{!69}
!16076 = !DILocation(line: 810, column: 13, scope: !16073)
!16077 = !DILocation(line: 810, column: 25, scope: !16073)
!16078 = !DILocation(line: 810, column: 5, scope: !16073)
!16079 = distinct !DISubprogram(name: "memoryDumpAll", scope: !1401, file: !1401, line: 964, type: !154, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !16080)
!16080 = !{!16081, !16082, !16083}
!16081 = !DILocalVariable(name: "current", scope: !16079, file: !1401, line: 966, type: !1486)
!16082 = !DILocalVariable(name: "end", scope: !16079, file: !1401, line: 966, type: !1486)
!16083 = !DILocalVariable(name: "i", scope: !16079, file: !1401, line: 967, type: !30)
!16084 = !DILocation(line: 0, scope: !16079)
!16085 = !DILocation(line: 971, column: 33, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16087, file: !1401, line: 971, column: 14)
!16087 = distinct !DILexicalBlock(scope: !16088, file: !1401, line: 969, column: 24)
!16088 = distinct !DILexicalBlock(scope: !16089, file: !1401, line: 969, column: 5)
!16089 = distinct !DILexicalBlock(scope: !16079, file: !1401, line: 969, column: 5)
!16090 = !DILocation(line: 971, column: 15, scope: !16086)
!16091 = !DILocation(line: 971, column: 14, scope: !16087)
!16092 = !DILocation(line: 1000, column: 38, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16094, file: !1401, line: 1000, column: 5)
!16094 = distinct !DILexicalBlock(scope: !16079, file: !1401, line: 1000, column: 5)
!16095 = !DILocation(line: 1000, column: 19, scope: !16093)
!16096 = !DILocation(line: 1000, column: 5, scope: !16094)
!16097 = !DILocation(line: 975, column: 33, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16087, file: !1401, line: 975, column: 14)
!16099 = !DILocation(line: 975, column: 15, scope: !16098)
!16100 = !DILocation(line: 975, column: 14, scope: !16087)
!16101 = !DILocation(line: 979, column: 37, scope: !16087)
!16102 = !DILocation(line: 980, column: 37, scope: !16087)
!16103 = !DILocation(line: 982, column: 24, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16105, file: !1401, line: 982, column: 9)
!16105 = distinct !DILexicalBlock(scope: !16087, file: !1401, line: 982, column: 9)
!16106 = !DILocation(line: 982, column: 9, scope: !16105)
!16107 = !DILocation(line: 984, column: 17, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16109, file: !1401, line: 984, column: 17)
!16109 = distinct !DILexicalBlock(scope: !16104, file: !1401, line: 982, column: 45)
!16110 = !DILocation(line: 984, column: 32, scope: !16108)
!16111 = !DILocation(line: 0, scope: !16109)
!16112 = !DILocation(line: 984, column: 37, scope: !16108)
!16113 = !DILocation(line: 986, column: 27, scope: !16108)
!16114 = !DILocation(line: 986, column: 17, scope: !16108)
!16115 = !DILocation(line: 986, column: 32, scope: !16108)
!16116 = !DILocation(line: 986, column: 37, scope: !16108)
!16117 = !DILocation(line: 987, column: 27, scope: !16108)
!16118 = !DILocation(line: 987, column: 17, scope: !16108)
!16119 = !DILocation(line: 987, column: 32, scope: !16108)
!16120 = !DILocation(line: 984, column: 17, scope: !16109)
!16121 = !DILocation(line: 994, column: 20, scope: !16109)
!16122 = !DILocation(line: 992, column: 20, scope: !16109)
!16123 = !DILocation(line: 995, column: 30, scope: !16109)
!16124 = !DILocation(line: 995, column: 20, scope: !16109)
!16125 = !DILocation(line: 996, column: 30, scope: !16109)
!16126 = !DILocation(line: 996, column: 20, scope: !16109)
!16127 = !DILocation(line: 991, column: 13, scope: !16109)
!16128 = !DILocation(line: 997, column: 10, scope: !16109)
!16129 = !DILocation(line: 982, column: 39, scope: !16104)
!16130 = distinct !{!16130, !16106, !16131}
!16131 = !DILocation(line: 997, column: 10, scope: !16105)
!16132 = !DILocation(line: 969, column: 20, scope: !16088)
!16133 = distinct !{!16133, !16134, !16135}
!16134 = !DILocation(line: 969, column: 5, scope: !16089)
!16135 = !DILocation(line: 998, column: 5, scope: !16089)
!16136 = !DILocation(line: 1001, column: 41, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16138, file: !1401, line: 1001, column: 13)
!16138 = distinct !DILexicalBlock(scope: !16093, file: !1401, line: 1000, column: 50)
!16139 = !DILocation(line: 1001, column: 13, scope: !16137)
!16140 = !DILocation(line: 1001, column: 13, scope: !16138)
!16141 = !DILocation(line: 1002, column: 13, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16137, file: !1401, line: 1001, column: 50)
!16143 = !DILocation(line: 1003, column: 9, scope: !16142)
!16144 = !DILocation(line: 1000, column: 46, scope: !16093)
!16145 = distinct !{!16145, !16096, !16146}
!16146 = !DILocation(line: 1004, column: 5, scope: !16094)
!16147 = !DILocation(line: 1006, column: 5, scope: !16079)
!16148 = !DILocation(line: 1017, column: 1, scope: !16079)
!16149 = distinct !DISubprogram(name: "Hard_Fault_Handler", scope: !1401, file: !1401, line: 1040, type: !15871, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !16150)
!16150 = !{!16151}
!16151 = !DILocalVariable(name: "stack", arg: 1, scope: !16149, file: !1401, line: 1040, type: !2833)
!16152 = !DILocation(line: 0, scope: !16149)
!16153 = !DILocation(line: 1042, column: 5, scope: !16149)
!16154 = !DILocation(line: 1043, column: 57, scope: !16149)
!16155 = !DILocation(line: 1043, column: 5, scope: !16149)
!16156 = !DILocation(line: 1044, column: 15, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16149, file: !1401, line: 1044, column: 9)
!16158 = !DILocation(line: 1044, column: 20, scope: !16157)
!16159 = !DILocation(line: 1044, column: 33, scope: !16157)
!16160 = !DILocation(line: 1044, column: 9, scope: !16149)
!16161 = !DILocation(line: 1045, column: 9, scope: !16162)
!16162 = distinct !DILexicalBlock(scope: !16157, file: !1401, line: 1044, column: 39)
!16163 = !DILocation(line: 1046, column: 61, scope: !16162)
!16164 = !DILocation(line: 1046, column: 9, scope: !16162)
!16165 = !DILocation(line: 1047, column: 19, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16162, file: !1401, line: 1047, column: 13)
!16167 = !DILocation(line: 1047, column: 38, scope: !16166)
!16168 = !DILocation(line: 1047, column: 13, scope: !16162)
!16169 = !DILocation(line: 1048, column: 37, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16166, file: !1401, line: 1047, column: 44)
!16171 = !DILocation(line: 1048, column: 13, scope: !16170)
!16172 = !DILocation(line: 1049, column: 9, scope: !16170)
!16173 = !DILocation(line: 1050, column: 19, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16162, file: !1401, line: 1050, column: 13)
!16175 = !DILocation(line: 1050, column: 24, scope: !16174)
!16176 = !DILocation(line: 1050, column: 38, scope: !16174)
!16177 = !DILocation(line: 1050, column: 13, scope: !16162)
!16178 = !DILocation(line: 1051, column: 40, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16174, file: !1401, line: 1050, column: 45)
!16180 = !DILocation(line: 1051, column: 13, scope: !16179)
!16181 = !DILocation(line: 1052, column: 9, scope: !16179)
!16182 = !DILocation(line: 1053, column: 19, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16162, file: !1401, line: 1053, column: 13)
!16184 = !DILocation(line: 1053, column: 24, scope: !16183)
!16185 = !DILocation(line: 1053, column: 38, scope: !16183)
!16186 = !DILocation(line: 1053, column: 13, scope: !16162)
!16187 = !DILocation(line: 1054, column: 48, scope: !16188)
!16188 = distinct !DILexicalBlock(scope: !16183, file: !1401, line: 1053, column: 45)
!16189 = !DILocation(line: 1054, column: 13, scope: !16188)
!16190 = !DILocation(line: 1055, column: 9, scope: !16188)
!16191 = !DILocation(line: 1058, column: 5, scope: !16149)
!16192 = !DILocation(line: 1060, column: 5, scope: !16149)
!16193 = !DILocation(line: 1065, column: 5, scope: !16149)
!16194 = distinct !{!16194, !16193, !16195}
!16195 = !DILocation(line: 1065, column: 14, scope: !16149)
!16196 = distinct !DISubprogram(name: "MemManage_Fault_Handler", scope: !1401, file: !1401, line: 1069, type: !15871, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !16197)
!16197 = !{!16198}
!16198 = !DILocalVariable(name: "stack", arg: 1, scope: !16196, file: !1401, line: 1069, type: !2833)
!16199 = !DILocation(line: 0, scope: !16196)
!16200 = !DILocation(line: 1071, column: 5, scope: !16196)
!16201 = !DILocation(line: 1072, column: 57, scope: !16196)
!16202 = !DILocation(line: 1072, column: 5, scope: !16196)
!16203 = !DILocation(line: 1073, column: 15, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16196, file: !1401, line: 1073, column: 9)
!16205 = !DILocation(line: 1073, column: 20, scope: !16204)
!16206 = !DILocation(line: 1073, column: 28, scope: !16204)
!16207 = !DILocation(line: 1073, column: 9, scope: !16196)
!16208 = !DILocation(line: 1074, column: 44, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16204, file: !1401, line: 1073, column: 34)
!16210 = !DILocation(line: 1074, column: 9, scope: !16209)
!16211 = !DILocation(line: 1075, column: 5, scope: !16209)
!16212 = !DILocation(line: 1077, column: 5, scope: !16196)
!16213 = !DILocation(line: 1079, column: 5, scope: !16196)
!16214 = !DILocation(line: 1084, column: 5, scope: !16196)
!16215 = distinct !{!16215, !16214, !16216}
!16216 = !DILocation(line: 1084, column: 14, scope: !16196)
!16217 = distinct !DISubprogram(name: "Bus_Fault_Handler", scope: !1401, file: !1401, line: 1088, type: !15871, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !16218)
!16218 = !{!16219}
!16219 = !DILocalVariable(name: "stack", arg: 1, scope: !16217, file: !1401, line: 1088, type: !2833)
!16220 = !DILocation(line: 0, scope: !16217)
!16221 = !DILocation(line: 1090, column: 5, scope: !16217)
!16222 = !DILocation(line: 1091, column: 57, scope: !16217)
!16223 = !DILocation(line: 1091, column: 5, scope: !16217)
!16224 = !DILocation(line: 1092, column: 15, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16217, file: !1401, line: 1092, column: 9)
!16226 = !DILocation(line: 1092, column: 20, scope: !16225)
!16227 = !DILocation(line: 1092, column: 30, scope: !16225)
!16228 = !DILocation(line: 1092, column: 9, scope: !16217)
!16229 = !DILocation(line: 1093, column: 36, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16225, file: !1401, line: 1092, column: 36)
!16231 = !DILocation(line: 1093, column: 9, scope: !16230)
!16232 = !DILocation(line: 1094, column: 5, scope: !16230)
!16233 = !DILocation(line: 1096, column: 5, scope: !16217)
!16234 = !DILocation(line: 1098, column: 5, scope: !16217)
!16235 = !DILocation(line: 1103, column: 5, scope: !16217)
!16236 = distinct !{!16236, !16235, !16237}
!16237 = !DILocation(line: 1103, column: 14, scope: !16217)
!16238 = distinct !DISubprogram(name: "Usage_Fault_Handler", scope: !1401, file: !1401, line: 1107, type: !15871, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !16239)
!16239 = !{!16240}
!16240 = !DILocalVariable(name: "stack", arg: 1, scope: !16238, file: !1401, line: 1107, type: !2833)
!16241 = !DILocation(line: 0, scope: !16238)
!16242 = !DILocation(line: 1109, column: 5, scope: !16238)
!16243 = !DILocation(line: 1110, column: 57, scope: !16238)
!16244 = !DILocation(line: 1110, column: 5, scope: !16238)
!16245 = !DILocation(line: 1111, column: 15, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16238, file: !1401, line: 1111, column: 9)
!16247 = !DILocation(line: 1111, column: 34, scope: !16246)
!16248 = !DILocation(line: 1111, column: 9, scope: !16238)
!16249 = !DILocation(line: 1112, column: 33, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16246, file: !1401, line: 1111, column: 40)
!16251 = !DILocation(line: 1112, column: 9, scope: !16250)
!16252 = !DILocation(line: 1113, column: 5, scope: !16250)
!16253 = !DILocation(line: 1115, column: 5, scope: !16238)
!16254 = !DILocation(line: 1117, column: 5, scope: !16238)
!16255 = !DILocation(line: 1122, column: 5, scope: !16238)
!16256 = distinct !{!16256, !16255, !16257}
!16257 = !DILocation(line: 1122, column: 14, scope: !16238)
!16258 = distinct !DISubprogram(name: "Debug_Monitor_Handler", scope: !1401, file: !1401, line: 1127, type: !15871, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !16259)
!16259 = !{!16260, !16261, !16262, !16263}
!16260 = !DILocalVariable(name: "stack", arg: 1, scope: !16258, file: !1401, line: 1127, type: !2833)
!16261 = !DILocalVariable(name: "offset", scope: !16258, file: !1401, line: 1129, type: !61)
!16262 = !DILocalVariable(name: "stack_end", scope: !16258, file: !1401, line: 1129, type: !61)
!16263 = !DILocalVariable(name: "is_match", scope: !16258, file: !1401, line: 1129, type: !61)
!16264 = !DILocation(line: 0, scope: !16258)
!16265 = !DILocation(line: 1131, column: 5, scope: !16258)
!16266 = !DILocation(line: 1136, column: 22, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16258, file: !1401, line: 1134, column: 5)
!16268 = !DILocation(line: 1137, column: 21, scope: !16267)
!16269 = !DILocation(line: 1138, column: 63, scope: !16267)
!16270 = !DILocation(line: 1138, column: 9, scope: !16267)
!16271 = !DILocation(line: 1141, column: 5, scope: !16258)
!16272 = !DILocation(line: 1143, column: 5, scope: !16258)
!16273 = !DILocation(line: 1148, column: 5, scope: !16258)
!16274 = distinct !{!16274, !16273, !16275}
!16275 = !DILocation(line: 1148, column: 14, scope: !16258)
!16276 = distinct !DISubprogram(name: "CommonFault_Handler", scope: !1401, file: !1401, line: 1165, type: !154, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!16277 = !DILocation(line: 1167, column: 5, scope: !16276)
!16278 = !{i64 35854, i64 35936, i64 35979, i64 36060, i64 36103, i64 36184, i64 36265, i64 36346, i64 36427, i64 36508, i64 36589, i64 36670, i64 36751, i64 36832, i64 36913, i64 36994, i64 37075, i64 37156, i64 37199, i64 37280, i64 37361, i64 37442, i64 37485, i64 37566, i64 37609, i64 37652, i64 37695, i64 37776, i64 37819, i64 37862, i64 37905}
!16279 = !DILocation(line: 1201, column: 1, scope: !16276)
!16280 = distinct !DISubprogram(name: "HardFault_Handler", scope: !1401, file: !1401, line: 1208, type: !154, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!16281 = !DILocation(line: 1210, column: 5, scope: !16280)
!16282 = !{i64 38128, i64 38172, i64 38215}
!16283 = !DILocation(line: 1216, column: 1, scope: !16280)
!16284 = distinct !DISubprogram(name: "MemManage_Handler", scope: !1401, file: !1401, line: 1223, type: !154, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!16285 = !DILocation(line: 1225, column: 5, scope: !16284)
!16286 = !{i64 38441, i64 38485, i64 38528}
!16287 = !DILocation(line: 1231, column: 1, scope: !16284)
!16288 = distinct !DISubprogram(name: "BusFault_Handler", scope: !1401, file: !1401, line: 1238, type: !154, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!16289 = !DILocation(line: 1240, column: 5, scope: !16288)
!16290 = !{i64 38749, i64 38793, i64 38836}
!16291 = !DILocation(line: 1246, column: 1, scope: !16288)
!16292 = distinct !DISubprogram(name: "UsageFault_Handler", scope: !1401, file: !1401, line: 1253, type: !154, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!16293 = !DILocation(line: 1255, column: 5, scope: !16292)
!16294 = !{i64 39061, i64 39105, i64 39148}
!16295 = !DILocation(line: 1261, column: 1, scope: !16292)
!16296 = distinct !DISubprogram(name: "DebugMon_Handler", scope: !1401, file: !1401, line: 1264, type: !154, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1400, retainedNodes: !1397)
!16297 = !DILocation(line: 1266, column: 5, scope: !16296)
!16298 = !{i64 39302, i64 39346, i64 39389}
!16299 = !DILocation(line: 1272, column: 1, scope: !16296)
!16300 = distinct !DISubprogram(name: "vApplicationStackOverflowHook", scope: !2237, file: !2237, line: 100, type: !16301, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !16303)
!16301 = !DISubroutineType(types: !16302)
!16302 = !{null, !868, !201}
!16303 = !{!16304, !16305}
!16304 = !DILocalVariable(name: "xTask", arg: 1, scope: !16300, file: !2237, line: 100, type: !868)
!16305 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !16300, file: !2237, line: 100, type: !201)
!16306 = !DILocation(line: 0, scope: !16300)
!16307 = !DILocation(line: 102, column: 40, scope: !16300)
!16308 = !DILocation(line: 102, column: 5, scope: !16300)
!16309 = !DILocation(line: 103, column: 5, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16311, file: !2237, line: 103, column: 5)
!16311 = distinct !DILexicalBlock(scope: !16300, file: !2237, line: 103, column: 5)
!16312 = !DILocation(line: 104, column: 1, scope: !16300)
!16313 = distinct !DISubprogram(name: "print_module_log", scope: !1585, file: !1585, line: 1102, type: !368, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16314)
!16314 = !{!16315, !16316, !16317, !16318, !16319, !16320}
!16315 = !DILocalVariable(name: "handle", arg: 1, scope: !16313, file: !1585, line: 1102, type: !51)
!16316 = !DILocalVariable(name: "func", arg: 2, scope: !16313, file: !1585, line: 1103, type: !331)
!16317 = !DILocalVariable(name: "line", arg: 3, scope: !16313, file: !1585, line: 1104, type: !7)
!16318 = !DILocalVariable(name: "level", arg: 4, scope: !16313, file: !1585, line: 1105, type: !364)
!16319 = !DILocalVariable(name: "message", arg: 5, scope: !16313, file: !1585, line: 1106, type: !331)
!16320 = !DILocalVariable(name: "ap", scope: !16313, file: !1585, line: 1108, type: !16321)
!16321 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5354, line: 46, baseType: !16322)
!16322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5356, line: 32, baseType: !16323)
!16323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1585, baseType: !16324)
!16324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !16325)
!16325 = !{!16326}
!16326 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !16324, file: !1585, line: 1044, baseType: !51, size: 32)
!16327 = !DILocation(line: 0, scope: !16313)
!16328 = !DILocation(line: 1108, column: 5, scope: !16313)
!16329 = !DILocation(line: 1108, column: 13, scope: !16313)
!16330 = !DILocation(line: 1109, column: 5, scope: !16313)
!16331 = !DILocation(line: 1110, column: 5, scope: !16313)
!16332 = !DILocation(line: 1111, column: 5, scope: !16313)
!16333 = !DILocation(line: 1112, column: 1, scope: !16313)
!16334 = distinct !DISubprogram(name: "dump_module_buffer", scope: !1585, file: !1585, line: 1200, type: !373, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16335)
!16335 = !{!16336, !16337, !16338, !16339, !16340, !16341, !16342, !16343}
!16336 = !DILocalVariable(name: "handle", arg: 1, scope: !16334, file: !1585, line: 1200, type: !51)
!16337 = !DILocalVariable(name: "func", arg: 2, scope: !16334, file: !1585, line: 1201, type: !331)
!16338 = !DILocalVariable(name: "line", arg: 3, scope: !16334, file: !1585, line: 1202, type: !7)
!16339 = !DILocalVariable(name: "level", arg: 4, scope: !16334, file: !1585, line: 1203, type: !364)
!16340 = !DILocalVariable(name: "data", arg: 5, scope: !16334, file: !1585, line: 1204, type: !375)
!16341 = !DILocalVariable(name: "length", arg: 6, scope: !16334, file: !1585, line: 1205, type: !7)
!16342 = !DILocalVariable(name: "message", arg: 7, scope: !16334, file: !1585, line: 1206, type: !331)
!16343 = !DILocalVariable(name: "ap", scope: !16334, file: !1585, line: 1208, type: !16321)
!16344 = !DILocation(line: 0, scope: !16334)
!16345 = !DILocation(line: 1208, column: 5, scope: !16334)
!16346 = !DILocation(line: 1208, column: 13, scope: !16334)
!16347 = !DILocation(line: 1209, column: 5, scope: !16334)
!16348 = !DILocation(line: 1210, column: 5, scope: !16334)
!16349 = !DILocation(line: 1211, column: 5, scope: !16334)
!16350 = !DILocation(line: 1212, column: 1, scope: !16334)
!16351 = distinct !DISubprogram(name: "vdump_module_buffer", scope: !1585, file: !1585, line: 1114, type: !16352, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16354)
!16352 = !DISubroutineType(types: !16353)
!16353 = !{null, !51, !331, !7, !364, !375, !7, !331, !16321}
!16354 = !{!16355, !16356, !16357, !16358, !16359, !16360, !16361, !16362, !16363, !16364, !16365, !16372, !16374, !16375}
!16355 = !DILocalVariable(name: "handle", arg: 1, scope: !16351, file: !1585, line: 1114, type: !51)
!16356 = !DILocalVariable(name: "func", arg: 2, scope: !16351, file: !1585, line: 1115, type: !331)
!16357 = !DILocalVariable(name: "line", arg: 3, scope: !16351, file: !1585, line: 1116, type: !7)
!16358 = !DILocalVariable(name: "level", arg: 4, scope: !16351, file: !1585, line: 1117, type: !364)
!16359 = !DILocalVariable(name: "data", arg: 5, scope: !16351, file: !1585, line: 1118, type: !375)
!16360 = !DILocalVariable(name: "length", arg: 6, scope: !16351, file: !1585, line: 1119, type: !7)
!16361 = !DILocalVariable(name: "message", arg: 7, scope: !16351, file: !1585, line: 1120, type: !331)
!16362 = !DILocalVariable(name: "list", arg: 8, scope: !16351, file: !1585, line: 1121, type: !16321)
!16363 = !DILocalVariable(name: "context", scope: !16351, file: !1585, line: 1123, type: !1652)
!16364 = !DILocalVariable(name: "additional_length", scope: !16351, file: !1585, line: 1124, type: !7)
!16365 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !16366, file: !1585, line: 1133, type: !862)
!16366 = distinct !DILexicalBlock(scope: !16367, file: !1585, line: 1132, column: 39)
!16367 = distinct !DILexicalBlock(scope: !16368, file: !1585, line: 1132, column: 17)
!16368 = distinct !DILexicalBlock(scope: !16369, file: !1585, line: 1131, column: 62)
!16369 = distinct !DILexicalBlock(scope: !16370, file: !1585, line: 1129, column: 13)
!16370 = distinct !DILexicalBlock(scope: !16371, file: !1585, line: 1127, column: 49)
!16371 = distinct !DILexicalBlock(scope: !16351, file: !1585, line: 1126, column: 9)
!16372 = !DILocalVariable(name: "syslog_buffer", scope: !16373, file: !1585, line: 1151, type: !1661)
!16373 = distinct !DILexicalBlock(scope: !16369, file: !1585, line: 1149, column: 16)
!16374 = !DILocalVariable(name: "log_message", scope: !16373, file: !1585, line: 1152, type: !1613)
!16375 = !DILocalVariable(name: "hex_dump_message", scope: !16373, file: !1585, line: 1153, type: !16376)
!16376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!16377 = !DILocation(line: 0, scope: !16351)
!16378 = !DILocation(line: 1126, column: 19, scope: !16371)
!16379 = !DILocation(line: 1126, column: 30, scope: !16371)
!16380 = !DILocation(line: 1127, column: 13, scope: !16371)
!16381 = !DILocation(line: 1127, column: 26, scope: !16371)
!16382 = !DILocation(line: 1127, column: 38, scope: !16371)
!16383 = !DILocation(line: 1126, column: 9, scope: !16351)
!16384 = !DILocation(line: 1129, column: 14, scope: !16369)
!16385 = !DILocation(line: 1130, column: 17, scope: !16369)
!16386 = !DILocation(line: 1130, column: 21, scope: !16369)
!16387 = !DILocation(line: 1130, column: 46, scope: !16369)
!16388 = !DILocation(line: 1131, column: 21, scope: !16369)
!16389 = !DILocation(line: 1131, column: 25, scope: !16369)
!16390 = !DILocation(line: 1131, column: 47, scope: !16369)
!16391 = !DILocation(line: 1131, column: 55, scope: !16369)
!16392 = !DILocation(line: 1129, column: 13, scope: !16370)
!16393 = !DILocation(line: 1132, column: 17, scope: !16367)
!16394 = !DILocation(line: 1132, column: 34, scope: !16367)
!16395 = !DILocation(line: 1132, column: 17, scope: !16368)
!16396 = !DILocation(line: 231, column: 2, scope: !16397, inlinedAt: !16401)
!16397 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !863, file: !863, line: 227, type: !2255, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16398)
!16398 = !{!16399, !16400}
!16399 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !16397, file: !863, line: 229, type: !61)
!16400 = !DILocalVariable(name: "ulNewBASEPRI", scope: !16397, file: !863, line: 229, type: !61)
!16401 = distinct !DILocation(line: 1134, column: 42, scope: !16366)
!16402 = !{i64 698884, i64 698921, i64 698953, i64 698989, i64 699016}
!16403 = !DILocation(line: 0, scope: !16397, inlinedAt: !16401)
!16404 = !DILocation(line: 0, scope: !16366)
!16405 = !DILocation(line: 1135, column: 21, scope: !16406)
!16406 = distinct !DILexicalBlock(scope: !16366, file: !1585, line: 1135, column: 21)
!16407 = !DILocation(line: 1135, column: 38, scope: !16406)
!16408 = !DILocation(line: 1135, column: 21, scope: !16366)
!16409 = !DILocation(line: 1138, column: 28, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16406, file: !1585, line: 1135, column: 63)
!16411 = !DILocation(line: 1139, column: 37, scope: !16410)
!16412 = !DILocation(line: 1140, column: 28, scope: !16410)
!16413 = !DILocation(line: 1137, column: 21, scope: !16410)
!16414 = !DILocation(line: 1143, column: 17, scope: !16410)
!16415 = !DILocation(line: 1144, column: 17, scope: !16366)
!16416 = !DILocation(line: 1145, column: 17, scope: !16366)
!16417 = !DILocation(line: 1146, column: 17, scope: !16366)
!16418 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !16419, file: !863, line: 247, type: !61)
!16419 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !863, file: !863, line: 247, type: !2873, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16420)
!16420 = !{!16418}
!16421 = !DILocation(line: 0, scope: !16419, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 1147, column: 17, scope: !16366)
!16423 = !DILocation(line: 249, column: 2, scope: !16419, inlinedAt: !16422)
!16424 = !{i64 699417}
!16425 = !DILocation(line: 1148, column: 13, scope: !16366)
!16426 = !DILocation(line: 1151, column: 13, scope: !16373)
!16427 = !DILocation(line: 1151, column: 46, scope: !16373)
!16428 = !DILocation(line: 0, scope: !16373)
!16429 = !DILocation(line: 1151, column: 30, scope: !16373)
!16430 = !DILocation(line: 1155, column: 22, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16373, file: !1585, line: 1155, column: 17)
!16432 = !DILocation(line: 1155, column: 17, scope: !16373)
!16433 = !DILocation(line: 1159, column: 44, scope: !16373)
!16434 = !DILocation(line: 1160, column: 26, scope: !16373)
!16435 = !DILocation(line: 1160, column: 39, scope: !16373)
!16436 = !DILocation(line: 1161, column: 46, scope: !16373)
!16437 = !DILocation(line: 1162, column: 54, scope: !16373)
!16438 = !DILocation(line: 1162, column: 31, scope: !16373)
!16439 = !DILocation(line: 1162, column: 43, scope: !16373)
!16440 = !DILocation(line: 1163, column: 31, scope: !16373)
!16441 = !DILocation(line: 1163, column: 43, scope: !16373)
!16442 = !DILocation(line: 1164, column: 31, scope: !16373)
!16443 = !DILocation(line: 1164, column: 41, scope: !16373)
!16444 = !DILocation(line: 1165, column: 31, scope: !16373)
!16445 = !DILocation(line: 1165, column: 43, scope: !16373)
!16446 = !DILocation(line: 1166, column: 43, scope: !16373)
!16447 = !DILocation(line: 1166, column: 31, scope: !16373)
!16448 = !DILocation(line: 1166, column: 41, scope: !16373)
!16449 = !DILocation(line: 1170, column: 47, scope: !16373)
!16450 = !DILocation(line: 1170, column: 19, scope: !16373)
!16451 = !DILocation(line: 1172, column: 17, scope: !16373)
!16452 = !DILocation(line: 1177, column: 24, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16373, file: !1585, line: 1177, column: 17)
!16454 = !DILocation(line: 1177, column: 17, scope: !16373)
!16455 = !DILocation(line: 1178, column: 23, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16457, file: !1585, line: 1178, column: 22)
!16457 = distinct !DILexicalBlock(scope: !16453, file: !1585, line: 1177, column: 46)
!16458 = !DILocation(line: 1178, column: 45, scope: !16456)
!16459 = !DILocation(line: 1178, column: 53, scope: !16456)
!16460 = !DILocation(line: 0, scope: !16457)
!16461 = !DILocation(line: 1184, column: 38, scope: !16373)
!16462 = !DILocation(line: 1184, column: 13, scope: !16373)
!16463 = !DILocation(line: 1185, column: 31, scope: !16373)
!16464 = !DILocation(line: 1185, column: 43, scope: !16373)
!16465 = !DILocation(line: 1187, column: 31, scope: !16373)
!16466 = !DILocation(line: 1187, column: 47, scope: !16373)
!16467 = !DILocation(line: 1188, column: 17, scope: !16468)
!16468 = distinct !DILexicalBlock(scope: !16373, file: !1585, line: 1188, column: 17)
!16469 = !DILocation(line: 1188, column: 17, scope: !16373)
!16470 = !DILocation(line: 1189, column: 67, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16472, file: !1585, line: 1189, column: 21)
!16472 = distinct !DILexicalBlock(scope: !16468, file: !1585, line: 1188, column: 36)
!16473 = !DILocation(line: 1189, column: 56, scope: !16471)
!16474 = !DILocation(line: 1189, column: 100, scope: !16471)
!16475 = !DILocation(line: 1189, column: 21, scope: !16472)
!16476 = !DILocation(line: 1190, column: 76, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16471, file: !1585, line: 1189, column: 109)
!16478 = !DILocation(line: 1190, column: 21, scope: !16477)
!16479 = !DILocation(line: 1191, column: 51, scope: !16477)
!16480 = !DILocation(line: 1192, column: 17, scope: !16477)
!16481 = !DILocation(line: 1195, column: 13, scope: !16373)
!16482 = !DILocation(line: 1196, column: 9, scope: !16369)
!16483 = !DILocation(line: 1198, column: 1, scope: !16351)
!16484 = distinct !DISubprogram(name: "get_current_time_in_ms", scope: !1585, file: !1585, line: 601, type: !16485, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16487)
!16485 = !DISubroutineType(types: !16486)
!16486 = !{!30}
!16487 = !{!16488, !16489}
!16488 = !DILocalVariable(name: "count", scope: !16484, file: !1585, line: 603, type: !61)
!16489 = !DILocalVariable(name: "count64", scope: !16484, file: !1585, line: 604, type: !1670)
!16490 = !DILocation(line: 603, column: 5, scope: !16484)
!16491 = !DILocation(line: 0, scope: !16484)
!16492 = !DILocation(line: 603, column: 14, scope: !16484)
!16493 = !DILocation(line: 605, column: 5, scope: !16484)
!16494 = !DILocation(line: 606, column: 26, scope: !16484)
!16495 = !DILocation(line: 606, column: 16, scope: !16484)
!16496 = !DILocation(line: 606, column: 32, scope: !16484)
!16497 = !DILocation(line: 606, column: 37, scope: !16484)
!16498 = !DILocation(line: 607, column: 12, scope: !16484)
!16499 = !DILocation(line: 608, column: 1, scope: !16484)
!16500 = !DILocation(line: 607, column: 5, scope: !16484)
!16501 = distinct !DISubprogram(name: "hex_dump_data", scope: !1585, file: !1585, line: 865, type: !16502, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16504)
!16502 = !DISubroutineType(types: !16503)
!16503 = !{null, !331, !7}
!16504 = !{!16505, !16506, !16507}
!16505 = !DILocalVariable(name: "data", arg: 1, scope: !16501, file: !1585, line: 865, type: !331)
!16506 = !DILocalVariable(name: "length", arg: 2, scope: !16501, file: !1585, line: 865, type: !7)
!16507 = !DILocalVariable(name: "index", scope: !16501, file: !1585, line: 867, type: !7)
!16508 = !DILocation(line: 0, scope: !16501)
!16509 = !DILocation(line: 868, column: 27, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16511, file: !1585, line: 868, column: 5)
!16511 = distinct !DILexicalBlock(scope: !16501, file: !1585, line: 868, column: 5)
!16512 = !DILocation(line: 868, column: 5, scope: !16511)
!16513 = !DILocation(line: 869, column: 30, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16510, file: !1585, line: 868, column: 46)
!16515 = !DILocation(line: 869, column: 24, scope: !16514)
!16516 = !DILocation(line: 869, column: 9, scope: !16514)
!16517 = !DILocation(line: 870, column: 20, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16514, file: !1585, line: 870, column: 13)
!16519 = !DILocation(line: 870, column: 25, scope: !16518)
!16520 = !DILocation(line: 870, column: 30, scope: !16518)
!16521 = !DILocation(line: 870, column: 13, scope: !16514)
!16522 = !DILocation(line: 874, column: 23, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16514, file: !1585, line: 874, column: 13)
!16524 = !DILocation(line: 874, column: 13, scope: !16514)
!16525 = !DILocation(line: 0, scope: !16514)
!16526 = distinct !{!16526, !16512, !16527}
!16527 = !DILocation(line: 877, column: 5, scope: !16511)
!16528 = !DILocation(line: 878, column: 20, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16501, file: !1585, line: 878, column: 9)
!16530 = !DILocation(line: 879, column: 9, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16529, file: !1585, line: 878, column: 40)
!16532 = !DILocation(line: 880, column: 5, scope: !16531)
!16533 = !DILocation(line: 881, column: 1, scope: !16501)
!16534 = distinct !DISubprogram(name: "buffer_pool_alloc", scope: !1585, file: !1585, line: 562, type: !16535, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16537)
!16535 = !DISubroutineType(types: !16536)
!16536 = !{!1661}
!16537 = !{!16538, !16539}
!16538 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !16534, file: !1585, line: 564, type: !862)
!16539 = !DILocalVariable(name: "index", scope: !16534, file: !1585, line: 565, type: !61)
!16540 = !DILocation(line: 231, column: 2, scope: !16397, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 567, column: 30, scope: !16534)
!16542 = !DILocation(line: 0, scope: !16397, inlinedAt: !16541)
!16543 = !DILocation(line: 0, scope: !16534)
!16544 = !DILocation(line: 568, column: 5, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16534, file: !1585, line: 568, column: 5)
!16546 = !DILocation(line: 568, column: 50, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16545, file: !1585, line: 568, column: 5)
!16548 = !DILocation(line: 568, column: 27, scope: !16547)
!16549 = distinct !{!16549, !16544, !16550}
!16550 = !DILocation(line: 574, column: 5, scope: !16545)
!16551 = !DILocation(line: 569, column: 14, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16553, file: !1585, line: 569, column: 13)
!16553 = distinct !DILexicalBlock(scope: !16547, file: !1585, line: 568, column: 54)
!16554 = !DILocation(line: 569, column: 40, scope: !16552)
!16555 = !DILocation(line: 569, column: 13, scope: !16553)
!16556 = !DILocation(line: 570, column: 48, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16552, file: !1585, line: 569, column: 50)
!16558 = !DILocation(line: 0, scope: !16419, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 571, column: 13, scope: !16557)
!16560 = !DILocation(line: 249, column: 2, scope: !16419, inlinedAt: !16559)
!16561 = !DILocation(line: 572, column: 13, scope: !16557)
!16562 = !DILocation(line: 575, column: 22, scope: !16534)
!16563 = !DILocation(line: 0, scope: !16419, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 576, column: 5, scope: !16534)
!16565 = !DILocation(line: 249, column: 2, scope: !16419, inlinedAt: !16564)
!16566 = !DILocation(line: 582, column: 5, scope: !16534)
!16567 = !DILocation(line: 583, column: 1, scope: !16534)
!16568 = distinct !DISubprogram(name: "log_queue_send", scope: !1585, file: !1585, line: 621, type: !16569, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16572)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{null, !16571}
!16571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!16572 = !{!16573, !16574}
!16573 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !16568, file: !1585, line: 621, type: !16571)
!16574 = !DILocalVariable(name: "xTaskWokenByPost", scope: !16575, file: !1585, line: 624, type: !869)
!16575 = distinct !DILexicalBlock(scope: !16576, file: !1585, line: 623, column: 39)
!16576 = distinct !DILexicalBlock(scope: !16568, file: !1585, line: 623, column: 9)
!16577 = !DILocation(line: 0, scope: !16568)
!16578 = !DILocation(line: 623, column: 9, scope: !16576)
!16579 = !DILocation(line: 623, column: 31, scope: !16576)
!16580 = !DILocation(line: 623, column: 9, scope: !16568)
!16581 = !DILocation(line: 624, column: 9, scope: !16575)
!16582 = !DILocation(line: 0, scope: !16575)
!16583 = !DILocation(line: 624, column: 20, scope: !16575)
!16584 = !DILocation(line: 625, column: 13, scope: !16585)
!16585 = distinct !DILexicalBlock(scope: !16575, file: !1585, line: 625, column: 13)
!16586 = !DILocation(line: 625, column: 75, scope: !16585)
!16587 = !DILocation(line: 625, column: 13, scope: !16575)
!16588 = !DILocation(line: 626, column: 33, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16585, file: !1585, line: 625, column: 95)
!16590 = !DILocation(line: 626, column: 13, scope: !16589)
!16591 = !DILocation(line: 627, column: 9, scope: !16589)
!16592 = !DILocation(line: 628, column: 13, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16594, file: !1585, line: 628, column: 13)
!16594 = distinct !DILexicalBlock(scope: !16585, file: !1585, line: 627, column: 16)
!16595 = !DILocation(line: 628, column: 13, scope: !16594)
!16596 = !DILocation(line: 628, column: 13, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16593, file: !1585, line: 628, column: 13)
!16598 = !{i64 2148494256}
!16599 = !{i64 2148494296}
!16600 = !DILocation(line: 630, column: 5, scope: !16576)
!16601 = !DILocation(line: 630, column: 5, scope: !16575)
!16602 = !DILocation(line: 631, column: 9, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16576, file: !1585, line: 630, column: 12)
!16604 = !DILocation(line: 633, column: 1, scope: !16568)
!16605 = distinct !DISubprogram(name: "buffer_pool_release", scope: !1585, file: !1585, line: 587, type: !16606, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16608)
!16606 = !DISubroutineType(types: !16607)
!16607 = !{null, !1661}
!16608 = !{!16609, !16610, !16611}
!16609 = !DILocalVariable(name: "syslog_buffer", arg: 1, scope: !16605, file: !1585, line: 587, type: !1661)
!16610 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !16605, file: !1585, line: 589, type: !862)
!16611 = !DILocalVariable(name: "log_message", scope: !16605, file: !1585, line: 590, type: !1613)
!16612 = !DILocation(line: 0, scope: !16605)
!16613 = !DILocation(line: 590, column: 51, scope: !16605)
!16614 = !DILocation(line: 231, column: 2, scope: !16397, inlinedAt: !16615)
!16615 = distinct !DILocation(line: 592, column: 30, scope: !16605)
!16616 = !DILocation(line: 0, scope: !16397, inlinedAt: !16615)
!16617 = !DILocation(line: 593, column: 20, scope: !16605)
!16618 = !DILocation(line: 593, column: 29, scope: !16605)
!16619 = !DILocation(line: 594, column: 23, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16605, file: !1585, line: 594, column: 9)
!16621 = !DILocation(line: 594, column: 36, scope: !16620)
!16622 = !DILocation(line: 595, column: 13, scope: !16620)
!16623 = !DILocation(line: 595, column: 49, scope: !16620)
!16624 = !DILocation(line: 595, column: 16, scope: !16620)
!16625 = !DILocation(line: 594, column: 9, scope: !16605)
!16626 = !DILocation(line: 596, column: 9, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16620, file: !1585, line: 595, column: 68)
!16628 = !DILocation(line: 597, column: 5, scope: !16627)
!16629 = !DILocation(line: 0, scope: !16419, inlinedAt: !16630)
!16630 = distinct !DILocation(line: 598, column: 5, scope: !16605)
!16631 = !DILocation(line: 249, column: 2, scope: !16419, inlinedAt: !16630)
!16632 = !DILocation(line: 599, column: 1, scope: !16605)
!16633 = distinct !DISubprogram(name: "vprint_module_log", scope: !1585, file: !1585, line: 1046, type: !16634, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16636)
!16634 = !DISubroutineType(types: !16635)
!16635 = !{null, !51, !331, !7, !364, !331, !16321}
!16636 = !{!16637, !16638, !16639, !16640, !16641, !16642, !16643, !16644, !16651, !16653, !16654}
!16637 = !DILocalVariable(name: "handle", arg: 1, scope: !16633, file: !1585, line: 1046, type: !51)
!16638 = !DILocalVariable(name: "func", arg: 2, scope: !16633, file: !1585, line: 1047, type: !331)
!16639 = !DILocalVariable(name: "line", arg: 3, scope: !16633, file: !1585, line: 1048, type: !7)
!16640 = !DILocalVariable(name: "level", arg: 4, scope: !16633, file: !1585, line: 1049, type: !364)
!16641 = !DILocalVariable(name: "message", arg: 5, scope: !16633, file: !1585, line: 1050, type: !331)
!16642 = !DILocalVariable(name: "list", arg: 6, scope: !16633, file: !1585, line: 1051, type: !16321)
!16643 = !DILocalVariable(name: "context", scope: !16633, file: !1585, line: 1053, type: !1652)
!16644 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !16645, file: !1585, line: 1061, type: !862)
!16645 = distinct !DILexicalBlock(scope: !16646, file: !1585, line: 1060, column: 39)
!16646 = distinct !DILexicalBlock(scope: !16647, file: !1585, line: 1060, column: 17)
!16647 = distinct !DILexicalBlock(scope: !16648, file: !1585, line: 1059, column: 62)
!16648 = distinct !DILexicalBlock(scope: !16649, file: !1585, line: 1057, column: 13)
!16649 = distinct !DILexicalBlock(scope: !16650, file: !1585, line: 1055, column: 49)
!16650 = distinct !DILexicalBlock(scope: !16633, file: !1585, line: 1054, column: 9)
!16651 = !DILocalVariable(name: "syslog_buffer", scope: !16652, file: !1585, line: 1078, type: !1661)
!16652 = distinct !DILexicalBlock(scope: !16648, file: !1585, line: 1076, column: 16)
!16653 = !DILocalVariable(name: "log_message", scope: !16652, file: !1585, line: 1079, type: !1613)
!16654 = !DILocalVariable(name: "normal_log_message", scope: !16652, file: !1585, line: 1080, type: !16655)
!16655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!16656 = !DILocation(line: 0, scope: !16633)
!16657 = !DILocation(line: 1054, column: 19, scope: !16650)
!16658 = !DILocation(line: 1054, column: 30, scope: !16650)
!16659 = !DILocation(line: 1055, column: 13, scope: !16650)
!16660 = !DILocation(line: 1055, column: 26, scope: !16650)
!16661 = !DILocation(line: 1055, column: 38, scope: !16650)
!16662 = !DILocation(line: 1054, column: 9, scope: !16633)
!16663 = !DILocation(line: 1057, column: 14, scope: !16648)
!16664 = !DILocation(line: 1058, column: 17, scope: !16648)
!16665 = !DILocation(line: 1058, column: 21, scope: !16648)
!16666 = !DILocation(line: 1058, column: 46, scope: !16648)
!16667 = !DILocation(line: 1059, column: 21, scope: !16648)
!16668 = !DILocation(line: 1059, column: 25, scope: !16648)
!16669 = !DILocation(line: 1059, column: 47, scope: !16648)
!16670 = !DILocation(line: 1059, column: 55, scope: !16648)
!16671 = !DILocation(line: 1057, column: 13, scope: !16649)
!16672 = !DILocation(line: 1060, column: 17, scope: !16646)
!16673 = !DILocation(line: 1060, column: 34, scope: !16646)
!16674 = !DILocation(line: 1060, column: 17, scope: !16647)
!16675 = !DILocation(line: 231, column: 2, scope: !16397, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 1062, column: 42, scope: !16645)
!16677 = !DILocation(line: 0, scope: !16397, inlinedAt: !16676)
!16678 = !DILocation(line: 0, scope: !16645)
!16679 = !DILocation(line: 1063, column: 21, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !16645, file: !1585, line: 1063, column: 21)
!16681 = !DILocation(line: 1063, column: 38, scope: !16680)
!16682 = !DILocation(line: 1063, column: 21, scope: !16645)
!16683 = !DILocation(line: 1066, column: 28, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16680, file: !1585, line: 1063, column: 63)
!16685 = !DILocation(line: 1067, column: 37, scope: !16684)
!16686 = !DILocation(line: 1068, column: 28, scope: !16684)
!16687 = !DILocation(line: 1065, column: 21, scope: !16684)
!16688 = !DILocation(line: 1071, column: 17, scope: !16684)
!16689 = !DILocation(line: 1072, column: 17, scope: !16645)
!16690 = !DILocation(line: 1073, column: 17, scope: !16645)
!16691 = !DILocation(line: 0, scope: !16419, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 1074, column: 17, scope: !16645)
!16693 = !DILocation(line: 249, column: 2, scope: !16419, inlinedAt: !16692)
!16694 = !DILocation(line: 1075, column: 13, scope: !16645)
!16695 = !DILocation(line: 1078, column: 13, scope: !16652)
!16696 = !DILocation(line: 1078, column: 46, scope: !16652)
!16697 = !DILocation(line: 0, scope: !16652)
!16698 = !DILocation(line: 1078, column: 30, scope: !16652)
!16699 = !DILocation(line: 1082, column: 22, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16652, file: !1585, line: 1082, column: 17)
!16701 = !DILocation(line: 1082, column: 17, scope: !16652)
!16702 = !DILocation(line: 1085, column: 44, scope: !16652)
!16703 = !DILocation(line: 1086, column: 26, scope: !16652)
!16704 = !DILocation(line: 1086, column: 39, scope: !16652)
!16705 = !DILocation(line: 1087, column: 48, scope: !16652)
!16706 = !DILocation(line: 1088, column: 56, scope: !16652)
!16707 = !DILocation(line: 1088, column: 33, scope: !16652)
!16708 = !DILocation(line: 1088, column: 45, scope: !16652)
!16709 = !DILocation(line: 1089, column: 33, scope: !16652)
!16710 = !DILocation(line: 1089, column: 45, scope: !16652)
!16711 = !DILocation(line: 1090, column: 33, scope: !16652)
!16712 = !DILocation(line: 1090, column: 43, scope: !16652)
!16713 = !DILocation(line: 1091, column: 33, scope: !16652)
!16714 = !DILocation(line: 1091, column: 45, scope: !16652)
!16715 = !DILocation(line: 1092, column: 45, scope: !16652)
!16716 = !DILocation(line: 1092, column: 33, scope: !16652)
!16717 = !DILocation(line: 1092, column: 43, scope: !16652)
!16718 = !DILocation(line: 1096, column: 49, scope: !16652)
!16719 = !DILocation(line: 1096, column: 19, scope: !16652)
!16720 = !DILocation(line: 1097, column: 13, scope: !16652)
!16721 = !DILocation(line: 1098, column: 9, scope: !16648)
!16722 = !DILocation(line: 1100, column: 1, scope: !16633)
!16723 = distinct !DISubprogram(name: "log_uart_init", scope: !1585, file: !1585, line: 185, type: !6555, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16724)
!16724 = !{!16725, !16726, !16734}
!16725 = !DILocalVariable(name: "port", arg: 1, scope: !16723, file: !1585, line: 185, type: !755)
!16726 = !DILocalVariable(name: "uart_config", scope: !16723, file: !1585, line: 187, type: !16727)
!16727 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !650, line: 378, baseType: !16728)
!16728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 373, size: 128, elements: !16729)
!16729 = !{!16730, !16731, !16732, !16733}
!16730 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !16728, file: !650, line: 374, baseType: !712, size: 32)
!16731 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !16728, file: !650, line: 375, baseType: !714, size: 32, offset: 32)
!16732 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !16728, file: !650, line: 376, baseType: !716, size: 32, offset: 64)
!16733 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !16728, file: !650, line: 377, baseType: !718, size: 32, offset: 96)
!16734 = !DILocalVariable(name: "ret", scope: !16723, file: !1585, line: 188, type: !6404)
!16735 = !DILocation(line: 0, scope: !16723)
!16736 = !DILocation(line: 187, column: 5, scope: !16723)
!16737 = !DILocation(line: 187, column: 23, scope: !16723)
!16738 = !DILocation(line: 191, column: 17, scope: !16723)
!16739 = !DILocation(line: 191, column: 26, scope: !16723)
!16740 = !DILocation(line: 192, column: 17, scope: !16723)
!16741 = !DILocation(line: 192, column: 24, scope: !16723)
!16742 = !DILocation(line: 193, column: 17, scope: !16723)
!16743 = !DILocation(line: 193, column: 26, scope: !16723)
!16744 = !DILocation(line: 194, column: 17, scope: !16723)
!16745 = !DILocation(line: 194, column: 29, scope: !16723)
!16746 = !DILocation(line: 196, column: 21, scope: !16723)
!16747 = !DILocation(line: 197, column: 11, scope: !16723)
!16748 = !DILocation(line: 199, column: 22, scope: !16723)
!16749 = !DILocation(line: 202, column: 1, scope: !16723)
!16750 = !DILocation(line: 201, column: 5, scope: !16723)
!16751 = distinct !DISubprogram(name: "log_putchar", scope: !1585, file: !1585, line: 204, type: !16752, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16754)
!16752 = !DISubroutineType(types: !16753)
!16753 = !{null, !202}
!16754 = !{!16755}
!16755 = !DILocalVariable(name: "byte", arg: 1, scope: !16751, file: !1585, line: 204, type: !202)
!16756 = !DILocation(line: 0, scope: !16751)
!16757 = !DILocation(line: 206, column: 23, scope: !16751)
!16758 = !DILocation(line: 206, column: 5, scope: !16751)
!16759 = !DILocation(line: 207, column: 1, scope: !16751)
!16760 = distinct !DISubprogram(name: "buffer_pool_init", scope: !1585, file: !1585, line: 524, type: !154, scopeLine: 525, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !1397)
!16761 = !DILocation(line: 526, column: 5, scope: !16760)
!16762 = !DILocation(line: 527, column: 1, scope: !16760)
!16763 = distinct !DISubprogram(name: "log_queue_create", scope: !1585, file: !1585, line: 613, type: !154, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !1397)
!16764 = !DILocation(line: 615, column: 19, scope: !16763)
!16765 = !DILocation(line: 615, column: 17, scope: !16763)
!16766 = !DILocation(line: 616, column: 14, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16763, file: !1585, line: 616, column: 9)
!16768 = !DILocation(line: 616, column: 9, scope: !16763)
!16769 = !DILocation(line: 617, column: 9, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16767, file: !1585, line: 616, column: 30)
!16771 = !DILocation(line: 618, column: 5, scope: !16770)
!16772 = !DILocation(line: 619, column: 1, scope: !16763)
!16773 = distinct !DISubprogram(name: "log_queue_receive", scope: !1585, file: !1585, line: 635, type: !16774, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16776)
!16774 = !DISubroutineType(types: !16775)
!16775 = !{!7, !16571}
!16776 = !{!16777, !16778}
!16777 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !16773, file: !1585, line: 635, type: !16571)
!16778 = !DILocalVariable(name: "ret_val", scope: !16773, file: !1585, line: 637, type: !869)
!16779 = !DILocation(line: 0, scope: !16773)
!16780 = !DILocation(line: 637, column: 26, scope: !16773)
!16781 = !DILocation(line: 638, column: 20, scope: !16773)
!16782 = !DILocation(line: 638, column: 12, scope: !16773)
!16783 = !DILocation(line: 638, column: 5, scope: !16773)
!16784 = distinct !DISubprogram(name: "print_normal_log", scope: !1585, file: !1585, line: 854, type: !16785, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16789)
!16785 = !DISubroutineType(types: !16786)
!16786 = !{null, !16787}
!16787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16788, size: 32)
!16788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!16789 = !{!16790}
!16790 = !DILocalVariable(name: "normal_log_message", arg: 1, scope: !16784, file: !1585, line: 854, type: !16787)
!16791 = !DILocation(line: 0, scope: !16784)
!16792 = !DILocation(line: 857, column: 46, scope: !16784)
!16793 = !DILocation(line: 858, column: 32, scope: !16784)
!16794 = !DILocation(line: 859, column: 12, scope: !16784)
!16795 = !DILocation(line: 860, column: 32, scope: !16784)
!16796 = !DILocation(line: 861, column: 32, scope: !16784)
!16797 = !DILocation(line: 856, column: 5, scope: !16784)
!16798 = !DILocation(line: 862, column: 30, scope: !16784)
!16799 = !DILocation(line: 862, column: 5, scope: !16784)
!16800 = !DILocation(line: 863, column: 1, scope: !16784)
!16801 = distinct !DISubprogram(name: "print_hex_dump", scope: !1585, file: !1585, line: 883, type: !16802, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16806)
!16802 = !DISubroutineType(types: !16803)
!16803 = !{null, !16804}
!16804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16805, size: 32)
!16805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!16806 = !{!16807}
!16807 = !DILocalVariable(name: "hex_dump_message", arg: 1, scope: !16801, file: !1585, line: 883, type: !16804)
!16808 = !DILocation(line: 0, scope: !16801)
!16809 = !DILocation(line: 886, column: 44, scope: !16801)
!16810 = !DILocation(line: 887, column: 30, scope: !16801)
!16811 = !DILocation(line: 888, column: 12, scope: !16801)
!16812 = !DILocation(line: 889, column: 30, scope: !16801)
!16813 = !DILocation(line: 890, column: 30, scope: !16801)
!16814 = !DILocation(line: 885, column: 5, scope: !16801)
!16815 = !DILocation(line: 891, column: 30, scope: !16801)
!16816 = !DILocation(line: 891, column: 5, scope: !16801)
!16817 = !DILocation(line: 892, column: 27, scope: !16818)
!16818 = distinct !DILexicalBlock(scope: !16801, file: !1585, line: 892, column: 9)
!16819 = !DILocation(line: 892, column: 39, scope: !16818)
!16820 = !DILocation(line: 0, scope: !16818)
!16821 = !DILocation(line: 892, column: 9, scope: !16801)
!16822 = !DILocation(line: 893, column: 9, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16818, file: !1585, line: 892, column: 61)
!16824 = !DILocation(line: 894, column: 41, scope: !16823)
!16825 = !DILocation(line: 894, column: 76, scope: !16823)
!16826 = !DILocation(line: 894, column: 88, scope: !16823)
!16827 = !DILocation(line: 894, column: 9, scope: !16823)
!16828 = !DILocation(line: 895, column: 5, scope: !16823)
!16829 = !DILocation(line: 896, column: 9, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16818, file: !1585, line: 895, column: 12)
!16831 = !DILocation(line: 898, column: 1, scope: !16801)
!16832 = distinct !DISubprogram(name: "process_log_message", scope: !1585, file: !1585, line: 900, type: !16833, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16837)
!16833 = !DISubroutineType(types: !16834)
!16834 = !{null, !16835}
!16835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16836, size: 32)
!16836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1614)
!16837 = !{!16838, !16839}
!16838 = !DILocalVariable(name: "log_message", arg: 1, scope: !16832, file: !1585, line: 900, type: !16835)
!16839 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !16840, file: !1585, line: 903, type: !862)
!16840 = distinct !DILexicalBlock(scope: !16841, file: !1585, line: 902, column: 28)
!16841 = distinct !DILexicalBlock(scope: !16832, file: !1585, line: 902, column: 9)
!16842 = !DILocation(line: 0, scope: !16832)
!16843 = !DILocation(line: 902, column: 9, scope: !16841)
!16844 = !DILocation(line: 902, column: 9, scope: !16832)
!16845 = !DILocation(line: 231, column: 2, scope: !16397, inlinedAt: !16846)
!16846 = distinct !DILocation(line: 903, column: 46, scope: !16840)
!16847 = !DILocation(line: 0, scope: !16397, inlinedAt: !16846)
!16848 = !DILocation(line: 0, scope: !16840)
!16849 = !DILocation(line: 904, column: 67, scope: !16840)
!16850 = !DILocation(line: 904, column: 9, scope: !16840)
!16851 = !DILocation(line: 905, column: 27, scope: !16840)
!16852 = !DILocation(line: 0, scope: !16419, inlinedAt: !16853)
!16853 = distinct !DILocation(line: 906, column: 9, scope: !16840)
!16854 = !DILocation(line: 249, column: 2, scope: !16419, inlinedAt: !16853)
!16855 = !DILocation(line: 907, column: 5, scope: !16840)
!16856 = !DILocation(line: 909, column: 49, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16832, file: !1585, line: 909, column: 9)
!16858 = !DILocation(line: 909, column: 33, scope: !16857)
!16859 = !DILocation(line: 909, column: 9, scope: !16832)
!16860 = !DILocation(line: 910, column: 40, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16857, file: !1585, line: 909, column: 63)
!16862 = !DILocation(line: 910, column: 42, scope: !16861)
!16863 = !DILocation(line: 910, column: 9, scope: !16861)
!16864 = !DILocation(line: 911, column: 5, scope: !16861)
!16865 = !DILocation(line: 912, column: 40, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16857, file: !1585, line: 911, column: 12)
!16867 = !DILocation(line: 912, column: 9, scope: !16866)
!16868 = !DILocation(line: 914, column: 1, scope: !16832)
!16869 = distinct !DISubprogram(name: "syslog_task_entry", scope: !1585, file: !1585, line: 966, type: !640, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16870)
!16870 = !{!16871, !16872}
!16871 = !DILocalVariable(name: "args", arg: 1, scope: !16869, file: !1585, line: 966, type: !51)
!16872 = !DILocalVariable(name: "log_buffer", scope: !16873, file: !1585, line: 983, type: !1661)
!16873 = distinct !DILexicalBlock(scope: !16874, file: !1585, line: 982, column: 14)
!16874 = distinct !DILexicalBlock(scope: !16875, file: !1585, line: 982, column: 5)
!16875 = distinct !DILexicalBlock(scope: !16869, file: !1585, line: 982, column: 5)
!16876 = !DILocation(line: 0, scope: !16869)
!16877 = !DILocation(line: 979, column: 23, scope: !16869)
!16878 = !DILocation(line: 980, column: 5, scope: !16869)
!16879 = !DILocation(line: 982, column: 5, scope: !16869)
!16880 = !DILocation(line: 983, column: 9, scope: !16873)
!16881 = !DILocation(line: 0, scope: !16873)
!16882 = !DILocation(line: 983, column: 26, scope: !16873)
!16883 = !DILocation(line: 984, column: 18, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16873, file: !1585, line: 984, column: 13)
!16885 = !DILocation(line: 984, column: 15, scope: !16884)
!16886 = !DILocation(line: 984, column: 13, scope: !16873)
!16887 = !DILocation(line: 993, column: 42, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16884, file: !1585, line: 984, column: 50)
!16889 = !DILocation(line: 993, column: 41, scope: !16888)
!16890 = !DILocation(line: 993, column: 24, scope: !16888)
!16891 = !DILocation(line: 993, column: 4, scope: !16888)
!16892 = !DILocation(line: 995, column: 33, scope: !16888)
!16893 = !DILocation(line: 995, column: 13, scope: !16888)
!16894 = !DILocation(line: 996, column: 9, scope: !16888)
!16895 = !DILocation(line: 997, column: 5, scope: !16874)
!16896 = !DILocation(line: 982, column: 5, scope: !16874)
!16897 = distinct !{!16897, !16898, !16899}
!16898 = !DILocation(line: 982, column: 5, scope: !16875)
!16899 = !DILocation(line: 997, column: 5, scope: !16875)
!16900 = distinct !DISubprogram(name: "log_init", scope: !1585, file: !1585, line: 1000, type: !16901, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16908)
!16901 = !DISubroutineType(types: !16902)
!16902 = !{null, !1687, !16903, !1694}
!16903 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_load_fn", file: !346, line: 117, baseType: !16904)
!16904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16905, size: 32)
!16905 = !DISubroutineType(types: !16906)
!16906 = !{!61, !16907}
!16907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!16908 = !{!16909, !16910, !16911, !16912}
!16909 = !DILocalVariable(name: "save", arg: 1, scope: !16900, file: !1585, line: 1000, type: !1687)
!16910 = !DILocalVariable(name: "load", arg: 2, scope: !16900, file: !1585, line: 1001, type: !16903)
!16911 = !DILocalVariable(name: "entries", arg: 3, scope: !16900, file: !1585, line: 1002, type: !1694)
!16912 = !DILocalVariable(name: "exception_config", scope: !16900, file: !1585, line: 1004, type: !16913)
!16913 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1567, line: 99, baseType: !16914)
!16914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1567, line: 95, size: 64, elements: !16915)
!16915 = !{!16916, !16917}
!16916 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !16914, file: !1567, line: 97, baseType: !1571, size: 32)
!16917 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !16914, file: !1567, line: 98, baseType: !1571, size: 32, offset: 32)
!16918 = !DILocation(line: 0, scope: !16900)
!16919 = !DILocation(line: 1004, column: 5, scope: !16900)
!16920 = !DILocation(line: 1004, column: 27, scope: !16900)
!16921 = !DILocation(line: 1006, column: 9, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16900, file: !1585, line: 1006, column: 9)
!16923 = !DILocation(line: 1006, column: 26, scope: !16922)
!16924 = !DILocation(line: 1006, column: 9, scope: !16900)
!16925 = !DILocation(line: 1011, column: 22, scope: !16900)
!16926 = !DILocation(line: 1012, column: 5, scope: !16900)
!16927 = !DILocation(line: 1013, column: 5, scope: !16900)
!16928 = !DILocation(line: 1014, column: 23, scope: !16900)
!16929 = !DILocation(line: 1016, column: 22, scope: !16900)
!16930 = !DILocation(line: 1016, column: 30, scope: !16900)
!16931 = !DILocation(line: 1017, column: 22, scope: !16900)
!16932 = !DILocation(line: 1017, column: 30, scope: !16900)
!16933 = !DILocation(line: 1018, column: 5, scope: !16900)
!16934 = !DILocation(line: 1021, column: 19, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16900, file: !1585, line: 1021, column: 9)
!16936 = !DILocation(line: 1021, column: 16, scope: !16935)
!16937 = !DILocation(line: 1021, column: 9, scope: !16900)
!16938 = !DILocation(line: 1027, column: 9, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16935, file: !1585, line: 1026, column: 53)
!16940 = !DILocation(line: 1028, column: 5, scope: !16939)
!16941 = !DILocation(line: 1030, column: 24, scope: !16900)
!16942 = !DILocation(line: 1031, column: 22, scope: !16900)
!16943 = !DILocation(line: 1034, column: 27, scope: !16900)
!16944 = !DILocation(line: 1035, column: 27, scope: !16900)
!16945 = !DILocation(line: 1037, column: 9, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16900, file: !1585, line: 1037, column: 9)
!16947 = !DILocation(line: 1037, column: 9, scope: !16900)
!16948 = !DILocation(line: 1039, column: 13, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16950, file: !1585, line: 1039, column: 13)
!16950 = distinct !DILexicalBlock(scope: !16946, file: !1585, line: 1037, column: 15)
!16951 = !DILocation(line: 1039, column: 34, scope: !16949)
!16952 = !DILocation(line: 1039, column: 13, scope: !16950)
!16953 = !DILocation(line: 1040, column: 13, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16955, file: !1585, line: 1040, column: 13)
!16955 = distinct !DILexicalBlock(scope: !16949, file: !1585, line: 1039, column: 40)
!16956 = !DILocation(line: 1041, column: 9, scope: !16955)
!16957 = !DILocation(line: 1043, column: 22, scope: !16900)
!16958 = !DILocation(line: 1044, column: 1, scope: !16900)
!16959 = distinct !DISubprogram(name: "syslog_exception_cb", scope: !1585, file: !1585, line: 513, type: !154, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !1397)
!16960 = !DILocation(line: 518, column: 5, scope: !16959)
!16961 = !DILocation(line: 519, column: 1, scope: !16959)
!16962 = distinct !DISubprogram(name: "syslog_buffer_dump", scope: !1585, file: !1585, line: 483, type: !154, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !16963)
!16963 = !{!16964, !16965, !16966}
!16964 = !DILocalVariable(name: "index", scope: !16962, file: !1585, line: 485, type: !61)
!16965 = !DILocalVariable(name: "pHead", scope: !16962, file: !1585, line: 486, type: !1661)
!16966 = !DILocalVariable(name: "pCurr", scope: !16962, file: !1585, line: 486, type: !1661)
!16967 = !DILocation(line: 0, scope: !16962)
!16968 = !DILocation(line: 489, column: 5, scope: !16969)
!16969 = distinct !DILexicalBlock(scope: !16962, file: !1585, line: 489, column: 5)
!16970 = !DILocation(line: 491, column: 13, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16972, file: !1585, line: 491, column: 13)
!16972 = distinct !DILexicalBlock(scope: !16973, file: !1585, line: 489, column: 54)
!16973 = distinct !DILexicalBlock(scope: !16969, file: !1585, line: 489, column: 5)
!16974 = !DILocation(line: 491, column: 39, scope: !16971)
!16975 = !DILocation(line: 491, column: 13, scope: !16972)
!16976 = !DILocation(line: 492, column: 50, scope: !16977)
!16977 = distinct !DILexicalBlock(scope: !16971, file: !1585, line: 491, column: 49)
!16978 = !DILocation(line: 492, column: 48, scope: !16977)
!16979 = !DILocation(line: 494, column: 9, scope: !16977)
!16980 = !DILocation(line: 489, column: 50, scope: !16973)
!16981 = !DILocation(line: 489, column: 27, scope: !16973)
!16982 = distinct !{!16982, !16968, !16983}
!16983 = !DILocation(line: 495, column: 5, scope: !16969)
!16984 = !DILocation(line: 498, column: 13, scope: !16962)
!16985 = !DILocation(line: 500, column: 5, scope: !16962)
!16986 = !DILocation(line: 503, column: 5, scope: !16962)
!16987 = !DILocation(line: 505, column: 43, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16962, file: !1585, line: 503, column: 19)
!16989 = !DILocation(line: 505, column: 17, scope: !16988)
!16990 = !DILocation(line: 506, column: 25, scope: !16988)
!16991 = !DILocation(line: 507, column: 46, scope: !16988)
!16992 = !DILocation(line: 507, column: 29, scope: !16988)
!16993 = !DILocation(line: 507, column: 9, scope: !16988)
!16994 = distinct !{!16994, !16986, !16995}
!16995 = !DILocation(line: 508, column: 5, scope: !16962)
!16996 = !DILocation(line: 509, column: 1, scope: !16962)
!16997 = distinct !DISubprogram(name: "sort_syslog_buffer", scope: !1585, file: !1585, line: 338, type: !16998, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17000)
!16998 = !DISubroutineType(types: !16999)
!16999 = !{!1661, !1661}
!17000 = !{!17001, !17002, !17003, !17004}
!17001 = !DILocalVariable(name: "pList", arg: 1, scope: !16997, file: !1585, line: 338, type: !1661)
!17002 = !DILocalVariable(name: "pHead", scope: !16997, file: !1585, line: 340, type: !1661)
!17003 = !DILocalVariable(name: "pCurr", scope: !16997, file: !1585, line: 340, type: !1661)
!17004 = !DILocalVariable(name: "p", scope: !16997, file: !1585, line: 340, type: !1661)
!17005 = !DILocation(line: 0, scope: !16997)
!17006 = !DILocation(line: 342, column: 15, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !16997, file: !1585, line: 342, column: 9)
!17008 = !DILocation(line: 342, column: 23, scope: !17007)
!17009 = !DILocation(line: 342, column: 33, scope: !17007)
!17010 = !DILocation(line: 342, column: 42, scope: !17007)
!17011 = !DILocation(line: 342, column: 9, scope: !16997)
!17012 = !DILocation(line: 348, column: 43, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !16997, file: !1585, line: 346, column: 27)
!17014 = !DILocation(line: 348, column: 17, scope: !17013)
!17015 = !DILocation(line: 349, column: 20, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !17013, file: !1585, line: 349, column: 13)
!17017 = !DILocation(line: 349, column: 29, scope: !17016)
!17018 = !DILocation(line: 349, column: 32, scope: !17016)
!17019 = !DILocation(line: 349, column: 48, scope: !17016)
!17020 = !DILocation(line: 349, column: 46, scope: !17016)
!17021 = !DILocation(line: 349, column: 13, scope: !17013)
!17022 = !DILocation(line: 0, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17016, file: !1585, line: 353, column: 14)
!17024 = !DILocation(line: 356, column: 23, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17026, file: !1585, line: 356, column: 19)
!17026 = distinct !DILexicalBlock(scope: !17023, file: !1585, line: 355, column: 30)
!17027 = !DILocation(line: 356, column: 32, scope: !17025)
!17028 = !DILocation(line: 356, column: 38, scope: !17025)
!17029 = !DILocation(line: 357, column: 35, scope: !17025)
!17030 = !DILocation(line: 357, column: 33, scope: !17025)
!17031 = !DILocation(line: 356, column: 19, scope: !17026)
!17032 = distinct !{!17032, !17033, !17034}
!17033 = !DILocation(line: 355, column: 12, scope: !17023)
!17034 = !DILocation(line: 363, column: 12, scope: !17023)
!17035 = !DILocation(line: 358, column: 35, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17025, file: !1585, line: 357, column: 76)
!17037 = !DILocation(line: 360, column: 19, scope: !17036)
!17038 = !DILocation(line: 0, scope: !17016)
!17039 = !DILocation(line: 346, column: 18, scope: !16997)
!17040 = !DILocation(line: 346, column: 5, scope: !16997)
!17041 = distinct !{!17041, !17040, !17042}
!17042 = !DILocation(line: 365, column: 5, scope: !16997)
!17043 = !DILocation(line: 367, column: 1, scope: !16997)
!17044 = distinct !DISubprogram(name: "syslog_get_config", scope: !1585, file: !1585, line: 1215, type: !17045, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17047)
!17045 = !DISubroutineType(types: !17046)
!17046 = !{null, !16907}
!17047 = !{!17048}
!17048 = !DILocalVariable(name: "config", arg: 1, scope: !17044, file: !1585, line: 1215, type: !16907)
!17049 = !DILocation(line: 0, scope: !17044)
!17050 = !DILocation(line: 1217, column: 15, scope: !17044)
!17051 = !DILocation(line: 1218, column: 1, scope: !17044)
!17052 = distinct !DISubprogram(name: "syslog_set_filter", scope: !1585, file: !1585, line: 1271, type: !17053, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17055)
!17053 = !DISubroutineType(types: !17054)
!17054 = !{!7, !201, !201, !201, !7}
!17055 = !{!17056, !17057, !17058, !17059, !17060, !17061, !17062}
!17056 = !DILocalVariable(name: "module_name", arg: 1, scope: !17052, file: !1585, line: 1271, type: !201)
!17057 = !DILocalVariable(name: "log_switch_str", arg: 2, scope: !17052, file: !1585, line: 1271, type: !201)
!17058 = !DILocalVariable(name: "print_level_str", arg: 3, scope: !17052, file: !1585, line: 1271, type: !201)
!17059 = !DILocalVariable(name: "save", arg: 4, scope: !17052, file: !1585, line: 1271, type: !7)
!17060 = !DILocalVariable(name: "i", scope: !17052, file: !1585, line: 1273, type: !7)
!17061 = !DILocalVariable(name: "log_switch", scope: !17052, file: !1585, line: 1274, type: !7)
!17062 = !DILocalVariable(name: "print_level", scope: !17052, file: !1585, line: 1275, type: !7)
!17063 = !DILocation(line: 0, scope: !17052)
!17064 = !DILocation(line: 1277, column: 18, scope: !17052)
!17065 = !DILocation(line: 1278, column: 20, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17052, file: !1585, line: 1278, column: 9)
!17067 = !DILocation(line: 1278, column: 9, scope: !17052)
!17068 = !DILocation(line: 1282, column: 19, scope: !17052)
!17069 = !DILocation(line: 1283, column: 21, scope: !17070)
!17070 = distinct !DILexicalBlock(scope: !17052, file: !1585, line: 1283, column: 9)
!17071 = !DILocation(line: 1283, column: 9, scope: !17052)
!17072 = !DILocation(line: 1287, column: 9, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17052, file: !1585, line: 1287, column: 9)
!17074 = !DILocation(line: 1287, column: 34, scope: !17073)
!17075 = !DILocation(line: 0, scope: !17073)
!17076 = !DILocation(line: 1287, column: 9, scope: !17052)
!17077 = !DILocation(line: 1289, column: 35, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17079, file: !1585, line: 1289, column: 13)
!17079 = distinct !DILexicalBlock(scope: !17073, file: !1585, line: 1287, column: 40)
!17080 = !DILocation(line: 1289, column: 13, scope: !17079)
!17081 = !DILocation(line: 1294, column: 16, scope: !17079)
!17082 = !DILocation(line: 1294, column: 9, scope: !17079)
!17083 = !DILocation(line: 1295, column: 39, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17079, file: !1585, line: 1294, column: 42)
!17085 = !DILocation(line: 1295, column: 50, scope: !17084)
!17086 = !DILocation(line: 1296, column: 27, scope: !17084)
!17087 = !DILocation(line: 1296, column: 13, scope: !17084)
!17088 = !DILocation(line: 1296, column: 39, scope: !17084)
!17089 = !DILocation(line: 1296, column: 51, scope: !17084)
!17090 = !DILocation(line: 1297, column: 14, scope: !17084)
!17091 = distinct !{!17091, !17082, !17092}
!17092 = !DILocation(line: 1298, column: 9, scope: !17079)
!17093 = !DILocation(line: 1302, column: 13, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17073, file: !1585, line: 1300, column: 12)
!17095 = !DILocation(line: 1304, column: 15, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17094, file: !1585, line: 1304, column: 13)
!17097 = !DILocation(line: 1304, column: 13, scope: !17094)
!17098 = !DILocation(line: 1307, column: 23, scope: !17094)
!17099 = !DILocation(line: 1307, column: 9, scope: !17094)
!17100 = !DILocation(line: 1307, column: 35, scope: !17094)
!17101 = !DILocation(line: 1307, column: 46, scope: !17094)
!17102 = !DILocation(line: 1308, column: 23, scope: !17094)
!17103 = !DILocation(line: 1308, column: 9, scope: !17094)
!17104 = !DILocation(line: 1308, column: 35, scope: !17094)
!17105 = !DILocation(line: 1308, column: 47, scope: !17094)
!17106 = !DILocation(line: 1312, column: 9, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17052, file: !1585, line: 1312, column: 9)
!17108 = !DILocation(line: 1312, column: 9, scope: !17052)
!17109 = !DILocation(line: 1313, column: 23, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17107, file: !1585, line: 1312, column: 15)
!17111 = !DILocation(line: 1313, column: 9, scope: !17110)
!17112 = !DILocation(line: 1314, column: 5, scope: !17110)
!17113 = !DILocation(line: 1317, column: 1, scope: !17052)
!17114 = distinct !DISubprogram(name: "str_to_log_switch", scope: !1585, file: !1585, line: 1484, type: !1168, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17115)
!17115 = !{!17116, !17117}
!17116 = !DILocalVariable(name: "log_switch_str", arg: 1, scope: !17114, file: !1585, line: 1484, type: !331)
!17117 = !DILocalVariable(name: "i", scope: !17114, file: !1585, line: 1486, type: !7)
!17118 = !DILocation(line: 0, scope: !17114)
!17119 = !DILocation(line: 1488, column: 5, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17114, file: !1585, line: 1488, column: 5)
!17121 = !DILocation(line: 1489, column: 37, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17123, file: !1585, line: 1489, column: 13)
!17123 = distinct !DILexicalBlock(scope: !17124, file: !1585, line: 1488, column: 69)
!17124 = distinct !DILexicalBlock(scope: !17120, file: !1585, line: 1488, column: 5)
!17125 = !DILocation(line: 1489, column: 14, scope: !17122)
!17126 = !DILocation(line: 1489, column: 13, scope: !17123)
!17127 = !DILocation(line: 1494, column: 1, scope: !17114)
!17128 = distinct !DISubprogram(name: "str_to_print_level", scope: !1585, file: !1585, line: 1496, type: !1168, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17129)
!17129 = !{!17130, !17131}
!17130 = !DILocalVariable(name: "print_level_str", arg: 1, scope: !17128, file: !1585, line: 1496, type: !331)
!17131 = !DILocalVariable(name: "i", scope: !17128, file: !1585, line: 1498, type: !7)
!17132 = !DILocation(line: 0, scope: !17128)
!17133 = !DILocation(line: 1500, column: 5, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17128, file: !1585, line: 1500, column: 5)
!17135 = !DILocation(line: 1501, column: 38, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17137, file: !1585, line: 1501, column: 13)
!17137 = distinct !DILexicalBlock(scope: !17138, file: !1585, line: 1500, column: 70)
!17138 = distinct !DILexicalBlock(scope: !17134, file: !1585, line: 1500, column: 5)
!17139 = !DILocation(line: 1501, column: 14, scope: !17136)
!17140 = !DILocation(line: 1501, column: 13, scope: !17137)
!17141 = !DILocation(line: 1500, column: 66, scope: !17138)
!17142 = !DILocation(line: 1500, column: 19, scope: !17138)
!17143 = distinct !{!17143, !17133, !17144}
!17144 = !DILocation(line: 1504, column: 5, scope: !17134)
!17145 = !DILocation(line: 1506, column: 1, scope: !17128)
!17146 = distinct !DISubprogram(name: "syslog_get_index_from_module_name", scope: !1585, file: !1585, line: 1252, type: !17147, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17149)
!17147 = !DISubroutineType(types: !17148)
!17148 = !{!7, !1694, !331}
!17149 = !{!17150, !17151, !17152}
!17150 = !DILocalVariable(name: "filters", arg: 1, scope: !17146, file: !1585, line: 1252, type: !1694)
!17151 = !DILocalVariable(name: "module_name", arg: 2, scope: !17146, file: !1585, line: 1252, type: !331)
!17152 = !DILocalVariable(name: "i", scope: !17146, file: !1585, line: 1254, type: !7)
!17153 = !DILocation(line: 0, scope: !17146)
!17154 = !DILocation(line: 1256, column: 17, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17146, file: !1585, line: 1256, column: 9)
!17156 = !DILocation(line: 1256, column: 9, scope: !17146)
!17157 = !DILocation(line: 1260, column: 12, scope: !17146)
!17158 = !DILocation(line: 1260, column: 5, scope: !17146)
!17159 = !DILocation(line: 1261, column: 33, scope: !17160)
!17160 = distinct !DILexicalBlock(scope: !17161, file: !1585, line: 1261, column: 13)
!17161 = distinct !DILexicalBlock(scope: !17146, file: !1585, line: 1260, column: 24)
!17162 = !DILocation(line: 1261, column: 14, scope: !17160)
!17163 = !DILocation(line: 1261, column: 13, scope: !17161)
!17164 = !DILocation(line: 1264, column: 10, scope: !17161)
!17165 = distinct !{!17165, !17158, !17166}
!17166 = !DILocation(line: 1265, column: 5, scope: !17146)
!17167 = !DILocation(line: 1269, column: 1, scope: !17146)
!17168 = distinct !DISubprogram(name: "syslog_at_set_filter", scope: !1585, file: !1585, line: 1319, type: !17169, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17171)
!17169 = !DISubroutineType(types: !17170)
!17170 = !{!7, !201, !7, !7, !7}
!17171 = !{!17172, !17173, !17174, !17175, !17176}
!17172 = !DILocalVariable(name: "module_name", arg: 1, scope: !17168, file: !1585, line: 1319, type: !201)
!17173 = !DILocalVariable(name: "log_switch", arg: 2, scope: !17168, file: !1585, line: 1319, type: !7)
!17174 = !DILocalVariable(name: "print_level", arg: 3, scope: !17168, file: !1585, line: 1319, type: !7)
!17175 = !DILocalVariable(name: "save", arg: 4, scope: !17168, file: !1585, line: 1319, type: !7)
!17176 = !DILocalVariable(name: "i", scope: !17168, file: !1585, line: 1321, type: !7)
!17177 = !DILocation(line: 0, scope: !17168)
!17178 = !DILocation(line: 1323, column: 9, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17168, file: !1585, line: 1323, column: 9)
!17180 = !DILocation(line: 1323, column: 34, scope: !17179)
!17181 = !DILocation(line: 0, scope: !17179)
!17182 = !DILocation(line: 1323, column: 9, scope: !17168)
!17183 = !DILocation(line: 1325, column: 35, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17185, file: !1585, line: 1325, column: 13)
!17185 = distinct !DILexicalBlock(scope: !17179, file: !1585, line: 1323, column: 40)
!17186 = !DILocation(line: 1325, column: 13, scope: !17185)
!17187 = !DILocation(line: 1330, column: 16, scope: !17185)
!17188 = !DILocation(line: 1330, column: 9, scope: !17185)
!17189 = !DILocation(line: 1331, column: 39, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17185, file: !1585, line: 1330, column: 42)
!17191 = !DILocation(line: 1331, column: 50, scope: !17190)
!17192 = !DILocation(line: 1332, column: 27, scope: !17190)
!17193 = !DILocation(line: 1332, column: 13, scope: !17190)
!17194 = !DILocation(line: 1332, column: 39, scope: !17190)
!17195 = !DILocation(line: 1332, column: 51, scope: !17190)
!17196 = !DILocation(line: 1333, column: 14, scope: !17190)
!17197 = distinct !{!17197, !17188, !17198}
!17198 = !DILocation(line: 1334, column: 9, scope: !17185)
!17199 = !DILocation(line: 1338, column: 13, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17179, file: !1585, line: 1336, column: 12)
!17201 = !DILocation(line: 1340, column: 15, scope: !17202)
!17202 = distinct !DILexicalBlock(scope: !17200, file: !1585, line: 1340, column: 13)
!17203 = !DILocation(line: 1340, column: 13, scope: !17200)
!17204 = !DILocation(line: 1343, column: 23, scope: !17200)
!17205 = !DILocation(line: 1343, column: 9, scope: !17200)
!17206 = !DILocation(line: 1343, column: 35, scope: !17200)
!17207 = !DILocation(line: 1343, column: 46, scope: !17200)
!17208 = !DILocation(line: 1344, column: 23, scope: !17200)
!17209 = !DILocation(line: 1344, column: 9, scope: !17200)
!17210 = !DILocation(line: 1344, column: 35, scope: !17200)
!17211 = !DILocation(line: 1344, column: 47, scope: !17200)
!17212 = !DILocation(line: 1348, column: 9, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17168, file: !1585, line: 1348, column: 9)
!17214 = !DILocation(line: 1348, column: 9, scope: !17168)
!17215 = !DILocation(line: 1349, column: 23, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17213, file: !1585, line: 1348, column: 15)
!17217 = !DILocation(line: 1349, column: 9, scope: !17216)
!17218 = !DILocation(line: 1350, column: 5, scope: !17216)
!17219 = !DILocation(line: 1353, column: 1, scope: !17168)
!17220 = distinct !DISubprogram(name: "syslog_convert_filter_str2val", scope: !1585, file: !1585, line: 1358, type: !17221, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17223)
!17221 = !DISubroutineType(types: !17222)
!17222 = !{!7, !1694, !201}
!17223 = !{!17224, !17225, !17226, !17227, !17228, !17229, !17230, !17231, !17232, !17233, !17234}
!17224 = !DILocalVariable(name: "filters", arg: 1, scope: !17220, file: !1585, line: 1358, type: !1694)
!17225 = !DILocalVariable(name: "buff", arg: 2, scope: !17220, file: !1585, line: 1358, type: !201)
!17226 = !DILocalVariable(name: "pos", scope: !17220, file: !1585, line: 1360, type: !7)
!17227 = !DILocalVariable(name: "i", scope: !17220, file: !1585, line: 1361, type: !7)
!17228 = !DILocalVariable(name: "module_name", scope: !17220, file: !1585, line: 1362, type: !201)
!17229 = !DILocalVariable(name: "log_switch_str", scope: !17220, file: !1585, line: 1363, type: !201)
!17230 = !DILocalVariable(name: "print_level_str", scope: !17220, file: !1585, line: 1364, type: !201)
!17231 = !DILocalVariable(name: "done", scope: !17220, file: !1585, line: 1365, type: !69)
!17232 = !DILocalVariable(name: "log_switch", scope: !17220, file: !1585, line: 1366, type: !61)
!17233 = !DILocalVariable(name: "print_level", scope: !17220, file: !1585, line: 1367, type: !61)
!17234 = !DILocalVariable(name: "type", scope: !17220, file: !1585, line: 1368, type: !54)
!17235 = !DILocation(line: 0, scope: !17220)
!17236 = !DILocation(line: 1362, column: 5, scope: !17220)
!17237 = !DILocation(line: 1363, column: 5, scope: !17220)
!17238 = !DILocation(line: 1364, column: 5, scope: !17220)
!17239 = !DILocation(line: 1368, column: 5, scope: !17220)
!17240 = !DILocation(line: 1370, column: 5, scope: !17220)
!17241 = !DILocation(line: 1376, column: 34, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17220, file: !1585, line: 1370, column: 19)
!17243 = !DILocation(line: 1376, column: 13, scope: !17242)
!17244 = !DILocation(line: 1377, column: 15, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17242, file: !1585, line: 1377, column: 13)
!17246 = !DILocation(line: 1377, column: 20, scope: !17245)
!17247 = !DILocation(line: 1377, column: 32, scope: !17245)
!17248 = !DILocation(line: 1377, column: 23, scope: !17245)
!17249 = !DILocation(line: 1377, column: 37, scope: !17245)
!17250 = !DILocation(line: 1377, column: 13, scope: !17242)
!17251 = !DILocation(line: 1382, column: 24, scope: !17242)
!17252 = !DILocation(line: 1383, column: 23, scope: !17242)
!17253 = !DILocation(line: 1389, column: 34, scope: !17242)
!17254 = !DILocation(line: 1389, column: 13, scope: !17242)
!17255 = !DILocation(line: 1390, column: 15, scope: !17256)
!17256 = distinct !DILexicalBlock(scope: !17242, file: !1585, line: 1390, column: 13)
!17257 = !DILocation(line: 1390, column: 13, scope: !17242)
!17258 = !DILocation(line: 1395, column: 24, scope: !17242)
!17259 = !DILocation(line: 1395, column: 17, scope: !17242)
!17260 = !DILocation(line: 1397, column: 24, scope: !17242)
!17261 = !DILocation(line: 1398, column: 23, scope: !17242)
!17262 = !DILocation(line: 1404, column: 34, scope: !17242)
!17263 = !DILocation(line: 1404, column: 13, scope: !17242)
!17264 = !DILocation(line: 1405, column: 15, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17242, file: !1585, line: 1405, column: 13)
!17266 = !DILocation(line: 1405, column: 13, scope: !17242)
!17267 = !DILocation(line: 1410, column: 24, scope: !17242)
!17268 = !DILocation(line: 1410, column: 17, scope: !17242)
!17269 = !DILocation(line: 1410, column: 31, scope: !17242)
!17270 = !DILocation(line: 1412, column: 24, scope: !17242)
!17271 = !DILocation(line: 1413, column: 23, scope: !17242)
!17272 = !DILocation(line: 1417, column: 56, scope: !17242)
!17273 = !DILocation(line: 1417, column: 13, scope: !17242)
!17274 = !DILocation(line: 1420, column: 15, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17242, file: !1585, line: 1420, column: 13)
!17276 = !DILocation(line: 1420, column: 13, scope: !17242)
!17277 = !DILocation(line: 1424, column: 26, scope: !17242)
!17278 = !DILocation(line: 1424, column: 22, scope: !17242)
!17279 = !DILocation(line: 1427, column: 13, scope: !17280)
!17280 = distinct !DILexicalBlock(scope: !17242, file: !1585, line: 1427, column: 13)
!17281 = !DILocation(line: 1427, column: 18, scope: !17280)
!17282 = !DILocation(line: 1427, column: 13, scope: !17242)
!17283 = !DILocation(line: 1434, column: 27, scope: !17242)
!17284 = !DILocation(line: 1434, column: 23, scope: !17242)
!17285 = !DILocation(line: 1437, column: 13, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17242, file: !1585, line: 1437, column: 13)
!17287 = !DILocation(line: 1437, column: 18, scope: !17286)
!17288 = !DILocation(line: 1437, column: 13, scope: !17242)
!17289 = !DILocation(line: 1432, column: 22, scope: !17242)
!17290 = !DILocation(line: 1442, column: 23, scope: !17242)
!17291 = !DILocation(line: 1444, column: 9, scope: !17242)
!17292 = !DILocation(line: 1444, column: 21, scope: !17242)
!17293 = !DILocation(line: 1444, column: 32, scope: !17242)
!17294 = !DILocation(line: 1445, column: 9, scope: !17242)
!17295 = !DILocation(line: 1445, column: 21, scope: !17242)
!17296 = !DILocation(line: 1445, column: 33, scope: !17242)
!17297 = distinct !{!17297, !17240, !17298}
!17298 = !DILocation(line: 1446, column: 5, scope: !17220)
!17299 = !DILocation(line: 1449, column: 1, scope: !17220)
!17300 = distinct !DISubprogram(name: "syslog_get_a_string", scope: !1585, file: !1585, line: 1227, type: !17301, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17303)
!17301 = !DISubroutineType(types: !17302)
!17302 = !{!7, !331, !1278}
!17303 = !{!17304, !17305, !17306}
!17304 = !DILocalVariable(name: "p", arg: 1, scope: !17300, file: !1585, line: 1227, type: !331)
!17305 = !DILocalVariable(name: "pp", arg: 2, scope: !17300, file: !1585, line: 1227, type: !1278)
!17306 = !DILocalVariable(name: "start", scope: !17300, file: !1585, line: 1229, type: !331)
!17307 = !DILocation(line: 0, scope: !17300)
!17308 = !DILocation(line: 1231, column: 5, scope: !17300)
!17309 = !DILocation(line: 1231, column: 12, scope: !17300)
!17310 = !DILocation(line: 1232, column: 10, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17300, file: !1585, line: 1231, column: 23)
!17312 = distinct !{!17312, !17308, !17313}
!17313 = !DILocation(line: 1233, column: 5, scope: !17300)
!17314 = !DILocation(line: 1239, column: 13, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17316, file: !1585, line: 1238, column: 21)
!17316 = distinct !DILexicalBlock(scope: !17300, file: !1585, line: 1238, column: 9)
!17317 = !DILocation(line: 1240, column: 9, scope: !17315)
!17318 = !DILocation(line: 1243, column: 9, scope: !17300)
!17319 = !DILocation(line: 1245, column: 5, scope: !17300)
!17320 = !DILocation(line: 1245, column: 12, scope: !17300)
!17321 = !DILocation(line: 1245, column: 22, scope: !17300)
!17322 = !DILocation(line: 1246, column: 10, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17300, file: !1585, line: 1245, column: 37)
!17324 = distinct !{!17324, !17319, !17325}
!17325 = !DILocation(line: 1247, column: 5, scope: !17300)
!17326 = !DILocation(line: 1249, column: 15, scope: !17300)
!17327 = !DILocation(line: 1249, column: 5, scope: !17300)
!17328 = !DILocation(line: 1250, column: 1, scope: !17300)
!17329 = distinct !DISubprogram(name: "syslog_convert_filter_val2str", scope: !1585, file: !1585, line: 1451, type: !17330, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17335)
!17330 = !DISubroutineType(types: !17331)
!17331 = !{!7, !17332, !201}
!17332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17333, size: 32)
!17333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17334, size: 32)
!17334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1653)
!17335 = !{!17336, !17337, !17338, !17339, !17340}
!17336 = !DILocalVariable(name: "filters", arg: 1, scope: !17329, file: !1585, line: 1451, type: !17332)
!17337 = !DILocalVariable(name: "buff", arg: 2, scope: !17329, file: !1585, line: 1451, type: !201)
!17338 = !DILocalVariable(name: "i", scope: !17329, file: !1585, line: 1453, type: !7)
!17339 = !DILocalVariable(name: "pos", scope: !17329, file: !1585, line: 1454, type: !7)
!17340 = !DILocalVariable(name: "n", scope: !17329, file: !1585, line: 1455, type: !7)
!17341 = !DILocation(line: 0, scope: !17329)
!17342 = !DILocation(line: 1457, column: 20, scope: !17329)
!17343 = !DILocation(line: 1457, column: 23, scope: !17329)
!17344 = !DILocation(line: 1457, column: 5, scope: !17329)
!17345 = !DILocation(line: 1458, column: 23, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17329, file: !1585, line: 1457, column: 35)
!17347 = !DILocation(line: 1458, column: 52, scope: !17346)
!17348 = !DILocation(line: 1459, column: 24, scope: !17346)
!17349 = !DILocation(line: 1459, column: 21, scope: !17346)
!17350 = !DILocation(line: 1460, column: 33, scope: !17346)
!17351 = !DILocation(line: 1461, column: 33, scope: !17346)
!17352 = !DILocation(line: 1462, column: 33, scope: !17346)
!17353 = !DILocation(line: 1458, column: 13, scope: !17346)
!17354 = !DILocation(line: 1463, column: 13, scope: !17346)
!17355 = !DILocation(line: 1464, column: 10, scope: !17346)
!17356 = distinct !{!17356, !17344, !17357}
!17357 = !DILocation(line: 1465, column: 5, scope: !17329)
!17358 = !DILocation(line: 1467, column: 5, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17329, file: !1585, line: 1467, column: 5)
!17360 = !DILocation(line: 1467, column: 5, scope: !17329)
!17361 = !DILocation(line: 1467, column: 5, scope: !17362)
!17362 = distinct !DILexicalBlock(scope: !17359, file: !1585, line: 1467, column: 5)
!17363 = !DILocation(line: 1469, column: 5, scope: !17329)
!17364 = distinct !DISubprogram(name: "log_switch_to_str", scope: !1585, file: !1585, line: 1472, type: !17365, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17367)
!17365 = !DISubroutineType(types: !17366)
!17366 = !{!331, !362}
!17367 = !{!17368}
!17368 = !DILocalVariable(name: "log_switch", arg: 1, scope: !17364, file: !1585, line: 1472, type: !362)
!17369 = !DILocation(line: 0, scope: !17364)
!17370 = !DILocation(line: 1474, column: 5, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17364, file: !1585, line: 1474, column: 5)
!17372 = !DILocation(line: 1474, column: 5, scope: !17364)
!17373 = !DILocation(line: 1474, column: 5, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17371, file: !1585, line: 1474, column: 5)
!17375 = !DILocation(line: 1475, column: 13, scope: !17364)
!17376 = !DILocation(line: 1475, column: 5, scope: !17364)
!17377 = distinct !DISubprogram(name: "print_level_to_str", scope: !1585, file: !1585, line: 1478, type: !17378, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17380)
!17378 = !DISubroutineType(types: !17379)
!17379 = !{!331, !364}
!17380 = !{!17381}
!17381 = !DILocalVariable(name: "print_level", arg: 1, scope: !17377, file: !1585, line: 1478, type: !364)
!17382 = !DILocation(line: 0, scope: !17377)
!17383 = !DILocation(line: 1480, column: 5, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17377, file: !1585, line: 1480, column: 5)
!17385 = !DILocation(line: 1480, column: 5, scope: !17377)
!17386 = !DILocation(line: 1480, column: 5, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17384, file: !1585, line: 1480, column: 5)
!17388 = !DILocation(line: 1481, column: 13, scope: !17377)
!17389 = !DILocation(line: 1481, column: 5, scope: !17377)
!17390 = distinct !DISubprogram(name: "__wrap_printf", scope: !1585, file: !1585, line: 1508, type: !17391, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1584, retainedNodes: !17393)
!17391 = !DISubroutineType(types: !17392)
!17392 = !{!7, !331, null}
!17393 = !{!17394, !17395, !17396, !17397}
!17394 = !DILocalVariable(name: "format", arg: 1, scope: !17390, file: !1585, line: 1508, type: !331)
!17395 = !DILocalVariable(name: "ap", scope: !17390, file: !1585, line: 1510, type: !16321)
!17396 = !DILocalVariable(name: "ret", scope: !17390, file: !1585, line: 1511, type: !7)
!17397 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !17390, file: !1585, line: 1512, type: !862)
!17398 = !DILocation(line: 0, scope: !17390)
!17399 = !DILocation(line: 1510, column: 5, scope: !17390)
!17400 = !DILocation(line: 1510, column: 13, scope: !17390)
!17401 = !DILocation(line: 1514, column: 11, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17390, file: !1585, line: 1514, column: 10)
!17403 = !DILocation(line: 1514, column: 10, scope: !17390)
!17404 = !DILocation(line: 231, column: 2, scope: !16397, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 1518, column: 30, scope: !17390)
!17406 = !DILocation(line: 0, scope: !16397, inlinedAt: !17405)
!17407 = !DILocation(line: 1520, column: 5, scope: !17390)
!17408 = !DILocation(line: 1521, column: 11, scope: !17390)
!17409 = !DILocation(line: 1522, column: 5, scope: !17390)
!17410 = !DILocation(line: 0, scope: !16419, inlinedAt: !17411)
!17411 = distinct !DILocation(line: 1524, column: 5, scope: !17390)
!17412 = !DILocation(line: 249, column: 2, scope: !16419, inlinedAt: !17411)
!17413 = !DILocation(line: 1526, column: 5, scope: !17390)
!17414 = !DILocation(line: 1527, column: 1, scope: !17390)
!17415 = distinct !DISubprogram(name: "nvdm_port_log_notice", scope: !1715, file: !1715, line: 43, type: !15259, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17416)
!17416 = !{!17417, !17418}
!17417 = !DILocalVariable(name: "message", arg: 1, scope: !17415, file: !1715, line: 43, type: !331)
!17418 = !DILocalVariable(name: "ap", scope: !17415, file: !1715, line: 45, type: !17419)
!17419 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5356, line: 14, baseType: !17420)
!17420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1715, baseType: !17421)
!17421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !17422)
!17422 = !{!17423}
!17423 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !17421, file: !1715, line: 45, baseType: !51, size: 32)
!17424 = !DILocation(line: 0, scope: !17415)
!17425 = !DILocation(line: 45, column: 5, scope: !17415)
!17426 = !DILocation(line: 45, column: 13, scope: !17415)
!17427 = !DILocation(line: 47, column: 5, scope: !17415)
!17428 = !DILocation(line: 48, column: 5, scope: !17415)
!17429 = !DILocation(line: 49, column: 5, scope: !17415)
!17430 = !DILocation(line: 50, column: 1, scope: !17415)
!17431 = distinct !DISubprogram(name: "nvdm_port_log_info", scope: !1715, file: !1715, line: 52, type: !15259, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17432)
!17432 = !{!17433, !17434}
!17433 = !DILocalVariable(name: "message", arg: 1, scope: !17431, file: !1715, line: 52, type: !331)
!17434 = !DILocalVariable(name: "ap", scope: !17431, file: !1715, line: 54, type: !17419)
!17435 = !DILocation(line: 0, scope: !17431)
!17436 = !DILocation(line: 54, column: 13, scope: !17431)
!17437 = !DILocation(line: 59, column: 1, scope: !17431)
!17438 = distinct !DISubprogram(name: "nvdm_port_log_error", scope: !1715, file: !1715, line: 61, type: !15259, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17439)
!17439 = !{!17440, !17441}
!17440 = !DILocalVariable(name: "message", arg: 1, scope: !17438, file: !1715, line: 61, type: !331)
!17441 = !DILocalVariable(name: "ap", scope: !17438, file: !1715, line: 63, type: !17419)
!17442 = !DILocation(line: 0, scope: !17438)
!17443 = !DILocation(line: 63, column: 5, scope: !17438)
!17444 = !DILocation(line: 63, column: 13, scope: !17438)
!17445 = !DILocation(line: 65, column: 5, scope: !17438)
!17446 = !DILocation(line: 66, column: 5, scope: !17438)
!17447 = !DILocation(line: 67, column: 5, scope: !17438)
!17448 = !DILocation(line: 69, column: 5, scope: !17438)
!17449 = distinct !DISubprogram(name: "nvdm_port_flash_read", scope: !1715, file: !1715, line: 82, type: !17450, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17452)
!17450 = !DISubroutineType(types: !17451)
!17451 = !{null, !61, !210, !61}
!17452 = !{!17453, !17454, !17455, !17456}
!17453 = !DILocalVariable(name: "address", arg: 1, scope: !17449, file: !1715, line: 82, type: !61)
!17454 = !DILocalVariable(name: "buffer", arg: 2, scope: !17449, file: !1715, line: 82, type: !210)
!17455 = !DILocalVariable(name: "length", arg: 3, scope: !17449, file: !1715, line: 82, type: !61)
!17456 = !DILocalVariable(name: "status", scope: !17449, file: !1715, line: 84, type: !6013)
!17457 = !DILocation(line: 0, scope: !17449)
!17458 = !DILocation(line: 86, column: 14, scope: !17449)
!17459 = !DILocation(line: 87, column: 16, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17449, file: !1715, line: 87, column: 9)
!17461 = !DILocation(line: 87, column: 9, scope: !17449)
!17462 = !DILocation(line: 88, column: 117, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17460, file: !1715, line: 87, column: 40)
!17464 = !DILocation(line: 88, column: 9, scope: !17463)
!17465 = !DILocation(line: 89, column: 5, scope: !17463)
!17466 = !DILocation(line: 90, column: 1, scope: !17449)
!17467 = distinct !DISubprogram(name: "nvdm_port_flash_write", scope: !1715, file: !1715, line: 92, type: !17468, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17470)
!17468 = !DISubroutineType(types: !17469)
!17469 = !{null, !61, !2415, !61}
!17470 = !{!17471, !17472, !17473, !17474}
!17471 = !DILocalVariable(name: "address", arg: 1, scope: !17467, file: !1715, line: 92, type: !61)
!17472 = !DILocalVariable(name: "buffer", arg: 2, scope: !17467, file: !1715, line: 92, type: !2415)
!17473 = !DILocalVariable(name: "length", arg: 3, scope: !17467, file: !1715, line: 92, type: !61)
!17474 = !DILocalVariable(name: "status", scope: !17467, file: !1715, line: 94, type: !6013)
!17475 = !DILocation(line: 0, scope: !17467)
!17476 = !DILocation(line: 96, column: 14, scope: !17467)
!17477 = !DILocation(line: 97, column: 16, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17467, file: !1715, line: 97, column: 9)
!17479 = !DILocation(line: 97, column: 9, scope: !17467)
!17480 = !DILocation(line: 98, column: 118, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17478, file: !1715, line: 97, column: 40)
!17482 = !DILocation(line: 98, column: 9, scope: !17481)
!17483 = !DILocation(line: 99, column: 5, scope: !17481)
!17484 = !DILocation(line: 100, column: 1, scope: !17467)
!17485 = distinct !DISubprogram(name: "nvdm_port_flash_erase", scope: !1715, file: !1715, line: 103, type: !2873, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17486)
!17486 = !{!17487, !17488}
!17487 = !DILocalVariable(name: "address", arg: 1, scope: !17485, file: !1715, line: 103, type: !61)
!17488 = !DILocalVariable(name: "status", scope: !17485, file: !1715, line: 105, type: !6013)
!17489 = !DILocation(line: 0, scope: !17485)
!17490 = !DILocation(line: 107, column: 14, scope: !17485)
!17491 = !DILocation(line: 108, column: 16, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17485, file: !1715, line: 108, column: 9)
!17493 = !DILocation(line: 108, column: 9, scope: !17485)
!17494 = !DILocation(line: 109, column: 9, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17492, file: !1715, line: 108, column: 40)
!17496 = !DILocation(line: 110, column: 5, scope: !17495)
!17497 = !DILocation(line: 111, column: 1, scope: !17485)
!17498 = distinct !DISubprogram(name: "nvdm_port_mutex_creat", scope: !1715, file: !1715, line: 125, type: !154, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !1397)
!17499 = !DILocation(line: 127, column: 20, scope: !17498)
!17500 = !DILocation(line: 127, column: 18, scope: !17498)
!17501 = !DILocation(line: 129, column: 22, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17498, file: !1715, line: 129, column: 9)
!17503 = !DILocation(line: 129, column: 9, scope: !17498)
!17504 = !DILocation(line: 130, column: 9, scope: !17505)
!17505 = distinct !DILexicalBlock(scope: !17502, file: !1715, line: 129, column: 31)
!17506 = !DILocation(line: 131, column: 5, scope: !17505)
!17507 = !DILocation(line: 133, column: 1, scope: !17498)
!17508 = distinct !DISubprogram(name: "nvdm_port_mutex_take", scope: !1715, file: !1715, line: 135, type: !154, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !1397)
!17509 = !DILocation(line: 137, column: 9, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17508, file: !1715, line: 137, column: 9)
!17511 = !DILocation(line: 137, column: 34, scope: !17510)
!17512 = !DILocation(line: 137, column: 9, scope: !17508)
!17513 = !DILocation(line: 138, column: 13, scope: !17514)
!17514 = distinct !DILexicalBlock(scope: !17515, file: !1715, line: 138, column: 13)
!17515 = distinct !DILexicalBlock(scope: !17510, file: !1715, line: 137, column: 64)
!17516 = !DILocation(line: 138, column: 57, scope: !17514)
!17517 = !DILocation(line: 138, column: 13, scope: !17515)
!17518 = !DILocation(line: 139, column: 13, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !17514, file: !1715, line: 138, column: 69)
!17520 = !DILocation(line: 140, column: 9, scope: !17519)
!17521 = !DILocation(line: 143, column: 1, scope: !17508)
!17522 = distinct !DISubprogram(name: "nvdm_port_mutex_give", scope: !1715, file: !1715, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !1397)
!17523 = !DILocation(line: 147, column: 9, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17522, file: !1715, line: 147, column: 9)
!17525 = !DILocation(line: 147, column: 34, scope: !17524)
!17526 = !DILocation(line: 147, column: 9, scope: !17522)
!17527 = !DILocation(line: 148, column: 13, scope: !17528)
!17528 = distinct !DILexicalBlock(scope: !17529, file: !1715, line: 148, column: 13)
!17529 = distinct !DILexicalBlock(scope: !17524, file: !1715, line: 147, column: 64)
!17530 = !DILocation(line: 148, column: 42, scope: !17528)
!17531 = !DILocation(line: 148, column: 13, scope: !17529)
!17532 = !DILocation(line: 149, column: 13, scope: !17533)
!17533 = distinct !DILexicalBlock(scope: !17528, file: !1715, line: 148, column: 54)
!17534 = !DILocation(line: 150, column: 9, scope: !17533)
!17535 = !DILocation(line: 153, column: 1, scope: !17522)
!17536 = distinct !DISubprogram(name: "nvdm_port_malloc", scope: !1715, file: !1715, line: 155, type: !17537, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17538)
!17537 = !DISubroutineType(types: !625)
!17538 = !{!17539}
!17539 = !DILocalVariable(name: "size", arg: 1, scope: !17536, file: !1715, line: 155, type: !61)
!17540 = !DILocation(line: 0, scope: !17536)
!17541 = !DILocation(line: 157, column: 12, scope: !17536)
!17542 = !DILocation(line: 157, column: 5, scope: !17536)
!17543 = distinct !DISubprogram(name: "nvdm_port_free", scope: !1715, file: !1715, line: 160, type: !640, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17544)
!17544 = !{!17545}
!17545 = !DILocalVariable(name: "pdata", arg: 1, scope: !17543, file: !1715, line: 160, type: !51)
!17546 = !DILocation(line: 0, scope: !17543)
!17547 = !DILocation(line: 162, column: 5, scope: !17543)
!17548 = !DILocation(line: 163, column: 1, scope: !17543)
!17549 = distinct !DISubprogram(name: "nvdm_port_get_task_handler", scope: !1715, file: !1715, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !1397)
!17550 = !DILocation(line: 167, column: 22, scope: !17549)
!17551 = !DILocation(line: 167, column: 20, scope: !17549)
!17552 = !DILocation(line: 168, column: 1, scope: !17549)
!17553 = distinct !DISubprogram(name: "nvdm_port_query_task_handler", scope: !1715, file: !1715, line: 170, type: !16074, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !1397)
!17554 = !DILocation(line: 172, column: 9, scope: !17555)
!17555 = distinct !DILexicalBlock(scope: !17553, file: !1715, line: 172, column: 9)
!17556 = !DILocation(line: 172, column: 40, scope: !17555)
!17557 = !DILocation(line: 172, column: 37, scope: !17555)
!17558 = !DILocation(line: 177, column: 1, scope: !17553)
!17559 = distinct !DISubprogram(name: "nvdm_port_get_data_item_config", scope: !1715, file: !1715, line: 241, type: !17560, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17562)
!17560 = !DISubroutineType(types: !17561)
!17561 = !{!61, !2833, !2833, !2833}
!17562 = !{!17563, !17564, !17565}
!17563 = !DILocalVariable(name: "max_data_item_size", arg: 1, scope: !17559, file: !1715, line: 241, type: !2833)
!17564 = !DILocalVariable(name: "max_group_name_size", arg: 2, scope: !17559, file: !1715, line: 242, type: !2833)
!17565 = !DILocalVariable(name: "max_data_item_name_size", arg: 3, scope: !17559, file: !1715, line: 243, type: !2833)
!17566 = !DILocation(line: 0, scope: !17559)
!17567 = !DILocation(line: 245, column: 25, scope: !17559)
!17568 = !DILocation(line: 246, column: 26, scope: !17559)
!17569 = !DILocation(line: 247, column: 30, scope: !17559)
!17570 = !DILocation(line: 249, column: 5, scope: !17559)
!17571 = distinct !DISubprogram(name: "nvdm_port_get_peb_config", scope: !1715, file: !1715, line: 252, type: !17572, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17574)
!17572 = !DISubroutineType(types: !17573)
!17573 = !{!61, !2833}
!17574 = !{!17575}
!17575 = !DILocalVariable(name: "peb_count", arg: 1, scope: !17571, file: !1715, line: 252, type: !2833)
!17576 = !DILocation(line: 0, scope: !17571)
!17577 = !DILocation(line: 254, column: 16, scope: !17571)
!17578 = !DILocation(line: 256, column: 5, scope: !17571)
!17579 = distinct !DISubprogram(name: "nvdm_port_get_peb_address", scope: !1715, file: !1715, line: 259, type: !17580, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17582)
!17580 = !DISubroutineType(types: !17581)
!17581 = !{!61, !527, !527}
!17582 = !{!17583, !17584}
!17583 = !DILocalVariable(name: "pnum", arg: 1, scope: !17579, file: !1715, line: 259, type: !527)
!17584 = !DILocalVariable(name: "offset", arg: 2, scope: !17579, file: !1715, line: 259, type: !527)
!17585 = !DILocation(line: 0, scope: !17579)
!17586 = !DILocation(line: 261, column: 12, scope: !17579)
!17587 = !DILocation(line: 261, column: 5, scope: !17579)
!17588 = distinct !DISubprogram(name: "nvdm_port_poweroff_time_set", scope: !1715, file: !1715, line: 264, type: !154, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !1397)
!17589 = !DILocation(line: 265, column: 2, scope: !17588)
!17590 = distinct !DISubprogram(name: "nvdm_port_poweroff", scope: !1715, file: !1715, line: 266, type: !2873, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !17591)
!17591 = !{!17592}
!17592 = !DILocalVariable(name: "poweroff_time", arg: 1, scope: !17590, file: !1715, line: 266, type: !61)
!17593 = !DILocation(line: 0, scope: !17590)
!17594 = !DILocation(line: 267, column: 2, scope: !17590)
!17595 = distinct !DISubprogram(name: "__io_putchar", scope: !2240, file: !2240, line: 72, type: !3653, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !17596)
!17596 = !{!17597}
!17597 = !DILocalVariable(name: "ch", arg: 1, scope: !17595, file: !2240, line: 72, type: !7)
!17598 = !DILocation(line: 0, scope: !17595)
!17599 = !DILocation(line: 77, column: 35, scope: !17595)
!17600 = !DILocation(line: 77, column: 5, scope: !17595)
!17601 = !DILocation(line: 78, column: 12, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17595, file: !2240, line: 78, column: 9)
!17603 = !DILocation(line: 78, column: 9, scope: !17595)
!17604 = !DILocation(line: 79, column: 9, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17602, file: !2240, line: 78, column: 21)
!17606 = !DILocation(line: 80, column: 5, scope: !17605)
!17607 = !DILocation(line: 81, column: 5, scope: !17595)
!17608 = distinct !DISubprogram(name: "system_init", scope: !2240, file: !2240, line: 213, type: !154, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !1397)
!17609 = !DILocation(line: 216, column: 5, scope: !17608)
!17610 = !DILocation(line: 219, column: 5, scope: !17608)
!17611 = !DILocation(line: 223, column: 5, scope: !17608)
!17612 = !DILocation(line: 227, column: 5, scope: !17608)
!17613 = !DILocation(line: 228, column: 1, scope: !17608)
!17614 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2240, file: !2240, line: 90, type: !154, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !1397)
!17615 = !DILocation(line: 93, column: 5, scope: !17614)
!17616 = !DILocation(line: 96, column: 5, scope: !17614)
!17617 = !DILocation(line: 99, column: 5, scope: !17614)
!17618 = !DILocation(line: 100, column: 1, scope: !17614)
!17619 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2240, file: !2240, line: 149, type: !154, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !1397)
!17620 = !DILocation(line: 152, column: 9, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17619, file: !2240, line: 152, column: 9)
!17622 = !DILocation(line: 160, column: 5, scope: !17619)
!17623 = !DILocation(line: 174, column: 5, scope: !17619)
!17624 = !DILocation(line: 177, column: 5, scope: !17619)
!17625 = !DILocation(line: 178, column: 1, scope: !17619)
!17626 = distinct !DISubprogram(name: "_main_sys_random_init", scope: !2240, file: !2240, line: 185, type: !154, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !17627)
!17627 = !{!17628, !17629}
!17628 = !DILocalVariable(name: "seed", scope: !17626, file: !2240, line: 189, type: !61)
!17629 = !DILocalVariable(name: "s", scope: !17626, file: !2240, line: 190, type: !2826)
!17630 = !DILocation(line: 189, column: 5, scope: !17626)
!17631 = !DILocation(line: 192, column: 9, scope: !17626)
!17632 = !DILocation(line: 0, scope: !17626)
!17633 = !DILocation(line: 194, column: 11, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17626, file: !2240, line: 194, column: 9)
!17635 = !DILocation(line: 194, column: 9, scope: !17626)
!17636 = !DILocation(line: 195, column: 13, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !17634, file: !2240, line: 194, column: 34)
!17638 = !DILocation(line: 198, column: 9, scope: !17626)
!17639 = !DILocation(line: 199, column: 29, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17641, file: !2240, line: 198, column: 34)
!17641 = distinct !DILexicalBlock(scope: !17626, file: !2240, line: 198, column: 9)
!17642 = !DILocation(line: 199, column: 9, scope: !17640)
!17643 = !DILocation(line: 202, column: 9, scope: !17626)
!17644 = !DILocation(line: 203, column: 9, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17646, file: !2240, line: 203, column: 9)
!17646 = distinct !DILexicalBlock(scope: !17647, file: !2240, line: 202, column: 34)
!17647 = distinct !DILexicalBlock(scope: !17626, file: !2240, line: 202, column: 9)
!17648 = !DILocation(line: 204, column: 5, scope: !17646)
!17649 = !DILocation(line: 206, column: 1, scope: !17626)
!17650 = distinct !DISubprogram(name: "cache_enable", scope: !2240, file: !2240, line: 111, type: !17651, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !17653)
!17651 = !DISubroutineType(types: !17652)
!17652 = !{!527, !5576}
!17653 = !{!17654, !17655, !17656, !17657}
!17654 = !DILocalVariable(name: "cache_size", arg: 1, scope: !17650, file: !2240, line: 111, type: !5576)
!17655 = !DILocalVariable(name: "region", scope: !17650, file: !2240, line: 113, type: !2243)
!17656 = !DILocalVariable(name: "region_number", scope: !17650, file: !2240, line: 113, type: !2243)
!17657 = !DILocalVariable(name: "region_cfg_tbl", scope: !17650, file: !2240, line: 115, type: !17658)
!17658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17659, size: 64, elements: !446)
!17659 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !383, line: 222, baseType: !17660)
!17660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !383, line: 219, size: 64, elements: !17661)
!17661 = !{!17662, !17663}
!17662 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !17660, file: !383, line: 220, baseType: !61, size: 32)
!17663 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !17660, file: !383, line: 221, baseType: !61, size: 32, offset: 32)
!17664 = !DILocation(line: 0, scope: !17650)
!17665 = !DILocation(line: 115, column: 5, scope: !17650)
!17666 = !DILocation(line: 115, column: 31, scope: !17650)
!17667 = !DILocation(line: 129, column: 5, scope: !17650)
!17668 = !DILocation(line: 132, column: 5, scope: !17650)
!17669 = !DILocation(line: 134, column: 42, scope: !17670)
!17670 = distinct !DILexicalBlock(scope: !17671, file: !2240, line: 133, column: 73)
!17671 = distinct !DILexicalBlock(scope: !17672, file: !2240, line: 133, column: 5)
!17672 = distinct !DILexicalBlock(scope: !17650, file: !2240, line: 133, column: 5)
!17673 = !DILocation(line: 134, column: 9, scope: !17670)
!17674 = !DILocation(line: 135, column: 9, scope: !17670)
!17675 = !DILocation(line: 137, column: 5, scope: !17676)
!17676 = distinct !DILexicalBlock(scope: !17650, file: !2240, line: 137, column: 5)
!17677 = !DILocation(line: 138, column: 9, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17679, file: !2240, line: 137, column: 53)
!17679 = distinct !DILexicalBlock(scope: !17676, file: !2240, line: 137, column: 5)
!17680 = !DILocation(line: 137, column: 49, scope: !17679)
!17681 = !DILocation(line: 137, column: 19, scope: !17679)
!17682 = distinct !{!17682, !17675, !17683}
!17683 = !DILocation(line: 139, column: 5, scope: !17676)
!17684 = !DILocation(line: 140, column: 5, scope: !17650)
!17685 = !DILocation(line: 142, column: 1, scope: !17650)
!17686 = distinct !DISubprogram(name: "SysTick_Set", scope: !1751, file: !1751, line: 70, type: !6260, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !17687)
!17687 = !{!17688, !17689}
!17688 = !DILocalVariable(name: "ticks", arg: 1, scope: !17686, file: !1751, line: 70, type: !61)
!17689 = !DILocalVariable(name: "val", scope: !17686, file: !1751, line: 72, type: !61)
!17690 = !DILocation(line: 0, scope: !17686)
!17691 = !DILocation(line: 74, column: 16, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17686, file: !1751, line: 74, column: 9)
!17693 = !DILocation(line: 74, column: 21, scope: !17692)
!17694 = !DILocation(line: 74, column: 9, scope: !17686)
!17695 = !DILocation(line: 78, column: 20, scope: !17686)
!17696 = !DILocation(line: 80, column: 19, scope: !17686)
!17697 = !DILocation(line: 83, column: 20, scope: !17686)
!17698 = !DILocation(line: 84, column: 20, scope: !17686)
!17699 = !DILocation(line: 86, column: 19, scope: !17686)
!17700 = !DILocation(line: 88, column: 5, scope: !17686)
!17701 = !DILocation(line: 89, column: 1, scope: !17686)
!17702 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !1751, file: !1751, line: 98, type: !154, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1397)
!17703 = !DILocation(line: 100, column: 28, scope: !17702)
!17704 = !DILocation(line: 101, column: 1, scope: !17702)
!17705 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !1751, file: !1751, line: 110, type: !2255, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1397)
!17706 = !DILocation(line: 112, column: 12, scope: !17705)
!17707 = !DILocation(line: 112, column: 5, scope: !17705)
!17708 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1751, file: !1751, line: 122, type: !154, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1397)
!17709 = !DILocation(line: 124, column: 23, scope: !17708)
!17710 = !DILocation(line: 124, column: 21, scope: !17708)
!17711 = !DILocation(line: 125, column: 1, scope: !17708)
!17712 = distinct !DISubprogram(name: "SystemInit", scope: !1751, file: !1751, line: 136, type: !154, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1397)
!17713 = !DILocation(line: 140, column: 16, scope: !17712)
!17714 = !DILocation(line: 144, column: 16, scope: !17712)
!17715 = !DILocation(line: 147, column: 16, scope: !17712)
!17716 = !DILocation(line: 150, column: 1, scope: !17712)
!17717 = distinct !DISubprogram(name: "CachePreInit", scope: !1751, file: !1751, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1397)
!17718 = !DILocation(line: 161, column: 22, scope: !17717)
!17719 = !DILocation(line: 164, column: 21, scope: !17717)
!17720 = !DILocation(line: 167, column: 21, scope: !17717)
!17721 = !DILocation(line: 170, column: 29, scope: !17717)
!17722 = !DILocation(line: 171, column: 33, scope: !17717)
!17723 = !DILocation(line: 173, column: 28, scope: !17717)
!17724 = !DILocation(line: 178, column: 30, scope: !17717)
!17725 = !DILocation(line: 192, column: 1, scope: !17717)
!17726 = distinct !DISubprogram(name: "_close", scope: !1811, file: !1811, line: 45, type: !3653, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17727)
!17727 = !{!17728}
!17728 = !DILocalVariable(name: "file", arg: 1, scope: !17726, file: !1811, line: 45, type: !7)
!17729 = !DILocation(line: 0, scope: !17726)
!17730 = !DILocation(line: 47, column: 5, scope: !17726)
!17731 = distinct !DISubprogram(name: "_fstat", scope: !1811, file: !1811, line: 50, type: !17732, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17780)
!17732 = !DISubroutineType(types: !17733)
!17733 = !{!7, !7, !17734}
!17734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17735, size: 32)
!17735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !17736, line: 27, size: 704, elements: !17737)
!17736 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!17737 = !{!17738, !17741, !17744, !17747, !17750, !17753, !17756, !17757, !17760, !17770, !17771, !17772, !17775, !17778}
!17738 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !17735, file: !17736, line: 29, baseType: !17739, size: 16)
!17739 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !1815, line: 161, baseType: !17740)
!17740 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !922, line: 56, baseType: !1830)
!17741 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !17735, file: !17736, line: 30, baseType: !17742, size: 16, offset: 16)
!17742 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !1815, line: 139, baseType: !17743)
!17743 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !922, line: 75, baseType: !322)
!17744 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !17735, file: !17736, line: 31, baseType: !17745, size: 32, offset: 32)
!17745 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !1815, line: 189, baseType: !17746)
!17746 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !922, line: 90, baseType: !62)
!17747 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !17735, file: !17736, line: 32, baseType: !17748, size: 16, offset: 64)
!17748 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !1815, line: 194, baseType: !17749)
!17749 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !922, line: 209, baseType: !322)
!17750 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !17735, file: !17736, line: 33, baseType: !17751, size: 16, offset: 80)
!17751 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !1815, line: 165, baseType: !17752)
!17752 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !922, line: 60, baseType: !322)
!17753 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !17735, file: !17736, line: 34, baseType: !17754, size: 16, offset: 96)
!17754 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !1815, line: 169, baseType: !17755)
!17755 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !922, line: 63, baseType: !322)
!17756 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !17735, file: !17736, line: 35, baseType: !17739, size: 16, offset: 112)
!17757 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !17735, file: !17736, line: 36, baseType: !17758, size: 32, offset: 128)
!17758 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1815, line: 157, baseType: !17759)
!17759 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !922, line: 102, baseType: !1869)
!17760 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !17735, file: !17736, line: 42, baseType: !17761, size: 128, offset: 192)
!17761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !17762, line: 47, size: 128, elements: !17763)
!17762 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!17763 = !{!17764, !17769}
!17764 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !17761, file: !17762, line: 48, baseType: !17765, size: 64)
!17765 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !17766, line: 42, baseType: !17767)
!17766 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!17767 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !57, line: 200, baseType: !17768)
!17768 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!17769 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !17761, file: !17762, line: 49, baseType: !174, size: 32, offset: 64)
!17770 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !17735, file: !17736, line: 43, baseType: !17761, size: 128, offset: 320)
!17771 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !17735, file: !17736, line: 44, baseType: !17761, size: 128, offset: 448)
!17772 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !17735, file: !17736, line: 45, baseType: !17773, size: 32, offset: 576)
!17773 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !1815, line: 102, baseType: !17774)
!17774 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !922, line: 34, baseType: !174)
!17775 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !17735, file: !17736, line: 46, baseType: !17776, size: 32, offset: 608)
!17776 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !1815, line: 97, baseType: !17777)
!17777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !922, line: 30, baseType: !174)
!17778 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !17735, file: !17736, line: 48, baseType: !17779, size: 64, offset: 640)
!17779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !333)
!17780 = !{!17781, !17782}
!17781 = !DILocalVariable(name: "file", arg: 1, scope: !17731, file: !1811, line: 50, type: !7)
!17782 = !DILocalVariable(name: "st", arg: 2, scope: !17731, file: !1811, line: 50, type: !17734)
!17783 = !DILocation(line: 0, scope: !17731)
!17784 = !DILocation(line: 52, column: 5, scope: !17731)
!17785 = distinct !DISubprogram(name: "_isatty", scope: !1811, file: !1811, line: 56, type: !3653, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17786)
!17786 = !{!17787}
!17787 = !DILocalVariable(name: "file", arg: 1, scope: !17785, file: !1811, line: 56, type: !7)
!17788 = !DILocation(line: 0, scope: !17785)
!17789 = !DILocation(line: 58, column: 5, scope: !17785)
!17790 = distinct !DISubprogram(name: "_lseek", scope: !1811, file: !1811, line: 61, type: !17791, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17793)
!17791 = !DISubroutineType(types: !17792)
!17792 = !{!7, !7, !7, !7}
!17793 = !{!17794, !17795, !17796}
!17794 = !DILocalVariable(name: "file", arg: 1, scope: !17790, file: !1811, line: 61, type: !7)
!17795 = !DILocalVariable(name: "ptr", arg: 2, scope: !17790, file: !1811, line: 61, type: !7)
!17796 = !DILocalVariable(name: "dir", arg: 3, scope: !17790, file: !1811, line: 61, type: !7)
!17797 = !DILocation(line: 0, scope: !17790)
!17798 = !DILocation(line: 63, column: 5, scope: !17790)
!17799 = distinct !DISubprogram(name: "_open", scope: !1811, file: !1811, line: 66, type: !17800, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17802)
!17800 = !DISubroutineType(types: !17801)
!17801 = !{!7, !331, !7, !7}
!17802 = !{!17803, !17804, !17805}
!17803 = !DILocalVariable(name: "name", arg: 1, scope: !17799, file: !1811, line: 66, type: !331)
!17804 = !DILocalVariable(name: "flags", arg: 2, scope: !17799, file: !1811, line: 66, type: !7)
!17805 = !DILocalVariable(name: "mode", arg: 3, scope: !17799, file: !1811, line: 66, type: !7)
!17806 = !DILocation(line: 0, scope: !17799)
!17807 = !DILocation(line: 68, column: 5, scope: !17799)
!17808 = distinct !DISubprogram(name: "_read", scope: !1811, file: !1811, line: 71, type: !17809, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17811)
!17809 = !DISubroutineType(types: !17810)
!17810 = !{!7, !7, !201, !7}
!17811 = !{!17812, !17813, !17814}
!17812 = !DILocalVariable(name: "file", arg: 1, scope: !17808, file: !1811, line: 71, type: !7)
!17813 = !DILocalVariable(name: "ptr", arg: 2, scope: !17808, file: !1811, line: 71, type: !201)
!17814 = !DILocalVariable(name: "len", arg: 3, scope: !17808, file: !1811, line: 71, type: !7)
!17815 = !DILocation(line: 0, scope: !17808)
!17816 = !DILocation(line: 73, column: 5, scope: !17808)
!17817 = distinct !DISubprogram(name: "_write", scope: !1811, file: !1811, line: 86, type: !17809, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17818)
!17818 = !{!17819, !17820, !17821, !17822}
!17819 = !DILocalVariable(name: "file", arg: 1, scope: !17817, file: !1811, line: 86, type: !7)
!17820 = !DILocalVariable(name: "ptr", arg: 2, scope: !17817, file: !1811, line: 86, type: !201)
!17821 = !DILocalVariable(name: "len", arg: 3, scope: !17817, file: !1811, line: 86, type: !7)
!17822 = !DILocalVariable(name: "i", scope: !17817, file: !1811, line: 88, type: !7)
!17823 = !DILocation(line: 0, scope: !17817)
!17824 = !DILocation(line: 90, column: 19, scope: !17825)
!17825 = distinct !DILexicalBlock(scope: !17826, file: !1811, line: 90, column: 5)
!17826 = distinct !DILexicalBlock(scope: !17817, file: !1811, line: 90, column: 5)
!17827 = !DILocation(line: 90, column: 5, scope: !17826)
!17828 = !DILocation(line: 91, column: 26, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17825, file: !1811, line: 90, column: 31)
!17830 = !DILocation(line: 91, column: 22, scope: !17829)
!17831 = !DILocation(line: 91, column: 9, scope: !17829)
!17832 = !DILocation(line: 90, column: 27, scope: !17825)
!17833 = distinct !{!17833, !17827, !17834}
!17834 = !DILocation(line: 92, column: 5, scope: !17826)
!17835 = !DILocation(line: 94, column: 5, scope: !17817)
!17836 = !DILocation(line: 0, scope: !1810)
!17837 = !DILocation(line: 105, column: 5, scope: !1810)
!17838 = !{i64 3455}
!17839 = !DILocation(line: 107, column: 14, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !1810, file: !1811, line: 107, column: 9)
!17841 = !DILocation(line: 107, column: 11, scope: !17840)
!17842 = !DILocation(line: 107, column: 9, scope: !1810)
!17843 = !DILocation(line: 113, column: 32, scope: !17844)
!17844 = distinct !DILexicalBlock(scope: !1810, file: !1811, line: 113, column: 9)
!17845 = !DILocation(line: 113, column: 15, scope: !17844)
!17846 = !DILocation(line: 124, column: 1, scope: !1810)
!17847 = !DILocation(line: 113, column: 9, scope: !1810)
!17848 = distinct !DISubprogram(name: "_exit", scope: !1811, file: !1811, line: 126, type: !1951, scopeLine: 127, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17849)
!17849 = !{!17850}
!17850 = !DILocalVariable(name: "__status", arg: 1, scope: !17848, file: !1811, line: 126, type: !7)
!17851 = !DILocation(line: 0, scope: !17848)
!17852 = !DILocation(line: 128, column: 5, scope: !17848)
!17853 = !DILocation(line: 129, column: 5, scope: !17848)
!17854 = distinct !{!17854, !17853, !17855}
!17855 = !DILocation(line: 131, column: 5, scope: !17848)
!17856 = distinct !DISubprogram(name: "_kill", scope: !1811, file: !1811, line: 135, type: !17857, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !17859)
!17857 = !DISubroutineType(types: !17858)
!17858 = !{!7, !7, !7}
!17859 = !{!17860, !17861}
!17860 = !DILocalVariable(name: "pid", arg: 1, scope: !17856, file: !1811, line: 135, type: !7)
!17861 = !DILocalVariable(name: "sig", arg: 2, scope: !17856, file: !1811, line: 135, type: !7)
!17862 = !DILocation(line: 0, scope: !17856)
!17863 = !DILocation(line: 137, column: 5, scope: !17856)
!17864 = !DILocation(line: 138, column: 5, scope: !17856)
!17865 = distinct !DISubprogram(name: "_getpid", scope: !1811, file: !1811, line: 142, type: !17866, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1999, retainedNodes: !1397)
!17866 = !DISubroutineType(types: !17867)
!17867 = !{!17868}
!17868 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !1815, line: 174, baseType: !17869)
!17869 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !922, line: 52, baseType: !7)
!17870 = !DILocation(line: 144, column: 5, scope: !17865)
!17871 = !DILocation(line: 145, column: 5, scope: !17865)
!17872 = distinct !DISubprogram(name: "main", scope: !2094, file: !2094, line: 86, type: !2959, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !1397)
!17873 = !DILocation(line: 89, column: 5, scope: !17872)
!17874 = !DILocation(line: 97, column: 5, scope: !17872)
!17875 = !DILocation(line: 99, column: 5, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17872, file: !2094, line: 99, column: 5)
!17877 = !DILocation(line: 109, column: 19, scope: !17878)
!17878 = distinct !DILexicalBlock(scope: !17872, file: !2094, line: 109, column: 9)
!17879 = !DILocation(line: 109, column: 16, scope: !17878)
!17880 = !DILocation(line: 109, column: 9, scope: !17872)
!17881 = !DILocation(line: 115, column: 9, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17883, file: !2094, line: 115, column: 9)
!17883 = distinct !DILexicalBlock(scope: !17878, file: !2094, line: 114, column: 38)
!17884 = !DILocation(line: 116, column: 9, scope: !17883)
!17885 = !DILocation(line: 121, column: 5, scope: !17872)
!17886 = !DILocation(line: 124, column: 5, scope: !17872)
!17887 = !DILocation(line: 132, column: 5, scope: !17872)
!17888 = !DILocation(line: 132, column: 5, scope: !17889)
!17889 = distinct !DILexicalBlock(scope: !17890, file: !2094, line: 132, column: 5)
!17890 = distinct !DILexicalBlock(scope: !17872, file: !2094, line: 132, column: 5)
!17891 = distinct !{!17891, !17892, !17893}
!17892 = !DILocation(line: 132, column: 5, scope: !17890)
!17893 = !DILocation(line: 132, column: 15, scope: !17890)
!17894 = distinct !DISubprogram(name: "xml_test_proc", scope: !2094, file: !2094, line: 65, type: !640, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !17895)
!17895 = !{!17896, !17897}
!17896 = !DILocalVariable(name: "args", arg: 1, scope: !17894, file: !2094, line: 65, type: !51)
!17897 = !DILocalVariable(name: "ret", scope: !17894, file: !2094, line: 67, type: !7)
!17898 = !DILocation(line: 0, scope: !17894)
!17899 = !DILocation(line: 69, column: 5, scope: !17900)
!17900 = distinct !DILexicalBlock(scope: !17894, file: !2094, line: 69, column: 5)
!17901 = !DILocation(line: 70, column: 11, scope: !17894)
!17902 = !DILocation(line: 71, column: 5, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17894, file: !2094, line: 71, column: 5)
!17904 = !DILocation(line: 72, column: 13, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17894, file: !2094, line: 72, column: 9)
!17906 = !DILocation(line: 72, column: 9, scope: !17894)
!17907 = !DILocation(line: 73, column: 9, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17909, file: !2094, line: 73, column: 9)
!17909 = distinct !DILexicalBlock(scope: !17905, file: !2094, line: 72, column: 19)
!17910 = !DILocation(line: 74, column: 5, scope: !17909)
!17911 = !DILocation(line: 76, column: 5, scope: !17894)
!17912 = !DILocation(line: 77, column: 9, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17894, file: !2094, line: 76, column: 15)
!17914 = distinct !{!17914, !17911, !17915}
!17915 = !DILocation(line: 78, column: 5, scope: !17894)
!17916 = !DILocation(line: 0, scope: !2017)
!17917 = !DILocation(line: 101, column: 5, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 101, column: 5)
!17919 = !DILocation(line: 103, column: 12, scope: !2017)
!17920 = !DILocation(line: 105, column: 10, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 105, column: 9)
!17922 = !DILocation(line: 105, column: 9, scope: !2017)
!17923 = !DILocation(line: 106, column: 57, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17921, file: !2011, line: 105, column: 16)
!17925 = !DILocation(line: 106, column: 9, scope: !17924)
!17926 = !DILocation(line: 107, column: 9, scope: !17927)
!17927 = distinct !DILexicalBlock(scope: !17924, file: !2011, line: 107, column: 9)
!17928 = !DILocation(line: 108, column: 9, scope: !17924)
!17929 = !DILocation(line: 110, column: 5, scope: !17930)
!17930 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 110, column: 5)
!17931 = !DILocation(line: 112, column: 15, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 112, column: 9)
!17933 = !DILocation(line: 112, column: 20, scope: !17932)
!17934 = !DILocation(line: 112, column: 9, scope: !2017)
!17935 = !DILocation(line: 113, column: 17, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17932, file: !2011, line: 112, column: 37)
!17937 = !DILocation(line: 114, column: 43, scope: !17936)
!17938 = !DILocation(line: 115, column: 29, scope: !17936)
!17939 = !DILocation(line: 114, column: 17, scope: !17936)
!17940 = !DILocation(line: 113, column: 9, scope: !17936)
!17941 = !DILocation(line: 116, column: 9, scope: !17942)
!17942 = distinct !DILexicalBlock(scope: !17936, file: !2011, line: 116, column: 9)
!17943 = !DILocation(line: 119, column: 9, scope: !17936)
!17944 = !DILocation(line: 120, column: 9, scope: !17936)
!17945 = !DILocation(line: 122, column: 5, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 122, column: 5)
!17947 = !DILocation(line: 124, column: 22, scope: !17948)
!17948 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 124, column: 9)
!17949 = !DILocation(line: 124, column: 36, scope: !17948)
!17950 = !DILocation(line: 124, column: 9, scope: !17948)
!17951 = !DILocation(line: 124, column: 9, scope: !2017)
!17952 = !DILocation(line: 125, column: 17, scope: !17953)
!17953 = distinct !DILexicalBlock(scope: !17948, file: !2011, line: 124, column: 54)
!17954 = !DILocation(line: 126, column: 37, scope: !17953)
!17955 = !DILocation(line: 125, column: 9, scope: !17953)
!17956 = !DILocation(line: 127, column: 9, scope: !17957)
!17957 = distinct !DILexicalBlock(scope: !17953, file: !2011, line: 127, column: 9)
!17958 = !DILocation(line: 129, column: 9, scope: !17953)
!17959 = !DILocation(line: 130, column: 9, scope: !17953)
!17960 = !DILocation(line: 132, column: 5, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 132, column: 5)
!17962 = !DILocation(line: 134, column: 5, scope: !2017)
!17963 = !DILocation(line: 135, column: 5, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 135, column: 5)
!17965 = !DILocation(line: 137, column: 5, scope: !2017)
!17966 = !DILocation(line: 138, column: 5, scope: !17967)
!17967 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 138, column: 5)
!17968 = !DILocation(line: 140, column: 5, scope: !2017)
!17969 = !DILocation(line: 141, column: 5, scope: !17970)
!17970 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 141, column: 5)
!17971 = !DILocation(line: 143, column: 5, scope: !2017)
!17972 = !DILocation(line: 144, column: 5, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 144, column: 5)
!17974 = !DILocation(line: 146, column: 5, scope: !2017)
!17975 = !DILocation(line: 148, column: 5, scope: !17976)
!17976 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 148, column: 5)
!17977 = !DILocation(line: 150, column: 5, scope: !2017)
!17978 = !DILocation(line: 152, column: 5, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 152, column: 5)
!17980 = !DILocation(line: 154, column: 5, scope: !2017)
!17981 = !DILocation(line: 156, column: 5, scope: !17982)
!17982 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 156, column: 5)
!17983 = !DILocation(line: 158, column: 5, scope: !2017)
!17984 = !DILocation(line: 160, column: 5, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 160, column: 5)
!17986 = !DILocation(line: 162, column: 5, scope: !2017)
!17987 = !DILocation(line: 164, column: 5, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 164, column: 5)
!17989 = !DILocation(line: 167, column: 18, scope: !2017)
!17990 = !DILocation(line: 169, column: 10, scope: !17991)
!17991 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 169, column: 9)
!17992 = !DILocation(line: 169, column: 9, scope: !2017)
!17993 = !DILocation(line: 170, column: 62, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17991, file: !2011, line: 169, column: 16)
!17995 = !DILocation(line: 170, column: 9, scope: !17994)
!17996 = !DILocation(line: 171, column: 9, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17994, file: !2011, line: 171, column: 9)
!17998 = !DILocation(line: 172, column: 9, scope: !17994)
!17999 = !DILocation(line: 173, column: 9, scope: !17994)
!18000 = !DILocation(line: 175, column: 5, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 175, column: 5)
!18002 = !DILocation(line: 177, column: 15, scope: !18003)
!18003 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 177, column: 9)
!18004 = !DILocation(line: 177, column: 20, scope: !18003)
!18005 = !DILocation(line: 177, column: 9, scope: !2017)
!18006 = !DILocation(line: 178, column: 17, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !18003, file: !2011, line: 177, column: 37)
!18008 = !DILocation(line: 179, column: 43, scope: !18007)
!18009 = !DILocation(line: 180, column: 29, scope: !18007)
!18010 = !DILocation(line: 179, column: 17, scope: !18007)
!18011 = !DILocation(line: 178, column: 9, scope: !18007)
!18012 = !DILocation(line: 181, column: 9, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18007, file: !2011, line: 181, column: 9)
!18014 = !DILocation(line: 184, column: 9, scope: !18007)
!18015 = !DILocation(line: 185, column: 9, scope: !18007)
!18016 = !DILocation(line: 187, column: 5, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 187, column: 5)
!18018 = !DILocation(line: 189, column: 15, scope: !18019)
!18019 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 189, column: 9)
!18020 = !DILocation(line: 189, column: 21, scope: !18019)
!18021 = !DILocation(line: 189, column: 29, scope: !18019)
!18022 = !DILocation(line: 189, column: 9, scope: !2017)
!18023 = !DILocation(line: 190, column: 17, scope: !18024)
!18024 = distinct !DILexicalBlock(scope: !18019, file: !2011, line: 189, column: 37)
!18025 = !DILocation(line: 190, column: 9, scope: !18024)
!18026 = !DILocation(line: 192, column: 9, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18024, file: !2011, line: 192, column: 9)
!18028 = !DILocation(line: 194, column: 9, scope: !18024)
!18029 = !DILocation(line: 195, column: 9, scope: !18024)
!18030 = !DILocation(line: 197, column: 5, scope: !18031)
!18031 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 197, column: 5)
!18032 = !DILocation(line: 199, column: 18, scope: !2017)
!18033 = !DILocation(line: 201, column: 10, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 201, column: 9)
!18035 = !DILocation(line: 201, column: 9, scope: !2017)
!18036 = !DILocation(line: 202, column: 63, scope: !18037)
!18037 = distinct !DILexicalBlock(scope: !18034, file: !2011, line: 201, column: 16)
!18038 = !DILocation(line: 202, column: 9, scope: !18037)
!18039 = !DILocation(line: 203, column: 9, scope: !18040)
!18040 = distinct !DILexicalBlock(scope: !18037, file: !2011, line: 203, column: 9)
!18041 = !DILocation(line: 204, column: 9, scope: !18037)
!18042 = !DILocation(line: 205, column: 9, scope: !18037)
!18043 = !DILocation(line: 207, column: 5, scope: !18044)
!18044 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 207, column: 5)
!18045 = !DILocation(line: 209, column: 15, scope: !18046)
!18046 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 209, column: 9)
!18047 = !DILocation(line: 209, column: 20, scope: !18046)
!18048 = !DILocation(line: 209, column: 9, scope: !2017)
!18049 = !DILocation(line: 210, column: 17, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18046, file: !2011, line: 209, column: 36)
!18051 = !DILocation(line: 211, column: 43, scope: !18050)
!18052 = !DILocation(line: 212, column: 29, scope: !18050)
!18053 = !DILocation(line: 211, column: 17, scope: !18050)
!18054 = !DILocation(line: 210, column: 9, scope: !18050)
!18055 = !DILocation(line: 213, column: 9, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !18050, file: !2011, line: 213, column: 9)
!18057 = !DILocation(line: 216, column: 9, scope: !18050)
!18058 = !DILocation(line: 217, column: 9, scope: !18050)
!18059 = !DILocation(line: 219, column: 5, scope: !18060)
!18060 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 219, column: 5)
!18061 = !DILocation(line: 221, column: 16, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 221, column: 9)
!18063 = !DILocation(line: 221, column: 22, scope: !18062)
!18064 = !DILocation(line: 221, column: 10, scope: !18062)
!18065 = !DILocation(line: 221, column: 29, scope: !18062)
!18066 = !DILocation(line: 221, column: 32, scope: !18062)
!18067 = !DILocation(line: 221, column: 9, scope: !2017)
!18068 = !DILocation(line: 223, column: 29, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18062, file: !2011, line: 221, column: 70)
!18070 = !DILocation(line: 222, column: 17, scope: !18069)
!18071 = !DILocation(line: 223, column: 17, scope: !18069)
!18072 = !DILocation(line: 222, column: 9, scope: !18069)
!18073 = !DILocation(line: 224, column: 9, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18069, file: !2011, line: 224, column: 9)
!18075 = !DILocation(line: 226, column: 9, scope: !18069)
!18076 = !DILocation(line: 227, column: 9, scope: !18069)
!18077 = !DILocation(line: 229, column: 5, scope: !18078)
!18078 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 229, column: 5)
!18079 = !DILocation(line: 231, column: 18, scope: !2017)
!18080 = !DILocation(line: 233, column: 10, scope: !18081)
!18081 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 233, column: 9)
!18082 = !DILocation(line: 233, column: 9, scope: !2017)
!18083 = !DILocation(line: 234, column: 62, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18081, file: !2011, line: 233, column: 16)
!18085 = !DILocation(line: 234, column: 9, scope: !18084)
!18086 = !DILocation(line: 235, column: 9, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18084, file: !2011, line: 235, column: 9)
!18088 = !DILocation(line: 236, column: 9, scope: !18084)
!18089 = !DILocation(line: 237, column: 9, scope: !18084)
!18090 = !DILocation(line: 239, column: 5, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 239, column: 5)
!18092 = !DILocation(line: 241, column: 15, scope: !18093)
!18093 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 241, column: 9)
!18094 = !DILocation(line: 241, column: 20, scope: !18093)
!18095 = !DILocation(line: 241, column: 9, scope: !2017)
!18096 = !DILocation(line: 242, column: 17, scope: !18097)
!18097 = distinct !DILexicalBlock(scope: !18093, file: !2011, line: 241, column: 34)
!18098 = !DILocation(line: 243, column: 43, scope: !18097)
!18099 = !DILocation(line: 244, column: 29, scope: !18097)
!18100 = !DILocation(line: 243, column: 17, scope: !18097)
!18101 = !DILocation(line: 242, column: 9, scope: !18097)
!18102 = !DILocation(line: 245, column: 9, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18097, file: !2011, line: 245, column: 9)
!18104 = !DILocation(line: 248, column: 9, scope: !18097)
!18105 = !DILocation(line: 249, column: 9, scope: !18097)
!18106 = !DILocation(line: 251, column: 5, scope: !18107)
!18107 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 251, column: 5)
!18108 = !DILocation(line: 253, column: 21, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 253, column: 9)
!18110 = !DILocation(line: 253, column: 26, scope: !18109)
!18111 = !DILocation(line: 253, column: 9, scope: !2017)
!18112 = !DILocation(line: 254, column: 17, scope: !18113)
!18113 = distinct !DILexicalBlock(scope: !18109, file: !2011, line: 253, column: 45)
!18114 = !DILocation(line: 254, column: 9, scope: !18113)
!18115 = !DILocation(line: 256, column: 9, scope: !18116)
!18116 = distinct !DILexicalBlock(scope: !18113, file: !2011, line: 256, column: 9)
!18117 = !DILocation(line: 258, column: 9, scope: !18113)
!18118 = !DILocation(line: 259, column: 9, scope: !18113)
!18119 = !DILocation(line: 261, column: 5, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 261, column: 5)
!18121 = !DILocation(line: 263, column: 18, scope: !2017)
!18122 = !DILocation(line: 265, column: 10, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 265, column: 9)
!18124 = !DILocation(line: 265, column: 9, scope: !2017)
!18125 = !DILocation(line: 266, column: 63, scope: !18126)
!18126 = distinct !DILexicalBlock(scope: !18123, file: !2011, line: 265, column: 16)
!18127 = !DILocation(line: 266, column: 9, scope: !18126)
!18128 = !DILocation(line: 267, column: 9, scope: !18129)
!18129 = distinct !DILexicalBlock(scope: !18126, file: !2011, line: 267, column: 9)
!18130 = !DILocation(line: 268, column: 9, scope: !18126)
!18131 = !DILocation(line: 269, column: 9, scope: !18126)
!18132 = !DILocation(line: 271, column: 5, scope: !18133)
!18133 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 271, column: 5)
!18134 = !DILocation(line: 273, column: 15, scope: !18135)
!18135 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 273, column: 9)
!18136 = !DILocation(line: 273, column: 20, scope: !18135)
!18137 = !DILocation(line: 273, column: 9, scope: !2017)
!18138 = !DILocation(line: 274, column: 17, scope: !18139)
!18139 = distinct !DILexicalBlock(scope: !18135, file: !2011, line: 273, column: 34)
!18140 = !DILocation(line: 275, column: 43, scope: !18139)
!18141 = !DILocation(line: 276, column: 29, scope: !18139)
!18142 = !DILocation(line: 275, column: 17, scope: !18139)
!18143 = !DILocation(line: 274, column: 9, scope: !18139)
!18144 = !DILocation(line: 277, column: 9, scope: !18145)
!18145 = distinct !DILexicalBlock(scope: !18139, file: !2011, line: 277, column: 9)
!18146 = !DILocation(line: 280, column: 9, scope: !18139)
!18147 = !DILocation(line: 281, column: 9, scope: !18139)
!18148 = !DILocation(line: 283, column: 5, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 283, column: 5)
!18150 = !DILocation(line: 285, column: 16, scope: !18151)
!18151 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 285, column: 9)
!18152 = !DILocation(line: 285, column: 22, scope: !18151)
!18153 = !DILocation(line: 285, column: 27, scope: !18151)
!18154 = !DILocation(line: 285, column: 10, scope: !18151)
!18155 = !DILocation(line: 285, column: 38, scope: !18151)
!18156 = !DILocation(line: 286, column: 31, scope: !18151)
!18157 = !DILocation(line: 286, column: 14, scope: !18151)
!18158 = !DILocation(line: 286, column: 38, scope: !18151)
!18159 = !DILocation(line: 286, column: 41, scope: !18151)
!18160 = !DILocation(line: 285, column: 9, scope: !2017)
!18161 = !DILocation(line: 288, column: 34, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18151, file: !2011, line: 286, column: 82)
!18163 = !DILocation(line: 287, column: 17, scope: !18162)
!18164 = !DILocation(line: 289, column: 34, scope: !18162)
!18165 = !DILocation(line: 289, column: 17, scope: !18162)
!18166 = !DILocation(line: 287, column: 9, scope: !18162)
!18167 = !DILocation(line: 290, column: 9, scope: !18168)
!18168 = distinct !DILexicalBlock(scope: !18162, file: !2011, line: 290, column: 9)
!18169 = !DILocation(line: 293, column: 9, scope: !18162)
!18170 = !DILocation(line: 294, column: 9, scope: !18162)
!18171 = !DILocation(line: 296, column: 5, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 296, column: 5)
!18173 = !DILocation(line: 298, column: 5, scope: !18174)
!18174 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 298, column: 5)
!18175 = !DILocation(line: 299, column: 22, scope: !18176)
!18176 = distinct !DILexicalBlock(scope: !18177, file: !2011, line: 298, column: 30)
!18177 = distinct !DILexicalBlock(scope: !18174, file: !2011, line: 298, column: 5)
!18178 = !DILocation(line: 301, column: 14, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18176, file: !2011, line: 301, column: 13)
!18180 = !DILocation(line: 301, column: 13, scope: !18176)
!18181 = !DILocation(line: 302, column: 21, scope: !18182)
!18182 = distinct !DILexicalBlock(scope: !18179, file: !2011, line: 301, column: 20)
!18183 = !DILocation(line: 302, column: 82, scope: !18182)
!18184 = !DILocation(line: 302, column: 13, scope: !18182)
!18185 = !DILocation(line: 303, column: 13, scope: !18186)
!18186 = distinct !DILexicalBlock(scope: !18182, file: !2011, line: 303, column: 13)
!18187 = !DILocation(line: 304, column: 13, scope: !18182)
!18188 = !DILocation(line: 305, column: 13, scope: !18182)
!18189 = !DILocation(line: 307, column: 9, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18176, file: !2011, line: 307, column: 9)
!18191 = !DILocation(line: 310, column: 19, scope: !18192)
!18192 = distinct !DILexicalBlock(scope: !18176, file: !2011, line: 310, column: 13)
!18193 = !DILocation(line: 310, column: 24, scope: !18192)
!18194 = !DILocation(line: 310, column: 13, scope: !18176)
!18195 = !DILocation(line: 311, column: 21, scope: !18196)
!18196 = distinct !DILexicalBlock(scope: !18192, file: !2011, line: 310, column: 41)
!18197 = !DILocation(line: 312, column: 54, scope: !18196)
!18198 = !DILocation(line: 313, column: 33, scope: !18196)
!18199 = !DILocation(line: 312, column: 28, scope: !18196)
!18200 = !DILocation(line: 311, column: 13, scope: !18196)
!18201 = !DILocation(line: 314, column: 13, scope: !18202)
!18202 = distinct !DILexicalBlock(scope: !18196, file: !2011, line: 314, column: 13)
!18203 = !DILocation(line: 317, column: 13, scope: !18196)
!18204 = !DILocation(line: 318, column: 13, scope: !18196)
!18205 = !DILocation(line: 320, column: 9, scope: !18206)
!18206 = distinct !DILexicalBlock(scope: !18176, file: !2011, line: 320, column: 9)
!18207 = !DILocation(line: 298, column: 19, scope: !18177)
!18208 = distinct !{!18208, !18173, !18209}
!18209 = !DILocation(line: 321, column: 5, scope: !18174)
!18210 = !DILocation(line: 327, column: 5, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 327, column: 5)
!18212 = !DILocation(line: 329, column: 12, scope: !2017)
!18213 = !DILocation(line: 330, column: 10, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 330, column: 9)
!18215 = !DILocation(line: 330, column: 9, scope: !2017)
!18216 = !DILocation(line: 331, column: 63, scope: !18217)
!18217 = distinct !DILexicalBlock(scope: !18214, file: !2011, line: 330, column: 16)
!18218 = !DILocation(line: 331, column: 9, scope: !18217)
!18219 = !DILocation(line: 332, column: 9, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18217, file: !2011, line: 332, column: 9)
!18221 = !DILocation(line: 333, column: 9, scope: !18217)
!18222 = !DILocation(line: 334, column: 9, scope: !18217)
!18223 = !DILocation(line: 336, column: 5, scope: !18224)
!18224 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 336, column: 5)
!18225 = !DILocation(line: 338, column: 15, scope: !18226)
!18226 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 338, column: 9)
!18227 = !DILocation(line: 338, column: 20, scope: !18226)
!18228 = !DILocation(line: 338, column: 35, scope: !18226)
!18229 = !DILocation(line: 338, column: 51, scope: !18226)
!18230 = !DILocation(line: 338, column: 57, scope: !18226)
!18231 = !DILocation(line: 338, column: 38, scope: !18226)
!18232 = !DILocation(line: 338, column: 9, scope: !2017)
!18233 = !DILocation(line: 339, column: 52, scope: !18234)
!18234 = distinct !DILexicalBlock(scope: !18226, file: !2011, line: 338, column: 75)
!18235 = !DILocation(line: 339, column: 9, scope: !18234)
!18236 = !DILocation(line: 340, column: 9, scope: !18237)
!18237 = distinct !DILexicalBlock(scope: !18234, file: !2011, line: 340, column: 9)
!18238 = !DILocation(line: 341, column: 9, scope: !18234)
!18239 = !DILocation(line: 342, column: 9, scope: !18234)
!18240 = !DILocation(line: 344, column: 5, scope: !18241)
!18241 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 344, column: 5)
!18242 = !DILocation(line: 346, column: 12, scope: !2017)
!18243 = !DILocation(line: 347, column: 10, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 347, column: 9)
!18245 = !DILocation(line: 347, column: 9, scope: !2017)
!18246 = !DILocation(line: 348, column: 67, scope: !18247)
!18247 = distinct !DILexicalBlock(scope: !18244, file: !2011, line: 347, column: 16)
!18248 = !DILocation(line: 348, column: 9, scope: !18247)
!18249 = !DILocation(line: 349, column: 9, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18247, file: !2011, line: 349, column: 9)
!18251 = !DILocation(line: 350, column: 9, scope: !18247)
!18252 = !DILocation(line: 351, column: 9, scope: !18247)
!18253 = !DILocation(line: 353, column: 5, scope: !18254)
!18254 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 353, column: 5)
!18255 = !DILocation(line: 355, column: 15, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 355, column: 9)
!18257 = !DILocation(line: 355, column: 20, scope: !18256)
!18258 = !DILocation(line: 355, column: 35, scope: !18256)
!18259 = !DILocation(line: 355, column: 51, scope: !18256)
!18260 = !DILocation(line: 355, column: 57, scope: !18256)
!18261 = !DILocation(line: 355, column: 38, scope: !18256)
!18262 = !DILocation(line: 355, column: 9, scope: !2017)
!18263 = !DILocation(line: 356, column: 56, scope: !18264)
!18264 = distinct !DILexicalBlock(scope: !18256, file: !2011, line: 355, column: 75)
!18265 = !DILocation(line: 356, column: 9, scope: !18264)
!18266 = !DILocation(line: 357, column: 9, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18264, file: !2011, line: 357, column: 9)
!18268 = !DILocation(line: 358, column: 9, scope: !18264)
!18269 = !DILocation(line: 359, column: 9, scope: !18264)
!18270 = !DILocation(line: 361, column: 5, scope: !18271)
!18271 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 361, column: 5)
!18272 = !DILocation(line: 363, column: 12, scope: !2017)
!18273 = !DILocation(line: 364, column: 10, scope: !18274)
!18274 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 364, column: 9)
!18275 = !DILocation(line: 364, column: 9, scope: !2017)
!18276 = !DILocation(line: 365, column: 73, scope: !18277)
!18277 = distinct !DILexicalBlock(scope: !18274, file: !2011, line: 364, column: 16)
!18278 = !DILocation(line: 365, column: 9, scope: !18277)
!18279 = !DILocation(line: 366, column: 9, scope: !18280)
!18280 = distinct !DILexicalBlock(scope: !18277, file: !2011, line: 366, column: 9)
!18281 = !DILocation(line: 367, column: 9, scope: !18277)
!18282 = !DILocation(line: 368, column: 9, scope: !18277)
!18283 = !DILocation(line: 370, column: 5, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 370, column: 5)
!18285 = !DILocation(line: 372, column: 15, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 372, column: 9)
!18287 = !DILocation(line: 372, column: 20, scope: !18286)
!18288 = !DILocation(line: 372, column: 35, scope: !18286)
!18289 = !DILocation(line: 372, column: 51, scope: !18286)
!18290 = !DILocation(line: 372, column: 57, scope: !18286)
!18291 = !DILocation(line: 372, column: 38, scope: !18286)
!18292 = !DILocation(line: 372, column: 9, scope: !2017)
!18293 = !DILocation(line: 373, column: 62, scope: !18294)
!18294 = distinct !DILexicalBlock(scope: !18286, file: !2011, line: 372, column: 75)
!18295 = !DILocation(line: 373, column: 9, scope: !18294)
!18296 = !DILocation(line: 374, column: 9, scope: !18297)
!18297 = distinct !DILexicalBlock(scope: !18294, file: !2011, line: 374, column: 9)
!18298 = !DILocation(line: 375, column: 9, scope: !18294)
!18299 = !DILocation(line: 376, column: 9, scope: !18294)
!18300 = !DILocation(line: 378, column: 5, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 378, column: 5)
!18302 = !DILocation(line: 386, column: 5, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 386, column: 5)
!18304 = !DILocation(line: 387, column: 11, scope: !2017)
!18305 = !DILocation(line: 388, column: 10, scope: !18306)
!18306 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 388, column: 9)
!18307 = !DILocation(line: 388, column: 9, scope: !2017)
!18308 = !DILocation(line: 389, column: 64, scope: !18309)
!18309 = distinct !DILexicalBlock(scope: !18306, file: !2011, line: 388, column: 15)
!18310 = !DILocation(line: 389, column: 9, scope: !18309)
!18311 = !DILocation(line: 390, column: 9, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18309, file: !2011, line: 390, column: 9)
!18313 = !DILocation(line: 391, column: 9, scope: !18309)
!18314 = !DILocation(line: 392, column: 9, scope: !18309)
!18315 = !DILocation(line: 394, column: 5, scope: !18316)
!18316 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 394, column: 5)
!18317 = !DILocation(line: 396, column: 14, scope: !18318)
!18318 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 396, column: 9)
!18319 = !DILocation(line: 396, column: 24, scope: !18318)
!18320 = !DILocation(line: 396, column: 9, scope: !2017)
!18321 = !DILocation(line: 397, column: 17, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18318, file: !2011, line: 396, column: 31)
!18323 = !DILocation(line: 397, column: 9, scope: !18322)
!18324 = !DILocation(line: 399, column: 9, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18322, file: !2011, line: 399, column: 9)
!18326 = !DILocation(line: 401, column: 9, scope: !18322)
!18327 = !DILocation(line: 402, column: 9, scope: !18322)
!18328 = !DILocation(line: 403, column: 9, scope: !18322)
!18329 = !DILocation(line: 405, column: 5, scope: !18330)
!18330 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 405, column: 5)
!18331 = !DILocation(line: 407, column: 5, scope: !2017)
!18332 = !DILocation(line: 408, column: 10, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 408, column: 9)
!18334 = !DILocation(line: 408, column: 9, scope: !2017)
!18335 = !DILocation(line: 409, column: 63, scope: !18336)
!18336 = distinct !DILexicalBlock(scope: !18333, file: !2011, line: 408, column: 45)
!18337 = !DILocation(line: 409, column: 9, scope: !18336)
!18338 = !DILocation(line: 410, column: 9, scope: !18339)
!18339 = distinct !DILexicalBlock(scope: !18336, file: !2011, line: 410, column: 9)
!18340 = !DILocation(line: 411, column: 9, scope: !18336)
!18341 = !DILocation(line: 412, column: 9, scope: !18336)
!18342 = !DILocation(line: 413, column: 9, scope: !18336)
!18343 = !DILocation(line: 415, column: 5, scope: !18344)
!18344 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 415, column: 5)
!18345 = !DILocation(line: 417, column: 5, scope: !2017)
!18346 = !DILocation(line: 418, column: 5, scope: !18347)
!18347 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 418, column: 5)
!18348 = !DILocation(line: 420, column: 11, scope: !2017)
!18349 = !DILocation(line: 421, column: 10, scope: !18350)
!18350 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 421, column: 9)
!18351 = !DILocation(line: 421, column: 9, scope: !2017)
!18352 = !DILocation(line: 422, column: 61, scope: !18353)
!18353 = distinct !DILexicalBlock(scope: !18350, file: !2011, line: 421, column: 15)
!18354 = !DILocation(line: 422, column: 9, scope: !18353)
!18355 = !DILocation(line: 423, column: 9, scope: !18356)
!18356 = distinct !DILexicalBlock(scope: !18353, file: !2011, line: 423, column: 9)
!18357 = !DILocation(line: 424, column: 9, scope: !18353)
!18358 = !DILocation(line: 425, column: 9, scope: !18353)
!18359 = !DILocation(line: 427, column: 5, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 427, column: 5)
!18361 = !DILocation(line: 429, column: 14, scope: !18362)
!18362 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 429, column: 9)
!18363 = !DILocation(line: 429, column: 24, scope: !18362)
!18364 = !DILocation(line: 429, column: 9, scope: !2017)
!18365 = !DILocation(line: 430, column: 17, scope: !18366)
!18366 = distinct !DILexicalBlock(scope: !18362, file: !2011, line: 429, column: 30)
!18367 = !DILocation(line: 430, column: 9, scope: !18366)
!18368 = !DILocation(line: 432, column: 9, scope: !18369)
!18369 = distinct !DILexicalBlock(scope: !18366, file: !2011, line: 432, column: 9)
!18370 = !DILocation(line: 434, column: 9, scope: !18366)
!18371 = !DILocation(line: 435, column: 9, scope: !18366)
!18372 = !DILocation(line: 436, column: 9, scope: !18366)
!18373 = !DILocation(line: 438, column: 5, scope: !18374)
!18374 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 438, column: 5)
!18375 = !DILocation(line: 440, column: 5, scope: !2017)
!18376 = !DILocation(line: 441, column: 5, scope: !18377)
!18377 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 441, column: 5)
!18378 = !DILocation(line: 443, column: 10, scope: !18379)
!18379 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 443, column: 9)
!18380 = !DILocation(line: 443, column: 9, scope: !2017)
!18381 = !DILocation(line: 444, column: 49, scope: !18382)
!18382 = distinct !DILexicalBlock(scope: !18379, file: !2011, line: 443, column: 30)
!18383 = !DILocation(line: 444, column: 9, scope: !18382)
!18384 = !DILocation(line: 445, column: 9, scope: !18385)
!18385 = distinct !DILexicalBlock(scope: !18382, file: !2011, line: 445, column: 9)
!18386 = !DILocation(line: 446, column: 9, scope: !18382)
!18387 = !DILocation(line: 447, column: 9, scope: !18382)
!18388 = !DILocation(line: 448, column: 9, scope: !18382)
!18389 = !DILocation(line: 450, column: 5, scope: !18390)
!18390 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 450, column: 5)
!18391 = !DILocation(line: 452, column: 5, scope: !2017)
!18392 = !DILocation(line: 453, column: 5, scope: !18393)
!18393 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 453, column: 5)
!18394 = !DILocation(line: 455, column: 11, scope: !2017)
!18395 = !DILocation(line: 456, column: 10, scope: !18396)
!18396 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 456, column: 9)
!18397 = !DILocation(line: 456, column: 9, scope: !2017)
!18398 = !DILocation(line: 457, column: 70, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18396, file: !2011, line: 456, column: 15)
!18400 = !DILocation(line: 457, column: 9, scope: !18399)
!18401 = !DILocation(line: 458, column: 9, scope: !18402)
!18402 = distinct !DILexicalBlock(scope: !18399, file: !2011, line: 458, column: 9)
!18403 = !DILocation(line: 459, column: 9, scope: !18399)
!18404 = !DILocation(line: 460, column: 9, scope: !18399)
!18405 = !DILocation(line: 462, column: 5, scope: !18406)
!18406 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 462, column: 5)
!18407 = !DILocation(line: 464, column: 14, scope: !18408)
!18408 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 464, column: 9)
!18409 = !DILocation(line: 464, column: 24, scope: !18408)
!18410 = !DILocation(line: 464, column: 9, scope: !2017)
!18411 = !DILocation(line: 465, column: 17, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18408, file: !2011, line: 464, column: 30)
!18413 = !DILocation(line: 465, column: 9, scope: !18412)
!18414 = !DILocation(line: 467, column: 9, scope: !18415)
!18415 = distinct !DILexicalBlock(scope: !18412, file: !2011, line: 467, column: 9)
!18416 = !DILocation(line: 469, column: 9, scope: !18412)
!18417 = !DILocation(line: 470, column: 9, scope: !18412)
!18418 = !DILocation(line: 471, column: 9, scope: !18412)
!18419 = !DILocation(line: 473, column: 5, scope: !18420)
!18420 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 473, column: 5)
!18421 = !DILocation(line: 475, column: 5, scope: !2017)
!18422 = !DILocation(line: 476, column: 10, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 476, column: 9)
!18424 = !DILocation(line: 476, column: 9, scope: !2017)
!18425 = !DILocation(line: 477, column: 64, scope: !18426)
!18426 = distinct !DILexicalBlock(scope: !18423, file: !2011, line: 476, column: 46)
!18427 = !DILocation(line: 477, column: 9, scope: !18426)
!18428 = !DILocation(line: 478, column: 9, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18426, file: !2011, line: 478, column: 9)
!18430 = !DILocation(line: 479, column: 9, scope: !18426)
!18431 = !DILocation(line: 480, column: 9, scope: !18426)
!18432 = !DILocation(line: 481, column: 9, scope: !18426)
!18433 = !DILocation(line: 483, column: 5, scope: !18434)
!18434 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 483, column: 5)
!18435 = !DILocation(line: 485, column: 5, scope: !2017)
!18436 = !DILocation(line: 486, column: 5, scope: !18437)
!18437 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 486, column: 5)
!18438 = !DILocation(line: 488, column: 11, scope: !2017)
!18439 = !DILocation(line: 489, column: 10, scope: !18440)
!18440 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 489, column: 9)
!18441 = !DILocation(line: 489, column: 9, scope: !2017)
!18442 = !DILocation(line: 490, column: 78, scope: !18443)
!18443 = distinct !DILexicalBlock(scope: !18440, file: !2011, line: 489, column: 15)
!18444 = !DILocation(line: 490, column: 9, scope: !18443)
!18445 = !DILocation(line: 491, column: 9, scope: !18446)
!18446 = distinct !DILexicalBlock(scope: !18443, file: !2011, line: 491, column: 9)
!18447 = !DILocation(line: 492, column: 9, scope: !18443)
!18448 = !DILocation(line: 493, column: 9, scope: !18443)
!18449 = !DILocation(line: 495, column: 5, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 495, column: 5)
!18451 = !DILocation(line: 497, column: 14, scope: !18452)
!18452 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 497, column: 9)
!18453 = !DILocation(line: 497, column: 24, scope: !18452)
!18454 = !DILocation(line: 497, column: 9, scope: !2017)
!18455 = !DILocation(line: 498, column: 17, scope: !18456)
!18456 = distinct !DILexicalBlock(scope: !18452, file: !2011, line: 497, column: 30)
!18457 = !DILocation(line: 498, column: 9, scope: !18456)
!18458 = !DILocation(line: 500, column: 9, scope: !18459)
!18459 = distinct !DILexicalBlock(scope: !18456, file: !2011, line: 500, column: 9)
!18460 = !DILocation(line: 502, column: 9, scope: !18456)
!18461 = !DILocation(line: 503, column: 9, scope: !18456)
!18462 = !DILocation(line: 504, column: 9, scope: !18456)
!18463 = !DILocation(line: 506, column: 5, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 506, column: 5)
!18465 = !DILocation(line: 508, column: 5, scope: !2017)
!18466 = !DILocation(line: 509, column: 10, scope: !18467)
!18467 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 509, column: 9)
!18468 = !DILocation(line: 509, column: 9, scope: !2017)
!18469 = !DILocation(line: 510, column: 74, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18467, file: !2011, line: 509, column: 49)
!18471 = !DILocation(line: 510, column: 9, scope: !18470)
!18472 = !DILocation(line: 511, column: 9, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18470, file: !2011, line: 511, column: 9)
!18474 = !DILocation(line: 512, column: 9, scope: !18470)
!18475 = !DILocation(line: 513, column: 9, scope: !18470)
!18476 = !DILocation(line: 514, column: 9, scope: !18470)
!18477 = !DILocation(line: 516, column: 5, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 516, column: 5)
!18479 = !DILocation(line: 518, column: 5, scope: !2017)
!18480 = !DILocation(line: 519, column: 5, scope: !18481)
!18481 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 519, column: 5)
!18482 = !DILocation(line: 525, column: 5, scope: !18483)
!18483 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 525, column: 5)
!18484 = !DILocation(line: 526, column: 5, scope: !18485)
!18485 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 526, column: 5)
!18486 = !DILocation(line: 527, column: 19, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18488, file: !2011, line: 527, column: 13)
!18488 = distinct !DILexicalBlock(scope: !18489, file: !2011, line: 526, column: 30)
!18489 = distinct !DILexicalBlock(scope: !18485, file: !2011, line: 526, column: 5)
!18490 = !DILocation(line: 527, column: 13, scope: !18487)
!18491 = !DILocation(line: 527, column: 13, scope: !18488)
!18492 = !DILocation(line: 528, column: 13, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18487, file: !2011, line: 527, column: 26)
!18494 = !DILocation(line: 529, column: 13, scope: !18495)
!18495 = distinct !DILexicalBlock(scope: !18493, file: !2011, line: 529, column: 13)
!18496 = !DILocation(line: 526, column: 19, scope: !18489)
!18497 = distinct !{!18497, !18484, !18498}
!18498 = !DILocation(line: 539, column: 5, scope: !18485)
!18499 = !DILocation(line: 532, column: 21, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18487, file: !2011, line: 531, column: 16)
!18501 = !DILocation(line: 533, column: 23, scope: !18500)
!18502 = !DILocation(line: 532, column: 13, scope: !18500)
!18503 = !DILocation(line: 534, column: 13, scope: !18504)
!18504 = distinct !DILexicalBlock(scope: !18500, file: !2011, line: 534, column: 13)
!18505 = !DILocation(line: 536, column: 13, scope: !18500)
!18506 = !DILocation(line: 537, column: 13, scope: !18500)
!18507 = !DILocation(line: 541, column: 15, scope: !18508)
!18508 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 541, column: 9)
!18509 = !DILocation(line: 541, column: 9, scope: !18508)
!18510 = !DILocation(line: 541, column: 9, scope: !2017)
!18511 = !DILocation(line: 542, column: 79, scope: !18512)
!18512 = distinct !DILexicalBlock(scope: !18508, file: !2011, line: 541, column: 22)
!18513 = !DILocation(line: 542, column: 9, scope: !18512)
!18514 = !DILocation(line: 543, column: 9, scope: !18515)
!18515 = distinct !DILexicalBlock(scope: !18512, file: !2011, line: 543, column: 9)
!18516 = !DILocation(line: 544, column: 9, scope: !18512)
!18517 = !DILocation(line: 547, column: 15, scope: !18518)
!18518 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 547, column: 9)
!18519 = !DILocation(line: 547, column: 9, scope: !18518)
!18520 = !DILocation(line: 547, column: 9, scope: !2017)
!18521 = !DILocation(line: 548, column: 84, scope: !18522)
!18522 = distinct !DILexicalBlock(scope: !18518, file: !2011, line: 547, column: 27)
!18523 = !DILocation(line: 548, column: 9, scope: !18522)
!18524 = !DILocation(line: 549, column: 9, scope: !18525)
!18525 = distinct !DILexicalBlock(scope: !18522, file: !2011, line: 549, column: 9)
!18526 = !DILocation(line: 550, column: 9, scope: !18522)
!18527 = !DILocation(line: 552, column: 5, scope: !18528)
!18528 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 552, column: 5)
!18529 = !DILocation(line: 554, column: 5, scope: !2017)
!18530 = !DILocation(line: 556, column: 5, scope: !18531)
!18531 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 556, column: 5)
!18532 = !DILocation(line: 561, column: 5, scope: !18533)
!18533 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 561, column: 5)
!18534 = !DILocation(line: 563, column: 9, scope: !18535)
!18535 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 563, column: 9)
!18536 = !DILocation(line: 563, column: 20, scope: !18535)
!18537 = !DILocation(line: 563, column: 9, scope: !2017)
!18538 = !DILocation(line: 564, column: 16, scope: !18539)
!18539 = distinct !DILexicalBlock(scope: !18535, file: !2011, line: 563, column: 28)
!18540 = !DILocation(line: 581, column: 10, scope: !18541)
!18541 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 581, column: 9)
!18542 = !DILocation(line: 581, column: 9, scope: !2017)
!18543 = !DILocation(line: 582, column: 67, scope: !18544)
!18544 = distinct !DILexicalBlock(scope: !18541, file: !2011, line: 581, column: 16)
!18545 = !DILocation(line: 582, column: 9, scope: !18544)
!18546 = !DILocation(line: 583, column: 9, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18544, file: !2011, line: 583, column: 9)
!18548 = !DILocation(line: 584, column: 9, scope: !18544)
!18549 = !DILocation(line: 586, column: 5, scope: !18550)
!18550 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 586, column: 5)
!18551 = !DILocation(line: 597, column: 9, scope: !18552)
!18552 = distinct !DILexicalBlock(scope: !2083, file: !2011, line: 597, column: 9)
!18553 = !DILocation(line: 598, column: 9, scope: !18554)
!18554 = distinct !DILexicalBlock(scope: !2083, file: !2011, line: 598, column: 9)
!18555 = !DILocation(line: 600, column: 21, scope: !18556)
!18556 = distinct !DILexicalBlock(scope: !2083, file: !2011, line: 600, column: 13)
!18557 = !DILocation(line: 600, column: 65, scope: !18556)
!18558 = !DILocation(line: 600, column: 13, scope: !2083)
!18559 = !DILocation(line: 601, column: 81, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18556, file: !2011, line: 600, column: 74)
!18561 = !DILocation(line: 601, column: 13, scope: !18560)
!18562 = !DILocation(line: 602, column: 13, scope: !18563)
!18563 = distinct !DILexicalBlock(scope: !18560, file: !2011, line: 602, column: 13)
!18564 = !DILocation(line: 603, column: 13, scope: !18560)
!18565 = !DILocation(line: 605, column: 9, scope: !18560)
!18566 = !DILocation(line: 607, column: 19, scope: !18567)
!18567 = distinct !DILexicalBlock(scope: !2083, file: !2011, line: 607, column: 13)
!18568 = !DILocation(line: 607, column: 24, scope: !18567)
!18569 = !DILocation(line: 607, column: 13, scope: !2083)
!18570 = !DILocation(line: 608, column: 63, scope: !18571)
!18571 = distinct !DILexicalBlock(scope: !18567, file: !2011, line: 607, column: 38)
!18572 = !DILocation(line: 608, column: 13, scope: !18571)
!18573 = !DILocation(line: 609, column: 13, scope: !18574)
!18574 = distinct !DILexicalBlock(scope: !18571, file: !2011, line: 609, column: 13)
!18575 = !DILocation(line: 613, column: 13, scope: !18571)
!18576 = !DILocation(line: 615, column: 9, scope: !18571)
!18577 = !DILocation(line: 618, column: 21, scope: !18578)
!18578 = distinct !DILexicalBlock(scope: !2083, file: !2011, line: 618, column: 13)
!18579 = !DILocation(line: 0, scope: !2083)
!18580 = !DILocation(line: 618, column: 46, scope: !18578)
!18581 = !DILocation(line: 618, column: 54, scope: !18578)
!18582 = !DILocation(line: 618, column: 57, scope: !18578)
!18583 = !DILocation(line: 618, column: 13, scope: !2083)
!18584 = !DILocation(line: 619, column: 21, scope: !18585)
!18585 = distinct !DILexicalBlock(scope: !18578, file: !2011, line: 618, column: 84)
!18586 = !DILocation(line: 619, column: 13, scope: !18585)
!18587 = !DILocation(line: 620, column: 13, scope: !18588)
!18588 = distinct !DILexicalBlock(scope: !18585, file: !2011, line: 620, column: 13)
!18589 = !DILocation(line: 621, column: 13, scope: !18585)
!18590 = !DILocation(line: 623, column: 9, scope: !18585)
!18591 = !DILocation(line: 627, column: 5, scope: !18592)
!18592 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 627, column: 5)
!18593 = !DILocation(line: 629, column: 5, scope: !2017)
!18594 = !DILocation(line: 630, column: 5, scope: !18595)
!18595 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 630, column: 5)
!18596 = !DILocation(line: 635, column: 5, scope: !18597)
!18597 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 635, column: 5)
!18598 = !DILocation(line: 637, column: 9, scope: !18599)
!18599 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 637, column: 9)
!18600 = !DILocation(line: 637, column: 20, scope: !18599)
!18601 = !DILocation(line: 637, column: 9, scope: !2017)
!18602 = !DILocation(line: 638, column: 16, scope: !18603)
!18603 = distinct !DILexicalBlock(scope: !18599, file: !2011, line: 637, column: 28)
!18604 = !DILocation(line: 655, column: 10, scope: !18605)
!18605 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 655, column: 9)
!18606 = !DILocation(line: 655, column: 9, scope: !2017)
!18607 = !DILocation(line: 656, column: 45, scope: !18608)
!18608 = distinct !DILexicalBlock(scope: !18605, file: !2011, line: 655, column: 16)
!18609 = !DILocation(line: 656, column: 9, scope: !18608)
!18610 = !DILocation(line: 657, column: 9, scope: !18611)
!18611 = distinct !DILexicalBlock(scope: !18608, file: !2011, line: 657, column: 9)
!18612 = !DILocation(line: 658, column: 9, scope: !18608)
!18613 = !DILocation(line: 660, column: 5, scope: !18614)
!18614 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 660, column: 5)
!18615 = !DILocation(line: 669, column: 9, scope: !18616)
!18616 = distinct !DILexicalBlock(scope: !18617, file: !2011, line: 669, column: 9)
!18617 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 664, column: 5)
!18618 = !DILocation(line: 670, column: 9, scope: !18619)
!18619 = distinct !DILexicalBlock(scope: !18617, file: !2011, line: 670, column: 9)
!18620 = !DILocation(line: 672, column: 21, scope: !18621)
!18621 = distinct !DILexicalBlock(scope: !18617, file: !2011, line: 672, column: 13)
!18622 = !DILocation(line: 673, column: 52, scope: !18621)
!18623 = !DILocation(line: 672, column: 13, scope: !18617)
!18624 = !DILocation(line: 674, column: 75, scope: !18625)
!18625 = distinct !DILexicalBlock(scope: !18621, file: !2011, line: 673, column: 61)
!18626 = !DILocation(line: 674, column: 13, scope: !18625)
!18627 = !DILocation(line: 675, column: 13, scope: !18628)
!18628 = distinct !DILexicalBlock(scope: !18625, file: !2011, line: 675, column: 13)
!18629 = !DILocation(line: 676, column: 13, scope: !18625)
!18630 = !DILocation(line: 678, column: 9, scope: !18625)
!18631 = !DILocation(line: 680, column: 14, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18617, file: !2011, line: 680, column: 13)
!18633 = !DILocation(line: 680, column: 13, scope: !18617)
!18634 = !DILocation(line: 681, column: 76, scope: !18635)
!18635 = distinct !DILexicalBlock(scope: !18632, file: !2011, line: 680, column: 82)
!18636 = !DILocation(line: 681, column: 13, scope: !18635)
!18637 = !DILocation(line: 682, column: 13, scope: !18638)
!18638 = distinct !DILexicalBlock(scope: !18635, file: !2011, line: 682, column: 13)
!18639 = !DILocation(line: 683, column: 13, scope: !18635)
!18640 = !DILocation(line: 685, column: 9, scope: !18635)
!18641 = !DILocation(line: 687, column: 5, scope: !18642)
!18642 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 687, column: 5)
!18643 = !DILocation(line: 714, column: 5, scope: !2017)
!18644 = !DILocation(line: 715, column: 5, scope: !18645)
!18645 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 715, column: 5)
!18646 = !DILocation(line: 771, column: 5, scope: !18647)
!18647 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 771, column: 5)
!18648 = !DILocation(line: 773, column: 5, scope: !2017)
!18649 = !DILocation(line: 775, column: 9, scope: !18650)
!18650 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 775, column: 9)
!18651 = !DILocation(line: 775, column: 20, scope: !18650)
!18652 = !DILocation(line: 775, column: 9, scope: !2017)
!18653 = !DILocation(line: 776, column: 9, scope: !18654)
!18654 = distinct !DILexicalBlock(scope: !18650, file: !2011, line: 775, column: 28)
!18655 = !DILocation(line: 777, column: 5, scope: !18654)
!18656 = !DILocation(line: 793, column: 5, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 793, column: 5)
!18658 = !DILocation(line: 797, column: 13, scope: !18659)
!18659 = distinct !DILexicalBlock(scope: !18660, file: !2011, line: 797, column: 13)
!18660 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 796, column: 5)
!18661 = !DILocation(line: 797, column: 42, scope: !18659)
!18662 = !DILocation(line: 797, column: 13, scope: !18660)
!18663 = !DILocation(line: 798, column: 21, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18659, file: !2011, line: 797, column: 48)
!18665 = !DILocation(line: 798, column: 13, scope: !18664)
!18666 = !DILocation(line: 800, column: 13, scope: !18667)
!18667 = distinct !DILexicalBlock(scope: !18664, file: !2011, line: 800, column: 13)
!18668 = !DILocation(line: 803, column: 9, scope: !18664)
!18669 = !DILocation(line: 805, column: 13, scope: !18670)
!18670 = distinct !DILexicalBlock(scope: !18660, file: !2011, line: 805, column: 13)
!18671 = !DILocation(line: 805, column: 44, scope: !18670)
!18672 = !DILocation(line: 805, column: 13, scope: !18660)
!18673 = !DILocation(line: 806, column: 21, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18670, file: !2011, line: 805, column: 50)
!18675 = !DILocation(line: 806, column: 13, scope: !18674)
!18676 = !DILocation(line: 808, column: 13, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18674, file: !2011, line: 808, column: 13)
!18678 = !DILocation(line: 811, column: 9, scope: !18674)
!18679 = !DILocation(line: 813, column: 13, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !18660, file: !2011, line: 813, column: 13)
!18681 = !DILocation(line: 813, column: 41, scope: !18680)
!18682 = !DILocation(line: 813, column: 13, scope: !18660)
!18683 = !DILocation(line: 814, column: 21, scope: !18684)
!18684 = distinct !DILexicalBlock(scope: !18680, file: !2011, line: 813, column: 48)
!18685 = !DILocation(line: 814, column: 13, scope: !18684)
!18686 = !DILocation(line: 816, column: 13, scope: !18687)
!18687 = distinct !DILexicalBlock(scope: !18684, file: !2011, line: 816, column: 13)
!18688 = !DILocation(line: 819, column: 9, scope: !18684)
!18689 = !DILocation(line: 821, column: 13, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18660, file: !2011, line: 821, column: 13)
!18691 = !DILocation(line: 821, column: 46, scope: !18690)
!18692 = !DILocation(line: 821, column: 13, scope: !18660)
!18693 = !DILocation(line: 822, column: 21, scope: !18694)
!18694 = distinct !DILexicalBlock(scope: !18690, file: !2011, line: 821, column: 52)
!18695 = !DILocation(line: 822, column: 13, scope: !18694)
!18696 = !DILocation(line: 824, column: 13, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18694, file: !2011, line: 824, column: 13)
!18698 = !DILocation(line: 827, column: 9, scope: !18694)
!18699 = !DILocation(line: 829, column: 13, scope: !18700)
!18700 = distinct !DILexicalBlock(scope: !18660, file: !2011, line: 829, column: 13)
!18701 = !DILocation(line: 829, column: 50, scope: !18700)
!18702 = !DILocation(line: 829, column: 13, scope: !18660)
!18703 = !DILocation(line: 830, column: 21, scope: !18704)
!18704 = distinct !DILexicalBlock(scope: !18700, file: !2011, line: 829, column: 57)
!18705 = !DILocation(line: 830, column: 13, scope: !18704)
!18706 = !DILocation(line: 832, column: 13, scope: !18707)
!18707 = distinct !DILexicalBlock(scope: !18704, file: !2011, line: 832, column: 13)
!18708 = !DILocation(line: 835, column: 9, scope: !18704)
!18709 = !DILocation(line: 837, column: 13, scope: !18710)
!18710 = distinct !DILexicalBlock(scope: !18660, file: !2011, line: 837, column: 13)
!18711 = !DILocation(line: 837, column: 49, scope: !18710)
!18712 = !DILocation(line: 837, column: 13, scope: !18660)
!18713 = !DILocation(line: 838, column: 21, scope: !18714)
!18714 = distinct !DILexicalBlock(scope: !18710, file: !2011, line: 837, column: 56)
!18715 = !DILocation(line: 838, column: 13, scope: !18714)
!18716 = !DILocation(line: 840, column: 13, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18714, file: !2011, line: 840, column: 13)
!18718 = !DILocation(line: 843, column: 9, scope: !18714)
!18719 = !DILocation(line: 845, column: 9, scope: !18720)
!18720 = distinct !DILexicalBlock(scope: !18660, file: !2011, line: 845, column: 9)
!18721 = !DILocation(line: 851, column: 5, scope: !18722)
!18722 = distinct !DILexicalBlock(scope: !2017, file: !2011, line: 851, column: 5)
!18723 = !DILocation(line: 852, column: 5, scope: !2017)
!18724 = !DILocation(line: 853, column: 1, scope: !2017)
!18725 = distinct !DISubprogram(name: "type_cb", scope: !2011, file: !2011, line: 879, type: !18726, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !18728)
!18726 = !DISubroutineType(types: !18727)
!18727 = !{!1209, !2025}
!18728 = !{!18729, !18730}
!18729 = !DILocalVariable(name: "node", arg: 1, scope: !18725, file: !2011, line: 879, type: !2025)
!18730 = !DILocalVariable(name: "type", scope: !18725, file: !2011, line: 881, type: !331)
!18731 = !DILocation(line: 0, scope: !18725)
!18732 = !DILocation(line: 888, column: 17, scope: !18733)
!18733 = distinct !DILexicalBlock(scope: !18725, file: !2011, line: 888, column: 9)
!18734 = !DILocation(line: 888, column: 51, scope: !18733)
!18735 = !DILocation(line: 888, column: 9, scope: !18725)
!18736 = !DILocation(line: 889, column: 22, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18733, file: !2011, line: 888, column: 60)
!18738 = !DILocation(line: 889, column: 36, scope: !18737)
!18739 = !DILocation(line: 890, column: 5, scope: !18737)
!18740 = !DILocation(line: 0, scope: !18733)
!18741 = !DILocation(line: 892, column: 5, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18725, file: !2011, line: 892, column: 5)
!18743 = !DILocation(line: 894, column: 10, scope: !18744)
!18744 = distinct !DILexicalBlock(scope: !18725, file: !2011, line: 894, column: 9)
!18745 = !DILocation(line: 894, column: 9, scope: !18725)
!18746 = !DILocation(line: 896, column: 17, scope: !18747)
!18747 = distinct !DILexicalBlock(scope: !18744, file: !2011, line: 896, column: 16)
!18748 = !DILocation(line: 896, column: 40, scope: !18747)
!18749 = !DILocation(line: 896, column: 44, scope: !18747)
!18750 = !DILocation(line: 896, column: 16, scope: !18744)
!18751 = !DILocation(line: 898, column: 17, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18747, file: !2011, line: 898, column: 16)
!18753 = !DILocation(line: 0, scope: !18752)
!18754 = !DILocation(line: 0, scope: !18744)
!18755 = !DILocation(line: 903, column: 1, scope: !18725)
!18756 = distinct !DISubprogram(name: "sax_cb", scope: !2011, file: !2011, line: 861, type: !18757, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !18759)
!18757 = !DISubroutineType(types: !18758)
!18758 = !{null, !2025, !1265, !51}
!18759 = !{!18760, !18761, !18762}
!18760 = !DILocalVariable(name: "node", arg: 1, scope: !18756, file: !2011, line: 861, type: !2025)
!18761 = !DILocalVariable(name: "event", arg: 2, scope: !18756, file: !2011, line: 862, type: !1265)
!18762 = !DILocalVariable(name: "data", arg: 3, scope: !18756, file: !2011, line: 863, type: !51)
!18763 = !DILocation(line: 0, scope: !18756)
!18764 = !DILocation(line: 869, column: 5, scope: !18756)
!18765 = !DILocation(line: 869, column: 25, scope: !18756)
!18766 = !DILocation(line: 870, column: 5, scope: !18767)
!18767 = distinct !DILexicalBlock(scope: !18756, file: !2011, line: 870, column: 5)
!18768 = !DILocation(line: 871, column: 1, scope: !18756)
!18769 = distinct !DISubprogram(name: "xml_test", scope: !2011, file: !2011, line: 995, type: !2959, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !18770)
!18770 = !{!18771, !18772}
!18771 = !DILocalVariable(name: "test_data", scope: !18769, file: !2011, line: 997, type: !13389)
!18772 = !DILocalVariable(name: "ret", scope: !18769, file: !2011, line: 1000, type: !7)
!18773 = !DILocation(line: 997, column: 5, scope: !18769)
!18774 = !DILocation(line: 997, column: 11, scope: !18769)
!18775 = !DILocation(line: 998, column: 5, scope: !18769)
!18776 = !DILocation(line: 998, column: 18, scope: !18769)
!18777 = !DILocation(line: 999, column: 5, scope: !18769)
!18778 = !DILocation(line: 999, column: 18, scope: !18769)
!18779 = !DILocation(line: 0, scope: !18769)
!18780 = !DILocation(line: 1002, column: 5, scope: !18781)
!18781 = distinct !DILexicalBlock(scope: !18769, file: !2011, line: 1002, column: 5)
!18782 = !DILocation(line: 1003, column: 11, scope: !18769)
!18783 = !DILocation(line: 1005, column: 1, scope: !18769)
!18784 = !DILocation(line: 1004, column: 5, scope: !18769)
